; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G__0x4ba450_type = type <{ [8 x i8] }>
%G__0x6cfc70_type = type <{ [8 x i8] }>
%G__0x6d0bc0_type = type <{ [8 x i8] }>
%G__0x6d12c0_type = type <{ [8 x i8] }>
%G__0x70f6e0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G__0x4ba450 = global %G__0x4ba450_type zeroinitializer
@G__0x6cfc70 = global %G__0x6cfc70_type zeroinitializer
@G__0x6d0bc0 = global %G__0x6d0bc0_type zeroinitializer
@G__0x6d12c0 = global %G__0x6d12c0_type zeroinitializer
@G__0x70f6e0 = global %G__0x70f6e0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_475150.sign(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @dct_luma8x8(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_4aa740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_4aa740, %struct.Memory** %MEMORY
  %loadMem_4aa741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i2495 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i2496 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i2497 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i2496
  %27 = load i64, i64* %PC.i2495
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i2495
  store i64 %26, i64* %RBP.i2497, align 8
  store %struct.Memory* %loadMem_4aa741, %struct.Memory** %MEMORY
  %loadMem_4aa744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i2579 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i2580 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i2580
  %36 = load i64, i64* %PC.i2579
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i2579
  %38 = sub i64 %35, 752
  store i64 %38, i64* %RSP.i2580, align 8
  %39 = icmp ult i64 %35, 752
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 752, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_4aa744, %struct.Memory** %MEMORY
  %loadMem_4aa74b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i2608 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EAX.i2609 = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 1
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RAX.i2610 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RAX.i2610
  %77 = load i32, i32* %EAX.i2609
  %78 = zext i32 %77 to i64
  %79 = load i64, i64* %PC.i2608
  %80 = add i64 %79, 2
  store i64 %80, i64* %PC.i2608
  %81 = xor i64 %78, %76
  %82 = trunc i64 %81 to i32
  %83 = and i64 %81, 4294967295
  store i64 %83, i64* %RAX.i2610, align 8
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %84, align 1
  %85 = and i32 %82, 255
  %86 = call i32 @llvm.ctpop.i32(i32 %85)
  %87 = trunc i32 %86 to i8
  %88 = and i8 %87, 1
  %89 = xor i8 %88, 1
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %89, i8* %90, align 1
  %91 = icmp eq i32 %82, 0
  %92 = zext i1 %91 to i8
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %92, i8* %93, align 1
  %94 = lshr i32 %82, 31
  %95 = trunc i32 %94 to i8
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %95, i8* %96, align 1
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %98, align 1
  store %struct.Memory* %loadMem_4aa74b, %struct.Memory** %MEMORY
  %loadMem_4aa74d = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i3805 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 1
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %105 = bitcast %union.anon* %104 to %struct.anon.2*
  %AL.i3806 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %105, i32 0, i32 0
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 5
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %109 = bitcast %union.anon* %108 to %struct.anon.2*
  %CL.i3807 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %109, i32 0, i32 0
  %110 = load i8, i8* %AL.i3806
  %111 = zext i8 %110 to i64
  %112 = load i64, i64* %PC.i3805
  %113 = add i64 %112, 2
  store i64 %113, i64* %PC.i3805
  store i8 %110, i8* %CL.i3807, align 1
  store %struct.Memory* %loadMem_4aa74d, %struct.Memory** %MEMORY
  %loadMem_4aa74f = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i3844 = bitcast %union.anon* %116 to i64*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 1
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %RAX.i3845 = bitcast %union.anon* %119 to i64*
  %120 = load i64, i64* %PC.i3844
  %121 = add i64 %120, 5
  store i64 %121, i64* %PC.i3844
  store i64 2, i64* %RAX.i3845, align 8
  store %struct.Memory* %loadMem_4aa74f, %struct.Memory** %MEMORY
  %loadMem_4aa754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %123 = getelementptr inbounds %struct.GPR, %struct.GPR* %122, i32 0, i32 33
  %124 = getelementptr inbounds %struct.Reg, %struct.Reg* %123, i32 0, i32 0
  %PC.i3927 = bitcast %union.anon* %124 to i64*
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %126 = getelementptr inbounds %struct.GPR, %struct.GPR* %125, i32 0, i32 11
  %127 = getelementptr inbounds %struct.Reg, %struct.Reg* %126, i32 0, i32 0
  %EDI.i3928 = bitcast %union.anon* %127 to i32*
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %129 = getelementptr inbounds %struct.GPR, %struct.GPR* %128, i32 0, i32 15
  %130 = getelementptr inbounds %struct.Reg, %struct.Reg* %129, i32 0, i32 0
  %RBP.i3929 = bitcast %union.anon* %130 to i64*
  %131 = load i64, i64* %RBP.i3929
  %132 = sub i64 %131, 4
  %133 = load i32, i32* %EDI.i3928
  %134 = zext i32 %133 to i64
  %135 = load i64, i64* %PC.i3927
  %136 = add i64 %135, 3
  store i64 %136, i64* %PC.i3927
  %137 = inttoptr i64 %132 to i32*
  store i32 %133, i32* %137
  store %struct.Memory* %loadMem_4aa754, %struct.Memory** %MEMORY
  %loadMem_4aa757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 33
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %PC.i3949 = bitcast %union.anon* %140 to i64*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 9
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %RSI.i3950 = bitcast %union.anon* %143 to i64*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 15
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %RBP.i3951 = bitcast %union.anon* %146 to i64*
  %147 = load i64, i64* %RBP.i3951
  %148 = sub i64 %147, 16
  %149 = load i64, i64* %RSI.i3950
  %150 = load i64, i64* %PC.i3949
  %151 = add i64 %150, 4
  store i64 %151, i64* %PC.i3949
  %152 = inttoptr i64 %148 to i64*
  store i64 %149, i64* %152
  store %struct.Memory* %loadMem_4aa757, %struct.Memory** %MEMORY
  %loadMem_4aa75b = load %struct.Memory*, %struct.Memory** %MEMORY
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 33
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %PC.i4063 = bitcast %union.anon* %155 to i64*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 7
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %EDX.i4064 = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %RBP.i4065 = bitcast %union.anon* %161 to i64*
  %162 = load i64, i64* %RBP.i4065
  %163 = sub i64 %162, 20
  %164 = load i32, i32* %EDX.i4064
  %165 = zext i32 %164 to i64
  %166 = load i64, i64* %PC.i4063
  %167 = add i64 %166, 3
  store i64 %167, i64* %PC.i4063
  %168 = inttoptr i64 %163 to i32*
  store i32 %164, i32* %168
  store %struct.Memory* %loadMem_4aa75b, %struct.Memory** %MEMORY
  %loadMem_4aa75e = load %struct.Memory*, %struct.Memory** %MEMORY
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 33
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %PC.i4081 = bitcast %union.anon* %171 to i64*
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 15
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %RBP.i4082 = bitcast %union.anon* %174 to i64*
  %175 = load i64, i64* %RBP.i4082
  %176 = sub i64 %175, 72
  %177 = load i64, i64* %PC.i4081
  %178 = add i64 %177, 7
  store i64 %178, i64* %PC.i4081
  %179 = inttoptr i64 %176 to i32*
  store i32 0, i32* %179
  store %struct.Memory* %loadMem_4aa75e, %struct.Memory** %MEMORY
  %loadMem_4aa765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 33
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %PC.i4098 = bitcast %union.anon* %182 to i64*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 15
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %RBP.i4099 = bitcast %union.anon* %185 to i64*
  %186 = load i64, i64* %RBP.i4099
  %187 = sub i64 %186, 76
  %188 = load i64, i64* %PC.i4098
  %189 = add i64 %188, 7
  store i64 %189, i64* %PC.i4098
  %190 = inttoptr i64 %187 to i32*
  store i32 0, i32* %190
  store %struct.Memory* %loadMem_4aa765, %struct.Memory** %MEMORY
  %loadMem_4aa76c = load %struct.Memory*, %struct.Memory** %MEMORY
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 33
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %PC.i4096 = bitcast %union.anon* %193 to i64*
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %195 = getelementptr inbounds %struct.GPR, %struct.GPR* %194, i32 0, i32 15
  %196 = getelementptr inbounds %struct.Reg, %struct.Reg* %195, i32 0, i32 0
  %RBP.i4097 = bitcast %union.anon* %196 to i64*
  %197 = load i64, i64* %RBP.i4097
  %198 = sub i64 %197, 80
  %199 = load i64, i64* %PC.i4096
  %200 = add i64 %199, 7
  store i64 %200, i64* %PC.i4096
  %201 = inttoptr i64 %198 to i32*
  store i32 0, i32* %201
  store %struct.Memory* %loadMem_4aa76c, %struct.Memory** %MEMORY
  %loadMem_4aa773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %203 = getelementptr inbounds %struct.GPR, %struct.GPR* %202, i32 0, i32 33
  %204 = getelementptr inbounds %struct.Reg, %struct.Reg* %203, i32 0, i32 0
  %PC.i4093 = bitcast %union.anon* %204 to i64*
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %206 = getelementptr inbounds %struct.GPR, %struct.GPR* %205, i32 0, i32 7
  %207 = getelementptr inbounds %struct.Reg, %struct.Reg* %206, i32 0, i32 0
  %RDX.i4094 = bitcast %union.anon* %207 to i64*
  %208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %209 = getelementptr inbounds %struct.GPR, %struct.GPR* %208, i32 0, i32 15
  %210 = getelementptr inbounds %struct.Reg, %struct.Reg* %209, i32 0, i32 0
  %RBP.i4095 = bitcast %union.anon* %210 to i64*
  %211 = load i64, i64* %RBP.i4095
  %212 = sub i64 %211, 4
  %213 = load i64, i64* %PC.i4093
  %214 = add i64 %213, 3
  store i64 %214, i64* %PC.i4093
  %215 = inttoptr i64 %212 to i32*
  %216 = load i32, i32* %215
  %217 = zext i32 %216 to i64
  store i64 %217, i64* %RDX.i4094, align 8
  store %struct.Memory* %loadMem_4aa773, %struct.Memory** %MEMORY
  %loadMem_4aa776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 33
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %PC.i4090 = bitcast %union.anon* %220 to i64*
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 1
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %EAX.i4091 = bitcast %union.anon* %223 to i32*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 15
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %RBP.i4092 = bitcast %union.anon* %226 to i64*
  %227 = load i64, i64* %RBP.i4092
  %228 = sub i64 %227, 676
  %229 = load i32, i32* %EAX.i4091
  %230 = zext i32 %229 to i64
  %231 = load i64, i64* %PC.i4090
  %232 = add i64 %231, 6
  store i64 %232, i64* %PC.i4090
  %233 = inttoptr i64 %228 to i32*
  store i32 %229, i32* %233
  store %struct.Memory* %loadMem_4aa776, %struct.Memory** %MEMORY
  %loadMem_4aa77c = load %struct.Memory*, %struct.Memory** %MEMORY
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 33
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %PC.i4087 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 7
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %EDX.i4088 = bitcast %union.anon* %239 to i32*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %241 = getelementptr inbounds %struct.GPR, %struct.GPR* %240, i32 0, i32 1
  %242 = getelementptr inbounds %struct.Reg, %struct.Reg* %241, i32 0, i32 0
  %RAX.i4089 = bitcast %union.anon* %242 to i64*
  %243 = load i32, i32* %EDX.i4088
  %244 = zext i32 %243 to i64
  %245 = load i64, i64* %PC.i4087
  %246 = add i64 %245, 2
  store i64 %246, i64* %PC.i4087
  %247 = and i64 %244, 4294967295
  store i64 %247, i64* %RAX.i4089, align 8
  store %struct.Memory* %loadMem_4aa77c, %struct.Memory** %MEMORY
  %loadMem_4aa77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 33
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %PC.i4086 = bitcast %union.anon* %250 to i64*
  %251 = load i64, i64* %PC.i4086
  %252 = add i64 %251, 1
  store i64 %252, i64* %PC.i4086
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %255 = bitcast %union.anon* %254 to i32*
  %256 = load i32, i32* %255, align 8
  %257 = sext i32 %256 to i64
  %258 = lshr i64 %257, 32
  store i64 %258, i64* %253, align 8
  store %struct.Memory* %loadMem_4aa77e, %struct.Memory** %MEMORY
  %loadMem_4aa77f = load %struct.Memory*, %struct.Memory** %MEMORY
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 33
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %PC.i4083 = bitcast %union.anon* %261 to i64*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 11
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %RDI.i4084 = bitcast %union.anon* %264 to i64*
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 15
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %RBP.i4085 = bitcast %union.anon* %267 to i64*
  %268 = load i64, i64* %RBP.i4085
  %269 = sub i64 %268, 676
  %270 = load i64, i64* %PC.i4083
  %271 = add i64 %270, 6
  store i64 %271, i64* %PC.i4083
  %272 = inttoptr i64 %269 to i32*
  %273 = load i32, i32* %272
  %274 = zext i32 %273 to i64
  store i64 %274, i64* %RDI.i4084, align 8
  store %struct.Memory* %loadMem_4aa77f, %struct.Memory** %MEMORY
  %loadMem_4aa785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i4078 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 11
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %EDI.i4079 = bitcast %union.anon* %280 to i32*
  %281 = load i32, i32* %EDI.i4079
  %282 = zext i32 %281 to i64
  %283 = load i64, i64* %PC.i4078
  %284 = add i64 %283, 2
  store i64 %284, i64* %PC.i4078
  %285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %286 = bitcast %union.anon* %285 to i32*
  %287 = load i32, i32* %286, align 8
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %290 = bitcast %union.anon* %289 to i32*
  %291 = load i32, i32* %290, align 8
  %292 = zext i32 %291 to i64
  %293 = shl i64 %282, 32
  %294 = ashr exact i64 %293, 32
  %295 = shl i64 %292, 32
  %296 = or i64 %295, %288
  %297 = sdiv i64 %296, %294
  %298 = shl i64 %297, 32
  %299 = ashr exact i64 %298, 32
  %300 = icmp eq i64 %297, %299
  br i1 %300, label %305, label %301

; <label>:301:                                    ; preds = %entry
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %303 = load i64, i64* %302, align 8
  %304 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %303, %struct.Memory* %loadMem_4aa785)
  br label %routine_idivl__edi.exit4080

; <label>:305:                                    ; preds = %entry
  %306 = srem i64 %296, %294
  %307 = getelementptr inbounds %union.anon, %union.anon* %285, i64 0, i32 0
  %308 = and i64 %297, 4294967295
  store i64 %308, i64* %307, align 8
  %309 = getelementptr inbounds %union.anon, %union.anon* %289, i64 0, i32 0
  %310 = and i64 %306, 4294967295
  store i64 %310, i64* %309, align 8
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %311, align 1
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %312, align 1
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %313, align 1
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %314, align 1
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %315, align 1
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %316, align 1
  br label %routine_idivl__edi.exit4080

routine_idivl__edi.exit4080:                      ; preds = %301, %305
  %317 = phi %struct.Memory* [ %304, %301 ], [ %loadMem_4aa785, %305 ]
  store %struct.Memory* %317, %struct.Memory** %MEMORY
  %loadMem_4aa787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 33
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %PC.i4076 = bitcast %union.anon* %320 to i64*
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %322 = getelementptr inbounds %struct.GPR, %struct.GPR* %321, i32 0, i32 7
  %323 = getelementptr inbounds %struct.Reg, %struct.Reg* %322, i32 0, i32 0
  %RDX.i4077 = bitcast %union.anon* %323 to i64*
  %324 = load i64, i64* %RDX.i4077
  %325 = load i64, i64* %PC.i4076
  %326 = add i64 %325, 3
  store i64 %326, i64* %PC.i4076
  %327 = and i64 %324, 4294967295
  %328 = shl i64 %327, 2
  %329 = trunc i64 %328 to i32
  %330 = icmp slt i32 %329, 0
  %331 = shl i32 %329, 1
  %332 = zext i32 %331 to i64
  store i64 %332, i64* %RDX.i4077, align 8
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %334 = zext i1 %330 to i8
  store i8 %334, i8* %333, align 1
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %336 = and i32 %331, 254
  %337 = call i32 @llvm.ctpop.i32(i32 %336)
  %338 = trunc i32 %337 to i8
  %339 = and i8 %338, 1
  %340 = xor i8 %339, 1
  store i8 %340, i8* %335, align 1
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %341, align 1
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %343 = icmp eq i32 %331, 0
  %344 = zext i1 %343 to i8
  store i8 %344, i8* %342, align 1
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %346 = lshr i32 %331, 31
  %347 = trunc i32 %346 to i8
  store i8 %347, i8* %345, align 1
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %348, align 1
  store %struct.Memory* %loadMem_4aa787, %struct.Memory** %MEMORY
  %loadMem_4aa78a = load %struct.Memory*, %struct.Memory** %MEMORY
  %349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %350 = getelementptr inbounds %struct.GPR, %struct.GPR* %349, i32 0, i32 33
  %351 = getelementptr inbounds %struct.Reg, %struct.Reg* %350, i32 0, i32 0
  %PC.i4073 = bitcast %union.anon* %351 to i64*
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %353 = getelementptr inbounds %struct.GPR, %struct.GPR* %352, i32 0, i32 7
  %354 = getelementptr inbounds %struct.Reg, %struct.Reg* %353, i32 0, i32 0
  %EDX.i4074 = bitcast %union.anon* %354 to i32*
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %356 = getelementptr inbounds %struct.GPR, %struct.GPR* %355, i32 0, i32 15
  %357 = getelementptr inbounds %struct.Reg, %struct.Reg* %356, i32 0, i32 0
  %RBP.i4075 = bitcast %union.anon* %357 to i64*
  %358 = load i64, i64* %RBP.i4075
  %359 = sub i64 %358, 84
  %360 = load i32, i32* %EDX.i4074
  %361 = zext i32 %360 to i64
  %362 = load i64, i64* %PC.i4073
  %363 = add i64 %362, 3
  store i64 %363, i64* %PC.i4073
  %364 = inttoptr i64 %359 to i32*
  store i32 %360, i32* %364
  store %struct.Memory* %loadMem_4aa78a, %struct.Memory** %MEMORY
  %loadMem_4aa78d = load %struct.Memory*, %struct.Memory** %MEMORY
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %366 = getelementptr inbounds %struct.GPR, %struct.GPR* %365, i32 0, i32 33
  %367 = getelementptr inbounds %struct.Reg, %struct.Reg* %366, i32 0, i32 0
  %PC.i4070 = bitcast %union.anon* %367 to i64*
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 7
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %RDX.i4071 = bitcast %union.anon* %370 to i64*
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 15
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %RBP.i4072 = bitcast %union.anon* %373 to i64*
  %374 = load i64, i64* %RBP.i4072
  %375 = sub i64 %374, 4
  %376 = load i64, i64* %PC.i4070
  %377 = add i64 %376, 3
  store i64 %377, i64* %PC.i4070
  %378 = inttoptr i64 %375 to i32*
  %379 = load i32, i32* %378
  %380 = zext i32 %379 to i64
  store i64 %380, i64* %RDX.i4071, align 8
  store %struct.Memory* %loadMem_4aa78d, %struct.Memory** %MEMORY
  %loadMem_4aa790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %382 = getelementptr inbounds %struct.GPR, %struct.GPR* %381, i32 0, i32 33
  %383 = getelementptr inbounds %struct.Reg, %struct.Reg* %382, i32 0, i32 0
  %PC.i4067 = bitcast %union.anon* %383 to i64*
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %385 = getelementptr inbounds %struct.GPR, %struct.GPR* %384, i32 0, i32 7
  %386 = getelementptr inbounds %struct.Reg, %struct.Reg* %385, i32 0, i32 0
  %EDX.i4068 = bitcast %union.anon* %386 to i32*
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %388 = getelementptr inbounds %struct.GPR, %struct.GPR* %387, i32 0, i32 1
  %389 = getelementptr inbounds %struct.Reg, %struct.Reg* %388, i32 0, i32 0
  %RAX.i4069 = bitcast %union.anon* %389 to i64*
  %390 = load i32, i32* %EDX.i4068
  %391 = zext i32 %390 to i64
  %392 = load i64, i64* %PC.i4067
  %393 = add i64 %392, 2
  store i64 %393, i64* %PC.i4067
  %394 = and i64 %391, 4294967295
  store i64 %394, i64* %RAX.i4069, align 8
  store %struct.Memory* %loadMem_4aa790, %struct.Memory** %MEMORY
  %loadMem_4aa792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %396 = getelementptr inbounds %struct.GPR, %struct.GPR* %395, i32 0, i32 33
  %397 = getelementptr inbounds %struct.Reg, %struct.Reg* %396, i32 0, i32 0
  %PC.i4066 = bitcast %union.anon* %397 to i64*
  %398 = load i64, i64* %PC.i4066
  %399 = add i64 %398, 1
  store i64 %399, i64* %PC.i4066
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %402 = bitcast %union.anon* %401 to i32*
  %403 = load i32, i32* %402, align 8
  %404 = sext i32 %403 to i64
  %405 = lshr i64 %404, 32
  store i64 %405, i64* %400, align 8
  store %struct.Memory* %loadMem_4aa792, %struct.Memory** %MEMORY
  %loadMem_4aa793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %407 = getelementptr inbounds %struct.GPR, %struct.GPR* %406, i32 0, i32 33
  %408 = getelementptr inbounds %struct.Reg, %struct.Reg* %407, i32 0, i32 0
  %PC.i4061 = bitcast %union.anon* %408 to i64*
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %410 = getelementptr inbounds %struct.GPR, %struct.GPR* %409, i32 0, i32 11
  %411 = getelementptr inbounds %struct.Reg, %struct.Reg* %410, i32 0, i32 0
  %EDI.i4062 = bitcast %union.anon* %411 to i32*
  %412 = load i32, i32* %EDI.i4062
  %413 = zext i32 %412 to i64
  %414 = load i64, i64* %PC.i4061
  %415 = add i64 %414, 2
  store i64 %415, i64* %PC.i4061
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %417 = bitcast %union.anon* %416 to i32*
  %418 = load i32, i32* %417, align 8
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %421 = bitcast %union.anon* %420 to i32*
  %422 = load i32, i32* %421, align 8
  %423 = zext i32 %422 to i64
  %424 = shl i64 %413, 32
  %425 = ashr exact i64 %424, 32
  %426 = shl i64 %423, 32
  %427 = or i64 %426, %419
  %428 = sdiv i64 %427, %425
  %429 = shl i64 %428, 32
  %430 = ashr exact i64 %429, 32
  %431 = icmp eq i64 %428, %430
  br i1 %431, label %436, label %432

; <label>:432:                                    ; preds = %routine_idivl__edi.exit4080
  %433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %434 = load i64, i64* %433, align 8
  %435 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %434, %struct.Memory* %loadMem_4aa793)
  br label %routine_idivl__edi.exit

; <label>:436:                                    ; preds = %routine_idivl__edi.exit4080
  %437 = srem i64 %427, %425
  %438 = getelementptr inbounds %union.anon, %union.anon* %416, i64 0, i32 0
  %439 = and i64 %428, 4294967295
  store i64 %439, i64* %438, align 8
  %440 = getelementptr inbounds %union.anon, %union.anon* %420, i64 0, i32 0
  %441 = and i64 %437, 4294967295
  store i64 %441, i64* %440, align 8
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %442, align 1
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %443, align 1
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %444, align 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %445, align 1
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %446, align 1
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %447, align 1
  br label %routine_idivl__edi.exit

routine_idivl__edi.exit:                          ; preds = %432, %436
  %448 = phi %struct.Memory* [ %435, %432 ], [ %loadMem_4aa793, %436 ]
  store %struct.Memory* %448, %struct.Memory** %MEMORY
  %loadMem_4aa795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %450 = getelementptr inbounds %struct.GPR, %struct.GPR* %449, i32 0, i32 33
  %451 = getelementptr inbounds %struct.Reg, %struct.Reg* %450, i32 0, i32 0
  %PC.i4059 = bitcast %union.anon* %451 to i64*
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %453 = getelementptr inbounds %struct.GPR, %struct.GPR* %452, i32 0, i32 1
  %454 = getelementptr inbounds %struct.Reg, %struct.Reg* %453, i32 0, i32 0
  %RAX.i4060 = bitcast %union.anon* %454 to i64*
  %455 = load i64, i64* %RAX.i4060
  %456 = load i64, i64* %PC.i4059
  %457 = add i64 %456, 3
  store i64 %457, i64* %PC.i4059
  %458 = and i64 %455, 4294967295
  %459 = shl i64 %458, 2
  %460 = trunc i64 %459 to i32
  %461 = icmp slt i32 %460, 0
  %462 = shl i32 %460, 1
  %463 = zext i32 %462 to i64
  store i64 %463, i64* %RAX.i4060, align 8
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %465 = zext i1 %461 to i8
  store i8 %465, i8* %464, align 1
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %467 = and i32 %462, 254
  %468 = call i32 @llvm.ctpop.i32(i32 %467)
  %469 = trunc i32 %468 to i8
  %470 = and i8 %469, 1
  %471 = xor i8 %470, 1
  store i8 %471, i8* %466, align 1
  %472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %472, align 1
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %474 = icmp eq i32 %462, 0
  %475 = zext i1 %474 to i8
  store i8 %475, i8* %473, align 1
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %477 = lshr i32 %462, 31
  %478 = trunc i32 %477 to i8
  store i8 %478, i8* %476, align 1
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %479, align 1
  store %struct.Memory* %loadMem_4aa795, %struct.Memory** %MEMORY
  %loadMem_4aa798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %481 = getelementptr inbounds %struct.GPR, %struct.GPR* %480, i32 0, i32 33
  %482 = getelementptr inbounds %struct.Reg, %struct.Reg* %481, i32 0, i32 0
  %PC.i4056 = bitcast %union.anon* %482 to i64*
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 1
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %EAX.i4057 = bitcast %union.anon* %485 to i32*
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %487 = getelementptr inbounds %struct.GPR, %struct.GPR* %486, i32 0, i32 15
  %488 = getelementptr inbounds %struct.Reg, %struct.Reg* %487, i32 0, i32 0
  %RBP.i4058 = bitcast %union.anon* %488 to i64*
  %489 = load i64, i64* %RBP.i4058
  %490 = sub i64 %489, 88
  %491 = load i32, i32* %EAX.i4057
  %492 = zext i32 %491 to i64
  %493 = load i64, i64* %PC.i4056
  %494 = add i64 %493, 3
  store i64 %494, i64* %PC.i4056
  %495 = inttoptr i64 %490 to i32*
  store i32 %491, i32* %495
  store %struct.Memory* %loadMem_4aa798, %struct.Memory** %MEMORY
  %loadMem_4aa79b = load %struct.Memory*, %struct.Memory** %MEMORY
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 33
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %PC.i4054 = bitcast %union.anon* %498 to i64*
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 9
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %RSI.i4055 = bitcast %union.anon* %501 to i64*
  %502 = load i64, i64* %PC.i4054
  %503 = add i64 %502, 8
  store i64 %503, i64* %PC.i4054
  %504 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %504, i64* %RSI.i4055, align 8
  store %struct.Memory* %loadMem_4aa79b, %struct.Memory** %MEMORY
  %loadMem_4aa7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %506 = getelementptr inbounds %struct.GPR, %struct.GPR* %505, i32 0, i32 33
  %507 = getelementptr inbounds %struct.Reg, %struct.Reg* %506, i32 0, i32 0
  %PC.i4052 = bitcast %union.anon* %507 to i64*
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %509 = getelementptr inbounds %struct.GPR, %struct.GPR* %508, i32 0, i32 9
  %510 = getelementptr inbounds %struct.Reg, %struct.Reg* %509, i32 0, i32 0
  %RSI.i4053 = bitcast %union.anon* %510 to i64*
  %511 = load i64, i64* %RSI.i4053
  %512 = add i64 %511, 14136
  %513 = load i64, i64* %PC.i4052
  %514 = add i64 %513, 7
  store i64 %514, i64* %PC.i4052
  %515 = inttoptr i64 %512 to i64*
  %516 = load i64, i64* %515
  store i64 %516, i64* %RSI.i4053, align 8
  store %struct.Memory* %loadMem_4aa7a3, %struct.Memory** %MEMORY
  %loadMem_4aa7aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %518 = getelementptr inbounds %struct.GPR, %struct.GPR* %517, i32 0, i32 33
  %519 = getelementptr inbounds %struct.Reg, %struct.Reg* %518, i32 0, i32 0
  %PC.i4049 = bitcast %union.anon* %519 to i64*
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %521 = getelementptr inbounds %struct.GPR, %struct.GPR* %520, i32 0, i32 15
  %522 = getelementptr inbounds %struct.Reg, %struct.Reg* %521, i32 0, i32 0
  %RBP.i4050 = bitcast %union.anon* %522 to i64*
  %523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %524 = getelementptr inbounds %struct.GPR, %struct.GPR* %523, i32 0, i32 17
  %525 = getelementptr inbounds %struct.Reg, %struct.Reg* %524, i32 0, i32 0
  %R8.i4051 = bitcast %union.anon* %525 to i64*
  %526 = load i64, i64* %RBP.i4050
  %527 = sub i64 %526, 4
  %528 = load i64, i64* %PC.i4049
  %529 = add i64 %528, 4
  store i64 %529, i64* %PC.i4049
  %530 = inttoptr i64 %527 to i32*
  %531 = load i32, i32* %530
  %532 = sext i32 %531 to i64
  store i64 %532, i64* %R8.i4051, align 8
  store %struct.Memory* %loadMem_4aa7aa, %struct.Memory** %MEMORY
  %loadMem_4aa7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %534 = getelementptr inbounds %struct.GPR, %struct.GPR* %533, i32 0, i32 33
  %535 = getelementptr inbounds %struct.Reg, %struct.Reg* %534, i32 0, i32 0
  %PC.i4046 = bitcast %union.anon* %535 to i64*
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %537 = getelementptr inbounds %struct.GPR, %struct.GPR* %536, i32 0, i32 9
  %538 = getelementptr inbounds %struct.Reg, %struct.Reg* %537, i32 0, i32 0
  %RSI.i4047 = bitcast %union.anon* %538 to i64*
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 17
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %R8.i4048 = bitcast %union.anon* %541 to i64*
  %542 = load i64, i64* %RSI.i4047
  %543 = load i64, i64* %R8.i4048
  %544 = mul i64 %543, 8
  %545 = add i64 %544, %542
  %546 = load i64, i64* %PC.i4046
  %547 = add i64 %546, 4
  store i64 %547, i64* %PC.i4046
  %548 = inttoptr i64 %545 to i64*
  %549 = load i64, i64* %548
  store i64 %549, i64* %RSI.i4047, align 8
  store %struct.Memory* %loadMem_4aa7ae, %struct.Memory** %MEMORY
  %loadMem_4aa7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %551 = getelementptr inbounds %struct.GPR, %struct.GPR* %550, i32 0, i32 33
  %552 = getelementptr inbounds %struct.Reg, %struct.Reg* %551, i32 0, i32 0
  %PC.i4044 = bitcast %union.anon* %552 to i64*
  %553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %554 = getelementptr inbounds %struct.GPR, %struct.GPR* %553, i32 0, i32 9
  %555 = getelementptr inbounds %struct.Reg, %struct.Reg* %554, i32 0, i32 0
  %RSI.i4045 = bitcast %union.anon* %555 to i64*
  %556 = load i64, i64* %RSI.i4045
  %557 = load i64, i64* %PC.i4044
  %558 = add i64 %557, 3
  store i64 %558, i64* %PC.i4044
  %559 = inttoptr i64 %556 to i64*
  %560 = load i64, i64* %559
  store i64 %560, i64* %RSI.i4045, align 8
  store %struct.Memory* %loadMem_4aa7b2, %struct.Memory** %MEMORY
  %loadMem_4aa7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %562 = getelementptr inbounds %struct.GPR, %struct.GPR* %561, i32 0, i32 33
  %563 = getelementptr inbounds %struct.Reg, %struct.Reg* %562, i32 0, i32 0
  %PC.i4042 = bitcast %union.anon* %563 to i64*
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %565 = getelementptr inbounds %struct.GPR, %struct.GPR* %564, i32 0, i32 9
  %566 = getelementptr inbounds %struct.Reg, %struct.Reg* %565, i32 0, i32 0
  %RSI.i4043 = bitcast %union.anon* %566 to i64*
  %567 = load i64, i64* %RSI.i4043
  %568 = load i64, i64* %PC.i4042
  %569 = add i64 %568, 3
  store i64 %569, i64* %PC.i4042
  %570 = inttoptr i64 %567 to i64*
  %571 = load i64, i64* %570
  store i64 %571, i64* %RSI.i4043, align 8
  store %struct.Memory* %loadMem_4aa7b5, %struct.Memory** %MEMORY
  %loadMem_4aa7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 33
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %PC.i4039 = bitcast %union.anon* %574 to i64*
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %576 = getelementptr inbounds %struct.GPR, %struct.GPR* %575, i32 0, i32 9
  %577 = getelementptr inbounds %struct.Reg, %struct.Reg* %576, i32 0, i32 0
  %RSI.i4040 = bitcast %union.anon* %577 to i64*
  %578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %579 = getelementptr inbounds %struct.GPR, %struct.GPR* %578, i32 0, i32 15
  %580 = getelementptr inbounds %struct.Reg, %struct.Reg* %579, i32 0, i32 0
  %RBP.i4041 = bitcast %union.anon* %580 to i64*
  %581 = load i64, i64* %RBP.i4041
  %582 = sub i64 %581, 96
  %583 = load i64, i64* %RSI.i4040
  %584 = load i64, i64* %PC.i4039
  %585 = add i64 %584, 4
  store i64 %585, i64* %PC.i4039
  %586 = inttoptr i64 %582 to i64*
  store i64 %583, i64* %586
  store %struct.Memory* %loadMem_4aa7b8, %struct.Memory** %MEMORY
  %loadMem_4aa7bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %588 = getelementptr inbounds %struct.GPR, %struct.GPR* %587, i32 0, i32 33
  %589 = getelementptr inbounds %struct.Reg, %struct.Reg* %588, i32 0, i32 0
  %PC.i4037 = bitcast %union.anon* %589 to i64*
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %591 = getelementptr inbounds %struct.GPR, %struct.GPR* %590, i32 0, i32 9
  %592 = getelementptr inbounds %struct.Reg, %struct.Reg* %591, i32 0, i32 0
  %RSI.i4038 = bitcast %union.anon* %592 to i64*
  %593 = load i64, i64* %PC.i4037
  %594 = add i64 %593, 8
  store i64 %594, i64* %PC.i4037
  %595 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %595, i64* %RSI.i4038, align 8
  store %struct.Memory* %loadMem_4aa7bc, %struct.Memory** %MEMORY
  %loadMem_4aa7c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %597 = getelementptr inbounds %struct.GPR, %struct.GPR* %596, i32 0, i32 33
  %598 = getelementptr inbounds %struct.Reg, %struct.Reg* %597, i32 0, i32 0
  %PC.i4035 = bitcast %union.anon* %598 to i64*
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %600 = getelementptr inbounds %struct.GPR, %struct.GPR* %599, i32 0, i32 9
  %601 = getelementptr inbounds %struct.Reg, %struct.Reg* %600, i32 0, i32 0
  %RSI.i4036 = bitcast %union.anon* %601 to i64*
  %602 = load i64, i64* %RSI.i4036
  %603 = add i64 %602, 14136
  %604 = load i64, i64* %PC.i4035
  %605 = add i64 %604, 7
  store i64 %605, i64* %PC.i4035
  %606 = inttoptr i64 %603 to i64*
  %607 = load i64, i64* %606
  store i64 %607, i64* %RSI.i4036, align 8
  store %struct.Memory* %loadMem_4aa7c4, %struct.Memory** %MEMORY
  %loadMem_4aa7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %609 = getelementptr inbounds %struct.GPR, %struct.GPR* %608, i32 0, i32 33
  %610 = getelementptr inbounds %struct.Reg, %struct.Reg* %609, i32 0, i32 0
  %PC.i4032 = bitcast %union.anon* %610 to i64*
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %612 = getelementptr inbounds %struct.GPR, %struct.GPR* %611, i32 0, i32 15
  %613 = getelementptr inbounds %struct.Reg, %struct.Reg* %612, i32 0, i32 0
  %RBP.i4033 = bitcast %union.anon* %613 to i64*
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 17
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %R8.i4034 = bitcast %union.anon* %616 to i64*
  %617 = load i64, i64* %RBP.i4033
  %618 = sub i64 %617, 4
  %619 = load i64, i64* %PC.i4032
  %620 = add i64 %619, 4
  store i64 %620, i64* %PC.i4032
  %621 = inttoptr i64 %618 to i32*
  %622 = load i32, i32* %621
  %623 = sext i32 %622 to i64
  store i64 %623, i64* %R8.i4034, align 8
  store %struct.Memory* %loadMem_4aa7cb, %struct.Memory** %MEMORY
  %loadMem_4aa7cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %625 = getelementptr inbounds %struct.GPR, %struct.GPR* %624, i32 0, i32 33
  %626 = getelementptr inbounds %struct.Reg, %struct.Reg* %625, i32 0, i32 0
  %PC.i4029 = bitcast %union.anon* %626 to i64*
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %628 = getelementptr inbounds %struct.GPR, %struct.GPR* %627, i32 0, i32 9
  %629 = getelementptr inbounds %struct.Reg, %struct.Reg* %628, i32 0, i32 0
  %RSI.i4030 = bitcast %union.anon* %629 to i64*
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %631 = getelementptr inbounds %struct.GPR, %struct.GPR* %630, i32 0, i32 17
  %632 = getelementptr inbounds %struct.Reg, %struct.Reg* %631, i32 0, i32 0
  %R8.i4031 = bitcast %union.anon* %632 to i64*
  %633 = load i64, i64* %RSI.i4030
  %634 = load i64, i64* %R8.i4031
  %635 = mul i64 %634, 8
  %636 = add i64 %635, %633
  %637 = load i64, i64* %PC.i4029
  %638 = add i64 %637, 4
  store i64 %638, i64* %PC.i4029
  %639 = inttoptr i64 %636 to i64*
  %640 = load i64, i64* %639
  store i64 %640, i64* %RSI.i4030, align 8
  store %struct.Memory* %loadMem_4aa7cf, %struct.Memory** %MEMORY
  %loadMem_4aa7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %642 = getelementptr inbounds %struct.GPR, %struct.GPR* %641, i32 0, i32 33
  %643 = getelementptr inbounds %struct.Reg, %struct.Reg* %642, i32 0, i32 0
  %PC.i4027 = bitcast %union.anon* %643 to i64*
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 9
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %RSI.i4028 = bitcast %union.anon* %646 to i64*
  %647 = load i64, i64* %RSI.i4028
  %648 = load i64, i64* %PC.i4027
  %649 = add i64 %648, 3
  store i64 %649, i64* %PC.i4027
  %650 = inttoptr i64 %647 to i64*
  %651 = load i64, i64* %650
  store i64 %651, i64* %RSI.i4028, align 8
  store %struct.Memory* %loadMem_4aa7d3, %struct.Memory** %MEMORY
  %loadMem_4aa7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 33
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %PC.i4025 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 9
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %RSI.i4026 = bitcast %union.anon* %657 to i64*
  %658 = load i64, i64* %RSI.i4026
  %659 = add i64 %658, 8
  %660 = load i64, i64* %PC.i4025
  %661 = add i64 %660, 4
  store i64 %661, i64* %PC.i4025
  %662 = inttoptr i64 %659 to i64*
  %663 = load i64, i64* %662
  store i64 %663, i64* %RSI.i4026, align 8
  store %struct.Memory* %loadMem_4aa7d6, %struct.Memory** %MEMORY
  %loadMem_4aa7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 33
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %PC.i4022 = bitcast %union.anon* %666 to i64*
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %668 = getelementptr inbounds %struct.GPR, %struct.GPR* %667, i32 0, i32 9
  %669 = getelementptr inbounds %struct.Reg, %struct.Reg* %668, i32 0, i32 0
  %RSI.i4023 = bitcast %union.anon* %669 to i64*
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %671 = getelementptr inbounds %struct.GPR, %struct.GPR* %670, i32 0, i32 15
  %672 = getelementptr inbounds %struct.Reg, %struct.Reg* %671, i32 0, i32 0
  %RBP.i4024 = bitcast %union.anon* %672 to i64*
  %673 = load i64, i64* %RBP.i4024
  %674 = sub i64 %673, 104
  %675 = load i64, i64* %RSI.i4023
  %676 = load i64, i64* %PC.i4022
  %677 = add i64 %676, 4
  store i64 %677, i64* %PC.i4022
  %678 = inttoptr i64 %674 to i64*
  store i64 %675, i64* %678
  store %struct.Memory* %loadMem_4aa7da, %struct.Memory** %MEMORY
  %loadMem_4aa7de = load %struct.Memory*, %struct.Memory** %MEMORY
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 33
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %PC.i4020 = bitcast %union.anon* %681 to i64*
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 9
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %RSI.i4021 = bitcast %union.anon* %684 to i64*
  %685 = load i64, i64* %PC.i4020
  %686 = add i64 %685, 8
  store i64 %686, i64* %PC.i4020
  %687 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %687, i64* %RSI.i4021, align 8
  store %struct.Memory* %loadMem_4aa7de, %struct.Memory** %MEMORY
  %loadMem_4aa7e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 33
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %PC.i4018 = bitcast %union.anon* %690 to i64*
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 9
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %RSI.i4019 = bitcast %union.anon* %693 to i64*
  %694 = load i64, i64* %RSI.i4019
  %695 = add i64 %694, 14168
  %696 = load i64, i64* %PC.i4018
  %697 = add i64 %696, 7
  store i64 %697, i64* %PC.i4018
  %698 = inttoptr i64 %695 to i64*
  %699 = load i64, i64* %698
  store i64 %699, i64* %RSI.i4019, align 8
  store %struct.Memory* %loadMem_4aa7e6, %struct.Memory** %MEMORY
  %loadMem_4aa7ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 33
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %PC.i4016 = bitcast %union.anon* %702 to i64*
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 17
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %R8.i4017 = bitcast %union.anon* %705 to i64*
  %706 = load i64, i64* %PC.i4016
  %707 = add i64 %706, 8
  store i64 %707, i64* %PC.i4016
  %708 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %708, i64* %R8.i4017, align 8
  store %struct.Memory* %loadMem_4aa7ed, %struct.Memory** %MEMORY
  %loadMem_4aa7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %710 = getelementptr inbounds %struct.GPR, %struct.GPR* %709, i32 0, i32 33
  %711 = getelementptr inbounds %struct.Reg, %struct.Reg* %710, i32 0, i32 0
  %PC.i4014 = bitcast %union.anon* %711 to i64*
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %713 = getelementptr inbounds %struct.GPR, %struct.GPR* %712, i32 0, i32 17
  %714 = getelementptr inbounds %struct.Reg, %struct.Reg* %713, i32 0, i32 0
  %R8.i4015 = bitcast %union.anon* %714 to i64*
  %715 = load i64, i64* %R8.i4015
  %716 = add i64 %715, 12
  %717 = load i64, i64* %PC.i4014
  %718 = add i64 %717, 4
  store i64 %718, i64* %PC.i4014
  %719 = inttoptr i64 %716 to i32*
  %720 = load i32, i32* %719
  %721 = sext i32 %720 to i64
  store i64 %721, i64* %R8.i4015, align 8
  store %struct.Memory* %loadMem_4aa7f5, %struct.Memory** %MEMORY
  %loadMem_4aa7f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 33
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %PC.i4012 = bitcast %union.anon* %724 to i64*
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 17
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %R8.i4013 = bitcast %union.anon* %727 to i64*
  %728 = load i64, i64* %R8.i4013
  %729 = load i64, i64* %PC.i4012
  %730 = add i64 %729, 7
  store i64 %730, i64* %PC.i4012
  %731 = sext i64 %728 to i128
  %732 = and i128 %731, -18446744073709551616
  %733 = zext i64 %728 to i128
  %734 = or i128 %732, %733
  %735 = mul i128 632, %734
  %736 = trunc i128 %735 to i64
  store i64 %736, i64* %R8.i4013, align 8
  %737 = sext i64 %736 to i128
  %738 = icmp ne i128 %737, %735
  %739 = zext i1 %738 to i8
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %739, i8* %740, align 1
  %741 = trunc i128 %735 to i32
  %742 = and i32 %741, 255
  %743 = call i32 @llvm.ctpop.i32(i32 %742)
  %744 = trunc i32 %743 to i8
  %745 = and i8 %744, 1
  %746 = xor i8 %745, 1
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %746, i8* %747, align 1
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %748, align 1
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %749, align 1
  %750 = lshr i64 %736, 63
  %751 = trunc i64 %750 to i8
  %752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %751, i8* %752, align 1
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %739, i8* %753, align 1
  store %struct.Memory* %loadMem_4aa7f9, %struct.Memory** %MEMORY
  %loadMem_4aa800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %755 = getelementptr inbounds %struct.GPR, %struct.GPR* %754, i32 0, i32 33
  %756 = getelementptr inbounds %struct.Reg, %struct.Reg* %755, i32 0, i32 0
  %PC.i4009 = bitcast %union.anon* %756 to i64*
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %758 = getelementptr inbounds %struct.GPR, %struct.GPR* %757, i32 0, i32 9
  %759 = getelementptr inbounds %struct.Reg, %struct.Reg* %758, i32 0, i32 0
  %RSI.i4010 = bitcast %union.anon* %759 to i64*
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %761 = getelementptr inbounds %struct.GPR, %struct.GPR* %760, i32 0, i32 17
  %762 = getelementptr inbounds %struct.Reg, %struct.Reg* %761, i32 0, i32 0
  %R8.i4011 = bitcast %union.anon* %762 to i64*
  %763 = load i64, i64* %RSI.i4010
  %764 = load i64, i64* %R8.i4011
  %765 = load i64, i64* %PC.i4009
  %766 = add i64 %765, 3
  store i64 %766, i64* %PC.i4009
  %767 = add i64 %764, %763
  store i64 %767, i64* %RSI.i4010, align 8
  %768 = icmp ult i64 %767, %763
  %769 = icmp ult i64 %767, %764
  %770 = or i1 %768, %769
  %771 = zext i1 %770 to i8
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %771, i8* %772, align 1
  %773 = trunc i64 %767 to i32
  %774 = and i32 %773, 255
  %775 = call i32 @llvm.ctpop.i32(i32 %774)
  %776 = trunc i32 %775 to i8
  %777 = and i8 %776, 1
  %778 = xor i8 %777, 1
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %778, i8* %779, align 1
  %780 = xor i64 %764, %763
  %781 = xor i64 %780, %767
  %782 = lshr i64 %781, 4
  %783 = trunc i64 %782 to i8
  %784 = and i8 %783, 1
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %784, i8* %785, align 1
  %786 = icmp eq i64 %767, 0
  %787 = zext i1 %786 to i8
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %787, i8* %788, align 1
  %789 = lshr i64 %767, 63
  %790 = trunc i64 %789 to i8
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %790, i8* %791, align 1
  %792 = lshr i64 %763, 63
  %793 = lshr i64 %764, 63
  %794 = xor i64 %789, %792
  %795 = xor i64 %789, %793
  %796 = add i64 %794, %795
  %797 = icmp eq i64 %796, 2
  %798 = zext i1 %797 to i8
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %798, i8* %799, align 1
  store %struct.Memory* %loadMem_4aa800, %struct.Memory** %MEMORY
  %loadMem_4aa803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 33
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %PC.i4006 = bitcast %union.anon* %802 to i64*
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 9
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %RSI.i4007 = bitcast %union.anon* %805 to i64*
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 15
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %RBP.i4008 = bitcast %union.anon* %808 to i64*
  %809 = load i64, i64* %RBP.i4008
  %810 = sub i64 %809, 408
  %811 = load i64, i64* %RSI.i4007
  %812 = load i64, i64* %PC.i4006
  %813 = add i64 %812, 7
  store i64 %813, i64* %PC.i4006
  %814 = inttoptr i64 %810 to i64*
  store i64 %811, i64* %814
  store %struct.Memory* %loadMem_4aa803, %struct.Memory** %MEMORY
  %loadMem_4aa80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 33
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %PC.i4004 = bitcast %union.anon* %817 to i64*
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 9
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %RSI.i4005 = bitcast %union.anon* %820 to i64*
  %821 = load i64, i64* %PC.i4004
  %822 = add i64 %821, 8
  store i64 %822, i64* %PC.i4004
  %823 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %823, i64* %RSI.i4005, align 8
  store %struct.Memory* %loadMem_4aa80a, %struct.Memory** %MEMORY
  %loadMem_4aa812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %825 = getelementptr inbounds %struct.GPR, %struct.GPR* %824, i32 0, i32 33
  %826 = getelementptr inbounds %struct.Reg, %struct.Reg* %825, i32 0, i32 0
  %PC.i4001 = bitcast %union.anon* %826 to i64*
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 1
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %RAX.i4002 = bitcast %union.anon* %829 to i64*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 9
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %RSI.i4003 = bitcast %union.anon* %832 to i64*
  %833 = load i64, i64* %RSI.i4003
  %834 = add i64 %833, 40
  %835 = load i64, i64* %PC.i4001
  %836 = add i64 %835, 3
  store i64 %836, i64* %PC.i4001
  %837 = inttoptr i64 %834 to i32*
  %838 = load i32, i32* %837
  %839 = zext i32 %838 to i64
  store i64 %839, i64* %RAX.i4002, align 8
  store %struct.Memory* %loadMem_4aa812, %struct.Memory** %MEMORY
  %loadMem_4aa815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %841 = getelementptr inbounds %struct.GPR, %struct.GPR* %840, i32 0, i32 33
  %842 = getelementptr inbounds %struct.Reg, %struct.Reg* %841, i32 0, i32 0
  %PC.i3999 = bitcast %union.anon* %842 to i64*
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %844 = getelementptr inbounds %struct.GPR, %struct.GPR* %843, i32 0, i32 9
  %845 = getelementptr inbounds %struct.Reg, %struct.Reg* %844, i32 0, i32 0
  %RSI.i4000 = bitcast %union.anon* %845 to i64*
  %846 = load i64, i64* %PC.i3999
  %847 = add i64 %846, 8
  store i64 %847, i64* %PC.i3999
  %848 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %848, i64* %RSI.i4000, align 8
  store %struct.Memory* %loadMem_4aa815, %struct.Memory** %MEMORY
  %loadMem_4aa81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 33
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %PC.i3996 = bitcast %union.anon* %851 to i64*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 1
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %RAX.i3997 = bitcast %union.anon* %854 to i64*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 9
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %RSI.i3998 = bitcast %union.anon* %857 to i64*
  %858 = load i64, i64* %RAX.i3997
  %859 = load i64, i64* %RSI.i3998
  %860 = add i64 %859, 72668
  %861 = load i64, i64* %PC.i3996
  %862 = add i64 %861, 6
  store i64 %862, i64* %PC.i3996
  %863 = trunc i64 %858 to i32
  %864 = inttoptr i64 %860 to i32*
  %865 = load i32, i32* %864
  %866 = add i32 %865, %863
  %867 = zext i32 %866 to i64
  store i64 %867, i64* %RAX.i3997, align 8
  %868 = icmp ult i32 %866, %863
  %869 = icmp ult i32 %866, %865
  %870 = or i1 %868, %869
  %871 = zext i1 %870 to i8
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %871, i8* %872, align 1
  %873 = and i32 %866, 255
  %874 = call i32 @llvm.ctpop.i32(i32 %873)
  %875 = trunc i32 %874 to i8
  %876 = and i8 %875, 1
  %877 = xor i8 %876, 1
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %877, i8* %878, align 1
  %879 = xor i32 %865, %863
  %880 = xor i32 %879, %866
  %881 = lshr i32 %880, 4
  %882 = trunc i32 %881 to i8
  %883 = and i8 %882, 1
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %883, i8* %884, align 1
  %885 = icmp eq i32 %866, 0
  %886 = zext i1 %885 to i8
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %886, i8* %887, align 1
  %888 = lshr i32 %866, 31
  %889 = trunc i32 %888 to i8
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %889, i8* %890, align 1
  %891 = lshr i32 %863, 31
  %892 = lshr i32 %865, 31
  %893 = xor i32 %888, %891
  %894 = xor i32 %888, %892
  %895 = add i32 %893, %894
  %896 = icmp eq i32 %895, 2
  %897 = zext i1 %896 to i8
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %897, i8* %898, align 1
  store %struct.Memory* %loadMem_4aa81d, %struct.Memory** %MEMORY
  %loadMem_4aa823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %900 = getelementptr inbounds %struct.GPR, %struct.GPR* %899, i32 0, i32 33
  %901 = getelementptr inbounds %struct.Reg, %struct.Reg* %900, i32 0, i32 0
  %PC.i3994 = bitcast %union.anon* %901 to i64*
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %903 = getelementptr inbounds %struct.GPR, %struct.GPR* %902, i32 0, i32 1
  %904 = getelementptr inbounds %struct.Reg, %struct.Reg* %903, i32 0, i32 0
  %EAX.i3995 = bitcast %union.anon* %904 to i32*
  %905 = load i32, i32* %EAX.i3995
  %906 = zext i32 %905 to i64
  %907 = load i64, i64* %PC.i3994
  %908 = add i64 %907, 3
  store i64 %908, i64* %PC.i3994
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %909, align 1
  %910 = and i32 %905, 255
  %911 = call i32 @llvm.ctpop.i32(i32 %910)
  %912 = trunc i32 %911 to i8
  %913 = and i8 %912, 1
  %914 = xor i8 %913, 1
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %914, i8* %915, align 1
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %916, align 1
  %917 = icmp eq i32 %905, 0
  %918 = zext i1 %917 to i8
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %918, i8* %919, align 1
  %920 = lshr i32 %905, 31
  %921 = trunc i32 %920 to i8
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %921, i8* %922, align 1
  %923 = lshr i32 %905, 31
  %924 = xor i32 %920, %923
  %925 = add i32 %924, %923
  %926 = icmp eq i32 %925, 2
  %927 = zext i1 %926 to i8
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %927, i8* %928, align 1
  store %struct.Memory* %loadMem_4aa823, %struct.Memory** %MEMORY
  %loadMem_4aa826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 33
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %PC.i3991 = bitcast %union.anon* %931 to i64*
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %933 = getelementptr inbounds %struct.GPR, %struct.GPR* %932, i32 0, i32 5
  %934 = getelementptr inbounds %struct.Reg, %struct.Reg* %933, i32 0, i32 0
  %935 = bitcast %union.anon* %934 to %struct.anon.2*
  %CL.i3992 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %935, i32 0, i32 0
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %937 = getelementptr inbounds %struct.GPR, %struct.GPR* %936, i32 0, i32 15
  %938 = getelementptr inbounds %struct.Reg, %struct.Reg* %937, i32 0, i32 0
  %RBP.i3993 = bitcast %union.anon* %938 to i64*
  %939 = load i64, i64* %RBP.i3993
  %940 = sub i64 %939, 677
  %941 = load i8, i8* %CL.i3992
  %942 = zext i8 %941 to i64
  %943 = load i64, i64* %PC.i3991
  %944 = add i64 %943, 6
  store i64 %944, i64* %PC.i3991
  %945 = inttoptr i64 %940 to i8*
  store i8 %941, i8* %945
  store %struct.Memory* %loadMem_4aa826, %struct.Memory** %MEMORY
  %loadMem_4aa82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %947 = getelementptr inbounds %struct.GPR, %struct.GPR* %946, i32 0, i32 33
  %948 = getelementptr inbounds %struct.Reg, %struct.Reg* %947, i32 0, i32 0
  %PC.i3990 = bitcast %union.anon* %948 to i64*
  %949 = load i64, i64* %PC.i3990
  %950 = add i64 %949, 30
  %951 = load i64, i64* %PC.i3990
  %952 = add i64 %951, 6
  %953 = load i64, i64* %PC.i3990
  %954 = add i64 %953, 6
  store i64 %954, i64* %PC.i3990
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %956 = load i8, i8* %955, align 1
  %957 = icmp eq i8 %956, 0
  %958 = zext i1 %957 to i8
  store i8 %958, i8* %BRANCH_TAKEN, align 1
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %960 = select i1 %957, i64 %950, i64 %952
  store i64 %960, i64* %959, align 8
  store %struct.Memory* %loadMem_4aa82c, %struct.Memory** %MEMORY
  %loadBr_4aa82c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aa82c = icmp eq i8 %loadBr_4aa82c, 1
  br i1 %cmpBr_4aa82c, label %block_.L_4aa84a, label %block_4aa832

block_4aa832:                                     ; preds = %routine_idivl__edi.exit
  %loadMem_4aa832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %962 = getelementptr inbounds %struct.GPR, %struct.GPR* %961, i32 0, i32 33
  %963 = getelementptr inbounds %struct.Reg, %struct.Reg* %962, i32 0, i32 0
  %PC.i3988 = bitcast %union.anon* %963 to i64*
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %965 = getelementptr inbounds %struct.GPR, %struct.GPR* %964, i32 0, i32 1
  %966 = getelementptr inbounds %struct.Reg, %struct.Reg* %965, i32 0, i32 0
  %RAX.i3989 = bitcast %union.anon* %966 to i64*
  %967 = load i64, i64* %PC.i3988
  %968 = add i64 %967, 8
  store i64 %968, i64* %PC.i3988
  %969 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %969, i64* %RAX.i3989, align 8
  store %struct.Memory* %loadMem_4aa832, %struct.Memory** %MEMORY
  %loadMem_4aa83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %971 = getelementptr inbounds %struct.GPR, %struct.GPR* %970, i32 0, i32 33
  %972 = getelementptr inbounds %struct.Reg, %struct.Reg* %971, i32 0, i32 0
  %PC.i3986 = bitcast %union.anon* %972 to i64*
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %974 = getelementptr inbounds %struct.GPR, %struct.GPR* %973, i32 0, i32 1
  %975 = getelementptr inbounds %struct.Reg, %struct.Reg* %974, i32 0, i32 0
  %RAX.i3987 = bitcast %union.anon* %975 to i64*
  %976 = load i64, i64* %RAX.i3987
  %977 = add i64 %976, 72704
  %978 = load i64, i64* %PC.i3986
  %979 = add i64 %978, 7
  store i64 %979, i64* %PC.i3986
  %980 = inttoptr i64 %977 to i32*
  %981 = load i32, i32* %980
  %982 = sub i32 %981, 1
  %983 = icmp ult i32 %981, 1
  %984 = zext i1 %983 to i8
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %984, i8* %985, align 1
  %986 = and i32 %982, 255
  %987 = call i32 @llvm.ctpop.i32(i32 %986)
  %988 = trunc i32 %987 to i8
  %989 = and i8 %988, 1
  %990 = xor i8 %989, 1
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %990, i8* %991, align 1
  %992 = xor i32 %981, 1
  %993 = xor i32 %992, %982
  %994 = lshr i32 %993, 4
  %995 = trunc i32 %994 to i8
  %996 = and i8 %995, 1
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %996, i8* %997, align 1
  %998 = icmp eq i32 %982, 0
  %999 = zext i1 %998 to i8
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %999, i8* %1000, align 1
  %1001 = lshr i32 %982, 31
  %1002 = trunc i32 %1001 to i8
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1002, i8* %1003, align 1
  %1004 = lshr i32 %981, 31
  %1005 = xor i32 %1001, %1004
  %1006 = add i32 %1005, %1004
  %1007 = icmp eq i32 %1006, 2
  %1008 = zext i1 %1007 to i8
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1008, i8* %1009, align 1
  store %struct.Memory* %loadMem_4aa83a, %struct.Memory** %MEMORY
  %loadMem_4aa841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1011 = getelementptr inbounds %struct.GPR, %struct.GPR* %1010, i32 0, i32 33
  %1012 = getelementptr inbounds %struct.Reg, %struct.Reg* %1011, i32 0, i32 0
  %PC.i3984 = bitcast %union.anon* %1012 to i64*
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1014 = getelementptr inbounds %struct.GPR, %struct.GPR* %1013, i32 0, i32 5
  %1015 = getelementptr inbounds %struct.Reg, %struct.Reg* %1014, i32 0, i32 0
  %1016 = bitcast %union.anon* %1015 to %struct.anon.2*
  %CL.i3985 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1016, i32 0, i32 0
  %1017 = load i64, i64* %PC.i3984
  %1018 = add i64 %1017, 3
  store i64 %1018, i64* %PC.i3984
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1020 = load i8, i8* %1019, align 1
  store i8 %1020, i8* %CL.i3985, align 1
  store %struct.Memory* %loadMem_4aa841, %struct.Memory** %MEMORY
  %loadMem_4aa844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 33
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %PC.i3981 = bitcast %union.anon* %1023 to i64*
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1025 = getelementptr inbounds %struct.GPR, %struct.GPR* %1024, i32 0, i32 5
  %1026 = getelementptr inbounds %struct.Reg, %struct.Reg* %1025, i32 0, i32 0
  %1027 = bitcast %union.anon* %1026 to %struct.anon.2*
  %CL.i3982 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1027, i32 0, i32 0
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1029 = getelementptr inbounds %struct.GPR, %struct.GPR* %1028, i32 0, i32 15
  %1030 = getelementptr inbounds %struct.Reg, %struct.Reg* %1029, i32 0, i32 0
  %RBP.i3983 = bitcast %union.anon* %1030 to i64*
  %1031 = load i64, i64* %RBP.i3983
  %1032 = sub i64 %1031, 677
  %1033 = load i8, i8* %CL.i3982
  %1034 = zext i8 %1033 to i64
  %1035 = load i64, i64* %PC.i3981
  %1036 = add i64 %1035, 6
  store i64 %1036, i64* %PC.i3981
  %1037 = inttoptr i64 %1032 to i8*
  store i8 %1033, i8* %1037
  store %struct.Memory* %loadMem_4aa844, %struct.Memory** %MEMORY
  br label %block_.L_4aa84a

block_.L_4aa84a:                                  ; preds = %block_4aa832, %routine_idivl__edi.exit
  %loadMem_4aa84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1039 = getelementptr inbounds %struct.GPR, %struct.GPR* %1038, i32 0, i32 33
  %1040 = getelementptr inbounds %struct.Reg, %struct.Reg* %1039, i32 0, i32 0
  %PC.i3978 = bitcast %union.anon* %1040 to i64*
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1042 = getelementptr inbounds %struct.GPR, %struct.GPR* %1041, i32 0, i32 1
  %1043 = getelementptr inbounds %struct.Reg, %struct.Reg* %1042, i32 0, i32 0
  %1044 = bitcast %union.anon* %1043 to %struct.anon.2*
  %AL.i3979 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1044, i32 0, i32 0
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1046 = getelementptr inbounds %struct.GPR, %struct.GPR* %1045, i32 0, i32 15
  %1047 = getelementptr inbounds %struct.Reg, %struct.Reg* %1046, i32 0, i32 0
  %RBP.i3980 = bitcast %union.anon* %1047 to i64*
  %1048 = load i64, i64* %RBP.i3980
  %1049 = sub i64 %1048, 677
  %1050 = load i64, i64* %PC.i3978
  %1051 = add i64 %1050, 6
  store i64 %1051, i64* %PC.i3978
  %1052 = inttoptr i64 %1049 to i8*
  %1053 = load i8, i8* %1052
  store i8 %1053, i8* %AL.i3979, align 1
  store %struct.Memory* %loadMem_4aa84a, %struct.Memory** %MEMORY
  %loadMem_4aa850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1055 = getelementptr inbounds %struct.GPR, %struct.GPR* %1054, i32 0, i32 33
  %1056 = getelementptr inbounds %struct.Reg, %struct.Reg* %1055, i32 0, i32 0
  %PC.i3976 = bitcast %union.anon* %1056 to i64*
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1058 = getelementptr inbounds %struct.GPR, %struct.GPR* %1057, i32 0, i32 5
  %1059 = getelementptr inbounds %struct.Reg, %struct.Reg* %1058, i32 0, i32 0
  %RCX.i3977 = bitcast %union.anon* %1059 to i64*
  %1060 = load i64, i64* %PC.i3976
  %1061 = add i64 %1060, 5
  store i64 %1061, i64* %PC.i3976
  store i64 6, i64* %RCX.i3977, align 8
  store %struct.Memory* %loadMem_4aa850, %struct.Memory** %MEMORY
  %loadMem_4aa855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 33
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %PC.i3974 = bitcast %union.anon* %1064 to i64*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 1
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %1068 = bitcast %union.anon* %1067 to %struct.anon.2*
  %AL.i3975 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1068, i32 0, i32 0
  %1069 = load i8, i8* %AL.i3975
  %1070 = zext i8 %1069 to i64
  %1071 = load i64, i64* %PC.i3974
  %1072 = add i64 %1071, 2
  store i64 %1072, i64* %PC.i3974
  %1073 = and i64 1, %1070
  %1074 = trunc i64 %1073 to i8
  store i8 %1074, i8* %AL.i3975, align 1
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1075, align 1
  %1076 = trunc i64 %1073 to i32
  %1077 = and i32 %1076, 255
  %1078 = call i32 @llvm.ctpop.i32(i32 %1077)
  %1079 = trunc i32 %1078 to i8
  %1080 = and i8 %1079, 1
  %1081 = xor i8 %1080, 1
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1081, i8* %1082, align 1
  %1083 = icmp eq i8 %1074, 0
  %1084 = zext i1 %1083 to i8
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1084, i8* %1085, align 1
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1086, align 1
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1087, align 1
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1088, align 1
  store %struct.Memory* %loadMem_4aa855, %struct.Memory** %MEMORY
  %loadMem_4aa857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 33
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %PC.i3971 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 1
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %1095 = bitcast %union.anon* %1094 to %struct.anon.2*
  %AL.i3972 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1095, i32 0, i32 0
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1097 = getelementptr inbounds %struct.GPR, %struct.GPR* %1096, i32 0, i32 7
  %1098 = getelementptr inbounds %struct.Reg, %struct.Reg* %1097, i32 0, i32 0
  %RDX.i3973 = bitcast %union.anon* %1098 to i64*
  %1099 = load i8, i8* %AL.i3972
  %1100 = zext i8 %1099 to i64
  %1101 = load i64, i64* %PC.i3971
  %1102 = add i64 %1101, 3
  store i64 %1102, i64* %PC.i3971
  %1103 = and i64 %1100, 255
  store i64 %1103, i64* %RDX.i3973, align 8
  store %struct.Memory* %loadMem_4aa857, %struct.Memory** %MEMORY
  %loadMem_4aa85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1105 = getelementptr inbounds %struct.GPR, %struct.GPR* %1104, i32 0, i32 33
  %1106 = getelementptr inbounds %struct.Reg, %struct.Reg* %1105, i32 0, i32 0
  %PC.i3968 = bitcast %union.anon* %1106 to i64*
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1108 = getelementptr inbounds %struct.GPR, %struct.GPR* %1107, i32 0, i32 7
  %1109 = getelementptr inbounds %struct.Reg, %struct.Reg* %1108, i32 0, i32 0
  %EDX.i3969 = bitcast %union.anon* %1109 to i32*
  %1110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1111 = getelementptr inbounds %struct.GPR, %struct.GPR* %1110, i32 0, i32 15
  %1112 = getelementptr inbounds %struct.Reg, %struct.Reg* %1111, i32 0, i32 0
  %RBP.i3970 = bitcast %union.anon* %1112 to i64*
  %1113 = load i64, i64* %RBP.i3970
  %1114 = sub i64 %1113, 412
  %1115 = load i32, i32* %EDX.i3969
  %1116 = zext i32 %1115 to i64
  %1117 = load i64, i64* %PC.i3968
  %1118 = add i64 %1117, 6
  store i64 %1118, i64* %PC.i3968
  %1119 = inttoptr i64 %1114 to i32*
  store i32 %1115, i32* %1119
  store %struct.Memory* %loadMem_4aa85a, %struct.Memory** %MEMORY
  %loadMem_4aa860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1121 = getelementptr inbounds %struct.GPR, %struct.GPR* %1120, i32 0, i32 33
  %1122 = getelementptr inbounds %struct.Reg, %struct.Reg* %1121, i32 0, i32 0
  %PC.i3966 = bitcast %union.anon* %1122 to i64*
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1124 = getelementptr inbounds %struct.GPR, %struct.GPR* %1123, i32 0, i32 9
  %1125 = getelementptr inbounds %struct.Reg, %struct.Reg* %1124, i32 0, i32 0
  %RSI.i3967 = bitcast %union.anon* %1125 to i64*
  %1126 = load i64, i64* %PC.i3966
  %1127 = add i64 %1126, 8
  store i64 %1127, i64* %PC.i3966
  %1128 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1128, i64* %RSI.i3967, align 8
  store %struct.Memory* %loadMem_4aa860, %struct.Memory** %MEMORY
  %loadMem_4aa868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1130 = getelementptr inbounds %struct.GPR, %struct.GPR* %1129, i32 0, i32 33
  %1131 = getelementptr inbounds %struct.Reg, %struct.Reg* %1130, i32 0, i32 0
  %PC.i3963 = bitcast %union.anon* %1131 to i64*
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 7
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %RDX.i3964 = bitcast %union.anon* %1134 to i64*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 9
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %RSI.i3965 = bitcast %union.anon* %1137 to i64*
  %1138 = load i64, i64* %RSI.i3965
  %1139 = add i64 %1138, 40
  %1140 = load i64, i64* %PC.i3963
  %1141 = add i64 %1140, 3
  store i64 %1141, i64* %PC.i3963
  %1142 = inttoptr i64 %1139 to i32*
  %1143 = load i32, i32* %1142
  %1144 = zext i32 %1143 to i64
  store i64 %1144, i64* %RDX.i3964, align 8
  store %struct.Memory* %loadMem_4aa868, %struct.Memory** %MEMORY
  %loadMem_4aa86b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 33
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %PC.i3961 = bitcast %union.anon* %1147 to i64*
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 9
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %RSI.i3962 = bitcast %union.anon* %1150 to i64*
  %1151 = load i64, i64* %PC.i3961
  %1152 = add i64 %1151, 8
  store i64 %1152, i64* %PC.i3961
  %1153 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1153, i64* %RSI.i3962, align 8
  store %struct.Memory* %loadMem_4aa86b, %struct.Memory** %MEMORY
  %loadMem_4aa873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1155 = getelementptr inbounds %struct.GPR, %struct.GPR* %1154, i32 0, i32 33
  %1156 = getelementptr inbounds %struct.Reg, %struct.Reg* %1155, i32 0, i32 0
  %PC.i3958 = bitcast %union.anon* %1156 to i64*
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1158 = getelementptr inbounds %struct.GPR, %struct.GPR* %1157, i32 0, i32 7
  %1159 = getelementptr inbounds %struct.Reg, %struct.Reg* %1158, i32 0, i32 0
  %RDX.i3959 = bitcast %union.anon* %1159 to i64*
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1161 = getelementptr inbounds %struct.GPR, %struct.GPR* %1160, i32 0, i32 9
  %1162 = getelementptr inbounds %struct.Reg, %struct.Reg* %1161, i32 0, i32 0
  %RSI.i3960 = bitcast %union.anon* %1162 to i64*
  %1163 = load i64, i64* %RDX.i3959
  %1164 = load i64, i64* %RSI.i3960
  %1165 = add i64 %1164, 72668
  %1166 = load i64, i64* %PC.i3958
  %1167 = add i64 %1166, 6
  store i64 %1167, i64* %PC.i3958
  %1168 = trunc i64 %1163 to i32
  %1169 = inttoptr i64 %1165 to i32*
  %1170 = load i32, i32* %1169
  %1171 = add i32 %1170, %1168
  %1172 = zext i32 %1171 to i64
  store i64 %1172, i64* %RDX.i3959, align 8
  %1173 = icmp ult i32 %1171, %1168
  %1174 = icmp ult i32 %1171, %1170
  %1175 = or i1 %1173, %1174
  %1176 = zext i1 %1175 to i8
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1176, i8* %1177, align 1
  %1178 = and i32 %1171, 255
  %1179 = call i32 @llvm.ctpop.i32(i32 %1178)
  %1180 = trunc i32 %1179 to i8
  %1181 = and i8 %1180, 1
  %1182 = xor i8 %1181, 1
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1182, i8* %1183, align 1
  %1184 = xor i32 %1170, %1168
  %1185 = xor i32 %1184, %1171
  %1186 = lshr i32 %1185, 4
  %1187 = trunc i32 %1186 to i8
  %1188 = and i8 %1187, 1
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1188, i8* %1189, align 1
  %1190 = icmp eq i32 %1171, 0
  %1191 = zext i1 %1190 to i8
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1191, i8* %1192, align 1
  %1193 = lshr i32 %1171, 31
  %1194 = trunc i32 %1193 to i8
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1194, i8* %1195, align 1
  %1196 = lshr i32 %1168, 31
  %1197 = lshr i32 %1170, 31
  %1198 = xor i32 %1193, %1196
  %1199 = xor i32 %1193, %1197
  %1200 = add i32 %1198, %1199
  %1201 = icmp eq i32 %1200, 2
  %1202 = zext i1 %1201 to i8
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1202, i8* %1203, align 1
  store %struct.Memory* %loadMem_4aa873, %struct.Memory** %MEMORY
  %loadMem_4aa879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 33
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %PC.i3956 = bitcast %union.anon* %1206 to i64*
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1208 = getelementptr inbounds %struct.GPR, %struct.GPR* %1207, i32 0, i32 7
  %1209 = getelementptr inbounds %struct.Reg, %struct.Reg* %1208, i32 0, i32 0
  %RDX.i3957 = bitcast %union.anon* %1209 to i64*
  %1210 = load i64, i64* %RDX.i3957
  %1211 = load i64, i64* %PC.i3956
  %1212 = add i64 %1211, 3
  store i64 %1212, i64* %PC.i3956
  %1213 = trunc i64 %1210 to i32
  %1214 = zext i32 %1213 to i64
  store i64 %1214, i64* %RDX.i3957, align 8
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1215, align 1
  %1216 = and i32 %1213, 255
  %1217 = call i32 @llvm.ctpop.i32(i32 %1216)
  %1218 = trunc i32 %1217 to i8
  %1219 = and i8 %1218, 1
  %1220 = xor i8 %1219, 1
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1220, i8* %1221, align 1
  %1222 = trunc i64 %1210 to i32
  %1223 = xor i32 %1222, %1213
  %1224 = lshr i32 %1223, 4
  %1225 = trunc i32 %1224 to i8
  %1226 = and i8 %1225, 1
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1226, i8* %1227, align 1
  %1228 = icmp eq i32 %1213, 0
  %1229 = zext i1 %1228 to i8
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1229, i8* %1230, align 1
  %1231 = lshr i32 %1213, 31
  %1232 = trunc i32 %1231 to i8
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1232, i8* %1233, align 1
  %1234 = lshr i32 %1213, 31
  %1235 = xor i32 %1231, %1234
  %1236 = add i32 %1235, %1234
  %1237 = icmp eq i32 %1236, 2
  %1238 = zext i1 %1237 to i8
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1238, i8* %1239, align 1
  store %struct.Memory* %loadMem_4aa879, %struct.Memory** %MEMORY
  %loadMem_4aa87c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1241 = getelementptr inbounds %struct.GPR, %struct.GPR* %1240, i32 0, i32 33
  %1242 = getelementptr inbounds %struct.Reg, %struct.Reg* %1241, i32 0, i32 0
  %PC.i3953 = bitcast %union.anon* %1242 to i64*
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1244 = getelementptr inbounds %struct.GPR, %struct.GPR* %1243, i32 0, i32 7
  %1245 = getelementptr inbounds %struct.Reg, %struct.Reg* %1244, i32 0, i32 0
  %EDX.i3954 = bitcast %union.anon* %1245 to i32*
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1247 = getelementptr inbounds %struct.GPR, %struct.GPR* %1246, i32 0, i32 1
  %1248 = getelementptr inbounds %struct.Reg, %struct.Reg* %1247, i32 0, i32 0
  %RAX.i3955 = bitcast %union.anon* %1248 to i64*
  %1249 = load i32, i32* %EDX.i3954
  %1250 = zext i32 %1249 to i64
  %1251 = load i64, i64* %PC.i3953
  %1252 = add i64 %1251, 2
  store i64 %1252, i64* %PC.i3953
  %1253 = and i64 %1250, 4294967295
  store i64 %1253, i64* %RAX.i3955, align 8
  store %struct.Memory* %loadMem_4aa87c, %struct.Memory** %MEMORY
  %loadMem_4aa87e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1255 = getelementptr inbounds %struct.GPR, %struct.GPR* %1254, i32 0, i32 33
  %1256 = getelementptr inbounds %struct.Reg, %struct.Reg* %1255, i32 0, i32 0
  %PC.i3952 = bitcast %union.anon* %1256 to i64*
  %1257 = load i64, i64* %PC.i3952
  %1258 = add i64 %1257, 1
  store i64 %1258, i64* %PC.i3952
  %1259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1261 = bitcast %union.anon* %1260 to i32*
  %1262 = load i32, i32* %1261, align 8
  %1263 = sext i32 %1262 to i64
  %1264 = lshr i64 %1263, 32
  store i64 %1264, i64* %1259, align 8
  store %struct.Memory* %loadMem_4aa87e, %struct.Memory** %MEMORY
  %loadMem_4aa87f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1266 = getelementptr inbounds %struct.GPR, %struct.GPR* %1265, i32 0, i32 33
  %1267 = getelementptr inbounds %struct.Reg, %struct.Reg* %1266, i32 0, i32 0
  %PC.i3946 = bitcast %union.anon* %1267 to i64*
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1269 = getelementptr inbounds %struct.GPR, %struct.GPR* %1268, i32 0, i32 5
  %1270 = getelementptr inbounds %struct.Reg, %struct.Reg* %1269, i32 0, i32 0
  %ECX.i3947 = bitcast %union.anon* %1270 to i32*
  %1271 = load i32, i32* %ECX.i3947
  %1272 = zext i32 %1271 to i64
  %1273 = load i64, i64* %PC.i3946
  %1274 = add i64 %1273, 2
  store i64 %1274, i64* %PC.i3946
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1276 = bitcast %union.anon* %1275 to i32*
  %1277 = load i32, i32* %1276, align 8
  %1278 = zext i32 %1277 to i64
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1280 = bitcast %union.anon* %1279 to i32*
  %1281 = load i32, i32* %1280, align 8
  %1282 = zext i32 %1281 to i64
  %1283 = shl i64 %1272, 32
  %1284 = ashr exact i64 %1283, 32
  %1285 = shl i64 %1282, 32
  %1286 = or i64 %1285, %1278
  %1287 = sdiv i64 %1286, %1284
  %1288 = shl i64 %1287, 32
  %1289 = ashr exact i64 %1288, 32
  %1290 = icmp eq i64 %1287, %1289
  br i1 %1290, label %1295, label %1291

; <label>:1291:                                   ; preds = %block_.L_4aa84a
  %1292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1293 = load i64, i64* %1292, align 8
  %1294 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1293, %struct.Memory* %loadMem_4aa87f)
  br label %routine_idivl__ecx.exit3948

; <label>:1295:                                   ; preds = %block_.L_4aa84a
  %1296 = srem i64 %1286, %1284
  %1297 = getelementptr inbounds %union.anon, %union.anon* %1275, i64 0, i32 0
  %1298 = and i64 %1287, 4294967295
  store i64 %1298, i64* %1297, align 8
  %1299 = getelementptr inbounds %union.anon, %union.anon* %1279, i64 0, i32 0
  %1300 = and i64 %1296, 4294967295
  store i64 %1300, i64* %1299, align 8
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1301, align 1
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1302, align 1
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1303, align 1
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1304, align 1
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1305, align 1
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1306, align 1
  br label %routine_idivl__ecx.exit3948

routine_idivl__ecx.exit3948:                      ; preds = %1291, %1295
  %1307 = phi %struct.Memory* [ %1294, %1291 ], [ %loadMem_4aa87f, %1295 ]
  store %struct.Memory* %1307, %struct.Memory** %MEMORY
  %loadMem_4aa881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 33
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %PC.i3943 = bitcast %union.anon* %1310 to i64*
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 1
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %EAX.i3944 = bitcast %union.anon* %1313 to i32*
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 15
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %RBP.i3945 = bitcast %union.anon* %1316 to i64*
  %1317 = load i64, i64* %RBP.i3945
  %1318 = sub i64 %1317, 60
  %1319 = load i32, i32* %EAX.i3944
  %1320 = zext i32 %1319 to i64
  %1321 = load i64, i64* %PC.i3943
  %1322 = add i64 %1321, 3
  store i64 %1322, i64* %PC.i3943
  %1323 = inttoptr i64 %1318 to i32*
  store i32 %1319, i32* %1323
  store %struct.Memory* %loadMem_4aa881, %struct.Memory** %MEMORY
  %loadMem_4aa884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1325 = getelementptr inbounds %struct.GPR, %struct.GPR* %1324, i32 0, i32 33
  %1326 = getelementptr inbounds %struct.Reg, %struct.Reg* %1325, i32 0, i32 0
  %PC.i3941 = bitcast %union.anon* %1326 to i64*
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 9
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %RSI.i3942 = bitcast %union.anon* %1329 to i64*
  %1330 = load i64, i64* %PC.i3941
  %1331 = add i64 %1330, 8
  store i64 %1331, i64* %PC.i3941
  %1332 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1332, i64* %RSI.i3942, align 8
  store %struct.Memory* %loadMem_4aa884, %struct.Memory** %MEMORY
  %loadMem_4aa88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 33
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %PC.i3938 = bitcast %union.anon* %1335 to i64*
  %1336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1337 = getelementptr inbounds %struct.GPR, %struct.GPR* %1336, i32 0, i32 1
  %1338 = getelementptr inbounds %struct.Reg, %struct.Reg* %1337, i32 0, i32 0
  %RAX.i3939 = bitcast %union.anon* %1338 to i64*
  %1339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1340 = getelementptr inbounds %struct.GPR, %struct.GPR* %1339, i32 0, i32 9
  %1341 = getelementptr inbounds %struct.Reg, %struct.Reg* %1340, i32 0, i32 0
  %RSI.i3940 = bitcast %union.anon* %1341 to i64*
  %1342 = load i64, i64* %RSI.i3940
  %1343 = add i64 %1342, 40
  %1344 = load i64, i64* %PC.i3938
  %1345 = add i64 %1344, 3
  store i64 %1345, i64* %PC.i3938
  %1346 = inttoptr i64 %1343 to i32*
  %1347 = load i32, i32* %1346
  %1348 = zext i32 %1347 to i64
  store i64 %1348, i64* %RAX.i3939, align 8
  store %struct.Memory* %loadMem_4aa88c, %struct.Memory** %MEMORY
  %loadMem_4aa88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 33
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %PC.i3936 = bitcast %union.anon* %1351 to i64*
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1353 = getelementptr inbounds %struct.GPR, %struct.GPR* %1352, i32 0, i32 9
  %1354 = getelementptr inbounds %struct.Reg, %struct.Reg* %1353, i32 0, i32 0
  %RSI.i3937 = bitcast %union.anon* %1354 to i64*
  %1355 = load i64, i64* %PC.i3936
  %1356 = add i64 %1355, 8
  store i64 %1356, i64* %PC.i3936
  %1357 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1357, i64* %RSI.i3937, align 8
  store %struct.Memory* %loadMem_4aa88f, %struct.Memory** %MEMORY
  %loadMem_4aa897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1359 = getelementptr inbounds %struct.GPR, %struct.GPR* %1358, i32 0, i32 33
  %1360 = getelementptr inbounds %struct.Reg, %struct.Reg* %1359, i32 0, i32 0
  %PC.i3933 = bitcast %union.anon* %1360 to i64*
  %1361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1362 = getelementptr inbounds %struct.GPR, %struct.GPR* %1361, i32 0, i32 1
  %1363 = getelementptr inbounds %struct.Reg, %struct.Reg* %1362, i32 0, i32 0
  %RAX.i3934 = bitcast %union.anon* %1363 to i64*
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1365 = getelementptr inbounds %struct.GPR, %struct.GPR* %1364, i32 0, i32 9
  %1366 = getelementptr inbounds %struct.Reg, %struct.Reg* %1365, i32 0, i32 0
  %RSI.i3935 = bitcast %union.anon* %1366 to i64*
  %1367 = load i64, i64* %RAX.i3934
  %1368 = load i64, i64* %RSI.i3935
  %1369 = add i64 %1368, 72668
  %1370 = load i64, i64* %PC.i3933
  %1371 = add i64 %1370, 6
  store i64 %1371, i64* %PC.i3933
  %1372 = trunc i64 %1367 to i32
  %1373 = inttoptr i64 %1369 to i32*
  %1374 = load i32, i32* %1373
  %1375 = add i32 %1374, %1372
  %1376 = zext i32 %1375 to i64
  store i64 %1376, i64* %RAX.i3934, align 8
  %1377 = icmp ult i32 %1375, %1372
  %1378 = icmp ult i32 %1375, %1374
  %1379 = or i1 %1377, %1378
  %1380 = zext i1 %1379 to i8
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1380, i8* %1381, align 1
  %1382 = and i32 %1375, 255
  %1383 = call i32 @llvm.ctpop.i32(i32 %1382)
  %1384 = trunc i32 %1383 to i8
  %1385 = and i8 %1384, 1
  %1386 = xor i8 %1385, 1
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1386, i8* %1387, align 1
  %1388 = xor i32 %1374, %1372
  %1389 = xor i32 %1388, %1375
  %1390 = lshr i32 %1389, 4
  %1391 = trunc i32 %1390 to i8
  %1392 = and i8 %1391, 1
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1392, i8* %1393, align 1
  %1394 = icmp eq i32 %1375, 0
  %1395 = zext i1 %1394 to i8
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1395, i8* %1396, align 1
  %1397 = lshr i32 %1375, 31
  %1398 = trunc i32 %1397 to i8
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1398, i8* %1399, align 1
  %1400 = lshr i32 %1372, 31
  %1401 = lshr i32 %1374, 31
  %1402 = xor i32 %1397, %1400
  %1403 = xor i32 %1397, %1401
  %1404 = add i32 %1402, %1403
  %1405 = icmp eq i32 %1404, 2
  %1406 = zext i1 %1405 to i8
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1406, i8* %1407, align 1
  store %struct.Memory* %loadMem_4aa897, %struct.Memory** %MEMORY
  %loadMem_4aa89d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 33
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %PC.i3931 = bitcast %union.anon* %1410 to i64*
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 1
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %RAX.i3932 = bitcast %union.anon* %1413 to i64*
  %1414 = load i64, i64* %RAX.i3932
  %1415 = load i64, i64* %PC.i3931
  %1416 = add i64 %1415, 3
  store i64 %1416, i64* %PC.i3931
  %1417 = trunc i64 %1414 to i32
  %1418 = zext i32 %1417 to i64
  store i64 %1418, i64* %RAX.i3932, align 8
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1419, align 1
  %1420 = and i32 %1417, 255
  %1421 = call i32 @llvm.ctpop.i32(i32 %1420)
  %1422 = trunc i32 %1421 to i8
  %1423 = and i8 %1422, 1
  %1424 = xor i8 %1423, 1
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1424, i8* %1425, align 1
  %1426 = trunc i64 %1414 to i32
  %1427 = xor i32 %1426, %1417
  %1428 = lshr i32 %1427, 4
  %1429 = trunc i32 %1428 to i8
  %1430 = and i8 %1429, 1
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1430, i8* %1431, align 1
  %1432 = icmp eq i32 %1417, 0
  %1433 = zext i1 %1432 to i8
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1433, i8* %1434, align 1
  %1435 = lshr i32 %1417, 31
  %1436 = trunc i32 %1435 to i8
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1436, i8* %1437, align 1
  %1438 = lshr i32 %1417, 31
  %1439 = xor i32 %1435, %1438
  %1440 = add i32 %1439, %1438
  %1441 = icmp eq i32 %1440, 2
  %1442 = zext i1 %1441 to i8
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1442, i8* %1443, align 1
  store %struct.Memory* %loadMem_4aa89d, %struct.Memory** %MEMORY
  %loadMem_4aa8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1445 = getelementptr inbounds %struct.GPR, %struct.GPR* %1444, i32 0, i32 33
  %1446 = getelementptr inbounds %struct.Reg, %struct.Reg* %1445, i32 0, i32 0
  %PC.i3930 = bitcast %union.anon* %1446 to i64*
  %1447 = load i64, i64* %PC.i3930
  %1448 = add i64 %1447, 1
  store i64 %1448, i64* %PC.i3930
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1451 = bitcast %union.anon* %1450 to i32*
  %1452 = load i32, i32* %1451, align 8
  %1453 = sext i32 %1452 to i64
  %1454 = lshr i64 %1453, 32
  store i64 %1454, i64* %1449, align 8
  store %struct.Memory* %loadMem_4aa8a0, %struct.Memory** %MEMORY
  %loadMem_4aa8a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 33
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %PC.i3925 = bitcast %union.anon* %1457 to i64*
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1459 = getelementptr inbounds %struct.GPR, %struct.GPR* %1458, i32 0, i32 5
  %1460 = getelementptr inbounds %struct.Reg, %struct.Reg* %1459, i32 0, i32 0
  %ECX.i3926 = bitcast %union.anon* %1460 to i32*
  %1461 = load i32, i32* %ECX.i3926
  %1462 = zext i32 %1461 to i64
  %1463 = load i64, i64* %PC.i3925
  %1464 = add i64 %1463, 2
  store i64 %1464, i64* %PC.i3925
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1466 = bitcast %union.anon* %1465 to i32*
  %1467 = load i32, i32* %1466, align 8
  %1468 = zext i32 %1467 to i64
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1470 = bitcast %union.anon* %1469 to i32*
  %1471 = load i32, i32* %1470, align 8
  %1472 = zext i32 %1471 to i64
  %1473 = shl i64 %1462, 32
  %1474 = ashr exact i64 %1473, 32
  %1475 = shl i64 %1472, 32
  %1476 = or i64 %1475, %1468
  %1477 = sdiv i64 %1476, %1474
  %1478 = shl i64 %1477, 32
  %1479 = ashr exact i64 %1478, 32
  %1480 = icmp eq i64 %1477, %1479
  br i1 %1480, label %1485, label %1481

; <label>:1481:                                   ; preds = %routine_idivl__ecx.exit3948
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1483 = load i64, i64* %1482, align 8
  %1484 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1483, %struct.Memory* %loadMem_4aa8a1)
  br label %routine_idivl__ecx.exit

; <label>:1485:                                   ; preds = %routine_idivl__ecx.exit3948
  %1486 = srem i64 %1476, %1474
  %1487 = getelementptr inbounds %union.anon, %union.anon* %1465, i64 0, i32 0
  %1488 = and i64 %1477, 4294967295
  store i64 %1488, i64* %1487, align 8
  %1489 = getelementptr inbounds %union.anon, %union.anon* %1469, i64 0, i32 0
  %1490 = and i64 %1486, 4294967295
  store i64 %1490, i64* %1489, align 8
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1491, align 1
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1492, align 1
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1493, align 1
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1494, align 1
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1495, align 1
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1496, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %1481, %1485
  %1497 = phi %struct.Memory* [ %1484, %1481 ], [ %loadMem_4aa8a1, %1485 ]
  store %struct.Memory* %1497, %struct.Memory** %MEMORY
  %loadMem_4aa8a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 33
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %PC.i3922 = bitcast %union.anon* %1500 to i64*
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1502 = getelementptr inbounds %struct.GPR, %struct.GPR* %1501, i32 0, i32 7
  %1503 = getelementptr inbounds %struct.Reg, %struct.Reg* %1502, i32 0, i32 0
  %EDX.i3923 = bitcast %union.anon* %1503 to i32*
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1505 = getelementptr inbounds %struct.GPR, %struct.GPR* %1504, i32 0, i32 15
  %1506 = getelementptr inbounds %struct.Reg, %struct.Reg* %1505, i32 0, i32 0
  %RBP.i3924 = bitcast %union.anon* %1506 to i64*
  %1507 = load i64, i64* %RBP.i3924
  %1508 = sub i64 %1507, 64
  %1509 = load i32, i32* %EDX.i3923
  %1510 = zext i32 %1509 to i64
  %1511 = load i64, i64* %PC.i3922
  %1512 = add i64 %1511, 3
  store i64 %1512, i64* %PC.i3922
  %1513 = inttoptr i64 %1508 to i32*
  store i32 %1509, i32* %1513
  store %struct.Memory* %loadMem_4aa8a3, %struct.Memory** %MEMORY
  %loadMem_4aa8a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1515 = getelementptr inbounds %struct.GPR, %struct.GPR* %1514, i32 0, i32 33
  %1516 = getelementptr inbounds %struct.Reg, %struct.Reg* %1515, i32 0, i32 0
  %PC.i3919 = bitcast %union.anon* %1516 to i64*
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1518 = getelementptr inbounds %struct.GPR, %struct.GPR* %1517, i32 0, i32 5
  %1519 = getelementptr inbounds %struct.Reg, %struct.Reg* %1518, i32 0, i32 0
  %RCX.i3920 = bitcast %union.anon* %1519 to i64*
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1521 = getelementptr inbounds %struct.GPR, %struct.GPR* %1520, i32 0, i32 15
  %1522 = getelementptr inbounds %struct.Reg, %struct.Reg* %1521, i32 0, i32 0
  %RBP.i3921 = bitcast %union.anon* %1522 to i64*
  %1523 = load i64, i64* %RBP.i3921
  %1524 = sub i64 %1523, 60
  %1525 = load i64, i64* %PC.i3919
  %1526 = add i64 %1525, 3
  store i64 %1526, i64* %PC.i3919
  %1527 = inttoptr i64 %1524 to i32*
  %1528 = load i32, i32* %1527
  %1529 = zext i32 %1528 to i64
  store i64 %1529, i64* %RCX.i3920, align 8
  store %struct.Memory* %loadMem_4aa8a6, %struct.Memory** %MEMORY
  %loadMem_4aa8a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1531 = getelementptr inbounds %struct.GPR, %struct.GPR* %1530, i32 0, i32 33
  %1532 = getelementptr inbounds %struct.Reg, %struct.Reg* %1531, i32 0, i32 0
  %PC.i3917 = bitcast %union.anon* %1532 to i64*
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1534 = getelementptr inbounds %struct.GPR, %struct.GPR* %1533, i32 0, i32 5
  %1535 = getelementptr inbounds %struct.Reg, %struct.Reg* %1534, i32 0, i32 0
  %RCX.i3918 = bitcast %union.anon* %1535 to i64*
  %1536 = load i64, i64* %RCX.i3918
  %1537 = load i64, i64* %PC.i3917
  %1538 = add i64 %1537, 3
  store i64 %1538, i64* %PC.i3917
  %1539 = trunc i64 %1536 to i32
  %1540 = add i32 16, %1539
  %1541 = zext i32 %1540 to i64
  store i64 %1541, i64* %RCX.i3918, align 8
  %1542 = icmp ult i32 %1540, %1539
  %1543 = icmp ult i32 %1540, 16
  %1544 = or i1 %1542, %1543
  %1545 = zext i1 %1544 to i8
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1545, i8* %1546, align 1
  %1547 = and i32 %1540, 255
  %1548 = call i32 @llvm.ctpop.i32(i32 %1547)
  %1549 = trunc i32 %1548 to i8
  %1550 = and i8 %1549, 1
  %1551 = xor i8 %1550, 1
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1551, i8* %1552, align 1
  %1553 = xor i64 16, %1536
  %1554 = trunc i64 %1553 to i32
  %1555 = xor i32 %1554, %1540
  %1556 = lshr i32 %1555, 4
  %1557 = trunc i32 %1556 to i8
  %1558 = and i8 %1557, 1
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1558, i8* %1559, align 1
  %1560 = icmp eq i32 %1540, 0
  %1561 = zext i1 %1560 to i8
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1561, i8* %1562, align 1
  %1563 = lshr i32 %1540, 31
  %1564 = trunc i32 %1563 to i8
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1564, i8* %1565, align 1
  %1566 = lshr i32 %1539, 31
  %1567 = xor i32 %1563, %1566
  %1568 = add i32 %1567, %1563
  %1569 = icmp eq i32 %1568, 2
  %1570 = zext i1 %1569 to i8
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1570, i8* %1571, align 1
  store %struct.Memory* %loadMem_4aa8a9, %struct.Memory** %MEMORY
  %loadMem_4aa8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1573 = getelementptr inbounds %struct.GPR, %struct.GPR* %1572, i32 0, i32 33
  %1574 = getelementptr inbounds %struct.Reg, %struct.Reg* %1573, i32 0, i32 0
  %PC.i3914 = bitcast %union.anon* %1574 to i64*
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1576 = getelementptr inbounds %struct.GPR, %struct.GPR* %1575, i32 0, i32 5
  %1577 = getelementptr inbounds %struct.Reg, %struct.Reg* %1576, i32 0, i32 0
  %ECX.i3915 = bitcast %union.anon* %1577 to i32*
  %1578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1579 = getelementptr inbounds %struct.GPR, %struct.GPR* %1578, i32 0, i32 15
  %1580 = getelementptr inbounds %struct.Reg, %struct.Reg* %1579, i32 0, i32 0
  %RBP.i3916 = bitcast %union.anon* %1580 to i64*
  %1581 = load i64, i64* %RBP.i3916
  %1582 = sub i64 %1581, 68
  %1583 = load i32, i32* %ECX.i3915
  %1584 = zext i32 %1583 to i64
  %1585 = load i64, i64* %PC.i3914
  %1586 = add i64 %1585, 3
  store i64 %1586, i64* %PC.i3914
  %1587 = inttoptr i64 %1582 to i32*
  store i32 %1583, i32* %1587
  store %struct.Memory* %loadMem_4aa8ac, %struct.Memory** %MEMORY
  %loadMem_4aa8af = load %struct.Memory*, %struct.Memory** %MEMORY
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1589 = getelementptr inbounds %struct.GPR, %struct.GPR* %1588, i32 0, i32 33
  %1590 = getelementptr inbounds %struct.Reg, %struct.Reg* %1589, i32 0, i32 0
  %PC.i3912 = bitcast %union.anon* %1590 to i64*
  %1591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1592 = getelementptr inbounds %struct.GPR, %struct.GPR* %1591, i32 0, i32 15
  %1593 = getelementptr inbounds %struct.Reg, %struct.Reg* %1592, i32 0, i32 0
  %RBP.i3913 = bitcast %union.anon* %1593 to i64*
  %1594 = load i64, i64* %RBP.i3913
  %1595 = sub i64 %1594, 60
  %1596 = load i64, i64* %PC.i3912
  %1597 = add i64 %1596, 4
  store i64 %1597, i64* %PC.i3912
  %1598 = inttoptr i64 %1595 to i32*
  %1599 = load i32, i32* %1598
  %1600 = sub i32 %1599, 6
  %1601 = icmp ult i32 %1599, 6
  %1602 = zext i1 %1601 to i8
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1602, i8* %1603, align 1
  %1604 = and i32 %1600, 255
  %1605 = call i32 @llvm.ctpop.i32(i32 %1604)
  %1606 = trunc i32 %1605 to i8
  %1607 = and i8 %1606, 1
  %1608 = xor i8 %1607, 1
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1608, i8* %1609, align 1
  %1610 = xor i32 %1599, 6
  %1611 = xor i32 %1610, %1600
  %1612 = lshr i32 %1611, 4
  %1613 = trunc i32 %1612 to i8
  %1614 = and i8 %1613, 1
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1614, i8* %1615, align 1
  %1616 = icmp eq i32 %1600, 0
  %1617 = zext i1 %1616 to i8
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1617, i8* %1618, align 1
  %1619 = lshr i32 %1600, 31
  %1620 = trunc i32 %1619 to i8
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1620, i8* %1621, align 1
  %1622 = lshr i32 %1599, 31
  %1623 = xor i32 %1619, %1622
  %1624 = add i32 %1623, %1622
  %1625 = icmp eq i32 %1624, 2
  %1626 = zext i1 %1625 to i8
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1626, i8* %1627, align 1
  store %struct.Memory* %loadMem_4aa8af, %struct.Memory** %MEMORY
  %loadMem_4aa8b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1629 = getelementptr inbounds %struct.GPR, %struct.GPR* %1628, i32 0, i32 33
  %1630 = getelementptr inbounds %struct.Reg, %struct.Reg* %1629, i32 0, i32 0
  %PC.i3911 = bitcast %union.anon* %1630 to i64*
  %1631 = load i64, i64* %PC.i3911
  %1632 = add i64 %1631, 40
  %1633 = load i64, i64* %PC.i3911
  %1634 = add i64 %1633, 6
  %1635 = load i64, i64* %PC.i3911
  %1636 = add i64 %1635, 6
  store i64 %1636, i64* %PC.i3911
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1638 = load i8, i8* %1637, align 1
  %1639 = icmp ne i8 %1638, 0
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1641 = load i8, i8* %1640, align 1
  %1642 = icmp ne i8 %1641, 0
  %1643 = xor i1 %1639, %1642
  %1644 = xor i1 %1643, true
  %1645 = zext i1 %1644 to i8
  store i8 %1645, i8* %BRANCH_TAKEN, align 1
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1647 = select i1 %1643, i64 %1634, i64 %1632
  store i64 %1647, i64* %1646, align 8
  store %struct.Memory* %loadMem_4aa8b3, %struct.Memory** %MEMORY
  %loadBr_4aa8b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aa8b3 = icmp eq i8 %loadBr_4aa8b3, 1
  br i1 %cmpBr_4aa8b3, label %block_.L_4aa8db, label %block_4aa8b9

block_4aa8b9:                                     ; preds = %routine_idivl__ecx.exit
  %loadMem_4aa8b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1649 = getelementptr inbounds %struct.GPR, %struct.GPR* %1648, i32 0, i32 33
  %1650 = getelementptr inbounds %struct.Reg, %struct.Reg* %1649, i32 0, i32 0
  %PC.i3909 = bitcast %union.anon* %1650 to i64*
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1652 = getelementptr inbounds %struct.GPR, %struct.GPR* %1651, i32 0, i32 1
  %1653 = getelementptr inbounds %struct.Reg, %struct.Reg* %1652, i32 0, i32 0
  %RAX.i3910 = bitcast %union.anon* %1653 to i64*
  %1654 = load i64, i64* %PC.i3909
  %1655 = add i64 %1654, 5
  store i64 %1655, i64* %PC.i3909
  store i64 1, i64* %RAX.i3910, align 8
  store %struct.Memory* %loadMem_4aa8b9, %struct.Memory** %MEMORY
  %loadMem_4aa8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 33
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %PC.i3907 = bitcast %union.anon* %1658 to i64*
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1660 = getelementptr inbounds %struct.GPR, %struct.GPR* %1659, i32 0, i32 5
  %1661 = getelementptr inbounds %struct.Reg, %struct.Reg* %1660, i32 0, i32 0
  %RCX.i3908 = bitcast %union.anon* %1661 to i64*
  %1662 = load i64, i64* %PC.i3907
  %1663 = add i64 %1662, 5
  store i64 %1663, i64* %PC.i3907
  store i64 5, i64* %RCX.i3908, align 8
  store %struct.Memory* %loadMem_4aa8be, %struct.Memory** %MEMORY
  %loadMem_4aa8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1665 = getelementptr inbounds %struct.GPR, %struct.GPR* %1664, i32 0, i32 33
  %1666 = getelementptr inbounds %struct.Reg, %struct.Reg* %1665, i32 0, i32 0
  %PC.i3905 = bitcast %union.anon* %1666 to i64*
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1668 = getelementptr inbounds %struct.GPR, %struct.GPR* %1667, i32 0, i32 7
  %1669 = getelementptr inbounds %struct.Reg, %struct.Reg* %1668, i32 0, i32 0
  %RDX.i3906 = bitcast %union.anon* %1669 to i64*
  %1670 = load i64, i64* %PC.i3905
  %1671 = add i64 %1670, 5
  store i64 %1671, i64* %PC.i3905
  store i64 6, i64* %RDX.i3906, align 8
  store %struct.Memory* %loadMem_4aa8c3, %struct.Memory** %MEMORY
  %loadMem_4aa8c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 33
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %PC.i3902 = bitcast %union.anon* %1674 to i64*
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1676 = getelementptr inbounds %struct.GPR, %struct.GPR* %1675, i32 0, i32 7
  %1677 = getelementptr inbounds %struct.Reg, %struct.Reg* %1676, i32 0, i32 0
  %RDX.i3903 = bitcast %union.anon* %1677 to i64*
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1679 = getelementptr inbounds %struct.GPR, %struct.GPR* %1678, i32 0, i32 15
  %1680 = getelementptr inbounds %struct.Reg, %struct.Reg* %1679, i32 0, i32 0
  %RBP.i3904 = bitcast %union.anon* %1680 to i64*
  %1681 = load i64, i64* %RDX.i3903
  %1682 = load i64, i64* %RBP.i3904
  %1683 = sub i64 %1682, 60
  %1684 = load i64, i64* %PC.i3902
  %1685 = add i64 %1684, 3
  store i64 %1685, i64* %PC.i3902
  %1686 = trunc i64 %1681 to i32
  %1687 = inttoptr i64 %1683 to i32*
  %1688 = load i32, i32* %1687
  %1689 = sub i32 %1686, %1688
  %1690 = zext i32 %1689 to i64
  store i64 %1690, i64* %RDX.i3903, align 8
  %1691 = icmp ult i32 %1686, %1688
  %1692 = zext i1 %1691 to i8
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1692, i8* %1693, align 1
  %1694 = and i32 %1689, 255
  %1695 = call i32 @llvm.ctpop.i32(i32 %1694)
  %1696 = trunc i32 %1695 to i8
  %1697 = and i8 %1696, 1
  %1698 = xor i8 %1697, 1
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1698, i8* %1699, align 1
  %1700 = xor i32 %1688, %1686
  %1701 = xor i32 %1700, %1689
  %1702 = lshr i32 %1701, 4
  %1703 = trunc i32 %1702 to i8
  %1704 = and i8 %1703, 1
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1704, i8* %1705, align 1
  %1706 = icmp eq i32 %1689, 0
  %1707 = zext i1 %1706 to i8
  %1708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1707, i8* %1708, align 1
  %1709 = lshr i32 %1689, 31
  %1710 = trunc i32 %1709 to i8
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1710, i8* %1711, align 1
  %1712 = lshr i32 %1686, 31
  %1713 = lshr i32 %1688, 31
  %1714 = xor i32 %1713, %1712
  %1715 = xor i32 %1709, %1712
  %1716 = add i32 %1715, %1714
  %1717 = icmp eq i32 %1716, 2
  %1718 = zext i1 %1717 to i8
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1718, i8* %1719, align 1
  store %struct.Memory* %loadMem_4aa8c8, %struct.Memory** %MEMORY
  %loadMem_4aa8cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 33
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %PC.i3899 = bitcast %union.anon* %1722 to i64*
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1724 = getelementptr inbounds %struct.GPR, %struct.GPR* %1723, i32 0, i32 7
  %1725 = getelementptr inbounds %struct.Reg, %struct.Reg* %1724, i32 0, i32 0
  %EDX.i3900 = bitcast %union.anon* %1725 to i32*
  %1726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1727 = getelementptr inbounds %struct.GPR, %struct.GPR* %1726, i32 0, i32 15
  %1728 = getelementptr inbounds %struct.Reg, %struct.Reg* %1727, i32 0, i32 0
  %RBP.i3901 = bitcast %union.anon* %1728 to i64*
  %1729 = load i64, i64* %RBP.i3901
  %1730 = sub i64 %1729, 76
  %1731 = load i32, i32* %EDX.i3900
  %1732 = zext i32 %1731 to i64
  %1733 = load i64, i64* %PC.i3899
  %1734 = add i64 %1733, 3
  store i64 %1734, i64* %PC.i3899
  %1735 = inttoptr i64 %1730 to i32*
  store i32 %1731, i32* %1735
  store %struct.Memory* %loadMem_4aa8cb, %struct.Memory** %MEMORY
  %loadMem_4aa8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 33
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %PC.i3896 = bitcast %union.anon* %1738 to i64*
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 5
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %RCX.i3897 = bitcast %union.anon* %1741 to i64*
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1743 = getelementptr inbounds %struct.GPR, %struct.GPR* %1742, i32 0, i32 15
  %1744 = getelementptr inbounds %struct.Reg, %struct.Reg* %1743, i32 0, i32 0
  %RBP.i3898 = bitcast %union.anon* %1744 to i64*
  %1745 = load i64, i64* %RCX.i3897
  %1746 = load i64, i64* %RBP.i3898
  %1747 = sub i64 %1746, 60
  %1748 = load i64, i64* %PC.i3896
  %1749 = add i64 %1748, 3
  store i64 %1749, i64* %PC.i3896
  %1750 = trunc i64 %1745 to i32
  %1751 = inttoptr i64 %1747 to i32*
  %1752 = load i32, i32* %1751
  %1753 = sub i32 %1750, %1752
  %1754 = zext i32 %1753 to i64
  store i64 %1754, i64* %RCX.i3897, align 8
  %1755 = icmp ult i32 %1750, %1752
  %1756 = zext i1 %1755 to i8
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1756, i8* %1757, align 1
  %1758 = and i32 %1753, 255
  %1759 = call i32 @llvm.ctpop.i32(i32 %1758)
  %1760 = trunc i32 %1759 to i8
  %1761 = and i8 %1760, 1
  %1762 = xor i8 %1761, 1
  %1763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1762, i8* %1763, align 1
  %1764 = xor i32 %1752, %1750
  %1765 = xor i32 %1764, %1753
  %1766 = lshr i32 %1765, 4
  %1767 = trunc i32 %1766 to i8
  %1768 = and i8 %1767, 1
  %1769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1768, i8* %1769, align 1
  %1770 = icmp eq i32 %1753, 0
  %1771 = zext i1 %1770 to i8
  %1772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1771, i8* %1772, align 1
  %1773 = lshr i32 %1753, 31
  %1774 = trunc i32 %1773 to i8
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1774, i8* %1775, align 1
  %1776 = lshr i32 %1750, 31
  %1777 = lshr i32 %1752, 31
  %1778 = xor i32 %1777, %1776
  %1779 = xor i32 %1773, %1776
  %1780 = add i32 %1779, %1778
  %1781 = icmp eq i32 %1780, 2
  %1782 = zext i1 %1781 to i8
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1782, i8* %1783, align 1
  store %struct.Memory* %loadMem_4aa8ce, %struct.Memory** %MEMORY
  %loadMem_4aa8d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1785 = getelementptr inbounds %struct.GPR, %struct.GPR* %1784, i32 0, i32 33
  %1786 = getelementptr inbounds %struct.Reg, %struct.Reg* %1785, i32 0, i32 0
  %PC.i3893 = bitcast %union.anon* %1786 to i64*
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1788 = getelementptr inbounds %struct.GPR, %struct.GPR* %1787, i32 0, i32 5
  %1789 = getelementptr inbounds %struct.Reg, %struct.Reg* %1788, i32 0, i32 0
  %1790 = bitcast %union.anon* %1789 to %struct.anon.2*
  %CL.i3894 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1790, i32 0, i32 0
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 1
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %RAX.i3895 = bitcast %union.anon* %1793 to i64*
  %1794 = load i64, i64* %RAX.i3895
  %1795 = load i8, i8* %CL.i3894
  %1796 = zext i8 %1795 to i64
  %1797 = load i64, i64* %PC.i3893
  %1798 = add i64 %1797, 2
  store i64 %1798, i64* %PC.i3893
  %1799 = trunc i64 %1796 to i5
  switch i5 %1799, label %1806 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %1800
  ]

; <label>:1800:                                   ; preds = %block_4aa8b9
  %1801 = trunc i64 %1794 to i32
  %1802 = shl i32 %1801, 1
  %1803 = icmp slt i32 %1801, 0
  %1804 = icmp slt i32 %1802, 0
  %1805 = xor i1 %1803, %1804
  br label %1815

; <label>:1806:                                   ; preds = %block_4aa8b9
  %1807 = and i64 %1796, 31
  %1808 = add i64 %1807, 4294967295
  %1809 = and i64 %1794, 4294967295
  %1810 = and i64 %1808, 4294967295
  %1811 = shl i64 %1809, %1810
  %1812 = trunc i64 %1811 to i32
  %1813 = icmp slt i32 %1812, 0
  %1814 = shl i32 %1812, 1
  br label %1815

; <label>:1815:                                   ; preds = %1806, %1800
  %1816 = phi i1 [ %1803, %1800 ], [ %1813, %1806 ]
  %1817 = phi i1 [ %1805, %1800 ], [ false, %1806 ]
  %1818 = phi i32 [ %1802, %1800 ], [ %1814, %1806 ]
  %1819 = zext i32 %1818 to i64
  store i64 %1819, i64* %RAX.i3895, align 8
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1821 = zext i1 %1816 to i8
  store i8 %1821, i8* %1820, align 1
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1823 = and i32 %1818, 254
  %1824 = call i32 @llvm.ctpop.i32(i32 %1823)
  %1825 = trunc i32 %1824 to i8
  %1826 = and i8 %1825, 1
  %1827 = xor i8 %1826, 1
  store i8 %1827, i8* %1822, align 1
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1828, align 1
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1830 = icmp eq i32 %1818, 0
  %1831 = zext i1 %1830 to i8
  store i8 %1831, i8* %1829, align 1
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1833 = lshr i32 %1818, 31
  %1834 = trunc i32 %1833 to i8
  store i8 %1834, i8* %1832, align 1
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1836 = zext i1 %1817 to i8
  store i8 %1836, i8* %1835, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %block_4aa8b9, %1815
  store %struct.Memory* %loadMem_4aa8d1, %struct.Memory** %MEMORY
  %loadMem_4aa8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 33
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %PC.i3890 = bitcast %union.anon* %1839 to i64*
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1841 = getelementptr inbounds %struct.GPR, %struct.GPR* %1840, i32 0, i32 1
  %1842 = getelementptr inbounds %struct.Reg, %struct.Reg* %1841, i32 0, i32 0
  %EAX.i3891 = bitcast %union.anon* %1842 to i32*
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1844 = getelementptr inbounds %struct.GPR, %struct.GPR* %1843, i32 0, i32 15
  %1845 = getelementptr inbounds %struct.Reg, %struct.Reg* %1844, i32 0, i32 0
  %RBP.i3892 = bitcast %union.anon* %1845 to i64*
  %1846 = load i64, i64* %RBP.i3892
  %1847 = sub i64 %1846, 80
  %1848 = load i32, i32* %EAX.i3891
  %1849 = zext i32 %1848 to i64
  %1850 = load i64, i64* %PC.i3890
  %1851 = add i64 %1850, 3
  store i64 %1851, i64* %PC.i3890
  %1852 = inttoptr i64 %1847 to i32*
  store i32 %1848, i32* %1852
  store %struct.Memory* %loadMem_4aa8d3, %struct.Memory** %MEMORY
  %loadMem_4aa8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1854 = getelementptr inbounds %struct.GPR, %struct.GPR* %1853, i32 0, i32 33
  %1855 = getelementptr inbounds %struct.Reg, %struct.Reg* %1854, i32 0, i32 0
  %PC.i3889 = bitcast %union.anon* %1855 to i64*
  %1856 = load i64, i64* %PC.i3889
  %1857 = add i64 %1856, 14
  %1858 = load i64, i64* %PC.i3889
  %1859 = add i64 %1858, 5
  store i64 %1859, i64* %PC.i3889
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1857, i64* %1860, align 8
  store %struct.Memory* %loadMem_4aa8d6, %struct.Memory** %MEMORY
  br label %block_.L_4aa8e4

block_.L_4aa8db:                                  ; preds = %routine_idivl__ecx.exit
  %loadMem_4aa8db = load %struct.Memory*, %struct.Memory** %MEMORY
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 33
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %PC.i3886 = bitcast %union.anon* %1863 to i64*
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 1
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %RAX.i3887 = bitcast %union.anon* %1866 to i64*
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1868 = getelementptr inbounds %struct.GPR, %struct.GPR* %1867, i32 0, i32 15
  %1869 = getelementptr inbounds %struct.Reg, %struct.Reg* %1868, i32 0, i32 0
  %RBP.i3888 = bitcast %union.anon* %1869 to i64*
  %1870 = load i64, i64* %RBP.i3888
  %1871 = sub i64 %1870, 60
  %1872 = load i64, i64* %PC.i3886
  %1873 = add i64 %1872, 3
  store i64 %1873, i64* %PC.i3886
  %1874 = inttoptr i64 %1871 to i32*
  %1875 = load i32, i32* %1874
  %1876 = zext i32 %1875 to i64
  store i64 %1876, i64* %RAX.i3887, align 8
  store %struct.Memory* %loadMem_4aa8db, %struct.Memory** %MEMORY
  %loadMem_4aa8de = load %struct.Memory*, %struct.Memory** %MEMORY
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 33
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %PC.i3884 = bitcast %union.anon* %1879 to i64*
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 1
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %RAX.i3885 = bitcast %union.anon* %1882 to i64*
  %1883 = load i64, i64* %RAX.i3885
  %1884 = load i64, i64* %PC.i3884
  %1885 = add i64 %1884, 3
  store i64 %1885, i64* %PC.i3884
  %1886 = trunc i64 %1883 to i32
  %1887 = sub i32 %1886, 6
  %1888 = zext i32 %1887 to i64
  store i64 %1888, i64* %RAX.i3885, align 8
  %1889 = icmp ult i32 %1886, 6
  %1890 = zext i1 %1889 to i8
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1890, i8* %1891, align 1
  %1892 = and i32 %1887, 255
  %1893 = call i32 @llvm.ctpop.i32(i32 %1892)
  %1894 = trunc i32 %1893 to i8
  %1895 = and i8 %1894, 1
  %1896 = xor i8 %1895, 1
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1896, i8* %1897, align 1
  %1898 = xor i64 6, %1883
  %1899 = trunc i64 %1898 to i32
  %1900 = xor i32 %1899, %1887
  %1901 = lshr i32 %1900, 4
  %1902 = trunc i32 %1901 to i8
  %1903 = and i8 %1902, 1
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1903, i8* %1904, align 1
  %1905 = icmp eq i32 %1887, 0
  %1906 = zext i1 %1905 to i8
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1906, i8* %1907, align 1
  %1908 = lshr i32 %1887, 31
  %1909 = trunc i32 %1908 to i8
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1909, i8* %1910, align 1
  %1911 = lshr i32 %1886, 31
  %1912 = xor i32 %1908, %1911
  %1913 = add i32 %1912, %1911
  %1914 = icmp eq i32 %1913, 2
  %1915 = zext i1 %1914 to i8
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1915, i8* %1916, align 1
  store %struct.Memory* %loadMem_4aa8de, %struct.Memory** %MEMORY
  %loadMem_4aa8e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1918 = getelementptr inbounds %struct.GPR, %struct.GPR* %1917, i32 0, i32 33
  %1919 = getelementptr inbounds %struct.Reg, %struct.Reg* %1918, i32 0, i32 0
  %PC.i3881 = bitcast %union.anon* %1919 to i64*
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1921 = getelementptr inbounds %struct.GPR, %struct.GPR* %1920, i32 0, i32 1
  %1922 = getelementptr inbounds %struct.Reg, %struct.Reg* %1921, i32 0, i32 0
  %EAX.i3882 = bitcast %union.anon* %1922 to i32*
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 15
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %RBP.i3883 = bitcast %union.anon* %1925 to i64*
  %1926 = load i64, i64* %RBP.i3883
  %1927 = sub i64 %1926, 72
  %1928 = load i32, i32* %EAX.i3882
  %1929 = zext i32 %1928 to i64
  %1930 = load i64, i64* %PC.i3881
  %1931 = add i64 %1930, 3
  store i64 %1931, i64* %PC.i3881
  %1932 = inttoptr i64 %1927 to i32*
  store i32 %1928, i32* %1932
  store %struct.Memory* %loadMem_4aa8e1, %struct.Memory** %MEMORY
  br label %block_.L_4aa8e4

block_.L_4aa8e4:                                  ; preds = %block_.L_4aa8db, %routine_shll__cl___eax.exit
  %loadMem_4aa8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1934 = getelementptr inbounds %struct.GPR, %struct.GPR* %1933, i32 0, i32 33
  %1935 = getelementptr inbounds %struct.Reg, %struct.Reg* %1934, i32 0, i32 0
  %PC.i3879 = bitcast %union.anon* %1935 to i64*
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1937 = getelementptr inbounds %struct.GPR, %struct.GPR* %1936, i32 0, i32 1
  %1938 = getelementptr inbounds %struct.Reg, %struct.Reg* %1937, i32 0, i32 0
  %RAX.i3880 = bitcast %union.anon* %1938 to i64*
  %1939 = load i64, i64* %PC.i3879
  %1940 = add i64 %1939, 8
  store i64 %1940, i64* %PC.i3879
  %1941 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1941, i64* %RAX.i3880, align 8
  store %struct.Memory* %loadMem_4aa8e4, %struct.Memory** %MEMORY
  %loadMem_4aa8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 33
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %PC.i3877 = bitcast %union.anon* %1944 to i64*
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1946 = getelementptr inbounds %struct.GPR, %struct.GPR* %1945, i32 0, i32 1
  %1947 = getelementptr inbounds %struct.Reg, %struct.Reg* %1946, i32 0, i32 0
  %RAX.i3878 = bitcast %union.anon* %1947 to i64*
  %1948 = load i64, i64* %RAX.i3878
  %1949 = add i64 %1948, 24
  %1950 = load i64, i64* %PC.i3877
  %1951 = add i64 %1950, 4
  store i64 %1951, i64* %PC.i3877
  %1952 = inttoptr i64 %1949 to i32*
  %1953 = load i32, i32* %1952
  %1954 = sub i32 %1953, 2
  %1955 = icmp ult i32 %1953, 2
  %1956 = zext i1 %1955 to i8
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1956, i8* %1957, align 1
  %1958 = and i32 %1954, 255
  %1959 = call i32 @llvm.ctpop.i32(i32 %1958)
  %1960 = trunc i32 %1959 to i8
  %1961 = and i8 %1960, 1
  %1962 = xor i8 %1961, 1
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1962, i8* %1963, align 1
  %1964 = xor i32 %1953, 2
  %1965 = xor i32 %1964, %1954
  %1966 = lshr i32 %1965, 4
  %1967 = trunc i32 %1966 to i8
  %1968 = and i8 %1967, 1
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1968, i8* %1969, align 1
  %1970 = icmp eq i32 %1954, 0
  %1971 = zext i1 %1970 to i8
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1971, i8* %1972, align 1
  %1973 = lshr i32 %1954, 31
  %1974 = trunc i32 %1973 to i8
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1974, i8* %1975, align 1
  %1976 = lshr i32 %1953, 31
  %1977 = xor i32 %1973, %1976
  %1978 = add i32 %1977, %1976
  %1979 = icmp eq i32 %1978, 2
  %1980 = zext i1 %1979 to i8
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1980, i8* %1981, align 1
  store %struct.Memory* %loadMem_4aa8ec, %struct.Memory** %MEMORY
  %loadMem_4aa8f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 33
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %PC.i3876 = bitcast %union.anon* %1984 to i64*
  %1985 = load i64, i64* %PC.i3876
  %1986 = add i64 %1985, 60
  %1987 = load i64, i64* %PC.i3876
  %1988 = add i64 %1987, 6
  %1989 = load i64, i64* %PC.i3876
  %1990 = add i64 %1989, 6
  store i64 %1990, i64* %PC.i3876
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1992 = load i8, i8* %1991, align 1
  %1993 = icmp eq i8 %1992, 0
  %1994 = zext i1 %1993 to i8
  store i8 %1994, i8* %BRANCH_TAKEN, align 1
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1996 = select i1 %1993, i64 %1986, i64 %1988
  store i64 %1996, i64* %1995, align 8
  store %struct.Memory* %loadMem_4aa8f0, %struct.Memory** %MEMORY
  %loadBr_4aa8f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aa8f0 = icmp eq i8 %loadBr_4aa8f0, 1
  br i1 %cmpBr_4aa8f0, label %block_.L_4aa92c, label %block_4aa8f6

block_4aa8f6:                                     ; preds = %block_.L_4aa8e4
  %loadMem_4aa8f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1998 = getelementptr inbounds %struct.GPR, %struct.GPR* %1997, i32 0, i32 33
  %1999 = getelementptr inbounds %struct.Reg, %struct.Reg* %1998, i32 0, i32 0
  %PC.i3874 = bitcast %union.anon* %1999 to i64*
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2001 = getelementptr inbounds %struct.GPR, %struct.GPR* %2000, i32 0, i32 1
  %2002 = getelementptr inbounds %struct.Reg, %struct.Reg* %2001, i32 0, i32 0
  %RAX.i3875 = bitcast %union.anon* %2002 to i64*
  %2003 = load i64, i64* %PC.i3874
  %2004 = add i64 %2003, 5
  store i64 %2004, i64* %PC.i3874
  store i64 3, i64* %RAX.i3875, align 8
  store %struct.Memory* %loadMem_4aa8f6, %struct.Memory** %MEMORY
  %loadMem_4aa8fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2006 = getelementptr inbounds %struct.GPR, %struct.GPR* %2005, i32 0, i32 33
  %2007 = getelementptr inbounds %struct.Reg, %struct.Reg* %2006, i32 0, i32 0
  %PC.i3872 = bitcast %union.anon* %2007 to i64*
  %2008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2009 = getelementptr inbounds %struct.GPR, %struct.GPR* %2008, i32 0, i32 5
  %2010 = getelementptr inbounds %struct.Reg, %struct.Reg* %2009, i32 0, i32 0
  %RCX.i3873 = bitcast %union.anon* %2010 to i64*
  %2011 = load i64, i64* %PC.i3872
  %2012 = add i64 %2011, 5
  store i64 %2012, i64* %PC.i3872
  store i64 1, i64* %RCX.i3873, align 8
  store %struct.Memory* %loadMem_4aa8fb, %struct.Memory** %MEMORY
  %loadMem_4aa900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 33
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %PC.i3869 = bitcast %union.anon* %2015 to i64*
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2017 = getelementptr inbounds %struct.GPR, %struct.GPR* %2016, i32 0, i32 7
  %2018 = getelementptr inbounds %struct.Reg, %struct.Reg* %2017, i32 0, i32 0
  %RDX.i3870 = bitcast %union.anon* %2018 to i64*
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2020 = getelementptr inbounds %struct.GPR, %struct.GPR* %2019, i32 0, i32 15
  %2021 = getelementptr inbounds %struct.Reg, %struct.Reg* %2020, i32 0, i32 0
  %RBP.i3871 = bitcast %union.anon* %2021 to i64*
  %2022 = load i64, i64* %RBP.i3871
  %2023 = sub i64 %2022, 68
  %2024 = load i64, i64* %PC.i3869
  %2025 = add i64 %2024, 3
  store i64 %2025, i64* %PC.i3869
  %2026 = inttoptr i64 %2023 to i32*
  %2027 = load i32, i32* %2026
  %2028 = zext i32 %2027 to i64
  store i64 %2028, i64* %RDX.i3870, align 8
  store %struct.Memory* %loadMem_4aa900, %struct.Memory** %MEMORY
  %loadMem_4aa903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 33
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %PC.i3866 = bitcast %union.anon* %2031 to i64*
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2033 = getelementptr inbounds %struct.GPR, %struct.GPR* %2032, i32 0, i32 5
  %2034 = getelementptr inbounds %struct.Reg, %struct.Reg* %2033, i32 0, i32 0
  %ECX.i3867 = bitcast %union.anon* %2034 to i32*
  %2035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2036 = getelementptr inbounds %struct.GPR, %struct.GPR* %2035, i32 0, i32 15
  %2037 = getelementptr inbounds %struct.Reg, %struct.Reg* %2036, i32 0, i32 0
  %RBP.i3868 = bitcast %union.anon* %2037 to i64*
  %2038 = load i64, i64* %RBP.i3868
  %2039 = sub i64 %2038, 684
  %2040 = load i32, i32* %ECX.i3867
  %2041 = zext i32 %2040 to i64
  %2042 = load i64, i64* %PC.i3866
  %2043 = add i64 %2042, 6
  store i64 %2043, i64* %PC.i3866
  %2044 = inttoptr i64 %2039 to i32*
  store i32 %2040, i32* %2044
  store %struct.Memory* %loadMem_4aa903, %struct.Memory** %MEMORY
  %loadMem_4aa909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2046 = getelementptr inbounds %struct.GPR, %struct.GPR* %2045, i32 0, i32 33
  %2047 = getelementptr inbounds %struct.Reg, %struct.Reg* %2046, i32 0, i32 0
  %PC.i3863 = bitcast %union.anon* %2047 to i64*
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2049 = getelementptr inbounds %struct.GPR, %struct.GPR* %2048, i32 0, i32 7
  %2050 = getelementptr inbounds %struct.Reg, %struct.Reg* %2049, i32 0, i32 0
  %EDX.i3864 = bitcast %union.anon* %2050 to i32*
  %2051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2052 = getelementptr inbounds %struct.GPR, %struct.GPR* %2051, i32 0, i32 5
  %2053 = getelementptr inbounds %struct.Reg, %struct.Reg* %2052, i32 0, i32 0
  %RCX.i3865 = bitcast %union.anon* %2053 to i64*
  %2054 = load i32, i32* %EDX.i3864
  %2055 = zext i32 %2054 to i64
  %2056 = load i64, i64* %PC.i3863
  %2057 = add i64 %2056, 2
  store i64 %2057, i64* %PC.i3863
  %2058 = and i64 %2055, 4294967295
  store i64 %2058, i64* %RCX.i3865, align 8
  store %struct.Memory* %loadMem_4aa909, %struct.Memory** %MEMORY
  %loadMem_4aa90b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2060 = getelementptr inbounds %struct.GPR, %struct.GPR* %2059, i32 0, i32 33
  %2061 = getelementptr inbounds %struct.Reg, %struct.Reg* %2060, i32 0, i32 0
  %PC.i3860 = bitcast %union.anon* %2061 to i64*
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2063 = getelementptr inbounds %struct.GPR, %struct.GPR* %2062, i32 0, i32 7
  %2064 = getelementptr inbounds %struct.Reg, %struct.Reg* %2063, i32 0, i32 0
  %RDX.i3861 = bitcast %union.anon* %2064 to i64*
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 15
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %RBP.i3862 = bitcast %union.anon* %2067 to i64*
  %2068 = load i64, i64* %RBP.i3862
  %2069 = sub i64 %2068, 684
  %2070 = load i64, i64* %PC.i3860
  %2071 = add i64 %2070, 6
  store i64 %2071, i64* %PC.i3860
  %2072 = inttoptr i64 %2069 to i32*
  %2073 = load i32, i32* %2072
  %2074 = zext i32 %2073 to i64
  store i64 %2074, i64* %RDX.i3861, align 8
  store %struct.Memory* %loadMem_4aa90b, %struct.Memory** %MEMORY
  %loadMem_4aa911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 33
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %PC.i3856 = bitcast %union.anon* %2077 to i64*
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2079 = getelementptr inbounds %struct.GPR, %struct.GPR* %2078, i32 0, i32 5
  %2080 = getelementptr inbounds %struct.Reg, %struct.Reg* %2079, i32 0, i32 0
  %2081 = bitcast %union.anon* %2080 to %struct.anon.2*
  %CL.i3857 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2081, i32 0, i32 0
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2083 = getelementptr inbounds %struct.GPR, %struct.GPR* %2082, i32 0, i32 7
  %2084 = getelementptr inbounds %struct.Reg, %struct.Reg* %2083, i32 0, i32 0
  %RDX.i3858 = bitcast %union.anon* %2084 to i64*
  %2085 = load i64, i64* %RDX.i3858
  %2086 = load i8, i8* %CL.i3857
  %2087 = zext i8 %2086 to i64
  %2088 = load i64, i64* %PC.i3856
  %2089 = add i64 %2088, 2
  store i64 %2089, i64* %PC.i3856
  %2090 = trunc i64 %2087 to i5
  switch i5 %2090, label %2097 [
    i5 0, label %routine_shll__cl___edx.exit3859
    i5 1, label %2091
  ]

; <label>:2091:                                   ; preds = %block_4aa8f6
  %2092 = trunc i64 %2085 to i32
  %2093 = shl i32 %2092, 1
  %2094 = icmp slt i32 %2092, 0
  %2095 = icmp slt i32 %2093, 0
  %2096 = xor i1 %2094, %2095
  br label %2106

; <label>:2097:                                   ; preds = %block_4aa8f6
  %2098 = and i64 %2087, 31
  %2099 = add i64 %2098, 4294967295
  %2100 = and i64 %2085, 4294967295
  %2101 = and i64 %2099, 4294967295
  %2102 = shl i64 %2100, %2101
  %2103 = trunc i64 %2102 to i32
  %2104 = icmp slt i32 %2103, 0
  %2105 = shl i32 %2103, 1
  br label %2106

; <label>:2106:                                   ; preds = %2097, %2091
  %2107 = phi i1 [ %2094, %2091 ], [ %2104, %2097 ]
  %2108 = phi i1 [ %2096, %2091 ], [ false, %2097 ]
  %2109 = phi i32 [ %2093, %2091 ], [ %2105, %2097 ]
  %2110 = zext i32 %2109 to i64
  store i64 %2110, i64* %RDX.i3858, align 8
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2112 = zext i1 %2107 to i8
  store i8 %2112, i8* %2111, align 1
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2114 = and i32 %2109, 254
  %2115 = call i32 @llvm.ctpop.i32(i32 %2114)
  %2116 = trunc i32 %2115 to i8
  %2117 = and i8 %2116, 1
  %2118 = xor i8 %2117, 1
  store i8 %2118, i8* %2113, align 1
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2119, align 1
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2121 = icmp eq i32 %2109, 0
  %2122 = zext i1 %2121 to i8
  store i8 %2122, i8* %2120, align 1
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2124 = lshr i32 %2109, 31
  %2125 = trunc i32 %2124 to i8
  store i8 %2125, i8* %2123, align 1
  %2126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2127 = zext i1 %2108 to i8
  store i8 %2127, i8* %2126, align 1
  br label %routine_shll__cl___edx.exit3859

routine_shll__cl___edx.exit3859:                  ; preds = %block_4aa8f6, %2106
  store %struct.Memory* %loadMem_4aa911, %struct.Memory** %MEMORY
  %loadMem_4aa913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 33
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %PC.i3853 = bitcast %union.anon* %2130 to i64*
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 1
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %EAX.i3854 = bitcast %union.anon* %2133 to i32*
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2135 = getelementptr inbounds %struct.GPR, %struct.GPR* %2134, i32 0, i32 15
  %2136 = getelementptr inbounds %struct.Reg, %struct.Reg* %2135, i32 0, i32 0
  %RBP.i3855 = bitcast %union.anon* %2136 to i64*
  %2137 = load i64, i64* %RBP.i3855
  %2138 = sub i64 %2137, 688
  %2139 = load i32, i32* %EAX.i3854
  %2140 = zext i32 %2139 to i64
  %2141 = load i64, i64* %PC.i3853
  %2142 = add i64 %2141, 6
  store i64 %2142, i64* %PC.i3853
  %2143 = inttoptr i64 %2138 to i32*
  store i32 %2139, i32* %2143
  store %struct.Memory* %loadMem_4aa913, %struct.Memory** %MEMORY
  %loadMem_4aa919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2145 = getelementptr inbounds %struct.GPR, %struct.GPR* %2144, i32 0, i32 33
  %2146 = getelementptr inbounds %struct.Reg, %struct.Reg* %2145, i32 0, i32 0
  %PC.i3850 = bitcast %union.anon* %2146 to i64*
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2148 = getelementptr inbounds %struct.GPR, %struct.GPR* %2147, i32 0, i32 7
  %2149 = getelementptr inbounds %struct.Reg, %struct.Reg* %2148, i32 0, i32 0
  %EDX.i3851 = bitcast %union.anon* %2149 to i32*
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 1
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %RAX.i3852 = bitcast %union.anon* %2152 to i64*
  %2153 = load i32, i32* %EDX.i3851
  %2154 = zext i32 %2153 to i64
  %2155 = load i64, i64* %PC.i3850
  %2156 = add i64 %2155, 2
  store i64 %2156, i64* %PC.i3850
  %2157 = and i64 %2154, 4294967295
  store i64 %2157, i64* %RAX.i3852, align 8
  store %struct.Memory* %loadMem_4aa919, %struct.Memory** %MEMORY
  %loadMem_4aa91b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2159 = getelementptr inbounds %struct.GPR, %struct.GPR* %2158, i32 0, i32 33
  %2160 = getelementptr inbounds %struct.Reg, %struct.Reg* %2159, i32 0, i32 0
  %PC.i3849 = bitcast %union.anon* %2160 to i64*
  %2161 = load i64, i64* %PC.i3849
  %2162 = add i64 %2161, 1
  store i64 %2162, i64* %PC.i3849
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2165 = bitcast %union.anon* %2164 to i32*
  %2166 = load i32, i32* %2165, align 8
  %2167 = sext i32 %2166 to i64
  %2168 = lshr i64 %2167, 32
  store i64 %2168, i64* %2163, align 8
  store %struct.Memory* %loadMem_4aa91b, %struct.Memory** %MEMORY
  %loadMem_4aa91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2170 = getelementptr inbounds %struct.GPR, %struct.GPR* %2169, i32 0, i32 33
  %2171 = getelementptr inbounds %struct.Reg, %struct.Reg* %2170, i32 0, i32 0
  %PC.i3846 = bitcast %union.anon* %2171 to i64*
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2173 = getelementptr inbounds %struct.GPR, %struct.GPR* %2172, i32 0, i32 9
  %2174 = getelementptr inbounds %struct.Reg, %struct.Reg* %2173, i32 0, i32 0
  %RSI.i3847 = bitcast %union.anon* %2174 to i64*
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 15
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %RBP.i3848 = bitcast %union.anon* %2177 to i64*
  %2178 = load i64, i64* %RBP.i3848
  %2179 = sub i64 %2178, 688
  %2180 = load i64, i64* %PC.i3846
  %2181 = add i64 %2180, 6
  store i64 %2181, i64* %PC.i3846
  %2182 = inttoptr i64 %2179 to i32*
  %2183 = load i32, i32* %2182
  %2184 = zext i32 %2183 to i64
  store i64 %2184, i64* %RSI.i3847, align 8
  store %struct.Memory* %loadMem_4aa91c, %struct.Memory** %MEMORY
  %loadMem_4aa922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 33
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %PC.i3841 = bitcast %union.anon* %2187 to i64*
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2189 = getelementptr inbounds %struct.GPR, %struct.GPR* %2188, i32 0, i32 9
  %2190 = getelementptr inbounds %struct.Reg, %struct.Reg* %2189, i32 0, i32 0
  %ESI.i3842 = bitcast %union.anon* %2190 to i32*
  %2191 = load i32, i32* %ESI.i3842
  %2192 = zext i32 %2191 to i64
  %2193 = load i64, i64* %PC.i3841
  %2194 = add i64 %2193, 2
  store i64 %2194, i64* %PC.i3841
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2196 = bitcast %union.anon* %2195 to i32*
  %2197 = load i32, i32* %2196, align 8
  %2198 = zext i32 %2197 to i64
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2200 = bitcast %union.anon* %2199 to i32*
  %2201 = load i32, i32* %2200, align 8
  %2202 = zext i32 %2201 to i64
  %2203 = shl i64 %2192, 32
  %2204 = ashr exact i64 %2203, 32
  %2205 = shl i64 %2202, 32
  %2206 = or i64 %2205, %2198
  %2207 = sdiv i64 %2206, %2204
  %2208 = shl i64 %2207, 32
  %2209 = ashr exact i64 %2208, 32
  %2210 = icmp eq i64 %2207, %2209
  br i1 %2210, label %2215, label %2211

; <label>:2211:                                   ; preds = %routine_shll__cl___edx.exit3859
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2213 = load i64, i64* %2212, align 8
  %2214 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2213, %struct.Memory* %loadMem_4aa922)
  br label %routine_idivl__esi.exit3843

; <label>:2215:                                   ; preds = %routine_shll__cl___edx.exit3859
  %2216 = srem i64 %2206, %2204
  %2217 = getelementptr inbounds %union.anon, %union.anon* %2195, i64 0, i32 0
  %2218 = and i64 %2207, 4294967295
  store i64 %2218, i64* %2217, align 8
  %2219 = getelementptr inbounds %union.anon, %union.anon* %2199, i64 0, i32 0
  %2220 = and i64 %2216, 4294967295
  store i64 %2220, i64* %2219, align 8
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2221, align 1
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2222, align 1
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2223, align 1
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2224, align 1
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2225, align 1
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2226, align 1
  br label %routine_idivl__esi.exit3843

routine_idivl__esi.exit3843:                      ; preds = %2211, %2215
  %2227 = phi %struct.Memory* [ %2214, %2211 ], [ %loadMem_4aa922, %2215 ]
  store %struct.Memory* %2227, %struct.Memory** %MEMORY
  %loadMem_4aa924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2229 = getelementptr inbounds %struct.GPR, %struct.GPR* %2228, i32 0, i32 33
  %2230 = getelementptr inbounds %struct.Reg, %struct.Reg* %2229, i32 0, i32 0
  %PC.i3838 = bitcast %union.anon* %2230 to i64*
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2232 = getelementptr inbounds %struct.GPR, %struct.GPR* %2231, i32 0, i32 1
  %2233 = getelementptr inbounds %struct.Reg, %struct.Reg* %2232, i32 0, i32 0
  %EAX.i3839 = bitcast %union.anon* %2233 to i32*
  %2234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2235 = getelementptr inbounds %struct.GPR, %struct.GPR* %2234, i32 0, i32 15
  %2236 = getelementptr inbounds %struct.Reg, %struct.Reg* %2235, i32 0, i32 0
  %RBP.i3840 = bitcast %union.anon* %2236 to i64*
  %2237 = load i64, i64* %RBP.i3840
  %2238 = sub i64 %2237, 40
  %2239 = load i32, i32* %EAX.i3839
  %2240 = zext i32 %2239 to i64
  %2241 = load i64, i64* %PC.i3838
  %2242 = add i64 %2241, 3
  store i64 %2242, i64* %PC.i3838
  %2243 = inttoptr i64 %2238 to i32*
  store i32 %2239, i32* %2243
  store %struct.Memory* %loadMem_4aa924, %struct.Memory** %MEMORY
  %loadMem_4aa927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2245 = getelementptr inbounds %struct.GPR, %struct.GPR* %2244, i32 0, i32 33
  %2246 = getelementptr inbounds %struct.Reg, %struct.Reg* %2245, i32 0, i32 0
  %PC.i3837 = bitcast %union.anon* %2246 to i64*
  %2247 = load i64, i64* %PC.i3837
  %2248 = add i64 %2247, 54
  %2249 = load i64, i64* %PC.i3837
  %2250 = add i64 %2249, 5
  store i64 %2250, i64* %PC.i3837
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2248, i64* %2251, align 8
  store %struct.Memory* %loadMem_4aa927, %struct.Memory** %MEMORY
  br label %block_.L_4aa95d

block_.L_4aa92c:                                  ; preds = %block_.L_4aa8e4
  %loadMem_4aa92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2253 = getelementptr inbounds %struct.GPR, %struct.GPR* %2252, i32 0, i32 33
  %2254 = getelementptr inbounds %struct.Reg, %struct.Reg* %2253, i32 0, i32 0
  %PC.i3835 = bitcast %union.anon* %2254 to i64*
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2256 = getelementptr inbounds %struct.GPR, %struct.GPR* %2255, i32 0, i32 1
  %2257 = getelementptr inbounds %struct.Reg, %struct.Reg* %2256, i32 0, i32 0
  %RAX.i3836 = bitcast %union.anon* %2257 to i64*
  %2258 = load i64, i64* %PC.i3835
  %2259 = add i64 %2258, 5
  store i64 %2259, i64* %PC.i3835
  store i64 6, i64* %RAX.i3836, align 8
  store %struct.Memory* %loadMem_4aa92c, %struct.Memory** %MEMORY
  %loadMem_4aa931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 33
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %PC.i3833 = bitcast %union.anon* %2262 to i64*
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 5
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %RCX.i3834 = bitcast %union.anon* %2265 to i64*
  %2266 = load i64, i64* %PC.i3833
  %2267 = add i64 %2266, 5
  store i64 %2267, i64* %PC.i3833
  store i64 1, i64* %RCX.i3834, align 8
  store %struct.Memory* %loadMem_4aa931, %struct.Memory** %MEMORY
  %loadMem_4aa936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2269 = getelementptr inbounds %struct.GPR, %struct.GPR* %2268, i32 0, i32 33
  %2270 = getelementptr inbounds %struct.Reg, %struct.Reg* %2269, i32 0, i32 0
  %PC.i3830 = bitcast %union.anon* %2270 to i64*
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2272 = getelementptr inbounds %struct.GPR, %struct.GPR* %2271, i32 0, i32 7
  %2273 = getelementptr inbounds %struct.Reg, %struct.Reg* %2272, i32 0, i32 0
  %RDX.i3831 = bitcast %union.anon* %2273 to i64*
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2275 = getelementptr inbounds %struct.GPR, %struct.GPR* %2274, i32 0, i32 15
  %2276 = getelementptr inbounds %struct.Reg, %struct.Reg* %2275, i32 0, i32 0
  %RBP.i3832 = bitcast %union.anon* %2276 to i64*
  %2277 = load i64, i64* %RBP.i3832
  %2278 = sub i64 %2277, 68
  %2279 = load i64, i64* %PC.i3830
  %2280 = add i64 %2279, 3
  store i64 %2280, i64* %PC.i3830
  %2281 = inttoptr i64 %2278 to i32*
  %2282 = load i32, i32* %2281
  %2283 = zext i32 %2282 to i64
  store i64 %2283, i64* %RDX.i3831, align 8
  store %struct.Memory* %loadMem_4aa936, %struct.Memory** %MEMORY
  %loadMem_4aa939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2285 = getelementptr inbounds %struct.GPR, %struct.GPR* %2284, i32 0, i32 33
  %2286 = getelementptr inbounds %struct.Reg, %struct.Reg* %2285, i32 0, i32 0
  %PC.i3827 = bitcast %union.anon* %2286 to i64*
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2288 = getelementptr inbounds %struct.GPR, %struct.GPR* %2287, i32 0, i32 5
  %2289 = getelementptr inbounds %struct.Reg, %struct.Reg* %2288, i32 0, i32 0
  %ECX.i3828 = bitcast %union.anon* %2289 to i32*
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2291 = getelementptr inbounds %struct.GPR, %struct.GPR* %2290, i32 0, i32 15
  %2292 = getelementptr inbounds %struct.Reg, %struct.Reg* %2291, i32 0, i32 0
  %RBP.i3829 = bitcast %union.anon* %2292 to i64*
  %2293 = load i64, i64* %RBP.i3829
  %2294 = sub i64 %2293, 692
  %2295 = load i32, i32* %ECX.i3828
  %2296 = zext i32 %2295 to i64
  %2297 = load i64, i64* %PC.i3827
  %2298 = add i64 %2297, 6
  store i64 %2298, i64* %PC.i3827
  %2299 = inttoptr i64 %2294 to i32*
  store i32 %2295, i32* %2299
  store %struct.Memory* %loadMem_4aa939, %struct.Memory** %MEMORY
  %loadMem_4aa93f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2301 = getelementptr inbounds %struct.GPR, %struct.GPR* %2300, i32 0, i32 33
  %2302 = getelementptr inbounds %struct.Reg, %struct.Reg* %2301, i32 0, i32 0
  %PC.i3824 = bitcast %union.anon* %2302 to i64*
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2304 = getelementptr inbounds %struct.GPR, %struct.GPR* %2303, i32 0, i32 7
  %2305 = getelementptr inbounds %struct.Reg, %struct.Reg* %2304, i32 0, i32 0
  %EDX.i3825 = bitcast %union.anon* %2305 to i32*
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2307 = getelementptr inbounds %struct.GPR, %struct.GPR* %2306, i32 0, i32 5
  %2308 = getelementptr inbounds %struct.Reg, %struct.Reg* %2307, i32 0, i32 0
  %RCX.i3826 = bitcast %union.anon* %2308 to i64*
  %2309 = load i32, i32* %EDX.i3825
  %2310 = zext i32 %2309 to i64
  %2311 = load i64, i64* %PC.i3824
  %2312 = add i64 %2311, 2
  store i64 %2312, i64* %PC.i3824
  %2313 = and i64 %2310, 4294967295
  store i64 %2313, i64* %RCX.i3826, align 8
  store %struct.Memory* %loadMem_4aa93f, %struct.Memory** %MEMORY
  %loadMem_4aa941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2315 = getelementptr inbounds %struct.GPR, %struct.GPR* %2314, i32 0, i32 33
  %2316 = getelementptr inbounds %struct.Reg, %struct.Reg* %2315, i32 0, i32 0
  %PC.i3821 = bitcast %union.anon* %2316 to i64*
  %2317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2318 = getelementptr inbounds %struct.GPR, %struct.GPR* %2317, i32 0, i32 7
  %2319 = getelementptr inbounds %struct.Reg, %struct.Reg* %2318, i32 0, i32 0
  %RDX.i3822 = bitcast %union.anon* %2319 to i64*
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2321 = getelementptr inbounds %struct.GPR, %struct.GPR* %2320, i32 0, i32 15
  %2322 = getelementptr inbounds %struct.Reg, %struct.Reg* %2321, i32 0, i32 0
  %RBP.i3823 = bitcast %union.anon* %2322 to i64*
  %2323 = load i64, i64* %RBP.i3823
  %2324 = sub i64 %2323, 692
  %2325 = load i64, i64* %PC.i3821
  %2326 = add i64 %2325, 6
  store i64 %2326, i64* %PC.i3821
  %2327 = inttoptr i64 %2324 to i32*
  %2328 = load i32, i32* %2327
  %2329 = zext i32 %2328 to i64
  store i64 %2329, i64* %RDX.i3822, align 8
  store %struct.Memory* %loadMem_4aa941, %struct.Memory** %MEMORY
  %loadMem_4aa947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 33
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %PC.i3818 = bitcast %union.anon* %2332 to i64*
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 5
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %2336 = bitcast %union.anon* %2335 to %struct.anon.2*
  %CL.i3819 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2336, i32 0, i32 0
  %2337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2338 = getelementptr inbounds %struct.GPR, %struct.GPR* %2337, i32 0, i32 7
  %2339 = getelementptr inbounds %struct.Reg, %struct.Reg* %2338, i32 0, i32 0
  %RDX.i3820 = bitcast %union.anon* %2339 to i64*
  %2340 = load i64, i64* %RDX.i3820
  %2341 = load i8, i8* %CL.i3819
  %2342 = zext i8 %2341 to i64
  %2343 = load i64, i64* %PC.i3818
  %2344 = add i64 %2343, 2
  store i64 %2344, i64* %PC.i3818
  %2345 = trunc i64 %2342 to i5
  switch i5 %2345, label %2352 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %2346
  ]

; <label>:2346:                                   ; preds = %block_.L_4aa92c
  %2347 = trunc i64 %2340 to i32
  %2348 = shl i32 %2347, 1
  %2349 = icmp slt i32 %2347, 0
  %2350 = icmp slt i32 %2348, 0
  %2351 = xor i1 %2349, %2350
  br label %2361

; <label>:2352:                                   ; preds = %block_.L_4aa92c
  %2353 = and i64 %2342, 31
  %2354 = add i64 %2353, 4294967295
  %2355 = and i64 %2340, 4294967295
  %2356 = and i64 %2354, 4294967295
  %2357 = shl i64 %2355, %2356
  %2358 = trunc i64 %2357 to i32
  %2359 = icmp slt i32 %2358, 0
  %2360 = shl i32 %2358, 1
  br label %2361

; <label>:2361:                                   ; preds = %2352, %2346
  %2362 = phi i1 [ %2349, %2346 ], [ %2359, %2352 ]
  %2363 = phi i1 [ %2351, %2346 ], [ false, %2352 ]
  %2364 = phi i32 [ %2348, %2346 ], [ %2360, %2352 ]
  %2365 = zext i32 %2364 to i64
  store i64 %2365, i64* %RDX.i3820, align 8
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2367 = zext i1 %2362 to i8
  store i8 %2367, i8* %2366, align 1
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2369 = and i32 %2364, 254
  %2370 = call i32 @llvm.ctpop.i32(i32 %2369)
  %2371 = trunc i32 %2370 to i8
  %2372 = and i8 %2371, 1
  %2373 = xor i8 %2372, 1
  store i8 %2373, i8* %2368, align 1
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2374, align 1
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2376 = icmp eq i32 %2364, 0
  %2377 = zext i1 %2376 to i8
  store i8 %2377, i8* %2375, align 1
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2379 = lshr i32 %2364, 31
  %2380 = trunc i32 %2379 to i8
  store i8 %2380, i8* %2378, align 1
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2382 = zext i1 %2363 to i8
  store i8 %2382, i8* %2381, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %block_.L_4aa92c, %2361
  store %struct.Memory* %loadMem_4aa947, %struct.Memory** %MEMORY
  %loadMem_4aa949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 33
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %PC.i3815 = bitcast %union.anon* %2385 to i64*
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2387 = getelementptr inbounds %struct.GPR, %struct.GPR* %2386, i32 0, i32 1
  %2388 = getelementptr inbounds %struct.Reg, %struct.Reg* %2387, i32 0, i32 0
  %EAX.i3816 = bitcast %union.anon* %2388 to i32*
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2390 = getelementptr inbounds %struct.GPR, %struct.GPR* %2389, i32 0, i32 15
  %2391 = getelementptr inbounds %struct.Reg, %struct.Reg* %2390, i32 0, i32 0
  %RBP.i3817 = bitcast %union.anon* %2391 to i64*
  %2392 = load i64, i64* %RBP.i3817
  %2393 = sub i64 %2392, 696
  %2394 = load i32, i32* %EAX.i3816
  %2395 = zext i32 %2394 to i64
  %2396 = load i64, i64* %PC.i3815
  %2397 = add i64 %2396, 6
  store i64 %2397, i64* %PC.i3815
  %2398 = inttoptr i64 %2393 to i32*
  store i32 %2394, i32* %2398
  store %struct.Memory* %loadMem_4aa949, %struct.Memory** %MEMORY
  %loadMem_4aa94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2400 = getelementptr inbounds %struct.GPR, %struct.GPR* %2399, i32 0, i32 33
  %2401 = getelementptr inbounds %struct.Reg, %struct.Reg* %2400, i32 0, i32 0
  %PC.i3812 = bitcast %union.anon* %2401 to i64*
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2403 = getelementptr inbounds %struct.GPR, %struct.GPR* %2402, i32 0, i32 7
  %2404 = getelementptr inbounds %struct.Reg, %struct.Reg* %2403, i32 0, i32 0
  %EDX.i3813 = bitcast %union.anon* %2404 to i32*
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2406 = getelementptr inbounds %struct.GPR, %struct.GPR* %2405, i32 0, i32 1
  %2407 = getelementptr inbounds %struct.Reg, %struct.Reg* %2406, i32 0, i32 0
  %RAX.i3814 = bitcast %union.anon* %2407 to i64*
  %2408 = load i32, i32* %EDX.i3813
  %2409 = zext i32 %2408 to i64
  %2410 = load i64, i64* %PC.i3812
  %2411 = add i64 %2410, 2
  store i64 %2411, i64* %PC.i3812
  %2412 = and i64 %2409, 4294967295
  store i64 %2412, i64* %RAX.i3814, align 8
  store %struct.Memory* %loadMem_4aa94f, %struct.Memory** %MEMORY
  %loadMem_4aa951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2414 = getelementptr inbounds %struct.GPR, %struct.GPR* %2413, i32 0, i32 33
  %2415 = getelementptr inbounds %struct.Reg, %struct.Reg* %2414, i32 0, i32 0
  %PC.i3811 = bitcast %union.anon* %2415 to i64*
  %2416 = load i64, i64* %PC.i3811
  %2417 = add i64 %2416, 1
  store i64 %2417, i64* %PC.i3811
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2420 = bitcast %union.anon* %2419 to i32*
  %2421 = load i32, i32* %2420, align 8
  %2422 = sext i32 %2421 to i64
  %2423 = lshr i64 %2422, 32
  store i64 %2423, i64* %2418, align 8
  store %struct.Memory* %loadMem_4aa951, %struct.Memory** %MEMORY
  %loadMem_4aa952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 33
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %PC.i3808 = bitcast %union.anon* %2426 to i64*
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 9
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %RSI.i3809 = bitcast %union.anon* %2429 to i64*
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2431 = getelementptr inbounds %struct.GPR, %struct.GPR* %2430, i32 0, i32 15
  %2432 = getelementptr inbounds %struct.Reg, %struct.Reg* %2431, i32 0, i32 0
  %RBP.i3810 = bitcast %union.anon* %2432 to i64*
  %2433 = load i64, i64* %RBP.i3810
  %2434 = sub i64 %2433, 696
  %2435 = load i64, i64* %PC.i3808
  %2436 = add i64 %2435, 6
  store i64 %2436, i64* %PC.i3808
  %2437 = inttoptr i64 %2434 to i32*
  %2438 = load i32, i32* %2437
  %2439 = zext i32 %2438 to i64
  store i64 %2439, i64* %RSI.i3809, align 8
  store %struct.Memory* %loadMem_4aa952, %struct.Memory** %MEMORY
  %loadMem_4aa958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 33
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %PC.i3803 = bitcast %union.anon* %2442 to i64*
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 9
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %ESI.i3804 = bitcast %union.anon* %2445 to i32*
  %2446 = load i32, i32* %ESI.i3804
  %2447 = zext i32 %2446 to i64
  %2448 = load i64, i64* %PC.i3803
  %2449 = add i64 %2448, 2
  store i64 %2449, i64* %PC.i3803
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2451 = bitcast %union.anon* %2450 to i32*
  %2452 = load i32, i32* %2451, align 8
  %2453 = zext i32 %2452 to i64
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2455 = bitcast %union.anon* %2454 to i32*
  %2456 = load i32, i32* %2455, align 8
  %2457 = zext i32 %2456 to i64
  %2458 = shl i64 %2447, 32
  %2459 = ashr exact i64 %2458, 32
  %2460 = shl i64 %2457, 32
  %2461 = or i64 %2460, %2453
  %2462 = sdiv i64 %2461, %2459
  %2463 = shl i64 %2462, 32
  %2464 = ashr exact i64 %2463, 32
  %2465 = icmp eq i64 %2462, %2464
  br i1 %2465, label %2470, label %2466

; <label>:2466:                                   ; preds = %routine_shll__cl___edx.exit
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2468 = load i64, i64* %2467, align 8
  %2469 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2468, %struct.Memory* %loadMem_4aa958)
  br label %routine_idivl__esi.exit

; <label>:2470:                                   ; preds = %routine_shll__cl___edx.exit
  %2471 = srem i64 %2461, %2459
  %2472 = getelementptr inbounds %union.anon, %union.anon* %2450, i64 0, i32 0
  %2473 = and i64 %2462, 4294967295
  store i64 %2473, i64* %2472, align 8
  %2474 = getelementptr inbounds %union.anon, %union.anon* %2454, i64 0, i32 0
  %2475 = and i64 %2471, 4294967295
  store i64 %2475, i64* %2474, align 8
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2476, align 1
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2477, align 1
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2478, align 1
  %2479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2479, align 1
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2480, align 1
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2481, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %2466, %2470
  %2482 = phi %struct.Memory* [ %2469, %2466 ], [ %loadMem_4aa958, %2470 ]
  store %struct.Memory* %2482, %struct.Memory** %MEMORY
  %loadMem_4aa95a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 33
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %PC.i3800 = bitcast %union.anon* %2485 to i64*
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2487 = getelementptr inbounds %struct.GPR, %struct.GPR* %2486, i32 0, i32 1
  %2488 = getelementptr inbounds %struct.Reg, %struct.Reg* %2487, i32 0, i32 0
  %EAX.i3801 = bitcast %union.anon* %2488 to i32*
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2490 = getelementptr inbounds %struct.GPR, %struct.GPR* %2489, i32 0, i32 15
  %2491 = getelementptr inbounds %struct.Reg, %struct.Reg* %2490, i32 0, i32 0
  %RBP.i3802 = bitcast %union.anon* %2491 to i64*
  %2492 = load i64, i64* %RBP.i3802
  %2493 = sub i64 %2492, 40
  %2494 = load i32, i32* %EAX.i3801
  %2495 = zext i32 %2494 to i64
  %2496 = load i64, i64* %PC.i3800
  %2497 = add i64 %2496, 3
  store i64 %2497, i64* %PC.i3800
  %2498 = inttoptr i64 %2493 to i32*
  store i32 %2494, i32* %2498
  store %struct.Memory* %loadMem_4aa95a, %struct.Memory** %MEMORY
  br label %block_.L_4aa95d

block_.L_4aa95d:                                  ; preds = %routine_idivl__esi.exit, %routine_idivl__esi.exit3843
  %loadMem_4aa95d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2500 = getelementptr inbounds %struct.GPR, %struct.GPR* %2499, i32 0, i32 33
  %2501 = getelementptr inbounds %struct.Reg, %struct.Reg* %2500, i32 0, i32 0
  %PC.i3798 = bitcast %union.anon* %2501 to i64*
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2503 = getelementptr inbounds %struct.GPR, %struct.GPR* %2502, i32 0, i32 15
  %2504 = getelementptr inbounds %struct.Reg, %struct.Reg* %2503, i32 0, i32 0
  %RBP.i3799 = bitcast %union.anon* %2504 to i64*
  %2505 = load i64, i64* %RBP.i3799
  %2506 = sub i64 %2505, 24
  %2507 = load i64, i64* %PC.i3798
  %2508 = add i64 %2507, 7
  store i64 %2508, i64* %PC.i3798
  %2509 = inttoptr i64 %2506 to i32*
  store i32 0, i32* %2509
  store %struct.Memory* %loadMem_4aa95d, %struct.Memory** %MEMORY
  br label %block_.L_4aa964

block_.L_4aa964:                                  ; preds = %block_.L_4aa99d, %block_.L_4aa95d
  %loadMem_4aa964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2511 = getelementptr inbounds %struct.GPR, %struct.GPR* %2510, i32 0, i32 33
  %2512 = getelementptr inbounds %struct.Reg, %struct.Reg* %2511, i32 0, i32 0
  %PC.i3795 = bitcast %union.anon* %2512 to i64*
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2514 = getelementptr inbounds %struct.GPR, %struct.GPR* %2513, i32 0, i32 1
  %2515 = getelementptr inbounds %struct.Reg, %struct.Reg* %2514, i32 0, i32 0
  %EAX.i3796 = bitcast %union.anon* %2515 to i32*
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2517 = getelementptr inbounds %struct.GPR, %struct.GPR* %2516, i32 0, i32 1
  %2518 = getelementptr inbounds %struct.Reg, %struct.Reg* %2517, i32 0, i32 0
  %RAX.i3797 = bitcast %union.anon* %2518 to i64*
  %2519 = load i64, i64* %RAX.i3797
  %2520 = load i32, i32* %EAX.i3796
  %2521 = zext i32 %2520 to i64
  %2522 = load i64, i64* %PC.i3795
  %2523 = add i64 %2522, 2
  store i64 %2523, i64* %PC.i3795
  %2524 = xor i64 %2521, %2519
  %2525 = trunc i64 %2524 to i32
  %2526 = and i64 %2524, 4294967295
  store i64 %2526, i64* %RAX.i3797, align 8
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2527, align 1
  %2528 = and i32 %2525, 255
  %2529 = call i32 @llvm.ctpop.i32(i32 %2528)
  %2530 = trunc i32 %2529 to i8
  %2531 = and i8 %2530, 1
  %2532 = xor i8 %2531, 1
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2532, i8* %2533, align 1
  %2534 = icmp eq i32 %2525, 0
  %2535 = zext i1 %2534 to i8
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2535, i8* %2536, align 1
  %2537 = lshr i32 %2525, 31
  %2538 = trunc i32 %2537 to i8
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2538, i8* %2539, align 1
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2540, align 1
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2541, align 1
  store %struct.Memory* %loadMem_4aa964, %struct.Memory** %MEMORY
  %loadMem_4aa966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2543 = getelementptr inbounds %struct.GPR, %struct.GPR* %2542, i32 0, i32 33
  %2544 = getelementptr inbounds %struct.Reg, %struct.Reg* %2543, i32 0, i32 0
  %PC.i3792 = bitcast %union.anon* %2544 to i64*
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 1
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %2548 = bitcast %union.anon* %2547 to %struct.anon.2*
  %AL.i3793 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2548, i32 0, i32 0
  %2549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2550 = getelementptr inbounds %struct.GPR, %struct.GPR* %2549, i32 0, i32 5
  %2551 = getelementptr inbounds %struct.Reg, %struct.Reg* %2550, i32 0, i32 0
  %2552 = bitcast %union.anon* %2551 to %struct.anon.2*
  %CL.i3794 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2552, i32 0, i32 0
  %2553 = load i8, i8* %AL.i3793
  %2554 = zext i8 %2553 to i64
  %2555 = load i64, i64* %PC.i3792
  %2556 = add i64 %2555, 2
  store i64 %2556, i64* %PC.i3792
  store i8 %2553, i8* %CL.i3794, align 1
  store %struct.Memory* %loadMem_4aa966, %struct.Memory** %MEMORY
  %loadMem_4aa968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 33
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %PC.i3790 = bitcast %union.anon* %2559 to i64*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 15
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %RBP.i3791 = bitcast %union.anon* %2562 to i64*
  %2563 = load i64, i64* %RBP.i3791
  %2564 = sub i64 %2563, 24
  %2565 = load i64, i64* %PC.i3790
  %2566 = add i64 %2565, 4
  store i64 %2566, i64* %PC.i3790
  %2567 = inttoptr i64 %2564 to i32*
  %2568 = load i32, i32* %2567
  %2569 = sub i32 %2568, 8
  %2570 = icmp ult i32 %2568, 8
  %2571 = zext i1 %2570 to i8
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2571, i8* %2572, align 1
  %2573 = and i32 %2569, 255
  %2574 = call i32 @llvm.ctpop.i32(i32 %2573)
  %2575 = trunc i32 %2574 to i8
  %2576 = and i8 %2575, 1
  %2577 = xor i8 %2576, 1
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2577, i8* %2578, align 1
  %2579 = xor i32 %2568, 8
  %2580 = xor i32 %2579, %2569
  %2581 = lshr i32 %2580, 4
  %2582 = trunc i32 %2581 to i8
  %2583 = and i8 %2582, 1
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2583, i8* %2584, align 1
  %2585 = icmp eq i32 %2569, 0
  %2586 = zext i1 %2585 to i8
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2586, i8* %2587, align 1
  %2588 = lshr i32 %2569, 31
  %2589 = trunc i32 %2588 to i8
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2589, i8* %2590, align 1
  %2591 = lshr i32 %2568, 31
  %2592 = xor i32 %2588, %2591
  %2593 = add i32 %2592, %2591
  %2594 = icmp eq i32 %2593, 2
  %2595 = zext i1 %2594 to i8
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2595, i8* %2596, align 1
  store %struct.Memory* %loadMem_4aa968, %struct.Memory** %MEMORY
  %loadMem_4aa96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2598 = getelementptr inbounds %struct.GPR, %struct.GPR* %2597, i32 0, i32 33
  %2599 = getelementptr inbounds %struct.Reg, %struct.Reg* %2598, i32 0, i32 0
  %PC.i3787 = bitcast %union.anon* %2599 to i64*
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2601 = getelementptr inbounds %struct.GPR, %struct.GPR* %2600, i32 0, i32 5
  %2602 = getelementptr inbounds %struct.Reg, %struct.Reg* %2601, i32 0, i32 0
  %2603 = bitcast %union.anon* %2602 to %struct.anon.2*
  %CL.i3788 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2603, i32 0, i32 0
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2605 = getelementptr inbounds %struct.GPR, %struct.GPR* %2604, i32 0, i32 15
  %2606 = getelementptr inbounds %struct.Reg, %struct.Reg* %2605, i32 0, i32 0
  %RBP.i3789 = bitcast %union.anon* %2606 to i64*
  %2607 = load i64, i64* %RBP.i3789
  %2608 = sub i64 %2607, 697
  %2609 = load i8, i8* %CL.i3788
  %2610 = zext i8 %2609 to i64
  %2611 = load i64, i64* %PC.i3787
  %2612 = add i64 %2611, 6
  store i64 %2612, i64* %PC.i3787
  %2613 = inttoptr i64 %2608 to i8*
  store i8 %2609, i8* %2613
  store %struct.Memory* %loadMem_4aa96c, %struct.Memory** %MEMORY
  %loadMem_4aa972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2615 = getelementptr inbounds %struct.GPR, %struct.GPR* %2614, i32 0, i32 33
  %2616 = getelementptr inbounds %struct.Reg, %struct.Reg* %2615, i32 0, i32 0
  %PC.i3786 = bitcast %union.anon* %2616 to i64*
  %2617 = load i64, i64* %PC.i3786
  %2618 = add i64 %2617, 24
  %2619 = load i64, i64* %PC.i3786
  %2620 = add i64 %2619, 6
  %2621 = load i64, i64* %PC.i3786
  %2622 = add i64 %2621, 6
  store i64 %2622, i64* %PC.i3786
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2624 = load i8, i8* %2623, align 1
  %2625 = icmp ne i8 %2624, 0
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2627 = load i8, i8* %2626, align 1
  %2628 = icmp ne i8 %2627, 0
  %2629 = xor i1 %2625, %2628
  %2630 = xor i1 %2629, true
  %2631 = zext i1 %2630 to i8
  store i8 %2631, i8* %BRANCH_TAKEN, align 1
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2633 = select i1 %2629, i64 %2620, i64 %2618
  store i64 %2633, i64* %2632, align 8
  store %struct.Memory* %loadMem_4aa972, %struct.Memory** %MEMORY
  %loadBr_4aa972 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aa972 = icmp eq i8 %loadBr_4aa972, 1
  br i1 %cmpBr_4aa972, label %block_.L_4aa98a, label %block_4aa978

block_4aa978:                                     ; preds = %block_.L_4aa964
  %loadMem_4aa978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2635 = getelementptr inbounds %struct.GPR, %struct.GPR* %2634, i32 0, i32 33
  %2636 = getelementptr inbounds %struct.Reg, %struct.Reg* %2635, i32 0, i32 0
  %PC.i3784 = bitcast %union.anon* %2636 to i64*
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2638 = getelementptr inbounds %struct.GPR, %struct.GPR* %2637, i32 0, i32 15
  %2639 = getelementptr inbounds %struct.Reg, %struct.Reg* %2638, i32 0, i32 0
  %RBP.i3785 = bitcast %union.anon* %2639 to i64*
  %2640 = load i64, i64* %RBP.i3785
  %2641 = sub i64 %2640, 412
  %2642 = load i64, i64* %PC.i3784
  %2643 = add i64 %2642, 7
  store i64 %2643, i64* %PC.i3784
  %2644 = inttoptr i64 %2641 to i32*
  %2645 = load i32, i32* %2644
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2646, align 1
  %2647 = and i32 %2645, 255
  %2648 = call i32 @llvm.ctpop.i32(i32 %2647)
  %2649 = trunc i32 %2648 to i8
  %2650 = and i8 %2649, 1
  %2651 = xor i8 %2650, 1
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2651, i8* %2652, align 1
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2653, align 1
  %2654 = icmp eq i32 %2645, 0
  %2655 = zext i1 %2654 to i8
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2655, i8* %2656, align 1
  %2657 = lshr i32 %2645, 31
  %2658 = trunc i32 %2657 to i8
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2658, i8* %2659, align 1
  %2660 = lshr i32 %2645, 31
  %2661 = xor i32 %2657, %2660
  %2662 = add i32 %2661, %2660
  %2663 = icmp eq i32 %2662, 2
  %2664 = zext i1 %2663 to i8
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2664, i8* %2665, align 1
  store %struct.Memory* %loadMem_4aa978, %struct.Memory** %MEMORY
  %loadMem_4aa97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2667 = getelementptr inbounds %struct.GPR, %struct.GPR* %2666, i32 0, i32 33
  %2668 = getelementptr inbounds %struct.Reg, %struct.Reg* %2667, i32 0, i32 0
  %PC.i3782 = bitcast %union.anon* %2668 to i64*
  %2669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2670 = getelementptr inbounds %struct.GPR, %struct.GPR* %2669, i32 0, i32 1
  %2671 = getelementptr inbounds %struct.Reg, %struct.Reg* %2670, i32 0, i32 0
  %2672 = bitcast %union.anon* %2671 to %struct.anon.2*
  %AL.i3783 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2672, i32 0, i32 0
  %2673 = load i64, i64* %PC.i3782
  %2674 = add i64 %2673, 3
  store i64 %2674, i64* %PC.i3782
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2676 = load i8, i8* %2675, align 1
  %2677 = icmp eq i8 %2676, 0
  %2678 = zext i1 %2677 to i8
  store i8 %2678, i8* %AL.i3783, align 1
  store %struct.Memory* %loadMem_4aa97f, %struct.Memory** %MEMORY
  %loadMem_4aa982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2680 = getelementptr inbounds %struct.GPR, %struct.GPR* %2679, i32 0, i32 33
  %2681 = getelementptr inbounds %struct.Reg, %struct.Reg* %2680, i32 0, i32 0
  %PC.i3780 = bitcast %union.anon* %2681 to i64*
  %2682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2683 = getelementptr inbounds %struct.GPR, %struct.GPR* %2682, i32 0, i32 1
  %2684 = getelementptr inbounds %struct.Reg, %struct.Reg* %2683, i32 0, i32 0
  %2685 = bitcast %union.anon* %2684 to %struct.anon.2*
  %AL.i3781 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2685, i32 0, i32 0
  %2686 = load i8, i8* %AL.i3781
  %2687 = zext i8 %2686 to i64
  %2688 = load i64, i64* %PC.i3780
  %2689 = add i64 %2688, 2
  store i64 %2689, i64* %PC.i3780
  %2690 = xor i64 255, %2687
  %2691 = trunc i64 %2690 to i8
  store i8 %2691, i8* %AL.i3781, align 1
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2692, align 1
  %2693 = trunc i64 %2690 to i32
  %2694 = and i32 %2693, 255
  %2695 = call i32 @llvm.ctpop.i32(i32 %2694)
  %2696 = trunc i32 %2695 to i8
  %2697 = and i8 %2696, 1
  %2698 = xor i8 %2697, 1
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2698, i8* %2699, align 1
  %2700 = icmp eq i8 %2691, 0
  %2701 = zext i1 %2700 to i8
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2701, i8* %2702, align 1
  %2703 = lshr i8 %2691, 7
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2703, i8* %2704, align 1
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2705, align 1
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2706, align 1
  store %struct.Memory* %loadMem_4aa982, %struct.Memory** %MEMORY
  %loadMem_4aa984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2708 = getelementptr inbounds %struct.GPR, %struct.GPR* %2707, i32 0, i32 33
  %2709 = getelementptr inbounds %struct.Reg, %struct.Reg* %2708, i32 0, i32 0
  %PC.i3777 = bitcast %union.anon* %2709 to i64*
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2711 = getelementptr inbounds %struct.GPR, %struct.GPR* %2710, i32 0, i32 1
  %2712 = getelementptr inbounds %struct.Reg, %struct.Reg* %2711, i32 0, i32 0
  %2713 = bitcast %union.anon* %2712 to %struct.anon.2*
  %AL.i3778 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2713, i32 0, i32 0
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2715 = getelementptr inbounds %struct.GPR, %struct.GPR* %2714, i32 0, i32 15
  %2716 = getelementptr inbounds %struct.Reg, %struct.Reg* %2715, i32 0, i32 0
  %RBP.i3779 = bitcast %union.anon* %2716 to i64*
  %2717 = load i64, i64* %RBP.i3779
  %2718 = sub i64 %2717, 697
  %2719 = load i8, i8* %AL.i3778
  %2720 = zext i8 %2719 to i64
  %2721 = load i64, i64* %PC.i3777
  %2722 = add i64 %2721, 6
  store i64 %2722, i64* %PC.i3777
  %2723 = inttoptr i64 %2718 to i8*
  store i8 %2719, i8* %2723
  store %struct.Memory* %loadMem_4aa984, %struct.Memory** %MEMORY
  br label %block_.L_4aa98a

block_.L_4aa98a:                                  ; preds = %block_4aa978, %block_.L_4aa964
  %loadMem_4aa98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2725 = getelementptr inbounds %struct.GPR, %struct.GPR* %2724, i32 0, i32 33
  %2726 = getelementptr inbounds %struct.Reg, %struct.Reg* %2725, i32 0, i32 0
  %PC.i3774 = bitcast %union.anon* %2726 to i64*
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2728 = getelementptr inbounds %struct.GPR, %struct.GPR* %2727, i32 0, i32 1
  %2729 = getelementptr inbounds %struct.Reg, %struct.Reg* %2728, i32 0, i32 0
  %2730 = bitcast %union.anon* %2729 to %struct.anon.2*
  %AL.i3775 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2730, i32 0, i32 0
  %2731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2732 = getelementptr inbounds %struct.GPR, %struct.GPR* %2731, i32 0, i32 15
  %2733 = getelementptr inbounds %struct.Reg, %struct.Reg* %2732, i32 0, i32 0
  %RBP.i3776 = bitcast %union.anon* %2733 to i64*
  %2734 = load i64, i64* %RBP.i3776
  %2735 = sub i64 %2734, 697
  %2736 = load i64, i64* %PC.i3774
  %2737 = add i64 %2736, 6
  store i64 %2737, i64* %PC.i3774
  %2738 = inttoptr i64 %2735 to i8*
  %2739 = load i8, i8* %2738
  store i8 %2739, i8* %AL.i3775, align 1
  store %struct.Memory* %loadMem_4aa98a, %struct.Memory** %MEMORY
  %loadMem_4aa990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2741 = getelementptr inbounds %struct.GPR, %struct.GPR* %2740, i32 0, i32 33
  %2742 = getelementptr inbounds %struct.Reg, %struct.Reg* %2741, i32 0, i32 0
  %PC.i3772 = bitcast %union.anon* %2742 to i64*
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2744 = getelementptr inbounds %struct.GPR, %struct.GPR* %2743, i32 0, i32 1
  %2745 = getelementptr inbounds %struct.Reg, %struct.Reg* %2744, i32 0, i32 0
  %2746 = bitcast %union.anon* %2745 to %struct.anon.2*
  %AL.i3773 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2746, i32 0, i32 0
  %2747 = load i8, i8* %AL.i3773
  %2748 = zext i8 %2747 to i64
  %2749 = load i64, i64* %PC.i3772
  %2750 = add i64 %2749, 2
  store i64 %2750, i64* %PC.i3772
  %2751 = and i64 1, %2748
  %2752 = trunc i64 %2751 to i8
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2753, align 1
  %2754 = trunc i64 %2751 to i32
  %2755 = and i32 %2754, 255
  %2756 = call i32 @llvm.ctpop.i32(i32 %2755)
  %2757 = trunc i32 %2756 to i8
  %2758 = and i8 %2757, 1
  %2759 = xor i8 %2758, 1
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2759, i8* %2760, align 1
  %2761 = icmp eq i8 %2752, 0
  %2762 = zext i1 %2761 to i8
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2762, i8* %2763, align 1
  %2764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2764, align 1
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2765, align 1
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2766, align 1
  store %struct.Memory* %loadMem_4aa990, %struct.Memory** %MEMORY
  %loadMem_4aa992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2768 = getelementptr inbounds %struct.GPR, %struct.GPR* %2767, i32 0, i32 33
  %2769 = getelementptr inbounds %struct.Reg, %struct.Reg* %2768, i32 0, i32 0
  %PC.i3771 = bitcast %union.anon* %2769 to i64*
  %2770 = load i64, i64* %PC.i3771
  %2771 = add i64 %2770, 11
  %2772 = load i64, i64* %PC.i3771
  %2773 = add i64 %2772, 6
  %2774 = load i64, i64* %PC.i3771
  %2775 = add i64 %2774, 6
  store i64 %2775, i64* %PC.i3771
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2777 = load i8, i8* %2776, align 1
  %2778 = icmp eq i8 %2777, 0
  %2779 = zext i1 %2778 to i8
  store i8 %2779, i8* %BRANCH_TAKEN, align 1
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2781 = select i1 %2778, i64 %2771, i64 %2773
  store i64 %2781, i64* %2780, align 8
  store %struct.Memory* %loadMem_4aa992, %struct.Memory** %MEMORY
  %loadBr_4aa992 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aa992 = icmp eq i8 %loadBr_4aa992, 1
  br i1 %cmpBr_4aa992, label %block_.L_4aa99d, label %block_4aa998

block_4aa998:                                     ; preds = %block_.L_4aa98a
  %loadMem_4aa998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2783 = getelementptr inbounds %struct.GPR, %struct.GPR* %2782, i32 0, i32 33
  %2784 = getelementptr inbounds %struct.Reg, %struct.Reg* %2783, i32 0, i32 0
  %PC.i3770 = bitcast %union.anon* %2784 to i64*
  %2785 = load i64, i64* %PC.i3770
  %2786 = add i64 %2785, 797
  %2787 = load i64, i64* %PC.i3770
  %2788 = add i64 %2787, 5
  store i64 %2788, i64* %PC.i3770
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2786, i64* %2789, align 8
  store %struct.Memory* %loadMem_4aa998, %struct.Memory** %MEMORY
  br label %block_.L_4aacb5

block_.L_4aa99d:                                  ; preds = %block_.L_4aa98a
  %loadMem_4aa99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2791 = getelementptr inbounds %struct.GPR, %struct.GPR* %2790, i32 0, i32 33
  %2792 = getelementptr inbounds %struct.Reg, %struct.Reg* %2791, i32 0, i32 0
  %PC.i3767 = bitcast %union.anon* %2792 to i64*
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2794 = getelementptr inbounds %struct.GPR, %struct.GPR* %2793, i32 0, i32 1
  %2795 = getelementptr inbounds %struct.Reg, %struct.Reg* %2794, i32 0, i32 0
  %EAX.i3768 = bitcast %union.anon* %2795 to i32*
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2797 = getelementptr inbounds %struct.GPR, %struct.GPR* %2796, i32 0, i32 1
  %2798 = getelementptr inbounds %struct.Reg, %struct.Reg* %2797, i32 0, i32 0
  %RAX.i3769 = bitcast %union.anon* %2798 to i64*
  %2799 = load i64, i64* %RAX.i3769
  %2800 = load i32, i32* %EAX.i3768
  %2801 = zext i32 %2800 to i64
  %2802 = load i64, i64* %PC.i3767
  %2803 = add i64 %2802, 2
  store i64 %2803, i64* %PC.i3767
  %2804 = xor i64 %2801, %2799
  %2805 = trunc i64 %2804 to i32
  %2806 = and i64 %2804, 4294967295
  store i64 %2806, i64* %RAX.i3769, align 8
  %2807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2807, align 1
  %2808 = and i32 %2805, 255
  %2809 = call i32 @llvm.ctpop.i32(i32 %2808)
  %2810 = trunc i32 %2809 to i8
  %2811 = and i8 %2810, 1
  %2812 = xor i8 %2811, 1
  %2813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2812, i8* %2813, align 1
  %2814 = icmp eq i32 %2805, 0
  %2815 = zext i1 %2814 to i8
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2815, i8* %2816, align 1
  %2817 = lshr i32 %2805, 31
  %2818 = trunc i32 %2817 to i8
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2818, i8* %2819, align 1
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2820, align 1
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2821, align 1
  store %struct.Memory* %loadMem_4aa99d, %struct.Memory** %MEMORY
  %loadMem_4aa99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2823 = getelementptr inbounds %struct.GPR, %struct.GPR* %2822, i32 0, i32 33
  %2824 = getelementptr inbounds %struct.Reg, %struct.Reg* %2823, i32 0, i32 0
  %PC.i3765 = bitcast %union.anon* %2824 to i64*
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2826 = getelementptr inbounds %struct.GPR, %struct.GPR* %2825, i32 0, i32 5
  %2827 = getelementptr inbounds %struct.Reg, %struct.Reg* %2826, i32 0, i32 0
  %RCX.i3766 = bitcast %union.anon* %2827 to i64*
  %2828 = load i64, i64* %PC.i3765
  %2829 = add i64 %2828, 8
  store i64 %2829, i64* %PC.i3765
  %2830 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2830, i64* %RCX.i3766, align 8
  store %struct.Memory* %loadMem_4aa99f, %struct.Memory** %MEMORY
  %loadMem_4aa9a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2832 = getelementptr inbounds %struct.GPR, %struct.GPR* %2831, i32 0, i32 33
  %2833 = getelementptr inbounds %struct.Reg, %struct.Reg* %2832, i32 0, i32 0
  %PC.i3762 = bitcast %union.anon* %2833 to i64*
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2835 = getelementptr inbounds %struct.GPR, %struct.GPR* %2834, i32 0, i32 7
  %2836 = getelementptr inbounds %struct.Reg, %struct.Reg* %2835, i32 0, i32 0
  %RDX.i3763 = bitcast %union.anon* %2836 to i64*
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2838 = getelementptr inbounds %struct.GPR, %struct.GPR* %2837, i32 0, i32 15
  %2839 = getelementptr inbounds %struct.Reg, %struct.Reg* %2838, i32 0, i32 0
  %RBP.i3764 = bitcast %union.anon* %2839 to i64*
  %2840 = load i64, i64* %RBP.i3764
  %2841 = sub i64 %2840, 24
  %2842 = load i64, i64* %PC.i3762
  %2843 = add i64 %2842, 4
  store i64 %2843, i64* %PC.i3762
  %2844 = inttoptr i64 %2841 to i32*
  %2845 = load i32, i32* %2844
  %2846 = sext i32 %2845 to i64
  store i64 %2846, i64* %RDX.i3763, align 8
  store %struct.Memory* %loadMem_4aa9a7, %struct.Memory** %MEMORY
  %loadMem_4aa9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2848 = getelementptr inbounds %struct.GPR, %struct.GPR* %2847, i32 0, i32 33
  %2849 = getelementptr inbounds %struct.Reg, %struct.Reg* %2848, i32 0, i32 0
  %PC.i3758 = bitcast %union.anon* %2849 to i64*
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2851 = getelementptr inbounds %struct.GPR, %struct.GPR* %2850, i32 0, i32 5
  %2852 = getelementptr inbounds %struct.Reg, %struct.Reg* %2851, i32 0, i32 0
  %RCX.i3759 = bitcast %union.anon* %2852 to i64*
  %2853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2854 = getelementptr inbounds %struct.GPR, %struct.GPR* %2853, i32 0, i32 7
  %2855 = getelementptr inbounds %struct.Reg, %struct.Reg* %2854, i32 0, i32 0
  %RDX.i3760 = bitcast %union.anon* %2855 to i64*
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2857 = getelementptr inbounds %struct.GPR, %struct.GPR* %2856, i32 0, i32 9
  %2858 = getelementptr inbounds %struct.Reg, %struct.Reg* %2857, i32 0, i32 0
  %RSI.i3761 = bitcast %union.anon* %2858 to i64*
  %2859 = load i64, i64* %RCX.i3759
  %2860 = load i64, i64* %RDX.i3760
  %2861 = mul i64 %2860, 4
  %2862 = add i64 %2859, 13112
  %2863 = add i64 %2862, %2861
  %2864 = load i64, i64* %PC.i3758
  %2865 = add i64 %2864, 7
  store i64 %2865, i64* %PC.i3758
  %2866 = inttoptr i64 %2863 to i32*
  %2867 = load i32, i32* %2866
  %2868 = zext i32 %2867 to i64
  store i64 %2868, i64* %RSI.i3761, align 8
  store %struct.Memory* %loadMem_4aa9ab, %struct.Memory** %MEMORY
  %loadMem_4aa9b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2870 = getelementptr inbounds %struct.GPR, %struct.GPR* %2869, i32 0, i32 33
  %2871 = getelementptr inbounds %struct.Reg, %struct.Reg* %2870, i32 0, i32 0
  %PC.i3756 = bitcast %union.anon* %2871 to i64*
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2873 = getelementptr inbounds %struct.GPR, %struct.GPR* %2872, i32 0, i32 5
  %2874 = getelementptr inbounds %struct.Reg, %struct.Reg* %2873, i32 0, i32 0
  %RCX.i3757 = bitcast %union.anon* %2874 to i64*
  %2875 = load i64, i64* %PC.i3756
  %2876 = add i64 %2875, 8
  store i64 %2876, i64* %PC.i3756
  %2877 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2877, i64* %RCX.i3757, align 8
  store %struct.Memory* %loadMem_4aa9b2, %struct.Memory** %MEMORY
  %loadMem_4aa9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2879 = getelementptr inbounds %struct.GPR, %struct.GPR* %2878, i32 0, i32 33
  %2880 = getelementptr inbounds %struct.Reg, %struct.Reg* %2879, i32 0, i32 0
  %PC.i3753 = bitcast %union.anon* %2880 to i64*
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 7
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %RDX.i3754 = bitcast %union.anon* %2883 to i64*
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 15
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %RBP.i3755 = bitcast %union.anon* %2886 to i64*
  %2887 = load i64, i64* %RBP.i3755
  %2888 = sub i64 %2887, 24
  %2889 = load i64, i64* %PC.i3753
  %2890 = add i64 %2889, 4
  store i64 %2890, i64* %PC.i3753
  %2891 = inttoptr i64 %2888 to i32*
  %2892 = load i32, i32* %2891
  %2893 = sext i32 %2892 to i64
  store i64 %2893, i64* %RDX.i3754, align 8
  store %struct.Memory* %loadMem_4aa9ba, %struct.Memory** %MEMORY
  %loadMem_4aa9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 33
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %PC.i3749 = bitcast %union.anon* %2896 to i64*
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 5
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %RCX.i3750 = bitcast %union.anon* %2899 to i64*
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2901 = getelementptr inbounds %struct.GPR, %struct.GPR* %2900, i32 0, i32 7
  %2902 = getelementptr inbounds %struct.Reg, %struct.Reg* %2901, i32 0, i32 0
  %RDX.i3751 = bitcast %union.anon* %2902 to i64*
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2904 = getelementptr inbounds %struct.GPR, %struct.GPR* %2903, i32 0, i32 9
  %2905 = getelementptr inbounds %struct.Reg, %struct.Reg* %2904, i32 0, i32 0
  %RSI.i3752 = bitcast %union.anon* %2905 to i64*
  %2906 = load i64, i64* %RSI.i3752
  %2907 = load i64, i64* %RCX.i3750
  %2908 = load i64, i64* %RDX.i3751
  %2909 = mul i64 %2908, 4
  %2910 = add i64 %2907, 13560
  %2911 = add i64 %2910, %2909
  %2912 = load i64, i64* %PC.i3749
  %2913 = add i64 %2912, 7
  store i64 %2913, i64* %PC.i3749
  %2914 = trunc i64 %2906 to i32
  %2915 = inttoptr i64 %2911 to i32*
  %2916 = load i32, i32* %2915
  %2917 = add i32 %2916, %2914
  %2918 = zext i32 %2917 to i64
  store i64 %2918, i64* %RSI.i3752, align 8
  %2919 = icmp ult i32 %2917, %2914
  %2920 = icmp ult i32 %2917, %2916
  %2921 = or i1 %2919, %2920
  %2922 = zext i1 %2921 to i8
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2922, i8* %2923, align 1
  %2924 = and i32 %2917, 255
  %2925 = call i32 @llvm.ctpop.i32(i32 %2924)
  %2926 = trunc i32 %2925 to i8
  %2927 = and i8 %2926, 1
  %2928 = xor i8 %2927, 1
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2928, i8* %2929, align 1
  %2930 = xor i32 %2916, %2914
  %2931 = xor i32 %2930, %2917
  %2932 = lshr i32 %2931, 4
  %2933 = trunc i32 %2932 to i8
  %2934 = and i8 %2933, 1
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2934, i8* %2935, align 1
  %2936 = icmp eq i32 %2917, 0
  %2937 = zext i1 %2936 to i8
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2937, i8* %2938, align 1
  %2939 = lshr i32 %2917, 31
  %2940 = trunc i32 %2939 to i8
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2940, i8* %2941, align 1
  %2942 = lshr i32 %2914, 31
  %2943 = lshr i32 %2916, 31
  %2944 = xor i32 %2939, %2942
  %2945 = xor i32 %2939, %2943
  %2946 = add i32 %2944, %2945
  %2947 = icmp eq i32 %2946, 2
  %2948 = zext i1 %2947 to i8
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2948, i8* %2949, align 1
  store %struct.Memory* %loadMem_4aa9be, %struct.Memory** %MEMORY
  %loadMem_4aa9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2951 = getelementptr inbounds %struct.GPR, %struct.GPR* %2950, i32 0, i32 33
  %2952 = getelementptr inbounds %struct.Reg, %struct.Reg* %2951, i32 0, i32 0
  %PC.i3746 = bitcast %union.anon* %2952 to i64*
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2954 = getelementptr inbounds %struct.GPR, %struct.GPR* %2953, i32 0, i32 9
  %2955 = getelementptr inbounds %struct.Reg, %struct.Reg* %2954, i32 0, i32 0
  %ESI.i3747 = bitcast %union.anon* %2955 to i32*
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2957 = getelementptr inbounds %struct.GPR, %struct.GPR* %2956, i32 0, i32 15
  %2958 = getelementptr inbounds %struct.Reg, %struct.Reg* %2957, i32 0, i32 0
  %RBP.i3748 = bitcast %union.anon* %2958 to i64*
  %2959 = load i64, i64* %RBP.i3748
  %2960 = sub i64 %2959, 448
  %2961 = load i32, i32* %ESI.i3747
  %2962 = zext i32 %2961 to i64
  %2963 = load i64, i64* %PC.i3746
  %2964 = add i64 %2963, 6
  store i64 %2964, i64* %PC.i3746
  %2965 = inttoptr i64 %2960 to i32*
  store i32 %2961, i32* %2965
  store %struct.Memory* %loadMem_4aa9c5, %struct.Memory** %MEMORY
  %loadMem_4aa9cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2967 = getelementptr inbounds %struct.GPR, %struct.GPR* %2966, i32 0, i32 33
  %2968 = getelementptr inbounds %struct.Reg, %struct.Reg* %2967, i32 0, i32 0
  %PC.i3744 = bitcast %union.anon* %2968 to i64*
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2970 = getelementptr inbounds %struct.GPR, %struct.GPR* %2969, i32 0, i32 5
  %2971 = getelementptr inbounds %struct.Reg, %struct.Reg* %2970, i32 0, i32 0
  %RCX.i3745 = bitcast %union.anon* %2971 to i64*
  %2972 = load i64, i64* %PC.i3744
  %2973 = add i64 %2972, 8
  store i64 %2973, i64* %PC.i3744
  %2974 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2974, i64* %RCX.i3745, align 8
  store %struct.Memory* %loadMem_4aa9cb, %struct.Memory** %MEMORY
  %loadMem_4aa9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2976 = getelementptr inbounds %struct.GPR, %struct.GPR* %2975, i32 0, i32 33
  %2977 = getelementptr inbounds %struct.Reg, %struct.Reg* %2976, i32 0, i32 0
  %PC.i3741 = bitcast %union.anon* %2977 to i64*
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2979 = getelementptr inbounds %struct.GPR, %struct.GPR* %2978, i32 0, i32 7
  %2980 = getelementptr inbounds %struct.Reg, %struct.Reg* %2979, i32 0, i32 0
  %RDX.i3742 = bitcast %union.anon* %2980 to i64*
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 15
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %RBP.i3743 = bitcast %union.anon* %2983 to i64*
  %2984 = load i64, i64* %RBP.i3743
  %2985 = sub i64 %2984, 24
  %2986 = load i64, i64* %PC.i3741
  %2987 = add i64 %2986, 4
  store i64 %2987, i64* %PC.i3741
  %2988 = inttoptr i64 %2985 to i32*
  %2989 = load i32, i32* %2988
  %2990 = sext i32 %2989 to i64
  store i64 %2990, i64* %RDX.i3742, align 8
  store %struct.Memory* %loadMem_4aa9d3, %struct.Memory** %MEMORY
  %loadMem_4aa9d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2992 = getelementptr inbounds %struct.GPR, %struct.GPR* %2991, i32 0, i32 33
  %2993 = getelementptr inbounds %struct.Reg, %struct.Reg* %2992, i32 0, i32 0
  %PC.i3737 = bitcast %union.anon* %2993 to i64*
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 5
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %RCX.i3738 = bitcast %union.anon* %2996 to i64*
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 7
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %RDX.i3739 = bitcast %union.anon* %2999 to i64*
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3001 = getelementptr inbounds %struct.GPR, %struct.GPR* %3000, i32 0, i32 9
  %3002 = getelementptr inbounds %struct.Reg, %struct.Reg* %3001, i32 0, i32 0
  %RSI.i3740 = bitcast %union.anon* %3002 to i64*
  %3003 = load i64, i64* %RCX.i3738
  %3004 = load i64, i64* %RDX.i3739
  %3005 = mul i64 %3004, 4
  %3006 = add i64 %3003, 13176
  %3007 = add i64 %3006, %3005
  %3008 = load i64, i64* %PC.i3737
  %3009 = add i64 %3008, 7
  store i64 %3009, i64* %PC.i3737
  %3010 = inttoptr i64 %3007 to i32*
  %3011 = load i32, i32* %3010
  %3012 = zext i32 %3011 to i64
  store i64 %3012, i64* %RSI.i3740, align 8
  store %struct.Memory* %loadMem_4aa9d7, %struct.Memory** %MEMORY
  %loadMem_4aa9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3014 = getelementptr inbounds %struct.GPR, %struct.GPR* %3013, i32 0, i32 33
  %3015 = getelementptr inbounds %struct.Reg, %struct.Reg* %3014, i32 0, i32 0
  %PC.i3735 = bitcast %union.anon* %3015 to i64*
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3017 = getelementptr inbounds %struct.GPR, %struct.GPR* %3016, i32 0, i32 5
  %3018 = getelementptr inbounds %struct.Reg, %struct.Reg* %3017, i32 0, i32 0
  %RCX.i3736 = bitcast %union.anon* %3018 to i64*
  %3019 = load i64, i64* %PC.i3735
  %3020 = add i64 %3019, 8
  store i64 %3020, i64* %PC.i3735
  %3021 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3021, i64* %RCX.i3736, align 8
  store %struct.Memory* %loadMem_4aa9de, %struct.Memory** %MEMORY
  %loadMem_4aa9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3023 = getelementptr inbounds %struct.GPR, %struct.GPR* %3022, i32 0, i32 33
  %3024 = getelementptr inbounds %struct.Reg, %struct.Reg* %3023, i32 0, i32 0
  %PC.i3732 = bitcast %union.anon* %3024 to i64*
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3026 = getelementptr inbounds %struct.GPR, %struct.GPR* %3025, i32 0, i32 7
  %3027 = getelementptr inbounds %struct.Reg, %struct.Reg* %3026, i32 0, i32 0
  %RDX.i3733 = bitcast %union.anon* %3027 to i64*
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3029 = getelementptr inbounds %struct.GPR, %struct.GPR* %3028, i32 0, i32 15
  %3030 = getelementptr inbounds %struct.Reg, %struct.Reg* %3029, i32 0, i32 0
  %RBP.i3734 = bitcast %union.anon* %3030 to i64*
  %3031 = load i64, i64* %RBP.i3734
  %3032 = sub i64 %3031, 24
  %3033 = load i64, i64* %PC.i3732
  %3034 = add i64 %3033, 4
  store i64 %3034, i64* %PC.i3732
  %3035 = inttoptr i64 %3032 to i32*
  %3036 = load i32, i32* %3035
  %3037 = sext i32 %3036 to i64
  store i64 %3037, i64* %RDX.i3733, align 8
  store %struct.Memory* %loadMem_4aa9e6, %struct.Memory** %MEMORY
  %loadMem_4aa9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3039 = getelementptr inbounds %struct.GPR, %struct.GPR* %3038, i32 0, i32 33
  %3040 = getelementptr inbounds %struct.Reg, %struct.Reg* %3039, i32 0, i32 0
  %PC.i3728 = bitcast %union.anon* %3040 to i64*
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3042 = getelementptr inbounds %struct.GPR, %struct.GPR* %3041, i32 0, i32 5
  %3043 = getelementptr inbounds %struct.Reg, %struct.Reg* %3042, i32 0, i32 0
  %RCX.i3729 = bitcast %union.anon* %3043 to i64*
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3045 = getelementptr inbounds %struct.GPR, %struct.GPR* %3044, i32 0, i32 7
  %3046 = getelementptr inbounds %struct.Reg, %struct.Reg* %3045, i32 0, i32 0
  %RDX.i3730 = bitcast %union.anon* %3046 to i64*
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3048 = getelementptr inbounds %struct.GPR, %struct.GPR* %3047, i32 0, i32 9
  %3049 = getelementptr inbounds %struct.Reg, %struct.Reg* %3048, i32 0, i32 0
  %RSI.i3731 = bitcast %union.anon* %3049 to i64*
  %3050 = load i64, i64* %RSI.i3731
  %3051 = load i64, i64* %RCX.i3729
  %3052 = load i64, i64* %RDX.i3730
  %3053 = mul i64 %3052, 4
  %3054 = add i64 %3051, 13496
  %3055 = add i64 %3054, %3053
  %3056 = load i64, i64* %PC.i3728
  %3057 = add i64 %3056, 7
  store i64 %3057, i64* %PC.i3728
  %3058 = trunc i64 %3050 to i32
  %3059 = inttoptr i64 %3055 to i32*
  %3060 = load i32, i32* %3059
  %3061 = add i32 %3060, %3058
  %3062 = zext i32 %3061 to i64
  store i64 %3062, i64* %RSI.i3731, align 8
  %3063 = icmp ult i32 %3061, %3058
  %3064 = icmp ult i32 %3061, %3060
  %3065 = or i1 %3063, %3064
  %3066 = zext i1 %3065 to i8
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3066, i8* %3067, align 1
  %3068 = and i32 %3061, 255
  %3069 = call i32 @llvm.ctpop.i32(i32 %3068)
  %3070 = trunc i32 %3069 to i8
  %3071 = and i8 %3070, 1
  %3072 = xor i8 %3071, 1
  %3073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3072, i8* %3073, align 1
  %3074 = xor i32 %3060, %3058
  %3075 = xor i32 %3074, %3061
  %3076 = lshr i32 %3075, 4
  %3077 = trunc i32 %3076 to i8
  %3078 = and i8 %3077, 1
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3078, i8* %3079, align 1
  %3080 = icmp eq i32 %3061, 0
  %3081 = zext i1 %3080 to i8
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3081, i8* %3082, align 1
  %3083 = lshr i32 %3061, 31
  %3084 = trunc i32 %3083 to i8
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3084, i8* %3085, align 1
  %3086 = lshr i32 %3058, 31
  %3087 = lshr i32 %3060, 31
  %3088 = xor i32 %3083, %3086
  %3089 = xor i32 %3083, %3087
  %3090 = add i32 %3088, %3089
  %3091 = icmp eq i32 %3090, 2
  %3092 = zext i1 %3091 to i8
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3092, i8* %3093, align 1
  store %struct.Memory* %loadMem_4aa9ea, %struct.Memory** %MEMORY
  %loadMem_4aa9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3095 = getelementptr inbounds %struct.GPR, %struct.GPR* %3094, i32 0, i32 33
  %3096 = getelementptr inbounds %struct.Reg, %struct.Reg* %3095, i32 0, i32 0
  %PC.i3725 = bitcast %union.anon* %3096 to i64*
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3098 = getelementptr inbounds %struct.GPR, %struct.GPR* %3097, i32 0, i32 9
  %3099 = getelementptr inbounds %struct.Reg, %struct.Reg* %3098, i32 0, i32 0
  %ESI.i3726 = bitcast %union.anon* %3099 to i32*
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3101 = getelementptr inbounds %struct.GPR, %struct.GPR* %3100, i32 0, i32 15
  %3102 = getelementptr inbounds %struct.Reg, %struct.Reg* %3101, i32 0, i32 0
  %RBP.i3727 = bitcast %union.anon* %3102 to i64*
  %3103 = load i64, i64* %RBP.i3727
  %3104 = sub i64 %3103, 444
  %3105 = load i32, i32* %ESI.i3726
  %3106 = zext i32 %3105 to i64
  %3107 = load i64, i64* %PC.i3725
  %3108 = add i64 %3107, 6
  store i64 %3108, i64* %PC.i3725
  %3109 = inttoptr i64 %3104 to i32*
  store i32 %3105, i32* %3109
  store %struct.Memory* %loadMem_4aa9f1, %struct.Memory** %MEMORY
  %loadMem_4aa9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3111 = getelementptr inbounds %struct.GPR, %struct.GPR* %3110, i32 0, i32 33
  %3112 = getelementptr inbounds %struct.Reg, %struct.Reg* %3111, i32 0, i32 0
  %PC.i3723 = bitcast %union.anon* %3112 to i64*
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3114 = getelementptr inbounds %struct.GPR, %struct.GPR* %3113, i32 0, i32 5
  %3115 = getelementptr inbounds %struct.Reg, %struct.Reg* %3114, i32 0, i32 0
  %RCX.i3724 = bitcast %union.anon* %3115 to i64*
  %3116 = load i64, i64* %PC.i3723
  %3117 = add i64 %3116, 8
  store i64 %3117, i64* %PC.i3723
  %3118 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3118, i64* %RCX.i3724, align 8
  store %struct.Memory* %loadMem_4aa9f7, %struct.Memory** %MEMORY
  %loadMem_4aa9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3120 = getelementptr inbounds %struct.GPR, %struct.GPR* %3119, i32 0, i32 33
  %3121 = getelementptr inbounds %struct.Reg, %struct.Reg* %3120, i32 0, i32 0
  %PC.i3720 = bitcast %union.anon* %3121 to i64*
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3123 = getelementptr inbounds %struct.GPR, %struct.GPR* %3122, i32 0, i32 7
  %3124 = getelementptr inbounds %struct.Reg, %struct.Reg* %3123, i32 0, i32 0
  %RDX.i3721 = bitcast %union.anon* %3124 to i64*
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 15
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %RBP.i3722 = bitcast %union.anon* %3127 to i64*
  %3128 = load i64, i64* %RBP.i3722
  %3129 = sub i64 %3128, 24
  %3130 = load i64, i64* %PC.i3720
  %3131 = add i64 %3130, 4
  store i64 %3131, i64* %PC.i3720
  %3132 = inttoptr i64 %3129 to i32*
  %3133 = load i32, i32* %3132
  %3134 = sext i32 %3133 to i64
  store i64 %3134, i64* %RDX.i3721, align 8
  store %struct.Memory* %loadMem_4aa9ff, %struct.Memory** %MEMORY
  %loadMem_4aaa03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3136 = getelementptr inbounds %struct.GPR, %struct.GPR* %3135, i32 0, i32 33
  %3137 = getelementptr inbounds %struct.Reg, %struct.Reg* %3136, i32 0, i32 0
  %PC.i3716 = bitcast %union.anon* %3137 to i64*
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3139 = getelementptr inbounds %struct.GPR, %struct.GPR* %3138, i32 0, i32 5
  %3140 = getelementptr inbounds %struct.Reg, %struct.Reg* %3139, i32 0, i32 0
  %RCX.i3717 = bitcast %union.anon* %3140 to i64*
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3142 = getelementptr inbounds %struct.GPR, %struct.GPR* %3141, i32 0, i32 7
  %3143 = getelementptr inbounds %struct.Reg, %struct.Reg* %3142, i32 0, i32 0
  %RDX.i3718 = bitcast %union.anon* %3143 to i64*
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3145 = getelementptr inbounds %struct.GPR, %struct.GPR* %3144, i32 0, i32 9
  %3146 = getelementptr inbounds %struct.Reg, %struct.Reg* %3145, i32 0, i32 0
  %RSI.i3719 = bitcast %union.anon* %3146 to i64*
  %3147 = load i64, i64* %RCX.i3717
  %3148 = load i64, i64* %RDX.i3718
  %3149 = mul i64 %3148, 4
  %3150 = add i64 %3147, 13240
  %3151 = add i64 %3150, %3149
  %3152 = load i64, i64* %PC.i3716
  %3153 = add i64 %3152, 7
  store i64 %3153, i64* %PC.i3716
  %3154 = inttoptr i64 %3151 to i32*
  %3155 = load i32, i32* %3154
  %3156 = zext i32 %3155 to i64
  store i64 %3156, i64* %RSI.i3719, align 8
  store %struct.Memory* %loadMem_4aaa03, %struct.Memory** %MEMORY
  %loadMem_4aaa0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 33
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %PC.i3714 = bitcast %union.anon* %3159 to i64*
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 5
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %RCX.i3715 = bitcast %union.anon* %3162 to i64*
  %3163 = load i64, i64* %PC.i3714
  %3164 = add i64 %3163, 8
  store i64 %3164, i64* %PC.i3714
  %3165 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3165, i64* %RCX.i3715, align 8
  store %struct.Memory* %loadMem_4aaa0a, %struct.Memory** %MEMORY
  %loadMem_4aaa12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 33
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %PC.i3711 = bitcast %union.anon* %3168 to i64*
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 7
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %RDX.i3712 = bitcast %union.anon* %3171 to i64*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3173 = getelementptr inbounds %struct.GPR, %struct.GPR* %3172, i32 0, i32 15
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %RBP.i3713 = bitcast %union.anon* %3174 to i64*
  %3175 = load i64, i64* %RBP.i3713
  %3176 = sub i64 %3175, 24
  %3177 = load i64, i64* %PC.i3711
  %3178 = add i64 %3177, 4
  store i64 %3178, i64* %PC.i3711
  %3179 = inttoptr i64 %3176 to i32*
  %3180 = load i32, i32* %3179
  %3181 = sext i32 %3180 to i64
  store i64 %3181, i64* %RDX.i3712, align 8
  store %struct.Memory* %loadMem_4aaa12, %struct.Memory** %MEMORY
  %loadMem_4aaa16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3183 = getelementptr inbounds %struct.GPR, %struct.GPR* %3182, i32 0, i32 33
  %3184 = getelementptr inbounds %struct.Reg, %struct.Reg* %3183, i32 0, i32 0
  %PC.i3707 = bitcast %union.anon* %3184 to i64*
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3186 = getelementptr inbounds %struct.GPR, %struct.GPR* %3185, i32 0, i32 5
  %3187 = getelementptr inbounds %struct.Reg, %struct.Reg* %3186, i32 0, i32 0
  %RCX.i3708 = bitcast %union.anon* %3187 to i64*
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3189 = getelementptr inbounds %struct.GPR, %struct.GPR* %3188, i32 0, i32 7
  %3190 = getelementptr inbounds %struct.Reg, %struct.Reg* %3189, i32 0, i32 0
  %RDX.i3709 = bitcast %union.anon* %3190 to i64*
  %3191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3192 = getelementptr inbounds %struct.GPR, %struct.GPR* %3191, i32 0, i32 9
  %3193 = getelementptr inbounds %struct.Reg, %struct.Reg* %3192, i32 0, i32 0
  %RSI.i3710 = bitcast %union.anon* %3193 to i64*
  %3194 = load i64, i64* %RSI.i3710
  %3195 = load i64, i64* %RCX.i3708
  %3196 = load i64, i64* %RDX.i3709
  %3197 = mul i64 %3196, 4
  %3198 = add i64 %3195, 13432
  %3199 = add i64 %3198, %3197
  %3200 = load i64, i64* %PC.i3707
  %3201 = add i64 %3200, 7
  store i64 %3201, i64* %PC.i3707
  %3202 = trunc i64 %3194 to i32
  %3203 = inttoptr i64 %3199 to i32*
  %3204 = load i32, i32* %3203
  %3205 = add i32 %3204, %3202
  %3206 = zext i32 %3205 to i64
  store i64 %3206, i64* %RSI.i3710, align 8
  %3207 = icmp ult i32 %3205, %3202
  %3208 = icmp ult i32 %3205, %3204
  %3209 = or i1 %3207, %3208
  %3210 = zext i1 %3209 to i8
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3210, i8* %3211, align 1
  %3212 = and i32 %3205, 255
  %3213 = call i32 @llvm.ctpop.i32(i32 %3212)
  %3214 = trunc i32 %3213 to i8
  %3215 = and i8 %3214, 1
  %3216 = xor i8 %3215, 1
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3216, i8* %3217, align 1
  %3218 = xor i32 %3204, %3202
  %3219 = xor i32 %3218, %3205
  %3220 = lshr i32 %3219, 4
  %3221 = trunc i32 %3220 to i8
  %3222 = and i8 %3221, 1
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3222, i8* %3223, align 1
  %3224 = icmp eq i32 %3205, 0
  %3225 = zext i1 %3224 to i8
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3225, i8* %3226, align 1
  %3227 = lshr i32 %3205, 31
  %3228 = trunc i32 %3227 to i8
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3228, i8* %3229, align 1
  %3230 = lshr i32 %3202, 31
  %3231 = lshr i32 %3204, 31
  %3232 = xor i32 %3227, %3230
  %3233 = xor i32 %3227, %3231
  %3234 = add i32 %3232, %3233
  %3235 = icmp eq i32 %3234, 2
  %3236 = zext i1 %3235 to i8
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3236, i8* %3237, align 1
  store %struct.Memory* %loadMem_4aaa16, %struct.Memory** %MEMORY
  %loadMem_4aaa1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3239 = getelementptr inbounds %struct.GPR, %struct.GPR* %3238, i32 0, i32 33
  %3240 = getelementptr inbounds %struct.Reg, %struct.Reg* %3239, i32 0, i32 0
  %PC.i3704 = bitcast %union.anon* %3240 to i64*
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3242 = getelementptr inbounds %struct.GPR, %struct.GPR* %3241, i32 0, i32 9
  %3243 = getelementptr inbounds %struct.Reg, %struct.Reg* %3242, i32 0, i32 0
  %ESI.i3705 = bitcast %union.anon* %3243 to i32*
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3245 = getelementptr inbounds %struct.GPR, %struct.GPR* %3244, i32 0, i32 15
  %3246 = getelementptr inbounds %struct.Reg, %struct.Reg* %3245, i32 0, i32 0
  %RBP.i3706 = bitcast %union.anon* %3246 to i64*
  %3247 = load i64, i64* %RBP.i3706
  %3248 = sub i64 %3247, 440
  %3249 = load i32, i32* %ESI.i3705
  %3250 = zext i32 %3249 to i64
  %3251 = load i64, i64* %PC.i3704
  %3252 = add i64 %3251, 6
  store i64 %3252, i64* %PC.i3704
  %3253 = inttoptr i64 %3248 to i32*
  store i32 %3249, i32* %3253
  store %struct.Memory* %loadMem_4aaa1d, %struct.Memory** %MEMORY
  %loadMem_4aaa23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3255 = getelementptr inbounds %struct.GPR, %struct.GPR* %3254, i32 0, i32 33
  %3256 = getelementptr inbounds %struct.Reg, %struct.Reg* %3255, i32 0, i32 0
  %PC.i3702 = bitcast %union.anon* %3256 to i64*
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3258 = getelementptr inbounds %struct.GPR, %struct.GPR* %3257, i32 0, i32 5
  %3259 = getelementptr inbounds %struct.Reg, %struct.Reg* %3258, i32 0, i32 0
  %RCX.i3703 = bitcast %union.anon* %3259 to i64*
  %3260 = load i64, i64* %PC.i3702
  %3261 = add i64 %3260, 8
  store i64 %3261, i64* %PC.i3702
  %3262 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3262, i64* %RCX.i3703, align 8
  store %struct.Memory* %loadMem_4aaa23, %struct.Memory** %MEMORY
  %loadMem_4aaa2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3264 = getelementptr inbounds %struct.GPR, %struct.GPR* %3263, i32 0, i32 33
  %3265 = getelementptr inbounds %struct.Reg, %struct.Reg* %3264, i32 0, i32 0
  %PC.i3699 = bitcast %union.anon* %3265 to i64*
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3267 = getelementptr inbounds %struct.GPR, %struct.GPR* %3266, i32 0, i32 7
  %3268 = getelementptr inbounds %struct.Reg, %struct.Reg* %3267, i32 0, i32 0
  %RDX.i3700 = bitcast %union.anon* %3268 to i64*
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3270 = getelementptr inbounds %struct.GPR, %struct.GPR* %3269, i32 0, i32 15
  %3271 = getelementptr inbounds %struct.Reg, %struct.Reg* %3270, i32 0, i32 0
  %RBP.i3701 = bitcast %union.anon* %3271 to i64*
  %3272 = load i64, i64* %RBP.i3701
  %3273 = sub i64 %3272, 24
  %3274 = load i64, i64* %PC.i3699
  %3275 = add i64 %3274, 4
  store i64 %3275, i64* %PC.i3699
  %3276 = inttoptr i64 %3273 to i32*
  %3277 = load i32, i32* %3276
  %3278 = sext i32 %3277 to i64
  store i64 %3278, i64* %RDX.i3700, align 8
  store %struct.Memory* %loadMem_4aaa2b, %struct.Memory** %MEMORY
  %loadMem_4aaa2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3280 = getelementptr inbounds %struct.GPR, %struct.GPR* %3279, i32 0, i32 33
  %3281 = getelementptr inbounds %struct.Reg, %struct.Reg* %3280, i32 0, i32 0
  %PC.i3695 = bitcast %union.anon* %3281 to i64*
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3283 = getelementptr inbounds %struct.GPR, %struct.GPR* %3282, i32 0, i32 5
  %3284 = getelementptr inbounds %struct.Reg, %struct.Reg* %3283, i32 0, i32 0
  %RCX.i3696 = bitcast %union.anon* %3284 to i64*
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3286 = getelementptr inbounds %struct.GPR, %struct.GPR* %3285, i32 0, i32 7
  %3287 = getelementptr inbounds %struct.Reg, %struct.Reg* %3286, i32 0, i32 0
  %RDX.i3697 = bitcast %union.anon* %3287 to i64*
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3289 = getelementptr inbounds %struct.GPR, %struct.GPR* %3288, i32 0, i32 9
  %3290 = getelementptr inbounds %struct.Reg, %struct.Reg* %3289, i32 0, i32 0
  %RSI.i3698 = bitcast %union.anon* %3290 to i64*
  %3291 = load i64, i64* %RCX.i3696
  %3292 = load i64, i64* %RDX.i3697
  %3293 = mul i64 %3292, 4
  %3294 = add i64 %3291, 13304
  %3295 = add i64 %3294, %3293
  %3296 = load i64, i64* %PC.i3695
  %3297 = add i64 %3296, 7
  store i64 %3297, i64* %PC.i3695
  %3298 = inttoptr i64 %3295 to i32*
  %3299 = load i32, i32* %3298
  %3300 = zext i32 %3299 to i64
  store i64 %3300, i64* %RSI.i3698, align 8
  store %struct.Memory* %loadMem_4aaa2f, %struct.Memory** %MEMORY
  %loadMem_4aaa36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3302 = getelementptr inbounds %struct.GPR, %struct.GPR* %3301, i32 0, i32 33
  %3303 = getelementptr inbounds %struct.Reg, %struct.Reg* %3302, i32 0, i32 0
  %PC.i3693 = bitcast %union.anon* %3303 to i64*
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3305 = getelementptr inbounds %struct.GPR, %struct.GPR* %3304, i32 0, i32 5
  %3306 = getelementptr inbounds %struct.Reg, %struct.Reg* %3305, i32 0, i32 0
  %RCX.i3694 = bitcast %union.anon* %3306 to i64*
  %3307 = load i64, i64* %PC.i3693
  %3308 = add i64 %3307, 8
  store i64 %3308, i64* %PC.i3693
  %3309 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3309, i64* %RCX.i3694, align 8
  store %struct.Memory* %loadMem_4aaa36, %struct.Memory** %MEMORY
  %loadMem_4aaa3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3311 = getelementptr inbounds %struct.GPR, %struct.GPR* %3310, i32 0, i32 33
  %3312 = getelementptr inbounds %struct.Reg, %struct.Reg* %3311, i32 0, i32 0
  %PC.i3690 = bitcast %union.anon* %3312 to i64*
  %3313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3314 = getelementptr inbounds %struct.GPR, %struct.GPR* %3313, i32 0, i32 7
  %3315 = getelementptr inbounds %struct.Reg, %struct.Reg* %3314, i32 0, i32 0
  %RDX.i3691 = bitcast %union.anon* %3315 to i64*
  %3316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3317 = getelementptr inbounds %struct.GPR, %struct.GPR* %3316, i32 0, i32 15
  %3318 = getelementptr inbounds %struct.Reg, %struct.Reg* %3317, i32 0, i32 0
  %RBP.i3692 = bitcast %union.anon* %3318 to i64*
  %3319 = load i64, i64* %RBP.i3692
  %3320 = sub i64 %3319, 24
  %3321 = load i64, i64* %PC.i3690
  %3322 = add i64 %3321, 4
  store i64 %3322, i64* %PC.i3690
  %3323 = inttoptr i64 %3320 to i32*
  %3324 = load i32, i32* %3323
  %3325 = sext i32 %3324 to i64
  store i64 %3325, i64* %RDX.i3691, align 8
  store %struct.Memory* %loadMem_4aaa3e, %struct.Memory** %MEMORY
  %loadMem_4aaa42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3327 = getelementptr inbounds %struct.GPR, %struct.GPR* %3326, i32 0, i32 33
  %3328 = getelementptr inbounds %struct.Reg, %struct.Reg* %3327, i32 0, i32 0
  %PC.i3686 = bitcast %union.anon* %3328 to i64*
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3330 = getelementptr inbounds %struct.GPR, %struct.GPR* %3329, i32 0, i32 5
  %3331 = getelementptr inbounds %struct.Reg, %struct.Reg* %3330, i32 0, i32 0
  %RCX.i3687 = bitcast %union.anon* %3331 to i64*
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3333 = getelementptr inbounds %struct.GPR, %struct.GPR* %3332, i32 0, i32 7
  %3334 = getelementptr inbounds %struct.Reg, %struct.Reg* %3333, i32 0, i32 0
  %RDX.i3688 = bitcast %union.anon* %3334 to i64*
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3336 = getelementptr inbounds %struct.GPR, %struct.GPR* %3335, i32 0, i32 9
  %3337 = getelementptr inbounds %struct.Reg, %struct.Reg* %3336, i32 0, i32 0
  %RSI.i3689 = bitcast %union.anon* %3337 to i64*
  %3338 = load i64, i64* %RSI.i3689
  %3339 = load i64, i64* %RCX.i3687
  %3340 = load i64, i64* %RDX.i3688
  %3341 = mul i64 %3340, 4
  %3342 = add i64 %3339, 13368
  %3343 = add i64 %3342, %3341
  %3344 = load i64, i64* %PC.i3686
  %3345 = add i64 %3344, 7
  store i64 %3345, i64* %PC.i3686
  %3346 = trunc i64 %3338 to i32
  %3347 = inttoptr i64 %3343 to i32*
  %3348 = load i32, i32* %3347
  %3349 = add i32 %3348, %3346
  %3350 = zext i32 %3349 to i64
  store i64 %3350, i64* %RSI.i3689, align 8
  %3351 = icmp ult i32 %3349, %3346
  %3352 = icmp ult i32 %3349, %3348
  %3353 = or i1 %3351, %3352
  %3354 = zext i1 %3353 to i8
  %3355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3354, i8* %3355, align 1
  %3356 = and i32 %3349, 255
  %3357 = call i32 @llvm.ctpop.i32(i32 %3356)
  %3358 = trunc i32 %3357 to i8
  %3359 = and i8 %3358, 1
  %3360 = xor i8 %3359, 1
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3360, i8* %3361, align 1
  %3362 = xor i32 %3348, %3346
  %3363 = xor i32 %3362, %3349
  %3364 = lshr i32 %3363, 4
  %3365 = trunc i32 %3364 to i8
  %3366 = and i8 %3365, 1
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3366, i8* %3367, align 1
  %3368 = icmp eq i32 %3349, 0
  %3369 = zext i1 %3368 to i8
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3369, i8* %3370, align 1
  %3371 = lshr i32 %3349, 31
  %3372 = trunc i32 %3371 to i8
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3372, i8* %3373, align 1
  %3374 = lshr i32 %3346, 31
  %3375 = lshr i32 %3348, 31
  %3376 = xor i32 %3371, %3374
  %3377 = xor i32 %3371, %3375
  %3378 = add i32 %3376, %3377
  %3379 = icmp eq i32 %3378, 2
  %3380 = zext i1 %3379 to i8
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3380, i8* %3381, align 1
  store %struct.Memory* %loadMem_4aaa42, %struct.Memory** %MEMORY
  %loadMem_4aaa49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3383 = getelementptr inbounds %struct.GPR, %struct.GPR* %3382, i32 0, i32 33
  %3384 = getelementptr inbounds %struct.Reg, %struct.Reg* %3383, i32 0, i32 0
  %PC.i3683 = bitcast %union.anon* %3384 to i64*
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3386 = getelementptr inbounds %struct.GPR, %struct.GPR* %3385, i32 0, i32 9
  %3387 = getelementptr inbounds %struct.Reg, %struct.Reg* %3386, i32 0, i32 0
  %ESI.i3684 = bitcast %union.anon* %3387 to i32*
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3389 = getelementptr inbounds %struct.GPR, %struct.GPR* %3388, i32 0, i32 15
  %3390 = getelementptr inbounds %struct.Reg, %struct.Reg* %3389, i32 0, i32 0
  %RBP.i3685 = bitcast %union.anon* %3390 to i64*
  %3391 = load i64, i64* %RBP.i3685
  %3392 = sub i64 %3391, 436
  %3393 = load i32, i32* %ESI.i3684
  %3394 = zext i32 %3393 to i64
  %3395 = load i64, i64* %PC.i3683
  %3396 = add i64 %3395, 6
  store i64 %3396, i64* %PC.i3683
  %3397 = inttoptr i64 %3392 to i32*
  store i32 %3393, i32* %3397
  store %struct.Memory* %loadMem_4aaa49, %struct.Memory** %MEMORY
  %loadMem_4aaa4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3399 = getelementptr inbounds %struct.GPR, %struct.GPR* %3398, i32 0, i32 33
  %3400 = getelementptr inbounds %struct.Reg, %struct.Reg* %3399, i32 0, i32 0
  %PC.i3680 = bitcast %union.anon* %3400 to i64*
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 9
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %RSI.i3681 = bitcast %union.anon* %3403 to i64*
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 15
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %RBP.i3682 = bitcast %union.anon* %3406 to i64*
  %3407 = load i64, i64* %RBP.i3682
  %3408 = sub i64 %3407, 448
  %3409 = load i64, i64* %PC.i3680
  %3410 = add i64 %3409, 6
  store i64 %3410, i64* %PC.i3680
  %3411 = inttoptr i64 %3408 to i32*
  %3412 = load i32, i32* %3411
  %3413 = zext i32 %3412 to i64
  store i64 %3413, i64* %RSI.i3681, align 8
  store %struct.Memory* %loadMem_4aaa4f, %struct.Memory** %MEMORY
  %loadMem_4aaa55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3415 = getelementptr inbounds %struct.GPR, %struct.GPR* %3414, i32 0, i32 33
  %3416 = getelementptr inbounds %struct.Reg, %struct.Reg* %3415, i32 0, i32 0
  %PC.i3677 = bitcast %union.anon* %3416 to i64*
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3418 = getelementptr inbounds %struct.GPR, %struct.GPR* %3417, i32 0, i32 9
  %3419 = getelementptr inbounds %struct.Reg, %struct.Reg* %3418, i32 0, i32 0
  %RSI.i3678 = bitcast %union.anon* %3419 to i64*
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3421 = getelementptr inbounds %struct.GPR, %struct.GPR* %3420, i32 0, i32 15
  %3422 = getelementptr inbounds %struct.Reg, %struct.Reg* %3421, i32 0, i32 0
  %RBP.i3679 = bitcast %union.anon* %3422 to i64*
  %3423 = load i64, i64* %RSI.i3678
  %3424 = load i64, i64* %RBP.i3679
  %3425 = sub i64 %3424, 436
  %3426 = load i64, i64* %PC.i3677
  %3427 = add i64 %3426, 6
  store i64 %3427, i64* %PC.i3677
  %3428 = trunc i64 %3423 to i32
  %3429 = inttoptr i64 %3425 to i32*
  %3430 = load i32, i32* %3429
  %3431 = add i32 %3430, %3428
  %3432 = zext i32 %3431 to i64
  store i64 %3432, i64* %RSI.i3678, align 8
  %3433 = icmp ult i32 %3431, %3428
  %3434 = icmp ult i32 %3431, %3430
  %3435 = or i1 %3433, %3434
  %3436 = zext i1 %3435 to i8
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3436, i8* %3437, align 1
  %3438 = and i32 %3431, 255
  %3439 = call i32 @llvm.ctpop.i32(i32 %3438)
  %3440 = trunc i32 %3439 to i8
  %3441 = and i8 %3440, 1
  %3442 = xor i8 %3441, 1
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3442, i8* %3443, align 1
  %3444 = xor i32 %3430, %3428
  %3445 = xor i32 %3444, %3431
  %3446 = lshr i32 %3445, 4
  %3447 = trunc i32 %3446 to i8
  %3448 = and i8 %3447, 1
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3448, i8* %3449, align 1
  %3450 = icmp eq i32 %3431, 0
  %3451 = zext i1 %3450 to i8
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3451, i8* %3452, align 1
  %3453 = lshr i32 %3431, 31
  %3454 = trunc i32 %3453 to i8
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3454, i8* %3455, align 1
  %3456 = lshr i32 %3428, 31
  %3457 = lshr i32 %3430, 31
  %3458 = xor i32 %3453, %3456
  %3459 = xor i32 %3453, %3457
  %3460 = add i32 %3458, %3459
  %3461 = icmp eq i32 %3460, 2
  %3462 = zext i1 %3461 to i8
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3462, i8* %3463, align 1
  store %struct.Memory* %loadMem_4aaa55, %struct.Memory** %MEMORY
  %loadMem_4aaa5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3465 = getelementptr inbounds %struct.GPR, %struct.GPR* %3464, i32 0, i32 33
  %3466 = getelementptr inbounds %struct.Reg, %struct.Reg* %3465, i32 0, i32 0
  %PC.i3674 = bitcast %union.anon* %3466 to i64*
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3468 = getelementptr inbounds %struct.GPR, %struct.GPR* %3467, i32 0, i32 9
  %3469 = getelementptr inbounds %struct.Reg, %struct.Reg* %3468, i32 0, i32 0
  %ESI.i3675 = bitcast %union.anon* %3469 to i32*
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 15
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %RBP.i3676 = bitcast %union.anon* %3472 to i64*
  %3473 = load i64, i64* %RBP.i3676
  %3474 = sub i64 %3473, 480
  %3475 = load i32, i32* %ESI.i3675
  %3476 = zext i32 %3475 to i64
  %3477 = load i64, i64* %PC.i3674
  %3478 = add i64 %3477, 6
  store i64 %3478, i64* %PC.i3674
  %3479 = inttoptr i64 %3474 to i32*
  store i32 %3475, i32* %3479
  store %struct.Memory* %loadMem_4aaa5b, %struct.Memory** %MEMORY
  %loadMem_4aaa61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3481 = getelementptr inbounds %struct.GPR, %struct.GPR* %3480, i32 0, i32 33
  %3482 = getelementptr inbounds %struct.Reg, %struct.Reg* %3481, i32 0, i32 0
  %PC.i3671 = bitcast %union.anon* %3482 to i64*
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3484 = getelementptr inbounds %struct.GPR, %struct.GPR* %3483, i32 0, i32 9
  %3485 = getelementptr inbounds %struct.Reg, %struct.Reg* %3484, i32 0, i32 0
  %RSI.i3672 = bitcast %union.anon* %3485 to i64*
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3487 = getelementptr inbounds %struct.GPR, %struct.GPR* %3486, i32 0, i32 15
  %3488 = getelementptr inbounds %struct.Reg, %struct.Reg* %3487, i32 0, i32 0
  %RBP.i3673 = bitcast %union.anon* %3488 to i64*
  %3489 = load i64, i64* %RBP.i3673
  %3490 = sub i64 %3489, 444
  %3491 = load i64, i64* %PC.i3671
  %3492 = add i64 %3491, 6
  store i64 %3492, i64* %PC.i3671
  %3493 = inttoptr i64 %3490 to i32*
  %3494 = load i32, i32* %3493
  %3495 = zext i32 %3494 to i64
  store i64 %3495, i64* %RSI.i3672, align 8
  store %struct.Memory* %loadMem_4aaa61, %struct.Memory** %MEMORY
  %loadMem_4aaa67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3497 = getelementptr inbounds %struct.GPR, %struct.GPR* %3496, i32 0, i32 33
  %3498 = getelementptr inbounds %struct.Reg, %struct.Reg* %3497, i32 0, i32 0
  %PC.i3668 = bitcast %union.anon* %3498 to i64*
  %3499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3500 = getelementptr inbounds %struct.GPR, %struct.GPR* %3499, i32 0, i32 9
  %3501 = getelementptr inbounds %struct.Reg, %struct.Reg* %3500, i32 0, i32 0
  %RSI.i3669 = bitcast %union.anon* %3501 to i64*
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3503 = getelementptr inbounds %struct.GPR, %struct.GPR* %3502, i32 0, i32 15
  %3504 = getelementptr inbounds %struct.Reg, %struct.Reg* %3503, i32 0, i32 0
  %RBP.i3670 = bitcast %union.anon* %3504 to i64*
  %3505 = load i64, i64* %RSI.i3669
  %3506 = load i64, i64* %RBP.i3670
  %3507 = sub i64 %3506, 440
  %3508 = load i64, i64* %PC.i3668
  %3509 = add i64 %3508, 6
  store i64 %3509, i64* %PC.i3668
  %3510 = trunc i64 %3505 to i32
  %3511 = inttoptr i64 %3507 to i32*
  %3512 = load i32, i32* %3511
  %3513 = add i32 %3512, %3510
  %3514 = zext i32 %3513 to i64
  store i64 %3514, i64* %RSI.i3669, align 8
  %3515 = icmp ult i32 %3513, %3510
  %3516 = icmp ult i32 %3513, %3512
  %3517 = or i1 %3515, %3516
  %3518 = zext i1 %3517 to i8
  %3519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3518, i8* %3519, align 1
  %3520 = and i32 %3513, 255
  %3521 = call i32 @llvm.ctpop.i32(i32 %3520)
  %3522 = trunc i32 %3521 to i8
  %3523 = and i8 %3522, 1
  %3524 = xor i8 %3523, 1
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3524, i8* %3525, align 1
  %3526 = xor i32 %3512, %3510
  %3527 = xor i32 %3526, %3513
  %3528 = lshr i32 %3527, 4
  %3529 = trunc i32 %3528 to i8
  %3530 = and i8 %3529, 1
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3530, i8* %3531, align 1
  %3532 = icmp eq i32 %3513, 0
  %3533 = zext i1 %3532 to i8
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3533, i8* %3534, align 1
  %3535 = lshr i32 %3513, 31
  %3536 = trunc i32 %3535 to i8
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3536, i8* %3537, align 1
  %3538 = lshr i32 %3510, 31
  %3539 = lshr i32 %3512, 31
  %3540 = xor i32 %3535, %3538
  %3541 = xor i32 %3535, %3539
  %3542 = add i32 %3540, %3541
  %3543 = icmp eq i32 %3542, 2
  %3544 = zext i1 %3543 to i8
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3544, i8* %3545, align 1
  store %struct.Memory* %loadMem_4aaa67, %struct.Memory** %MEMORY
  %loadMem_4aaa6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3547 = getelementptr inbounds %struct.GPR, %struct.GPR* %3546, i32 0, i32 33
  %3548 = getelementptr inbounds %struct.Reg, %struct.Reg* %3547, i32 0, i32 0
  %PC.i3665 = bitcast %union.anon* %3548 to i64*
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3550 = getelementptr inbounds %struct.GPR, %struct.GPR* %3549, i32 0, i32 9
  %3551 = getelementptr inbounds %struct.Reg, %struct.Reg* %3550, i32 0, i32 0
  %ESI.i3666 = bitcast %union.anon* %3551 to i32*
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3553 = getelementptr inbounds %struct.GPR, %struct.GPR* %3552, i32 0, i32 15
  %3554 = getelementptr inbounds %struct.Reg, %struct.Reg* %3553, i32 0, i32 0
  %RBP.i3667 = bitcast %union.anon* %3554 to i64*
  %3555 = load i64, i64* %RBP.i3667
  %3556 = sub i64 %3555, 476
  %3557 = load i32, i32* %ESI.i3666
  %3558 = zext i32 %3557 to i64
  %3559 = load i64, i64* %PC.i3665
  %3560 = add i64 %3559, 6
  store i64 %3560, i64* %PC.i3665
  %3561 = inttoptr i64 %3556 to i32*
  store i32 %3557, i32* %3561
  store %struct.Memory* %loadMem_4aaa6d, %struct.Memory** %MEMORY
  %loadMem_4aaa73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3563 = getelementptr inbounds %struct.GPR, %struct.GPR* %3562, i32 0, i32 33
  %3564 = getelementptr inbounds %struct.Reg, %struct.Reg* %3563, i32 0, i32 0
  %PC.i3662 = bitcast %union.anon* %3564 to i64*
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3566 = getelementptr inbounds %struct.GPR, %struct.GPR* %3565, i32 0, i32 9
  %3567 = getelementptr inbounds %struct.Reg, %struct.Reg* %3566, i32 0, i32 0
  %RSI.i3663 = bitcast %union.anon* %3567 to i64*
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3569 = getelementptr inbounds %struct.GPR, %struct.GPR* %3568, i32 0, i32 15
  %3570 = getelementptr inbounds %struct.Reg, %struct.Reg* %3569, i32 0, i32 0
  %RBP.i3664 = bitcast %union.anon* %3570 to i64*
  %3571 = load i64, i64* %RBP.i3664
  %3572 = sub i64 %3571, 448
  %3573 = load i64, i64* %PC.i3662
  %3574 = add i64 %3573, 6
  store i64 %3574, i64* %PC.i3662
  %3575 = inttoptr i64 %3572 to i32*
  %3576 = load i32, i32* %3575
  %3577 = zext i32 %3576 to i64
  store i64 %3577, i64* %RSI.i3663, align 8
  store %struct.Memory* %loadMem_4aaa73, %struct.Memory** %MEMORY
  %loadMem_4aaa79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 33
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %PC.i3659 = bitcast %union.anon* %3580 to i64*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 9
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %RSI.i3660 = bitcast %union.anon* %3583 to i64*
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 15
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %RBP.i3661 = bitcast %union.anon* %3586 to i64*
  %3587 = load i64, i64* %RSI.i3660
  %3588 = load i64, i64* %RBP.i3661
  %3589 = sub i64 %3588, 436
  %3590 = load i64, i64* %PC.i3659
  %3591 = add i64 %3590, 6
  store i64 %3591, i64* %PC.i3659
  %3592 = trunc i64 %3587 to i32
  %3593 = inttoptr i64 %3589 to i32*
  %3594 = load i32, i32* %3593
  %3595 = sub i32 %3592, %3594
  %3596 = zext i32 %3595 to i64
  store i64 %3596, i64* %RSI.i3660, align 8
  %3597 = icmp ult i32 %3592, %3594
  %3598 = zext i1 %3597 to i8
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3598, i8* %3599, align 1
  %3600 = and i32 %3595, 255
  %3601 = call i32 @llvm.ctpop.i32(i32 %3600)
  %3602 = trunc i32 %3601 to i8
  %3603 = and i8 %3602, 1
  %3604 = xor i8 %3603, 1
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3604, i8* %3605, align 1
  %3606 = xor i32 %3594, %3592
  %3607 = xor i32 %3606, %3595
  %3608 = lshr i32 %3607, 4
  %3609 = trunc i32 %3608 to i8
  %3610 = and i8 %3609, 1
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3610, i8* %3611, align 1
  %3612 = icmp eq i32 %3595, 0
  %3613 = zext i1 %3612 to i8
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3613, i8* %3614, align 1
  %3615 = lshr i32 %3595, 31
  %3616 = trunc i32 %3615 to i8
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3616, i8* %3617, align 1
  %3618 = lshr i32 %3592, 31
  %3619 = lshr i32 %3594, 31
  %3620 = xor i32 %3619, %3618
  %3621 = xor i32 %3615, %3618
  %3622 = add i32 %3621, %3620
  %3623 = icmp eq i32 %3622, 2
  %3624 = zext i1 %3623 to i8
  %3625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3624, i8* %3625, align 1
  store %struct.Memory* %loadMem_4aaa79, %struct.Memory** %MEMORY
  %loadMem_4aaa7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3627 = getelementptr inbounds %struct.GPR, %struct.GPR* %3626, i32 0, i32 33
  %3628 = getelementptr inbounds %struct.Reg, %struct.Reg* %3627, i32 0, i32 0
  %PC.i3656 = bitcast %union.anon* %3628 to i64*
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 9
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %ESI.i3657 = bitcast %union.anon* %3631 to i32*
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 15
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %RBP.i3658 = bitcast %union.anon* %3634 to i64*
  %3635 = load i64, i64* %RBP.i3658
  %3636 = sub i64 %3635, 472
  %3637 = load i32, i32* %ESI.i3657
  %3638 = zext i32 %3637 to i64
  %3639 = load i64, i64* %PC.i3656
  %3640 = add i64 %3639, 6
  store i64 %3640, i64* %PC.i3656
  %3641 = inttoptr i64 %3636 to i32*
  store i32 %3637, i32* %3641
  store %struct.Memory* %loadMem_4aaa7f, %struct.Memory** %MEMORY
  %loadMem_4aaa85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3643 = getelementptr inbounds %struct.GPR, %struct.GPR* %3642, i32 0, i32 33
  %3644 = getelementptr inbounds %struct.Reg, %struct.Reg* %3643, i32 0, i32 0
  %PC.i3653 = bitcast %union.anon* %3644 to i64*
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3646 = getelementptr inbounds %struct.GPR, %struct.GPR* %3645, i32 0, i32 9
  %3647 = getelementptr inbounds %struct.Reg, %struct.Reg* %3646, i32 0, i32 0
  %RSI.i3654 = bitcast %union.anon* %3647 to i64*
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3649 = getelementptr inbounds %struct.GPR, %struct.GPR* %3648, i32 0, i32 15
  %3650 = getelementptr inbounds %struct.Reg, %struct.Reg* %3649, i32 0, i32 0
  %RBP.i3655 = bitcast %union.anon* %3650 to i64*
  %3651 = load i64, i64* %RBP.i3655
  %3652 = sub i64 %3651, 444
  %3653 = load i64, i64* %PC.i3653
  %3654 = add i64 %3653, 6
  store i64 %3654, i64* %PC.i3653
  %3655 = inttoptr i64 %3652 to i32*
  %3656 = load i32, i32* %3655
  %3657 = zext i32 %3656 to i64
  store i64 %3657, i64* %RSI.i3654, align 8
  store %struct.Memory* %loadMem_4aaa85, %struct.Memory** %MEMORY
  %loadMem_4aaa8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3659 = getelementptr inbounds %struct.GPR, %struct.GPR* %3658, i32 0, i32 33
  %3660 = getelementptr inbounds %struct.Reg, %struct.Reg* %3659, i32 0, i32 0
  %PC.i3650 = bitcast %union.anon* %3660 to i64*
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3662 = getelementptr inbounds %struct.GPR, %struct.GPR* %3661, i32 0, i32 9
  %3663 = getelementptr inbounds %struct.Reg, %struct.Reg* %3662, i32 0, i32 0
  %RSI.i3651 = bitcast %union.anon* %3663 to i64*
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3665 = getelementptr inbounds %struct.GPR, %struct.GPR* %3664, i32 0, i32 15
  %3666 = getelementptr inbounds %struct.Reg, %struct.Reg* %3665, i32 0, i32 0
  %RBP.i3652 = bitcast %union.anon* %3666 to i64*
  %3667 = load i64, i64* %RSI.i3651
  %3668 = load i64, i64* %RBP.i3652
  %3669 = sub i64 %3668, 440
  %3670 = load i64, i64* %PC.i3650
  %3671 = add i64 %3670, 6
  store i64 %3671, i64* %PC.i3650
  %3672 = trunc i64 %3667 to i32
  %3673 = inttoptr i64 %3669 to i32*
  %3674 = load i32, i32* %3673
  %3675 = sub i32 %3672, %3674
  %3676 = zext i32 %3675 to i64
  store i64 %3676, i64* %RSI.i3651, align 8
  %3677 = icmp ult i32 %3672, %3674
  %3678 = zext i1 %3677 to i8
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3678, i8* %3679, align 1
  %3680 = and i32 %3675, 255
  %3681 = call i32 @llvm.ctpop.i32(i32 %3680)
  %3682 = trunc i32 %3681 to i8
  %3683 = and i8 %3682, 1
  %3684 = xor i8 %3683, 1
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3684, i8* %3685, align 1
  %3686 = xor i32 %3674, %3672
  %3687 = xor i32 %3686, %3675
  %3688 = lshr i32 %3687, 4
  %3689 = trunc i32 %3688 to i8
  %3690 = and i8 %3689, 1
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3690, i8* %3691, align 1
  %3692 = icmp eq i32 %3675, 0
  %3693 = zext i1 %3692 to i8
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3693, i8* %3694, align 1
  %3695 = lshr i32 %3675, 31
  %3696 = trunc i32 %3695 to i8
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3696, i8* %3697, align 1
  %3698 = lshr i32 %3672, 31
  %3699 = lshr i32 %3674, 31
  %3700 = xor i32 %3699, %3698
  %3701 = xor i32 %3695, %3698
  %3702 = add i32 %3701, %3700
  %3703 = icmp eq i32 %3702, 2
  %3704 = zext i1 %3703 to i8
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3704, i8* %3705, align 1
  store %struct.Memory* %loadMem_4aaa8b, %struct.Memory** %MEMORY
  %loadMem_4aaa91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 33
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %PC.i3647 = bitcast %union.anon* %3708 to i64*
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 9
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %ESI.i3648 = bitcast %union.anon* %3711 to i32*
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3713 = getelementptr inbounds %struct.GPR, %struct.GPR* %3712, i32 0, i32 15
  %3714 = getelementptr inbounds %struct.Reg, %struct.Reg* %3713, i32 0, i32 0
  %RBP.i3649 = bitcast %union.anon* %3714 to i64*
  %3715 = load i64, i64* %RBP.i3649
  %3716 = sub i64 %3715, 468
  %3717 = load i32, i32* %ESI.i3648
  %3718 = zext i32 %3717 to i64
  %3719 = load i64, i64* %PC.i3647
  %3720 = add i64 %3719, 6
  store i64 %3720, i64* %PC.i3647
  %3721 = inttoptr i64 %3716 to i32*
  store i32 %3717, i32* %3721
  store %struct.Memory* %loadMem_4aaa91, %struct.Memory** %MEMORY
  %loadMem_4aaa97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3723 = getelementptr inbounds %struct.GPR, %struct.GPR* %3722, i32 0, i32 33
  %3724 = getelementptr inbounds %struct.Reg, %struct.Reg* %3723, i32 0, i32 0
  %PC.i3645 = bitcast %union.anon* %3724 to i64*
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3726 = getelementptr inbounds %struct.GPR, %struct.GPR* %3725, i32 0, i32 5
  %3727 = getelementptr inbounds %struct.Reg, %struct.Reg* %3726, i32 0, i32 0
  %RCX.i3646 = bitcast %union.anon* %3727 to i64*
  %3728 = load i64, i64* %PC.i3645
  %3729 = add i64 %3728, 8
  store i64 %3729, i64* %PC.i3645
  %3730 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3730, i64* %RCX.i3646, align 8
  store %struct.Memory* %loadMem_4aaa97, %struct.Memory** %MEMORY
  %loadMem_4aaa9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3732 = getelementptr inbounds %struct.GPR, %struct.GPR* %3731, i32 0, i32 33
  %3733 = getelementptr inbounds %struct.Reg, %struct.Reg* %3732, i32 0, i32 0
  %PC.i3642 = bitcast %union.anon* %3733 to i64*
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 7
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %RDX.i3643 = bitcast %union.anon* %3736 to i64*
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3738 = getelementptr inbounds %struct.GPR, %struct.GPR* %3737, i32 0, i32 15
  %3739 = getelementptr inbounds %struct.Reg, %struct.Reg* %3738, i32 0, i32 0
  %RBP.i3644 = bitcast %union.anon* %3739 to i64*
  %3740 = load i64, i64* %RBP.i3644
  %3741 = sub i64 %3740, 24
  %3742 = load i64, i64* %PC.i3642
  %3743 = add i64 %3742, 4
  store i64 %3743, i64* %PC.i3642
  %3744 = inttoptr i64 %3741 to i32*
  %3745 = load i32, i32* %3744
  %3746 = sext i32 %3745 to i64
  store i64 %3746, i64* %RDX.i3643, align 8
  store %struct.Memory* %loadMem_4aaa9f, %struct.Memory** %MEMORY
  %loadMem_4aaaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3748 = getelementptr inbounds %struct.GPR, %struct.GPR* %3747, i32 0, i32 33
  %3749 = getelementptr inbounds %struct.Reg, %struct.Reg* %3748, i32 0, i32 0
  %PC.i3638 = bitcast %union.anon* %3749 to i64*
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3751 = getelementptr inbounds %struct.GPR, %struct.GPR* %3750, i32 0, i32 5
  %3752 = getelementptr inbounds %struct.Reg, %struct.Reg* %3751, i32 0, i32 0
  %RCX.i3639 = bitcast %union.anon* %3752 to i64*
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3754 = getelementptr inbounds %struct.GPR, %struct.GPR* %3753, i32 0, i32 7
  %3755 = getelementptr inbounds %struct.Reg, %struct.Reg* %3754, i32 0, i32 0
  %RDX.i3640 = bitcast %union.anon* %3755 to i64*
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3757 = getelementptr inbounds %struct.GPR, %struct.GPR* %3756, i32 0, i32 9
  %3758 = getelementptr inbounds %struct.Reg, %struct.Reg* %3757, i32 0, i32 0
  %RSI.i3641 = bitcast %union.anon* %3758 to i64*
  %3759 = load i64, i64* %RCX.i3639
  %3760 = load i64, i64* %RDX.i3640
  %3761 = mul i64 %3760, 4
  %3762 = add i64 %3759, 13112
  %3763 = add i64 %3762, %3761
  %3764 = load i64, i64* %PC.i3638
  %3765 = add i64 %3764, 7
  store i64 %3765, i64* %PC.i3638
  %3766 = inttoptr i64 %3763 to i32*
  %3767 = load i32, i32* %3766
  %3768 = zext i32 %3767 to i64
  store i64 %3768, i64* %RSI.i3641, align 8
  store %struct.Memory* %loadMem_4aaaa3, %struct.Memory** %MEMORY
  %loadMem_4aaaaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3770 = getelementptr inbounds %struct.GPR, %struct.GPR* %3769, i32 0, i32 33
  %3771 = getelementptr inbounds %struct.Reg, %struct.Reg* %3770, i32 0, i32 0
  %PC.i3636 = bitcast %union.anon* %3771 to i64*
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3773 = getelementptr inbounds %struct.GPR, %struct.GPR* %3772, i32 0, i32 5
  %3774 = getelementptr inbounds %struct.Reg, %struct.Reg* %3773, i32 0, i32 0
  %RCX.i3637 = bitcast %union.anon* %3774 to i64*
  %3775 = load i64, i64* %PC.i3636
  %3776 = add i64 %3775, 8
  store i64 %3776, i64* %PC.i3636
  %3777 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3777, i64* %RCX.i3637, align 8
  store %struct.Memory* %loadMem_4aaaaa, %struct.Memory** %MEMORY
  %loadMem_4aaab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 33
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %PC.i3633 = bitcast %union.anon* %3780 to i64*
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 7
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %RDX.i3634 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 15
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RBP.i3635 = bitcast %union.anon* %3786 to i64*
  %3787 = load i64, i64* %RBP.i3635
  %3788 = sub i64 %3787, 24
  %3789 = load i64, i64* %PC.i3633
  %3790 = add i64 %3789, 4
  store i64 %3790, i64* %PC.i3633
  %3791 = inttoptr i64 %3788 to i32*
  %3792 = load i32, i32* %3791
  %3793 = sext i32 %3792 to i64
  store i64 %3793, i64* %RDX.i3634, align 8
  store %struct.Memory* %loadMem_4aaab2, %struct.Memory** %MEMORY
  %loadMem_4aaab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3795 = getelementptr inbounds %struct.GPR, %struct.GPR* %3794, i32 0, i32 33
  %3796 = getelementptr inbounds %struct.Reg, %struct.Reg* %3795, i32 0, i32 0
  %PC.i3629 = bitcast %union.anon* %3796 to i64*
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 5
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %RCX.i3630 = bitcast %union.anon* %3799 to i64*
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 7
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %RDX.i3631 = bitcast %union.anon* %3802 to i64*
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3804 = getelementptr inbounds %struct.GPR, %struct.GPR* %3803, i32 0, i32 9
  %3805 = getelementptr inbounds %struct.Reg, %struct.Reg* %3804, i32 0, i32 0
  %RSI.i3632 = bitcast %union.anon* %3805 to i64*
  %3806 = load i64, i64* %RSI.i3632
  %3807 = load i64, i64* %RCX.i3630
  %3808 = load i64, i64* %RDX.i3631
  %3809 = mul i64 %3808, 4
  %3810 = add i64 %3807, 13560
  %3811 = add i64 %3810, %3809
  %3812 = load i64, i64* %PC.i3629
  %3813 = add i64 %3812, 7
  store i64 %3813, i64* %PC.i3629
  %3814 = trunc i64 %3806 to i32
  %3815 = inttoptr i64 %3811 to i32*
  %3816 = load i32, i32* %3815
  %3817 = sub i32 %3814, %3816
  %3818 = zext i32 %3817 to i64
  store i64 %3818, i64* %RSI.i3632, align 8
  %3819 = icmp ult i32 %3814, %3816
  %3820 = zext i1 %3819 to i8
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3820, i8* %3821, align 1
  %3822 = and i32 %3817, 255
  %3823 = call i32 @llvm.ctpop.i32(i32 %3822)
  %3824 = trunc i32 %3823 to i8
  %3825 = and i8 %3824, 1
  %3826 = xor i8 %3825, 1
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3826, i8* %3827, align 1
  %3828 = xor i32 %3816, %3814
  %3829 = xor i32 %3828, %3817
  %3830 = lshr i32 %3829, 4
  %3831 = trunc i32 %3830 to i8
  %3832 = and i8 %3831, 1
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3832, i8* %3833, align 1
  %3834 = icmp eq i32 %3817, 0
  %3835 = zext i1 %3834 to i8
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3835, i8* %3836, align 1
  %3837 = lshr i32 %3817, 31
  %3838 = trunc i32 %3837 to i8
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3838, i8* %3839, align 1
  %3840 = lshr i32 %3814, 31
  %3841 = lshr i32 %3816, 31
  %3842 = xor i32 %3841, %3840
  %3843 = xor i32 %3837, %3840
  %3844 = add i32 %3843, %3842
  %3845 = icmp eq i32 %3844, 2
  %3846 = zext i1 %3845 to i8
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3846, i8* %3847, align 1
  store %struct.Memory* %loadMem_4aaab6, %struct.Memory** %MEMORY
  %loadMem_4aaabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 33
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %PC.i3626 = bitcast %union.anon* %3850 to i64*
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3852 = getelementptr inbounds %struct.GPR, %struct.GPR* %3851, i32 0, i32 9
  %3853 = getelementptr inbounds %struct.Reg, %struct.Reg* %3852, i32 0, i32 0
  %ESI.i3627 = bitcast %union.anon* %3853 to i32*
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 15
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %RBP.i3628 = bitcast %union.anon* %3856 to i64*
  %3857 = load i64, i64* %RBP.i3628
  %3858 = sub i64 %3857, 432
  %3859 = load i32, i32* %ESI.i3627
  %3860 = zext i32 %3859 to i64
  %3861 = load i64, i64* %PC.i3626
  %3862 = add i64 %3861, 6
  store i64 %3862, i64* %PC.i3626
  %3863 = inttoptr i64 %3858 to i32*
  store i32 %3859, i32* %3863
  store %struct.Memory* %loadMem_4aaabd, %struct.Memory** %MEMORY
  %loadMem_4aaac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3865 = getelementptr inbounds %struct.GPR, %struct.GPR* %3864, i32 0, i32 33
  %3866 = getelementptr inbounds %struct.Reg, %struct.Reg* %3865, i32 0, i32 0
  %PC.i3624 = bitcast %union.anon* %3866 to i64*
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3868 = getelementptr inbounds %struct.GPR, %struct.GPR* %3867, i32 0, i32 5
  %3869 = getelementptr inbounds %struct.Reg, %struct.Reg* %3868, i32 0, i32 0
  %RCX.i3625 = bitcast %union.anon* %3869 to i64*
  %3870 = load i64, i64* %PC.i3624
  %3871 = add i64 %3870, 8
  store i64 %3871, i64* %PC.i3624
  %3872 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3872, i64* %RCX.i3625, align 8
  store %struct.Memory* %loadMem_4aaac3, %struct.Memory** %MEMORY
  %loadMem_4aaacb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 33
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %PC.i3621 = bitcast %union.anon* %3875 to i64*
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3877 = getelementptr inbounds %struct.GPR, %struct.GPR* %3876, i32 0, i32 7
  %3878 = getelementptr inbounds %struct.Reg, %struct.Reg* %3877, i32 0, i32 0
  %RDX.i3622 = bitcast %union.anon* %3878 to i64*
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3880 = getelementptr inbounds %struct.GPR, %struct.GPR* %3879, i32 0, i32 15
  %3881 = getelementptr inbounds %struct.Reg, %struct.Reg* %3880, i32 0, i32 0
  %RBP.i3623 = bitcast %union.anon* %3881 to i64*
  %3882 = load i64, i64* %RBP.i3623
  %3883 = sub i64 %3882, 24
  %3884 = load i64, i64* %PC.i3621
  %3885 = add i64 %3884, 4
  store i64 %3885, i64* %PC.i3621
  %3886 = inttoptr i64 %3883 to i32*
  %3887 = load i32, i32* %3886
  %3888 = sext i32 %3887 to i64
  store i64 %3888, i64* %RDX.i3622, align 8
  store %struct.Memory* %loadMem_4aaacb, %struct.Memory** %MEMORY
  %loadMem_4aaacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3890 = getelementptr inbounds %struct.GPR, %struct.GPR* %3889, i32 0, i32 33
  %3891 = getelementptr inbounds %struct.Reg, %struct.Reg* %3890, i32 0, i32 0
  %PC.i3617 = bitcast %union.anon* %3891 to i64*
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3893 = getelementptr inbounds %struct.GPR, %struct.GPR* %3892, i32 0, i32 5
  %3894 = getelementptr inbounds %struct.Reg, %struct.Reg* %3893, i32 0, i32 0
  %RCX.i3618 = bitcast %union.anon* %3894 to i64*
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3896 = getelementptr inbounds %struct.GPR, %struct.GPR* %3895, i32 0, i32 7
  %3897 = getelementptr inbounds %struct.Reg, %struct.Reg* %3896, i32 0, i32 0
  %RDX.i3619 = bitcast %union.anon* %3897 to i64*
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3899 = getelementptr inbounds %struct.GPR, %struct.GPR* %3898, i32 0, i32 9
  %3900 = getelementptr inbounds %struct.Reg, %struct.Reg* %3899, i32 0, i32 0
  %RSI.i3620 = bitcast %union.anon* %3900 to i64*
  %3901 = load i64, i64* %RCX.i3618
  %3902 = load i64, i64* %RDX.i3619
  %3903 = mul i64 %3902, 4
  %3904 = add i64 %3901, 13176
  %3905 = add i64 %3904, %3903
  %3906 = load i64, i64* %PC.i3617
  %3907 = add i64 %3906, 7
  store i64 %3907, i64* %PC.i3617
  %3908 = inttoptr i64 %3905 to i32*
  %3909 = load i32, i32* %3908
  %3910 = zext i32 %3909 to i64
  store i64 %3910, i64* %RSI.i3620, align 8
  store %struct.Memory* %loadMem_4aaacf, %struct.Memory** %MEMORY
  %loadMem_4aaad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3912 = getelementptr inbounds %struct.GPR, %struct.GPR* %3911, i32 0, i32 33
  %3913 = getelementptr inbounds %struct.Reg, %struct.Reg* %3912, i32 0, i32 0
  %PC.i3615 = bitcast %union.anon* %3913 to i64*
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3915 = getelementptr inbounds %struct.GPR, %struct.GPR* %3914, i32 0, i32 5
  %3916 = getelementptr inbounds %struct.Reg, %struct.Reg* %3915, i32 0, i32 0
  %RCX.i3616 = bitcast %union.anon* %3916 to i64*
  %3917 = load i64, i64* %PC.i3615
  %3918 = add i64 %3917, 8
  store i64 %3918, i64* %PC.i3615
  %3919 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3919, i64* %RCX.i3616, align 8
  store %struct.Memory* %loadMem_4aaad6, %struct.Memory** %MEMORY
  %loadMem_4aaade = load %struct.Memory*, %struct.Memory** %MEMORY
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3921 = getelementptr inbounds %struct.GPR, %struct.GPR* %3920, i32 0, i32 33
  %3922 = getelementptr inbounds %struct.Reg, %struct.Reg* %3921, i32 0, i32 0
  %PC.i3612 = bitcast %union.anon* %3922 to i64*
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3924 = getelementptr inbounds %struct.GPR, %struct.GPR* %3923, i32 0, i32 7
  %3925 = getelementptr inbounds %struct.Reg, %struct.Reg* %3924, i32 0, i32 0
  %RDX.i3613 = bitcast %union.anon* %3925 to i64*
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3927 = getelementptr inbounds %struct.GPR, %struct.GPR* %3926, i32 0, i32 15
  %3928 = getelementptr inbounds %struct.Reg, %struct.Reg* %3927, i32 0, i32 0
  %RBP.i3614 = bitcast %union.anon* %3928 to i64*
  %3929 = load i64, i64* %RBP.i3614
  %3930 = sub i64 %3929, 24
  %3931 = load i64, i64* %PC.i3612
  %3932 = add i64 %3931, 4
  store i64 %3932, i64* %PC.i3612
  %3933 = inttoptr i64 %3930 to i32*
  %3934 = load i32, i32* %3933
  %3935 = sext i32 %3934 to i64
  store i64 %3935, i64* %RDX.i3613, align 8
  store %struct.Memory* %loadMem_4aaade, %struct.Memory** %MEMORY
  %loadMem_4aaae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3937 = getelementptr inbounds %struct.GPR, %struct.GPR* %3936, i32 0, i32 33
  %3938 = getelementptr inbounds %struct.Reg, %struct.Reg* %3937, i32 0, i32 0
  %PC.i3608 = bitcast %union.anon* %3938 to i64*
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3940 = getelementptr inbounds %struct.GPR, %struct.GPR* %3939, i32 0, i32 5
  %3941 = getelementptr inbounds %struct.Reg, %struct.Reg* %3940, i32 0, i32 0
  %RCX.i3609 = bitcast %union.anon* %3941 to i64*
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3943 = getelementptr inbounds %struct.GPR, %struct.GPR* %3942, i32 0, i32 7
  %3944 = getelementptr inbounds %struct.Reg, %struct.Reg* %3943, i32 0, i32 0
  %RDX.i3610 = bitcast %union.anon* %3944 to i64*
  %3945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3946 = getelementptr inbounds %struct.GPR, %struct.GPR* %3945, i32 0, i32 9
  %3947 = getelementptr inbounds %struct.Reg, %struct.Reg* %3946, i32 0, i32 0
  %RSI.i3611 = bitcast %union.anon* %3947 to i64*
  %3948 = load i64, i64* %RSI.i3611
  %3949 = load i64, i64* %RCX.i3609
  %3950 = load i64, i64* %RDX.i3610
  %3951 = mul i64 %3950, 4
  %3952 = add i64 %3949, 13496
  %3953 = add i64 %3952, %3951
  %3954 = load i64, i64* %PC.i3608
  %3955 = add i64 %3954, 7
  store i64 %3955, i64* %PC.i3608
  %3956 = trunc i64 %3948 to i32
  %3957 = inttoptr i64 %3953 to i32*
  %3958 = load i32, i32* %3957
  %3959 = sub i32 %3956, %3958
  %3960 = zext i32 %3959 to i64
  store i64 %3960, i64* %RSI.i3611, align 8
  %3961 = icmp ult i32 %3956, %3958
  %3962 = zext i1 %3961 to i8
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3962, i8* %3963, align 1
  %3964 = and i32 %3959, 255
  %3965 = call i32 @llvm.ctpop.i32(i32 %3964)
  %3966 = trunc i32 %3965 to i8
  %3967 = and i8 %3966, 1
  %3968 = xor i8 %3967, 1
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3968, i8* %3969, align 1
  %3970 = xor i32 %3958, %3956
  %3971 = xor i32 %3970, %3959
  %3972 = lshr i32 %3971, 4
  %3973 = trunc i32 %3972 to i8
  %3974 = and i8 %3973, 1
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3974, i8* %3975, align 1
  %3976 = icmp eq i32 %3959, 0
  %3977 = zext i1 %3976 to i8
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3977, i8* %3978, align 1
  %3979 = lshr i32 %3959, 31
  %3980 = trunc i32 %3979 to i8
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3980, i8* %3981, align 1
  %3982 = lshr i32 %3956, 31
  %3983 = lshr i32 %3958, 31
  %3984 = xor i32 %3983, %3982
  %3985 = xor i32 %3979, %3982
  %3986 = add i32 %3985, %3984
  %3987 = icmp eq i32 %3986, 2
  %3988 = zext i1 %3987 to i8
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3988, i8* %3989, align 1
  store %struct.Memory* %loadMem_4aaae2, %struct.Memory** %MEMORY
  %loadMem_4aaae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3991 = getelementptr inbounds %struct.GPR, %struct.GPR* %3990, i32 0, i32 33
  %3992 = getelementptr inbounds %struct.Reg, %struct.Reg* %3991, i32 0, i32 0
  %PC.i3605 = bitcast %union.anon* %3992 to i64*
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3994 = getelementptr inbounds %struct.GPR, %struct.GPR* %3993, i32 0, i32 9
  %3995 = getelementptr inbounds %struct.Reg, %struct.Reg* %3994, i32 0, i32 0
  %ESI.i3606 = bitcast %union.anon* %3995 to i32*
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 15
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %RBP.i3607 = bitcast %union.anon* %3998 to i64*
  %3999 = load i64, i64* %RBP.i3607
  %4000 = sub i64 %3999, 428
  %4001 = load i32, i32* %ESI.i3606
  %4002 = zext i32 %4001 to i64
  %4003 = load i64, i64* %PC.i3605
  %4004 = add i64 %4003, 6
  store i64 %4004, i64* %PC.i3605
  %4005 = inttoptr i64 %4000 to i32*
  store i32 %4001, i32* %4005
  store %struct.Memory* %loadMem_4aaae9, %struct.Memory** %MEMORY
  %loadMem_4aaaef = load %struct.Memory*, %struct.Memory** %MEMORY
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4007 = getelementptr inbounds %struct.GPR, %struct.GPR* %4006, i32 0, i32 33
  %4008 = getelementptr inbounds %struct.Reg, %struct.Reg* %4007, i32 0, i32 0
  %PC.i3603 = bitcast %union.anon* %4008 to i64*
  %4009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4010 = getelementptr inbounds %struct.GPR, %struct.GPR* %4009, i32 0, i32 5
  %4011 = getelementptr inbounds %struct.Reg, %struct.Reg* %4010, i32 0, i32 0
  %RCX.i3604 = bitcast %union.anon* %4011 to i64*
  %4012 = load i64, i64* %PC.i3603
  %4013 = add i64 %4012, 8
  store i64 %4013, i64* %PC.i3603
  %4014 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4014, i64* %RCX.i3604, align 8
  store %struct.Memory* %loadMem_4aaaef, %struct.Memory** %MEMORY
  %loadMem_4aaaf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4016 = getelementptr inbounds %struct.GPR, %struct.GPR* %4015, i32 0, i32 33
  %4017 = getelementptr inbounds %struct.Reg, %struct.Reg* %4016, i32 0, i32 0
  %PC.i3600 = bitcast %union.anon* %4017 to i64*
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4019 = getelementptr inbounds %struct.GPR, %struct.GPR* %4018, i32 0, i32 7
  %4020 = getelementptr inbounds %struct.Reg, %struct.Reg* %4019, i32 0, i32 0
  %RDX.i3601 = bitcast %union.anon* %4020 to i64*
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4022 = getelementptr inbounds %struct.GPR, %struct.GPR* %4021, i32 0, i32 15
  %4023 = getelementptr inbounds %struct.Reg, %struct.Reg* %4022, i32 0, i32 0
  %RBP.i3602 = bitcast %union.anon* %4023 to i64*
  %4024 = load i64, i64* %RBP.i3602
  %4025 = sub i64 %4024, 24
  %4026 = load i64, i64* %PC.i3600
  %4027 = add i64 %4026, 4
  store i64 %4027, i64* %PC.i3600
  %4028 = inttoptr i64 %4025 to i32*
  %4029 = load i32, i32* %4028
  %4030 = sext i32 %4029 to i64
  store i64 %4030, i64* %RDX.i3601, align 8
  store %struct.Memory* %loadMem_4aaaf7, %struct.Memory** %MEMORY
  %loadMem_4aaafb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 33
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %PC.i3596 = bitcast %union.anon* %4033 to i64*
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4035 = getelementptr inbounds %struct.GPR, %struct.GPR* %4034, i32 0, i32 5
  %4036 = getelementptr inbounds %struct.Reg, %struct.Reg* %4035, i32 0, i32 0
  %RCX.i3597 = bitcast %union.anon* %4036 to i64*
  %4037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4038 = getelementptr inbounds %struct.GPR, %struct.GPR* %4037, i32 0, i32 7
  %4039 = getelementptr inbounds %struct.Reg, %struct.Reg* %4038, i32 0, i32 0
  %RDX.i3598 = bitcast %union.anon* %4039 to i64*
  %4040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4041 = getelementptr inbounds %struct.GPR, %struct.GPR* %4040, i32 0, i32 9
  %4042 = getelementptr inbounds %struct.Reg, %struct.Reg* %4041, i32 0, i32 0
  %RSI.i3599 = bitcast %union.anon* %4042 to i64*
  %4043 = load i64, i64* %RCX.i3597
  %4044 = load i64, i64* %RDX.i3598
  %4045 = mul i64 %4044, 4
  %4046 = add i64 %4043, 13240
  %4047 = add i64 %4046, %4045
  %4048 = load i64, i64* %PC.i3596
  %4049 = add i64 %4048, 7
  store i64 %4049, i64* %PC.i3596
  %4050 = inttoptr i64 %4047 to i32*
  %4051 = load i32, i32* %4050
  %4052 = zext i32 %4051 to i64
  store i64 %4052, i64* %RSI.i3599, align 8
  store %struct.Memory* %loadMem_4aaafb, %struct.Memory** %MEMORY
  %loadMem_4aab02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4054 = getelementptr inbounds %struct.GPR, %struct.GPR* %4053, i32 0, i32 33
  %4055 = getelementptr inbounds %struct.Reg, %struct.Reg* %4054, i32 0, i32 0
  %PC.i3594 = bitcast %union.anon* %4055 to i64*
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4057 = getelementptr inbounds %struct.GPR, %struct.GPR* %4056, i32 0, i32 5
  %4058 = getelementptr inbounds %struct.Reg, %struct.Reg* %4057, i32 0, i32 0
  %RCX.i3595 = bitcast %union.anon* %4058 to i64*
  %4059 = load i64, i64* %PC.i3594
  %4060 = add i64 %4059, 8
  store i64 %4060, i64* %PC.i3594
  %4061 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4061, i64* %RCX.i3595, align 8
  store %struct.Memory* %loadMem_4aab02, %struct.Memory** %MEMORY
  %loadMem_4aab0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4063 = getelementptr inbounds %struct.GPR, %struct.GPR* %4062, i32 0, i32 33
  %4064 = getelementptr inbounds %struct.Reg, %struct.Reg* %4063, i32 0, i32 0
  %PC.i3591 = bitcast %union.anon* %4064 to i64*
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4066 = getelementptr inbounds %struct.GPR, %struct.GPR* %4065, i32 0, i32 7
  %4067 = getelementptr inbounds %struct.Reg, %struct.Reg* %4066, i32 0, i32 0
  %RDX.i3592 = bitcast %union.anon* %4067 to i64*
  %4068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4069 = getelementptr inbounds %struct.GPR, %struct.GPR* %4068, i32 0, i32 15
  %4070 = getelementptr inbounds %struct.Reg, %struct.Reg* %4069, i32 0, i32 0
  %RBP.i3593 = bitcast %union.anon* %4070 to i64*
  %4071 = load i64, i64* %RBP.i3593
  %4072 = sub i64 %4071, 24
  %4073 = load i64, i64* %PC.i3591
  %4074 = add i64 %4073, 4
  store i64 %4074, i64* %PC.i3591
  %4075 = inttoptr i64 %4072 to i32*
  %4076 = load i32, i32* %4075
  %4077 = sext i32 %4076 to i64
  store i64 %4077, i64* %RDX.i3592, align 8
  store %struct.Memory* %loadMem_4aab0a, %struct.Memory** %MEMORY
  %loadMem_4aab0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4079 = getelementptr inbounds %struct.GPR, %struct.GPR* %4078, i32 0, i32 33
  %4080 = getelementptr inbounds %struct.Reg, %struct.Reg* %4079, i32 0, i32 0
  %PC.i3587 = bitcast %union.anon* %4080 to i64*
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4082 = getelementptr inbounds %struct.GPR, %struct.GPR* %4081, i32 0, i32 5
  %4083 = getelementptr inbounds %struct.Reg, %struct.Reg* %4082, i32 0, i32 0
  %RCX.i3588 = bitcast %union.anon* %4083 to i64*
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4085 = getelementptr inbounds %struct.GPR, %struct.GPR* %4084, i32 0, i32 7
  %4086 = getelementptr inbounds %struct.Reg, %struct.Reg* %4085, i32 0, i32 0
  %RDX.i3589 = bitcast %union.anon* %4086 to i64*
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4088 = getelementptr inbounds %struct.GPR, %struct.GPR* %4087, i32 0, i32 9
  %4089 = getelementptr inbounds %struct.Reg, %struct.Reg* %4088, i32 0, i32 0
  %RSI.i3590 = bitcast %union.anon* %4089 to i64*
  %4090 = load i64, i64* %RSI.i3590
  %4091 = load i64, i64* %RCX.i3588
  %4092 = load i64, i64* %RDX.i3589
  %4093 = mul i64 %4092, 4
  %4094 = add i64 %4091, 13432
  %4095 = add i64 %4094, %4093
  %4096 = load i64, i64* %PC.i3587
  %4097 = add i64 %4096, 7
  store i64 %4097, i64* %PC.i3587
  %4098 = trunc i64 %4090 to i32
  %4099 = inttoptr i64 %4095 to i32*
  %4100 = load i32, i32* %4099
  %4101 = sub i32 %4098, %4100
  %4102 = zext i32 %4101 to i64
  store i64 %4102, i64* %RSI.i3590, align 8
  %4103 = icmp ult i32 %4098, %4100
  %4104 = zext i1 %4103 to i8
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4104, i8* %4105, align 1
  %4106 = and i32 %4101, 255
  %4107 = call i32 @llvm.ctpop.i32(i32 %4106)
  %4108 = trunc i32 %4107 to i8
  %4109 = and i8 %4108, 1
  %4110 = xor i8 %4109, 1
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4110, i8* %4111, align 1
  %4112 = xor i32 %4100, %4098
  %4113 = xor i32 %4112, %4101
  %4114 = lshr i32 %4113, 4
  %4115 = trunc i32 %4114 to i8
  %4116 = and i8 %4115, 1
  %4117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4116, i8* %4117, align 1
  %4118 = icmp eq i32 %4101, 0
  %4119 = zext i1 %4118 to i8
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4119, i8* %4120, align 1
  %4121 = lshr i32 %4101, 31
  %4122 = trunc i32 %4121 to i8
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4122, i8* %4123, align 1
  %4124 = lshr i32 %4098, 31
  %4125 = lshr i32 %4100, 31
  %4126 = xor i32 %4125, %4124
  %4127 = xor i32 %4121, %4124
  %4128 = add i32 %4127, %4126
  %4129 = icmp eq i32 %4128, 2
  %4130 = zext i1 %4129 to i8
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4130, i8* %4131, align 1
  store %struct.Memory* %loadMem_4aab0e, %struct.Memory** %MEMORY
  %loadMem_4aab15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 33
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %PC.i3584 = bitcast %union.anon* %4134 to i64*
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4136 = getelementptr inbounds %struct.GPR, %struct.GPR* %4135, i32 0, i32 9
  %4137 = getelementptr inbounds %struct.Reg, %struct.Reg* %4136, i32 0, i32 0
  %ESI.i3585 = bitcast %union.anon* %4137 to i32*
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 15
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %RBP.i3586 = bitcast %union.anon* %4140 to i64*
  %4141 = load i64, i64* %RBP.i3586
  %4142 = sub i64 %4141, 424
  %4143 = load i32, i32* %ESI.i3585
  %4144 = zext i32 %4143 to i64
  %4145 = load i64, i64* %PC.i3584
  %4146 = add i64 %4145, 6
  store i64 %4146, i64* %PC.i3584
  %4147 = inttoptr i64 %4142 to i32*
  store i32 %4143, i32* %4147
  store %struct.Memory* %loadMem_4aab15, %struct.Memory** %MEMORY
  %loadMem_4aab1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4149 = getelementptr inbounds %struct.GPR, %struct.GPR* %4148, i32 0, i32 33
  %4150 = getelementptr inbounds %struct.Reg, %struct.Reg* %4149, i32 0, i32 0
  %PC.i3582 = bitcast %union.anon* %4150 to i64*
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 5
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %RCX.i3583 = bitcast %union.anon* %4153 to i64*
  %4154 = load i64, i64* %PC.i3582
  %4155 = add i64 %4154, 8
  store i64 %4155, i64* %PC.i3582
  %4156 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4156, i64* %RCX.i3583, align 8
  store %struct.Memory* %loadMem_4aab1b, %struct.Memory** %MEMORY
  %loadMem_4aab23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4158 = getelementptr inbounds %struct.GPR, %struct.GPR* %4157, i32 0, i32 33
  %4159 = getelementptr inbounds %struct.Reg, %struct.Reg* %4158, i32 0, i32 0
  %PC.i3579 = bitcast %union.anon* %4159 to i64*
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4161 = getelementptr inbounds %struct.GPR, %struct.GPR* %4160, i32 0, i32 7
  %4162 = getelementptr inbounds %struct.Reg, %struct.Reg* %4161, i32 0, i32 0
  %RDX.i3580 = bitcast %union.anon* %4162 to i64*
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 15
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %RBP.i3581 = bitcast %union.anon* %4165 to i64*
  %4166 = load i64, i64* %RBP.i3581
  %4167 = sub i64 %4166, 24
  %4168 = load i64, i64* %PC.i3579
  %4169 = add i64 %4168, 4
  store i64 %4169, i64* %PC.i3579
  %4170 = inttoptr i64 %4167 to i32*
  %4171 = load i32, i32* %4170
  %4172 = sext i32 %4171 to i64
  store i64 %4172, i64* %RDX.i3580, align 8
  store %struct.Memory* %loadMem_4aab23, %struct.Memory** %MEMORY
  %loadMem_4aab27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 33
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %PC.i3575 = bitcast %union.anon* %4175 to i64*
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 5
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %RCX.i3576 = bitcast %union.anon* %4178 to i64*
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 7
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %RDX.i3577 = bitcast %union.anon* %4181 to i64*
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 9
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %RSI.i3578 = bitcast %union.anon* %4184 to i64*
  %4185 = load i64, i64* %RCX.i3576
  %4186 = load i64, i64* %RDX.i3577
  %4187 = mul i64 %4186, 4
  %4188 = add i64 %4185, 13304
  %4189 = add i64 %4188, %4187
  %4190 = load i64, i64* %PC.i3575
  %4191 = add i64 %4190, 7
  store i64 %4191, i64* %PC.i3575
  %4192 = inttoptr i64 %4189 to i32*
  %4193 = load i32, i32* %4192
  %4194 = zext i32 %4193 to i64
  store i64 %4194, i64* %RSI.i3578, align 8
  store %struct.Memory* %loadMem_4aab27, %struct.Memory** %MEMORY
  %loadMem_4aab2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4196 = getelementptr inbounds %struct.GPR, %struct.GPR* %4195, i32 0, i32 33
  %4197 = getelementptr inbounds %struct.Reg, %struct.Reg* %4196, i32 0, i32 0
  %PC.i3573 = bitcast %union.anon* %4197 to i64*
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 5
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %RCX.i3574 = bitcast %union.anon* %4200 to i64*
  %4201 = load i64, i64* %PC.i3573
  %4202 = add i64 %4201, 8
  store i64 %4202, i64* %PC.i3573
  %4203 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4203, i64* %RCX.i3574, align 8
  store %struct.Memory* %loadMem_4aab2e, %struct.Memory** %MEMORY
  %loadMem_4aab36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4205 = getelementptr inbounds %struct.GPR, %struct.GPR* %4204, i32 0, i32 33
  %4206 = getelementptr inbounds %struct.Reg, %struct.Reg* %4205, i32 0, i32 0
  %PC.i3570 = bitcast %union.anon* %4206 to i64*
  %4207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4208 = getelementptr inbounds %struct.GPR, %struct.GPR* %4207, i32 0, i32 7
  %4209 = getelementptr inbounds %struct.Reg, %struct.Reg* %4208, i32 0, i32 0
  %RDX.i3571 = bitcast %union.anon* %4209 to i64*
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4211 = getelementptr inbounds %struct.GPR, %struct.GPR* %4210, i32 0, i32 15
  %4212 = getelementptr inbounds %struct.Reg, %struct.Reg* %4211, i32 0, i32 0
  %RBP.i3572 = bitcast %union.anon* %4212 to i64*
  %4213 = load i64, i64* %RBP.i3572
  %4214 = sub i64 %4213, 24
  %4215 = load i64, i64* %PC.i3570
  %4216 = add i64 %4215, 4
  store i64 %4216, i64* %PC.i3570
  %4217 = inttoptr i64 %4214 to i32*
  %4218 = load i32, i32* %4217
  %4219 = sext i32 %4218 to i64
  store i64 %4219, i64* %RDX.i3571, align 8
  store %struct.Memory* %loadMem_4aab36, %struct.Memory** %MEMORY
  %loadMem_4aab3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4221 = getelementptr inbounds %struct.GPR, %struct.GPR* %4220, i32 0, i32 33
  %4222 = getelementptr inbounds %struct.Reg, %struct.Reg* %4221, i32 0, i32 0
  %PC.i3566 = bitcast %union.anon* %4222 to i64*
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 5
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %RCX.i3567 = bitcast %union.anon* %4225 to i64*
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 7
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %RDX.i3568 = bitcast %union.anon* %4228 to i64*
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 9
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %RSI.i3569 = bitcast %union.anon* %4231 to i64*
  %4232 = load i64, i64* %RSI.i3569
  %4233 = load i64, i64* %RCX.i3567
  %4234 = load i64, i64* %RDX.i3568
  %4235 = mul i64 %4234, 4
  %4236 = add i64 %4233, 13368
  %4237 = add i64 %4236, %4235
  %4238 = load i64, i64* %PC.i3566
  %4239 = add i64 %4238, 7
  store i64 %4239, i64* %PC.i3566
  %4240 = trunc i64 %4232 to i32
  %4241 = inttoptr i64 %4237 to i32*
  %4242 = load i32, i32* %4241
  %4243 = sub i32 %4240, %4242
  %4244 = zext i32 %4243 to i64
  store i64 %4244, i64* %RSI.i3569, align 8
  %4245 = icmp ult i32 %4240, %4242
  %4246 = zext i1 %4245 to i8
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4246, i8* %4247, align 1
  %4248 = and i32 %4243, 255
  %4249 = call i32 @llvm.ctpop.i32(i32 %4248)
  %4250 = trunc i32 %4249 to i8
  %4251 = and i8 %4250, 1
  %4252 = xor i8 %4251, 1
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4252, i8* %4253, align 1
  %4254 = xor i32 %4242, %4240
  %4255 = xor i32 %4254, %4243
  %4256 = lshr i32 %4255, 4
  %4257 = trunc i32 %4256 to i8
  %4258 = and i8 %4257, 1
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4258, i8* %4259, align 1
  %4260 = icmp eq i32 %4243, 0
  %4261 = zext i1 %4260 to i8
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4261, i8* %4262, align 1
  %4263 = lshr i32 %4243, 31
  %4264 = trunc i32 %4263 to i8
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4264, i8* %4265, align 1
  %4266 = lshr i32 %4240, 31
  %4267 = lshr i32 %4242, 31
  %4268 = xor i32 %4267, %4266
  %4269 = xor i32 %4263, %4266
  %4270 = add i32 %4269, %4268
  %4271 = icmp eq i32 %4270, 2
  %4272 = zext i1 %4271 to i8
  %4273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4272, i8* %4273, align 1
  store %struct.Memory* %loadMem_4aab3a, %struct.Memory** %MEMORY
  %loadMem_4aab41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4275 = getelementptr inbounds %struct.GPR, %struct.GPR* %4274, i32 0, i32 33
  %4276 = getelementptr inbounds %struct.Reg, %struct.Reg* %4275, i32 0, i32 0
  %PC.i3563 = bitcast %union.anon* %4276 to i64*
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4278 = getelementptr inbounds %struct.GPR, %struct.GPR* %4277, i32 0, i32 9
  %4279 = getelementptr inbounds %struct.Reg, %struct.Reg* %4278, i32 0, i32 0
  %ESI.i3564 = bitcast %union.anon* %4279 to i32*
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 15
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %RBP.i3565 = bitcast %union.anon* %4282 to i64*
  %4283 = load i64, i64* %RBP.i3565
  %4284 = sub i64 %4283, 420
  %4285 = load i32, i32* %ESI.i3564
  %4286 = zext i32 %4285 to i64
  %4287 = load i64, i64* %PC.i3563
  %4288 = add i64 %4287, 6
  store i64 %4288, i64* %PC.i3563
  %4289 = inttoptr i64 %4284 to i32*
  store i32 %4285, i32* %4289
  store %struct.Memory* %loadMem_4aab41, %struct.Memory** %MEMORY
  %loadMem_4aab47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4291 = getelementptr inbounds %struct.GPR, %struct.GPR* %4290, i32 0, i32 33
  %4292 = getelementptr inbounds %struct.Reg, %struct.Reg* %4291, i32 0, i32 0
  %PC.i3560 = bitcast %union.anon* %4292 to i64*
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4294 = getelementptr inbounds %struct.GPR, %struct.GPR* %4293, i32 0, i32 9
  %4295 = getelementptr inbounds %struct.Reg, %struct.Reg* %4294, i32 0, i32 0
  %RSI.i3561 = bitcast %union.anon* %4295 to i64*
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 15
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %RBP.i3562 = bitcast %union.anon* %4298 to i64*
  %4299 = load i64, i64* %RBP.i3562
  %4300 = sub i64 %4299, 428
  %4301 = load i64, i64* %PC.i3560
  %4302 = add i64 %4301, 6
  store i64 %4302, i64* %PC.i3560
  %4303 = inttoptr i64 %4300 to i32*
  %4304 = load i32, i32* %4303
  %4305 = zext i32 %4304 to i64
  store i64 %4305, i64* %RSI.i3561, align 8
  store %struct.Memory* %loadMem_4aab47, %struct.Memory** %MEMORY
  %loadMem_4aab4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4307 = getelementptr inbounds %struct.GPR, %struct.GPR* %4306, i32 0, i32 33
  %4308 = getelementptr inbounds %struct.Reg, %struct.Reg* %4307, i32 0, i32 0
  %PC.i3557 = bitcast %union.anon* %4308 to i64*
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4310 = getelementptr inbounds %struct.GPR, %struct.GPR* %4309, i32 0, i32 9
  %4311 = getelementptr inbounds %struct.Reg, %struct.Reg* %4310, i32 0, i32 0
  %RSI.i3558 = bitcast %union.anon* %4311 to i64*
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4313 = getelementptr inbounds %struct.GPR, %struct.GPR* %4312, i32 0, i32 15
  %4314 = getelementptr inbounds %struct.Reg, %struct.Reg* %4313, i32 0, i32 0
  %RBP.i3559 = bitcast %union.anon* %4314 to i64*
  %4315 = load i64, i64* %RSI.i3558
  %4316 = load i64, i64* %RBP.i3559
  %4317 = sub i64 %4316, 424
  %4318 = load i64, i64* %PC.i3557
  %4319 = add i64 %4318, 6
  store i64 %4319, i64* %PC.i3557
  %4320 = trunc i64 %4315 to i32
  %4321 = inttoptr i64 %4317 to i32*
  %4322 = load i32, i32* %4321
  %4323 = add i32 %4322, %4320
  %4324 = zext i32 %4323 to i64
  store i64 %4324, i64* %RSI.i3558, align 8
  %4325 = icmp ult i32 %4323, %4320
  %4326 = icmp ult i32 %4323, %4322
  %4327 = or i1 %4325, %4326
  %4328 = zext i1 %4327 to i8
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4328, i8* %4329, align 1
  %4330 = and i32 %4323, 255
  %4331 = call i32 @llvm.ctpop.i32(i32 %4330)
  %4332 = trunc i32 %4331 to i8
  %4333 = and i8 %4332, 1
  %4334 = xor i8 %4333, 1
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4334, i8* %4335, align 1
  %4336 = xor i32 %4322, %4320
  %4337 = xor i32 %4336, %4323
  %4338 = lshr i32 %4337, 4
  %4339 = trunc i32 %4338 to i8
  %4340 = and i8 %4339, 1
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4340, i8* %4341, align 1
  %4342 = icmp eq i32 %4323, 0
  %4343 = zext i1 %4342 to i8
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4343, i8* %4344, align 1
  %4345 = lshr i32 %4323, 31
  %4346 = trunc i32 %4345 to i8
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4346, i8* %4347, align 1
  %4348 = lshr i32 %4320, 31
  %4349 = lshr i32 %4322, 31
  %4350 = xor i32 %4345, %4348
  %4351 = xor i32 %4345, %4349
  %4352 = add i32 %4350, %4351
  %4353 = icmp eq i32 %4352, 2
  %4354 = zext i1 %4353 to i8
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4354, i8* %4355, align 1
  store %struct.Memory* %loadMem_4aab4d, %struct.Memory** %MEMORY
  %loadMem_4aab53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4357 = getelementptr inbounds %struct.GPR, %struct.GPR* %4356, i32 0, i32 33
  %4358 = getelementptr inbounds %struct.Reg, %struct.Reg* %4357, i32 0, i32 0
  %PC.i3554 = bitcast %union.anon* %4358 to i64*
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4360 = getelementptr inbounds %struct.GPR, %struct.GPR* %4359, i32 0, i32 11
  %4361 = getelementptr inbounds %struct.Reg, %struct.Reg* %4360, i32 0, i32 0
  %RDI.i3555 = bitcast %union.anon* %4361 to i64*
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4363 = getelementptr inbounds %struct.GPR, %struct.GPR* %4362, i32 0, i32 15
  %4364 = getelementptr inbounds %struct.Reg, %struct.Reg* %4363, i32 0, i32 0
  %RBP.i3556 = bitcast %union.anon* %4364 to i64*
  %4365 = load i64, i64* %RBP.i3556
  %4366 = sub i64 %4365, 432
  %4367 = load i64, i64* %PC.i3554
  %4368 = add i64 %4367, 6
  store i64 %4368, i64* %PC.i3554
  %4369 = inttoptr i64 %4366 to i32*
  %4370 = load i32, i32* %4369
  %4371 = zext i32 %4370 to i64
  store i64 %4371, i64* %RDI.i3555, align 8
  store %struct.Memory* %loadMem_4aab53, %struct.Memory** %MEMORY
  %loadMem_4aab59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4373 = getelementptr inbounds %struct.GPR, %struct.GPR* %4372, i32 0, i32 33
  %4374 = getelementptr inbounds %struct.Reg, %struct.Reg* %4373, i32 0, i32 0
  %PC.i3552 = bitcast %union.anon* %4374 to i64*
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4376 = getelementptr inbounds %struct.GPR, %struct.GPR* %4375, i32 0, i32 11
  %4377 = getelementptr inbounds %struct.Reg, %struct.Reg* %4376, i32 0, i32 0
  %RDI.i3553 = bitcast %union.anon* %4377 to i64*
  %4378 = load i64, i64* %RDI.i3553
  %4379 = load i64, i64* %PC.i3552
  %4380 = add i64 %4379, 2
  store i64 %4380, i64* %PC.i3552
  %4381 = shl i64 %4378, 32
  %4382 = ashr i64 %4381, 33
  %4383 = trunc i64 %4378 to i8
  %4384 = and i8 %4383, 1
  %4385 = trunc i64 %4382 to i32
  %4386 = and i64 %4382, 4294967295
  store i64 %4386, i64* %RDI.i3553, align 8
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4384, i8* %4387, align 1
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4389 = and i32 %4385, 255
  %4390 = call i32 @llvm.ctpop.i32(i32 %4389)
  %4391 = trunc i32 %4390 to i8
  %4392 = and i8 %4391, 1
  %4393 = xor i8 %4392, 1
  store i8 %4393, i8* %4388, align 1
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4394, align 1
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4396 = icmp eq i32 %4385, 0
  %4397 = zext i1 %4396 to i8
  store i8 %4397, i8* %4395, align 1
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4399 = lshr i32 %4385, 31
  %4400 = trunc i32 %4399 to i8
  store i8 %4400, i8* %4398, align 1
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4401, align 1
  store %struct.Memory* %loadMem_4aab59, %struct.Memory** %MEMORY
  %loadMem_4aab5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4403 = getelementptr inbounds %struct.GPR, %struct.GPR* %4402, i32 0, i32 33
  %4404 = getelementptr inbounds %struct.Reg, %struct.Reg* %4403, i32 0, i32 0
  %PC.i3549 = bitcast %union.anon* %4404 to i64*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4406 = getelementptr inbounds %struct.GPR, %struct.GPR* %4405, i32 0, i32 11
  %4407 = getelementptr inbounds %struct.Reg, %struct.Reg* %4406, i32 0, i32 0
  %RDI.i3550 = bitcast %union.anon* %4407 to i64*
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4409 = getelementptr inbounds %struct.GPR, %struct.GPR* %4408, i32 0, i32 15
  %4410 = getelementptr inbounds %struct.Reg, %struct.Reg* %4409, i32 0, i32 0
  %RBP.i3551 = bitcast %union.anon* %4410 to i64*
  %4411 = load i64, i64* %RDI.i3550
  %4412 = load i64, i64* %RBP.i3551
  %4413 = sub i64 %4412, 432
  %4414 = load i64, i64* %PC.i3549
  %4415 = add i64 %4414, 6
  store i64 %4415, i64* %PC.i3549
  %4416 = trunc i64 %4411 to i32
  %4417 = inttoptr i64 %4413 to i32*
  %4418 = load i32, i32* %4417
  %4419 = add i32 %4418, %4416
  %4420 = zext i32 %4419 to i64
  store i64 %4420, i64* %RDI.i3550, align 8
  %4421 = icmp ult i32 %4419, %4416
  %4422 = icmp ult i32 %4419, %4418
  %4423 = or i1 %4421, %4422
  %4424 = zext i1 %4423 to i8
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4424, i8* %4425, align 1
  %4426 = and i32 %4419, 255
  %4427 = call i32 @llvm.ctpop.i32(i32 %4426)
  %4428 = trunc i32 %4427 to i8
  %4429 = and i8 %4428, 1
  %4430 = xor i8 %4429, 1
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4430, i8* %4431, align 1
  %4432 = xor i32 %4418, %4416
  %4433 = xor i32 %4432, %4419
  %4434 = lshr i32 %4433, 4
  %4435 = trunc i32 %4434 to i8
  %4436 = and i8 %4435, 1
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4436, i8* %4437, align 1
  %4438 = icmp eq i32 %4419, 0
  %4439 = zext i1 %4438 to i8
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4439, i8* %4440, align 1
  %4441 = lshr i32 %4419, 31
  %4442 = trunc i32 %4441 to i8
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4442, i8* %4443, align 1
  %4444 = lshr i32 %4416, 31
  %4445 = lshr i32 %4418, 31
  %4446 = xor i32 %4441, %4444
  %4447 = xor i32 %4441, %4445
  %4448 = add i32 %4446, %4447
  %4449 = icmp eq i32 %4448, 2
  %4450 = zext i1 %4449 to i8
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4450, i8* %4451, align 1
  store %struct.Memory* %loadMem_4aab5c, %struct.Memory** %MEMORY
  %loadMem_4aab62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4453 = getelementptr inbounds %struct.GPR, %struct.GPR* %4452, i32 0, i32 33
  %4454 = getelementptr inbounds %struct.Reg, %struct.Reg* %4453, i32 0, i32 0
  %PC.i3546 = bitcast %union.anon* %4454 to i64*
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4456 = getelementptr inbounds %struct.GPR, %struct.GPR* %4455, i32 0, i32 11
  %4457 = getelementptr inbounds %struct.Reg, %struct.Reg* %4456, i32 0, i32 0
  %EDI.i3547 = bitcast %union.anon* %4457 to i32*
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4459 = getelementptr inbounds %struct.GPR, %struct.GPR* %4458, i32 0, i32 9
  %4460 = getelementptr inbounds %struct.Reg, %struct.Reg* %4459, i32 0, i32 0
  %RSI.i3548 = bitcast %union.anon* %4460 to i64*
  %4461 = load i64, i64* %RSI.i3548
  %4462 = load i32, i32* %EDI.i3547
  %4463 = zext i32 %4462 to i64
  %4464 = load i64, i64* %PC.i3546
  %4465 = add i64 %4464, 2
  store i64 %4465, i64* %PC.i3546
  %4466 = trunc i64 %4461 to i32
  %4467 = add i32 %4462, %4466
  %4468 = zext i32 %4467 to i64
  store i64 %4468, i64* %RSI.i3548, align 8
  %4469 = icmp ult i32 %4467, %4466
  %4470 = icmp ult i32 %4467, %4462
  %4471 = or i1 %4469, %4470
  %4472 = zext i1 %4471 to i8
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4472, i8* %4473, align 1
  %4474 = and i32 %4467, 255
  %4475 = call i32 @llvm.ctpop.i32(i32 %4474)
  %4476 = trunc i32 %4475 to i8
  %4477 = and i8 %4476, 1
  %4478 = xor i8 %4477, 1
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4478, i8* %4479, align 1
  %4480 = xor i64 %4463, %4461
  %4481 = trunc i64 %4480 to i32
  %4482 = xor i32 %4481, %4467
  %4483 = lshr i32 %4482, 4
  %4484 = trunc i32 %4483 to i8
  %4485 = and i8 %4484, 1
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4485, i8* %4486, align 1
  %4487 = icmp eq i32 %4467, 0
  %4488 = zext i1 %4487 to i8
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4488, i8* %4489, align 1
  %4490 = lshr i32 %4467, 31
  %4491 = trunc i32 %4490 to i8
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4491, i8* %4492, align 1
  %4493 = lshr i32 %4466, 31
  %4494 = lshr i32 %4462, 31
  %4495 = xor i32 %4490, %4493
  %4496 = xor i32 %4490, %4494
  %4497 = add i32 %4495, %4496
  %4498 = icmp eq i32 %4497, 2
  %4499 = zext i1 %4498 to i8
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4499, i8* %4500, align 1
  store %struct.Memory* %loadMem_4aab62, %struct.Memory** %MEMORY
  %loadMem_4aab64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4502 = getelementptr inbounds %struct.GPR, %struct.GPR* %4501, i32 0, i32 33
  %4503 = getelementptr inbounds %struct.Reg, %struct.Reg* %4502, i32 0, i32 0
  %PC.i3543 = bitcast %union.anon* %4503 to i64*
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 9
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %ESI.i3544 = bitcast %union.anon* %4506 to i32*
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4508 = getelementptr inbounds %struct.GPR, %struct.GPR* %4507, i32 0, i32 15
  %4509 = getelementptr inbounds %struct.Reg, %struct.Reg* %4508, i32 0, i32 0
  %RBP.i3545 = bitcast %union.anon* %4509 to i64*
  %4510 = load i64, i64* %RBP.i3545
  %4511 = sub i64 %4510, 464
  %4512 = load i32, i32* %ESI.i3544
  %4513 = zext i32 %4512 to i64
  %4514 = load i64, i64* %PC.i3543
  %4515 = add i64 %4514, 6
  store i64 %4515, i64* %PC.i3543
  %4516 = inttoptr i64 %4511 to i32*
  store i32 %4512, i32* %4516
  store %struct.Memory* %loadMem_4aab64, %struct.Memory** %MEMORY
  %loadMem_4aab6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4518 = getelementptr inbounds %struct.GPR, %struct.GPR* %4517, i32 0, i32 33
  %4519 = getelementptr inbounds %struct.Reg, %struct.Reg* %4518, i32 0, i32 0
  %PC.i3540 = bitcast %union.anon* %4519 to i64*
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4521 = getelementptr inbounds %struct.GPR, %struct.GPR* %4520, i32 0, i32 9
  %4522 = getelementptr inbounds %struct.Reg, %struct.Reg* %4521, i32 0, i32 0
  %RSI.i3541 = bitcast %union.anon* %4522 to i64*
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4524 = getelementptr inbounds %struct.GPR, %struct.GPR* %4523, i32 0, i32 15
  %4525 = getelementptr inbounds %struct.Reg, %struct.Reg* %4524, i32 0, i32 0
  %RBP.i3542 = bitcast %union.anon* %4525 to i64*
  %4526 = load i64, i64* %RBP.i3542
  %4527 = sub i64 %4526, 432
  %4528 = load i64, i64* %PC.i3540
  %4529 = add i64 %4528, 6
  store i64 %4529, i64* %PC.i3540
  %4530 = inttoptr i64 %4527 to i32*
  %4531 = load i32, i32* %4530
  %4532 = zext i32 %4531 to i64
  store i64 %4532, i64* %RSI.i3541, align 8
  store %struct.Memory* %loadMem_4aab6a, %struct.Memory** %MEMORY
  %loadMem_4aab70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4534 = getelementptr inbounds %struct.GPR, %struct.GPR* %4533, i32 0, i32 33
  %4535 = getelementptr inbounds %struct.Reg, %struct.Reg* %4534, i32 0, i32 0
  %PC.i3537 = bitcast %union.anon* %4535 to i64*
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4537 = getelementptr inbounds %struct.GPR, %struct.GPR* %4536, i32 0, i32 9
  %4538 = getelementptr inbounds %struct.Reg, %struct.Reg* %4537, i32 0, i32 0
  %RSI.i3538 = bitcast %union.anon* %4538 to i64*
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4540 = getelementptr inbounds %struct.GPR, %struct.GPR* %4539, i32 0, i32 15
  %4541 = getelementptr inbounds %struct.Reg, %struct.Reg* %4540, i32 0, i32 0
  %RBP.i3539 = bitcast %union.anon* %4541 to i64*
  %4542 = load i64, i64* %RSI.i3538
  %4543 = load i64, i64* %RBP.i3539
  %4544 = sub i64 %4543, 420
  %4545 = load i64, i64* %PC.i3537
  %4546 = add i64 %4545, 6
  store i64 %4546, i64* %PC.i3537
  %4547 = trunc i64 %4542 to i32
  %4548 = inttoptr i64 %4544 to i32*
  %4549 = load i32, i32* %4548
  %4550 = sub i32 %4547, %4549
  %4551 = zext i32 %4550 to i64
  store i64 %4551, i64* %RSI.i3538, align 8
  %4552 = icmp ult i32 %4547, %4549
  %4553 = zext i1 %4552 to i8
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4553, i8* %4554, align 1
  %4555 = and i32 %4550, 255
  %4556 = call i32 @llvm.ctpop.i32(i32 %4555)
  %4557 = trunc i32 %4556 to i8
  %4558 = and i8 %4557, 1
  %4559 = xor i8 %4558, 1
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4559, i8* %4560, align 1
  %4561 = xor i32 %4549, %4547
  %4562 = xor i32 %4561, %4550
  %4563 = lshr i32 %4562, 4
  %4564 = trunc i32 %4563 to i8
  %4565 = and i8 %4564, 1
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4565, i8* %4566, align 1
  %4567 = icmp eq i32 %4550, 0
  %4568 = zext i1 %4567 to i8
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4568, i8* %4569, align 1
  %4570 = lshr i32 %4550, 31
  %4571 = trunc i32 %4570 to i8
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4571, i8* %4572, align 1
  %4573 = lshr i32 %4547, 31
  %4574 = lshr i32 %4549, 31
  %4575 = xor i32 %4574, %4573
  %4576 = xor i32 %4570, %4573
  %4577 = add i32 %4576, %4575
  %4578 = icmp eq i32 %4577, 2
  %4579 = zext i1 %4578 to i8
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4579, i8* %4580, align 1
  store %struct.Memory* %loadMem_4aab70, %struct.Memory** %MEMORY
  %loadMem_4aab76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4582 = getelementptr inbounds %struct.GPR, %struct.GPR* %4581, i32 0, i32 33
  %4583 = getelementptr inbounds %struct.Reg, %struct.Reg* %4582, i32 0, i32 0
  %PC.i3534 = bitcast %union.anon* %4583 to i64*
  %4584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4585 = getelementptr inbounds %struct.GPR, %struct.GPR* %4584, i32 0, i32 11
  %4586 = getelementptr inbounds %struct.Reg, %struct.Reg* %4585, i32 0, i32 0
  %RDI.i3535 = bitcast %union.anon* %4586 to i64*
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4588 = getelementptr inbounds %struct.GPR, %struct.GPR* %4587, i32 0, i32 15
  %4589 = getelementptr inbounds %struct.Reg, %struct.Reg* %4588, i32 0, i32 0
  %RBP.i3536 = bitcast %union.anon* %4589 to i64*
  %4590 = load i64, i64* %RBP.i3536
  %4591 = sub i64 %4590, 424
  %4592 = load i64, i64* %PC.i3534
  %4593 = add i64 %4592, 6
  store i64 %4593, i64* %PC.i3534
  %4594 = inttoptr i64 %4591 to i32*
  %4595 = load i32, i32* %4594
  %4596 = zext i32 %4595 to i64
  store i64 %4596, i64* %RDI.i3535, align 8
  store %struct.Memory* %loadMem_4aab76, %struct.Memory** %MEMORY
  %loadMem_4aab7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4598 = getelementptr inbounds %struct.GPR, %struct.GPR* %4597, i32 0, i32 33
  %4599 = getelementptr inbounds %struct.Reg, %struct.Reg* %4598, i32 0, i32 0
  %PC.i3532 = bitcast %union.anon* %4599 to i64*
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4601 = getelementptr inbounds %struct.GPR, %struct.GPR* %4600, i32 0, i32 11
  %4602 = getelementptr inbounds %struct.Reg, %struct.Reg* %4601, i32 0, i32 0
  %RDI.i3533 = bitcast %union.anon* %4602 to i64*
  %4603 = load i64, i64* %RDI.i3533
  %4604 = load i64, i64* %PC.i3532
  %4605 = add i64 %4604, 2
  store i64 %4605, i64* %PC.i3532
  %4606 = shl i64 %4603, 32
  %4607 = ashr i64 %4606, 33
  %4608 = trunc i64 %4603 to i8
  %4609 = and i8 %4608, 1
  %4610 = trunc i64 %4607 to i32
  %4611 = and i64 %4607, 4294967295
  store i64 %4611, i64* %RDI.i3533, align 8
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4609, i8* %4612, align 1
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4614 = and i32 %4610, 255
  %4615 = call i32 @llvm.ctpop.i32(i32 %4614)
  %4616 = trunc i32 %4615 to i8
  %4617 = and i8 %4616, 1
  %4618 = xor i8 %4617, 1
  store i8 %4618, i8* %4613, align 1
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4619, align 1
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4621 = icmp eq i32 %4610, 0
  %4622 = zext i1 %4621 to i8
  store i8 %4622, i8* %4620, align 1
  %4623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4624 = lshr i32 %4610, 31
  %4625 = trunc i32 %4624 to i8
  store i8 %4625, i8* %4623, align 1
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4626, align 1
  store %struct.Memory* %loadMem_4aab7c, %struct.Memory** %MEMORY
  %loadMem_4aab7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4628 = getelementptr inbounds %struct.GPR, %struct.GPR* %4627, i32 0, i32 33
  %4629 = getelementptr inbounds %struct.Reg, %struct.Reg* %4628, i32 0, i32 0
  %PC.i3529 = bitcast %union.anon* %4629 to i64*
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4631 = getelementptr inbounds %struct.GPR, %struct.GPR* %4630, i32 0, i32 11
  %4632 = getelementptr inbounds %struct.Reg, %struct.Reg* %4631, i32 0, i32 0
  %RDI.i3530 = bitcast %union.anon* %4632 to i64*
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4634 = getelementptr inbounds %struct.GPR, %struct.GPR* %4633, i32 0, i32 15
  %4635 = getelementptr inbounds %struct.Reg, %struct.Reg* %4634, i32 0, i32 0
  %RBP.i3531 = bitcast %union.anon* %4635 to i64*
  %4636 = load i64, i64* %RDI.i3530
  %4637 = load i64, i64* %RBP.i3531
  %4638 = sub i64 %4637, 424
  %4639 = load i64, i64* %PC.i3529
  %4640 = add i64 %4639, 6
  store i64 %4640, i64* %PC.i3529
  %4641 = trunc i64 %4636 to i32
  %4642 = inttoptr i64 %4638 to i32*
  %4643 = load i32, i32* %4642
  %4644 = add i32 %4643, %4641
  %4645 = zext i32 %4644 to i64
  store i64 %4645, i64* %RDI.i3530, align 8
  %4646 = icmp ult i32 %4644, %4641
  %4647 = icmp ult i32 %4644, %4643
  %4648 = or i1 %4646, %4647
  %4649 = zext i1 %4648 to i8
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4649, i8* %4650, align 1
  %4651 = and i32 %4644, 255
  %4652 = call i32 @llvm.ctpop.i32(i32 %4651)
  %4653 = trunc i32 %4652 to i8
  %4654 = and i8 %4653, 1
  %4655 = xor i8 %4654, 1
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4655, i8* %4656, align 1
  %4657 = xor i32 %4643, %4641
  %4658 = xor i32 %4657, %4644
  %4659 = lshr i32 %4658, 4
  %4660 = trunc i32 %4659 to i8
  %4661 = and i8 %4660, 1
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4661, i8* %4662, align 1
  %4663 = icmp eq i32 %4644, 0
  %4664 = zext i1 %4663 to i8
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4664, i8* %4665, align 1
  %4666 = lshr i32 %4644, 31
  %4667 = trunc i32 %4666 to i8
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4667, i8* %4668, align 1
  %4669 = lshr i32 %4641, 31
  %4670 = lshr i32 %4643, 31
  %4671 = xor i32 %4666, %4669
  %4672 = xor i32 %4666, %4670
  %4673 = add i32 %4671, %4672
  %4674 = icmp eq i32 %4673, 2
  %4675 = zext i1 %4674 to i8
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4675, i8* %4676, align 1
  store %struct.Memory* %loadMem_4aab7f, %struct.Memory** %MEMORY
  %loadMem_4aab85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4678 = getelementptr inbounds %struct.GPR, %struct.GPR* %4677, i32 0, i32 33
  %4679 = getelementptr inbounds %struct.Reg, %struct.Reg* %4678, i32 0, i32 0
  %PC.i3526 = bitcast %union.anon* %4679 to i64*
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4681 = getelementptr inbounds %struct.GPR, %struct.GPR* %4680, i32 0, i32 11
  %4682 = getelementptr inbounds %struct.Reg, %struct.Reg* %4681, i32 0, i32 0
  %EDI.i3527 = bitcast %union.anon* %4682 to i32*
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 9
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %RSI.i3528 = bitcast %union.anon* %4685 to i64*
  %4686 = load i64, i64* %RSI.i3528
  %4687 = load i32, i32* %EDI.i3527
  %4688 = zext i32 %4687 to i64
  %4689 = load i64, i64* %PC.i3526
  %4690 = add i64 %4689, 2
  store i64 %4690, i64* %PC.i3526
  %4691 = trunc i64 %4686 to i32
  %4692 = sub i32 %4691, %4687
  %4693 = zext i32 %4692 to i64
  store i64 %4693, i64* %RSI.i3528, align 8
  %4694 = icmp ult i32 %4691, %4687
  %4695 = zext i1 %4694 to i8
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4695, i8* %4696, align 1
  %4697 = and i32 %4692, 255
  %4698 = call i32 @llvm.ctpop.i32(i32 %4697)
  %4699 = trunc i32 %4698 to i8
  %4700 = and i8 %4699, 1
  %4701 = xor i8 %4700, 1
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4701, i8* %4702, align 1
  %4703 = xor i64 %4688, %4686
  %4704 = trunc i64 %4703 to i32
  %4705 = xor i32 %4704, %4692
  %4706 = lshr i32 %4705, 4
  %4707 = trunc i32 %4706 to i8
  %4708 = and i8 %4707, 1
  %4709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4708, i8* %4709, align 1
  %4710 = icmp eq i32 %4692, 0
  %4711 = zext i1 %4710 to i8
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4711, i8* %4712, align 1
  %4713 = lshr i32 %4692, 31
  %4714 = trunc i32 %4713 to i8
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4714, i8* %4715, align 1
  %4716 = lshr i32 %4691, 31
  %4717 = lshr i32 %4687, 31
  %4718 = xor i32 %4717, %4716
  %4719 = xor i32 %4713, %4716
  %4720 = add i32 %4719, %4718
  %4721 = icmp eq i32 %4720, 2
  %4722 = zext i1 %4721 to i8
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4722, i8* %4723, align 1
  store %struct.Memory* %loadMem_4aab85, %struct.Memory** %MEMORY
  %loadMem_4aab87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4725 = getelementptr inbounds %struct.GPR, %struct.GPR* %4724, i32 0, i32 33
  %4726 = getelementptr inbounds %struct.Reg, %struct.Reg* %4725, i32 0, i32 0
  %PC.i3523 = bitcast %union.anon* %4726 to i64*
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4728 = getelementptr inbounds %struct.GPR, %struct.GPR* %4727, i32 0, i32 9
  %4729 = getelementptr inbounds %struct.Reg, %struct.Reg* %4728, i32 0, i32 0
  %ESI.i3524 = bitcast %union.anon* %4729 to i32*
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4731 = getelementptr inbounds %struct.GPR, %struct.GPR* %4730, i32 0, i32 15
  %4732 = getelementptr inbounds %struct.Reg, %struct.Reg* %4731, i32 0, i32 0
  %RBP.i3525 = bitcast %union.anon* %4732 to i64*
  %4733 = load i64, i64* %RBP.i3525
  %4734 = sub i64 %4733, 460
  %4735 = load i32, i32* %ESI.i3524
  %4736 = zext i32 %4735 to i64
  %4737 = load i64, i64* %PC.i3523
  %4738 = add i64 %4737, 6
  store i64 %4738, i64* %PC.i3523
  %4739 = inttoptr i64 %4734 to i32*
  store i32 %4735, i32* %4739
  store %struct.Memory* %loadMem_4aab87, %struct.Memory** %MEMORY
  %loadMem_4aab8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4741 = getelementptr inbounds %struct.GPR, %struct.GPR* %4740, i32 0, i32 33
  %4742 = getelementptr inbounds %struct.Reg, %struct.Reg* %4741, i32 0, i32 0
  %PC.i3520 = bitcast %union.anon* %4742 to i64*
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4744 = getelementptr inbounds %struct.GPR, %struct.GPR* %4743, i32 0, i32 9
  %4745 = getelementptr inbounds %struct.Reg, %struct.Reg* %4744, i32 0, i32 0
  %RSI.i3521 = bitcast %union.anon* %4745 to i64*
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4747 = getelementptr inbounds %struct.GPR, %struct.GPR* %4746, i32 0, i32 15
  %4748 = getelementptr inbounds %struct.Reg, %struct.Reg* %4747, i32 0, i32 0
  %RBP.i3522 = bitcast %union.anon* %4748 to i64*
  %4749 = load i64, i64* %RBP.i3522
  %4750 = sub i64 %4749, 432
  %4751 = load i64, i64* %PC.i3520
  %4752 = add i64 %4751, 6
  store i64 %4752, i64* %PC.i3520
  %4753 = inttoptr i64 %4750 to i32*
  %4754 = load i32, i32* %4753
  %4755 = zext i32 %4754 to i64
  store i64 %4755, i64* %RSI.i3521, align 8
  store %struct.Memory* %loadMem_4aab8d, %struct.Memory** %MEMORY
  %loadMem_4aab93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4757 = getelementptr inbounds %struct.GPR, %struct.GPR* %4756, i32 0, i32 33
  %4758 = getelementptr inbounds %struct.Reg, %struct.Reg* %4757, i32 0, i32 0
  %PC.i3517 = bitcast %union.anon* %4758 to i64*
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4760 = getelementptr inbounds %struct.GPR, %struct.GPR* %4759, i32 0, i32 9
  %4761 = getelementptr inbounds %struct.Reg, %struct.Reg* %4760, i32 0, i32 0
  %RSI.i3518 = bitcast %union.anon* %4761 to i64*
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4763 = getelementptr inbounds %struct.GPR, %struct.GPR* %4762, i32 0, i32 15
  %4764 = getelementptr inbounds %struct.Reg, %struct.Reg* %4763, i32 0, i32 0
  %RBP.i3519 = bitcast %union.anon* %4764 to i64*
  %4765 = load i64, i64* %RSI.i3518
  %4766 = load i64, i64* %RBP.i3519
  %4767 = sub i64 %4766, 420
  %4768 = load i64, i64* %PC.i3517
  %4769 = add i64 %4768, 6
  store i64 %4769, i64* %PC.i3517
  %4770 = trunc i64 %4765 to i32
  %4771 = inttoptr i64 %4767 to i32*
  %4772 = load i32, i32* %4771
  %4773 = add i32 %4772, %4770
  %4774 = zext i32 %4773 to i64
  store i64 %4774, i64* %RSI.i3518, align 8
  %4775 = icmp ult i32 %4773, %4770
  %4776 = icmp ult i32 %4773, %4772
  %4777 = or i1 %4775, %4776
  %4778 = zext i1 %4777 to i8
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4778, i8* %4779, align 1
  %4780 = and i32 %4773, 255
  %4781 = call i32 @llvm.ctpop.i32(i32 %4780)
  %4782 = trunc i32 %4781 to i8
  %4783 = and i8 %4782, 1
  %4784 = xor i8 %4783, 1
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4784, i8* %4785, align 1
  %4786 = xor i32 %4772, %4770
  %4787 = xor i32 %4786, %4773
  %4788 = lshr i32 %4787, 4
  %4789 = trunc i32 %4788 to i8
  %4790 = and i8 %4789, 1
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4790, i8* %4791, align 1
  %4792 = icmp eq i32 %4773, 0
  %4793 = zext i1 %4792 to i8
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4793, i8* %4794, align 1
  %4795 = lshr i32 %4773, 31
  %4796 = trunc i32 %4795 to i8
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4796, i8* %4797, align 1
  %4798 = lshr i32 %4770, 31
  %4799 = lshr i32 %4772, 31
  %4800 = xor i32 %4795, %4798
  %4801 = xor i32 %4795, %4799
  %4802 = add i32 %4800, %4801
  %4803 = icmp eq i32 %4802, 2
  %4804 = zext i1 %4803 to i8
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4804, i8* %4805, align 1
  store %struct.Memory* %loadMem_4aab93, %struct.Memory** %MEMORY
  %loadMem_4aab99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4807 = getelementptr inbounds %struct.GPR, %struct.GPR* %4806, i32 0, i32 33
  %4808 = getelementptr inbounds %struct.Reg, %struct.Reg* %4807, i32 0, i32 0
  %PC.i3514 = bitcast %union.anon* %4808 to i64*
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 11
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %RDI.i3515 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 15
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %RBP.i3516 = bitcast %union.anon* %4814 to i64*
  %4815 = load i64, i64* %RBP.i3516
  %4816 = sub i64 %4815, 428
  %4817 = load i64, i64* %PC.i3514
  %4818 = add i64 %4817, 6
  store i64 %4818, i64* %PC.i3514
  %4819 = inttoptr i64 %4816 to i32*
  %4820 = load i32, i32* %4819
  %4821 = zext i32 %4820 to i64
  store i64 %4821, i64* %RDI.i3515, align 8
  store %struct.Memory* %loadMem_4aab99, %struct.Memory** %MEMORY
  %loadMem_4aab9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4823 = getelementptr inbounds %struct.GPR, %struct.GPR* %4822, i32 0, i32 33
  %4824 = getelementptr inbounds %struct.Reg, %struct.Reg* %4823, i32 0, i32 0
  %PC.i3512 = bitcast %union.anon* %4824 to i64*
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4826 = getelementptr inbounds %struct.GPR, %struct.GPR* %4825, i32 0, i32 11
  %4827 = getelementptr inbounds %struct.Reg, %struct.Reg* %4826, i32 0, i32 0
  %RDI.i3513 = bitcast %union.anon* %4827 to i64*
  %4828 = load i64, i64* %RDI.i3513
  %4829 = load i64, i64* %PC.i3512
  %4830 = add i64 %4829, 2
  store i64 %4830, i64* %PC.i3512
  %4831 = shl i64 %4828, 32
  %4832 = ashr i64 %4831, 33
  %4833 = trunc i64 %4828 to i8
  %4834 = and i8 %4833, 1
  %4835 = trunc i64 %4832 to i32
  %4836 = and i64 %4832, 4294967295
  store i64 %4836, i64* %RDI.i3513, align 8
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4834, i8* %4837, align 1
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4839 = and i32 %4835, 255
  %4840 = call i32 @llvm.ctpop.i32(i32 %4839)
  %4841 = trunc i32 %4840 to i8
  %4842 = and i8 %4841, 1
  %4843 = xor i8 %4842, 1
  store i8 %4843, i8* %4838, align 1
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4844, align 1
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4846 = icmp eq i32 %4835, 0
  %4847 = zext i1 %4846 to i8
  store i8 %4847, i8* %4845, align 1
  %4848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4849 = lshr i32 %4835, 31
  %4850 = trunc i32 %4849 to i8
  store i8 %4850, i8* %4848, align 1
  %4851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4851, align 1
  store %struct.Memory* %loadMem_4aab9f, %struct.Memory** %MEMORY
  %loadMem_4aaba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4853 = getelementptr inbounds %struct.GPR, %struct.GPR* %4852, i32 0, i32 33
  %4854 = getelementptr inbounds %struct.Reg, %struct.Reg* %4853, i32 0, i32 0
  %PC.i3509 = bitcast %union.anon* %4854 to i64*
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4856 = getelementptr inbounds %struct.GPR, %struct.GPR* %4855, i32 0, i32 11
  %4857 = getelementptr inbounds %struct.Reg, %struct.Reg* %4856, i32 0, i32 0
  %RDI.i3510 = bitcast %union.anon* %4857 to i64*
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4859 = getelementptr inbounds %struct.GPR, %struct.GPR* %4858, i32 0, i32 15
  %4860 = getelementptr inbounds %struct.Reg, %struct.Reg* %4859, i32 0, i32 0
  %RBP.i3511 = bitcast %union.anon* %4860 to i64*
  %4861 = load i64, i64* %RDI.i3510
  %4862 = load i64, i64* %RBP.i3511
  %4863 = sub i64 %4862, 428
  %4864 = load i64, i64* %PC.i3509
  %4865 = add i64 %4864, 6
  store i64 %4865, i64* %PC.i3509
  %4866 = trunc i64 %4861 to i32
  %4867 = inttoptr i64 %4863 to i32*
  %4868 = load i32, i32* %4867
  %4869 = add i32 %4868, %4866
  %4870 = zext i32 %4869 to i64
  store i64 %4870, i64* %RDI.i3510, align 8
  %4871 = icmp ult i32 %4869, %4866
  %4872 = icmp ult i32 %4869, %4868
  %4873 = or i1 %4871, %4872
  %4874 = zext i1 %4873 to i8
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4874, i8* %4875, align 1
  %4876 = and i32 %4869, 255
  %4877 = call i32 @llvm.ctpop.i32(i32 %4876)
  %4878 = trunc i32 %4877 to i8
  %4879 = and i8 %4878, 1
  %4880 = xor i8 %4879, 1
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4880, i8* %4881, align 1
  %4882 = xor i32 %4868, %4866
  %4883 = xor i32 %4882, %4869
  %4884 = lshr i32 %4883, 4
  %4885 = trunc i32 %4884 to i8
  %4886 = and i8 %4885, 1
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4886, i8* %4887, align 1
  %4888 = icmp eq i32 %4869, 0
  %4889 = zext i1 %4888 to i8
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4889, i8* %4890, align 1
  %4891 = lshr i32 %4869, 31
  %4892 = trunc i32 %4891 to i8
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4892, i8* %4893, align 1
  %4894 = lshr i32 %4866, 31
  %4895 = lshr i32 %4868, 31
  %4896 = xor i32 %4891, %4894
  %4897 = xor i32 %4891, %4895
  %4898 = add i32 %4896, %4897
  %4899 = icmp eq i32 %4898, 2
  %4900 = zext i1 %4899 to i8
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4900, i8* %4901, align 1
  store %struct.Memory* %loadMem_4aaba2, %struct.Memory** %MEMORY
  %loadMem_4aaba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4903 = getelementptr inbounds %struct.GPR, %struct.GPR* %4902, i32 0, i32 33
  %4904 = getelementptr inbounds %struct.Reg, %struct.Reg* %4903, i32 0, i32 0
  %PC.i3506 = bitcast %union.anon* %4904 to i64*
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4906 = getelementptr inbounds %struct.GPR, %struct.GPR* %4905, i32 0, i32 11
  %4907 = getelementptr inbounds %struct.Reg, %struct.Reg* %4906, i32 0, i32 0
  %EDI.i3507 = bitcast %union.anon* %4907 to i32*
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4909 = getelementptr inbounds %struct.GPR, %struct.GPR* %4908, i32 0, i32 9
  %4910 = getelementptr inbounds %struct.Reg, %struct.Reg* %4909, i32 0, i32 0
  %RSI.i3508 = bitcast %union.anon* %4910 to i64*
  %4911 = load i64, i64* %RSI.i3508
  %4912 = load i32, i32* %EDI.i3507
  %4913 = zext i32 %4912 to i64
  %4914 = load i64, i64* %PC.i3506
  %4915 = add i64 %4914, 2
  store i64 %4915, i64* %PC.i3506
  %4916 = trunc i64 %4911 to i32
  %4917 = sub i32 %4916, %4912
  %4918 = zext i32 %4917 to i64
  store i64 %4918, i64* %RSI.i3508, align 8
  %4919 = icmp ult i32 %4916, %4912
  %4920 = zext i1 %4919 to i8
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4920, i8* %4921, align 1
  %4922 = and i32 %4917, 255
  %4923 = call i32 @llvm.ctpop.i32(i32 %4922)
  %4924 = trunc i32 %4923 to i8
  %4925 = and i8 %4924, 1
  %4926 = xor i8 %4925, 1
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4926, i8* %4927, align 1
  %4928 = xor i64 %4913, %4911
  %4929 = trunc i64 %4928 to i32
  %4930 = xor i32 %4929, %4917
  %4931 = lshr i32 %4930, 4
  %4932 = trunc i32 %4931 to i8
  %4933 = and i8 %4932, 1
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4933, i8* %4934, align 1
  %4935 = icmp eq i32 %4917, 0
  %4936 = zext i1 %4935 to i8
  %4937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4936, i8* %4937, align 1
  %4938 = lshr i32 %4917, 31
  %4939 = trunc i32 %4938 to i8
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4939, i8* %4940, align 1
  %4941 = lshr i32 %4916, 31
  %4942 = lshr i32 %4912, 31
  %4943 = xor i32 %4942, %4941
  %4944 = xor i32 %4938, %4941
  %4945 = add i32 %4944, %4943
  %4946 = icmp eq i32 %4945, 2
  %4947 = zext i1 %4946 to i8
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4947, i8* %4948, align 1
  store %struct.Memory* %loadMem_4aaba8, %struct.Memory** %MEMORY
  %loadMem_4aabaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 33
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %PC.i3503 = bitcast %union.anon* %4951 to i64*
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4953 = getelementptr inbounds %struct.GPR, %struct.GPR* %4952, i32 0, i32 9
  %4954 = getelementptr inbounds %struct.Reg, %struct.Reg* %4953, i32 0, i32 0
  %ESI.i3504 = bitcast %union.anon* %4954 to i32*
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4956 = getelementptr inbounds %struct.GPR, %struct.GPR* %4955, i32 0, i32 15
  %4957 = getelementptr inbounds %struct.Reg, %struct.Reg* %4956, i32 0, i32 0
  %RBP.i3505 = bitcast %union.anon* %4957 to i64*
  %4958 = load i64, i64* %RBP.i3505
  %4959 = sub i64 %4958, 456
  %4960 = load i32, i32* %ESI.i3504
  %4961 = zext i32 %4960 to i64
  %4962 = load i64, i64* %PC.i3503
  %4963 = add i64 %4962, 6
  store i64 %4963, i64* %PC.i3503
  %4964 = inttoptr i64 %4959 to i32*
  store i32 %4960, i32* %4964
  store %struct.Memory* %loadMem_4aabaa, %struct.Memory** %MEMORY
  %loadMem_4aabb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4966 = getelementptr inbounds %struct.GPR, %struct.GPR* %4965, i32 0, i32 33
  %4967 = getelementptr inbounds %struct.Reg, %struct.Reg* %4966, i32 0, i32 0
  %PC.i3500 = bitcast %union.anon* %4967 to i64*
  %4968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4969 = getelementptr inbounds %struct.GPR, %struct.GPR* %4968, i32 0, i32 9
  %4970 = getelementptr inbounds %struct.Reg, %struct.Reg* %4969, i32 0, i32 0
  %RSI.i3501 = bitcast %union.anon* %4970 to i64*
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4972 = getelementptr inbounds %struct.GPR, %struct.GPR* %4971, i32 0, i32 15
  %4973 = getelementptr inbounds %struct.Reg, %struct.Reg* %4972, i32 0, i32 0
  %RBP.i3502 = bitcast %union.anon* %4973 to i64*
  %4974 = load i64, i64* %RBP.i3502
  %4975 = sub i64 %4974, 428
  %4976 = load i64, i64* %PC.i3500
  %4977 = add i64 %4976, 6
  store i64 %4977, i64* %PC.i3500
  %4978 = inttoptr i64 %4975 to i32*
  %4979 = load i32, i32* %4978
  %4980 = zext i32 %4979 to i64
  store i64 %4980, i64* %RSI.i3501, align 8
  store %struct.Memory* %loadMem_4aabb0, %struct.Memory** %MEMORY
  %loadMem_4aabb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4982 = getelementptr inbounds %struct.GPR, %struct.GPR* %4981, i32 0, i32 33
  %4983 = getelementptr inbounds %struct.Reg, %struct.Reg* %4982, i32 0, i32 0
  %PC.i3497 = bitcast %union.anon* %4983 to i64*
  %4984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4985 = getelementptr inbounds %struct.GPR, %struct.GPR* %4984, i32 0, i32 9
  %4986 = getelementptr inbounds %struct.Reg, %struct.Reg* %4985, i32 0, i32 0
  %RSI.i3498 = bitcast %union.anon* %4986 to i64*
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 15
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %RBP.i3499 = bitcast %union.anon* %4989 to i64*
  %4990 = load i64, i64* %RSI.i3498
  %4991 = load i64, i64* %RBP.i3499
  %4992 = sub i64 %4991, 424
  %4993 = load i64, i64* %PC.i3497
  %4994 = add i64 %4993, 6
  store i64 %4994, i64* %PC.i3497
  %4995 = trunc i64 %4990 to i32
  %4996 = inttoptr i64 %4992 to i32*
  %4997 = load i32, i32* %4996
  %4998 = sub i32 %4995, %4997
  %4999 = zext i32 %4998 to i64
  store i64 %4999, i64* %RSI.i3498, align 8
  %5000 = icmp ult i32 %4995, %4997
  %5001 = zext i1 %5000 to i8
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5001, i8* %5002, align 1
  %5003 = and i32 %4998, 255
  %5004 = call i32 @llvm.ctpop.i32(i32 %5003)
  %5005 = trunc i32 %5004 to i8
  %5006 = and i8 %5005, 1
  %5007 = xor i8 %5006, 1
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5007, i8* %5008, align 1
  %5009 = xor i32 %4997, %4995
  %5010 = xor i32 %5009, %4998
  %5011 = lshr i32 %5010, 4
  %5012 = trunc i32 %5011 to i8
  %5013 = and i8 %5012, 1
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5013, i8* %5014, align 1
  %5015 = icmp eq i32 %4998, 0
  %5016 = zext i1 %5015 to i8
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5016, i8* %5017, align 1
  %5018 = lshr i32 %4998, 31
  %5019 = trunc i32 %5018 to i8
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5019, i8* %5020, align 1
  %5021 = lshr i32 %4995, 31
  %5022 = lshr i32 %4997, 31
  %5023 = xor i32 %5022, %5021
  %5024 = xor i32 %5018, %5021
  %5025 = add i32 %5024, %5023
  %5026 = icmp eq i32 %5025, 2
  %5027 = zext i1 %5026 to i8
  %5028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5027, i8* %5028, align 1
  store %struct.Memory* %loadMem_4aabb6, %struct.Memory** %MEMORY
  %loadMem_4aabbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5030 = getelementptr inbounds %struct.GPR, %struct.GPR* %5029, i32 0, i32 33
  %5031 = getelementptr inbounds %struct.Reg, %struct.Reg* %5030, i32 0, i32 0
  %PC.i3494 = bitcast %union.anon* %5031 to i64*
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 11
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %RDI.i3495 = bitcast %union.anon* %5034 to i64*
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5036 = getelementptr inbounds %struct.GPR, %struct.GPR* %5035, i32 0, i32 15
  %5037 = getelementptr inbounds %struct.Reg, %struct.Reg* %5036, i32 0, i32 0
  %RBP.i3496 = bitcast %union.anon* %5037 to i64*
  %5038 = load i64, i64* %RBP.i3496
  %5039 = sub i64 %5038, 420
  %5040 = load i64, i64* %PC.i3494
  %5041 = add i64 %5040, 6
  store i64 %5041, i64* %PC.i3494
  %5042 = inttoptr i64 %5039 to i32*
  %5043 = load i32, i32* %5042
  %5044 = zext i32 %5043 to i64
  store i64 %5044, i64* %RDI.i3495, align 8
  store %struct.Memory* %loadMem_4aabbc, %struct.Memory** %MEMORY
  %loadMem_4aabc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 33
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %PC.i3492 = bitcast %union.anon* %5047 to i64*
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 11
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %RDI.i3493 = bitcast %union.anon* %5050 to i64*
  %5051 = load i64, i64* %RDI.i3493
  %5052 = load i64, i64* %PC.i3492
  %5053 = add i64 %5052, 2
  store i64 %5053, i64* %PC.i3492
  %5054 = shl i64 %5051, 32
  %5055 = ashr i64 %5054, 33
  %5056 = trunc i64 %5051 to i8
  %5057 = and i8 %5056, 1
  %5058 = trunc i64 %5055 to i32
  %5059 = and i64 %5055, 4294967295
  store i64 %5059, i64* %RDI.i3493, align 8
  %5060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5057, i8* %5060, align 1
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5062 = and i32 %5058, 255
  %5063 = call i32 @llvm.ctpop.i32(i32 %5062)
  %5064 = trunc i32 %5063 to i8
  %5065 = and i8 %5064, 1
  %5066 = xor i8 %5065, 1
  store i8 %5066, i8* %5061, align 1
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5067, align 1
  %5068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5069 = icmp eq i32 %5058, 0
  %5070 = zext i1 %5069 to i8
  store i8 %5070, i8* %5068, align 1
  %5071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5072 = lshr i32 %5058, 31
  %5073 = trunc i32 %5072 to i8
  store i8 %5073, i8* %5071, align 1
  %5074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5074, align 1
  store %struct.Memory* %loadMem_4aabc2, %struct.Memory** %MEMORY
  %loadMem_4aabc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5076 = getelementptr inbounds %struct.GPR, %struct.GPR* %5075, i32 0, i32 33
  %5077 = getelementptr inbounds %struct.Reg, %struct.Reg* %5076, i32 0, i32 0
  %PC.i3489 = bitcast %union.anon* %5077 to i64*
  %5078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5079 = getelementptr inbounds %struct.GPR, %struct.GPR* %5078, i32 0, i32 11
  %5080 = getelementptr inbounds %struct.Reg, %struct.Reg* %5079, i32 0, i32 0
  %RDI.i3490 = bitcast %union.anon* %5080 to i64*
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5082 = getelementptr inbounds %struct.GPR, %struct.GPR* %5081, i32 0, i32 15
  %5083 = getelementptr inbounds %struct.Reg, %struct.Reg* %5082, i32 0, i32 0
  %RBP.i3491 = bitcast %union.anon* %5083 to i64*
  %5084 = load i64, i64* %RDI.i3490
  %5085 = load i64, i64* %RBP.i3491
  %5086 = sub i64 %5085, 420
  %5087 = load i64, i64* %PC.i3489
  %5088 = add i64 %5087, 6
  store i64 %5088, i64* %PC.i3489
  %5089 = trunc i64 %5084 to i32
  %5090 = inttoptr i64 %5086 to i32*
  %5091 = load i32, i32* %5090
  %5092 = add i32 %5091, %5089
  %5093 = zext i32 %5092 to i64
  store i64 %5093, i64* %RDI.i3490, align 8
  %5094 = icmp ult i32 %5092, %5089
  %5095 = icmp ult i32 %5092, %5091
  %5096 = or i1 %5094, %5095
  %5097 = zext i1 %5096 to i8
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5097, i8* %5098, align 1
  %5099 = and i32 %5092, 255
  %5100 = call i32 @llvm.ctpop.i32(i32 %5099)
  %5101 = trunc i32 %5100 to i8
  %5102 = and i8 %5101, 1
  %5103 = xor i8 %5102, 1
  %5104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5103, i8* %5104, align 1
  %5105 = xor i32 %5091, %5089
  %5106 = xor i32 %5105, %5092
  %5107 = lshr i32 %5106, 4
  %5108 = trunc i32 %5107 to i8
  %5109 = and i8 %5108, 1
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5109, i8* %5110, align 1
  %5111 = icmp eq i32 %5092, 0
  %5112 = zext i1 %5111 to i8
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5112, i8* %5113, align 1
  %5114 = lshr i32 %5092, 31
  %5115 = trunc i32 %5114 to i8
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5115, i8* %5116, align 1
  %5117 = lshr i32 %5089, 31
  %5118 = lshr i32 %5091, 31
  %5119 = xor i32 %5114, %5117
  %5120 = xor i32 %5114, %5118
  %5121 = add i32 %5119, %5120
  %5122 = icmp eq i32 %5121, 2
  %5123 = zext i1 %5122 to i8
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5123, i8* %5124, align 1
  store %struct.Memory* %loadMem_4aabc5, %struct.Memory** %MEMORY
  %loadMem_4aabcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5126 = getelementptr inbounds %struct.GPR, %struct.GPR* %5125, i32 0, i32 33
  %5127 = getelementptr inbounds %struct.Reg, %struct.Reg* %5126, i32 0, i32 0
  %PC.i3486 = bitcast %union.anon* %5127 to i64*
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5129 = getelementptr inbounds %struct.GPR, %struct.GPR* %5128, i32 0, i32 11
  %5130 = getelementptr inbounds %struct.Reg, %struct.Reg* %5129, i32 0, i32 0
  %EDI.i3487 = bitcast %union.anon* %5130 to i32*
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5132 = getelementptr inbounds %struct.GPR, %struct.GPR* %5131, i32 0, i32 9
  %5133 = getelementptr inbounds %struct.Reg, %struct.Reg* %5132, i32 0, i32 0
  %RSI.i3488 = bitcast %union.anon* %5133 to i64*
  %5134 = load i64, i64* %RSI.i3488
  %5135 = load i32, i32* %EDI.i3487
  %5136 = zext i32 %5135 to i64
  %5137 = load i64, i64* %PC.i3486
  %5138 = add i64 %5137, 2
  store i64 %5138, i64* %PC.i3486
  %5139 = trunc i64 %5134 to i32
  %5140 = add i32 %5135, %5139
  %5141 = zext i32 %5140 to i64
  store i64 %5141, i64* %RSI.i3488, align 8
  %5142 = icmp ult i32 %5140, %5139
  %5143 = icmp ult i32 %5140, %5135
  %5144 = or i1 %5142, %5143
  %5145 = zext i1 %5144 to i8
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5145, i8* %5146, align 1
  %5147 = and i32 %5140, 255
  %5148 = call i32 @llvm.ctpop.i32(i32 %5147)
  %5149 = trunc i32 %5148 to i8
  %5150 = and i8 %5149, 1
  %5151 = xor i8 %5150, 1
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5151, i8* %5152, align 1
  %5153 = xor i64 %5136, %5134
  %5154 = trunc i64 %5153 to i32
  %5155 = xor i32 %5154, %5140
  %5156 = lshr i32 %5155, 4
  %5157 = trunc i32 %5156 to i8
  %5158 = and i8 %5157, 1
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5158, i8* %5159, align 1
  %5160 = icmp eq i32 %5140, 0
  %5161 = zext i1 %5160 to i8
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5161, i8* %5162, align 1
  %5163 = lshr i32 %5140, 31
  %5164 = trunc i32 %5163 to i8
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5164, i8* %5165, align 1
  %5166 = lshr i32 %5139, 31
  %5167 = lshr i32 %5135, 31
  %5168 = xor i32 %5163, %5166
  %5169 = xor i32 %5163, %5167
  %5170 = add i32 %5168, %5169
  %5171 = icmp eq i32 %5170, 2
  %5172 = zext i1 %5171 to i8
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5172, i8* %5173, align 1
  store %struct.Memory* %loadMem_4aabcb, %struct.Memory** %MEMORY
  %loadMem_4aabcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5175 = getelementptr inbounds %struct.GPR, %struct.GPR* %5174, i32 0, i32 33
  %5176 = getelementptr inbounds %struct.Reg, %struct.Reg* %5175, i32 0, i32 0
  %PC.i3483 = bitcast %union.anon* %5176 to i64*
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5178 = getelementptr inbounds %struct.GPR, %struct.GPR* %5177, i32 0, i32 9
  %5179 = getelementptr inbounds %struct.Reg, %struct.Reg* %5178, i32 0, i32 0
  %ESI.i3484 = bitcast %union.anon* %5179 to i32*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 15
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %RBP.i3485 = bitcast %union.anon* %5182 to i64*
  %5183 = load i64, i64* %RBP.i3485
  %5184 = sub i64 %5183, 452
  %5185 = load i32, i32* %ESI.i3484
  %5186 = zext i32 %5185 to i64
  %5187 = load i64, i64* %PC.i3483
  %5188 = add i64 %5187, 6
  store i64 %5188, i64* %PC.i3483
  %5189 = inttoptr i64 %5184 to i32*
  store i32 %5185, i32* %5189
  store %struct.Memory* %loadMem_4aabcd, %struct.Memory** %MEMORY
  %loadMem_4aabd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5191 = getelementptr inbounds %struct.GPR, %struct.GPR* %5190, i32 0, i32 33
  %5192 = getelementptr inbounds %struct.Reg, %struct.Reg* %5191, i32 0, i32 0
  %PC.i3480 = bitcast %union.anon* %5192 to i64*
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5194 = getelementptr inbounds %struct.GPR, %struct.GPR* %5193, i32 0, i32 9
  %5195 = getelementptr inbounds %struct.Reg, %struct.Reg* %5194, i32 0, i32 0
  %RSI.i3481 = bitcast %union.anon* %5195 to i64*
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5197 = getelementptr inbounds %struct.GPR, %struct.GPR* %5196, i32 0, i32 15
  %5198 = getelementptr inbounds %struct.Reg, %struct.Reg* %5197, i32 0, i32 0
  %RBP.i3482 = bitcast %union.anon* %5198 to i64*
  %5199 = load i64, i64* %RBP.i3482
  %5200 = sub i64 %5199, 480
  %5201 = load i64, i64* %PC.i3480
  %5202 = add i64 %5201, 6
  store i64 %5202, i64* %PC.i3480
  %5203 = inttoptr i64 %5200 to i32*
  %5204 = load i32, i32* %5203
  %5205 = zext i32 %5204 to i64
  store i64 %5205, i64* %RSI.i3481, align 8
  store %struct.Memory* %loadMem_4aabd3, %struct.Memory** %MEMORY
  %loadMem_4aabd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5207 = getelementptr inbounds %struct.GPR, %struct.GPR* %5206, i32 0, i32 33
  %5208 = getelementptr inbounds %struct.Reg, %struct.Reg* %5207, i32 0, i32 0
  %PC.i3477 = bitcast %union.anon* %5208 to i64*
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5210 = getelementptr inbounds %struct.GPR, %struct.GPR* %5209, i32 0, i32 9
  %5211 = getelementptr inbounds %struct.Reg, %struct.Reg* %5210, i32 0, i32 0
  %RSI.i3478 = bitcast %union.anon* %5211 to i64*
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5213 = getelementptr inbounds %struct.GPR, %struct.GPR* %5212, i32 0, i32 15
  %5214 = getelementptr inbounds %struct.Reg, %struct.Reg* %5213, i32 0, i32 0
  %RBP.i3479 = bitcast %union.anon* %5214 to i64*
  %5215 = load i64, i64* %RSI.i3478
  %5216 = load i64, i64* %RBP.i3479
  %5217 = sub i64 %5216, 476
  %5218 = load i64, i64* %PC.i3477
  %5219 = add i64 %5218, 6
  store i64 %5219, i64* %PC.i3477
  %5220 = trunc i64 %5215 to i32
  %5221 = inttoptr i64 %5217 to i32*
  %5222 = load i32, i32* %5221
  %5223 = add i32 %5222, %5220
  %5224 = zext i32 %5223 to i64
  store i64 %5224, i64* %RSI.i3478, align 8
  %5225 = icmp ult i32 %5223, %5220
  %5226 = icmp ult i32 %5223, %5222
  %5227 = or i1 %5225, %5226
  %5228 = zext i1 %5227 to i8
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5228, i8* %5229, align 1
  %5230 = and i32 %5223, 255
  %5231 = call i32 @llvm.ctpop.i32(i32 %5230)
  %5232 = trunc i32 %5231 to i8
  %5233 = and i8 %5232, 1
  %5234 = xor i8 %5233, 1
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5234, i8* %5235, align 1
  %5236 = xor i32 %5222, %5220
  %5237 = xor i32 %5236, %5223
  %5238 = lshr i32 %5237, 4
  %5239 = trunc i32 %5238 to i8
  %5240 = and i8 %5239, 1
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5240, i8* %5241, align 1
  %5242 = icmp eq i32 %5223, 0
  %5243 = zext i1 %5242 to i8
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5243, i8* %5244, align 1
  %5245 = lshr i32 %5223, 31
  %5246 = trunc i32 %5245 to i8
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5246, i8* %5247, align 1
  %5248 = lshr i32 %5220, 31
  %5249 = lshr i32 %5222, 31
  %5250 = xor i32 %5245, %5248
  %5251 = xor i32 %5245, %5249
  %5252 = add i32 %5250, %5251
  %5253 = icmp eq i32 %5252, 2
  %5254 = zext i1 %5253 to i8
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5254, i8* %5255, align 1
  store %struct.Memory* %loadMem_4aabd9, %struct.Memory** %MEMORY
  %loadMem_4aabdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5257 = getelementptr inbounds %struct.GPR, %struct.GPR* %5256, i32 0, i32 33
  %5258 = getelementptr inbounds %struct.Reg, %struct.Reg* %5257, i32 0, i32 0
  %PC.i3474 = bitcast %union.anon* %5258 to i64*
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5260 = getelementptr inbounds %struct.GPR, %struct.GPR* %5259, i32 0, i32 5
  %5261 = getelementptr inbounds %struct.Reg, %struct.Reg* %5260, i32 0, i32 0
  %RCX.i3475 = bitcast %union.anon* %5261 to i64*
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5263 = getelementptr inbounds %struct.GPR, %struct.GPR* %5262, i32 0, i32 15
  %5264 = getelementptr inbounds %struct.Reg, %struct.Reg* %5263, i32 0, i32 0
  %RBP.i3476 = bitcast %union.anon* %5264 to i64*
  %5265 = load i64, i64* %RBP.i3476
  %5266 = sub i64 %5265, 24
  %5267 = load i64, i64* %PC.i3474
  %5268 = add i64 %5267, 4
  store i64 %5268, i64* %PC.i3474
  %5269 = inttoptr i64 %5266 to i32*
  %5270 = load i32, i32* %5269
  %5271 = sext i32 %5270 to i64
  store i64 %5271, i64* %RCX.i3475, align 8
  store %struct.Memory* %loadMem_4aabdf, %struct.Memory** %MEMORY
  %loadMem_4aabe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5273 = getelementptr inbounds %struct.GPR, %struct.GPR* %5272, i32 0, i32 33
  %5274 = getelementptr inbounds %struct.Reg, %struct.Reg* %5273, i32 0, i32 0
  %PC.i3470 = bitcast %union.anon* %5274 to i64*
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5276 = getelementptr inbounds %struct.GPR, %struct.GPR* %5275, i32 0, i32 9
  %5277 = getelementptr inbounds %struct.Reg, %struct.Reg* %5276, i32 0, i32 0
  %ESI.i3471 = bitcast %union.anon* %5277 to i32*
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5279 = getelementptr inbounds %struct.GPR, %struct.GPR* %5278, i32 0, i32 5
  %5280 = getelementptr inbounds %struct.Reg, %struct.Reg* %5279, i32 0, i32 0
  %RCX.i3472 = bitcast %union.anon* %5280 to i64*
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5282 = getelementptr inbounds %struct.GPR, %struct.GPR* %5281, i32 0, i32 15
  %5283 = getelementptr inbounds %struct.Reg, %struct.Reg* %5282, i32 0, i32 0
  %RBP.i3473 = bitcast %union.anon* %5283 to i64*
  %5284 = load i64, i64* %RBP.i3473
  %5285 = load i64, i64* %RCX.i3472
  %5286 = mul i64 %5285, 4
  %5287 = add i64 %5284, -368
  %5288 = add i64 %5287, %5286
  %5289 = load i32, i32* %ESI.i3471
  %5290 = zext i32 %5289 to i64
  %5291 = load i64, i64* %PC.i3470
  %5292 = add i64 %5291, 7
  store i64 %5292, i64* %PC.i3470
  %5293 = inttoptr i64 %5288 to i32*
  store i32 %5289, i32* %5293
  store %struct.Memory* %loadMem_4aabe3, %struct.Memory** %MEMORY
  %loadMem_4aabea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5295 = getelementptr inbounds %struct.GPR, %struct.GPR* %5294, i32 0, i32 33
  %5296 = getelementptr inbounds %struct.Reg, %struct.Reg* %5295, i32 0, i32 0
  %PC.i3467 = bitcast %union.anon* %5296 to i64*
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 9
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %RSI.i3468 = bitcast %union.anon* %5299 to i64*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 15
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %RBP.i3469 = bitcast %union.anon* %5302 to i64*
  %5303 = load i64, i64* %RBP.i3469
  %5304 = sub i64 %5303, 472
  %5305 = load i64, i64* %PC.i3467
  %5306 = add i64 %5305, 6
  store i64 %5306, i64* %PC.i3467
  %5307 = inttoptr i64 %5304 to i32*
  %5308 = load i32, i32* %5307
  %5309 = zext i32 %5308 to i64
  store i64 %5309, i64* %RSI.i3468, align 8
  store %struct.Memory* %loadMem_4aabea, %struct.Memory** %MEMORY
  %loadMem_4aabf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5311 = getelementptr inbounds %struct.GPR, %struct.GPR* %5310, i32 0, i32 33
  %5312 = getelementptr inbounds %struct.Reg, %struct.Reg* %5311, i32 0, i32 0
  %PC.i3464 = bitcast %union.anon* %5312 to i64*
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5314 = getelementptr inbounds %struct.GPR, %struct.GPR* %5313, i32 0, i32 11
  %5315 = getelementptr inbounds %struct.Reg, %struct.Reg* %5314, i32 0, i32 0
  %RDI.i3465 = bitcast %union.anon* %5315 to i64*
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5317 = getelementptr inbounds %struct.GPR, %struct.GPR* %5316, i32 0, i32 15
  %5318 = getelementptr inbounds %struct.Reg, %struct.Reg* %5317, i32 0, i32 0
  %RBP.i3466 = bitcast %union.anon* %5318 to i64*
  %5319 = load i64, i64* %RBP.i3466
  %5320 = sub i64 %5319, 468
  %5321 = load i64, i64* %PC.i3464
  %5322 = add i64 %5321, 6
  store i64 %5322, i64* %PC.i3464
  %5323 = inttoptr i64 %5320 to i32*
  %5324 = load i32, i32* %5323
  %5325 = zext i32 %5324 to i64
  store i64 %5325, i64* %RDI.i3465, align 8
  store %struct.Memory* %loadMem_4aabf0, %struct.Memory** %MEMORY
  %loadMem_4aabf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 33
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %PC.i3462 = bitcast %union.anon* %5328 to i64*
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5330 = getelementptr inbounds %struct.GPR, %struct.GPR* %5329, i32 0, i32 11
  %5331 = getelementptr inbounds %struct.Reg, %struct.Reg* %5330, i32 0, i32 0
  %RDI.i3463 = bitcast %union.anon* %5331 to i64*
  %5332 = load i64, i64* %RDI.i3463
  %5333 = load i64, i64* %PC.i3462
  %5334 = add i64 %5333, 2
  store i64 %5334, i64* %PC.i3462
  %5335 = shl i64 %5332, 32
  %5336 = ashr i64 %5335, 33
  %5337 = trunc i64 %5332 to i8
  %5338 = and i8 %5337, 1
  %5339 = trunc i64 %5336 to i32
  %5340 = and i64 %5336, 4294967295
  store i64 %5340, i64* %RDI.i3463, align 8
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5338, i8* %5341, align 1
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5343 = and i32 %5339, 255
  %5344 = call i32 @llvm.ctpop.i32(i32 %5343)
  %5345 = trunc i32 %5344 to i8
  %5346 = and i8 %5345, 1
  %5347 = xor i8 %5346, 1
  store i8 %5347, i8* %5342, align 1
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5348, align 1
  %5349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5350 = icmp eq i32 %5339, 0
  %5351 = zext i1 %5350 to i8
  store i8 %5351, i8* %5349, align 1
  %5352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5353 = lshr i32 %5339, 31
  %5354 = trunc i32 %5353 to i8
  store i8 %5354, i8* %5352, align 1
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5355, align 1
  store %struct.Memory* %loadMem_4aabf6, %struct.Memory** %MEMORY
  %loadMem_4aabf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5357 = getelementptr inbounds %struct.GPR, %struct.GPR* %5356, i32 0, i32 33
  %5358 = getelementptr inbounds %struct.Reg, %struct.Reg* %5357, i32 0, i32 0
  %PC.i3459 = bitcast %union.anon* %5358 to i64*
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 11
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %EDI.i3460 = bitcast %union.anon* %5361 to i32*
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5363 = getelementptr inbounds %struct.GPR, %struct.GPR* %5362, i32 0, i32 9
  %5364 = getelementptr inbounds %struct.Reg, %struct.Reg* %5363, i32 0, i32 0
  %RSI.i3461 = bitcast %union.anon* %5364 to i64*
  %5365 = load i64, i64* %RSI.i3461
  %5366 = load i32, i32* %EDI.i3460
  %5367 = zext i32 %5366 to i64
  %5368 = load i64, i64* %PC.i3459
  %5369 = add i64 %5368, 2
  store i64 %5369, i64* %PC.i3459
  %5370 = trunc i64 %5365 to i32
  %5371 = add i32 %5366, %5370
  %5372 = zext i32 %5371 to i64
  store i64 %5372, i64* %RSI.i3461, align 8
  %5373 = icmp ult i32 %5371, %5370
  %5374 = icmp ult i32 %5371, %5366
  %5375 = or i1 %5373, %5374
  %5376 = zext i1 %5375 to i8
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5376, i8* %5377, align 1
  %5378 = and i32 %5371, 255
  %5379 = call i32 @llvm.ctpop.i32(i32 %5378)
  %5380 = trunc i32 %5379 to i8
  %5381 = and i8 %5380, 1
  %5382 = xor i8 %5381, 1
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5382, i8* %5383, align 1
  %5384 = xor i64 %5367, %5365
  %5385 = trunc i64 %5384 to i32
  %5386 = xor i32 %5385, %5371
  %5387 = lshr i32 %5386, 4
  %5388 = trunc i32 %5387 to i8
  %5389 = and i8 %5388, 1
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5389, i8* %5390, align 1
  %5391 = icmp eq i32 %5371, 0
  %5392 = zext i1 %5391 to i8
  %5393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5392, i8* %5393, align 1
  %5394 = lshr i32 %5371, 31
  %5395 = trunc i32 %5394 to i8
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5395, i8* %5396, align 1
  %5397 = lshr i32 %5370, 31
  %5398 = lshr i32 %5366, 31
  %5399 = xor i32 %5394, %5397
  %5400 = xor i32 %5394, %5398
  %5401 = add i32 %5399, %5400
  %5402 = icmp eq i32 %5401, 2
  %5403 = zext i1 %5402 to i8
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5403, i8* %5404, align 1
  store %struct.Memory* %loadMem_4aabf9, %struct.Memory** %MEMORY
  %loadMem_4aabfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5406 = getelementptr inbounds %struct.GPR, %struct.GPR* %5405, i32 0, i32 33
  %5407 = getelementptr inbounds %struct.Reg, %struct.Reg* %5406, i32 0, i32 0
  %PC.i3456 = bitcast %union.anon* %5407 to i64*
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5409 = getelementptr inbounds %struct.GPR, %struct.GPR* %5408, i32 0, i32 5
  %5410 = getelementptr inbounds %struct.Reg, %struct.Reg* %5409, i32 0, i32 0
  %RCX.i3457 = bitcast %union.anon* %5410 to i64*
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5412 = getelementptr inbounds %struct.GPR, %struct.GPR* %5411, i32 0, i32 15
  %5413 = getelementptr inbounds %struct.Reg, %struct.Reg* %5412, i32 0, i32 0
  %RBP.i3458 = bitcast %union.anon* %5413 to i64*
  %5414 = load i64, i64* %RBP.i3458
  %5415 = sub i64 %5414, 24
  %5416 = load i64, i64* %PC.i3456
  %5417 = add i64 %5416, 4
  store i64 %5417, i64* %PC.i3456
  %5418 = inttoptr i64 %5415 to i32*
  %5419 = load i32, i32* %5418
  %5420 = sext i32 %5419 to i64
  store i64 %5420, i64* %RCX.i3457, align 8
  store %struct.Memory* %loadMem_4aabfb, %struct.Memory** %MEMORY
  %loadMem_4aabff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5422 = getelementptr inbounds %struct.GPR, %struct.GPR* %5421, i32 0, i32 33
  %5423 = getelementptr inbounds %struct.Reg, %struct.Reg* %5422, i32 0, i32 0
  %PC.i3452 = bitcast %union.anon* %5423 to i64*
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5425 = getelementptr inbounds %struct.GPR, %struct.GPR* %5424, i32 0, i32 9
  %5426 = getelementptr inbounds %struct.Reg, %struct.Reg* %5425, i32 0, i32 0
  %ESI.i3453 = bitcast %union.anon* %5426 to i32*
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5428 = getelementptr inbounds %struct.GPR, %struct.GPR* %5427, i32 0, i32 5
  %5429 = getelementptr inbounds %struct.Reg, %struct.Reg* %5428, i32 0, i32 0
  %RCX.i3454 = bitcast %union.anon* %5429 to i64*
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5431 = getelementptr inbounds %struct.GPR, %struct.GPR* %5430, i32 0, i32 15
  %5432 = getelementptr inbounds %struct.Reg, %struct.Reg* %5431, i32 0, i32 0
  %RBP.i3455 = bitcast %union.anon* %5432 to i64*
  %5433 = load i64, i64* %RBP.i3455
  %5434 = load i64, i64* %RCX.i3454
  %5435 = mul i64 %5434, 4
  %5436 = add i64 %5433, -304
  %5437 = add i64 %5436, %5435
  %5438 = load i32, i32* %ESI.i3453
  %5439 = zext i32 %5438 to i64
  %5440 = load i64, i64* %PC.i3452
  %5441 = add i64 %5440, 7
  store i64 %5441, i64* %PC.i3452
  %5442 = inttoptr i64 %5437 to i32*
  store i32 %5438, i32* %5442
  store %struct.Memory* %loadMem_4aabff, %struct.Memory** %MEMORY
  %loadMem_4aac06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5444 = getelementptr inbounds %struct.GPR, %struct.GPR* %5443, i32 0, i32 33
  %5445 = getelementptr inbounds %struct.Reg, %struct.Reg* %5444, i32 0, i32 0
  %PC.i3449 = bitcast %union.anon* %5445 to i64*
  %5446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5447 = getelementptr inbounds %struct.GPR, %struct.GPR* %5446, i32 0, i32 9
  %5448 = getelementptr inbounds %struct.Reg, %struct.Reg* %5447, i32 0, i32 0
  %RSI.i3450 = bitcast %union.anon* %5448 to i64*
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5450 = getelementptr inbounds %struct.GPR, %struct.GPR* %5449, i32 0, i32 15
  %5451 = getelementptr inbounds %struct.Reg, %struct.Reg* %5450, i32 0, i32 0
  %RBP.i3451 = bitcast %union.anon* %5451 to i64*
  %5452 = load i64, i64* %RBP.i3451
  %5453 = sub i64 %5452, 480
  %5454 = load i64, i64* %PC.i3449
  %5455 = add i64 %5454, 6
  store i64 %5455, i64* %PC.i3449
  %5456 = inttoptr i64 %5453 to i32*
  %5457 = load i32, i32* %5456
  %5458 = zext i32 %5457 to i64
  store i64 %5458, i64* %RSI.i3450, align 8
  store %struct.Memory* %loadMem_4aac06, %struct.Memory** %MEMORY
  %loadMem_4aac0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5460 = getelementptr inbounds %struct.GPR, %struct.GPR* %5459, i32 0, i32 33
  %5461 = getelementptr inbounds %struct.Reg, %struct.Reg* %5460, i32 0, i32 0
  %PC.i3446 = bitcast %union.anon* %5461 to i64*
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5463 = getelementptr inbounds %struct.GPR, %struct.GPR* %5462, i32 0, i32 9
  %5464 = getelementptr inbounds %struct.Reg, %struct.Reg* %5463, i32 0, i32 0
  %RSI.i3447 = bitcast %union.anon* %5464 to i64*
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5466 = getelementptr inbounds %struct.GPR, %struct.GPR* %5465, i32 0, i32 15
  %5467 = getelementptr inbounds %struct.Reg, %struct.Reg* %5466, i32 0, i32 0
  %RBP.i3448 = bitcast %union.anon* %5467 to i64*
  %5468 = load i64, i64* %RSI.i3447
  %5469 = load i64, i64* %RBP.i3448
  %5470 = sub i64 %5469, 476
  %5471 = load i64, i64* %PC.i3446
  %5472 = add i64 %5471, 6
  store i64 %5472, i64* %PC.i3446
  %5473 = trunc i64 %5468 to i32
  %5474 = inttoptr i64 %5470 to i32*
  %5475 = load i32, i32* %5474
  %5476 = sub i32 %5473, %5475
  %5477 = zext i32 %5476 to i64
  store i64 %5477, i64* %RSI.i3447, align 8
  %5478 = icmp ult i32 %5473, %5475
  %5479 = zext i1 %5478 to i8
  %5480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5479, i8* %5480, align 1
  %5481 = and i32 %5476, 255
  %5482 = call i32 @llvm.ctpop.i32(i32 %5481)
  %5483 = trunc i32 %5482 to i8
  %5484 = and i8 %5483, 1
  %5485 = xor i8 %5484, 1
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5485, i8* %5486, align 1
  %5487 = xor i32 %5475, %5473
  %5488 = xor i32 %5487, %5476
  %5489 = lshr i32 %5488, 4
  %5490 = trunc i32 %5489 to i8
  %5491 = and i8 %5490, 1
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5491, i8* %5492, align 1
  %5493 = icmp eq i32 %5476, 0
  %5494 = zext i1 %5493 to i8
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5494, i8* %5495, align 1
  %5496 = lshr i32 %5476, 31
  %5497 = trunc i32 %5496 to i8
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5497, i8* %5498, align 1
  %5499 = lshr i32 %5473, 31
  %5500 = lshr i32 %5475, 31
  %5501 = xor i32 %5500, %5499
  %5502 = xor i32 %5496, %5499
  %5503 = add i32 %5502, %5501
  %5504 = icmp eq i32 %5503, 2
  %5505 = zext i1 %5504 to i8
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5505, i8* %5506, align 1
  store %struct.Memory* %loadMem_4aac0c, %struct.Memory** %MEMORY
  %loadMem_4aac12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5508 = getelementptr inbounds %struct.GPR, %struct.GPR* %5507, i32 0, i32 33
  %5509 = getelementptr inbounds %struct.Reg, %struct.Reg* %5508, i32 0, i32 0
  %PC.i3443 = bitcast %union.anon* %5509 to i64*
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 5
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %RCX.i3444 = bitcast %union.anon* %5512 to i64*
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5514 = getelementptr inbounds %struct.GPR, %struct.GPR* %5513, i32 0, i32 15
  %5515 = getelementptr inbounds %struct.Reg, %struct.Reg* %5514, i32 0, i32 0
  %RBP.i3445 = bitcast %union.anon* %5515 to i64*
  %5516 = load i64, i64* %RBP.i3445
  %5517 = sub i64 %5516, 24
  %5518 = load i64, i64* %PC.i3443
  %5519 = add i64 %5518, 4
  store i64 %5519, i64* %PC.i3443
  %5520 = inttoptr i64 %5517 to i32*
  %5521 = load i32, i32* %5520
  %5522 = sext i32 %5521 to i64
  store i64 %5522, i64* %RCX.i3444, align 8
  store %struct.Memory* %loadMem_4aac12, %struct.Memory** %MEMORY
  %loadMem_4aac16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5524 = getelementptr inbounds %struct.GPR, %struct.GPR* %5523, i32 0, i32 33
  %5525 = getelementptr inbounds %struct.Reg, %struct.Reg* %5524, i32 0, i32 0
  %PC.i3439 = bitcast %union.anon* %5525 to i64*
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5527 = getelementptr inbounds %struct.GPR, %struct.GPR* %5526, i32 0, i32 9
  %5528 = getelementptr inbounds %struct.Reg, %struct.Reg* %5527, i32 0, i32 0
  %ESI.i3440 = bitcast %union.anon* %5528 to i32*
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5530 = getelementptr inbounds %struct.GPR, %struct.GPR* %5529, i32 0, i32 5
  %5531 = getelementptr inbounds %struct.Reg, %struct.Reg* %5530, i32 0, i32 0
  %RCX.i3441 = bitcast %union.anon* %5531 to i64*
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5533 = getelementptr inbounds %struct.GPR, %struct.GPR* %5532, i32 0, i32 15
  %5534 = getelementptr inbounds %struct.Reg, %struct.Reg* %5533, i32 0, i32 0
  %RBP.i3442 = bitcast %union.anon* %5534 to i64*
  %5535 = load i64, i64* %RBP.i3442
  %5536 = load i64, i64* %RCX.i3441
  %5537 = mul i64 %5536, 4
  %5538 = add i64 %5535, -240
  %5539 = add i64 %5538, %5537
  %5540 = load i32, i32* %ESI.i3440
  %5541 = zext i32 %5540 to i64
  %5542 = load i64, i64* %PC.i3439
  %5543 = add i64 %5542, 7
  store i64 %5543, i64* %PC.i3439
  %5544 = inttoptr i64 %5539 to i32*
  store i32 %5540, i32* %5544
  store %struct.Memory* %loadMem_4aac16, %struct.Memory** %MEMORY
  %loadMem_4aac1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5546 = getelementptr inbounds %struct.GPR, %struct.GPR* %5545, i32 0, i32 33
  %5547 = getelementptr inbounds %struct.Reg, %struct.Reg* %5546, i32 0, i32 0
  %PC.i3436 = bitcast %union.anon* %5547 to i64*
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5549 = getelementptr inbounds %struct.GPR, %struct.GPR* %5548, i32 0, i32 9
  %5550 = getelementptr inbounds %struct.Reg, %struct.Reg* %5549, i32 0, i32 0
  %RSI.i3437 = bitcast %union.anon* %5550 to i64*
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5552 = getelementptr inbounds %struct.GPR, %struct.GPR* %5551, i32 0, i32 15
  %5553 = getelementptr inbounds %struct.Reg, %struct.Reg* %5552, i32 0, i32 0
  %RBP.i3438 = bitcast %union.anon* %5553 to i64*
  %5554 = load i64, i64* %RBP.i3438
  %5555 = sub i64 %5554, 472
  %5556 = load i64, i64* %PC.i3436
  %5557 = add i64 %5556, 6
  store i64 %5557, i64* %PC.i3436
  %5558 = inttoptr i64 %5555 to i32*
  %5559 = load i32, i32* %5558
  %5560 = zext i32 %5559 to i64
  store i64 %5560, i64* %RSI.i3437, align 8
  store %struct.Memory* %loadMem_4aac1d, %struct.Memory** %MEMORY
  %loadMem_4aac23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5562 = getelementptr inbounds %struct.GPR, %struct.GPR* %5561, i32 0, i32 33
  %5563 = getelementptr inbounds %struct.Reg, %struct.Reg* %5562, i32 0, i32 0
  %PC.i3434 = bitcast %union.anon* %5563 to i64*
  %5564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5565 = getelementptr inbounds %struct.GPR, %struct.GPR* %5564, i32 0, i32 9
  %5566 = getelementptr inbounds %struct.Reg, %struct.Reg* %5565, i32 0, i32 0
  %RSI.i3435 = bitcast %union.anon* %5566 to i64*
  %5567 = load i64, i64* %RSI.i3435
  %5568 = load i64, i64* %PC.i3434
  %5569 = add i64 %5568, 2
  store i64 %5569, i64* %PC.i3434
  %5570 = shl i64 %5567, 32
  %5571 = ashr i64 %5570, 33
  %5572 = trunc i64 %5567 to i8
  %5573 = and i8 %5572, 1
  %5574 = trunc i64 %5571 to i32
  %5575 = and i64 %5571, 4294967295
  store i64 %5575, i64* %RSI.i3435, align 8
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5573, i8* %5576, align 1
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5578 = and i32 %5574, 255
  %5579 = call i32 @llvm.ctpop.i32(i32 %5578)
  %5580 = trunc i32 %5579 to i8
  %5581 = and i8 %5580, 1
  %5582 = xor i8 %5581, 1
  store i8 %5582, i8* %5577, align 1
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5583, align 1
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5585 = icmp eq i32 %5574, 0
  %5586 = zext i1 %5585 to i8
  store i8 %5586, i8* %5584, align 1
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5588 = lshr i32 %5574, 31
  %5589 = trunc i32 %5588 to i8
  store i8 %5589, i8* %5587, align 1
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5590, align 1
  store %struct.Memory* %loadMem_4aac23, %struct.Memory** %MEMORY
  %loadMem_4aac26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5592 = getelementptr inbounds %struct.GPR, %struct.GPR* %5591, i32 0, i32 33
  %5593 = getelementptr inbounds %struct.Reg, %struct.Reg* %5592, i32 0, i32 0
  %PC.i3431 = bitcast %union.anon* %5593 to i64*
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5595 = getelementptr inbounds %struct.GPR, %struct.GPR* %5594, i32 0, i32 9
  %5596 = getelementptr inbounds %struct.Reg, %struct.Reg* %5595, i32 0, i32 0
  %RSI.i3432 = bitcast %union.anon* %5596 to i64*
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 15
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %RBP.i3433 = bitcast %union.anon* %5599 to i64*
  %5600 = load i64, i64* %RSI.i3432
  %5601 = load i64, i64* %RBP.i3433
  %5602 = sub i64 %5601, 468
  %5603 = load i64, i64* %PC.i3431
  %5604 = add i64 %5603, 6
  store i64 %5604, i64* %PC.i3431
  %5605 = trunc i64 %5600 to i32
  %5606 = inttoptr i64 %5602 to i32*
  %5607 = load i32, i32* %5606
  %5608 = sub i32 %5605, %5607
  %5609 = zext i32 %5608 to i64
  store i64 %5609, i64* %RSI.i3432, align 8
  %5610 = icmp ult i32 %5605, %5607
  %5611 = zext i1 %5610 to i8
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5611, i8* %5612, align 1
  %5613 = and i32 %5608, 255
  %5614 = call i32 @llvm.ctpop.i32(i32 %5613)
  %5615 = trunc i32 %5614 to i8
  %5616 = and i8 %5615, 1
  %5617 = xor i8 %5616, 1
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5617, i8* %5618, align 1
  %5619 = xor i32 %5607, %5605
  %5620 = xor i32 %5619, %5608
  %5621 = lshr i32 %5620, 4
  %5622 = trunc i32 %5621 to i8
  %5623 = and i8 %5622, 1
  %5624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5623, i8* %5624, align 1
  %5625 = icmp eq i32 %5608, 0
  %5626 = zext i1 %5625 to i8
  %5627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5626, i8* %5627, align 1
  %5628 = lshr i32 %5608, 31
  %5629 = trunc i32 %5628 to i8
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5629, i8* %5630, align 1
  %5631 = lshr i32 %5605, 31
  %5632 = lshr i32 %5607, 31
  %5633 = xor i32 %5632, %5631
  %5634 = xor i32 %5628, %5631
  %5635 = add i32 %5634, %5633
  %5636 = icmp eq i32 %5635, 2
  %5637 = zext i1 %5636 to i8
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5637, i8* %5638, align 1
  store %struct.Memory* %loadMem_4aac26, %struct.Memory** %MEMORY
  %loadMem_4aac2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 33
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %PC.i3428 = bitcast %union.anon* %5641 to i64*
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 5
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %RCX.i3429 = bitcast %union.anon* %5644 to i64*
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 15
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %RBP.i3430 = bitcast %union.anon* %5647 to i64*
  %5648 = load i64, i64* %RBP.i3430
  %5649 = sub i64 %5648, 24
  %5650 = load i64, i64* %PC.i3428
  %5651 = add i64 %5650, 4
  store i64 %5651, i64* %PC.i3428
  %5652 = inttoptr i64 %5649 to i32*
  %5653 = load i32, i32* %5652
  %5654 = sext i32 %5653 to i64
  store i64 %5654, i64* %RCX.i3429, align 8
  store %struct.Memory* %loadMem_4aac2c, %struct.Memory** %MEMORY
  %loadMem_4aac30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5656 = getelementptr inbounds %struct.GPR, %struct.GPR* %5655, i32 0, i32 33
  %5657 = getelementptr inbounds %struct.Reg, %struct.Reg* %5656, i32 0, i32 0
  %PC.i3424 = bitcast %union.anon* %5657 to i64*
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 9
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %ESI.i3425 = bitcast %union.anon* %5660 to i32*
  %5661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5662 = getelementptr inbounds %struct.GPR, %struct.GPR* %5661, i32 0, i32 5
  %5663 = getelementptr inbounds %struct.Reg, %struct.Reg* %5662, i32 0, i32 0
  %RCX.i3426 = bitcast %union.anon* %5663 to i64*
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5665 = getelementptr inbounds %struct.GPR, %struct.GPR* %5664, i32 0, i32 15
  %5666 = getelementptr inbounds %struct.Reg, %struct.Reg* %5665, i32 0, i32 0
  %RBP.i3427 = bitcast %union.anon* %5666 to i64*
  %5667 = load i64, i64* %RBP.i3427
  %5668 = load i64, i64* %RCX.i3426
  %5669 = mul i64 %5668, 4
  %5670 = add i64 %5667, -176
  %5671 = add i64 %5670, %5669
  %5672 = load i32, i32* %ESI.i3425
  %5673 = zext i32 %5672 to i64
  %5674 = load i64, i64* %PC.i3424
  %5675 = add i64 %5674, 7
  store i64 %5675, i64* %PC.i3424
  %5676 = inttoptr i64 %5671 to i32*
  store i32 %5672, i32* %5676
  store %struct.Memory* %loadMem_4aac30, %struct.Memory** %MEMORY
  %loadMem_4aac37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5678 = getelementptr inbounds %struct.GPR, %struct.GPR* %5677, i32 0, i32 33
  %5679 = getelementptr inbounds %struct.Reg, %struct.Reg* %5678, i32 0, i32 0
  %PC.i3421 = bitcast %union.anon* %5679 to i64*
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5681 = getelementptr inbounds %struct.GPR, %struct.GPR* %5680, i32 0, i32 9
  %5682 = getelementptr inbounds %struct.Reg, %struct.Reg* %5681, i32 0, i32 0
  %RSI.i3422 = bitcast %union.anon* %5682 to i64*
  %5683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5684 = getelementptr inbounds %struct.GPR, %struct.GPR* %5683, i32 0, i32 15
  %5685 = getelementptr inbounds %struct.Reg, %struct.Reg* %5684, i32 0, i32 0
  %RBP.i3423 = bitcast %union.anon* %5685 to i64*
  %5686 = load i64, i64* %RBP.i3423
  %5687 = sub i64 %5686, 464
  %5688 = load i64, i64* %PC.i3421
  %5689 = add i64 %5688, 6
  store i64 %5689, i64* %PC.i3421
  %5690 = inttoptr i64 %5687 to i32*
  %5691 = load i32, i32* %5690
  %5692 = zext i32 %5691 to i64
  store i64 %5692, i64* %RSI.i3422, align 8
  store %struct.Memory* %loadMem_4aac37, %struct.Memory** %MEMORY
  %loadMem_4aac3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5694 = getelementptr inbounds %struct.GPR, %struct.GPR* %5693, i32 0, i32 33
  %5695 = getelementptr inbounds %struct.Reg, %struct.Reg* %5694, i32 0, i32 0
  %PC.i3418 = bitcast %union.anon* %5695 to i64*
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5697 = getelementptr inbounds %struct.GPR, %struct.GPR* %5696, i32 0, i32 11
  %5698 = getelementptr inbounds %struct.Reg, %struct.Reg* %5697, i32 0, i32 0
  %RDI.i3419 = bitcast %union.anon* %5698 to i64*
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5700 = getelementptr inbounds %struct.GPR, %struct.GPR* %5699, i32 0, i32 15
  %5701 = getelementptr inbounds %struct.Reg, %struct.Reg* %5700, i32 0, i32 0
  %RBP.i3420 = bitcast %union.anon* %5701 to i64*
  %5702 = load i64, i64* %RBP.i3420
  %5703 = sub i64 %5702, 452
  %5704 = load i64, i64* %PC.i3418
  %5705 = add i64 %5704, 6
  store i64 %5705, i64* %PC.i3418
  %5706 = inttoptr i64 %5703 to i32*
  %5707 = load i32, i32* %5706
  %5708 = zext i32 %5707 to i64
  store i64 %5708, i64* %RDI.i3419, align 8
  store %struct.Memory* %loadMem_4aac3d, %struct.Memory** %MEMORY
  %loadMem_4aac43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5710 = getelementptr inbounds %struct.GPR, %struct.GPR* %5709, i32 0, i32 33
  %5711 = getelementptr inbounds %struct.Reg, %struct.Reg* %5710, i32 0, i32 0
  %PC.i3416 = bitcast %union.anon* %5711 to i64*
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5713 = getelementptr inbounds %struct.GPR, %struct.GPR* %5712, i32 0, i32 11
  %5714 = getelementptr inbounds %struct.Reg, %struct.Reg* %5713, i32 0, i32 0
  %RDI.i3417 = bitcast %union.anon* %5714 to i64*
  %5715 = load i64, i64* %RDI.i3417
  %5716 = load i64, i64* %PC.i3416
  %5717 = add i64 %5716, 3
  store i64 %5717, i64* %PC.i3416
  %5718 = shl i64 %5715, 32
  %5719 = ashr exact i64 %5718, 32
  %5720 = ashr i64 %5719, 1
  %5721 = lshr i64 %5720, 1
  %5722 = trunc i64 %5720 to i8
  %5723 = and i8 %5722, 1
  %5724 = trunc i64 %5721 to i32
  %5725 = and i64 %5721, 4294967295
  store i64 %5725, i64* %RDI.i3417, align 8
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5723, i8* %5726, align 1
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5728 = and i32 %5724, 255
  %5729 = call i32 @llvm.ctpop.i32(i32 %5728)
  %5730 = trunc i32 %5729 to i8
  %5731 = and i8 %5730, 1
  %5732 = xor i8 %5731, 1
  store i8 %5732, i8* %5727, align 1
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5733, align 1
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5735 = icmp eq i32 %5724, 0
  %5736 = zext i1 %5735 to i8
  store i8 %5736, i8* %5734, align 1
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5738 = lshr i32 %5724, 31
  %5739 = trunc i32 %5738 to i8
  store i8 %5739, i8* %5737, align 1
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5740, align 1
  store %struct.Memory* %loadMem_4aac43, %struct.Memory** %MEMORY
  %loadMem_4aac46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5742 = getelementptr inbounds %struct.GPR, %struct.GPR* %5741, i32 0, i32 33
  %5743 = getelementptr inbounds %struct.Reg, %struct.Reg* %5742, i32 0, i32 0
  %PC.i3413 = bitcast %union.anon* %5743 to i64*
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5745 = getelementptr inbounds %struct.GPR, %struct.GPR* %5744, i32 0, i32 11
  %5746 = getelementptr inbounds %struct.Reg, %struct.Reg* %5745, i32 0, i32 0
  %EDI.i3414 = bitcast %union.anon* %5746 to i32*
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5748 = getelementptr inbounds %struct.GPR, %struct.GPR* %5747, i32 0, i32 9
  %5749 = getelementptr inbounds %struct.Reg, %struct.Reg* %5748, i32 0, i32 0
  %RSI.i3415 = bitcast %union.anon* %5749 to i64*
  %5750 = load i64, i64* %RSI.i3415
  %5751 = load i32, i32* %EDI.i3414
  %5752 = zext i32 %5751 to i64
  %5753 = load i64, i64* %PC.i3413
  %5754 = add i64 %5753, 2
  store i64 %5754, i64* %PC.i3413
  %5755 = trunc i64 %5750 to i32
  %5756 = add i32 %5751, %5755
  %5757 = zext i32 %5756 to i64
  store i64 %5757, i64* %RSI.i3415, align 8
  %5758 = icmp ult i32 %5756, %5755
  %5759 = icmp ult i32 %5756, %5751
  %5760 = or i1 %5758, %5759
  %5761 = zext i1 %5760 to i8
  %5762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5761, i8* %5762, align 1
  %5763 = and i32 %5756, 255
  %5764 = call i32 @llvm.ctpop.i32(i32 %5763)
  %5765 = trunc i32 %5764 to i8
  %5766 = and i8 %5765, 1
  %5767 = xor i8 %5766, 1
  %5768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5767, i8* %5768, align 1
  %5769 = xor i64 %5752, %5750
  %5770 = trunc i64 %5769 to i32
  %5771 = xor i32 %5770, %5756
  %5772 = lshr i32 %5771, 4
  %5773 = trunc i32 %5772 to i8
  %5774 = and i8 %5773, 1
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5774, i8* %5775, align 1
  %5776 = icmp eq i32 %5756, 0
  %5777 = zext i1 %5776 to i8
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5777, i8* %5778, align 1
  %5779 = lshr i32 %5756, 31
  %5780 = trunc i32 %5779 to i8
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5780, i8* %5781, align 1
  %5782 = lshr i32 %5755, 31
  %5783 = lshr i32 %5751, 31
  %5784 = xor i32 %5779, %5782
  %5785 = xor i32 %5779, %5783
  %5786 = add i32 %5784, %5785
  %5787 = icmp eq i32 %5786, 2
  %5788 = zext i1 %5787 to i8
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5788, i8* %5789, align 1
  store %struct.Memory* %loadMem_4aac46, %struct.Memory** %MEMORY
  %loadMem_4aac48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5791 = getelementptr inbounds %struct.GPR, %struct.GPR* %5790, i32 0, i32 33
  %5792 = getelementptr inbounds %struct.Reg, %struct.Reg* %5791, i32 0, i32 0
  %PC.i3410 = bitcast %union.anon* %5792 to i64*
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5794 = getelementptr inbounds %struct.GPR, %struct.GPR* %5793, i32 0, i32 5
  %5795 = getelementptr inbounds %struct.Reg, %struct.Reg* %5794, i32 0, i32 0
  %RCX.i3411 = bitcast %union.anon* %5795 to i64*
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5797 = getelementptr inbounds %struct.GPR, %struct.GPR* %5796, i32 0, i32 15
  %5798 = getelementptr inbounds %struct.Reg, %struct.Reg* %5797, i32 0, i32 0
  %RBP.i3412 = bitcast %union.anon* %5798 to i64*
  %5799 = load i64, i64* %RBP.i3412
  %5800 = sub i64 %5799, 24
  %5801 = load i64, i64* %PC.i3410
  %5802 = add i64 %5801, 4
  store i64 %5802, i64* %PC.i3410
  %5803 = inttoptr i64 %5800 to i32*
  %5804 = load i32, i32* %5803
  %5805 = sext i32 %5804 to i64
  store i64 %5805, i64* %RCX.i3411, align 8
  store %struct.Memory* %loadMem_4aac48, %struct.Memory** %MEMORY
  %loadMem_4aac4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5807 = getelementptr inbounds %struct.GPR, %struct.GPR* %5806, i32 0, i32 33
  %5808 = getelementptr inbounds %struct.Reg, %struct.Reg* %5807, i32 0, i32 0
  %PC.i3406 = bitcast %union.anon* %5808 to i64*
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5810 = getelementptr inbounds %struct.GPR, %struct.GPR* %5809, i32 0, i32 9
  %5811 = getelementptr inbounds %struct.Reg, %struct.Reg* %5810, i32 0, i32 0
  %ESI.i3407 = bitcast %union.anon* %5811 to i32*
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5813 = getelementptr inbounds %struct.GPR, %struct.GPR* %5812, i32 0, i32 5
  %5814 = getelementptr inbounds %struct.Reg, %struct.Reg* %5813, i32 0, i32 0
  %RCX.i3408 = bitcast %union.anon* %5814 to i64*
  %5815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5816 = getelementptr inbounds %struct.GPR, %struct.GPR* %5815, i32 0, i32 15
  %5817 = getelementptr inbounds %struct.Reg, %struct.Reg* %5816, i32 0, i32 0
  %RBP.i3409 = bitcast %union.anon* %5817 to i64*
  %5818 = load i64, i64* %RBP.i3409
  %5819 = load i64, i64* %RCX.i3408
  %5820 = mul i64 %5819, 4
  %5821 = add i64 %5818, -336
  %5822 = add i64 %5821, %5820
  %5823 = load i32, i32* %ESI.i3407
  %5824 = zext i32 %5823 to i64
  %5825 = load i64, i64* %PC.i3406
  %5826 = add i64 %5825, 7
  store i64 %5826, i64* %PC.i3406
  %5827 = inttoptr i64 %5822 to i32*
  store i32 %5823, i32* %5827
  store %struct.Memory* %loadMem_4aac4c, %struct.Memory** %MEMORY
  %loadMem_4aac53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 33
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %PC.i3403 = bitcast %union.anon* %5830 to i64*
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 9
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %RSI.i3404 = bitcast %union.anon* %5833 to i64*
  %5834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5835 = getelementptr inbounds %struct.GPR, %struct.GPR* %5834, i32 0, i32 15
  %5836 = getelementptr inbounds %struct.Reg, %struct.Reg* %5835, i32 0, i32 0
  %RBP.i3405 = bitcast %union.anon* %5836 to i64*
  %5837 = load i64, i64* %RBP.i3405
  %5838 = sub i64 %5837, 460
  %5839 = load i64, i64* %PC.i3403
  %5840 = add i64 %5839, 6
  store i64 %5840, i64* %PC.i3403
  %5841 = inttoptr i64 %5838 to i32*
  %5842 = load i32, i32* %5841
  %5843 = zext i32 %5842 to i64
  store i64 %5843, i64* %RSI.i3404, align 8
  store %struct.Memory* %loadMem_4aac53, %struct.Memory** %MEMORY
  %loadMem_4aac59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 33
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %PC.i3400 = bitcast %union.anon* %5846 to i64*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 11
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %RDI.i3401 = bitcast %union.anon* %5849 to i64*
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 15
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %RBP.i3402 = bitcast %union.anon* %5852 to i64*
  %5853 = load i64, i64* %RBP.i3402
  %5854 = sub i64 %5853, 456
  %5855 = load i64, i64* %PC.i3400
  %5856 = add i64 %5855, 6
  store i64 %5856, i64* %PC.i3400
  %5857 = inttoptr i64 %5854 to i32*
  %5858 = load i32, i32* %5857
  %5859 = zext i32 %5858 to i64
  store i64 %5859, i64* %RDI.i3401, align 8
  store %struct.Memory* %loadMem_4aac59, %struct.Memory** %MEMORY
  %loadMem_4aac5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 33
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %PC.i3398 = bitcast %union.anon* %5862 to i64*
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 11
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %RDI.i3399 = bitcast %union.anon* %5865 to i64*
  %5866 = load i64, i64* %RDI.i3399
  %5867 = load i64, i64* %PC.i3398
  %5868 = add i64 %5867, 3
  store i64 %5868, i64* %PC.i3398
  %5869 = shl i64 %5866, 32
  %5870 = ashr exact i64 %5869, 32
  %5871 = ashr i64 %5870, 1
  %5872 = lshr i64 %5871, 1
  %5873 = trunc i64 %5871 to i8
  %5874 = and i8 %5873, 1
  %5875 = trunc i64 %5872 to i32
  %5876 = and i64 %5872, 4294967295
  store i64 %5876, i64* %RDI.i3399, align 8
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5874, i8* %5877, align 1
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5879 = and i32 %5875, 255
  %5880 = call i32 @llvm.ctpop.i32(i32 %5879)
  %5881 = trunc i32 %5880 to i8
  %5882 = and i8 %5881, 1
  %5883 = xor i8 %5882, 1
  store i8 %5883, i8* %5878, align 1
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5884, align 1
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5886 = icmp eq i32 %5875, 0
  %5887 = zext i1 %5886 to i8
  store i8 %5887, i8* %5885, align 1
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5889 = lshr i32 %5875, 31
  %5890 = trunc i32 %5889 to i8
  store i8 %5890, i8* %5888, align 1
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5891, align 1
  store %struct.Memory* %loadMem_4aac5f, %struct.Memory** %MEMORY
  %loadMem_4aac62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5893 = getelementptr inbounds %struct.GPR, %struct.GPR* %5892, i32 0, i32 33
  %5894 = getelementptr inbounds %struct.Reg, %struct.Reg* %5893, i32 0, i32 0
  %PC.i3395 = bitcast %union.anon* %5894 to i64*
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5896 = getelementptr inbounds %struct.GPR, %struct.GPR* %5895, i32 0, i32 11
  %5897 = getelementptr inbounds %struct.Reg, %struct.Reg* %5896, i32 0, i32 0
  %EDI.i3396 = bitcast %union.anon* %5897 to i32*
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5899 = getelementptr inbounds %struct.GPR, %struct.GPR* %5898, i32 0, i32 9
  %5900 = getelementptr inbounds %struct.Reg, %struct.Reg* %5899, i32 0, i32 0
  %RSI.i3397 = bitcast %union.anon* %5900 to i64*
  %5901 = load i64, i64* %RSI.i3397
  %5902 = load i32, i32* %EDI.i3396
  %5903 = zext i32 %5902 to i64
  %5904 = load i64, i64* %PC.i3395
  %5905 = add i64 %5904, 2
  store i64 %5905, i64* %PC.i3395
  %5906 = trunc i64 %5901 to i32
  %5907 = add i32 %5902, %5906
  %5908 = zext i32 %5907 to i64
  store i64 %5908, i64* %RSI.i3397, align 8
  %5909 = icmp ult i32 %5907, %5906
  %5910 = icmp ult i32 %5907, %5902
  %5911 = or i1 %5909, %5910
  %5912 = zext i1 %5911 to i8
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5912, i8* %5913, align 1
  %5914 = and i32 %5907, 255
  %5915 = call i32 @llvm.ctpop.i32(i32 %5914)
  %5916 = trunc i32 %5915 to i8
  %5917 = and i8 %5916, 1
  %5918 = xor i8 %5917, 1
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5918, i8* %5919, align 1
  %5920 = xor i64 %5903, %5901
  %5921 = trunc i64 %5920 to i32
  %5922 = xor i32 %5921, %5907
  %5923 = lshr i32 %5922, 4
  %5924 = trunc i32 %5923 to i8
  %5925 = and i8 %5924, 1
  %5926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5925, i8* %5926, align 1
  %5927 = icmp eq i32 %5907, 0
  %5928 = zext i1 %5927 to i8
  %5929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5928, i8* %5929, align 1
  %5930 = lshr i32 %5907, 31
  %5931 = trunc i32 %5930 to i8
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5931, i8* %5932, align 1
  %5933 = lshr i32 %5906, 31
  %5934 = lshr i32 %5902, 31
  %5935 = xor i32 %5930, %5933
  %5936 = xor i32 %5930, %5934
  %5937 = add i32 %5935, %5936
  %5938 = icmp eq i32 %5937, 2
  %5939 = zext i1 %5938 to i8
  %5940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5939, i8* %5940, align 1
  store %struct.Memory* %loadMem_4aac62, %struct.Memory** %MEMORY
  %loadMem_4aac64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5942 = getelementptr inbounds %struct.GPR, %struct.GPR* %5941, i32 0, i32 33
  %5943 = getelementptr inbounds %struct.Reg, %struct.Reg* %5942, i32 0, i32 0
  %PC.i3392 = bitcast %union.anon* %5943 to i64*
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5945 = getelementptr inbounds %struct.GPR, %struct.GPR* %5944, i32 0, i32 5
  %5946 = getelementptr inbounds %struct.Reg, %struct.Reg* %5945, i32 0, i32 0
  %RCX.i3393 = bitcast %union.anon* %5946 to i64*
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5948 = getelementptr inbounds %struct.GPR, %struct.GPR* %5947, i32 0, i32 15
  %5949 = getelementptr inbounds %struct.Reg, %struct.Reg* %5948, i32 0, i32 0
  %RBP.i3394 = bitcast %union.anon* %5949 to i64*
  %5950 = load i64, i64* %RBP.i3394
  %5951 = sub i64 %5950, 24
  %5952 = load i64, i64* %PC.i3392
  %5953 = add i64 %5952, 4
  store i64 %5953, i64* %PC.i3392
  %5954 = inttoptr i64 %5951 to i32*
  %5955 = load i32, i32* %5954
  %5956 = sext i32 %5955 to i64
  store i64 %5956, i64* %RCX.i3393, align 8
  store %struct.Memory* %loadMem_4aac64, %struct.Memory** %MEMORY
  %loadMem_4aac68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5958 = getelementptr inbounds %struct.GPR, %struct.GPR* %5957, i32 0, i32 33
  %5959 = getelementptr inbounds %struct.Reg, %struct.Reg* %5958, i32 0, i32 0
  %PC.i3388 = bitcast %union.anon* %5959 to i64*
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5961 = getelementptr inbounds %struct.GPR, %struct.GPR* %5960, i32 0, i32 9
  %5962 = getelementptr inbounds %struct.Reg, %struct.Reg* %5961, i32 0, i32 0
  %ESI.i3389 = bitcast %union.anon* %5962 to i32*
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5964 = getelementptr inbounds %struct.GPR, %struct.GPR* %5963, i32 0, i32 5
  %5965 = getelementptr inbounds %struct.Reg, %struct.Reg* %5964, i32 0, i32 0
  %RCX.i3390 = bitcast %union.anon* %5965 to i64*
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5967 = getelementptr inbounds %struct.GPR, %struct.GPR* %5966, i32 0, i32 15
  %5968 = getelementptr inbounds %struct.Reg, %struct.Reg* %5967, i32 0, i32 0
  %RBP.i3391 = bitcast %union.anon* %5968 to i64*
  %5969 = load i64, i64* %RBP.i3391
  %5970 = load i64, i64* %RCX.i3390
  %5971 = mul i64 %5970, 4
  %5972 = add i64 %5969, -272
  %5973 = add i64 %5972, %5971
  %5974 = load i32, i32* %ESI.i3389
  %5975 = zext i32 %5974 to i64
  %5976 = load i64, i64* %PC.i3388
  %5977 = add i64 %5976, 7
  store i64 %5977, i64* %PC.i3388
  %5978 = inttoptr i64 %5973 to i32*
  store i32 %5974, i32* %5978
  store %struct.Memory* %loadMem_4aac68, %struct.Memory** %MEMORY
  %loadMem_4aac6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5980 = getelementptr inbounds %struct.GPR, %struct.GPR* %5979, i32 0, i32 33
  %5981 = getelementptr inbounds %struct.Reg, %struct.Reg* %5980, i32 0, i32 0
  %PC.i3385 = bitcast %union.anon* %5981 to i64*
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5983 = getelementptr inbounds %struct.GPR, %struct.GPR* %5982, i32 0, i32 9
  %5984 = getelementptr inbounds %struct.Reg, %struct.Reg* %5983, i32 0, i32 0
  %RSI.i3386 = bitcast %union.anon* %5984 to i64*
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5986 = getelementptr inbounds %struct.GPR, %struct.GPR* %5985, i32 0, i32 15
  %5987 = getelementptr inbounds %struct.Reg, %struct.Reg* %5986, i32 0, i32 0
  %RBP.i3387 = bitcast %union.anon* %5987 to i64*
  %5988 = load i64, i64* %RBP.i3387
  %5989 = sub i64 %5988, 456
  %5990 = load i64, i64* %PC.i3385
  %5991 = add i64 %5990, 6
  store i64 %5991, i64* %PC.i3385
  %5992 = inttoptr i64 %5989 to i32*
  %5993 = load i32, i32* %5992
  %5994 = zext i32 %5993 to i64
  store i64 %5994, i64* %RSI.i3386, align 8
  store %struct.Memory* %loadMem_4aac6f, %struct.Memory** %MEMORY
  %loadMem_4aac75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 33
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %PC.i3382 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 11
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RDI.i3383 = bitcast %union.anon* %6000 to i64*
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6002 = getelementptr inbounds %struct.GPR, %struct.GPR* %6001, i32 0, i32 15
  %6003 = getelementptr inbounds %struct.Reg, %struct.Reg* %6002, i32 0, i32 0
  %RBP.i3384 = bitcast %union.anon* %6003 to i64*
  %6004 = load i64, i64* %RBP.i3384
  %6005 = sub i64 %6004, 460
  %6006 = load i64, i64* %PC.i3382
  %6007 = add i64 %6006, 6
  store i64 %6007, i64* %PC.i3382
  %6008 = inttoptr i64 %6005 to i32*
  %6009 = load i32, i32* %6008
  %6010 = zext i32 %6009 to i64
  store i64 %6010, i64* %RDI.i3383, align 8
  store %struct.Memory* %loadMem_4aac75, %struct.Memory** %MEMORY
  %loadMem_4aac7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 33
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %PC.i3380 = bitcast %union.anon* %6013 to i64*
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6015 = getelementptr inbounds %struct.GPR, %struct.GPR* %6014, i32 0, i32 11
  %6016 = getelementptr inbounds %struct.Reg, %struct.Reg* %6015, i32 0, i32 0
  %RDI.i3381 = bitcast %union.anon* %6016 to i64*
  %6017 = load i64, i64* %RDI.i3381
  %6018 = load i64, i64* %PC.i3380
  %6019 = add i64 %6018, 3
  store i64 %6019, i64* %PC.i3380
  %6020 = shl i64 %6017, 32
  %6021 = ashr exact i64 %6020, 32
  %6022 = ashr i64 %6021, 1
  %6023 = lshr i64 %6022, 1
  %6024 = trunc i64 %6022 to i8
  %6025 = and i8 %6024, 1
  %6026 = trunc i64 %6023 to i32
  %6027 = and i64 %6023, 4294967295
  store i64 %6027, i64* %RDI.i3381, align 8
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6025, i8* %6028, align 1
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6030 = and i32 %6026, 255
  %6031 = call i32 @llvm.ctpop.i32(i32 %6030)
  %6032 = trunc i32 %6031 to i8
  %6033 = and i8 %6032, 1
  %6034 = xor i8 %6033, 1
  store i8 %6034, i8* %6029, align 1
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6035, align 1
  %6036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6037 = icmp eq i32 %6026, 0
  %6038 = zext i1 %6037 to i8
  store i8 %6038, i8* %6036, align 1
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6040 = lshr i32 %6026, 31
  %6041 = trunc i32 %6040 to i8
  store i8 %6041, i8* %6039, align 1
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6042, align 1
  store %struct.Memory* %loadMem_4aac7b, %struct.Memory** %MEMORY
  %loadMem_4aac7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6044 = getelementptr inbounds %struct.GPR, %struct.GPR* %6043, i32 0, i32 33
  %6045 = getelementptr inbounds %struct.Reg, %struct.Reg* %6044, i32 0, i32 0
  %PC.i3377 = bitcast %union.anon* %6045 to i64*
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6047 = getelementptr inbounds %struct.GPR, %struct.GPR* %6046, i32 0, i32 11
  %6048 = getelementptr inbounds %struct.Reg, %struct.Reg* %6047, i32 0, i32 0
  %EDI.i3378 = bitcast %union.anon* %6048 to i32*
  %6049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6050 = getelementptr inbounds %struct.GPR, %struct.GPR* %6049, i32 0, i32 9
  %6051 = getelementptr inbounds %struct.Reg, %struct.Reg* %6050, i32 0, i32 0
  %RSI.i3379 = bitcast %union.anon* %6051 to i64*
  %6052 = load i64, i64* %RSI.i3379
  %6053 = load i32, i32* %EDI.i3378
  %6054 = zext i32 %6053 to i64
  %6055 = load i64, i64* %PC.i3377
  %6056 = add i64 %6055, 2
  store i64 %6056, i64* %PC.i3377
  %6057 = trunc i64 %6052 to i32
  %6058 = sub i32 %6057, %6053
  %6059 = zext i32 %6058 to i64
  store i64 %6059, i64* %RSI.i3379, align 8
  %6060 = icmp ult i32 %6057, %6053
  %6061 = zext i1 %6060 to i8
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6061, i8* %6062, align 1
  %6063 = and i32 %6058, 255
  %6064 = call i32 @llvm.ctpop.i32(i32 %6063)
  %6065 = trunc i32 %6064 to i8
  %6066 = and i8 %6065, 1
  %6067 = xor i8 %6066, 1
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6067, i8* %6068, align 1
  %6069 = xor i64 %6054, %6052
  %6070 = trunc i64 %6069 to i32
  %6071 = xor i32 %6070, %6058
  %6072 = lshr i32 %6071, 4
  %6073 = trunc i32 %6072 to i8
  %6074 = and i8 %6073, 1
  %6075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6074, i8* %6075, align 1
  %6076 = icmp eq i32 %6058, 0
  %6077 = zext i1 %6076 to i8
  %6078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6077, i8* %6078, align 1
  %6079 = lshr i32 %6058, 31
  %6080 = trunc i32 %6079 to i8
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6080, i8* %6081, align 1
  %6082 = lshr i32 %6057, 31
  %6083 = lshr i32 %6053, 31
  %6084 = xor i32 %6083, %6082
  %6085 = xor i32 %6079, %6082
  %6086 = add i32 %6085, %6084
  %6087 = icmp eq i32 %6086, 2
  %6088 = zext i1 %6087 to i8
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6088, i8* %6089, align 1
  store %struct.Memory* %loadMem_4aac7e, %struct.Memory** %MEMORY
  %loadMem_4aac80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 33
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %PC.i3374 = bitcast %union.anon* %6092 to i64*
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6094 = getelementptr inbounds %struct.GPR, %struct.GPR* %6093, i32 0, i32 5
  %6095 = getelementptr inbounds %struct.Reg, %struct.Reg* %6094, i32 0, i32 0
  %RCX.i3375 = bitcast %union.anon* %6095 to i64*
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6097 = getelementptr inbounds %struct.GPR, %struct.GPR* %6096, i32 0, i32 15
  %6098 = getelementptr inbounds %struct.Reg, %struct.Reg* %6097, i32 0, i32 0
  %RBP.i3376 = bitcast %union.anon* %6098 to i64*
  %6099 = load i64, i64* %RBP.i3376
  %6100 = sub i64 %6099, 24
  %6101 = load i64, i64* %PC.i3374
  %6102 = add i64 %6101, 4
  store i64 %6102, i64* %PC.i3374
  %6103 = inttoptr i64 %6100 to i32*
  %6104 = load i32, i32* %6103
  %6105 = sext i32 %6104 to i64
  store i64 %6105, i64* %RCX.i3375, align 8
  store %struct.Memory* %loadMem_4aac80, %struct.Memory** %MEMORY
  %loadMem_4aac84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6107 = getelementptr inbounds %struct.GPR, %struct.GPR* %6106, i32 0, i32 33
  %6108 = getelementptr inbounds %struct.Reg, %struct.Reg* %6107, i32 0, i32 0
  %PC.i3370 = bitcast %union.anon* %6108 to i64*
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6110 = getelementptr inbounds %struct.GPR, %struct.GPR* %6109, i32 0, i32 9
  %6111 = getelementptr inbounds %struct.Reg, %struct.Reg* %6110, i32 0, i32 0
  %ESI.i3371 = bitcast %union.anon* %6111 to i32*
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6113 = getelementptr inbounds %struct.GPR, %struct.GPR* %6112, i32 0, i32 5
  %6114 = getelementptr inbounds %struct.Reg, %struct.Reg* %6113, i32 0, i32 0
  %RCX.i3372 = bitcast %union.anon* %6114 to i64*
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6116 = getelementptr inbounds %struct.GPR, %struct.GPR* %6115, i32 0, i32 15
  %6117 = getelementptr inbounds %struct.Reg, %struct.Reg* %6116, i32 0, i32 0
  %RBP.i3373 = bitcast %union.anon* %6117 to i64*
  %6118 = load i64, i64* %RBP.i3373
  %6119 = load i64, i64* %RCX.i3372
  %6120 = mul i64 %6119, 4
  %6121 = add i64 %6118, -208
  %6122 = add i64 %6121, %6120
  %6123 = load i32, i32* %ESI.i3371
  %6124 = zext i32 %6123 to i64
  %6125 = load i64, i64* %PC.i3370
  %6126 = add i64 %6125, 7
  store i64 %6126, i64* %PC.i3370
  %6127 = inttoptr i64 %6122 to i32*
  store i32 %6123, i32* %6127
  store %struct.Memory* %loadMem_4aac84, %struct.Memory** %MEMORY
  %loadMem_4aac8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6129 = getelementptr inbounds %struct.GPR, %struct.GPR* %6128, i32 0, i32 33
  %6130 = getelementptr inbounds %struct.Reg, %struct.Reg* %6129, i32 0, i32 0
  %PC.i3367 = bitcast %union.anon* %6130 to i64*
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6132 = getelementptr inbounds %struct.GPR, %struct.GPR* %6131, i32 0, i32 1
  %6133 = getelementptr inbounds %struct.Reg, %struct.Reg* %6132, i32 0, i32 0
  %RAX.i3368 = bitcast %union.anon* %6133 to i64*
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6135 = getelementptr inbounds %struct.GPR, %struct.GPR* %6134, i32 0, i32 15
  %6136 = getelementptr inbounds %struct.Reg, %struct.Reg* %6135, i32 0, i32 0
  %RBP.i3369 = bitcast %union.anon* %6136 to i64*
  %6137 = load i64, i64* %RAX.i3368
  %6138 = load i64, i64* %RBP.i3369
  %6139 = sub i64 %6138, 452
  %6140 = load i64, i64* %PC.i3367
  %6141 = add i64 %6140, 6
  store i64 %6141, i64* %PC.i3367
  %6142 = trunc i64 %6137 to i32
  %6143 = inttoptr i64 %6139 to i32*
  %6144 = load i32, i32* %6143
  %6145 = sub i32 %6142, %6144
  %6146 = zext i32 %6145 to i64
  store i64 %6146, i64* %RAX.i3368, align 8
  %6147 = icmp ult i32 %6142, %6144
  %6148 = zext i1 %6147 to i8
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6148, i8* %6149, align 1
  %6150 = and i32 %6145, 255
  %6151 = call i32 @llvm.ctpop.i32(i32 %6150)
  %6152 = trunc i32 %6151 to i8
  %6153 = and i8 %6152, 1
  %6154 = xor i8 %6153, 1
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6154, i8* %6155, align 1
  %6156 = xor i32 %6144, %6142
  %6157 = xor i32 %6156, %6145
  %6158 = lshr i32 %6157, 4
  %6159 = trunc i32 %6158 to i8
  %6160 = and i8 %6159, 1
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6160, i8* %6161, align 1
  %6162 = icmp eq i32 %6145, 0
  %6163 = zext i1 %6162 to i8
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6163, i8* %6164, align 1
  %6165 = lshr i32 %6145, 31
  %6166 = trunc i32 %6165 to i8
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6166, i8* %6167, align 1
  %6168 = lshr i32 %6142, 31
  %6169 = lshr i32 %6144, 31
  %6170 = xor i32 %6169, %6168
  %6171 = xor i32 %6165, %6168
  %6172 = add i32 %6171, %6170
  %6173 = icmp eq i32 %6172, 2
  %6174 = zext i1 %6173 to i8
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6174, i8* %6175, align 1
  store %struct.Memory* %loadMem_4aac8b, %struct.Memory** %MEMORY
  %loadMem_4aac91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 33
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %PC.i3364 = bitcast %union.anon* %6178 to i64*
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6180 = getelementptr inbounds %struct.GPR, %struct.GPR* %6179, i32 0, i32 9
  %6181 = getelementptr inbounds %struct.Reg, %struct.Reg* %6180, i32 0, i32 0
  %RSI.i3365 = bitcast %union.anon* %6181 to i64*
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6183 = getelementptr inbounds %struct.GPR, %struct.GPR* %6182, i32 0, i32 15
  %6184 = getelementptr inbounds %struct.Reg, %struct.Reg* %6183, i32 0, i32 0
  %RBP.i3366 = bitcast %union.anon* %6184 to i64*
  %6185 = load i64, i64* %RBP.i3366
  %6186 = sub i64 %6185, 464
  %6187 = load i64, i64* %PC.i3364
  %6188 = add i64 %6187, 6
  store i64 %6188, i64* %PC.i3364
  %6189 = inttoptr i64 %6186 to i32*
  %6190 = load i32, i32* %6189
  %6191 = zext i32 %6190 to i64
  store i64 %6191, i64* %RSI.i3365, align 8
  store %struct.Memory* %loadMem_4aac91, %struct.Memory** %MEMORY
  %loadMem_4aac97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6193 = getelementptr inbounds %struct.GPR, %struct.GPR* %6192, i32 0, i32 33
  %6194 = getelementptr inbounds %struct.Reg, %struct.Reg* %6193, i32 0, i32 0
  %PC.i3362 = bitcast %union.anon* %6194 to i64*
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 9
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %RSI.i3363 = bitcast %union.anon* %6197 to i64*
  %6198 = load i64, i64* %RSI.i3363
  %6199 = load i64, i64* %PC.i3362
  %6200 = add i64 %6199, 3
  store i64 %6200, i64* %PC.i3362
  %6201 = shl i64 %6198, 32
  %6202 = ashr exact i64 %6201, 32
  %6203 = ashr i64 %6202, 1
  %6204 = lshr i64 %6203, 1
  %6205 = trunc i64 %6203 to i8
  %6206 = and i8 %6205, 1
  %6207 = trunc i64 %6204 to i32
  %6208 = and i64 %6204, 4294967295
  store i64 %6208, i64* %RSI.i3363, align 8
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6206, i8* %6209, align 1
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6211 = and i32 %6207, 255
  %6212 = call i32 @llvm.ctpop.i32(i32 %6211)
  %6213 = trunc i32 %6212 to i8
  %6214 = and i8 %6213, 1
  %6215 = xor i8 %6214, 1
  store i8 %6215, i8* %6210, align 1
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6216, align 1
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6218 = icmp eq i32 %6207, 0
  %6219 = zext i1 %6218 to i8
  store i8 %6219, i8* %6217, align 1
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6221 = lshr i32 %6207, 31
  %6222 = trunc i32 %6221 to i8
  store i8 %6222, i8* %6220, align 1
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6223, align 1
  store %struct.Memory* %loadMem_4aac97, %struct.Memory** %MEMORY
  %loadMem_4aac9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6225 = getelementptr inbounds %struct.GPR, %struct.GPR* %6224, i32 0, i32 33
  %6226 = getelementptr inbounds %struct.Reg, %struct.Reg* %6225, i32 0, i32 0
  %PC.i3359 = bitcast %union.anon* %6226 to i64*
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6228 = getelementptr inbounds %struct.GPR, %struct.GPR* %6227, i32 0, i32 9
  %6229 = getelementptr inbounds %struct.Reg, %struct.Reg* %6228, i32 0, i32 0
  %ESI.i3360 = bitcast %union.anon* %6229 to i32*
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6231 = getelementptr inbounds %struct.GPR, %struct.GPR* %6230, i32 0, i32 1
  %6232 = getelementptr inbounds %struct.Reg, %struct.Reg* %6231, i32 0, i32 0
  %RAX.i3361 = bitcast %union.anon* %6232 to i64*
  %6233 = load i64, i64* %RAX.i3361
  %6234 = load i32, i32* %ESI.i3360
  %6235 = zext i32 %6234 to i64
  %6236 = load i64, i64* %PC.i3359
  %6237 = add i64 %6236, 2
  store i64 %6237, i64* %PC.i3359
  %6238 = trunc i64 %6233 to i32
  %6239 = add i32 %6234, %6238
  %6240 = zext i32 %6239 to i64
  store i64 %6240, i64* %RAX.i3361, align 8
  %6241 = icmp ult i32 %6239, %6238
  %6242 = icmp ult i32 %6239, %6234
  %6243 = or i1 %6241, %6242
  %6244 = zext i1 %6243 to i8
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6244, i8* %6245, align 1
  %6246 = and i32 %6239, 255
  %6247 = call i32 @llvm.ctpop.i32(i32 %6246)
  %6248 = trunc i32 %6247 to i8
  %6249 = and i8 %6248, 1
  %6250 = xor i8 %6249, 1
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6250, i8* %6251, align 1
  %6252 = xor i64 %6235, %6233
  %6253 = trunc i64 %6252 to i32
  %6254 = xor i32 %6253, %6239
  %6255 = lshr i32 %6254, 4
  %6256 = trunc i32 %6255 to i8
  %6257 = and i8 %6256, 1
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6257, i8* %6258, align 1
  %6259 = icmp eq i32 %6239, 0
  %6260 = zext i1 %6259 to i8
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6260, i8* %6261, align 1
  %6262 = lshr i32 %6239, 31
  %6263 = trunc i32 %6262 to i8
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6263, i8* %6264, align 1
  %6265 = lshr i32 %6238, 31
  %6266 = lshr i32 %6234, 31
  %6267 = xor i32 %6262, %6265
  %6268 = xor i32 %6262, %6266
  %6269 = add i32 %6267, %6268
  %6270 = icmp eq i32 %6269, 2
  %6271 = zext i1 %6270 to i8
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6271, i8* %6272, align 1
  store %struct.Memory* %loadMem_4aac9a, %struct.Memory** %MEMORY
  %loadMem_4aac9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6274 = getelementptr inbounds %struct.GPR, %struct.GPR* %6273, i32 0, i32 33
  %6275 = getelementptr inbounds %struct.Reg, %struct.Reg* %6274, i32 0, i32 0
  %PC.i3356 = bitcast %union.anon* %6275 to i64*
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6277 = getelementptr inbounds %struct.GPR, %struct.GPR* %6276, i32 0, i32 5
  %6278 = getelementptr inbounds %struct.Reg, %struct.Reg* %6277, i32 0, i32 0
  %RCX.i3357 = bitcast %union.anon* %6278 to i64*
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6280 = getelementptr inbounds %struct.GPR, %struct.GPR* %6279, i32 0, i32 15
  %6281 = getelementptr inbounds %struct.Reg, %struct.Reg* %6280, i32 0, i32 0
  %RBP.i3358 = bitcast %union.anon* %6281 to i64*
  %6282 = load i64, i64* %RBP.i3358
  %6283 = sub i64 %6282, 24
  %6284 = load i64, i64* %PC.i3356
  %6285 = add i64 %6284, 4
  store i64 %6285, i64* %PC.i3356
  %6286 = inttoptr i64 %6283 to i32*
  %6287 = load i32, i32* %6286
  %6288 = sext i32 %6287 to i64
  store i64 %6288, i64* %RCX.i3357, align 8
  store %struct.Memory* %loadMem_4aac9c, %struct.Memory** %MEMORY
  %loadMem_4aaca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6290 = getelementptr inbounds %struct.GPR, %struct.GPR* %6289, i32 0, i32 33
  %6291 = getelementptr inbounds %struct.Reg, %struct.Reg* %6290, i32 0, i32 0
  %PC.i3352 = bitcast %union.anon* %6291 to i64*
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6293 = getelementptr inbounds %struct.GPR, %struct.GPR* %6292, i32 0, i32 1
  %6294 = getelementptr inbounds %struct.Reg, %struct.Reg* %6293, i32 0, i32 0
  %EAX.i3353 = bitcast %union.anon* %6294 to i32*
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6296 = getelementptr inbounds %struct.GPR, %struct.GPR* %6295, i32 0, i32 5
  %6297 = getelementptr inbounds %struct.Reg, %struct.Reg* %6296, i32 0, i32 0
  %RCX.i3354 = bitcast %union.anon* %6297 to i64*
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 15
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %RBP.i3355 = bitcast %union.anon* %6300 to i64*
  %6301 = load i64, i64* %RBP.i3355
  %6302 = load i64, i64* %RCX.i3354
  %6303 = mul i64 %6302, 4
  %6304 = add i64 %6301, -144
  %6305 = add i64 %6304, %6303
  %6306 = load i32, i32* %EAX.i3353
  %6307 = zext i32 %6306 to i64
  %6308 = load i64, i64* %PC.i3352
  %6309 = add i64 %6308, 7
  store i64 %6309, i64* %PC.i3352
  %6310 = inttoptr i64 %6305 to i32*
  store i32 %6306, i32* %6310
  store %struct.Memory* %loadMem_4aaca0, %struct.Memory** %MEMORY
  %loadMem_4aaca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6312 = getelementptr inbounds %struct.GPR, %struct.GPR* %6311, i32 0, i32 33
  %6313 = getelementptr inbounds %struct.Reg, %struct.Reg* %6312, i32 0, i32 0
  %PC.i3349 = bitcast %union.anon* %6313 to i64*
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6315 = getelementptr inbounds %struct.GPR, %struct.GPR* %6314, i32 0, i32 1
  %6316 = getelementptr inbounds %struct.Reg, %struct.Reg* %6315, i32 0, i32 0
  %RAX.i3350 = bitcast %union.anon* %6316 to i64*
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6318 = getelementptr inbounds %struct.GPR, %struct.GPR* %6317, i32 0, i32 15
  %6319 = getelementptr inbounds %struct.Reg, %struct.Reg* %6318, i32 0, i32 0
  %RBP.i3351 = bitcast %union.anon* %6319 to i64*
  %6320 = load i64, i64* %RBP.i3351
  %6321 = sub i64 %6320, 24
  %6322 = load i64, i64* %PC.i3349
  %6323 = add i64 %6322, 3
  store i64 %6323, i64* %PC.i3349
  %6324 = inttoptr i64 %6321 to i32*
  %6325 = load i32, i32* %6324
  %6326 = zext i32 %6325 to i64
  store i64 %6326, i64* %RAX.i3350, align 8
  store %struct.Memory* %loadMem_4aaca7, %struct.Memory** %MEMORY
  %loadMem_4aacaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 33
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %PC.i3347 = bitcast %union.anon* %6329 to i64*
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 1
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %RAX.i3348 = bitcast %union.anon* %6332 to i64*
  %6333 = load i64, i64* %RAX.i3348
  %6334 = load i64, i64* %PC.i3347
  %6335 = add i64 %6334, 3
  store i64 %6335, i64* %PC.i3347
  %6336 = trunc i64 %6333 to i32
  %6337 = add i32 1, %6336
  %6338 = zext i32 %6337 to i64
  store i64 %6338, i64* %RAX.i3348, align 8
  %6339 = icmp ult i32 %6337, %6336
  %6340 = icmp ult i32 %6337, 1
  %6341 = or i1 %6339, %6340
  %6342 = zext i1 %6341 to i8
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6342, i8* %6343, align 1
  %6344 = and i32 %6337, 255
  %6345 = call i32 @llvm.ctpop.i32(i32 %6344)
  %6346 = trunc i32 %6345 to i8
  %6347 = and i8 %6346, 1
  %6348 = xor i8 %6347, 1
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6348, i8* %6349, align 1
  %6350 = xor i64 1, %6333
  %6351 = trunc i64 %6350 to i32
  %6352 = xor i32 %6351, %6337
  %6353 = lshr i32 %6352, 4
  %6354 = trunc i32 %6353 to i8
  %6355 = and i8 %6354, 1
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6355, i8* %6356, align 1
  %6357 = icmp eq i32 %6337, 0
  %6358 = zext i1 %6357 to i8
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6358, i8* %6359, align 1
  %6360 = lshr i32 %6337, 31
  %6361 = trunc i32 %6360 to i8
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6361, i8* %6362, align 1
  %6363 = lshr i32 %6336, 31
  %6364 = xor i32 %6360, %6363
  %6365 = add i32 %6364, %6360
  %6366 = icmp eq i32 %6365, 2
  %6367 = zext i1 %6366 to i8
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6367, i8* %6368, align 1
  store %struct.Memory* %loadMem_4aacaa, %struct.Memory** %MEMORY
  %loadMem_4aacad = load %struct.Memory*, %struct.Memory** %MEMORY
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 33
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %PC.i3344 = bitcast %union.anon* %6371 to i64*
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6373 = getelementptr inbounds %struct.GPR, %struct.GPR* %6372, i32 0, i32 1
  %6374 = getelementptr inbounds %struct.Reg, %struct.Reg* %6373, i32 0, i32 0
  %EAX.i3345 = bitcast %union.anon* %6374 to i32*
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6376 = getelementptr inbounds %struct.GPR, %struct.GPR* %6375, i32 0, i32 15
  %6377 = getelementptr inbounds %struct.Reg, %struct.Reg* %6376, i32 0, i32 0
  %RBP.i3346 = bitcast %union.anon* %6377 to i64*
  %6378 = load i64, i64* %RBP.i3346
  %6379 = sub i64 %6378, 24
  %6380 = load i32, i32* %EAX.i3345
  %6381 = zext i32 %6380 to i64
  %6382 = load i64, i64* %PC.i3344
  %6383 = add i64 %6382, 3
  store i64 %6383, i64* %PC.i3344
  %6384 = inttoptr i64 %6379 to i32*
  store i32 %6380, i32* %6384
  store %struct.Memory* %loadMem_4aacad, %struct.Memory** %MEMORY
  %loadMem_4aacb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6386 = getelementptr inbounds %struct.GPR, %struct.GPR* %6385, i32 0, i32 33
  %6387 = getelementptr inbounds %struct.Reg, %struct.Reg* %6386, i32 0, i32 0
  %PC.i3343 = bitcast %union.anon* %6387 to i64*
  %6388 = load i64, i64* %PC.i3343
  %6389 = add i64 %6388, -844
  %6390 = load i64, i64* %PC.i3343
  %6391 = add i64 %6390, 5
  store i64 %6391, i64* %PC.i3343
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6389, i64* %6392, align 8
  store %struct.Memory* %loadMem_4aacb0, %struct.Memory** %MEMORY
  br label %block_.L_4aa964

block_.L_4aacb5:                                  ; preds = %block_4aa998
  %loadMem_4aacb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6394 = getelementptr inbounds %struct.GPR, %struct.GPR* %6393, i32 0, i32 33
  %6395 = getelementptr inbounds %struct.Reg, %struct.Reg* %6394, i32 0, i32 0
  %PC.i3341 = bitcast %union.anon* %6395 to i64*
  %6396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6397 = getelementptr inbounds %struct.GPR, %struct.GPR* %6396, i32 0, i32 15
  %6398 = getelementptr inbounds %struct.Reg, %struct.Reg* %6397, i32 0, i32 0
  %RBP.i3342 = bitcast %union.anon* %6398 to i64*
  %6399 = load i64, i64* %RBP.i3342
  %6400 = sub i64 %6399, 24
  %6401 = load i64, i64* %PC.i3341
  %6402 = add i64 %6401, 7
  store i64 %6402, i64* %PC.i3341
  %6403 = inttoptr i64 %6400 to i32*
  store i32 0, i32* %6403
  store %struct.Memory* %loadMem_4aacb5, %struct.Memory** %MEMORY
  br label %block_.L_4aacbc

block_.L_4aacbc:                                  ; preds = %block_.L_4aacf5, %block_.L_4aacb5
  %loadMem_4aacbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6405 = getelementptr inbounds %struct.GPR, %struct.GPR* %6404, i32 0, i32 33
  %6406 = getelementptr inbounds %struct.Reg, %struct.Reg* %6405, i32 0, i32 0
  %PC.i3338 = bitcast %union.anon* %6406 to i64*
  %6407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6408 = getelementptr inbounds %struct.GPR, %struct.GPR* %6407, i32 0, i32 1
  %6409 = getelementptr inbounds %struct.Reg, %struct.Reg* %6408, i32 0, i32 0
  %EAX.i3339 = bitcast %union.anon* %6409 to i32*
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6411 = getelementptr inbounds %struct.GPR, %struct.GPR* %6410, i32 0, i32 1
  %6412 = getelementptr inbounds %struct.Reg, %struct.Reg* %6411, i32 0, i32 0
  %RAX.i3340 = bitcast %union.anon* %6412 to i64*
  %6413 = load i64, i64* %RAX.i3340
  %6414 = load i32, i32* %EAX.i3339
  %6415 = zext i32 %6414 to i64
  %6416 = load i64, i64* %PC.i3338
  %6417 = add i64 %6416, 2
  store i64 %6417, i64* %PC.i3338
  %6418 = xor i64 %6415, %6413
  %6419 = trunc i64 %6418 to i32
  %6420 = and i64 %6418, 4294967295
  store i64 %6420, i64* %RAX.i3340, align 8
  %6421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6421, align 1
  %6422 = and i32 %6419, 255
  %6423 = call i32 @llvm.ctpop.i32(i32 %6422)
  %6424 = trunc i32 %6423 to i8
  %6425 = and i8 %6424, 1
  %6426 = xor i8 %6425, 1
  %6427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6426, i8* %6427, align 1
  %6428 = icmp eq i32 %6419, 0
  %6429 = zext i1 %6428 to i8
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6429, i8* %6430, align 1
  %6431 = lshr i32 %6419, 31
  %6432 = trunc i32 %6431 to i8
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6432, i8* %6433, align 1
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6434, align 1
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6435, align 1
  store %struct.Memory* %loadMem_4aacbc, %struct.Memory** %MEMORY
  %loadMem_4aacbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6437 = getelementptr inbounds %struct.GPR, %struct.GPR* %6436, i32 0, i32 33
  %6438 = getelementptr inbounds %struct.Reg, %struct.Reg* %6437, i32 0, i32 0
  %PC.i3335 = bitcast %union.anon* %6438 to i64*
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6440 = getelementptr inbounds %struct.GPR, %struct.GPR* %6439, i32 0, i32 1
  %6441 = getelementptr inbounds %struct.Reg, %struct.Reg* %6440, i32 0, i32 0
  %6442 = bitcast %union.anon* %6441 to %struct.anon.2*
  %AL.i3336 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6442, i32 0, i32 0
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6444 = getelementptr inbounds %struct.GPR, %struct.GPR* %6443, i32 0, i32 5
  %6445 = getelementptr inbounds %struct.Reg, %struct.Reg* %6444, i32 0, i32 0
  %6446 = bitcast %union.anon* %6445 to %struct.anon.2*
  %CL.i3337 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6446, i32 0, i32 0
  %6447 = load i8, i8* %AL.i3336
  %6448 = zext i8 %6447 to i64
  %6449 = load i64, i64* %PC.i3335
  %6450 = add i64 %6449, 2
  store i64 %6450, i64* %PC.i3335
  store i8 %6447, i8* %CL.i3337, align 1
  store %struct.Memory* %loadMem_4aacbe, %struct.Memory** %MEMORY
  %loadMem_4aacc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 33
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %PC.i3333 = bitcast %union.anon* %6453 to i64*
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 15
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %RBP.i3334 = bitcast %union.anon* %6456 to i64*
  %6457 = load i64, i64* %RBP.i3334
  %6458 = sub i64 %6457, 24
  %6459 = load i64, i64* %PC.i3333
  %6460 = add i64 %6459, 4
  store i64 %6460, i64* %PC.i3333
  %6461 = inttoptr i64 %6458 to i32*
  %6462 = load i32, i32* %6461
  %6463 = sub i32 %6462, 8
  %6464 = icmp ult i32 %6462, 8
  %6465 = zext i1 %6464 to i8
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6465, i8* %6466, align 1
  %6467 = and i32 %6463, 255
  %6468 = call i32 @llvm.ctpop.i32(i32 %6467)
  %6469 = trunc i32 %6468 to i8
  %6470 = and i8 %6469, 1
  %6471 = xor i8 %6470, 1
  %6472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6471, i8* %6472, align 1
  %6473 = xor i32 %6462, 8
  %6474 = xor i32 %6473, %6463
  %6475 = lshr i32 %6474, 4
  %6476 = trunc i32 %6475 to i8
  %6477 = and i8 %6476, 1
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6477, i8* %6478, align 1
  %6479 = icmp eq i32 %6463, 0
  %6480 = zext i1 %6479 to i8
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6480, i8* %6481, align 1
  %6482 = lshr i32 %6463, 31
  %6483 = trunc i32 %6482 to i8
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6483, i8* %6484, align 1
  %6485 = lshr i32 %6462, 31
  %6486 = xor i32 %6482, %6485
  %6487 = add i32 %6486, %6485
  %6488 = icmp eq i32 %6487, 2
  %6489 = zext i1 %6488 to i8
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6489, i8* %6490, align 1
  store %struct.Memory* %loadMem_4aacc0, %struct.Memory** %MEMORY
  %loadMem_4aacc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6492 = getelementptr inbounds %struct.GPR, %struct.GPR* %6491, i32 0, i32 33
  %6493 = getelementptr inbounds %struct.Reg, %struct.Reg* %6492, i32 0, i32 0
  %PC.i3330 = bitcast %union.anon* %6493 to i64*
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6495 = getelementptr inbounds %struct.GPR, %struct.GPR* %6494, i32 0, i32 5
  %6496 = getelementptr inbounds %struct.Reg, %struct.Reg* %6495, i32 0, i32 0
  %6497 = bitcast %union.anon* %6496 to %struct.anon.2*
  %CL.i3331 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6497, i32 0, i32 0
  %6498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6499 = getelementptr inbounds %struct.GPR, %struct.GPR* %6498, i32 0, i32 15
  %6500 = getelementptr inbounds %struct.Reg, %struct.Reg* %6499, i32 0, i32 0
  %RBP.i3332 = bitcast %union.anon* %6500 to i64*
  %6501 = load i64, i64* %RBP.i3332
  %6502 = sub i64 %6501, 698
  %6503 = load i8, i8* %CL.i3331
  %6504 = zext i8 %6503 to i64
  %6505 = load i64, i64* %PC.i3330
  %6506 = add i64 %6505, 6
  store i64 %6506, i64* %PC.i3330
  %6507 = inttoptr i64 %6502 to i8*
  store i8 %6503, i8* %6507
  store %struct.Memory* %loadMem_4aacc4, %struct.Memory** %MEMORY
  %loadMem_4aacca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 33
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %PC.i3329 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %PC.i3329
  %6512 = add i64 %6511, 24
  %6513 = load i64, i64* %PC.i3329
  %6514 = add i64 %6513, 6
  %6515 = load i64, i64* %PC.i3329
  %6516 = add i64 %6515, 6
  store i64 %6516, i64* %PC.i3329
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6518 = load i8, i8* %6517, align 1
  %6519 = icmp ne i8 %6518, 0
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6521 = load i8, i8* %6520, align 1
  %6522 = icmp ne i8 %6521, 0
  %6523 = xor i1 %6519, %6522
  %6524 = xor i1 %6523, true
  %6525 = zext i1 %6524 to i8
  store i8 %6525, i8* %BRANCH_TAKEN, align 1
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6527 = select i1 %6523, i64 %6514, i64 %6512
  store i64 %6527, i64* %6526, align 8
  store %struct.Memory* %loadMem_4aacca, %struct.Memory** %MEMORY
  %loadBr_4aacca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aacca = icmp eq i8 %loadBr_4aacca, 1
  br i1 %cmpBr_4aacca, label %block_.L_4aace2, label %block_4aacd0

block_4aacd0:                                     ; preds = %block_.L_4aacbc
  %loadMem_4aacd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6529 = getelementptr inbounds %struct.GPR, %struct.GPR* %6528, i32 0, i32 33
  %6530 = getelementptr inbounds %struct.Reg, %struct.Reg* %6529, i32 0, i32 0
  %PC.i3327 = bitcast %union.anon* %6530 to i64*
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6532 = getelementptr inbounds %struct.GPR, %struct.GPR* %6531, i32 0, i32 15
  %6533 = getelementptr inbounds %struct.Reg, %struct.Reg* %6532, i32 0, i32 0
  %RBP.i3328 = bitcast %union.anon* %6533 to i64*
  %6534 = load i64, i64* %RBP.i3328
  %6535 = sub i64 %6534, 412
  %6536 = load i64, i64* %PC.i3327
  %6537 = add i64 %6536, 7
  store i64 %6537, i64* %PC.i3327
  %6538 = inttoptr i64 %6535 to i32*
  %6539 = load i32, i32* %6538
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6540, align 1
  %6541 = and i32 %6539, 255
  %6542 = call i32 @llvm.ctpop.i32(i32 %6541)
  %6543 = trunc i32 %6542 to i8
  %6544 = and i8 %6543, 1
  %6545 = xor i8 %6544, 1
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6545, i8* %6546, align 1
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6547, align 1
  %6548 = icmp eq i32 %6539, 0
  %6549 = zext i1 %6548 to i8
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6549, i8* %6550, align 1
  %6551 = lshr i32 %6539, 31
  %6552 = trunc i32 %6551 to i8
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6552, i8* %6553, align 1
  %6554 = lshr i32 %6539, 31
  %6555 = xor i32 %6551, %6554
  %6556 = add i32 %6555, %6554
  %6557 = icmp eq i32 %6556, 2
  %6558 = zext i1 %6557 to i8
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6558, i8* %6559, align 1
  store %struct.Memory* %loadMem_4aacd0, %struct.Memory** %MEMORY
  %loadMem_4aacd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6561 = getelementptr inbounds %struct.GPR, %struct.GPR* %6560, i32 0, i32 33
  %6562 = getelementptr inbounds %struct.Reg, %struct.Reg* %6561, i32 0, i32 0
  %PC.i3325 = bitcast %union.anon* %6562 to i64*
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 1
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %6566 = bitcast %union.anon* %6565 to %struct.anon.2*
  %AL.i3326 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6566, i32 0, i32 0
  %6567 = load i64, i64* %PC.i3325
  %6568 = add i64 %6567, 3
  store i64 %6568, i64* %PC.i3325
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6570 = load i8, i8* %6569, align 1
  %6571 = icmp eq i8 %6570, 0
  %6572 = zext i1 %6571 to i8
  store i8 %6572, i8* %AL.i3326, align 1
  store %struct.Memory* %loadMem_4aacd7, %struct.Memory** %MEMORY
  %loadMem_4aacda = load %struct.Memory*, %struct.Memory** %MEMORY
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6574 = getelementptr inbounds %struct.GPR, %struct.GPR* %6573, i32 0, i32 33
  %6575 = getelementptr inbounds %struct.Reg, %struct.Reg* %6574, i32 0, i32 0
  %PC.i3323 = bitcast %union.anon* %6575 to i64*
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6577 = getelementptr inbounds %struct.GPR, %struct.GPR* %6576, i32 0, i32 1
  %6578 = getelementptr inbounds %struct.Reg, %struct.Reg* %6577, i32 0, i32 0
  %6579 = bitcast %union.anon* %6578 to %struct.anon.2*
  %AL.i3324 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6579, i32 0, i32 0
  %6580 = load i8, i8* %AL.i3324
  %6581 = zext i8 %6580 to i64
  %6582 = load i64, i64* %PC.i3323
  %6583 = add i64 %6582, 2
  store i64 %6583, i64* %PC.i3323
  %6584 = xor i64 255, %6581
  %6585 = trunc i64 %6584 to i8
  store i8 %6585, i8* %AL.i3324, align 1
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6586, align 1
  %6587 = trunc i64 %6584 to i32
  %6588 = and i32 %6587, 255
  %6589 = call i32 @llvm.ctpop.i32(i32 %6588)
  %6590 = trunc i32 %6589 to i8
  %6591 = and i8 %6590, 1
  %6592 = xor i8 %6591, 1
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6592, i8* %6593, align 1
  %6594 = icmp eq i8 %6585, 0
  %6595 = zext i1 %6594 to i8
  %6596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6595, i8* %6596, align 1
  %6597 = lshr i8 %6585, 7
  %6598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6597, i8* %6598, align 1
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6599, align 1
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6600, align 1
  store %struct.Memory* %loadMem_4aacda, %struct.Memory** %MEMORY
  %loadMem_4aacdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 33
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %PC.i3320 = bitcast %union.anon* %6603 to i64*
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 1
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %6607 = bitcast %union.anon* %6606 to %struct.anon.2*
  %AL.i3321 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6607, i32 0, i32 0
  %6608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6609 = getelementptr inbounds %struct.GPR, %struct.GPR* %6608, i32 0, i32 15
  %6610 = getelementptr inbounds %struct.Reg, %struct.Reg* %6609, i32 0, i32 0
  %RBP.i3322 = bitcast %union.anon* %6610 to i64*
  %6611 = load i64, i64* %RBP.i3322
  %6612 = sub i64 %6611, 698
  %6613 = load i8, i8* %AL.i3321
  %6614 = zext i8 %6613 to i64
  %6615 = load i64, i64* %PC.i3320
  %6616 = add i64 %6615, 6
  store i64 %6616, i64* %PC.i3320
  %6617 = inttoptr i64 %6612 to i8*
  store i8 %6613, i8* %6617
  store %struct.Memory* %loadMem_4aacdc, %struct.Memory** %MEMORY
  br label %block_.L_4aace2

block_.L_4aace2:                                  ; preds = %block_4aacd0, %block_.L_4aacbc
  %loadMem_4aace2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6619 = getelementptr inbounds %struct.GPR, %struct.GPR* %6618, i32 0, i32 33
  %6620 = getelementptr inbounds %struct.Reg, %struct.Reg* %6619, i32 0, i32 0
  %PC.i3317 = bitcast %union.anon* %6620 to i64*
  %6621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6622 = getelementptr inbounds %struct.GPR, %struct.GPR* %6621, i32 0, i32 1
  %6623 = getelementptr inbounds %struct.Reg, %struct.Reg* %6622, i32 0, i32 0
  %6624 = bitcast %union.anon* %6623 to %struct.anon.2*
  %AL.i3318 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6624, i32 0, i32 0
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6626 = getelementptr inbounds %struct.GPR, %struct.GPR* %6625, i32 0, i32 15
  %6627 = getelementptr inbounds %struct.Reg, %struct.Reg* %6626, i32 0, i32 0
  %RBP.i3319 = bitcast %union.anon* %6627 to i64*
  %6628 = load i64, i64* %RBP.i3319
  %6629 = sub i64 %6628, 698
  %6630 = load i64, i64* %PC.i3317
  %6631 = add i64 %6630, 6
  store i64 %6631, i64* %PC.i3317
  %6632 = inttoptr i64 %6629 to i8*
  %6633 = load i8, i8* %6632
  store i8 %6633, i8* %AL.i3318, align 1
  store %struct.Memory* %loadMem_4aace2, %struct.Memory** %MEMORY
  %loadMem_4aace8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6635 = getelementptr inbounds %struct.GPR, %struct.GPR* %6634, i32 0, i32 33
  %6636 = getelementptr inbounds %struct.Reg, %struct.Reg* %6635, i32 0, i32 0
  %PC.i3315 = bitcast %union.anon* %6636 to i64*
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6638 = getelementptr inbounds %struct.GPR, %struct.GPR* %6637, i32 0, i32 1
  %6639 = getelementptr inbounds %struct.Reg, %struct.Reg* %6638, i32 0, i32 0
  %6640 = bitcast %union.anon* %6639 to %struct.anon.2*
  %AL.i3316 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6640, i32 0, i32 0
  %6641 = load i8, i8* %AL.i3316
  %6642 = zext i8 %6641 to i64
  %6643 = load i64, i64* %PC.i3315
  %6644 = add i64 %6643, 2
  store i64 %6644, i64* %PC.i3315
  %6645 = and i64 1, %6642
  %6646 = trunc i64 %6645 to i8
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6647, align 1
  %6648 = trunc i64 %6645 to i32
  %6649 = and i32 %6648, 255
  %6650 = call i32 @llvm.ctpop.i32(i32 %6649)
  %6651 = trunc i32 %6650 to i8
  %6652 = and i8 %6651, 1
  %6653 = xor i8 %6652, 1
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6653, i8* %6654, align 1
  %6655 = icmp eq i8 %6646, 0
  %6656 = zext i1 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6656, i8* %6657, align 1
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6658, align 1
  %6659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6659, align 1
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6660, align 1
  store %struct.Memory* %loadMem_4aace8, %struct.Memory** %MEMORY
  %loadMem_4aacea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6662 = getelementptr inbounds %struct.GPR, %struct.GPR* %6661, i32 0, i32 33
  %6663 = getelementptr inbounds %struct.Reg, %struct.Reg* %6662, i32 0, i32 0
  %PC.i3314 = bitcast %union.anon* %6663 to i64*
  %6664 = load i64, i64* %PC.i3314
  %6665 = add i64 %6664, 11
  %6666 = load i64, i64* %PC.i3314
  %6667 = add i64 %6666, 6
  %6668 = load i64, i64* %PC.i3314
  %6669 = add i64 %6668, 6
  store i64 %6669, i64* %PC.i3314
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6671 = load i8, i8* %6670, align 1
  %6672 = icmp eq i8 %6671, 0
  %6673 = zext i1 %6672 to i8
  store i8 %6673, i8* %BRANCH_TAKEN, align 1
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6675 = select i1 %6672, i64 %6665, i64 %6667
  store i64 %6675, i64* %6674, align 8
  store %struct.Memory* %loadMem_4aacea, %struct.Memory** %MEMORY
  %loadBr_4aacea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4aacea = icmp eq i8 %loadBr_4aacea, 1
  br i1 %cmpBr_4aacea, label %block_.L_4aacf5, label %block_4aacf0

block_4aacf0:                                     ; preds = %block_.L_4aace2
  %loadMem_4aacf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 33
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %PC.i3313 = bitcast %union.anon* %6678 to i64*
  %6679 = load i64, i64* %PC.i3313
  %6680 = add i64 %6679, 938
  %6681 = load i64, i64* %PC.i3313
  %6682 = add i64 %6681, 5
  store i64 %6682, i64* %PC.i3313
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6680, i64* %6683, align 8
  store %struct.Memory* %loadMem_4aacf0, %struct.Memory** %MEMORY
  br label %block_.L_4ab09a

block_.L_4aacf5:                                  ; preds = %block_.L_4aace2
  %loadMem_4aacf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6685 = getelementptr inbounds %struct.GPR, %struct.GPR* %6684, i32 0, i32 33
  %6686 = getelementptr inbounds %struct.Reg, %struct.Reg* %6685, i32 0, i32 0
  %PC.i3310 = bitcast %union.anon* %6686 to i64*
  %6687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6688 = getelementptr inbounds %struct.GPR, %struct.GPR* %6687, i32 0, i32 1
  %6689 = getelementptr inbounds %struct.Reg, %struct.Reg* %6688, i32 0, i32 0
  %EAX.i3311 = bitcast %union.anon* %6689 to i32*
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6691 = getelementptr inbounds %struct.GPR, %struct.GPR* %6690, i32 0, i32 1
  %6692 = getelementptr inbounds %struct.Reg, %struct.Reg* %6691, i32 0, i32 0
  %RAX.i3312 = bitcast %union.anon* %6692 to i64*
  %6693 = load i64, i64* %RAX.i3312
  %6694 = load i32, i32* %EAX.i3311
  %6695 = zext i32 %6694 to i64
  %6696 = load i64, i64* %PC.i3310
  %6697 = add i64 %6696, 2
  store i64 %6697, i64* %PC.i3310
  %6698 = xor i64 %6695, %6693
  %6699 = trunc i64 %6698 to i32
  %6700 = and i64 %6698, 4294967295
  store i64 %6700, i64* %RAX.i3312, align 8
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6701, align 1
  %6702 = and i32 %6699, 255
  %6703 = call i32 @llvm.ctpop.i32(i32 %6702)
  %6704 = trunc i32 %6703 to i8
  %6705 = and i8 %6704, 1
  %6706 = xor i8 %6705, 1
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6706, i8* %6707, align 1
  %6708 = icmp eq i32 %6699, 0
  %6709 = zext i1 %6708 to i8
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6709, i8* %6710, align 1
  %6711 = lshr i32 %6699, 31
  %6712 = trunc i32 %6711 to i8
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6712, i8* %6713, align 1
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6714, align 1
  %6715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6715, align 1
  store %struct.Memory* %loadMem_4aacf5, %struct.Memory** %MEMORY
  %loadMem_4aacf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 33
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %PC.i3307 = bitcast %union.anon* %6718 to i64*
  %6719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6720 = getelementptr inbounds %struct.GPR, %struct.GPR* %6719, i32 0, i32 5
  %6721 = getelementptr inbounds %struct.Reg, %struct.Reg* %6720, i32 0, i32 0
  %RCX.i3308 = bitcast %union.anon* %6721 to i64*
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6723 = getelementptr inbounds %struct.GPR, %struct.GPR* %6722, i32 0, i32 15
  %6724 = getelementptr inbounds %struct.Reg, %struct.Reg* %6723, i32 0, i32 0
  %RBP.i3309 = bitcast %union.anon* %6724 to i64*
  %6725 = load i64, i64* %RBP.i3309
  %6726 = sub i64 %6725, 368
  %6727 = load i64, i64* %PC.i3307
  %6728 = add i64 %6727, 7
  store i64 %6728, i64* %PC.i3307
  store i64 %6726, i64* %RCX.i3308, align 8
  store %struct.Memory* %loadMem_4aacf7, %struct.Memory** %MEMORY
  %loadMem_4aacfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 33
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %PC.i3304 = bitcast %union.anon* %6731 to i64*
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 7
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %RDX.i3305 = bitcast %union.anon* %6734 to i64*
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6736 = getelementptr inbounds %struct.GPR, %struct.GPR* %6735, i32 0, i32 15
  %6737 = getelementptr inbounds %struct.Reg, %struct.Reg* %6736, i32 0, i32 0
  %RBP.i3306 = bitcast %union.anon* %6737 to i64*
  %6738 = load i64, i64* %RBP.i3306
  %6739 = sub i64 %6738, 24
  %6740 = load i64, i64* %PC.i3304
  %6741 = add i64 %6740, 4
  store i64 %6741, i64* %PC.i3304
  %6742 = inttoptr i64 %6739 to i32*
  %6743 = load i32, i32* %6742
  %6744 = sext i32 %6743 to i64
  store i64 %6744, i64* %RDX.i3305, align 8
  store %struct.Memory* %loadMem_4aacfe, %struct.Memory** %MEMORY
  %loadMem_4aad02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6746 = getelementptr inbounds %struct.GPR, %struct.GPR* %6745, i32 0, i32 33
  %6747 = getelementptr inbounds %struct.Reg, %struct.Reg* %6746, i32 0, i32 0
  %PC.i3302 = bitcast %union.anon* %6747 to i64*
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6749 = getelementptr inbounds %struct.GPR, %struct.GPR* %6748, i32 0, i32 7
  %6750 = getelementptr inbounds %struct.Reg, %struct.Reg* %6749, i32 0, i32 0
  %RDX.i3303 = bitcast %union.anon* %6750 to i64*
  %6751 = load i64, i64* %RDX.i3303
  %6752 = load i64, i64* %PC.i3302
  %6753 = add i64 %6752, 4
  store i64 %6753, i64* %PC.i3302
  %6754 = shl i64 %6751, 4
  %6755 = icmp slt i64 %6754, 0
  %6756 = shl i64 %6754, 1
  store i64 %6756, i64* %RDX.i3303, align 8
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6758 = zext i1 %6755 to i8
  store i8 %6758, i8* %6757, align 1
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6760 = trunc i64 %6756 to i32
  %6761 = and i32 %6760, 254
  %6762 = call i32 @llvm.ctpop.i32(i32 %6761)
  %6763 = trunc i32 %6762 to i8
  %6764 = and i8 %6763, 1
  %6765 = xor i8 %6764, 1
  store i8 %6765, i8* %6759, align 1
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6766, align 1
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6768 = icmp eq i64 %6756, 0
  %6769 = zext i1 %6768 to i8
  store i8 %6769, i8* %6767, align 1
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6771 = lshr i64 %6756, 63
  %6772 = trunc i64 %6771 to i8
  store i8 %6772, i8* %6770, align 1
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6773, align 1
  store %struct.Memory* %loadMem_4aad02, %struct.Memory** %MEMORY
  %loadMem_4aad06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6775 = getelementptr inbounds %struct.GPR, %struct.GPR* %6774, i32 0, i32 33
  %6776 = getelementptr inbounds %struct.Reg, %struct.Reg* %6775, i32 0, i32 0
  %PC.i3299 = bitcast %union.anon* %6776 to i64*
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6778 = getelementptr inbounds %struct.GPR, %struct.GPR* %6777, i32 0, i32 5
  %6779 = getelementptr inbounds %struct.Reg, %struct.Reg* %6778, i32 0, i32 0
  %RCX.i3300 = bitcast %union.anon* %6779 to i64*
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6781 = getelementptr inbounds %struct.GPR, %struct.GPR* %6780, i32 0, i32 9
  %6782 = getelementptr inbounds %struct.Reg, %struct.Reg* %6781, i32 0, i32 0
  %RSI.i3301 = bitcast %union.anon* %6782 to i64*
  %6783 = load i64, i64* %RCX.i3300
  %6784 = load i64, i64* %PC.i3299
  %6785 = add i64 %6784, 3
  store i64 %6785, i64* %PC.i3299
  store i64 %6783, i64* %RSI.i3301, align 8
  store %struct.Memory* %loadMem_4aad06, %struct.Memory** %MEMORY
  %loadMem_4aad09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6787 = getelementptr inbounds %struct.GPR, %struct.GPR* %6786, i32 0, i32 33
  %6788 = getelementptr inbounds %struct.Reg, %struct.Reg* %6787, i32 0, i32 0
  %PC.i3296 = bitcast %union.anon* %6788 to i64*
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6790 = getelementptr inbounds %struct.GPR, %struct.GPR* %6789, i32 0, i32 7
  %6791 = getelementptr inbounds %struct.Reg, %struct.Reg* %6790, i32 0, i32 0
  %RDX.i3297 = bitcast %union.anon* %6791 to i64*
  %6792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6793 = getelementptr inbounds %struct.GPR, %struct.GPR* %6792, i32 0, i32 9
  %6794 = getelementptr inbounds %struct.Reg, %struct.Reg* %6793, i32 0, i32 0
  %RSI.i3298 = bitcast %union.anon* %6794 to i64*
  %6795 = load i64, i64* %RSI.i3298
  %6796 = load i64, i64* %RDX.i3297
  %6797 = load i64, i64* %PC.i3296
  %6798 = add i64 %6797, 3
  store i64 %6798, i64* %PC.i3296
  %6799 = add i64 %6796, %6795
  store i64 %6799, i64* %RSI.i3298, align 8
  %6800 = icmp ult i64 %6799, %6795
  %6801 = icmp ult i64 %6799, %6796
  %6802 = or i1 %6800, %6801
  %6803 = zext i1 %6802 to i8
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6803, i8* %6804, align 1
  %6805 = trunc i64 %6799 to i32
  %6806 = and i32 %6805, 255
  %6807 = call i32 @llvm.ctpop.i32(i32 %6806)
  %6808 = trunc i32 %6807 to i8
  %6809 = and i8 %6808, 1
  %6810 = xor i8 %6809, 1
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6810, i8* %6811, align 1
  %6812 = xor i64 %6796, %6795
  %6813 = xor i64 %6812, %6799
  %6814 = lshr i64 %6813, 4
  %6815 = trunc i64 %6814 to i8
  %6816 = and i8 %6815, 1
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6816, i8* %6817, align 1
  %6818 = icmp eq i64 %6799, 0
  %6819 = zext i1 %6818 to i8
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6819, i8* %6820, align 1
  %6821 = lshr i64 %6799, 63
  %6822 = trunc i64 %6821 to i8
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6822, i8* %6823, align 1
  %6824 = lshr i64 %6795, 63
  %6825 = lshr i64 %6796, 63
  %6826 = xor i64 %6821, %6824
  %6827 = xor i64 %6821, %6825
  %6828 = add i64 %6826, %6827
  %6829 = icmp eq i64 %6828, 2
  %6830 = zext i1 %6829 to i8
  %6831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6830, i8* %6831, align 1
  store %struct.Memory* %loadMem_4aad09, %struct.Memory** %MEMORY
  %loadMem_4aad0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 33
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %PC.i3293 = bitcast %union.anon* %6834 to i64*
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 9
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %RSI.i3294 = bitcast %union.anon* %6837 to i64*
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6839 = getelementptr inbounds %struct.GPR, %struct.GPR* %6838, i32 0, i32 11
  %6840 = getelementptr inbounds %struct.Reg, %struct.Reg* %6839, i32 0, i32 0
  %RDI.i3295 = bitcast %union.anon* %6840 to i64*
  %6841 = load i64, i64* %RSI.i3294
  %6842 = load i64, i64* %PC.i3293
  %6843 = add i64 %6842, 2
  store i64 %6843, i64* %PC.i3293
  %6844 = inttoptr i64 %6841 to i32*
  %6845 = load i32, i32* %6844
  %6846 = zext i32 %6845 to i64
  store i64 %6846, i64* %RDI.i3295, align 8
  store %struct.Memory* %loadMem_4aad0c, %struct.Memory** %MEMORY
  %loadMem_4aad0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6848 = getelementptr inbounds %struct.GPR, %struct.GPR* %6847, i32 0, i32 33
  %6849 = getelementptr inbounds %struct.Reg, %struct.Reg* %6848, i32 0, i32 0
  %PC.i3290 = bitcast %union.anon* %6849 to i64*
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6851 = getelementptr inbounds %struct.GPR, %struct.GPR* %6850, i32 0, i32 7
  %6852 = getelementptr inbounds %struct.Reg, %struct.Reg* %6851, i32 0, i32 0
  %RDX.i3291 = bitcast %union.anon* %6852 to i64*
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 15
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %RBP.i3292 = bitcast %union.anon* %6855 to i64*
  %6856 = load i64, i64* %RBP.i3292
  %6857 = sub i64 %6856, 24
  %6858 = load i64, i64* %PC.i3290
  %6859 = add i64 %6858, 4
  store i64 %6859, i64* %PC.i3290
  %6860 = inttoptr i64 %6857 to i32*
  %6861 = load i32, i32* %6860
  %6862 = sext i32 %6861 to i64
  store i64 %6862, i64* %RDX.i3291, align 8
  store %struct.Memory* %loadMem_4aad0e, %struct.Memory** %MEMORY
  %loadMem_4aad12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 33
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %PC.i3288 = bitcast %union.anon* %6865 to i64*
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6867 = getelementptr inbounds %struct.GPR, %struct.GPR* %6866, i32 0, i32 7
  %6868 = getelementptr inbounds %struct.Reg, %struct.Reg* %6867, i32 0, i32 0
  %RDX.i3289 = bitcast %union.anon* %6868 to i64*
  %6869 = load i64, i64* %RDX.i3289
  %6870 = load i64, i64* %PC.i3288
  %6871 = add i64 %6870, 4
  store i64 %6871, i64* %PC.i3288
  %6872 = shl i64 %6869, 4
  %6873 = icmp slt i64 %6872, 0
  %6874 = shl i64 %6872, 1
  store i64 %6874, i64* %RDX.i3289, align 8
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6876 = zext i1 %6873 to i8
  store i8 %6876, i8* %6875, align 1
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6878 = trunc i64 %6874 to i32
  %6879 = and i32 %6878, 254
  %6880 = call i32 @llvm.ctpop.i32(i32 %6879)
  %6881 = trunc i32 %6880 to i8
  %6882 = and i8 %6881, 1
  %6883 = xor i8 %6882, 1
  store i8 %6883, i8* %6877, align 1
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6884, align 1
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6886 = icmp eq i64 %6874, 0
  %6887 = zext i1 %6886 to i8
  store i8 %6887, i8* %6885, align 1
  %6888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6889 = lshr i64 %6874, 63
  %6890 = trunc i64 %6889 to i8
  store i8 %6890, i8* %6888, align 1
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6891, align 1
  store %struct.Memory* %loadMem_4aad12, %struct.Memory** %MEMORY
  %loadMem_4aad16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6893 = getelementptr inbounds %struct.GPR, %struct.GPR* %6892, i32 0, i32 33
  %6894 = getelementptr inbounds %struct.Reg, %struct.Reg* %6893, i32 0, i32 0
  %PC.i3285 = bitcast %union.anon* %6894 to i64*
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6896 = getelementptr inbounds %struct.GPR, %struct.GPR* %6895, i32 0, i32 5
  %6897 = getelementptr inbounds %struct.Reg, %struct.Reg* %6896, i32 0, i32 0
  %RCX.i3286 = bitcast %union.anon* %6897 to i64*
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6899 = getelementptr inbounds %struct.GPR, %struct.GPR* %6898, i32 0, i32 9
  %6900 = getelementptr inbounds %struct.Reg, %struct.Reg* %6899, i32 0, i32 0
  %RSI.i3287 = bitcast %union.anon* %6900 to i64*
  %6901 = load i64, i64* %RCX.i3286
  %6902 = load i64, i64* %PC.i3285
  %6903 = add i64 %6902, 3
  store i64 %6903, i64* %PC.i3285
  store i64 %6901, i64* %RSI.i3287, align 8
  store %struct.Memory* %loadMem_4aad16, %struct.Memory** %MEMORY
  %loadMem_4aad19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6905 = getelementptr inbounds %struct.GPR, %struct.GPR* %6904, i32 0, i32 33
  %6906 = getelementptr inbounds %struct.Reg, %struct.Reg* %6905, i32 0, i32 0
  %PC.i3282 = bitcast %union.anon* %6906 to i64*
  %6907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6908 = getelementptr inbounds %struct.GPR, %struct.GPR* %6907, i32 0, i32 7
  %6909 = getelementptr inbounds %struct.Reg, %struct.Reg* %6908, i32 0, i32 0
  %RDX.i3283 = bitcast %union.anon* %6909 to i64*
  %6910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6911 = getelementptr inbounds %struct.GPR, %struct.GPR* %6910, i32 0, i32 9
  %6912 = getelementptr inbounds %struct.Reg, %struct.Reg* %6911, i32 0, i32 0
  %RSI.i3284 = bitcast %union.anon* %6912 to i64*
  %6913 = load i64, i64* %RSI.i3284
  %6914 = load i64, i64* %RDX.i3283
  %6915 = load i64, i64* %PC.i3282
  %6916 = add i64 %6915, 3
  store i64 %6916, i64* %PC.i3282
  %6917 = add i64 %6914, %6913
  store i64 %6917, i64* %RSI.i3284, align 8
  %6918 = icmp ult i64 %6917, %6913
  %6919 = icmp ult i64 %6917, %6914
  %6920 = or i1 %6918, %6919
  %6921 = zext i1 %6920 to i8
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6921, i8* %6922, align 1
  %6923 = trunc i64 %6917 to i32
  %6924 = and i32 %6923, 255
  %6925 = call i32 @llvm.ctpop.i32(i32 %6924)
  %6926 = trunc i32 %6925 to i8
  %6927 = and i8 %6926, 1
  %6928 = xor i8 %6927, 1
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6928, i8* %6929, align 1
  %6930 = xor i64 %6914, %6913
  %6931 = xor i64 %6930, %6917
  %6932 = lshr i64 %6931, 4
  %6933 = trunc i64 %6932 to i8
  %6934 = and i8 %6933, 1
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6934, i8* %6935, align 1
  %6936 = icmp eq i64 %6917, 0
  %6937 = zext i1 %6936 to i8
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6937, i8* %6938, align 1
  %6939 = lshr i64 %6917, 63
  %6940 = trunc i64 %6939 to i8
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6940, i8* %6941, align 1
  %6942 = lshr i64 %6913, 63
  %6943 = lshr i64 %6914, 63
  %6944 = xor i64 %6939, %6942
  %6945 = xor i64 %6939, %6943
  %6946 = add i64 %6944, %6945
  %6947 = icmp eq i64 %6946, 2
  %6948 = zext i1 %6947 to i8
  %6949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6948, i8* %6949, align 1
  store %struct.Memory* %loadMem_4aad19, %struct.Memory** %MEMORY
  %loadMem_4aad1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 33
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %PC.i3279 = bitcast %union.anon* %6952 to i64*
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6954 = getelementptr inbounds %struct.GPR, %struct.GPR* %6953, i32 0, i32 9
  %6955 = getelementptr inbounds %struct.Reg, %struct.Reg* %6954, i32 0, i32 0
  %RSI.i3280 = bitcast %union.anon* %6955 to i64*
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6957 = getelementptr inbounds %struct.GPR, %struct.GPR* %6956, i32 0, i32 11
  %6958 = getelementptr inbounds %struct.Reg, %struct.Reg* %6957, i32 0, i32 0
  %RDI.i3281 = bitcast %union.anon* %6958 to i64*
  %6959 = load i64, i64* %RDI.i3281
  %6960 = load i64, i64* %RSI.i3280
  %6961 = add i64 %6960, 28
  %6962 = load i64, i64* %PC.i3279
  %6963 = add i64 %6962, 3
  store i64 %6963, i64* %PC.i3279
  %6964 = trunc i64 %6959 to i32
  %6965 = inttoptr i64 %6961 to i32*
  %6966 = load i32, i32* %6965
  %6967 = add i32 %6966, %6964
  %6968 = zext i32 %6967 to i64
  store i64 %6968, i64* %RDI.i3281, align 8
  %6969 = icmp ult i32 %6967, %6964
  %6970 = icmp ult i32 %6967, %6966
  %6971 = or i1 %6969, %6970
  %6972 = zext i1 %6971 to i8
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6972, i8* %6973, align 1
  %6974 = and i32 %6967, 255
  %6975 = call i32 @llvm.ctpop.i32(i32 %6974)
  %6976 = trunc i32 %6975 to i8
  %6977 = and i8 %6976, 1
  %6978 = xor i8 %6977, 1
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6978, i8* %6979, align 1
  %6980 = xor i32 %6966, %6964
  %6981 = xor i32 %6980, %6967
  %6982 = lshr i32 %6981, 4
  %6983 = trunc i32 %6982 to i8
  %6984 = and i8 %6983, 1
  %6985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6984, i8* %6985, align 1
  %6986 = icmp eq i32 %6967, 0
  %6987 = zext i1 %6986 to i8
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6987, i8* %6988, align 1
  %6989 = lshr i32 %6967, 31
  %6990 = trunc i32 %6989 to i8
  %6991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6990, i8* %6991, align 1
  %6992 = lshr i32 %6964, 31
  %6993 = lshr i32 %6966, 31
  %6994 = xor i32 %6989, %6992
  %6995 = xor i32 %6989, %6993
  %6996 = add i32 %6994, %6995
  %6997 = icmp eq i32 %6996, 2
  %6998 = zext i1 %6997 to i8
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6998, i8* %6999, align 1
  store %struct.Memory* %loadMem_4aad1c, %struct.Memory** %MEMORY
  %loadMem_4aad1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7001 = getelementptr inbounds %struct.GPR, %struct.GPR* %7000, i32 0, i32 33
  %7002 = getelementptr inbounds %struct.Reg, %struct.Reg* %7001, i32 0, i32 0
  %PC.i3276 = bitcast %union.anon* %7002 to i64*
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7004 = getelementptr inbounds %struct.GPR, %struct.GPR* %7003, i32 0, i32 11
  %7005 = getelementptr inbounds %struct.Reg, %struct.Reg* %7004, i32 0, i32 0
  %EDI.i3277 = bitcast %union.anon* %7005 to i32*
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7007 = getelementptr inbounds %struct.GPR, %struct.GPR* %7006, i32 0, i32 15
  %7008 = getelementptr inbounds %struct.Reg, %struct.Reg* %7007, i32 0, i32 0
  %RBP.i3278 = bitcast %union.anon* %7008 to i64*
  %7009 = load i64, i64* %RBP.i3278
  %7010 = sub i64 %7009, 512
  %7011 = load i32, i32* %EDI.i3277
  %7012 = zext i32 %7011 to i64
  %7013 = load i64, i64* %PC.i3276
  %7014 = add i64 %7013, 6
  store i64 %7014, i64* %PC.i3276
  %7015 = inttoptr i64 %7010 to i32*
  store i32 %7011, i32* %7015
  store %struct.Memory* %loadMem_4aad1f, %struct.Memory** %MEMORY
  %loadMem_4aad25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7017 = getelementptr inbounds %struct.GPR, %struct.GPR* %7016, i32 0, i32 33
  %7018 = getelementptr inbounds %struct.Reg, %struct.Reg* %7017, i32 0, i32 0
  %PC.i3273 = bitcast %union.anon* %7018 to i64*
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7020 = getelementptr inbounds %struct.GPR, %struct.GPR* %7019, i32 0, i32 7
  %7021 = getelementptr inbounds %struct.Reg, %struct.Reg* %7020, i32 0, i32 0
  %RDX.i3274 = bitcast %union.anon* %7021 to i64*
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7023 = getelementptr inbounds %struct.GPR, %struct.GPR* %7022, i32 0, i32 15
  %7024 = getelementptr inbounds %struct.Reg, %struct.Reg* %7023, i32 0, i32 0
  %RBP.i3275 = bitcast %union.anon* %7024 to i64*
  %7025 = load i64, i64* %RBP.i3275
  %7026 = sub i64 %7025, 24
  %7027 = load i64, i64* %PC.i3273
  %7028 = add i64 %7027, 4
  store i64 %7028, i64* %PC.i3273
  %7029 = inttoptr i64 %7026 to i32*
  %7030 = load i32, i32* %7029
  %7031 = sext i32 %7030 to i64
  store i64 %7031, i64* %RDX.i3274, align 8
  store %struct.Memory* %loadMem_4aad25, %struct.Memory** %MEMORY
  %loadMem_4aad29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7033 = getelementptr inbounds %struct.GPR, %struct.GPR* %7032, i32 0, i32 33
  %7034 = getelementptr inbounds %struct.Reg, %struct.Reg* %7033, i32 0, i32 0
  %PC.i3271 = bitcast %union.anon* %7034 to i64*
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7036 = getelementptr inbounds %struct.GPR, %struct.GPR* %7035, i32 0, i32 7
  %7037 = getelementptr inbounds %struct.Reg, %struct.Reg* %7036, i32 0, i32 0
  %RDX.i3272 = bitcast %union.anon* %7037 to i64*
  %7038 = load i64, i64* %RDX.i3272
  %7039 = load i64, i64* %PC.i3271
  %7040 = add i64 %7039, 4
  store i64 %7040, i64* %PC.i3271
  %7041 = shl i64 %7038, 4
  %7042 = icmp slt i64 %7041, 0
  %7043 = shl i64 %7041, 1
  store i64 %7043, i64* %RDX.i3272, align 8
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7045 = zext i1 %7042 to i8
  store i8 %7045, i8* %7044, align 1
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7047 = trunc i64 %7043 to i32
  %7048 = and i32 %7047, 254
  %7049 = call i32 @llvm.ctpop.i32(i32 %7048)
  %7050 = trunc i32 %7049 to i8
  %7051 = and i8 %7050, 1
  %7052 = xor i8 %7051, 1
  store i8 %7052, i8* %7046, align 1
  %7053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7053, align 1
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7055 = icmp eq i64 %7043, 0
  %7056 = zext i1 %7055 to i8
  store i8 %7056, i8* %7054, align 1
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7058 = lshr i64 %7043, 63
  %7059 = trunc i64 %7058 to i8
  store i8 %7059, i8* %7057, align 1
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7060, align 1
  store %struct.Memory* %loadMem_4aad29, %struct.Memory** %MEMORY
  %loadMem_4aad2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7062 = getelementptr inbounds %struct.GPR, %struct.GPR* %7061, i32 0, i32 33
  %7063 = getelementptr inbounds %struct.Reg, %struct.Reg* %7062, i32 0, i32 0
  %PC.i3268 = bitcast %union.anon* %7063 to i64*
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7065 = getelementptr inbounds %struct.GPR, %struct.GPR* %7064, i32 0, i32 5
  %7066 = getelementptr inbounds %struct.Reg, %struct.Reg* %7065, i32 0, i32 0
  %RCX.i3269 = bitcast %union.anon* %7066 to i64*
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7068 = getelementptr inbounds %struct.GPR, %struct.GPR* %7067, i32 0, i32 9
  %7069 = getelementptr inbounds %struct.Reg, %struct.Reg* %7068, i32 0, i32 0
  %RSI.i3270 = bitcast %union.anon* %7069 to i64*
  %7070 = load i64, i64* %RCX.i3269
  %7071 = load i64, i64* %PC.i3268
  %7072 = add i64 %7071, 3
  store i64 %7072, i64* %PC.i3268
  store i64 %7070, i64* %RSI.i3270, align 8
  store %struct.Memory* %loadMem_4aad2d, %struct.Memory** %MEMORY
  %loadMem_4aad30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7074 = getelementptr inbounds %struct.GPR, %struct.GPR* %7073, i32 0, i32 33
  %7075 = getelementptr inbounds %struct.Reg, %struct.Reg* %7074, i32 0, i32 0
  %PC.i3265 = bitcast %union.anon* %7075 to i64*
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7077 = getelementptr inbounds %struct.GPR, %struct.GPR* %7076, i32 0, i32 7
  %7078 = getelementptr inbounds %struct.Reg, %struct.Reg* %7077, i32 0, i32 0
  %RDX.i3266 = bitcast %union.anon* %7078 to i64*
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7080 = getelementptr inbounds %struct.GPR, %struct.GPR* %7079, i32 0, i32 9
  %7081 = getelementptr inbounds %struct.Reg, %struct.Reg* %7080, i32 0, i32 0
  %RSI.i3267 = bitcast %union.anon* %7081 to i64*
  %7082 = load i64, i64* %RSI.i3267
  %7083 = load i64, i64* %RDX.i3266
  %7084 = load i64, i64* %PC.i3265
  %7085 = add i64 %7084, 3
  store i64 %7085, i64* %PC.i3265
  %7086 = add i64 %7083, %7082
  store i64 %7086, i64* %RSI.i3267, align 8
  %7087 = icmp ult i64 %7086, %7082
  %7088 = icmp ult i64 %7086, %7083
  %7089 = or i1 %7087, %7088
  %7090 = zext i1 %7089 to i8
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7090, i8* %7091, align 1
  %7092 = trunc i64 %7086 to i32
  %7093 = and i32 %7092, 255
  %7094 = call i32 @llvm.ctpop.i32(i32 %7093)
  %7095 = trunc i32 %7094 to i8
  %7096 = and i8 %7095, 1
  %7097 = xor i8 %7096, 1
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7097, i8* %7098, align 1
  %7099 = xor i64 %7083, %7082
  %7100 = xor i64 %7099, %7086
  %7101 = lshr i64 %7100, 4
  %7102 = trunc i64 %7101 to i8
  %7103 = and i8 %7102, 1
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7103, i8* %7104, align 1
  %7105 = icmp eq i64 %7086, 0
  %7106 = zext i1 %7105 to i8
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7106, i8* %7107, align 1
  %7108 = lshr i64 %7086, 63
  %7109 = trunc i64 %7108 to i8
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7109, i8* %7110, align 1
  %7111 = lshr i64 %7082, 63
  %7112 = lshr i64 %7083, 63
  %7113 = xor i64 %7108, %7111
  %7114 = xor i64 %7108, %7112
  %7115 = add i64 %7113, %7114
  %7116 = icmp eq i64 %7115, 2
  %7117 = zext i1 %7116 to i8
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7117, i8* %7118, align 1
  store %struct.Memory* %loadMem_4aad30, %struct.Memory** %MEMORY
  %loadMem_4aad33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7120 = getelementptr inbounds %struct.GPR, %struct.GPR* %7119, i32 0, i32 33
  %7121 = getelementptr inbounds %struct.Reg, %struct.Reg* %7120, i32 0, i32 0
  %PC.i3262 = bitcast %union.anon* %7121 to i64*
  %7122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7123 = getelementptr inbounds %struct.GPR, %struct.GPR* %7122, i32 0, i32 9
  %7124 = getelementptr inbounds %struct.Reg, %struct.Reg* %7123, i32 0, i32 0
  %RSI.i3263 = bitcast %union.anon* %7124 to i64*
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7126 = getelementptr inbounds %struct.GPR, %struct.GPR* %7125, i32 0, i32 11
  %7127 = getelementptr inbounds %struct.Reg, %struct.Reg* %7126, i32 0, i32 0
  %RDI.i3264 = bitcast %union.anon* %7127 to i64*
  %7128 = load i64, i64* %RSI.i3263
  %7129 = add i64 %7128, 4
  %7130 = load i64, i64* %PC.i3262
  %7131 = add i64 %7130, 3
  store i64 %7131, i64* %PC.i3262
  %7132 = inttoptr i64 %7129 to i32*
  %7133 = load i32, i32* %7132
  %7134 = zext i32 %7133 to i64
  store i64 %7134, i64* %RDI.i3264, align 8
  store %struct.Memory* %loadMem_4aad33, %struct.Memory** %MEMORY
  %loadMem_4aad36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7136 = getelementptr inbounds %struct.GPR, %struct.GPR* %7135, i32 0, i32 33
  %7137 = getelementptr inbounds %struct.Reg, %struct.Reg* %7136, i32 0, i32 0
  %PC.i3259 = bitcast %union.anon* %7137 to i64*
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7139 = getelementptr inbounds %struct.GPR, %struct.GPR* %7138, i32 0, i32 7
  %7140 = getelementptr inbounds %struct.Reg, %struct.Reg* %7139, i32 0, i32 0
  %RDX.i3260 = bitcast %union.anon* %7140 to i64*
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7142 = getelementptr inbounds %struct.GPR, %struct.GPR* %7141, i32 0, i32 15
  %7143 = getelementptr inbounds %struct.Reg, %struct.Reg* %7142, i32 0, i32 0
  %RBP.i3261 = bitcast %union.anon* %7143 to i64*
  %7144 = load i64, i64* %RBP.i3261
  %7145 = sub i64 %7144, 24
  %7146 = load i64, i64* %PC.i3259
  %7147 = add i64 %7146, 4
  store i64 %7147, i64* %PC.i3259
  %7148 = inttoptr i64 %7145 to i32*
  %7149 = load i32, i32* %7148
  %7150 = sext i32 %7149 to i64
  store i64 %7150, i64* %RDX.i3260, align 8
  store %struct.Memory* %loadMem_4aad36, %struct.Memory** %MEMORY
  %loadMem_4aad3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7152 = getelementptr inbounds %struct.GPR, %struct.GPR* %7151, i32 0, i32 33
  %7153 = getelementptr inbounds %struct.Reg, %struct.Reg* %7152, i32 0, i32 0
  %PC.i3257 = bitcast %union.anon* %7153 to i64*
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7155 = getelementptr inbounds %struct.GPR, %struct.GPR* %7154, i32 0, i32 7
  %7156 = getelementptr inbounds %struct.Reg, %struct.Reg* %7155, i32 0, i32 0
  %RDX.i3258 = bitcast %union.anon* %7156 to i64*
  %7157 = load i64, i64* %RDX.i3258
  %7158 = load i64, i64* %PC.i3257
  %7159 = add i64 %7158, 4
  store i64 %7159, i64* %PC.i3257
  %7160 = shl i64 %7157, 4
  %7161 = icmp slt i64 %7160, 0
  %7162 = shl i64 %7160, 1
  store i64 %7162, i64* %RDX.i3258, align 8
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7164 = zext i1 %7161 to i8
  store i8 %7164, i8* %7163, align 1
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7166 = trunc i64 %7162 to i32
  %7167 = and i32 %7166, 254
  %7168 = call i32 @llvm.ctpop.i32(i32 %7167)
  %7169 = trunc i32 %7168 to i8
  %7170 = and i8 %7169, 1
  %7171 = xor i8 %7170, 1
  store i8 %7171, i8* %7165, align 1
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7172, align 1
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7174 = icmp eq i64 %7162, 0
  %7175 = zext i1 %7174 to i8
  store i8 %7175, i8* %7173, align 1
  %7176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7177 = lshr i64 %7162, 63
  %7178 = trunc i64 %7177 to i8
  store i8 %7178, i8* %7176, align 1
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7179, align 1
  store %struct.Memory* %loadMem_4aad3a, %struct.Memory** %MEMORY
  %loadMem_4aad3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 33
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %PC.i3254 = bitcast %union.anon* %7182 to i64*
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 5
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %RCX.i3255 = bitcast %union.anon* %7185 to i64*
  %7186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7187 = getelementptr inbounds %struct.GPR, %struct.GPR* %7186, i32 0, i32 9
  %7188 = getelementptr inbounds %struct.Reg, %struct.Reg* %7187, i32 0, i32 0
  %RSI.i3256 = bitcast %union.anon* %7188 to i64*
  %7189 = load i64, i64* %RCX.i3255
  %7190 = load i64, i64* %PC.i3254
  %7191 = add i64 %7190, 3
  store i64 %7191, i64* %PC.i3254
  store i64 %7189, i64* %RSI.i3256, align 8
  store %struct.Memory* %loadMem_4aad3e, %struct.Memory** %MEMORY
  %loadMem_4aad41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7193 = getelementptr inbounds %struct.GPR, %struct.GPR* %7192, i32 0, i32 33
  %7194 = getelementptr inbounds %struct.Reg, %struct.Reg* %7193, i32 0, i32 0
  %PC.i3251 = bitcast %union.anon* %7194 to i64*
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7196 = getelementptr inbounds %struct.GPR, %struct.GPR* %7195, i32 0, i32 7
  %7197 = getelementptr inbounds %struct.Reg, %struct.Reg* %7196, i32 0, i32 0
  %RDX.i3252 = bitcast %union.anon* %7197 to i64*
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 9
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %RSI.i3253 = bitcast %union.anon* %7200 to i64*
  %7201 = load i64, i64* %RSI.i3253
  %7202 = load i64, i64* %RDX.i3252
  %7203 = load i64, i64* %PC.i3251
  %7204 = add i64 %7203, 3
  store i64 %7204, i64* %PC.i3251
  %7205 = add i64 %7202, %7201
  store i64 %7205, i64* %RSI.i3253, align 8
  %7206 = icmp ult i64 %7205, %7201
  %7207 = icmp ult i64 %7205, %7202
  %7208 = or i1 %7206, %7207
  %7209 = zext i1 %7208 to i8
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7209, i8* %7210, align 1
  %7211 = trunc i64 %7205 to i32
  %7212 = and i32 %7211, 255
  %7213 = call i32 @llvm.ctpop.i32(i32 %7212)
  %7214 = trunc i32 %7213 to i8
  %7215 = and i8 %7214, 1
  %7216 = xor i8 %7215, 1
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7216, i8* %7217, align 1
  %7218 = xor i64 %7202, %7201
  %7219 = xor i64 %7218, %7205
  %7220 = lshr i64 %7219, 4
  %7221 = trunc i64 %7220 to i8
  %7222 = and i8 %7221, 1
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7222, i8* %7223, align 1
  %7224 = icmp eq i64 %7205, 0
  %7225 = zext i1 %7224 to i8
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7225, i8* %7226, align 1
  %7227 = lshr i64 %7205, 63
  %7228 = trunc i64 %7227 to i8
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7228, i8* %7229, align 1
  %7230 = lshr i64 %7201, 63
  %7231 = lshr i64 %7202, 63
  %7232 = xor i64 %7227, %7230
  %7233 = xor i64 %7227, %7231
  %7234 = add i64 %7232, %7233
  %7235 = icmp eq i64 %7234, 2
  %7236 = zext i1 %7235 to i8
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7236, i8* %7237, align 1
  store %struct.Memory* %loadMem_4aad41, %struct.Memory** %MEMORY
  %loadMem_4aad44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7239 = getelementptr inbounds %struct.GPR, %struct.GPR* %7238, i32 0, i32 33
  %7240 = getelementptr inbounds %struct.Reg, %struct.Reg* %7239, i32 0, i32 0
  %PC.i3248 = bitcast %union.anon* %7240 to i64*
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7242 = getelementptr inbounds %struct.GPR, %struct.GPR* %7241, i32 0, i32 9
  %7243 = getelementptr inbounds %struct.Reg, %struct.Reg* %7242, i32 0, i32 0
  %RSI.i3249 = bitcast %union.anon* %7243 to i64*
  %7244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7245 = getelementptr inbounds %struct.GPR, %struct.GPR* %7244, i32 0, i32 11
  %7246 = getelementptr inbounds %struct.Reg, %struct.Reg* %7245, i32 0, i32 0
  %RDI.i3250 = bitcast %union.anon* %7246 to i64*
  %7247 = load i64, i64* %RDI.i3250
  %7248 = load i64, i64* %RSI.i3249
  %7249 = add i64 %7248, 24
  %7250 = load i64, i64* %PC.i3248
  %7251 = add i64 %7250, 3
  store i64 %7251, i64* %PC.i3248
  %7252 = trunc i64 %7247 to i32
  %7253 = inttoptr i64 %7249 to i32*
  %7254 = load i32, i32* %7253
  %7255 = add i32 %7254, %7252
  %7256 = zext i32 %7255 to i64
  store i64 %7256, i64* %RDI.i3250, align 8
  %7257 = icmp ult i32 %7255, %7252
  %7258 = icmp ult i32 %7255, %7254
  %7259 = or i1 %7257, %7258
  %7260 = zext i1 %7259 to i8
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7260, i8* %7261, align 1
  %7262 = and i32 %7255, 255
  %7263 = call i32 @llvm.ctpop.i32(i32 %7262)
  %7264 = trunc i32 %7263 to i8
  %7265 = and i8 %7264, 1
  %7266 = xor i8 %7265, 1
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7266, i8* %7267, align 1
  %7268 = xor i32 %7254, %7252
  %7269 = xor i32 %7268, %7255
  %7270 = lshr i32 %7269, 4
  %7271 = trunc i32 %7270 to i8
  %7272 = and i8 %7271, 1
  %7273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7272, i8* %7273, align 1
  %7274 = icmp eq i32 %7255, 0
  %7275 = zext i1 %7274 to i8
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7275, i8* %7276, align 1
  %7277 = lshr i32 %7255, 31
  %7278 = trunc i32 %7277 to i8
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7278, i8* %7279, align 1
  %7280 = lshr i32 %7252, 31
  %7281 = lshr i32 %7254, 31
  %7282 = xor i32 %7277, %7280
  %7283 = xor i32 %7277, %7281
  %7284 = add i32 %7282, %7283
  %7285 = icmp eq i32 %7284, 2
  %7286 = zext i1 %7285 to i8
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7286, i8* %7287, align 1
  store %struct.Memory* %loadMem_4aad44, %struct.Memory** %MEMORY
  %loadMem_4aad47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7289 = getelementptr inbounds %struct.GPR, %struct.GPR* %7288, i32 0, i32 33
  %7290 = getelementptr inbounds %struct.Reg, %struct.Reg* %7289, i32 0, i32 0
  %PC.i3245 = bitcast %union.anon* %7290 to i64*
  %7291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7292 = getelementptr inbounds %struct.GPR, %struct.GPR* %7291, i32 0, i32 11
  %7293 = getelementptr inbounds %struct.Reg, %struct.Reg* %7292, i32 0, i32 0
  %EDI.i3246 = bitcast %union.anon* %7293 to i32*
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7295 = getelementptr inbounds %struct.GPR, %struct.GPR* %7294, i32 0, i32 15
  %7296 = getelementptr inbounds %struct.Reg, %struct.Reg* %7295, i32 0, i32 0
  %RBP.i3247 = bitcast %union.anon* %7296 to i64*
  %7297 = load i64, i64* %RBP.i3247
  %7298 = sub i64 %7297, 508
  %7299 = load i32, i32* %EDI.i3246
  %7300 = zext i32 %7299 to i64
  %7301 = load i64, i64* %PC.i3245
  %7302 = add i64 %7301, 6
  store i64 %7302, i64* %PC.i3245
  %7303 = inttoptr i64 %7298 to i32*
  store i32 %7299, i32* %7303
  store %struct.Memory* %loadMem_4aad47, %struct.Memory** %MEMORY
  %loadMem_4aad4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7305 = getelementptr inbounds %struct.GPR, %struct.GPR* %7304, i32 0, i32 33
  %7306 = getelementptr inbounds %struct.Reg, %struct.Reg* %7305, i32 0, i32 0
  %PC.i3242 = bitcast %union.anon* %7306 to i64*
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7308 = getelementptr inbounds %struct.GPR, %struct.GPR* %7307, i32 0, i32 7
  %7309 = getelementptr inbounds %struct.Reg, %struct.Reg* %7308, i32 0, i32 0
  %RDX.i3243 = bitcast %union.anon* %7309 to i64*
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7311 = getelementptr inbounds %struct.GPR, %struct.GPR* %7310, i32 0, i32 15
  %7312 = getelementptr inbounds %struct.Reg, %struct.Reg* %7311, i32 0, i32 0
  %RBP.i3244 = bitcast %union.anon* %7312 to i64*
  %7313 = load i64, i64* %RBP.i3244
  %7314 = sub i64 %7313, 24
  %7315 = load i64, i64* %PC.i3242
  %7316 = add i64 %7315, 4
  store i64 %7316, i64* %PC.i3242
  %7317 = inttoptr i64 %7314 to i32*
  %7318 = load i32, i32* %7317
  %7319 = sext i32 %7318 to i64
  store i64 %7319, i64* %RDX.i3243, align 8
  store %struct.Memory* %loadMem_4aad4d, %struct.Memory** %MEMORY
  %loadMem_4aad51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7321 = getelementptr inbounds %struct.GPR, %struct.GPR* %7320, i32 0, i32 33
  %7322 = getelementptr inbounds %struct.Reg, %struct.Reg* %7321, i32 0, i32 0
  %PC.i3240 = bitcast %union.anon* %7322 to i64*
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 7
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %RDX.i3241 = bitcast %union.anon* %7325 to i64*
  %7326 = load i64, i64* %RDX.i3241
  %7327 = load i64, i64* %PC.i3240
  %7328 = add i64 %7327, 4
  store i64 %7328, i64* %PC.i3240
  %7329 = shl i64 %7326, 4
  %7330 = icmp slt i64 %7329, 0
  %7331 = shl i64 %7329, 1
  store i64 %7331, i64* %RDX.i3241, align 8
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7333 = zext i1 %7330 to i8
  store i8 %7333, i8* %7332, align 1
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7335 = trunc i64 %7331 to i32
  %7336 = and i32 %7335, 254
  %7337 = call i32 @llvm.ctpop.i32(i32 %7336)
  %7338 = trunc i32 %7337 to i8
  %7339 = and i8 %7338, 1
  %7340 = xor i8 %7339, 1
  store i8 %7340, i8* %7334, align 1
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7341, align 1
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7343 = icmp eq i64 %7331, 0
  %7344 = zext i1 %7343 to i8
  store i8 %7344, i8* %7342, align 1
  %7345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7346 = lshr i64 %7331, 63
  %7347 = trunc i64 %7346 to i8
  store i8 %7347, i8* %7345, align 1
  %7348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7348, align 1
  store %struct.Memory* %loadMem_4aad51, %struct.Memory** %MEMORY
  %loadMem_4aad55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7350 = getelementptr inbounds %struct.GPR, %struct.GPR* %7349, i32 0, i32 33
  %7351 = getelementptr inbounds %struct.Reg, %struct.Reg* %7350, i32 0, i32 0
  %PC.i3237 = bitcast %union.anon* %7351 to i64*
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7353 = getelementptr inbounds %struct.GPR, %struct.GPR* %7352, i32 0, i32 5
  %7354 = getelementptr inbounds %struct.Reg, %struct.Reg* %7353, i32 0, i32 0
  %RCX.i3238 = bitcast %union.anon* %7354 to i64*
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 9
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %RSI.i3239 = bitcast %union.anon* %7357 to i64*
  %7358 = load i64, i64* %RCX.i3238
  %7359 = load i64, i64* %PC.i3237
  %7360 = add i64 %7359, 3
  store i64 %7360, i64* %PC.i3237
  store i64 %7358, i64* %RSI.i3239, align 8
  store %struct.Memory* %loadMem_4aad55, %struct.Memory** %MEMORY
  %loadMem_4aad58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7362 = getelementptr inbounds %struct.GPR, %struct.GPR* %7361, i32 0, i32 33
  %7363 = getelementptr inbounds %struct.Reg, %struct.Reg* %7362, i32 0, i32 0
  %PC.i3234 = bitcast %union.anon* %7363 to i64*
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7365 = getelementptr inbounds %struct.GPR, %struct.GPR* %7364, i32 0, i32 7
  %7366 = getelementptr inbounds %struct.Reg, %struct.Reg* %7365, i32 0, i32 0
  %RDX.i3235 = bitcast %union.anon* %7366 to i64*
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7368 = getelementptr inbounds %struct.GPR, %struct.GPR* %7367, i32 0, i32 9
  %7369 = getelementptr inbounds %struct.Reg, %struct.Reg* %7368, i32 0, i32 0
  %RSI.i3236 = bitcast %union.anon* %7369 to i64*
  %7370 = load i64, i64* %RSI.i3236
  %7371 = load i64, i64* %RDX.i3235
  %7372 = load i64, i64* %PC.i3234
  %7373 = add i64 %7372, 3
  store i64 %7373, i64* %PC.i3234
  %7374 = add i64 %7371, %7370
  store i64 %7374, i64* %RSI.i3236, align 8
  %7375 = icmp ult i64 %7374, %7370
  %7376 = icmp ult i64 %7374, %7371
  %7377 = or i1 %7375, %7376
  %7378 = zext i1 %7377 to i8
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7378, i8* %7379, align 1
  %7380 = trunc i64 %7374 to i32
  %7381 = and i32 %7380, 255
  %7382 = call i32 @llvm.ctpop.i32(i32 %7381)
  %7383 = trunc i32 %7382 to i8
  %7384 = and i8 %7383, 1
  %7385 = xor i8 %7384, 1
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7385, i8* %7386, align 1
  %7387 = xor i64 %7371, %7370
  %7388 = xor i64 %7387, %7374
  %7389 = lshr i64 %7388, 4
  %7390 = trunc i64 %7389 to i8
  %7391 = and i8 %7390, 1
  %7392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7391, i8* %7392, align 1
  %7393 = icmp eq i64 %7374, 0
  %7394 = zext i1 %7393 to i8
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7394, i8* %7395, align 1
  %7396 = lshr i64 %7374, 63
  %7397 = trunc i64 %7396 to i8
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7397, i8* %7398, align 1
  %7399 = lshr i64 %7370, 63
  %7400 = lshr i64 %7371, 63
  %7401 = xor i64 %7396, %7399
  %7402 = xor i64 %7396, %7400
  %7403 = add i64 %7401, %7402
  %7404 = icmp eq i64 %7403, 2
  %7405 = zext i1 %7404 to i8
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7405, i8* %7406, align 1
  store %struct.Memory* %loadMem_4aad58, %struct.Memory** %MEMORY
  %loadMem_4aad5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7408 = getelementptr inbounds %struct.GPR, %struct.GPR* %7407, i32 0, i32 33
  %7409 = getelementptr inbounds %struct.Reg, %struct.Reg* %7408, i32 0, i32 0
  %PC.i3231 = bitcast %union.anon* %7409 to i64*
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7411 = getelementptr inbounds %struct.GPR, %struct.GPR* %7410, i32 0, i32 9
  %7412 = getelementptr inbounds %struct.Reg, %struct.Reg* %7411, i32 0, i32 0
  %RSI.i3232 = bitcast %union.anon* %7412 to i64*
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7414 = getelementptr inbounds %struct.GPR, %struct.GPR* %7413, i32 0, i32 11
  %7415 = getelementptr inbounds %struct.Reg, %struct.Reg* %7414, i32 0, i32 0
  %RDI.i3233 = bitcast %union.anon* %7415 to i64*
  %7416 = load i64, i64* %RSI.i3232
  %7417 = add i64 %7416, 8
  %7418 = load i64, i64* %PC.i3231
  %7419 = add i64 %7418, 3
  store i64 %7419, i64* %PC.i3231
  %7420 = inttoptr i64 %7417 to i32*
  %7421 = load i32, i32* %7420
  %7422 = zext i32 %7421 to i64
  store i64 %7422, i64* %RDI.i3233, align 8
  store %struct.Memory* %loadMem_4aad5b, %struct.Memory** %MEMORY
  %loadMem_4aad5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7424 = getelementptr inbounds %struct.GPR, %struct.GPR* %7423, i32 0, i32 33
  %7425 = getelementptr inbounds %struct.Reg, %struct.Reg* %7424, i32 0, i32 0
  %PC.i3228 = bitcast %union.anon* %7425 to i64*
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7427 = getelementptr inbounds %struct.GPR, %struct.GPR* %7426, i32 0, i32 7
  %7428 = getelementptr inbounds %struct.Reg, %struct.Reg* %7427, i32 0, i32 0
  %RDX.i3229 = bitcast %union.anon* %7428 to i64*
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 15
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %RBP.i3230 = bitcast %union.anon* %7431 to i64*
  %7432 = load i64, i64* %RBP.i3230
  %7433 = sub i64 %7432, 24
  %7434 = load i64, i64* %PC.i3228
  %7435 = add i64 %7434, 4
  store i64 %7435, i64* %PC.i3228
  %7436 = inttoptr i64 %7433 to i32*
  %7437 = load i32, i32* %7436
  %7438 = sext i32 %7437 to i64
  store i64 %7438, i64* %RDX.i3229, align 8
  store %struct.Memory* %loadMem_4aad5e, %struct.Memory** %MEMORY
  %loadMem_4aad62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 33
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %PC.i3226 = bitcast %union.anon* %7441 to i64*
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7443 = getelementptr inbounds %struct.GPR, %struct.GPR* %7442, i32 0, i32 7
  %7444 = getelementptr inbounds %struct.Reg, %struct.Reg* %7443, i32 0, i32 0
  %RDX.i3227 = bitcast %union.anon* %7444 to i64*
  %7445 = load i64, i64* %RDX.i3227
  %7446 = load i64, i64* %PC.i3226
  %7447 = add i64 %7446, 4
  store i64 %7447, i64* %PC.i3226
  %7448 = shl i64 %7445, 4
  %7449 = icmp slt i64 %7448, 0
  %7450 = shl i64 %7448, 1
  store i64 %7450, i64* %RDX.i3227, align 8
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7452 = zext i1 %7449 to i8
  store i8 %7452, i8* %7451, align 1
  %7453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7454 = trunc i64 %7450 to i32
  %7455 = and i32 %7454, 254
  %7456 = call i32 @llvm.ctpop.i32(i32 %7455)
  %7457 = trunc i32 %7456 to i8
  %7458 = and i8 %7457, 1
  %7459 = xor i8 %7458, 1
  store i8 %7459, i8* %7453, align 1
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7460, align 1
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7462 = icmp eq i64 %7450, 0
  %7463 = zext i1 %7462 to i8
  store i8 %7463, i8* %7461, align 1
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7465 = lshr i64 %7450, 63
  %7466 = trunc i64 %7465 to i8
  store i8 %7466, i8* %7464, align 1
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7467, align 1
  store %struct.Memory* %loadMem_4aad62, %struct.Memory** %MEMORY
  %loadMem_4aad66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7469 = getelementptr inbounds %struct.GPR, %struct.GPR* %7468, i32 0, i32 33
  %7470 = getelementptr inbounds %struct.Reg, %struct.Reg* %7469, i32 0, i32 0
  %PC.i3223 = bitcast %union.anon* %7470 to i64*
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7472 = getelementptr inbounds %struct.GPR, %struct.GPR* %7471, i32 0, i32 5
  %7473 = getelementptr inbounds %struct.Reg, %struct.Reg* %7472, i32 0, i32 0
  %RCX.i3224 = bitcast %union.anon* %7473 to i64*
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 9
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %RSI.i3225 = bitcast %union.anon* %7476 to i64*
  %7477 = load i64, i64* %RCX.i3224
  %7478 = load i64, i64* %PC.i3223
  %7479 = add i64 %7478, 3
  store i64 %7479, i64* %PC.i3223
  store i64 %7477, i64* %RSI.i3225, align 8
  store %struct.Memory* %loadMem_4aad66, %struct.Memory** %MEMORY
  %loadMem_4aad69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7481 = getelementptr inbounds %struct.GPR, %struct.GPR* %7480, i32 0, i32 33
  %7482 = getelementptr inbounds %struct.Reg, %struct.Reg* %7481, i32 0, i32 0
  %PC.i3220 = bitcast %union.anon* %7482 to i64*
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7484 = getelementptr inbounds %struct.GPR, %struct.GPR* %7483, i32 0, i32 7
  %7485 = getelementptr inbounds %struct.Reg, %struct.Reg* %7484, i32 0, i32 0
  %RDX.i3221 = bitcast %union.anon* %7485 to i64*
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7487 = getelementptr inbounds %struct.GPR, %struct.GPR* %7486, i32 0, i32 9
  %7488 = getelementptr inbounds %struct.Reg, %struct.Reg* %7487, i32 0, i32 0
  %RSI.i3222 = bitcast %union.anon* %7488 to i64*
  %7489 = load i64, i64* %RSI.i3222
  %7490 = load i64, i64* %RDX.i3221
  %7491 = load i64, i64* %PC.i3220
  %7492 = add i64 %7491, 3
  store i64 %7492, i64* %PC.i3220
  %7493 = add i64 %7490, %7489
  store i64 %7493, i64* %RSI.i3222, align 8
  %7494 = icmp ult i64 %7493, %7489
  %7495 = icmp ult i64 %7493, %7490
  %7496 = or i1 %7494, %7495
  %7497 = zext i1 %7496 to i8
  %7498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7497, i8* %7498, align 1
  %7499 = trunc i64 %7493 to i32
  %7500 = and i32 %7499, 255
  %7501 = call i32 @llvm.ctpop.i32(i32 %7500)
  %7502 = trunc i32 %7501 to i8
  %7503 = and i8 %7502, 1
  %7504 = xor i8 %7503, 1
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7504, i8* %7505, align 1
  %7506 = xor i64 %7490, %7489
  %7507 = xor i64 %7506, %7493
  %7508 = lshr i64 %7507, 4
  %7509 = trunc i64 %7508 to i8
  %7510 = and i8 %7509, 1
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7510, i8* %7511, align 1
  %7512 = icmp eq i64 %7493, 0
  %7513 = zext i1 %7512 to i8
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7513, i8* %7514, align 1
  %7515 = lshr i64 %7493, 63
  %7516 = trunc i64 %7515 to i8
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7516, i8* %7517, align 1
  %7518 = lshr i64 %7489, 63
  %7519 = lshr i64 %7490, 63
  %7520 = xor i64 %7515, %7518
  %7521 = xor i64 %7515, %7519
  %7522 = add i64 %7520, %7521
  %7523 = icmp eq i64 %7522, 2
  %7524 = zext i1 %7523 to i8
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7524, i8* %7525, align 1
  store %struct.Memory* %loadMem_4aad69, %struct.Memory** %MEMORY
  %loadMem_4aad6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7527 = getelementptr inbounds %struct.GPR, %struct.GPR* %7526, i32 0, i32 33
  %7528 = getelementptr inbounds %struct.Reg, %struct.Reg* %7527, i32 0, i32 0
  %PC.i3217 = bitcast %union.anon* %7528 to i64*
  %7529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7530 = getelementptr inbounds %struct.GPR, %struct.GPR* %7529, i32 0, i32 9
  %7531 = getelementptr inbounds %struct.Reg, %struct.Reg* %7530, i32 0, i32 0
  %RSI.i3218 = bitcast %union.anon* %7531 to i64*
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7533 = getelementptr inbounds %struct.GPR, %struct.GPR* %7532, i32 0, i32 11
  %7534 = getelementptr inbounds %struct.Reg, %struct.Reg* %7533, i32 0, i32 0
  %RDI.i3219 = bitcast %union.anon* %7534 to i64*
  %7535 = load i64, i64* %RDI.i3219
  %7536 = load i64, i64* %RSI.i3218
  %7537 = add i64 %7536, 20
  %7538 = load i64, i64* %PC.i3217
  %7539 = add i64 %7538, 3
  store i64 %7539, i64* %PC.i3217
  %7540 = trunc i64 %7535 to i32
  %7541 = inttoptr i64 %7537 to i32*
  %7542 = load i32, i32* %7541
  %7543 = add i32 %7542, %7540
  %7544 = zext i32 %7543 to i64
  store i64 %7544, i64* %RDI.i3219, align 8
  %7545 = icmp ult i32 %7543, %7540
  %7546 = icmp ult i32 %7543, %7542
  %7547 = or i1 %7545, %7546
  %7548 = zext i1 %7547 to i8
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7548, i8* %7549, align 1
  %7550 = and i32 %7543, 255
  %7551 = call i32 @llvm.ctpop.i32(i32 %7550)
  %7552 = trunc i32 %7551 to i8
  %7553 = and i8 %7552, 1
  %7554 = xor i8 %7553, 1
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7554, i8* %7555, align 1
  %7556 = xor i32 %7542, %7540
  %7557 = xor i32 %7556, %7543
  %7558 = lshr i32 %7557, 4
  %7559 = trunc i32 %7558 to i8
  %7560 = and i8 %7559, 1
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7560, i8* %7561, align 1
  %7562 = icmp eq i32 %7543, 0
  %7563 = zext i1 %7562 to i8
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7563, i8* %7564, align 1
  %7565 = lshr i32 %7543, 31
  %7566 = trunc i32 %7565 to i8
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7566, i8* %7567, align 1
  %7568 = lshr i32 %7540, 31
  %7569 = lshr i32 %7542, 31
  %7570 = xor i32 %7565, %7568
  %7571 = xor i32 %7565, %7569
  %7572 = add i32 %7570, %7571
  %7573 = icmp eq i32 %7572, 2
  %7574 = zext i1 %7573 to i8
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7574, i8* %7575, align 1
  store %struct.Memory* %loadMem_4aad6c, %struct.Memory** %MEMORY
  %loadMem_4aad6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7577 = getelementptr inbounds %struct.GPR, %struct.GPR* %7576, i32 0, i32 33
  %7578 = getelementptr inbounds %struct.Reg, %struct.Reg* %7577, i32 0, i32 0
  %PC.i3214 = bitcast %union.anon* %7578 to i64*
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7580 = getelementptr inbounds %struct.GPR, %struct.GPR* %7579, i32 0, i32 11
  %7581 = getelementptr inbounds %struct.Reg, %struct.Reg* %7580, i32 0, i32 0
  %EDI.i3215 = bitcast %union.anon* %7581 to i32*
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 15
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %RBP.i3216 = bitcast %union.anon* %7584 to i64*
  %7585 = load i64, i64* %RBP.i3216
  %7586 = sub i64 %7585, 504
  %7587 = load i32, i32* %EDI.i3215
  %7588 = zext i32 %7587 to i64
  %7589 = load i64, i64* %PC.i3214
  %7590 = add i64 %7589, 6
  store i64 %7590, i64* %PC.i3214
  %7591 = inttoptr i64 %7586 to i32*
  store i32 %7587, i32* %7591
  store %struct.Memory* %loadMem_4aad6f, %struct.Memory** %MEMORY
  %loadMem_4aad75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7593 = getelementptr inbounds %struct.GPR, %struct.GPR* %7592, i32 0, i32 33
  %7594 = getelementptr inbounds %struct.Reg, %struct.Reg* %7593, i32 0, i32 0
  %PC.i3211 = bitcast %union.anon* %7594 to i64*
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7596 = getelementptr inbounds %struct.GPR, %struct.GPR* %7595, i32 0, i32 7
  %7597 = getelementptr inbounds %struct.Reg, %struct.Reg* %7596, i32 0, i32 0
  %RDX.i3212 = bitcast %union.anon* %7597 to i64*
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 15
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %RBP.i3213 = bitcast %union.anon* %7600 to i64*
  %7601 = load i64, i64* %RBP.i3213
  %7602 = sub i64 %7601, 24
  %7603 = load i64, i64* %PC.i3211
  %7604 = add i64 %7603, 4
  store i64 %7604, i64* %PC.i3211
  %7605 = inttoptr i64 %7602 to i32*
  %7606 = load i32, i32* %7605
  %7607 = sext i32 %7606 to i64
  store i64 %7607, i64* %RDX.i3212, align 8
  store %struct.Memory* %loadMem_4aad75, %struct.Memory** %MEMORY
  %loadMem_4aad79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7609 = getelementptr inbounds %struct.GPR, %struct.GPR* %7608, i32 0, i32 33
  %7610 = getelementptr inbounds %struct.Reg, %struct.Reg* %7609, i32 0, i32 0
  %PC.i3209 = bitcast %union.anon* %7610 to i64*
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7612 = getelementptr inbounds %struct.GPR, %struct.GPR* %7611, i32 0, i32 7
  %7613 = getelementptr inbounds %struct.Reg, %struct.Reg* %7612, i32 0, i32 0
  %RDX.i3210 = bitcast %union.anon* %7613 to i64*
  %7614 = load i64, i64* %RDX.i3210
  %7615 = load i64, i64* %PC.i3209
  %7616 = add i64 %7615, 4
  store i64 %7616, i64* %PC.i3209
  %7617 = shl i64 %7614, 4
  %7618 = icmp slt i64 %7617, 0
  %7619 = shl i64 %7617, 1
  store i64 %7619, i64* %RDX.i3210, align 8
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7621 = zext i1 %7618 to i8
  store i8 %7621, i8* %7620, align 1
  %7622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7623 = trunc i64 %7619 to i32
  %7624 = and i32 %7623, 254
  %7625 = call i32 @llvm.ctpop.i32(i32 %7624)
  %7626 = trunc i32 %7625 to i8
  %7627 = and i8 %7626, 1
  %7628 = xor i8 %7627, 1
  store i8 %7628, i8* %7622, align 1
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7629, align 1
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7631 = icmp eq i64 %7619, 0
  %7632 = zext i1 %7631 to i8
  store i8 %7632, i8* %7630, align 1
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7634 = lshr i64 %7619, 63
  %7635 = trunc i64 %7634 to i8
  store i8 %7635, i8* %7633, align 1
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7636, align 1
  store %struct.Memory* %loadMem_4aad79, %struct.Memory** %MEMORY
  %loadMem_4aad7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7638 = getelementptr inbounds %struct.GPR, %struct.GPR* %7637, i32 0, i32 33
  %7639 = getelementptr inbounds %struct.Reg, %struct.Reg* %7638, i32 0, i32 0
  %PC.i3206 = bitcast %union.anon* %7639 to i64*
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7641 = getelementptr inbounds %struct.GPR, %struct.GPR* %7640, i32 0, i32 5
  %7642 = getelementptr inbounds %struct.Reg, %struct.Reg* %7641, i32 0, i32 0
  %RCX.i3207 = bitcast %union.anon* %7642 to i64*
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7644 = getelementptr inbounds %struct.GPR, %struct.GPR* %7643, i32 0, i32 9
  %7645 = getelementptr inbounds %struct.Reg, %struct.Reg* %7644, i32 0, i32 0
  %RSI.i3208 = bitcast %union.anon* %7645 to i64*
  %7646 = load i64, i64* %RCX.i3207
  %7647 = load i64, i64* %PC.i3206
  %7648 = add i64 %7647, 3
  store i64 %7648, i64* %PC.i3206
  store i64 %7646, i64* %RSI.i3208, align 8
  store %struct.Memory* %loadMem_4aad7d, %struct.Memory** %MEMORY
  %loadMem_4aad80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 33
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %PC.i3203 = bitcast %union.anon* %7651 to i64*
  %7652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7653 = getelementptr inbounds %struct.GPR, %struct.GPR* %7652, i32 0, i32 7
  %7654 = getelementptr inbounds %struct.Reg, %struct.Reg* %7653, i32 0, i32 0
  %RDX.i3204 = bitcast %union.anon* %7654 to i64*
  %7655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7656 = getelementptr inbounds %struct.GPR, %struct.GPR* %7655, i32 0, i32 9
  %7657 = getelementptr inbounds %struct.Reg, %struct.Reg* %7656, i32 0, i32 0
  %RSI.i3205 = bitcast %union.anon* %7657 to i64*
  %7658 = load i64, i64* %RSI.i3205
  %7659 = load i64, i64* %RDX.i3204
  %7660 = load i64, i64* %PC.i3203
  %7661 = add i64 %7660, 3
  store i64 %7661, i64* %PC.i3203
  %7662 = add i64 %7659, %7658
  store i64 %7662, i64* %RSI.i3205, align 8
  %7663 = icmp ult i64 %7662, %7658
  %7664 = icmp ult i64 %7662, %7659
  %7665 = or i1 %7663, %7664
  %7666 = zext i1 %7665 to i8
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7666, i8* %7667, align 1
  %7668 = trunc i64 %7662 to i32
  %7669 = and i32 %7668, 255
  %7670 = call i32 @llvm.ctpop.i32(i32 %7669)
  %7671 = trunc i32 %7670 to i8
  %7672 = and i8 %7671, 1
  %7673 = xor i8 %7672, 1
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7673, i8* %7674, align 1
  %7675 = xor i64 %7659, %7658
  %7676 = xor i64 %7675, %7662
  %7677 = lshr i64 %7676, 4
  %7678 = trunc i64 %7677 to i8
  %7679 = and i8 %7678, 1
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7679, i8* %7680, align 1
  %7681 = icmp eq i64 %7662, 0
  %7682 = zext i1 %7681 to i8
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7682, i8* %7683, align 1
  %7684 = lshr i64 %7662, 63
  %7685 = trunc i64 %7684 to i8
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7685, i8* %7686, align 1
  %7687 = lshr i64 %7658, 63
  %7688 = lshr i64 %7659, 63
  %7689 = xor i64 %7684, %7687
  %7690 = xor i64 %7684, %7688
  %7691 = add i64 %7689, %7690
  %7692 = icmp eq i64 %7691, 2
  %7693 = zext i1 %7692 to i8
  %7694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7693, i8* %7694, align 1
  store %struct.Memory* %loadMem_4aad80, %struct.Memory** %MEMORY
  %loadMem_4aad83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7696 = getelementptr inbounds %struct.GPR, %struct.GPR* %7695, i32 0, i32 33
  %7697 = getelementptr inbounds %struct.Reg, %struct.Reg* %7696, i32 0, i32 0
  %PC.i3200 = bitcast %union.anon* %7697 to i64*
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 9
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %RSI.i3201 = bitcast %union.anon* %7700 to i64*
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 11
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %RDI.i3202 = bitcast %union.anon* %7703 to i64*
  %7704 = load i64, i64* %RSI.i3201
  %7705 = add i64 %7704, 12
  %7706 = load i64, i64* %PC.i3200
  %7707 = add i64 %7706, 3
  store i64 %7707, i64* %PC.i3200
  %7708 = inttoptr i64 %7705 to i32*
  %7709 = load i32, i32* %7708
  %7710 = zext i32 %7709 to i64
  store i64 %7710, i64* %RDI.i3202, align 8
  store %struct.Memory* %loadMem_4aad83, %struct.Memory** %MEMORY
  %loadMem_4aad86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7712 = getelementptr inbounds %struct.GPR, %struct.GPR* %7711, i32 0, i32 33
  %7713 = getelementptr inbounds %struct.Reg, %struct.Reg* %7712, i32 0, i32 0
  %PC.i3197 = bitcast %union.anon* %7713 to i64*
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 7
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %RDX.i3198 = bitcast %union.anon* %7716 to i64*
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 15
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %RBP.i3199 = bitcast %union.anon* %7719 to i64*
  %7720 = load i64, i64* %RBP.i3199
  %7721 = sub i64 %7720, 24
  %7722 = load i64, i64* %PC.i3197
  %7723 = add i64 %7722, 4
  store i64 %7723, i64* %PC.i3197
  %7724 = inttoptr i64 %7721 to i32*
  %7725 = load i32, i32* %7724
  %7726 = sext i32 %7725 to i64
  store i64 %7726, i64* %RDX.i3198, align 8
  store %struct.Memory* %loadMem_4aad86, %struct.Memory** %MEMORY
  %loadMem_4aad8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7728 = getelementptr inbounds %struct.GPR, %struct.GPR* %7727, i32 0, i32 33
  %7729 = getelementptr inbounds %struct.Reg, %struct.Reg* %7728, i32 0, i32 0
  %PC.i3195 = bitcast %union.anon* %7729 to i64*
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 7
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %RDX.i3196 = bitcast %union.anon* %7732 to i64*
  %7733 = load i64, i64* %RDX.i3196
  %7734 = load i64, i64* %PC.i3195
  %7735 = add i64 %7734, 4
  store i64 %7735, i64* %PC.i3195
  %7736 = shl i64 %7733, 4
  %7737 = icmp slt i64 %7736, 0
  %7738 = shl i64 %7736, 1
  store i64 %7738, i64* %RDX.i3196, align 8
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7740 = zext i1 %7737 to i8
  store i8 %7740, i8* %7739, align 1
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7742 = trunc i64 %7738 to i32
  %7743 = and i32 %7742, 254
  %7744 = call i32 @llvm.ctpop.i32(i32 %7743)
  %7745 = trunc i32 %7744 to i8
  %7746 = and i8 %7745, 1
  %7747 = xor i8 %7746, 1
  store i8 %7747, i8* %7741, align 1
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7748, align 1
  %7749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7750 = icmp eq i64 %7738, 0
  %7751 = zext i1 %7750 to i8
  store i8 %7751, i8* %7749, align 1
  %7752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7753 = lshr i64 %7738, 63
  %7754 = trunc i64 %7753 to i8
  store i8 %7754, i8* %7752, align 1
  %7755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7755, align 1
  store %struct.Memory* %loadMem_4aad8a, %struct.Memory** %MEMORY
  %loadMem_4aad8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7757 = getelementptr inbounds %struct.GPR, %struct.GPR* %7756, i32 0, i32 33
  %7758 = getelementptr inbounds %struct.Reg, %struct.Reg* %7757, i32 0, i32 0
  %PC.i3192 = bitcast %union.anon* %7758 to i64*
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7760 = getelementptr inbounds %struct.GPR, %struct.GPR* %7759, i32 0, i32 5
  %7761 = getelementptr inbounds %struct.Reg, %struct.Reg* %7760, i32 0, i32 0
  %RCX.i3193 = bitcast %union.anon* %7761 to i64*
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7763 = getelementptr inbounds %struct.GPR, %struct.GPR* %7762, i32 0, i32 9
  %7764 = getelementptr inbounds %struct.Reg, %struct.Reg* %7763, i32 0, i32 0
  %RSI.i3194 = bitcast %union.anon* %7764 to i64*
  %7765 = load i64, i64* %RCX.i3193
  %7766 = load i64, i64* %PC.i3192
  %7767 = add i64 %7766, 3
  store i64 %7767, i64* %PC.i3192
  store i64 %7765, i64* %RSI.i3194, align 8
  store %struct.Memory* %loadMem_4aad8e, %struct.Memory** %MEMORY
  %loadMem_4aad91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7769 = getelementptr inbounds %struct.GPR, %struct.GPR* %7768, i32 0, i32 33
  %7770 = getelementptr inbounds %struct.Reg, %struct.Reg* %7769, i32 0, i32 0
  %PC.i3189 = bitcast %union.anon* %7770 to i64*
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7772 = getelementptr inbounds %struct.GPR, %struct.GPR* %7771, i32 0, i32 7
  %7773 = getelementptr inbounds %struct.Reg, %struct.Reg* %7772, i32 0, i32 0
  %RDX.i3190 = bitcast %union.anon* %7773 to i64*
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7775 = getelementptr inbounds %struct.GPR, %struct.GPR* %7774, i32 0, i32 9
  %7776 = getelementptr inbounds %struct.Reg, %struct.Reg* %7775, i32 0, i32 0
  %RSI.i3191 = bitcast %union.anon* %7776 to i64*
  %7777 = load i64, i64* %RSI.i3191
  %7778 = load i64, i64* %RDX.i3190
  %7779 = load i64, i64* %PC.i3189
  %7780 = add i64 %7779, 3
  store i64 %7780, i64* %PC.i3189
  %7781 = add i64 %7778, %7777
  store i64 %7781, i64* %RSI.i3191, align 8
  %7782 = icmp ult i64 %7781, %7777
  %7783 = icmp ult i64 %7781, %7778
  %7784 = or i1 %7782, %7783
  %7785 = zext i1 %7784 to i8
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7785, i8* %7786, align 1
  %7787 = trunc i64 %7781 to i32
  %7788 = and i32 %7787, 255
  %7789 = call i32 @llvm.ctpop.i32(i32 %7788)
  %7790 = trunc i32 %7789 to i8
  %7791 = and i8 %7790, 1
  %7792 = xor i8 %7791, 1
  %7793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7792, i8* %7793, align 1
  %7794 = xor i64 %7778, %7777
  %7795 = xor i64 %7794, %7781
  %7796 = lshr i64 %7795, 4
  %7797 = trunc i64 %7796 to i8
  %7798 = and i8 %7797, 1
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7798, i8* %7799, align 1
  %7800 = icmp eq i64 %7781, 0
  %7801 = zext i1 %7800 to i8
  %7802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7801, i8* %7802, align 1
  %7803 = lshr i64 %7781, 63
  %7804 = trunc i64 %7803 to i8
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7804, i8* %7805, align 1
  %7806 = lshr i64 %7777, 63
  %7807 = lshr i64 %7778, 63
  %7808 = xor i64 %7803, %7806
  %7809 = xor i64 %7803, %7807
  %7810 = add i64 %7808, %7809
  %7811 = icmp eq i64 %7810, 2
  %7812 = zext i1 %7811 to i8
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7812, i8* %7813, align 1
  store %struct.Memory* %loadMem_4aad91, %struct.Memory** %MEMORY
  %loadMem_4aad94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 33
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %PC.i3186 = bitcast %union.anon* %7816 to i64*
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7818 = getelementptr inbounds %struct.GPR, %struct.GPR* %7817, i32 0, i32 9
  %7819 = getelementptr inbounds %struct.Reg, %struct.Reg* %7818, i32 0, i32 0
  %RSI.i3187 = bitcast %union.anon* %7819 to i64*
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7821 = getelementptr inbounds %struct.GPR, %struct.GPR* %7820, i32 0, i32 11
  %7822 = getelementptr inbounds %struct.Reg, %struct.Reg* %7821, i32 0, i32 0
  %RDI.i3188 = bitcast %union.anon* %7822 to i64*
  %7823 = load i64, i64* %RDI.i3188
  %7824 = load i64, i64* %RSI.i3187
  %7825 = add i64 %7824, 16
  %7826 = load i64, i64* %PC.i3186
  %7827 = add i64 %7826, 3
  store i64 %7827, i64* %PC.i3186
  %7828 = trunc i64 %7823 to i32
  %7829 = inttoptr i64 %7825 to i32*
  %7830 = load i32, i32* %7829
  %7831 = add i32 %7830, %7828
  %7832 = zext i32 %7831 to i64
  store i64 %7832, i64* %RDI.i3188, align 8
  %7833 = icmp ult i32 %7831, %7828
  %7834 = icmp ult i32 %7831, %7830
  %7835 = or i1 %7833, %7834
  %7836 = zext i1 %7835 to i8
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7836, i8* %7837, align 1
  %7838 = and i32 %7831, 255
  %7839 = call i32 @llvm.ctpop.i32(i32 %7838)
  %7840 = trunc i32 %7839 to i8
  %7841 = and i8 %7840, 1
  %7842 = xor i8 %7841, 1
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7842, i8* %7843, align 1
  %7844 = xor i32 %7830, %7828
  %7845 = xor i32 %7844, %7831
  %7846 = lshr i32 %7845, 4
  %7847 = trunc i32 %7846 to i8
  %7848 = and i8 %7847, 1
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7848, i8* %7849, align 1
  %7850 = icmp eq i32 %7831, 0
  %7851 = zext i1 %7850 to i8
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7851, i8* %7852, align 1
  %7853 = lshr i32 %7831, 31
  %7854 = trunc i32 %7853 to i8
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7854, i8* %7855, align 1
  %7856 = lshr i32 %7828, 31
  %7857 = lshr i32 %7830, 31
  %7858 = xor i32 %7853, %7856
  %7859 = xor i32 %7853, %7857
  %7860 = add i32 %7858, %7859
  %7861 = icmp eq i32 %7860, 2
  %7862 = zext i1 %7861 to i8
  %7863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7862, i8* %7863, align 1
  store %struct.Memory* %loadMem_4aad94, %struct.Memory** %MEMORY
  %loadMem_4aad97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7865 = getelementptr inbounds %struct.GPR, %struct.GPR* %7864, i32 0, i32 33
  %7866 = getelementptr inbounds %struct.Reg, %struct.Reg* %7865, i32 0, i32 0
  %PC.i3183 = bitcast %union.anon* %7866 to i64*
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 11
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %EDI.i3184 = bitcast %union.anon* %7869 to i32*
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 15
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %RBP.i3185 = bitcast %union.anon* %7872 to i64*
  %7873 = load i64, i64* %RBP.i3185
  %7874 = sub i64 %7873, 500
  %7875 = load i32, i32* %EDI.i3184
  %7876 = zext i32 %7875 to i64
  %7877 = load i64, i64* %PC.i3183
  %7878 = add i64 %7877, 6
  store i64 %7878, i64* %PC.i3183
  %7879 = inttoptr i64 %7874 to i32*
  store i32 %7875, i32* %7879
  store %struct.Memory* %loadMem_4aad97, %struct.Memory** %MEMORY
  %loadMem_4aad9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7881 = getelementptr inbounds %struct.GPR, %struct.GPR* %7880, i32 0, i32 33
  %7882 = getelementptr inbounds %struct.Reg, %struct.Reg* %7881, i32 0, i32 0
  %PC.i3180 = bitcast %union.anon* %7882 to i64*
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7884 = getelementptr inbounds %struct.GPR, %struct.GPR* %7883, i32 0, i32 11
  %7885 = getelementptr inbounds %struct.Reg, %struct.Reg* %7884, i32 0, i32 0
  %RDI.i3181 = bitcast %union.anon* %7885 to i64*
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7887 = getelementptr inbounds %struct.GPR, %struct.GPR* %7886, i32 0, i32 15
  %7888 = getelementptr inbounds %struct.Reg, %struct.Reg* %7887, i32 0, i32 0
  %RBP.i3182 = bitcast %union.anon* %7888 to i64*
  %7889 = load i64, i64* %RBP.i3182
  %7890 = sub i64 %7889, 512
  %7891 = load i64, i64* %PC.i3180
  %7892 = add i64 %7891, 6
  store i64 %7892, i64* %PC.i3180
  %7893 = inttoptr i64 %7890 to i32*
  %7894 = load i32, i32* %7893
  %7895 = zext i32 %7894 to i64
  store i64 %7895, i64* %RDI.i3181, align 8
  store %struct.Memory* %loadMem_4aad9d, %struct.Memory** %MEMORY
  %loadMem_4aada3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7897 = getelementptr inbounds %struct.GPR, %struct.GPR* %7896, i32 0, i32 33
  %7898 = getelementptr inbounds %struct.Reg, %struct.Reg* %7897, i32 0, i32 0
  %PC.i3177 = bitcast %union.anon* %7898 to i64*
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 11
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %RDI.i3178 = bitcast %union.anon* %7901 to i64*
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 15
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %RBP.i3179 = bitcast %union.anon* %7904 to i64*
  %7905 = load i64, i64* %RDI.i3178
  %7906 = load i64, i64* %RBP.i3179
  %7907 = sub i64 %7906, 500
  %7908 = load i64, i64* %PC.i3177
  %7909 = add i64 %7908, 6
  store i64 %7909, i64* %PC.i3177
  %7910 = trunc i64 %7905 to i32
  %7911 = inttoptr i64 %7907 to i32*
  %7912 = load i32, i32* %7911
  %7913 = add i32 %7912, %7910
  %7914 = zext i32 %7913 to i64
  store i64 %7914, i64* %RDI.i3178, align 8
  %7915 = icmp ult i32 %7913, %7910
  %7916 = icmp ult i32 %7913, %7912
  %7917 = or i1 %7915, %7916
  %7918 = zext i1 %7917 to i8
  %7919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7918, i8* %7919, align 1
  %7920 = and i32 %7913, 255
  %7921 = call i32 @llvm.ctpop.i32(i32 %7920)
  %7922 = trunc i32 %7921 to i8
  %7923 = and i8 %7922, 1
  %7924 = xor i8 %7923, 1
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7924, i8* %7925, align 1
  %7926 = xor i32 %7912, %7910
  %7927 = xor i32 %7926, %7913
  %7928 = lshr i32 %7927, 4
  %7929 = trunc i32 %7928 to i8
  %7930 = and i8 %7929, 1
  %7931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7930, i8* %7931, align 1
  %7932 = icmp eq i32 %7913, 0
  %7933 = zext i1 %7932 to i8
  %7934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7933, i8* %7934, align 1
  %7935 = lshr i32 %7913, 31
  %7936 = trunc i32 %7935 to i8
  %7937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7936, i8* %7937, align 1
  %7938 = lshr i32 %7910, 31
  %7939 = lshr i32 %7912, 31
  %7940 = xor i32 %7935, %7938
  %7941 = xor i32 %7935, %7939
  %7942 = add i32 %7940, %7941
  %7943 = icmp eq i32 %7942, 2
  %7944 = zext i1 %7943 to i8
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7944, i8* %7945, align 1
  store %struct.Memory* %loadMem_4aada3, %struct.Memory** %MEMORY
  %loadMem_4aada9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 33
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %PC.i3174 = bitcast %union.anon* %7948 to i64*
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7950 = getelementptr inbounds %struct.GPR, %struct.GPR* %7949, i32 0, i32 11
  %7951 = getelementptr inbounds %struct.Reg, %struct.Reg* %7950, i32 0, i32 0
  %EDI.i3175 = bitcast %union.anon* %7951 to i32*
  %7952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7953 = getelementptr inbounds %struct.GPR, %struct.GPR* %7952, i32 0, i32 15
  %7954 = getelementptr inbounds %struct.Reg, %struct.Reg* %7953, i32 0, i32 0
  %RBP.i3176 = bitcast %union.anon* %7954 to i64*
  %7955 = load i64, i64* %RBP.i3176
  %7956 = sub i64 %7955, 544
  %7957 = load i32, i32* %EDI.i3175
  %7958 = zext i32 %7957 to i64
  %7959 = load i64, i64* %PC.i3174
  %7960 = add i64 %7959, 6
  store i64 %7960, i64* %PC.i3174
  %7961 = inttoptr i64 %7956 to i32*
  store i32 %7957, i32* %7961
  store %struct.Memory* %loadMem_4aada9, %struct.Memory** %MEMORY
  %loadMem_4aadaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7963 = getelementptr inbounds %struct.GPR, %struct.GPR* %7962, i32 0, i32 33
  %7964 = getelementptr inbounds %struct.Reg, %struct.Reg* %7963, i32 0, i32 0
  %PC.i3171 = bitcast %union.anon* %7964 to i64*
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7966 = getelementptr inbounds %struct.GPR, %struct.GPR* %7965, i32 0, i32 11
  %7967 = getelementptr inbounds %struct.Reg, %struct.Reg* %7966, i32 0, i32 0
  %RDI.i3172 = bitcast %union.anon* %7967 to i64*
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7969 = getelementptr inbounds %struct.GPR, %struct.GPR* %7968, i32 0, i32 15
  %7970 = getelementptr inbounds %struct.Reg, %struct.Reg* %7969, i32 0, i32 0
  %RBP.i3173 = bitcast %union.anon* %7970 to i64*
  %7971 = load i64, i64* %RBP.i3173
  %7972 = sub i64 %7971, 508
  %7973 = load i64, i64* %PC.i3171
  %7974 = add i64 %7973, 6
  store i64 %7974, i64* %PC.i3171
  %7975 = inttoptr i64 %7972 to i32*
  %7976 = load i32, i32* %7975
  %7977 = zext i32 %7976 to i64
  store i64 %7977, i64* %RDI.i3172, align 8
  store %struct.Memory* %loadMem_4aadaf, %struct.Memory** %MEMORY
  %loadMem_4aadb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7979 = getelementptr inbounds %struct.GPR, %struct.GPR* %7978, i32 0, i32 33
  %7980 = getelementptr inbounds %struct.Reg, %struct.Reg* %7979, i32 0, i32 0
  %PC.i3168 = bitcast %union.anon* %7980 to i64*
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7982 = getelementptr inbounds %struct.GPR, %struct.GPR* %7981, i32 0, i32 11
  %7983 = getelementptr inbounds %struct.Reg, %struct.Reg* %7982, i32 0, i32 0
  %RDI.i3169 = bitcast %union.anon* %7983 to i64*
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7985 = getelementptr inbounds %struct.GPR, %struct.GPR* %7984, i32 0, i32 15
  %7986 = getelementptr inbounds %struct.Reg, %struct.Reg* %7985, i32 0, i32 0
  %RBP.i3170 = bitcast %union.anon* %7986 to i64*
  %7987 = load i64, i64* %RDI.i3169
  %7988 = load i64, i64* %RBP.i3170
  %7989 = sub i64 %7988, 504
  %7990 = load i64, i64* %PC.i3168
  %7991 = add i64 %7990, 6
  store i64 %7991, i64* %PC.i3168
  %7992 = trunc i64 %7987 to i32
  %7993 = inttoptr i64 %7989 to i32*
  %7994 = load i32, i32* %7993
  %7995 = add i32 %7994, %7992
  %7996 = zext i32 %7995 to i64
  store i64 %7996, i64* %RDI.i3169, align 8
  %7997 = icmp ult i32 %7995, %7992
  %7998 = icmp ult i32 %7995, %7994
  %7999 = or i1 %7997, %7998
  %8000 = zext i1 %7999 to i8
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8000, i8* %8001, align 1
  %8002 = and i32 %7995, 255
  %8003 = call i32 @llvm.ctpop.i32(i32 %8002)
  %8004 = trunc i32 %8003 to i8
  %8005 = and i8 %8004, 1
  %8006 = xor i8 %8005, 1
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8006, i8* %8007, align 1
  %8008 = xor i32 %7994, %7992
  %8009 = xor i32 %8008, %7995
  %8010 = lshr i32 %8009, 4
  %8011 = trunc i32 %8010 to i8
  %8012 = and i8 %8011, 1
  %8013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8012, i8* %8013, align 1
  %8014 = icmp eq i32 %7995, 0
  %8015 = zext i1 %8014 to i8
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8015, i8* %8016, align 1
  %8017 = lshr i32 %7995, 31
  %8018 = trunc i32 %8017 to i8
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8018, i8* %8019, align 1
  %8020 = lshr i32 %7992, 31
  %8021 = lshr i32 %7994, 31
  %8022 = xor i32 %8017, %8020
  %8023 = xor i32 %8017, %8021
  %8024 = add i32 %8022, %8023
  %8025 = icmp eq i32 %8024, 2
  %8026 = zext i1 %8025 to i8
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8026, i8* %8027, align 1
  store %struct.Memory* %loadMem_4aadb5, %struct.Memory** %MEMORY
  %loadMem_4aadbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8029 = getelementptr inbounds %struct.GPR, %struct.GPR* %8028, i32 0, i32 33
  %8030 = getelementptr inbounds %struct.Reg, %struct.Reg* %8029, i32 0, i32 0
  %PC.i3165 = bitcast %union.anon* %8030 to i64*
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8032 = getelementptr inbounds %struct.GPR, %struct.GPR* %8031, i32 0, i32 11
  %8033 = getelementptr inbounds %struct.Reg, %struct.Reg* %8032, i32 0, i32 0
  %EDI.i3166 = bitcast %union.anon* %8033 to i32*
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8035 = getelementptr inbounds %struct.GPR, %struct.GPR* %8034, i32 0, i32 15
  %8036 = getelementptr inbounds %struct.Reg, %struct.Reg* %8035, i32 0, i32 0
  %RBP.i3167 = bitcast %union.anon* %8036 to i64*
  %8037 = load i64, i64* %RBP.i3167
  %8038 = sub i64 %8037, 540
  %8039 = load i32, i32* %EDI.i3166
  %8040 = zext i32 %8039 to i64
  %8041 = load i64, i64* %PC.i3165
  %8042 = add i64 %8041, 6
  store i64 %8042, i64* %PC.i3165
  %8043 = inttoptr i64 %8038 to i32*
  store i32 %8039, i32* %8043
  store %struct.Memory* %loadMem_4aadbb, %struct.Memory** %MEMORY
  %loadMem_4aadc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8045 = getelementptr inbounds %struct.GPR, %struct.GPR* %8044, i32 0, i32 33
  %8046 = getelementptr inbounds %struct.Reg, %struct.Reg* %8045, i32 0, i32 0
  %PC.i3162 = bitcast %union.anon* %8046 to i64*
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8048 = getelementptr inbounds %struct.GPR, %struct.GPR* %8047, i32 0, i32 11
  %8049 = getelementptr inbounds %struct.Reg, %struct.Reg* %8048, i32 0, i32 0
  %RDI.i3163 = bitcast %union.anon* %8049 to i64*
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8051 = getelementptr inbounds %struct.GPR, %struct.GPR* %8050, i32 0, i32 15
  %8052 = getelementptr inbounds %struct.Reg, %struct.Reg* %8051, i32 0, i32 0
  %RBP.i3164 = bitcast %union.anon* %8052 to i64*
  %8053 = load i64, i64* %RBP.i3164
  %8054 = sub i64 %8053, 512
  %8055 = load i64, i64* %PC.i3162
  %8056 = add i64 %8055, 6
  store i64 %8056, i64* %PC.i3162
  %8057 = inttoptr i64 %8054 to i32*
  %8058 = load i32, i32* %8057
  %8059 = zext i32 %8058 to i64
  store i64 %8059, i64* %RDI.i3163, align 8
  store %struct.Memory* %loadMem_4aadc1, %struct.Memory** %MEMORY
  %loadMem_4aadc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8061 = getelementptr inbounds %struct.GPR, %struct.GPR* %8060, i32 0, i32 33
  %8062 = getelementptr inbounds %struct.Reg, %struct.Reg* %8061, i32 0, i32 0
  %PC.i3159 = bitcast %union.anon* %8062 to i64*
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8064 = getelementptr inbounds %struct.GPR, %struct.GPR* %8063, i32 0, i32 11
  %8065 = getelementptr inbounds %struct.Reg, %struct.Reg* %8064, i32 0, i32 0
  %RDI.i3160 = bitcast %union.anon* %8065 to i64*
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8067 = getelementptr inbounds %struct.GPR, %struct.GPR* %8066, i32 0, i32 15
  %8068 = getelementptr inbounds %struct.Reg, %struct.Reg* %8067, i32 0, i32 0
  %RBP.i3161 = bitcast %union.anon* %8068 to i64*
  %8069 = load i64, i64* %RDI.i3160
  %8070 = load i64, i64* %RBP.i3161
  %8071 = sub i64 %8070, 500
  %8072 = load i64, i64* %PC.i3159
  %8073 = add i64 %8072, 6
  store i64 %8073, i64* %PC.i3159
  %8074 = trunc i64 %8069 to i32
  %8075 = inttoptr i64 %8071 to i32*
  %8076 = load i32, i32* %8075
  %8077 = sub i32 %8074, %8076
  %8078 = zext i32 %8077 to i64
  store i64 %8078, i64* %RDI.i3160, align 8
  %8079 = icmp ult i32 %8074, %8076
  %8080 = zext i1 %8079 to i8
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8080, i8* %8081, align 1
  %8082 = and i32 %8077, 255
  %8083 = call i32 @llvm.ctpop.i32(i32 %8082)
  %8084 = trunc i32 %8083 to i8
  %8085 = and i8 %8084, 1
  %8086 = xor i8 %8085, 1
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8086, i8* %8087, align 1
  %8088 = xor i32 %8076, %8074
  %8089 = xor i32 %8088, %8077
  %8090 = lshr i32 %8089, 4
  %8091 = trunc i32 %8090 to i8
  %8092 = and i8 %8091, 1
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8092, i8* %8093, align 1
  %8094 = icmp eq i32 %8077, 0
  %8095 = zext i1 %8094 to i8
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8095, i8* %8096, align 1
  %8097 = lshr i32 %8077, 31
  %8098 = trunc i32 %8097 to i8
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8098, i8* %8099, align 1
  %8100 = lshr i32 %8074, 31
  %8101 = lshr i32 %8076, 31
  %8102 = xor i32 %8101, %8100
  %8103 = xor i32 %8097, %8100
  %8104 = add i32 %8103, %8102
  %8105 = icmp eq i32 %8104, 2
  %8106 = zext i1 %8105 to i8
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8106, i8* %8107, align 1
  store %struct.Memory* %loadMem_4aadc7, %struct.Memory** %MEMORY
  %loadMem_4aadcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 33
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %PC.i3156 = bitcast %union.anon* %8110 to i64*
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8112 = getelementptr inbounds %struct.GPR, %struct.GPR* %8111, i32 0, i32 11
  %8113 = getelementptr inbounds %struct.Reg, %struct.Reg* %8112, i32 0, i32 0
  %EDI.i3157 = bitcast %union.anon* %8113 to i32*
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8115 = getelementptr inbounds %struct.GPR, %struct.GPR* %8114, i32 0, i32 15
  %8116 = getelementptr inbounds %struct.Reg, %struct.Reg* %8115, i32 0, i32 0
  %RBP.i3158 = bitcast %union.anon* %8116 to i64*
  %8117 = load i64, i64* %RBP.i3158
  %8118 = sub i64 %8117, 536
  %8119 = load i32, i32* %EDI.i3157
  %8120 = zext i32 %8119 to i64
  %8121 = load i64, i64* %PC.i3156
  %8122 = add i64 %8121, 6
  store i64 %8122, i64* %PC.i3156
  %8123 = inttoptr i64 %8118 to i32*
  store i32 %8119, i32* %8123
  store %struct.Memory* %loadMem_4aadcd, %struct.Memory** %MEMORY
  %loadMem_4aadd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8125 = getelementptr inbounds %struct.GPR, %struct.GPR* %8124, i32 0, i32 33
  %8126 = getelementptr inbounds %struct.Reg, %struct.Reg* %8125, i32 0, i32 0
  %PC.i3153 = bitcast %union.anon* %8126 to i64*
  %8127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8128 = getelementptr inbounds %struct.GPR, %struct.GPR* %8127, i32 0, i32 11
  %8129 = getelementptr inbounds %struct.Reg, %struct.Reg* %8128, i32 0, i32 0
  %RDI.i3154 = bitcast %union.anon* %8129 to i64*
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8131 = getelementptr inbounds %struct.GPR, %struct.GPR* %8130, i32 0, i32 15
  %8132 = getelementptr inbounds %struct.Reg, %struct.Reg* %8131, i32 0, i32 0
  %RBP.i3155 = bitcast %union.anon* %8132 to i64*
  %8133 = load i64, i64* %RBP.i3155
  %8134 = sub i64 %8133, 508
  %8135 = load i64, i64* %PC.i3153
  %8136 = add i64 %8135, 6
  store i64 %8136, i64* %PC.i3153
  %8137 = inttoptr i64 %8134 to i32*
  %8138 = load i32, i32* %8137
  %8139 = zext i32 %8138 to i64
  store i64 %8139, i64* %RDI.i3154, align 8
  store %struct.Memory* %loadMem_4aadd3, %struct.Memory** %MEMORY
  %loadMem_4aadd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8141 = getelementptr inbounds %struct.GPR, %struct.GPR* %8140, i32 0, i32 33
  %8142 = getelementptr inbounds %struct.Reg, %struct.Reg* %8141, i32 0, i32 0
  %PC.i3150 = bitcast %union.anon* %8142 to i64*
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8144 = getelementptr inbounds %struct.GPR, %struct.GPR* %8143, i32 0, i32 11
  %8145 = getelementptr inbounds %struct.Reg, %struct.Reg* %8144, i32 0, i32 0
  %RDI.i3151 = bitcast %union.anon* %8145 to i64*
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8147 = getelementptr inbounds %struct.GPR, %struct.GPR* %8146, i32 0, i32 15
  %8148 = getelementptr inbounds %struct.Reg, %struct.Reg* %8147, i32 0, i32 0
  %RBP.i3152 = bitcast %union.anon* %8148 to i64*
  %8149 = load i64, i64* %RDI.i3151
  %8150 = load i64, i64* %RBP.i3152
  %8151 = sub i64 %8150, 504
  %8152 = load i64, i64* %PC.i3150
  %8153 = add i64 %8152, 6
  store i64 %8153, i64* %PC.i3150
  %8154 = trunc i64 %8149 to i32
  %8155 = inttoptr i64 %8151 to i32*
  %8156 = load i32, i32* %8155
  %8157 = sub i32 %8154, %8156
  %8158 = zext i32 %8157 to i64
  store i64 %8158, i64* %RDI.i3151, align 8
  %8159 = icmp ult i32 %8154, %8156
  %8160 = zext i1 %8159 to i8
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8160, i8* %8161, align 1
  %8162 = and i32 %8157, 255
  %8163 = call i32 @llvm.ctpop.i32(i32 %8162)
  %8164 = trunc i32 %8163 to i8
  %8165 = and i8 %8164, 1
  %8166 = xor i8 %8165, 1
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8166, i8* %8167, align 1
  %8168 = xor i32 %8156, %8154
  %8169 = xor i32 %8168, %8157
  %8170 = lshr i32 %8169, 4
  %8171 = trunc i32 %8170 to i8
  %8172 = and i8 %8171, 1
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8172, i8* %8173, align 1
  %8174 = icmp eq i32 %8157, 0
  %8175 = zext i1 %8174 to i8
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8175, i8* %8176, align 1
  %8177 = lshr i32 %8157, 31
  %8178 = trunc i32 %8177 to i8
  %8179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8178, i8* %8179, align 1
  %8180 = lshr i32 %8154, 31
  %8181 = lshr i32 %8156, 31
  %8182 = xor i32 %8181, %8180
  %8183 = xor i32 %8177, %8180
  %8184 = add i32 %8183, %8182
  %8185 = icmp eq i32 %8184, 2
  %8186 = zext i1 %8185 to i8
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8186, i8* %8187, align 1
  store %struct.Memory* %loadMem_4aadd9, %struct.Memory** %MEMORY
  %loadMem_4aaddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8189 = getelementptr inbounds %struct.GPR, %struct.GPR* %8188, i32 0, i32 33
  %8190 = getelementptr inbounds %struct.Reg, %struct.Reg* %8189, i32 0, i32 0
  %PC.i3147 = bitcast %union.anon* %8190 to i64*
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8192 = getelementptr inbounds %struct.GPR, %struct.GPR* %8191, i32 0, i32 11
  %8193 = getelementptr inbounds %struct.Reg, %struct.Reg* %8192, i32 0, i32 0
  %EDI.i3148 = bitcast %union.anon* %8193 to i32*
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8195 = getelementptr inbounds %struct.GPR, %struct.GPR* %8194, i32 0, i32 15
  %8196 = getelementptr inbounds %struct.Reg, %struct.Reg* %8195, i32 0, i32 0
  %RBP.i3149 = bitcast %union.anon* %8196 to i64*
  %8197 = load i64, i64* %RBP.i3149
  %8198 = sub i64 %8197, 532
  %8199 = load i32, i32* %EDI.i3148
  %8200 = zext i32 %8199 to i64
  %8201 = load i64, i64* %PC.i3147
  %8202 = add i64 %8201, 6
  store i64 %8202, i64* %PC.i3147
  %8203 = inttoptr i64 %8198 to i32*
  store i32 %8199, i32* %8203
  store %struct.Memory* %loadMem_4aaddf, %struct.Memory** %MEMORY
  %loadMem_4aade5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8205 = getelementptr inbounds %struct.GPR, %struct.GPR* %8204, i32 0, i32 33
  %8206 = getelementptr inbounds %struct.Reg, %struct.Reg* %8205, i32 0, i32 0
  %PC.i3144 = bitcast %union.anon* %8206 to i64*
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8208 = getelementptr inbounds %struct.GPR, %struct.GPR* %8207, i32 0, i32 7
  %8209 = getelementptr inbounds %struct.Reg, %struct.Reg* %8208, i32 0, i32 0
  %RDX.i3145 = bitcast %union.anon* %8209 to i64*
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 15
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %RBP.i3146 = bitcast %union.anon* %8212 to i64*
  %8213 = load i64, i64* %RBP.i3146
  %8214 = sub i64 %8213, 24
  %8215 = load i64, i64* %PC.i3144
  %8216 = add i64 %8215, 4
  store i64 %8216, i64* %PC.i3144
  %8217 = inttoptr i64 %8214 to i32*
  %8218 = load i32, i32* %8217
  %8219 = sext i32 %8218 to i64
  store i64 %8219, i64* %RDX.i3145, align 8
  store %struct.Memory* %loadMem_4aade5, %struct.Memory** %MEMORY
  %loadMem_4aade9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8221 = getelementptr inbounds %struct.GPR, %struct.GPR* %8220, i32 0, i32 33
  %8222 = getelementptr inbounds %struct.Reg, %struct.Reg* %8221, i32 0, i32 0
  %PC.i3142 = bitcast %union.anon* %8222 to i64*
  %8223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8224 = getelementptr inbounds %struct.GPR, %struct.GPR* %8223, i32 0, i32 7
  %8225 = getelementptr inbounds %struct.Reg, %struct.Reg* %8224, i32 0, i32 0
  %RDX.i3143 = bitcast %union.anon* %8225 to i64*
  %8226 = load i64, i64* %RDX.i3143
  %8227 = load i64, i64* %PC.i3142
  %8228 = add i64 %8227, 4
  store i64 %8228, i64* %PC.i3142
  %8229 = shl i64 %8226, 4
  %8230 = icmp slt i64 %8229, 0
  %8231 = shl i64 %8229, 1
  store i64 %8231, i64* %RDX.i3143, align 8
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8233 = zext i1 %8230 to i8
  store i8 %8233, i8* %8232, align 1
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8235 = trunc i64 %8231 to i32
  %8236 = and i32 %8235, 254
  %8237 = call i32 @llvm.ctpop.i32(i32 %8236)
  %8238 = trunc i32 %8237 to i8
  %8239 = and i8 %8238, 1
  %8240 = xor i8 %8239, 1
  store i8 %8240, i8* %8234, align 1
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8241, align 1
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8243 = icmp eq i64 %8231, 0
  %8244 = zext i1 %8243 to i8
  store i8 %8244, i8* %8242, align 1
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8246 = lshr i64 %8231, 63
  %8247 = trunc i64 %8246 to i8
  store i8 %8247, i8* %8245, align 1
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8248, align 1
  store %struct.Memory* %loadMem_4aade9, %struct.Memory** %MEMORY
  %loadMem_4aaded = load %struct.Memory*, %struct.Memory** %MEMORY
  %8249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8250 = getelementptr inbounds %struct.GPR, %struct.GPR* %8249, i32 0, i32 33
  %8251 = getelementptr inbounds %struct.Reg, %struct.Reg* %8250, i32 0, i32 0
  %PC.i3139 = bitcast %union.anon* %8251 to i64*
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8253 = getelementptr inbounds %struct.GPR, %struct.GPR* %8252, i32 0, i32 5
  %8254 = getelementptr inbounds %struct.Reg, %struct.Reg* %8253, i32 0, i32 0
  %RCX.i3140 = bitcast %union.anon* %8254 to i64*
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 9
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %RSI.i3141 = bitcast %union.anon* %8257 to i64*
  %8258 = load i64, i64* %RCX.i3140
  %8259 = load i64, i64* %PC.i3139
  %8260 = add i64 %8259, 3
  store i64 %8260, i64* %PC.i3139
  store i64 %8258, i64* %RSI.i3141, align 8
  store %struct.Memory* %loadMem_4aaded, %struct.Memory** %MEMORY
  %loadMem_4aadf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8262 = getelementptr inbounds %struct.GPR, %struct.GPR* %8261, i32 0, i32 33
  %8263 = getelementptr inbounds %struct.Reg, %struct.Reg* %8262, i32 0, i32 0
  %PC.i3136 = bitcast %union.anon* %8263 to i64*
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8265 = getelementptr inbounds %struct.GPR, %struct.GPR* %8264, i32 0, i32 7
  %8266 = getelementptr inbounds %struct.Reg, %struct.Reg* %8265, i32 0, i32 0
  %RDX.i3137 = bitcast %union.anon* %8266 to i64*
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8268 = getelementptr inbounds %struct.GPR, %struct.GPR* %8267, i32 0, i32 9
  %8269 = getelementptr inbounds %struct.Reg, %struct.Reg* %8268, i32 0, i32 0
  %RSI.i3138 = bitcast %union.anon* %8269 to i64*
  %8270 = load i64, i64* %RSI.i3138
  %8271 = load i64, i64* %RDX.i3137
  %8272 = load i64, i64* %PC.i3136
  %8273 = add i64 %8272, 3
  store i64 %8273, i64* %PC.i3136
  %8274 = add i64 %8271, %8270
  store i64 %8274, i64* %RSI.i3138, align 8
  %8275 = icmp ult i64 %8274, %8270
  %8276 = icmp ult i64 %8274, %8271
  %8277 = or i1 %8275, %8276
  %8278 = zext i1 %8277 to i8
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8278, i8* %8279, align 1
  %8280 = trunc i64 %8274 to i32
  %8281 = and i32 %8280, 255
  %8282 = call i32 @llvm.ctpop.i32(i32 %8281)
  %8283 = trunc i32 %8282 to i8
  %8284 = and i8 %8283, 1
  %8285 = xor i8 %8284, 1
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8285, i8* %8286, align 1
  %8287 = xor i64 %8271, %8270
  %8288 = xor i64 %8287, %8274
  %8289 = lshr i64 %8288, 4
  %8290 = trunc i64 %8289 to i8
  %8291 = and i8 %8290, 1
  %8292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8291, i8* %8292, align 1
  %8293 = icmp eq i64 %8274, 0
  %8294 = zext i1 %8293 to i8
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8294, i8* %8295, align 1
  %8296 = lshr i64 %8274, 63
  %8297 = trunc i64 %8296 to i8
  %8298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8297, i8* %8298, align 1
  %8299 = lshr i64 %8270, 63
  %8300 = lshr i64 %8271, 63
  %8301 = xor i64 %8296, %8299
  %8302 = xor i64 %8296, %8300
  %8303 = add i64 %8301, %8302
  %8304 = icmp eq i64 %8303, 2
  %8305 = zext i1 %8304 to i8
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8305, i8* %8306, align 1
  store %struct.Memory* %loadMem_4aadf0, %struct.Memory** %MEMORY
  %loadMem_4aadf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8308 = getelementptr inbounds %struct.GPR, %struct.GPR* %8307, i32 0, i32 33
  %8309 = getelementptr inbounds %struct.Reg, %struct.Reg* %8308, i32 0, i32 0
  %PC.i3133 = bitcast %union.anon* %8309 to i64*
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8311 = getelementptr inbounds %struct.GPR, %struct.GPR* %8310, i32 0, i32 9
  %8312 = getelementptr inbounds %struct.Reg, %struct.Reg* %8311, i32 0, i32 0
  %RSI.i3134 = bitcast %union.anon* %8312 to i64*
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 11
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %RDI.i3135 = bitcast %union.anon* %8315 to i64*
  %8316 = load i64, i64* %RSI.i3134
  %8317 = load i64, i64* %PC.i3133
  %8318 = add i64 %8317, 2
  store i64 %8318, i64* %PC.i3133
  %8319 = inttoptr i64 %8316 to i32*
  %8320 = load i32, i32* %8319
  %8321 = zext i32 %8320 to i64
  store i64 %8321, i64* %RDI.i3135, align 8
  store %struct.Memory* %loadMem_4aadf3, %struct.Memory** %MEMORY
  %loadMem_4aadf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8323 = getelementptr inbounds %struct.GPR, %struct.GPR* %8322, i32 0, i32 33
  %8324 = getelementptr inbounds %struct.Reg, %struct.Reg* %8323, i32 0, i32 0
  %PC.i3130 = bitcast %union.anon* %8324 to i64*
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8326 = getelementptr inbounds %struct.GPR, %struct.GPR* %8325, i32 0, i32 7
  %8327 = getelementptr inbounds %struct.Reg, %struct.Reg* %8326, i32 0, i32 0
  %RDX.i3131 = bitcast %union.anon* %8327 to i64*
  %8328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8329 = getelementptr inbounds %struct.GPR, %struct.GPR* %8328, i32 0, i32 15
  %8330 = getelementptr inbounds %struct.Reg, %struct.Reg* %8329, i32 0, i32 0
  %RBP.i3132 = bitcast %union.anon* %8330 to i64*
  %8331 = load i64, i64* %RBP.i3132
  %8332 = sub i64 %8331, 24
  %8333 = load i64, i64* %PC.i3130
  %8334 = add i64 %8333, 4
  store i64 %8334, i64* %PC.i3130
  %8335 = inttoptr i64 %8332 to i32*
  %8336 = load i32, i32* %8335
  %8337 = sext i32 %8336 to i64
  store i64 %8337, i64* %RDX.i3131, align 8
  store %struct.Memory* %loadMem_4aadf5, %struct.Memory** %MEMORY
  %loadMem_4aadf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8339 = getelementptr inbounds %struct.GPR, %struct.GPR* %8338, i32 0, i32 33
  %8340 = getelementptr inbounds %struct.Reg, %struct.Reg* %8339, i32 0, i32 0
  %PC.i3128 = bitcast %union.anon* %8340 to i64*
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8342 = getelementptr inbounds %struct.GPR, %struct.GPR* %8341, i32 0, i32 7
  %8343 = getelementptr inbounds %struct.Reg, %struct.Reg* %8342, i32 0, i32 0
  %RDX.i3129 = bitcast %union.anon* %8343 to i64*
  %8344 = load i64, i64* %RDX.i3129
  %8345 = load i64, i64* %PC.i3128
  %8346 = add i64 %8345, 4
  store i64 %8346, i64* %PC.i3128
  %8347 = shl i64 %8344, 4
  %8348 = icmp slt i64 %8347, 0
  %8349 = shl i64 %8347, 1
  store i64 %8349, i64* %RDX.i3129, align 8
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8351 = zext i1 %8348 to i8
  store i8 %8351, i8* %8350, align 1
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8353 = trunc i64 %8349 to i32
  %8354 = and i32 %8353, 254
  %8355 = call i32 @llvm.ctpop.i32(i32 %8354)
  %8356 = trunc i32 %8355 to i8
  %8357 = and i8 %8356, 1
  %8358 = xor i8 %8357, 1
  store i8 %8358, i8* %8352, align 1
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8359, align 1
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8361 = icmp eq i64 %8349, 0
  %8362 = zext i1 %8361 to i8
  store i8 %8362, i8* %8360, align 1
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8364 = lshr i64 %8349, 63
  %8365 = trunc i64 %8364 to i8
  store i8 %8365, i8* %8363, align 1
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8366, align 1
  store %struct.Memory* %loadMem_4aadf9, %struct.Memory** %MEMORY
  %loadMem_4aadfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8368 = getelementptr inbounds %struct.GPR, %struct.GPR* %8367, i32 0, i32 33
  %8369 = getelementptr inbounds %struct.Reg, %struct.Reg* %8368, i32 0, i32 0
  %PC.i3125 = bitcast %union.anon* %8369 to i64*
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8371 = getelementptr inbounds %struct.GPR, %struct.GPR* %8370, i32 0, i32 5
  %8372 = getelementptr inbounds %struct.Reg, %struct.Reg* %8371, i32 0, i32 0
  %RCX.i3126 = bitcast %union.anon* %8372 to i64*
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8374 = getelementptr inbounds %struct.GPR, %struct.GPR* %8373, i32 0, i32 9
  %8375 = getelementptr inbounds %struct.Reg, %struct.Reg* %8374, i32 0, i32 0
  %RSI.i3127 = bitcast %union.anon* %8375 to i64*
  %8376 = load i64, i64* %RCX.i3126
  %8377 = load i64, i64* %PC.i3125
  %8378 = add i64 %8377, 3
  store i64 %8378, i64* %PC.i3125
  store i64 %8376, i64* %RSI.i3127, align 8
  store %struct.Memory* %loadMem_4aadfd, %struct.Memory** %MEMORY
  %loadMem_4aae00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 33
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %PC.i3122 = bitcast %union.anon* %8381 to i64*
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 7
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %RDX.i3123 = bitcast %union.anon* %8384 to i64*
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8386 = getelementptr inbounds %struct.GPR, %struct.GPR* %8385, i32 0, i32 9
  %8387 = getelementptr inbounds %struct.Reg, %struct.Reg* %8386, i32 0, i32 0
  %RSI.i3124 = bitcast %union.anon* %8387 to i64*
  %8388 = load i64, i64* %RSI.i3124
  %8389 = load i64, i64* %RDX.i3123
  %8390 = load i64, i64* %PC.i3122
  %8391 = add i64 %8390, 3
  store i64 %8391, i64* %PC.i3122
  %8392 = add i64 %8389, %8388
  store i64 %8392, i64* %RSI.i3124, align 8
  %8393 = icmp ult i64 %8392, %8388
  %8394 = icmp ult i64 %8392, %8389
  %8395 = or i1 %8393, %8394
  %8396 = zext i1 %8395 to i8
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8396, i8* %8397, align 1
  %8398 = trunc i64 %8392 to i32
  %8399 = and i32 %8398, 255
  %8400 = call i32 @llvm.ctpop.i32(i32 %8399)
  %8401 = trunc i32 %8400 to i8
  %8402 = and i8 %8401, 1
  %8403 = xor i8 %8402, 1
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8403, i8* %8404, align 1
  %8405 = xor i64 %8389, %8388
  %8406 = xor i64 %8405, %8392
  %8407 = lshr i64 %8406, 4
  %8408 = trunc i64 %8407 to i8
  %8409 = and i8 %8408, 1
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8409, i8* %8410, align 1
  %8411 = icmp eq i64 %8392, 0
  %8412 = zext i1 %8411 to i8
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8412, i8* %8413, align 1
  %8414 = lshr i64 %8392, 63
  %8415 = trunc i64 %8414 to i8
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8415, i8* %8416, align 1
  %8417 = lshr i64 %8388, 63
  %8418 = lshr i64 %8389, 63
  %8419 = xor i64 %8414, %8417
  %8420 = xor i64 %8414, %8418
  %8421 = add i64 %8419, %8420
  %8422 = icmp eq i64 %8421, 2
  %8423 = zext i1 %8422 to i8
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8423, i8* %8424, align 1
  store %struct.Memory* %loadMem_4aae00, %struct.Memory** %MEMORY
  %loadMem_4aae03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 33
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %PC.i3119 = bitcast %union.anon* %8427 to i64*
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8429 = getelementptr inbounds %struct.GPR, %struct.GPR* %8428, i32 0, i32 9
  %8430 = getelementptr inbounds %struct.Reg, %struct.Reg* %8429, i32 0, i32 0
  %RSI.i3120 = bitcast %union.anon* %8430 to i64*
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8432 = getelementptr inbounds %struct.GPR, %struct.GPR* %8431, i32 0, i32 11
  %8433 = getelementptr inbounds %struct.Reg, %struct.Reg* %8432, i32 0, i32 0
  %RDI.i3121 = bitcast %union.anon* %8433 to i64*
  %8434 = load i64, i64* %RDI.i3121
  %8435 = load i64, i64* %RSI.i3120
  %8436 = add i64 %8435, 28
  %8437 = load i64, i64* %PC.i3119
  %8438 = add i64 %8437, 3
  store i64 %8438, i64* %PC.i3119
  %8439 = trunc i64 %8434 to i32
  %8440 = inttoptr i64 %8436 to i32*
  %8441 = load i32, i32* %8440
  %8442 = sub i32 %8439, %8441
  %8443 = zext i32 %8442 to i64
  store i64 %8443, i64* %RDI.i3121, align 8
  %8444 = icmp ult i32 %8439, %8441
  %8445 = zext i1 %8444 to i8
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8445, i8* %8446, align 1
  %8447 = and i32 %8442, 255
  %8448 = call i32 @llvm.ctpop.i32(i32 %8447)
  %8449 = trunc i32 %8448 to i8
  %8450 = and i8 %8449, 1
  %8451 = xor i8 %8450, 1
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8451, i8* %8452, align 1
  %8453 = xor i32 %8441, %8439
  %8454 = xor i32 %8453, %8442
  %8455 = lshr i32 %8454, 4
  %8456 = trunc i32 %8455 to i8
  %8457 = and i8 %8456, 1
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8457, i8* %8458, align 1
  %8459 = icmp eq i32 %8442, 0
  %8460 = zext i1 %8459 to i8
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8460, i8* %8461, align 1
  %8462 = lshr i32 %8442, 31
  %8463 = trunc i32 %8462 to i8
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8463, i8* %8464, align 1
  %8465 = lshr i32 %8439, 31
  %8466 = lshr i32 %8441, 31
  %8467 = xor i32 %8466, %8465
  %8468 = xor i32 %8462, %8465
  %8469 = add i32 %8468, %8467
  %8470 = icmp eq i32 %8469, 2
  %8471 = zext i1 %8470 to i8
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8471, i8* %8472, align 1
  store %struct.Memory* %loadMem_4aae03, %struct.Memory** %MEMORY
  %loadMem_4aae06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8474 = getelementptr inbounds %struct.GPR, %struct.GPR* %8473, i32 0, i32 33
  %8475 = getelementptr inbounds %struct.Reg, %struct.Reg* %8474, i32 0, i32 0
  %PC.i3116 = bitcast %union.anon* %8475 to i64*
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8477 = getelementptr inbounds %struct.GPR, %struct.GPR* %8476, i32 0, i32 11
  %8478 = getelementptr inbounds %struct.Reg, %struct.Reg* %8477, i32 0, i32 0
  %EDI.i3117 = bitcast %union.anon* %8478 to i32*
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8480 = getelementptr inbounds %struct.GPR, %struct.GPR* %8479, i32 0, i32 15
  %8481 = getelementptr inbounds %struct.Reg, %struct.Reg* %8480, i32 0, i32 0
  %RBP.i3118 = bitcast %union.anon* %8481 to i64*
  %8482 = load i64, i64* %RBP.i3118
  %8483 = sub i64 %8482, 496
  %8484 = load i32, i32* %EDI.i3117
  %8485 = zext i32 %8484 to i64
  %8486 = load i64, i64* %PC.i3116
  %8487 = add i64 %8486, 6
  store i64 %8487, i64* %PC.i3116
  %8488 = inttoptr i64 %8483 to i32*
  store i32 %8484, i32* %8488
  store %struct.Memory* %loadMem_4aae06, %struct.Memory** %MEMORY
  %loadMem_4aae0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8490 = getelementptr inbounds %struct.GPR, %struct.GPR* %8489, i32 0, i32 33
  %8491 = getelementptr inbounds %struct.Reg, %struct.Reg* %8490, i32 0, i32 0
  %PC.i3113 = bitcast %union.anon* %8491 to i64*
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8493 = getelementptr inbounds %struct.GPR, %struct.GPR* %8492, i32 0, i32 7
  %8494 = getelementptr inbounds %struct.Reg, %struct.Reg* %8493, i32 0, i32 0
  %RDX.i3114 = bitcast %union.anon* %8494 to i64*
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8496 = getelementptr inbounds %struct.GPR, %struct.GPR* %8495, i32 0, i32 15
  %8497 = getelementptr inbounds %struct.Reg, %struct.Reg* %8496, i32 0, i32 0
  %RBP.i3115 = bitcast %union.anon* %8497 to i64*
  %8498 = load i64, i64* %RBP.i3115
  %8499 = sub i64 %8498, 24
  %8500 = load i64, i64* %PC.i3113
  %8501 = add i64 %8500, 4
  store i64 %8501, i64* %PC.i3113
  %8502 = inttoptr i64 %8499 to i32*
  %8503 = load i32, i32* %8502
  %8504 = sext i32 %8503 to i64
  store i64 %8504, i64* %RDX.i3114, align 8
  store %struct.Memory* %loadMem_4aae0c, %struct.Memory** %MEMORY
  %loadMem_4aae10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8506 = getelementptr inbounds %struct.GPR, %struct.GPR* %8505, i32 0, i32 33
  %8507 = getelementptr inbounds %struct.Reg, %struct.Reg* %8506, i32 0, i32 0
  %PC.i3111 = bitcast %union.anon* %8507 to i64*
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8509 = getelementptr inbounds %struct.GPR, %struct.GPR* %8508, i32 0, i32 7
  %8510 = getelementptr inbounds %struct.Reg, %struct.Reg* %8509, i32 0, i32 0
  %RDX.i3112 = bitcast %union.anon* %8510 to i64*
  %8511 = load i64, i64* %RDX.i3112
  %8512 = load i64, i64* %PC.i3111
  %8513 = add i64 %8512, 4
  store i64 %8513, i64* %PC.i3111
  %8514 = shl i64 %8511, 4
  %8515 = icmp slt i64 %8514, 0
  %8516 = shl i64 %8514, 1
  store i64 %8516, i64* %RDX.i3112, align 8
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8518 = zext i1 %8515 to i8
  store i8 %8518, i8* %8517, align 1
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8520 = trunc i64 %8516 to i32
  %8521 = and i32 %8520, 254
  %8522 = call i32 @llvm.ctpop.i32(i32 %8521)
  %8523 = trunc i32 %8522 to i8
  %8524 = and i8 %8523, 1
  %8525 = xor i8 %8524, 1
  store i8 %8525, i8* %8519, align 1
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8526, align 1
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8528 = icmp eq i64 %8516, 0
  %8529 = zext i1 %8528 to i8
  store i8 %8529, i8* %8527, align 1
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8531 = lshr i64 %8516, 63
  %8532 = trunc i64 %8531 to i8
  store i8 %8532, i8* %8530, align 1
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8533, align 1
  store %struct.Memory* %loadMem_4aae10, %struct.Memory** %MEMORY
  %loadMem_4aae14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 33
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %PC.i3108 = bitcast %union.anon* %8536 to i64*
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8538 = getelementptr inbounds %struct.GPR, %struct.GPR* %8537, i32 0, i32 5
  %8539 = getelementptr inbounds %struct.Reg, %struct.Reg* %8538, i32 0, i32 0
  %RCX.i3109 = bitcast %union.anon* %8539 to i64*
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 9
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %RSI.i3110 = bitcast %union.anon* %8542 to i64*
  %8543 = load i64, i64* %RCX.i3109
  %8544 = load i64, i64* %PC.i3108
  %8545 = add i64 %8544, 3
  store i64 %8545, i64* %PC.i3108
  store i64 %8543, i64* %RSI.i3110, align 8
  store %struct.Memory* %loadMem_4aae14, %struct.Memory** %MEMORY
  %loadMem_4aae17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 33
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %PC.i3105 = bitcast %union.anon* %8548 to i64*
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 7
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %RDX.i3106 = bitcast %union.anon* %8551 to i64*
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 9
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %RSI.i3107 = bitcast %union.anon* %8554 to i64*
  %8555 = load i64, i64* %RSI.i3107
  %8556 = load i64, i64* %RDX.i3106
  %8557 = load i64, i64* %PC.i3105
  %8558 = add i64 %8557, 3
  store i64 %8558, i64* %PC.i3105
  %8559 = add i64 %8556, %8555
  store i64 %8559, i64* %RSI.i3107, align 8
  %8560 = icmp ult i64 %8559, %8555
  %8561 = icmp ult i64 %8559, %8556
  %8562 = or i1 %8560, %8561
  %8563 = zext i1 %8562 to i8
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8563, i8* %8564, align 1
  %8565 = trunc i64 %8559 to i32
  %8566 = and i32 %8565, 255
  %8567 = call i32 @llvm.ctpop.i32(i32 %8566)
  %8568 = trunc i32 %8567 to i8
  %8569 = and i8 %8568, 1
  %8570 = xor i8 %8569, 1
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8570, i8* %8571, align 1
  %8572 = xor i64 %8556, %8555
  %8573 = xor i64 %8572, %8559
  %8574 = lshr i64 %8573, 4
  %8575 = trunc i64 %8574 to i8
  %8576 = and i8 %8575, 1
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8576, i8* %8577, align 1
  %8578 = icmp eq i64 %8559, 0
  %8579 = zext i1 %8578 to i8
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8579, i8* %8580, align 1
  %8581 = lshr i64 %8559, 63
  %8582 = trunc i64 %8581 to i8
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8582, i8* %8583, align 1
  %8584 = lshr i64 %8555, 63
  %8585 = lshr i64 %8556, 63
  %8586 = xor i64 %8581, %8584
  %8587 = xor i64 %8581, %8585
  %8588 = add i64 %8586, %8587
  %8589 = icmp eq i64 %8588, 2
  %8590 = zext i1 %8589 to i8
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8590, i8* %8591, align 1
  store %struct.Memory* %loadMem_4aae17, %struct.Memory** %MEMORY
  %loadMem_4aae1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8593 = getelementptr inbounds %struct.GPR, %struct.GPR* %8592, i32 0, i32 33
  %8594 = getelementptr inbounds %struct.Reg, %struct.Reg* %8593, i32 0, i32 0
  %PC.i3102 = bitcast %union.anon* %8594 to i64*
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8596 = getelementptr inbounds %struct.GPR, %struct.GPR* %8595, i32 0, i32 9
  %8597 = getelementptr inbounds %struct.Reg, %struct.Reg* %8596, i32 0, i32 0
  %RSI.i3103 = bitcast %union.anon* %8597 to i64*
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8599 = getelementptr inbounds %struct.GPR, %struct.GPR* %8598, i32 0, i32 11
  %8600 = getelementptr inbounds %struct.Reg, %struct.Reg* %8599, i32 0, i32 0
  %RDI.i3104 = bitcast %union.anon* %8600 to i64*
  %8601 = load i64, i64* %RSI.i3103
  %8602 = add i64 %8601, 4
  %8603 = load i64, i64* %PC.i3102
  %8604 = add i64 %8603, 3
  store i64 %8604, i64* %PC.i3102
  %8605 = inttoptr i64 %8602 to i32*
  %8606 = load i32, i32* %8605
  %8607 = zext i32 %8606 to i64
  store i64 %8607, i64* %RDI.i3104, align 8
  store %struct.Memory* %loadMem_4aae1a, %struct.Memory** %MEMORY
  %loadMem_4aae1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 33
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %PC.i3099 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 7
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %RDX.i3100 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 15
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RBP.i3101 = bitcast %union.anon* %8616 to i64*
  %8617 = load i64, i64* %RBP.i3101
  %8618 = sub i64 %8617, 24
  %8619 = load i64, i64* %PC.i3099
  %8620 = add i64 %8619, 4
  store i64 %8620, i64* %PC.i3099
  %8621 = inttoptr i64 %8618 to i32*
  %8622 = load i32, i32* %8621
  %8623 = sext i32 %8622 to i64
  store i64 %8623, i64* %RDX.i3100, align 8
  store %struct.Memory* %loadMem_4aae1d, %struct.Memory** %MEMORY
  %loadMem_4aae21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 33
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %PC.i3097 = bitcast %union.anon* %8626 to i64*
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8628 = getelementptr inbounds %struct.GPR, %struct.GPR* %8627, i32 0, i32 7
  %8629 = getelementptr inbounds %struct.Reg, %struct.Reg* %8628, i32 0, i32 0
  %RDX.i3098 = bitcast %union.anon* %8629 to i64*
  %8630 = load i64, i64* %RDX.i3098
  %8631 = load i64, i64* %PC.i3097
  %8632 = add i64 %8631, 4
  store i64 %8632, i64* %PC.i3097
  %8633 = shl i64 %8630, 4
  %8634 = icmp slt i64 %8633, 0
  %8635 = shl i64 %8633, 1
  store i64 %8635, i64* %RDX.i3098, align 8
  %8636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8637 = zext i1 %8634 to i8
  store i8 %8637, i8* %8636, align 1
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8639 = trunc i64 %8635 to i32
  %8640 = and i32 %8639, 254
  %8641 = call i32 @llvm.ctpop.i32(i32 %8640)
  %8642 = trunc i32 %8641 to i8
  %8643 = and i8 %8642, 1
  %8644 = xor i8 %8643, 1
  store i8 %8644, i8* %8638, align 1
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8645, align 1
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8647 = icmp eq i64 %8635, 0
  %8648 = zext i1 %8647 to i8
  store i8 %8648, i8* %8646, align 1
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8650 = lshr i64 %8635, 63
  %8651 = trunc i64 %8650 to i8
  store i8 %8651, i8* %8649, align 1
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8652, align 1
  store %struct.Memory* %loadMem_4aae21, %struct.Memory** %MEMORY
  %loadMem_4aae25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8654 = getelementptr inbounds %struct.GPR, %struct.GPR* %8653, i32 0, i32 33
  %8655 = getelementptr inbounds %struct.Reg, %struct.Reg* %8654, i32 0, i32 0
  %PC.i3094 = bitcast %union.anon* %8655 to i64*
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8657 = getelementptr inbounds %struct.GPR, %struct.GPR* %8656, i32 0, i32 5
  %8658 = getelementptr inbounds %struct.Reg, %struct.Reg* %8657, i32 0, i32 0
  %RCX.i3095 = bitcast %union.anon* %8658 to i64*
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 9
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %RSI.i3096 = bitcast %union.anon* %8661 to i64*
  %8662 = load i64, i64* %RCX.i3095
  %8663 = load i64, i64* %PC.i3094
  %8664 = add i64 %8663, 3
  store i64 %8664, i64* %PC.i3094
  store i64 %8662, i64* %RSI.i3096, align 8
  store %struct.Memory* %loadMem_4aae25, %struct.Memory** %MEMORY
  %loadMem_4aae28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8666 = getelementptr inbounds %struct.GPR, %struct.GPR* %8665, i32 0, i32 33
  %8667 = getelementptr inbounds %struct.Reg, %struct.Reg* %8666, i32 0, i32 0
  %PC.i3091 = bitcast %union.anon* %8667 to i64*
  %8668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8669 = getelementptr inbounds %struct.GPR, %struct.GPR* %8668, i32 0, i32 7
  %8670 = getelementptr inbounds %struct.Reg, %struct.Reg* %8669, i32 0, i32 0
  %RDX.i3092 = bitcast %union.anon* %8670 to i64*
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8672 = getelementptr inbounds %struct.GPR, %struct.GPR* %8671, i32 0, i32 9
  %8673 = getelementptr inbounds %struct.Reg, %struct.Reg* %8672, i32 0, i32 0
  %RSI.i3093 = bitcast %union.anon* %8673 to i64*
  %8674 = load i64, i64* %RSI.i3093
  %8675 = load i64, i64* %RDX.i3092
  %8676 = load i64, i64* %PC.i3091
  %8677 = add i64 %8676, 3
  store i64 %8677, i64* %PC.i3091
  %8678 = add i64 %8675, %8674
  store i64 %8678, i64* %RSI.i3093, align 8
  %8679 = icmp ult i64 %8678, %8674
  %8680 = icmp ult i64 %8678, %8675
  %8681 = or i1 %8679, %8680
  %8682 = zext i1 %8681 to i8
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8682, i8* %8683, align 1
  %8684 = trunc i64 %8678 to i32
  %8685 = and i32 %8684, 255
  %8686 = call i32 @llvm.ctpop.i32(i32 %8685)
  %8687 = trunc i32 %8686 to i8
  %8688 = and i8 %8687, 1
  %8689 = xor i8 %8688, 1
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8689, i8* %8690, align 1
  %8691 = xor i64 %8675, %8674
  %8692 = xor i64 %8691, %8678
  %8693 = lshr i64 %8692, 4
  %8694 = trunc i64 %8693 to i8
  %8695 = and i8 %8694, 1
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8695, i8* %8696, align 1
  %8697 = icmp eq i64 %8678, 0
  %8698 = zext i1 %8697 to i8
  %8699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8698, i8* %8699, align 1
  %8700 = lshr i64 %8678, 63
  %8701 = trunc i64 %8700 to i8
  %8702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8701, i8* %8702, align 1
  %8703 = lshr i64 %8674, 63
  %8704 = lshr i64 %8675, 63
  %8705 = xor i64 %8700, %8703
  %8706 = xor i64 %8700, %8704
  %8707 = add i64 %8705, %8706
  %8708 = icmp eq i64 %8707, 2
  %8709 = zext i1 %8708 to i8
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8709, i8* %8710, align 1
  store %struct.Memory* %loadMem_4aae28, %struct.Memory** %MEMORY
  %loadMem_4aae2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8712 = getelementptr inbounds %struct.GPR, %struct.GPR* %8711, i32 0, i32 33
  %8713 = getelementptr inbounds %struct.Reg, %struct.Reg* %8712, i32 0, i32 0
  %PC.i3088 = bitcast %union.anon* %8713 to i64*
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8715 = getelementptr inbounds %struct.GPR, %struct.GPR* %8714, i32 0, i32 9
  %8716 = getelementptr inbounds %struct.Reg, %struct.Reg* %8715, i32 0, i32 0
  %RSI.i3089 = bitcast %union.anon* %8716 to i64*
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8718 = getelementptr inbounds %struct.GPR, %struct.GPR* %8717, i32 0, i32 11
  %8719 = getelementptr inbounds %struct.Reg, %struct.Reg* %8718, i32 0, i32 0
  %RDI.i3090 = bitcast %union.anon* %8719 to i64*
  %8720 = load i64, i64* %RDI.i3090
  %8721 = load i64, i64* %RSI.i3089
  %8722 = add i64 %8721, 24
  %8723 = load i64, i64* %PC.i3088
  %8724 = add i64 %8723, 3
  store i64 %8724, i64* %PC.i3088
  %8725 = trunc i64 %8720 to i32
  %8726 = inttoptr i64 %8722 to i32*
  %8727 = load i32, i32* %8726
  %8728 = sub i32 %8725, %8727
  %8729 = zext i32 %8728 to i64
  store i64 %8729, i64* %RDI.i3090, align 8
  %8730 = icmp ult i32 %8725, %8727
  %8731 = zext i1 %8730 to i8
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8731, i8* %8732, align 1
  %8733 = and i32 %8728, 255
  %8734 = call i32 @llvm.ctpop.i32(i32 %8733)
  %8735 = trunc i32 %8734 to i8
  %8736 = and i8 %8735, 1
  %8737 = xor i8 %8736, 1
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8737, i8* %8738, align 1
  %8739 = xor i32 %8727, %8725
  %8740 = xor i32 %8739, %8728
  %8741 = lshr i32 %8740, 4
  %8742 = trunc i32 %8741 to i8
  %8743 = and i8 %8742, 1
  %8744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8743, i8* %8744, align 1
  %8745 = icmp eq i32 %8728, 0
  %8746 = zext i1 %8745 to i8
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8746, i8* %8747, align 1
  %8748 = lshr i32 %8728, 31
  %8749 = trunc i32 %8748 to i8
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8749, i8* %8750, align 1
  %8751 = lshr i32 %8725, 31
  %8752 = lshr i32 %8727, 31
  %8753 = xor i32 %8752, %8751
  %8754 = xor i32 %8748, %8751
  %8755 = add i32 %8754, %8753
  %8756 = icmp eq i32 %8755, 2
  %8757 = zext i1 %8756 to i8
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8757, i8* %8758, align 1
  store %struct.Memory* %loadMem_4aae2b, %struct.Memory** %MEMORY
  %loadMem_4aae2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8760 = getelementptr inbounds %struct.GPR, %struct.GPR* %8759, i32 0, i32 33
  %8761 = getelementptr inbounds %struct.Reg, %struct.Reg* %8760, i32 0, i32 0
  %PC.i3085 = bitcast %union.anon* %8761 to i64*
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8763 = getelementptr inbounds %struct.GPR, %struct.GPR* %8762, i32 0, i32 11
  %8764 = getelementptr inbounds %struct.Reg, %struct.Reg* %8763, i32 0, i32 0
  %EDI.i3086 = bitcast %union.anon* %8764 to i32*
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 15
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %RBP.i3087 = bitcast %union.anon* %8767 to i64*
  %8768 = load i64, i64* %RBP.i3087
  %8769 = sub i64 %8768, 492
  %8770 = load i32, i32* %EDI.i3086
  %8771 = zext i32 %8770 to i64
  %8772 = load i64, i64* %PC.i3085
  %8773 = add i64 %8772, 6
  store i64 %8773, i64* %PC.i3085
  %8774 = inttoptr i64 %8769 to i32*
  store i32 %8770, i32* %8774
  store %struct.Memory* %loadMem_4aae2e, %struct.Memory** %MEMORY
  %loadMem_4aae34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8776 = getelementptr inbounds %struct.GPR, %struct.GPR* %8775, i32 0, i32 33
  %8777 = getelementptr inbounds %struct.Reg, %struct.Reg* %8776, i32 0, i32 0
  %PC.i3082 = bitcast %union.anon* %8777 to i64*
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 7
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %RDX.i3083 = bitcast %union.anon* %8780 to i64*
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8782 = getelementptr inbounds %struct.GPR, %struct.GPR* %8781, i32 0, i32 15
  %8783 = getelementptr inbounds %struct.Reg, %struct.Reg* %8782, i32 0, i32 0
  %RBP.i3084 = bitcast %union.anon* %8783 to i64*
  %8784 = load i64, i64* %RBP.i3084
  %8785 = sub i64 %8784, 24
  %8786 = load i64, i64* %PC.i3082
  %8787 = add i64 %8786, 4
  store i64 %8787, i64* %PC.i3082
  %8788 = inttoptr i64 %8785 to i32*
  %8789 = load i32, i32* %8788
  %8790 = sext i32 %8789 to i64
  store i64 %8790, i64* %RDX.i3083, align 8
  store %struct.Memory* %loadMem_4aae34, %struct.Memory** %MEMORY
  %loadMem_4aae38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8792 = getelementptr inbounds %struct.GPR, %struct.GPR* %8791, i32 0, i32 33
  %8793 = getelementptr inbounds %struct.Reg, %struct.Reg* %8792, i32 0, i32 0
  %PC.i3080 = bitcast %union.anon* %8793 to i64*
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 7
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %RDX.i3081 = bitcast %union.anon* %8796 to i64*
  %8797 = load i64, i64* %RDX.i3081
  %8798 = load i64, i64* %PC.i3080
  %8799 = add i64 %8798, 4
  store i64 %8799, i64* %PC.i3080
  %8800 = shl i64 %8797, 4
  %8801 = icmp slt i64 %8800, 0
  %8802 = shl i64 %8800, 1
  store i64 %8802, i64* %RDX.i3081, align 8
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8804 = zext i1 %8801 to i8
  store i8 %8804, i8* %8803, align 1
  %8805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8806 = trunc i64 %8802 to i32
  %8807 = and i32 %8806, 254
  %8808 = call i32 @llvm.ctpop.i32(i32 %8807)
  %8809 = trunc i32 %8808 to i8
  %8810 = and i8 %8809, 1
  %8811 = xor i8 %8810, 1
  store i8 %8811, i8* %8805, align 1
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8812, align 1
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8814 = icmp eq i64 %8802, 0
  %8815 = zext i1 %8814 to i8
  store i8 %8815, i8* %8813, align 1
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8817 = lshr i64 %8802, 63
  %8818 = trunc i64 %8817 to i8
  store i8 %8818, i8* %8816, align 1
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8819, align 1
  store %struct.Memory* %loadMem_4aae38, %struct.Memory** %MEMORY
  %loadMem_4aae3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8821 = getelementptr inbounds %struct.GPR, %struct.GPR* %8820, i32 0, i32 33
  %8822 = getelementptr inbounds %struct.Reg, %struct.Reg* %8821, i32 0, i32 0
  %PC.i3077 = bitcast %union.anon* %8822 to i64*
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8824 = getelementptr inbounds %struct.GPR, %struct.GPR* %8823, i32 0, i32 5
  %8825 = getelementptr inbounds %struct.Reg, %struct.Reg* %8824, i32 0, i32 0
  %RCX.i3078 = bitcast %union.anon* %8825 to i64*
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8827 = getelementptr inbounds %struct.GPR, %struct.GPR* %8826, i32 0, i32 9
  %8828 = getelementptr inbounds %struct.Reg, %struct.Reg* %8827, i32 0, i32 0
  %RSI.i3079 = bitcast %union.anon* %8828 to i64*
  %8829 = load i64, i64* %RCX.i3078
  %8830 = load i64, i64* %PC.i3077
  %8831 = add i64 %8830, 3
  store i64 %8831, i64* %PC.i3077
  store i64 %8829, i64* %RSI.i3079, align 8
  store %struct.Memory* %loadMem_4aae3c, %struct.Memory** %MEMORY
  %loadMem_4aae3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8833 = getelementptr inbounds %struct.GPR, %struct.GPR* %8832, i32 0, i32 33
  %8834 = getelementptr inbounds %struct.Reg, %struct.Reg* %8833, i32 0, i32 0
  %PC.i3074 = bitcast %union.anon* %8834 to i64*
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8836 = getelementptr inbounds %struct.GPR, %struct.GPR* %8835, i32 0, i32 7
  %8837 = getelementptr inbounds %struct.Reg, %struct.Reg* %8836, i32 0, i32 0
  %RDX.i3075 = bitcast %union.anon* %8837 to i64*
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8839 = getelementptr inbounds %struct.GPR, %struct.GPR* %8838, i32 0, i32 9
  %8840 = getelementptr inbounds %struct.Reg, %struct.Reg* %8839, i32 0, i32 0
  %RSI.i3076 = bitcast %union.anon* %8840 to i64*
  %8841 = load i64, i64* %RSI.i3076
  %8842 = load i64, i64* %RDX.i3075
  %8843 = load i64, i64* %PC.i3074
  %8844 = add i64 %8843, 3
  store i64 %8844, i64* %PC.i3074
  %8845 = add i64 %8842, %8841
  store i64 %8845, i64* %RSI.i3076, align 8
  %8846 = icmp ult i64 %8845, %8841
  %8847 = icmp ult i64 %8845, %8842
  %8848 = or i1 %8846, %8847
  %8849 = zext i1 %8848 to i8
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8849, i8* %8850, align 1
  %8851 = trunc i64 %8845 to i32
  %8852 = and i32 %8851, 255
  %8853 = call i32 @llvm.ctpop.i32(i32 %8852)
  %8854 = trunc i32 %8853 to i8
  %8855 = and i8 %8854, 1
  %8856 = xor i8 %8855, 1
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8856, i8* %8857, align 1
  %8858 = xor i64 %8842, %8841
  %8859 = xor i64 %8858, %8845
  %8860 = lshr i64 %8859, 4
  %8861 = trunc i64 %8860 to i8
  %8862 = and i8 %8861, 1
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8862, i8* %8863, align 1
  %8864 = icmp eq i64 %8845, 0
  %8865 = zext i1 %8864 to i8
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8865, i8* %8866, align 1
  %8867 = lshr i64 %8845, 63
  %8868 = trunc i64 %8867 to i8
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8868, i8* %8869, align 1
  %8870 = lshr i64 %8841, 63
  %8871 = lshr i64 %8842, 63
  %8872 = xor i64 %8867, %8870
  %8873 = xor i64 %8867, %8871
  %8874 = add i64 %8872, %8873
  %8875 = icmp eq i64 %8874, 2
  %8876 = zext i1 %8875 to i8
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8876, i8* %8877, align 1
  store %struct.Memory* %loadMem_4aae3f, %struct.Memory** %MEMORY
  %loadMem_4aae42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8879 = getelementptr inbounds %struct.GPR, %struct.GPR* %8878, i32 0, i32 33
  %8880 = getelementptr inbounds %struct.Reg, %struct.Reg* %8879, i32 0, i32 0
  %PC.i3071 = bitcast %union.anon* %8880 to i64*
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8882 = getelementptr inbounds %struct.GPR, %struct.GPR* %8881, i32 0, i32 9
  %8883 = getelementptr inbounds %struct.Reg, %struct.Reg* %8882, i32 0, i32 0
  %RSI.i3072 = bitcast %union.anon* %8883 to i64*
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8885 = getelementptr inbounds %struct.GPR, %struct.GPR* %8884, i32 0, i32 11
  %8886 = getelementptr inbounds %struct.Reg, %struct.Reg* %8885, i32 0, i32 0
  %RDI.i3073 = bitcast %union.anon* %8886 to i64*
  %8887 = load i64, i64* %RSI.i3072
  %8888 = add i64 %8887, 8
  %8889 = load i64, i64* %PC.i3071
  %8890 = add i64 %8889, 3
  store i64 %8890, i64* %PC.i3071
  %8891 = inttoptr i64 %8888 to i32*
  %8892 = load i32, i32* %8891
  %8893 = zext i32 %8892 to i64
  store i64 %8893, i64* %RDI.i3073, align 8
  store %struct.Memory* %loadMem_4aae42, %struct.Memory** %MEMORY
  %loadMem_4aae45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8895 = getelementptr inbounds %struct.GPR, %struct.GPR* %8894, i32 0, i32 33
  %8896 = getelementptr inbounds %struct.Reg, %struct.Reg* %8895, i32 0, i32 0
  %PC.i3068 = bitcast %union.anon* %8896 to i64*
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8898 = getelementptr inbounds %struct.GPR, %struct.GPR* %8897, i32 0, i32 7
  %8899 = getelementptr inbounds %struct.Reg, %struct.Reg* %8898, i32 0, i32 0
  %RDX.i3069 = bitcast %union.anon* %8899 to i64*
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8901 = getelementptr inbounds %struct.GPR, %struct.GPR* %8900, i32 0, i32 15
  %8902 = getelementptr inbounds %struct.Reg, %struct.Reg* %8901, i32 0, i32 0
  %RBP.i3070 = bitcast %union.anon* %8902 to i64*
  %8903 = load i64, i64* %RBP.i3070
  %8904 = sub i64 %8903, 24
  %8905 = load i64, i64* %PC.i3068
  %8906 = add i64 %8905, 4
  store i64 %8906, i64* %PC.i3068
  %8907 = inttoptr i64 %8904 to i32*
  %8908 = load i32, i32* %8907
  %8909 = sext i32 %8908 to i64
  store i64 %8909, i64* %RDX.i3069, align 8
  store %struct.Memory* %loadMem_4aae45, %struct.Memory** %MEMORY
  %loadMem_4aae49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8911 = getelementptr inbounds %struct.GPR, %struct.GPR* %8910, i32 0, i32 33
  %8912 = getelementptr inbounds %struct.Reg, %struct.Reg* %8911, i32 0, i32 0
  %PC.i3066 = bitcast %union.anon* %8912 to i64*
  %8913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8914 = getelementptr inbounds %struct.GPR, %struct.GPR* %8913, i32 0, i32 7
  %8915 = getelementptr inbounds %struct.Reg, %struct.Reg* %8914, i32 0, i32 0
  %RDX.i3067 = bitcast %union.anon* %8915 to i64*
  %8916 = load i64, i64* %RDX.i3067
  %8917 = load i64, i64* %PC.i3066
  %8918 = add i64 %8917, 4
  store i64 %8918, i64* %PC.i3066
  %8919 = shl i64 %8916, 4
  %8920 = icmp slt i64 %8919, 0
  %8921 = shl i64 %8919, 1
  store i64 %8921, i64* %RDX.i3067, align 8
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8923 = zext i1 %8920 to i8
  store i8 %8923, i8* %8922, align 1
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8925 = trunc i64 %8921 to i32
  %8926 = and i32 %8925, 254
  %8927 = call i32 @llvm.ctpop.i32(i32 %8926)
  %8928 = trunc i32 %8927 to i8
  %8929 = and i8 %8928, 1
  %8930 = xor i8 %8929, 1
  store i8 %8930, i8* %8924, align 1
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8931, align 1
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8933 = icmp eq i64 %8921, 0
  %8934 = zext i1 %8933 to i8
  store i8 %8934, i8* %8932, align 1
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8936 = lshr i64 %8921, 63
  %8937 = trunc i64 %8936 to i8
  store i8 %8937, i8* %8935, align 1
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8938, align 1
  store %struct.Memory* %loadMem_4aae49, %struct.Memory** %MEMORY
  %loadMem_4aae4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8940 = getelementptr inbounds %struct.GPR, %struct.GPR* %8939, i32 0, i32 33
  %8941 = getelementptr inbounds %struct.Reg, %struct.Reg* %8940, i32 0, i32 0
  %PC.i3063 = bitcast %union.anon* %8941 to i64*
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8943 = getelementptr inbounds %struct.GPR, %struct.GPR* %8942, i32 0, i32 5
  %8944 = getelementptr inbounds %struct.Reg, %struct.Reg* %8943, i32 0, i32 0
  %RCX.i3064 = bitcast %union.anon* %8944 to i64*
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 9
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %RSI.i3065 = bitcast %union.anon* %8947 to i64*
  %8948 = load i64, i64* %RCX.i3064
  %8949 = load i64, i64* %PC.i3063
  %8950 = add i64 %8949, 3
  store i64 %8950, i64* %PC.i3063
  store i64 %8948, i64* %RSI.i3065, align 8
  store %struct.Memory* %loadMem_4aae4d, %struct.Memory** %MEMORY
  %loadMem_4aae50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8952 = getelementptr inbounds %struct.GPR, %struct.GPR* %8951, i32 0, i32 33
  %8953 = getelementptr inbounds %struct.Reg, %struct.Reg* %8952, i32 0, i32 0
  %PC.i3060 = bitcast %union.anon* %8953 to i64*
  %8954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8955 = getelementptr inbounds %struct.GPR, %struct.GPR* %8954, i32 0, i32 7
  %8956 = getelementptr inbounds %struct.Reg, %struct.Reg* %8955, i32 0, i32 0
  %RDX.i3061 = bitcast %union.anon* %8956 to i64*
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8958 = getelementptr inbounds %struct.GPR, %struct.GPR* %8957, i32 0, i32 9
  %8959 = getelementptr inbounds %struct.Reg, %struct.Reg* %8958, i32 0, i32 0
  %RSI.i3062 = bitcast %union.anon* %8959 to i64*
  %8960 = load i64, i64* %RSI.i3062
  %8961 = load i64, i64* %RDX.i3061
  %8962 = load i64, i64* %PC.i3060
  %8963 = add i64 %8962, 3
  store i64 %8963, i64* %PC.i3060
  %8964 = add i64 %8961, %8960
  store i64 %8964, i64* %RSI.i3062, align 8
  %8965 = icmp ult i64 %8964, %8960
  %8966 = icmp ult i64 %8964, %8961
  %8967 = or i1 %8965, %8966
  %8968 = zext i1 %8967 to i8
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8968, i8* %8969, align 1
  %8970 = trunc i64 %8964 to i32
  %8971 = and i32 %8970, 255
  %8972 = call i32 @llvm.ctpop.i32(i32 %8971)
  %8973 = trunc i32 %8972 to i8
  %8974 = and i8 %8973, 1
  %8975 = xor i8 %8974, 1
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8975, i8* %8976, align 1
  %8977 = xor i64 %8961, %8960
  %8978 = xor i64 %8977, %8964
  %8979 = lshr i64 %8978, 4
  %8980 = trunc i64 %8979 to i8
  %8981 = and i8 %8980, 1
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8981, i8* %8982, align 1
  %8983 = icmp eq i64 %8964, 0
  %8984 = zext i1 %8983 to i8
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8984, i8* %8985, align 1
  %8986 = lshr i64 %8964, 63
  %8987 = trunc i64 %8986 to i8
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8987, i8* %8988, align 1
  %8989 = lshr i64 %8960, 63
  %8990 = lshr i64 %8961, 63
  %8991 = xor i64 %8986, %8989
  %8992 = xor i64 %8986, %8990
  %8993 = add i64 %8991, %8992
  %8994 = icmp eq i64 %8993, 2
  %8995 = zext i1 %8994 to i8
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8995, i8* %8996, align 1
  store %struct.Memory* %loadMem_4aae50, %struct.Memory** %MEMORY
  %loadMem_4aae53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 33
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %PC.i3057 = bitcast %union.anon* %8999 to i64*
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 9
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %RSI.i3058 = bitcast %union.anon* %9002 to i64*
  %9003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9004 = getelementptr inbounds %struct.GPR, %struct.GPR* %9003, i32 0, i32 11
  %9005 = getelementptr inbounds %struct.Reg, %struct.Reg* %9004, i32 0, i32 0
  %RDI.i3059 = bitcast %union.anon* %9005 to i64*
  %9006 = load i64, i64* %RDI.i3059
  %9007 = load i64, i64* %RSI.i3058
  %9008 = add i64 %9007, 20
  %9009 = load i64, i64* %PC.i3057
  %9010 = add i64 %9009, 3
  store i64 %9010, i64* %PC.i3057
  %9011 = trunc i64 %9006 to i32
  %9012 = inttoptr i64 %9008 to i32*
  %9013 = load i32, i32* %9012
  %9014 = sub i32 %9011, %9013
  %9015 = zext i32 %9014 to i64
  store i64 %9015, i64* %RDI.i3059, align 8
  %9016 = icmp ult i32 %9011, %9013
  %9017 = zext i1 %9016 to i8
  %9018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9017, i8* %9018, align 1
  %9019 = and i32 %9014, 255
  %9020 = call i32 @llvm.ctpop.i32(i32 %9019)
  %9021 = trunc i32 %9020 to i8
  %9022 = and i8 %9021, 1
  %9023 = xor i8 %9022, 1
  %9024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9023, i8* %9024, align 1
  %9025 = xor i32 %9013, %9011
  %9026 = xor i32 %9025, %9014
  %9027 = lshr i32 %9026, 4
  %9028 = trunc i32 %9027 to i8
  %9029 = and i8 %9028, 1
  %9030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9029, i8* %9030, align 1
  %9031 = icmp eq i32 %9014, 0
  %9032 = zext i1 %9031 to i8
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9032, i8* %9033, align 1
  %9034 = lshr i32 %9014, 31
  %9035 = trunc i32 %9034 to i8
  %9036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9035, i8* %9036, align 1
  %9037 = lshr i32 %9011, 31
  %9038 = lshr i32 %9013, 31
  %9039 = xor i32 %9038, %9037
  %9040 = xor i32 %9034, %9037
  %9041 = add i32 %9040, %9039
  %9042 = icmp eq i32 %9041, 2
  %9043 = zext i1 %9042 to i8
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9043, i8* %9044, align 1
  store %struct.Memory* %loadMem_4aae53, %struct.Memory** %MEMORY
  %loadMem_4aae56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9046 = getelementptr inbounds %struct.GPR, %struct.GPR* %9045, i32 0, i32 33
  %9047 = getelementptr inbounds %struct.Reg, %struct.Reg* %9046, i32 0, i32 0
  %PC.i3054 = bitcast %union.anon* %9047 to i64*
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9049 = getelementptr inbounds %struct.GPR, %struct.GPR* %9048, i32 0, i32 11
  %9050 = getelementptr inbounds %struct.Reg, %struct.Reg* %9049, i32 0, i32 0
  %EDI.i3055 = bitcast %union.anon* %9050 to i32*
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9052 = getelementptr inbounds %struct.GPR, %struct.GPR* %9051, i32 0, i32 15
  %9053 = getelementptr inbounds %struct.Reg, %struct.Reg* %9052, i32 0, i32 0
  %RBP.i3056 = bitcast %union.anon* %9053 to i64*
  %9054 = load i64, i64* %RBP.i3056
  %9055 = sub i64 %9054, 488
  %9056 = load i32, i32* %EDI.i3055
  %9057 = zext i32 %9056 to i64
  %9058 = load i64, i64* %PC.i3054
  %9059 = add i64 %9058, 6
  store i64 %9059, i64* %PC.i3054
  %9060 = inttoptr i64 %9055 to i32*
  store i32 %9056, i32* %9060
  store %struct.Memory* %loadMem_4aae56, %struct.Memory** %MEMORY
  %loadMem_4aae5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9062 = getelementptr inbounds %struct.GPR, %struct.GPR* %9061, i32 0, i32 33
  %9063 = getelementptr inbounds %struct.Reg, %struct.Reg* %9062, i32 0, i32 0
  %PC.i3051 = bitcast %union.anon* %9063 to i64*
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9065 = getelementptr inbounds %struct.GPR, %struct.GPR* %9064, i32 0, i32 7
  %9066 = getelementptr inbounds %struct.Reg, %struct.Reg* %9065, i32 0, i32 0
  %RDX.i3052 = bitcast %union.anon* %9066 to i64*
  %9067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9068 = getelementptr inbounds %struct.GPR, %struct.GPR* %9067, i32 0, i32 15
  %9069 = getelementptr inbounds %struct.Reg, %struct.Reg* %9068, i32 0, i32 0
  %RBP.i3053 = bitcast %union.anon* %9069 to i64*
  %9070 = load i64, i64* %RBP.i3053
  %9071 = sub i64 %9070, 24
  %9072 = load i64, i64* %PC.i3051
  %9073 = add i64 %9072, 4
  store i64 %9073, i64* %PC.i3051
  %9074 = inttoptr i64 %9071 to i32*
  %9075 = load i32, i32* %9074
  %9076 = sext i32 %9075 to i64
  store i64 %9076, i64* %RDX.i3052, align 8
  store %struct.Memory* %loadMem_4aae5c, %struct.Memory** %MEMORY
  %loadMem_4aae60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9078 = getelementptr inbounds %struct.GPR, %struct.GPR* %9077, i32 0, i32 33
  %9079 = getelementptr inbounds %struct.Reg, %struct.Reg* %9078, i32 0, i32 0
  %PC.i3049 = bitcast %union.anon* %9079 to i64*
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9081 = getelementptr inbounds %struct.GPR, %struct.GPR* %9080, i32 0, i32 7
  %9082 = getelementptr inbounds %struct.Reg, %struct.Reg* %9081, i32 0, i32 0
  %RDX.i3050 = bitcast %union.anon* %9082 to i64*
  %9083 = load i64, i64* %RDX.i3050
  %9084 = load i64, i64* %PC.i3049
  %9085 = add i64 %9084, 4
  store i64 %9085, i64* %PC.i3049
  %9086 = shl i64 %9083, 4
  %9087 = icmp slt i64 %9086, 0
  %9088 = shl i64 %9086, 1
  store i64 %9088, i64* %RDX.i3050, align 8
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9090 = zext i1 %9087 to i8
  store i8 %9090, i8* %9089, align 1
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9092 = trunc i64 %9088 to i32
  %9093 = and i32 %9092, 254
  %9094 = call i32 @llvm.ctpop.i32(i32 %9093)
  %9095 = trunc i32 %9094 to i8
  %9096 = and i8 %9095, 1
  %9097 = xor i8 %9096, 1
  store i8 %9097, i8* %9091, align 1
  %9098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9098, align 1
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9100 = icmp eq i64 %9088, 0
  %9101 = zext i1 %9100 to i8
  store i8 %9101, i8* %9099, align 1
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9103 = lshr i64 %9088, 63
  %9104 = trunc i64 %9103 to i8
  store i8 %9104, i8* %9102, align 1
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9105, align 1
  store %struct.Memory* %loadMem_4aae60, %struct.Memory** %MEMORY
  %loadMem_4aae64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 33
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %PC.i3046 = bitcast %union.anon* %9108 to i64*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 5
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %RCX.i3047 = bitcast %union.anon* %9111 to i64*
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9113 = getelementptr inbounds %struct.GPR, %struct.GPR* %9112, i32 0, i32 9
  %9114 = getelementptr inbounds %struct.Reg, %struct.Reg* %9113, i32 0, i32 0
  %RSI.i3048 = bitcast %union.anon* %9114 to i64*
  %9115 = load i64, i64* %RCX.i3047
  %9116 = load i64, i64* %PC.i3046
  %9117 = add i64 %9116, 3
  store i64 %9117, i64* %PC.i3046
  store i64 %9115, i64* %RSI.i3048, align 8
  store %struct.Memory* %loadMem_4aae64, %struct.Memory** %MEMORY
  %loadMem_4aae67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9119 = getelementptr inbounds %struct.GPR, %struct.GPR* %9118, i32 0, i32 33
  %9120 = getelementptr inbounds %struct.Reg, %struct.Reg* %9119, i32 0, i32 0
  %PC.i3043 = bitcast %union.anon* %9120 to i64*
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9122 = getelementptr inbounds %struct.GPR, %struct.GPR* %9121, i32 0, i32 7
  %9123 = getelementptr inbounds %struct.Reg, %struct.Reg* %9122, i32 0, i32 0
  %RDX.i3044 = bitcast %union.anon* %9123 to i64*
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9125 = getelementptr inbounds %struct.GPR, %struct.GPR* %9124, i32 0, i32 9
  %9126 = getelementptr inbounds %struct.Reg, %struct.Reg* %9125, i32 0, i32 0
  %RSI.i3045 = bitcast %union.anon* %9126 to i64*
  %9127 = load i64, i64* %RSI.i3045
  %9128 = load i64, i64* %RDX.i3044
  %9129 = load i64, i64* %PC.i3043
  %9130 = add i64 %9129, 3
  store i64 %9130, i64* %PC.i3043
  %9131 = add i64 %9128, %9127
  store i64 %9131, i64* %RSI.i3045, align 8
  %9132 = icmp ult i64 %9131, %9127
  %9133 = icmp ult i64 %9131, %9128
  %9134 = or i1 %9132, %9133
  %9135 = zext i1 %9134 to i8
  %9136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9135, i8* %9136, align 1
  %9137 = trunc i64 %9131 to i32
  %9138 = and i32 %9137, 255
  %9139 = call i32 @llvm.ctpop.i32(i32 %9138)
  %9140 = trunc i32 %9139 to i8
  %9141 = and i8 %9140, 1
  %9142 = xor i8 %9141, 1
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9142, i8* %9143, align 1
  %9144 = xor i64 %9128, %9127
  %9145 = xor i64 %9144, %9131
  %9146 = lshr i64 %9145, 4
  %9147 = trunc i64 %9146 to i8
  %9148 = and i8 %9147, 1
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9148, i8* %9149, align 1
  %9150 = icmp eq i64 %9131, 0
  %9151 = zext i1 %9150 to i8
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9151, i8* %9152, align 1
  %9153 = lshr i64 %9131, 63
  %9154 = trunc i64 %9153 to i8
  %9155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9154, i8* %9155, align 1
  %9156 = lshr i64 %9127, 63
  %9157 = lshr i64 %9128, 63
  %9158 = xor i64 %9153, %9156
  %9159 = xor i64 %9153, %9157
  %9160 = add i64 %9158, %9159
  %9161 = icmp eq i64 %9160, 2
  %9162 = zext i1 %9161 to i8
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9162, i8* %9163, align 1
  store %struct.Memory* %loadMem_4aae67, %struct.Memory** %MEMORY
  %loadMem_4aae6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 33
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %PC.i3040 = bitcast %union.anon* %9166 to i64*
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9168 = getelementptr inbounds %struct.GPR, %struct.GPR* %9167, i32 0, i32 9
  %9169 = getelementptr inbounds %struct.Reg, %struct.Reg* %9168, i32 0, i32 0
  %RSI.i3041 = bitcast %union.anon* %9169 to i64*
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9171 = getelementptr inbounds %struct.GPR, %struct.GPR* %9170, i32 0, i32 11
  %9172 = getelementptr inbounds %struct.Reg, %struct.Reg* %9171, i32 0, i32 0
  %RDI.i3042 = bitcast %union.anon* %9172 to i64*
  %9173 = load i64, i64* %RSI.i3041
  %9174 = add i64 %9173, 12
  %9175 = load i64, i64* %PC.i3040
  %9176 = add i64 %9175, 3
  store i64 %9176, i64* %PC.i3040
  %9177 = inttoptr i64 %9174 to i32*
  %9178 = load i32, i32* %9177
  %9179 = zext i32 %9178 to i64
  store i64 %9179, i64* %RDI.i3042, align 8
  store %struct.Memory* %loadMem_4aae6a, %struct.Memory** %MEMORY
  %loadMem_4aae6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 33
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %PC.i3037 = bitcast %union.anon* %9182 to i64*
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 7
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %RDX.i3038 = bitcast %union.anon* %9185 to i64*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 15
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RBP.i3039 = bitcast %union.anon* %9188 to i64*
  %9189 = load i64, i64* %RBP.i3039
  %9190 = sub i64 %9189, 24
  %9191 = load i64, i64* %PC.i3037
  %9192 = add i64 %9191, 4
  store i64 %9192, i64* %PC.i3037
  %9193 = inttoptr i64 %9190 to i32*
  %9194 = load i32, i32* %9193
  %9195 = sext i32 %9194 to i64
  store i64 %9195, i64* %RDX.i3038, align 8
  store %struct.Memory* %loadMem_4aae6d, %struct.Memory** %MEMORY
  %loadMem_4aae71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9197 = getelementptr inbounds %struct.GPR, %struct.GPR* %9196, i32 0, i32 33
  %9198 = getelementptr inbounds %struct.Reg, %struct.Reg* %9197, i32 0, i32 0
  %PC.i3035 = bitcast %union.anon* %9198 to i64*
  %9199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9200 = getelementptr inbounds %struct.GPR, %struct.GPR* %9199, i32 0, i32 7
  %9201 = getelementptr inbounds %struct.Reg, %struct.Reg* %9200, i32 0, i32 0
  %RDX.i3036 = bitcast %union.anon* %9201 to i64*
  %9202 = load i64, i64* %RDX.i3036
  %9203 = load i64, i64* %PC.i3035
  %9204 = add i64 %9203, 4
  store i64 %9204, i64* %PC.i3035
  %9205 = shl i64 %9202, 4
  %9206 = icmp slt i64 %9205, 0
  %9207 = shl i64 %9205, 1
  store i64 %9207, i64* %RDX.i3036, align 8
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9209 = zext i1 %9206 to i8
  store i8 %9209, i8* %9208, align 1
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9211 = trunc i64 %9207 to i32
  %9212 = and i32 %9211, 254
  %9213 = call i32 @llvm.ctpop.i32(i32 %9212)
  %9214 = trunc i32 %9213 to i8
  %9215 = and i8 %9214, 1
  %9216 = xor i8 %9215, 1
  store i8 %9216, i8* %9210, align 1
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9217, align 1
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9219 = icmp eq i64 %9207, 0
  %9220 = zext i1 %9219 to i8
  store i8 %9220, i8* %9218, align 1
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9222 = lshr i64 %9207, 63
  %9223 = trunc i64 %9222 to i8
  store i8 %9223, i8* %9221, align 1
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9224, align 1
  store %struct.Memory* %loadMem_4aae71, %struct.Memory** %MEMORY
  %loadMem_4aae75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 33
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %PC.i3032 = bitcast %union.anon* %9227 to i64*
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9229 = getelementptr inbounds %struct.GPR, %struct.GPR* %9228, i32 0, i32 5
  %9230 = getelementptr inbounds %struct.Reg, %struct.Reg* %9229, i32 0, i32 0
  %RCX.i3033 = bitcast %union.anon* %9230 to i64*
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9232 = getelementptr inbounds %struct.GPR, %struct.GPR* %9231, i32 0, i32 7
  %9233 = getelementptr inbounds %struct.Reg, %struct.Reg* %9232, i32 0, i32 0
  %RDX.i3034 = bitcast %union.anon* %9233 to i64*
  %9234 = load i64, i64* %RCX.i3033
  %9235 = load i64, i64* %RDX.i3034
  %9236 = load i64, i64* %PC.i3032
  %9237 = add i64 %9236, 3
  store i64 %9237, i64* %PC.i3032
  %9238 = add i64 %9235, %9234
  store i64 %9238, i64* %RCX.i3033, align 8
  %9239 = icmp ult i64 %9238, %9234
  %9240 = icmp ult i64 %9238, %9235
  %9241 = or i1 %9239, %9240
  %9242 = zext i1 %9241 to i8
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9242, i8* %9243, align 1
  %9244 = trunc i64 %9238 to i32
  %9245 = and i32 %9244, 255
  %9246 = call i32 @llvm.ctpop.i32(i32 %9245)
  %9247 = trunc i32 %9246 to i8
  %9248 = and i8 %9247, 1
  %9249 = xor i8 %9248, 1
  %9250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9249, i8* %9250, align 1
  %9251 = xor i64 %9235, %9234
  %9252 = xor i64 %9251, %9238
  %9253 = lshr i64 %9252, 4
  %9254 = trunc i64 %9253 to i8
  %9255 = and i8 %9254, 1
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9255, i8* %9256, align 1
  %9257 = icmp eq i64 %9238, 0
  %9258 = zext i1 %9257 to i8
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9258, i8* %9259, align 1
  %9260 = lshr i64 %9238, 63
  %9261 = trunc i64 %9260 to i8
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9261, i8* %9262, align 1
  %9263 = lshr i64 %9234, 63
  %9264 = lshr i64 %9235, 63
  %9265 = xor i64 %9260, %9263
  %9266 = xor i64 %9260, %9264
  %9267 = add i64 %9265, %9266
  %9268 = icmp eq i64 %9267, 2
  %9269 = zext i1 %9268 to i8
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9269, i8* %9270, align 1
  store %struct.Memory* %loadMem_4aae75, %struct.Memory** %MEMORY
  %loadMem_4aae78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9272 = getelementptr inbounds %struct.GPR, %struct.GPR* %9271, i32 0, i32 33
  %9273 = getelementptr inbounds %struct.Reg, %struct.Reg* %9272, i32 0, i32 0
  %PC.i3029 = bitcast %union.anon* %9273 to i64*
  %9274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9275 = getelementptr inbounds %struct.GPR, %struct.GPR* %9274, i32 0, i32 5
  %9276 = getelementptr inbounds %struct.Reg, %struct.Reg* %9275, i32 0, i32 0
  %RCX.i3030 = bitcast %union.anon* %9276 to i64*
  %9277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9278 = getelementptr inbounds %struct.GPR, %struct.GPR* %9277, i32 0, i32 11
  %9279 = getelementptr inbounds %struct.Reg, %struct.Reg* %9278, i32 0, i32 0
  %RDI.i3031 = bitcast %union.anon* %9279 to i64*
  %9280 = load i64, i64* %RDI.i3031
  %9281 = load i64, i64* %RCX.i3030
  %9282 = add i64 %9281, 16
  %9283 = load i64, i64* %PC.i3029
  %9284 = add i64 %9283, 3
  store i64 %9284, i64* %PC.i3029
  %9285 = trunc i64 %9280 to i32
  %9286 = inttoptr i64 %9282 to i32*
  %9287 = load i32, i32* %9286
  %9288 = sub i32 %9285, %9287
  %9289 = zext i32 %9288 to i64
  store i64 %9289, i64* %RDI.i3031, align 8
  %9290 = icmp ult i32 %9285, %9287
  %9291 = zext i1 %9290 to i8
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9291, i8* %9292, align 1
  %9293 = and i32 %9288, 255
  %9294 = call i32 @llvm.ctpop.i32(i32 %9293)
  %9295 = trunc i32 %9294 to i8
  %9296 = and i8 %9295, 1
  %9297 = xor i8 %9296, 1
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9297, i8* %9298, align 1
  %9299 = xor i32 %9287, %9285
  %9300 = xor i32 %9299, %9288
  %9301 = lshr i32 %9300, 4
  %9302 = trunc i32 %9301 to i8
  %9303 = and i8 %9302, 1
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9303, i8* %9304, align 1
  %9305 = icmp eq i32 %9288, 0
  %9306 = zext i1 %9305 to i8
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9306, i8* %9307, align 1
  %9308 = lshr i32 %9288, 31
  %9309 = trunc i32 %9308 to i8
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9309, i8* %9310, align 1
  %9311 = lshr i32 %9285, 31
  %9312 = lshr i32 %9287, 31
  %9313 = xor i32 %9312, %9311
  %9314 = xor i32 %9308, %9311
  %9315 = add i32 %9314, %9313
  %9316 = icmp eq i32 %9315, 2
  %9317 = zext i1 %9316 to i8
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9317, i8* %9318, align 1
  store %struct.Memory* %loadMem_4aae78, %struct.Memory** %MEMORY
  %loadMem_4aae7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9320 = getelementptr inbounds %struct.GPR, %struct.GPR* %9319, i32 0, i32 33
  %9321 = getelementptr inbounds %struct.Reg, %struct.Reg* %9320, i32 0, i32 0
  %PC.i3026 = bitcast %union.anon* %9321 to i64*
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9323 = getelementptr inbounds %struct.GPR, %struct.GPR* %9322, i32 0, i32 11
  %9324 = getelementptr inbounds %struct.Reg, %struct.Reg* %9323, i32 0, i32 0
  %EDI.i3027 = bitcast %union.anon* %9324 to i32*
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9326 = getelementptr inbounds %struct.GPR, %struct.GPR* %9325, i32 0, i32 15
  %9327 = getelementptr inbounds %struct.Reg, %struct.Reg* %9326, i32 0, i32 0
  %RBP.i3028 = bitcast %union.anon* %9327 to i64*
  %9328 = load i64, i64* %RBP.i3028
  %9329 = sub i64 %9328, 484
  %9330 = load i32, i32* %EDI.i3027
  %9331 = zext i32 %9330 to i64
  %9332 = load i64, i64* %PC.i3026
  %9333 = add i64 %9332, 6
  store i64 %9333, i64* %PC.i3026
  %9334 = inttoptr i64 %9329 to i32*
  store i32 %9330, i32* %9334
  store %struct.Memory* %loadMem_4aae7b, %struct.Memory** %MEMORY
  %loadMem_4aae81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9336 = getelementptr inbounds %struct.GPR, %struct.GPR* %9335, i32 0, i32 33
  %9337 = getelementptr inbounds %struct.Reg, %struct.Reg* %9336, i32 0, i32 0
  %PC.i3023 = bitcast %union.anon* %9337 to i64*
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9339 = getelementptr inbounds %struct.GPR, %struct.GPR* %9338, i32 0, i32 11
  %9340 = getelementptr inbounds %struct.Reg, %struct.Reg* %9339, i32 0, i32 0
  %RDI.i3024 = bitcast %union.anon* %9340 to i64*
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 15
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %RBP.i3025 = bitcast %union.anon* %9343 to i64*
  %9344 = load i64, i64* %RBP.i3025
  %9345 = sub i64 %9344, 492
  %9346 = load i64, i64* %PC.i3023
  %9347 = add i64 %9346, 6
  store i64 %9347, i64* %PC.i3023
  %9348 = inttoptr i64 %9345 to i32*
  %9349 = load i32, i32* %9348
  %9350 = zext i32 %9349 to i64
  store i64 %9350, i64* %RDI.i3024, align 8
  store %struct.Memory* %loadMem_4aae81, %struct.Memory** %MEMORY
  %loadMem_4aae87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9352 = getelementptr inbounds %struct.GPR, %struct.GPR* %9351, i32 0, i32 33
  %9353 = getelementptr inbounds %struct.Reg, %struct.Reg* %9352, i32 0, i32 0
  %PC.i3020 = bitcast %union.anon* %9353 to i64*
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9355 = getelementptr inbounds %struct.GPR, %struct.GPR* %9354, i32 0, i32 11
  %9356 = getelementptr inbounds %struct.Reg, %struct.Reg* %9355, i32 0, i32 0
  %RDI.i3021 = bitcast %union.anon* %9356 to i64*
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9358 = getelementptr inbounds %struct.GPR, %struct.GPR* %9357, i32 0, i32 15
  %9359 = getelementptr inbounds %struct.Reg, %struct.Reg* %9358, i32 0, i32 0
  %RBP.i3022 = bitcast %union.anon* %9359 to i64*
  %9360 = load i64, i64* %RDI.i3021
  %9361 = load i64, i64* %RBP.i3022
  %9362 = sub i64 %9361, 488
  %9363 = load i64, i64* %PC.i3020
  %9364 = add i64 %9363, 6
  store i64 %9364, i64* %PC.i3020
  %9365 = trunc i64 %9360 to i32
  %9366 = inttoptr i64 %9362 to i32*
  %9367 = load i32, i32* %9366
  %9368 = add i32 %9367, %9365
  %9369 = zext i32 %9368 to i64
  store i64 %9369, i64* %RDI.i3021, align 8
  %9370 = icmp ult i32 %9368, %9365
  %9371 = icmp ult i32 %9368, %9367
  %9372 = or i1 %9370, %9371
  %9373 = zext i1 %9372 to i8
  %9374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9373, i8* %9374, align 1
  %9375 = and i32 %9368, 255
  %9376 = call i32 @llvm.ctpop.i32(i32 %9375)
  %9377 = trunc i32 %9376 to i8
  %9378 = and i8 %9377, 1
  %9379 = xor i8 %9378, 1
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9379, i8* %9380, align 1
  %9381 = xor i32 %9367, %9365
  %9382 = xor i32 %9381, %9368
  %9383 = lshr i32 %9382, 4
  %9384 = trunc i32 %9383 to i8
  %9385 = and i8 %9384, 1
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9385, i8* %9386, align 1
  %9387 = icmp eq i32 %9368, 0
  %9388 = zext i1 %9387 to i8
  %9389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9388, i8* %9389, align 1
  %9390 = lshr i32 %9368, 31
  %9391 = trunc i32 %9390 to i8
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9391, i8* %9392, align 1
  %9393 = lshr i32 %9365, 31
  %9394 = lshr i32 %9367, 31
  %9395 = xor i32 %9390, %9393
  %9396 = xor i32 %9390, %9394
  %9397 = add i32 %9395, %9396
  %9398 = icmp eq i32 %9397, 2
  %9399 = zext i1 %9398 to i8
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9399, i8* %9400, align 1
  store %struct.Memory* %loadMem_4aae87, %struct.Memory** %MEMORY
  %loadMem_4aae8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i3017 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 17
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %R8D.i3018 = bitcast %union.anon* %9406 to i32*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 15
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RBP.i3019 = bitcast %union.anon* %9409 to i64*
  %9410 = bitcast i32* %R8D.i3018 to i64*
  %9411 = load i64, i64* %RBP.i3019
  %9412 = sub i64 %9411, 496
  %9413 = load i64, i64* %PC.i3017
  %9414 = add i64 %9413, 7
  store i64 %9414, i64* %PC.i3017
  %9415 = inttoptr i64 %9412 to i32*
  %9416 = load i32, i32* %9415
  %9417 = zext i32 %9416 to i64
  store i64 %9417, i64* %9410, align 8
  store %struct.Memory* %loadMem_4aae8d, %struct.Memory** %MEMORY
  %loadMem_4aae94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 33
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %PC.i3015 = bitcast %union.anon* %9420 to i64*
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9422 = getelementptr inbounds %struct.GPR, %struct.GPR* %9421, i32 0, i32 17
  %9423 = getelementptr inbounds %struct.Reg, %struct.Reg* %9422, i32 0, i32 0
  %R8D.i3016 = bitcast %union.anon* %9423 to i32*
  %9424 = bitcast i32* %R8D.i3016 to i64*
  %9425 = load i32, i32* %R8D.i3016
  %9426 = zext i32 %9425 to i64
  %9427 = load i64, i64* %PC.i3015
  %9428 = add i64 %9427, 3
  store i64 %9428, i64* %PC.i3015
  %9429 = shl i64 %9426, 32
  %9430 = ashr i64 %9429, 33
  %9431 = trunc i64 %9426 to i8
  %9432 = and i8 %9431, 1
  %9433 = trunc i64 %9430 to i32
  %9434 = and i64 %9430, 4294967295
  store i64 %9434, i64* %9424, align 8
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9432, i8* %9435, align 1
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9437 = and i32 %9433, 255
  %9438 = call i32 @llvm.ctpop.i32(i32 %9437)
  %9439 = trunc i32 %9438 to i8
  %9440 = and i8 %9439, 1
  %9441 = xor i8 %9440, 1
  store i8 %9441, i8* %9436, align 1
  %9442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9442, align 1
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9444 = icmp eq i32 %9433, 0
  %9445 = zext i1 %9444 to i8
  store i8 %9445, i8* %9443, align 1
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9447 = lshr i32 %9433, 31
  %9448 = trunc i32 %9447 to i8
  store i8 %9448, i8* %9446, align 1
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9449, align 1
  store %struct.Memory* %loadMem_4aae94, %struct.Memory** %MEMORY
  %loadMem_4aae98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9451 = getelementptr inbounds %struct.GPR, %struct.GPR* %9450, i32 0, i32 33
  %9452 = getelementptr inbounds %struct.Reg, %struct.Reg* %9451, i32 0, i32 0
  %PC.i3012 = bitcast %union.anon* %9452 to i64*
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9454 = getelementptr inbounds %struct.GPR, %struct.GPR* %9453, i32 0, i32 17
  %9455 = getelementptr inbounds %struct.Reg, %struct.Reg* %9454, i32 0, i32 0
  %R8D.i3013 = bitcast %union.anon* %9455 to i32*
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9457 = getelementptr inbounds %struct.GPR, %struct.GPR* %9456, i32 0, i32 15
  %9458 = getelementptr inbounds %struct.Reg, %struct.Reg* %9457, i32 0, i32 0
  %RBP.i3014 = bitcast %union.anon* %9458 to i64*
  %9459 = bitcast i32* %R8D.i3013 to i64*
  %9460 = load i32, i32* %R8D.i3013
  %9461 = zext i32 %9460 to i64
  %9462 = load i64, i64* %RBP.i3014
  %9463 = sub i64 %9462, 496
  %9464 = load i64, i64* %PC.i3012
  %9465 = add i64 %9464, 7
  store i64 %9465, i64* %PC.i3012
  %9466 = inttoptr i64 %9463 to i32*
  %9467 = load i32, i32* %9466
  %9468 = add i32 %9467, %9460
  %9469 = zext i32 %9468 to i64
  store i64 %9469, i64* %9459, align 8
  %9470 = icmp ult i32 %9468, %9460
  %9471 = icmp ult i32 %9468, %9467
  %9472 = or i1 %9470, %9471
  %9473 = zext i1 %9472 to i8
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9473, i8* %9474, align 1
  %9475 = and i32 %9468, 255
  %9476 = call i32 @llvm.ctpop.i32(i32 %9475)
  %9477 = trunc i32 %9476 to i8
  %9478 = and i8 %9477, 1
  %9479 = xor i8 %9478, 1
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9479, i8* %9480, align 1
  %9481 = xor i32 %9467, %9460
  %9482 = xor i32 %9481, %9468
  %9483 = lshr i32 %9482, 4
  %9484 = trunc i32 %9483 to i8
  %9485 = and i8 %9484, 1
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9485, i8* %9486, align 1
  %9487 = icmp eq i32 %9468, 0
  %9488 = zext i1 %9487 to i8
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9488, i8* %9489, align 1
  %9490 = lshr i32 %9468, 31
  %9491 = trunc i32 %9490 to i8
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9491, i8* %9492, align 1
  %9493 = lshr i32 %9460, 31
  %9494 = lshr i32 %9467, 31
  %9495 = xor i32 %9490, %9493
  %9496 = xor i32 %9490, %9494
  %9497 = add i32 %9495, %9496
  %9498 = icmp eq i32 %9497, 2
  %9499 = zext i1 %9498 to i8
  %9500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9499, i8* %9500, align 1
  store %struct.Memory* %loadMem_4aae98, %struct.Memory** %MEMORY
  %loadMem_4aae9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9502 = getelementptr inbounds %struct.GPR, %struct.GPR* %9501, i32 0, i32 33
  %9503 = getelementptr inbounds %struct.Reg, %struct.Reg* %9502, i32 0, i32 0
  %PC.i3009 = bitcast %union.anon* %9503 to i64*
  %9504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9505 = getelementptr inbounds %struct.GPR, %struct.GPR* %9504, i32 0, i32 17
  %9506 = getelementptr inbounds %struct.Reg, %struct.Reg* %9505, i32 0, i32 0
  %R8D.i3010 = bitcast %union.anon* %9506 to i32*
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9508 = getelementptr inbounds %struct.GPR, %struct.GPR* %9507, i32 0, i32 11
  %9509 = getelementptr inbounds %struct.Reg, %struct.Reg* %9508, i32 0, i32 0
  %RDI.i3011 = bitcast %union.anon* %9509 to i64*
  %9510 = load i64, i64* %RDI.i3011
  %9511 = load i32, i32* %R8D.i3010
  %9512 = zext i32 %9511 to i64
  %9513 = load i64, i64* %PC.i3009
  %9514 = add i64 %9513, 3
  store i64 %9514, i64* %PC.i3009
  %9515 = trunc i64 %9510 to i32
  %9516 = add i32 %9511, %9515
  %9517 = zext i32 %9516 to i64
  store i64 %9517, i64* %RDI.i3011, align 8
  %9518 = icmp ult i32 %9516, %9515
  %9519 = icmp ult i32 %9516, %9511
  %9520 = or i1 %9518, %9519
  %9521 = zext i1 %9520 to i8
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9521, i8* %9522, align 1
  %9523 = and i32 %9516, 255
  %9524 = call i32 @llvm.ctpop.i32(i32 %9523)
  %9525 = trunc i32 %9524 to i8
  %9526 = and i8 %9525, 1
  %9527 = xor i8 %9526, 1
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9527, i8* %9528, align 1
  %9529 = xor i64 %9512, %9510
  %9530 = trunc i64 %9529 to i32
  %9531 = xor i32 %9530, %9516
  %9532 = lshr i32 %9531, 4
  %9533 = trunc i32 %9532 to i8
  %9534 = and i8 %9533, 1
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9534, i8* %9535, align 1
  %9536 = icmp eq i32 %9516, 0
  %9537 = zext i1 %9536 to i8
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9537, i8* %9538, align 1
  %9539 = lshr i32 %9516, 31
  %9540 = trunc i32 %9539 to i8
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9540, i8* %9541, align 1
  %9542 = lshr i32 %9515, 31
  %9543 = lshr i32 %9511, 31
  %9544 = xor i32 %9539, %9542
  %9545 = xor i32 %9539, %9543
  %9546 = add i32 %9544, %9545
  %9547 = icmp eq i32 %9546, 2
  %9548 = zext i1 %9547 to i8
  %9549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9548, i8* %9549, align 1
  store %struct.Memory* %loadMem_4aae9f, %struct.Memory** %MEMORY
  %loadMem_4aaea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9551 = getelementptr inbounds %struct.GPR, %struct.GPR* %9550, i32 0, i32 33
  %9552 = getelementptr inbounds %struct.Reg, %struct.Reg* %9551, i32 0, i32 0
  %PC.i3006 = bitcast %union.anon* %9552 to i64*
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9554 = getelementptr inbounds %struct.GPR, %struct.GPR* %9553, i32 0, i32 11
  %9555 = getelementptr inbounds %struct.Reg, %struct.Reg* %9554, i32 0, i32 0
  %EDI.i3007 = bitcast %union.anon* %9555 to i32*
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9557 = getelementptr inbounds %struct.GPR, %struct.GPR* %9556, i32 0, i32 15
  %9558 = getelementptr inbounds %struct.Reg, %struct.Reg* %9557, i32 0, i32 0
  %RBP.i3008 = bitcast %union.anon* %9558 to i64*
  %9559 = load i64, i64* %RBP.i3008
  %9560 = sub i64 %9559, 528
  %9561 = load i32, i32* %EDI.i3007
  %9562 = zext i32 %9561 to i64
  %9563 = load i64, i64* %PC.i3006
  %9564 = add i64 %9563, 6
  store i64 %9564, i64* %PC.i3006
  %9565 = inttoptr i64 %9560 to i32*
  store i32 %9561, i32* %9565
  store %struct.Memory* %loadMem_4aaea2, %struct.Memory** %MEMORY
  %loadMem_4aaea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9567 = getelementptr inbounds %struct.GPR, %struct.GPR* %9566, i32 0, i32 33
  %9568 = getelementptr inbounds %struct.Reg, %struct.Reg* %9567, i32 0, i32 0
  %PC.i3003 = bitcast %union.anon* %9568 to i64*
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9570 = getelementptr inbounds %struct.GPR, %struct.GPR* %9569, i32 0, i32 11
  %9571 = getelementptr inbounds %struct.Reg, %struct.Reg* %9570, i32 0, i32 0
  %RDI.i3004 = bitcast %union.anon* %9571 to i64*
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 15
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %RBP.i3005 = bitcast %union.anon* %9574 to i64*
  %9575 = load i64, i64* %RBP.i3005
  %9576 = sub i64 %9575, 496
  %9577 = load i64, i64* %PC.i3003
  %9578 = add i64 %9577, 6
  store i64 %9578, i64* %PC.i3003
  %9579 = inttoptr i64 %9576 to i32*
  %9580 = load i32, i32* %9579
  %9581 = zext i32 %9580 to i64
  store i64 %9581, i64* %RDI.i3004, align 8
  store %struct.Memory* %loadMem_4aaea8, %struct.Memory** %MEMORY
  %loadMem_4aaeae = load %struct.Memory*, %struct.Memory** %MEMORY
  %9582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9583 = getelementptr inbounds %struct.GPR, %struct.GPR* %9582, i32 0, i32 33
  %9584 = getelementptr inbounds %struct.Reg, %struct.Reg* %9583, i32 0, i32 0
  %PC.i3000 = bitcast %union.anon* %9584 to i64*
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 11
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %RDI.i3001 = bitcast %union.anon* %9587 to i64*
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9589 = getelementptr inbounds %struct.GPR, %struct.GPR* %9588, i32 0, i32 15
  %9590 = getelementptr inbounds %struct.Reg, %struct.Reg* %9589, i32 0, i32 0
  %RBP.i3002 = bitcast %union.anon* %9590 to i64*
  %9591 = load i64, i64* %RDI.i3001
  %9592 = load i64, i64* %RBP.i3002
  %9593 = sub i64 %9592, 484
  %9594 = load i64, i64* %PC.i3000
  %9595 = add i64 %9594, 6
  store i64 %9595, i64* %PC.i3000
  %9596 = trunc i64 %9591 to i32
  %9597 = inttoptr i64 %9593 to i32*
  %9598 = load i32, i32* %9597
  %9599 = sub i32 %9596, %9598
  %9600 = zext i32 %9599 to i64
  store i64 %9600, i64* %RDI.i3001, align 8
  %9601 = icmp ult i32 %9596, %9598
  %9602 = zext i1 %9601 to i8
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9602, i8* %9603, align 1
  %9604 = and i32 %9599, 255
  %9605 = call i32 @llvm.ctpop.i32(i32 %9604)
  %9606 = trunc i32 %9605 to i8
  %9607 = and i8 %9606, 1
  %9608 = xor i8 %9607, 1
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9608, i8* %9609, align 1
  %9610 = xor i32 %9598, %9596
  %9611 = xor i32 %9610, %9599
  %9612 = lshr i32 %9611, 4
  %9613 = trunc i32 %9612 to i8
  %9614 = and i8 %9613, 1
  %9615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9614, i8* %9615, align 1
  %9616 = icmp eq i32 %9599, 0
  %9617 = zext i1 %9616 to i8
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9617, i8* %9618, align 1
  %9619 = lshr i32 %9599, 31
  %9620 = trunc i32 %9619 to i8
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9620, i8* %9621, align 1
  %9622 = lshr i32 %9596, 31
  %9623 = lshr i32 %9598, 31
  %9624 = xor i32 %9623, %9622
  %9625 = xor i32 %9619, %9622
  %9626 = add i32 %9625, %9624
  %9627 = icmp eq i32 %9626, 2
  %9628 = zext i1 %9627 to i8
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9628, i8* %9629, align 1
  store %struct.Memory* %loadMem_4aaeae, %struct.Memory** %MEMORY
  %loadMem_4aaeb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9631 = getelementptr inbounds %struct.GPR, %struct.GPR* %9630, i32 0, i32 33
  %9632 = getelementptr inbounds %struct.Reg, %struct.Reg* %9631, i32 0, i32 0
  %PC.i2997 = bitcast %union.anon* %9632 to i64*
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9634 = getelementptr inbounds %struct.GPR, %struct.GPR* %9633, i32 0, i32 17
  %9635 = getelementptr inbounds %struct.Reg, %struct.Reg* %9634, i32 0, i32 0
  %R8D.i2998 = bitcast %union.anon* %9635 to i32*
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9637 = getelementptr inbounds %struct.GPR, %struct.GPR* %9636, i32 0, i32 15
  %9638 = getelementptr inbounds %struct.Reg, %struct.Reg* %9637, i32 0, i32 0
  %RBP.i2999 = bitcast %union.anon* %9638 to i64*
  %9639 = bitcast i32* %R8D.i2998 to i64*
  %9640 = load i64, i64* %RBP.i2999
  %9641 = sub i64 %9640, 488
  %9642 = load i64, i64* %PC.i2997
  %9643 = add i64 %9642, 7
  store i64 %9643, i64* %PC.i2997
  %9644 = inttoptr i64 %9641 to i32*
  %9645 = load i32, i32* %9644
  %9646 = zext i32 %9645 to i64
  store i64 %9646, i64* %9639, align 8
  store %struct.Memory* %loadMem_4aaeb4, %struct.Memory** %MEMORY
  %loadMem_4aaebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9648 = getelementptr inbounds %struct.GPR, %struct.GPR* %9647, i32 0, i32 33
  %9649 = getelementptr inbounds %struct.Reg, %struct.Reg* %9648, i32 0, i32 0
  %PC.i2995 = bitcast %union.anon* %9649 to i64*
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9651 = getelementptr inbounds %struct.GPR, %struct.GPR* %9650, i32 0, i32 17
  %9652 = getelementptr inbounds %struct.Reg, %struct.Reg* %9651, i32 0, i32 0
  %R8D.i2996 = bitcast %union.anon* %9652 to i32*
  %9653 = bitcast i32* %R8D.i2996 to i64*
  %9654 = load i32, i32* %R8D.i2996
  %9655 = zext i32 %9654 to i64
  %9656 = load i64, i64* %PC.i2995
  %9657 = add i64 %9656, 3
  store i64 %9657, i64* %PC.i2995
  %9658 = shl i64 %9655, 32
  %9659 = ashr i64 %9658, 33
  %9660 = trunc i64 %9655 to i8
  %9661 = and i8 %9660, 1
  %9662 = trunc i64 %9659 to i32
  %9663 = and i64 %9659, 4294967295
  store i64 %9663, i64* %9653, align 8
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9661, i8* %9664, align 1
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9666 = and i32 %9662, 255
  %9667 = call i32 @llvm.ctpop.i32(i32 %9666)
  %9668 = trunc i32 %9667 to i8
  %9669 = and i8 %9668, 1
  %9670 = xor i8 %9669, 1
  store i8 %9670, i8* %9665, align 1
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9671, align 1
  %9672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9673 = icmp eq i32 %9662, 0
  %9674 = zext i1 %9673 to i8
  store i8 %9674, i8* %9672, align 1
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9676 = lshr i32 %9662, 31
  %9677 = trunc i32 %9676 to i8
  store i8 %9677, i8* %9675, align 1
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9678, align 1
  store %struct.Memory* %loadMem_4aaebb, %struct.Memory** %MEMORY
  %loadMem_4aaebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9680 = getelementptr inbounds %struct.GPR, %struct.GPR* %9679, i32 0, i32 33
  %9681 = getelementptr inbounds %struct.Reg, %struct.Reg* %9680, i32 0, i32 0
  %PC.i2992 = bitcast %union.anon* %9681 to i64*
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9683 = getelementptr inbounds %struct.GPR, %struct.GPR* %9682, i32 0, i32 17
  %9684 = getelementptr inbounds %struct.Reg, %struct.Reg* %9683, i32 0, i32 0
  %R8D.i2993 = bitcast %union.anon* %9684 to i32*
  %9685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9686 = getelementptr inbounds %struct.GPR, %struct.GPR* %9685, i32 0, i32 15
  %9687 = getelementptr inbounds %struct.Reg, %struct.Reg* %9686, i32 0, i32 0
  %RBP.i2994 = bitcast %union.anon* %9687 to i64*
  %9688 = bitcast i32* %R8D.i2993 to i64*
  %9689 = load i32, i32* %R8D.i2993
  %9690 = zext i32 %9689 to i64
  %9691 = load i64, i64* %RBP.i2994
  %9692 = sub i64 %9691, 488
  %9693 = load i64, i64* %PC.i2992
  %9694 = add i64 %9693, 7
  store i64 %9694, i64* %PC.i2992
  %9695 = inttoptr i64 %9692 to i32*
  %9696 = load i32, i32* %9695
  %9697 = add i32 %9696, %9689
  %9698 = zext i32 %9697 to i64
  store i64 %9698, i64* %9688, align 8
  %9699 = icmp ult i32 %9697, %9689
  %9700 = icmp ult i32 %9697, %9696
  %9701 = or i1 %9699, %9700
  %9702 = zext i1 %9701 to i8
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9702, i8* %9703, align 1
  %9704 = and i32 %9697, 255
  %9705 = call i32 @llvm.ctpop.i32(i32 %9704)
  %9706 = trunc i32 %9705 to i8
  %9707 = and i8 %9706, 1
  %9708 = xor i8 %9707, 1
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9708, i8* %9709, align 1
  %9710 = xor i32 %9696, %9689
  %9711 = xor i32 %9710, %9697
  %9712 = lshr i32 %9711, 4
  %9713 = trunc i32 %9712 to i8
  %9714 = and i8 %9713, 1
  %9715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9714, i8* %9715, align 1
  %9716 = icmp eq i32 %9697, 0
  %9717 = zext i1 %9716 to i8
  %9718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9717, i8* %9718, align 1
  %9719 = lshr i32 %9697, 31
  %9720 = trunc i32 %9719 to i8
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9720, i8* %9721, align 1
  %9722 = lshr i32 %9689, 31
  %9723 = lshr i32 %9696, 31
  %9724 = xor i32 %9719, %9722
  %9725 = xor i32 %9719, %9723
  %9726 = add i32 %9724, %9725
  %9727 = icmp eq i32 %9726, 2
  %9728 = zext i1 %9727 to i8
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9728, i8* %9729, align 1
  store %struct.Memory* %loadMem_4aaebf, %struct.Memory** %MEMORY
  %loadMem_4aaec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9731 = getelementptr inbounds %struct.GPR, %struct.GPR* %9730, i32 0, i32 33
  %9732 = getelementptr inbounds %struct.Reg, %struct.Reg* %9731, i32 0, i32 0
  %PC.i2989 = bitcast %union.anon* %9732 to i64*
  %9733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9734 = getelementptr inbounds %struct.GPR, %struct.GPR* %9733, i32 0, i32 17
  %9735 = getelementptr inbounds %struct.Reg, %struct.Reg* %9734, i32 0, i32 0
  %R8D.i2990 = bitcast %union.anon* %9735 to i32*
  %9736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9737 = getelementptr inbounds %struct.GPR, %struct.GPR* %9736, i32 0, i32 11
  %9738 = getelementptr inbounds %struct.Reg, %struct.Reg* %9737, i32 0, i32 0
  %RDI.i2991 = bitcast %union.anon* %9738 to i64*
  %9739 = load i64, i64* %RDI.i2991
  %9740 = load i32, i32* %R8D.i2990
  %9741 = zext i32 %9740 to i64
  %9742 = load i64, i64* %PC.i2989
  %9743 = add i64 %9742, 3
  store i64 %9743, i64* %PC.i2989
  %9744 = trunc i64 %9739 to i32
  %9745 = sub i32 %9744, %9740
  %9746 = zext i32 %9745 to i64
  store i64 %9746, i64* %RDI.i2991, align 8
  %9747 = icmp ult i32 %9744, %9740
  %9748 = zext i1 %9747 to i8
  %9749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9748, i8* %9749, align 1
  %9750 = and i32 %9745, 255
  %9751 = call i32 @llvm.ctpop.i32(i32 %9750)
  %9752 = trunc i32 %9751 to i8
  %9753 = and i8 %9752, 1
  %9754 = xor i8 %9753, 1
  %9755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9754, i8* %9755, align 1
  %9756 = xor i64 %9741, %9739
  %9757 = trunc i64 %9756 to i32
  %9758 = xor i32 %9757, %9745
  %9759 = lshr i32 %9758, 4
  %9760 = trunc i32 %9759 to i8
  %9761 = and i8 %9760, 1
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9761, i8* %9762, align 1
  %9763 = icmp eq i32 %9745, 0
  %9764 = zext i1 %9763 to i8
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9764, i8* %9765, align 1
  %9766 = lshr i32 %9745, 31
  %9767 = trunc i32 %9766 to i8
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9767, i8* %9768, align 1
  %9769 = lshr i32 %9744, 31
  %9770 = lshr i32 %9740, 31
  %9771 = xor i32 %9770, %9769
  %9772 = xor i32 %9766, %9769
  %9773 = add i32 %9772, %9771
  %9774 = icmp eq i32 %9773, 2
  %9775 = zext i1 %9774 to i8
  %9776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9775, i8* %9776, align 1
  store %struct.Memory* %loadMem_4aaec6, %struct.Memory** %MEMORY
  %loadMem_4aaec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 33
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %PC.i2986 = bitcast %union.anon* %9779 to i64*
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 11
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %EDI.i2987 = bitcast %union.anon* %9782 to i32*
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9784 = getelementptr inbounds %struct.GPR, %struct.GPR* %9783, i32 0, i32 15
  %9785 = getelementptr inbounds %struct.Reg, %struct.Reg* %9784, i32 0, i32 0
  %RBP.i2988 = bitcast %union.anon* %9785 to i64*
  %9786 = load i64, i64* %RBP.i2988
  %9787 = sub i64 %9786, 524
  %9788 = load i32, i32* %EDI.i2987
  %9789 = zext i32 %9788 to i64
  %9790 = load i64, i64* %PC.i2986
  %9791 = add i64 %9790, 6
  store i64 %9791, i64* %PC.i2986
  %9792 = inttoptr i64 %9787 to i32*
  store i32 %9788, i32* %9792
  store %struct.Memory* %loadMem_4aaec9, %struct.Memory** %MEMORY
  %loadMem_4aaecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 33
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %PC.i2983 = bitcast %union.anon* %9795 to i64*
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9797 = getelementptr inbounds %struct.GPR, %struct.GPR* %9796, i32 0, i32 11
  %9798 = getelementptr inbounds %struct.Reg, %struct.Reg* %9797, i32 0, i32 0
  %RDI.i2984 = bitcast %union.anon* %9798 to i64*
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9800 = getelementptr inbounds %struct.GPR, %struct.GPR* %9799, i32 0, i32 15
  %9801 = getelementptr inbounds %struct.Reg, %struct.Reg* %9800, i32 0, i32 0
  %RBP.i2985 = bitcast %union.anon* %9801 to i64*
  %9802 = load i64, i64* %RBP.i2985
  %9803 = sub i64 %9802, 496
  %9804 = load i64, i64* %PC.i2983
  %9805 = add i64 %9804, 6
  store i64 %9805, i64* %PC.i2983
  %9806 = inttoptr i64 %9803 to i32*
  %9807 = load i32, i32* %9806
  %9808 = zext i32 %9807 to i64
  store i64 %9808, i64* %RDI.i2984, align 8
  store %struct.Memory* %loadMem_4aaecf, %struct.Memory** %MEMORY
  %loadMem_4aaed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9810 = getelementptr inbounds %struct.GPR, %struct.GPR* %9809, i32 0, i32 33
  %9811 = getelementptr inbounds %struct.Reg, %struct.Reg* %9810, i32 0, i32 0
  %PC.i2980 = bitcast %union.anon* %9811 to i64*
  %9812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9813 = getelementptr inbounds %struct.GPR, %struct.GPR* %9812, i32 0, i32 11
  %9814 = getelementptr inbounds %struct.Reg, %struct.Reg* %9813, i32 0, i32 0
  %RDI.i2981 = bitcast %union.anon* %9814 to i64*
  %9815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9816 = getelementptr inbounds %struct.GPR, %struct.GPR* %9815, i32 0, i32 15
  %9817 = getelementptr inbounds %struct.Reg, %struct.Reg* %9816, i32 0, i32 0
  %RBP.i2982 = bitcast %union.anon* %9817 to i64*
  %9818 = load i64, i64* %RDI.i2981
  %9819 = load i64, i64* %RBP.i2982
  %9820 = sub i64 %9819, 484
  %9821 = load i64, i64* %PC.i2980
  %9822 = add i64 %9821, 6
  store i64 %9822, i64* %PC.i2980
  %9823 = trunc i64 %9818 to i32
  %9824 = inttoptr i64 %9820 to i32*
  %9825 = load i32, i32* %9824
  %9826 = add i32 %9825, %9823
  %9827 = zext i32 %9826 to i64
  store i64 %9827, i64* %RDI.i2981, align 8
  %9828 = icmp ult i32 %9826, %9823
  %9829 = icmp ult i32 %9826, %9825
  %9830 = or i1 %9828, %9829
  %9831 = zext i1 %9830 to i8
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9831, i8* %9832, align 1
  %9833 = and i32 %9826, 255
  %9834 = call i32 @llvm.ctpop.i32(i32 %9833)
  %9835 = trunc i32 %9834 to i8
  %9836 = and i8 %9835, 1
  %9837 = xor i8 %9836, 1
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9837, i8* %9838, align 1
  %9839 = xor i32 %9825, %9823
  %9840 = xor i32 %9839, %9826
  %9841 = lshr i32 %9840, 4
  %9842 = trunc i32 %9841 to i8
  %9843 = and i8 %9842, 1
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9843, i8* %9844, align 1
  %9845 = icmp eq i32 %9826, 0
  %9846 = zext i1 %9845 to i8
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9846, i8* %9847, align 1
  %9848 = lshr i32 %9826, 31
  %9849 = trunc i32 %9848 to i8
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9849, i8* %9850, align 1
  %9851 = lshr i32 %9823, 31
  %9852 = lshr i32 %9825, 31
  %9853 = xor i32 %9848, %9851
  %9854 = xor i32 %9848, %9852
  %9855 = add i32 %9853, %9854
  %9856 = icmp eq i32 %9855, 2
  %9857 = zext i1 %9856 to i8
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9857, i8* %9858, align 1
  store %struct.Memory* %loadMem_4aaed5, %struct.Memory** %MEMORY
  %loadMem_4aaedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 33
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %PC.i2977 = bitcast %union.anon* %9861 to i64*
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 17
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %R8D.i2978 = bitcast %union.anon* %9864 to i32*
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 15
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %RBP.i2979 = bitcast %union.anon* %9867 to i64*
  %9868 = bitcast i32* %R8D.i2978 to i64*
  %9869 = load i64, i64* %RBP.i2979
  %9870 = sub i64 %9869, 492
  %9871 = load i64, i64* %PC.i2977
  %9872 = add i64 %9871, 7
  store i64 %9872, i64* %PC.i2977
  %9873 = inttoptr i64 %9870 to i32*
  %9874 = load i32, i32* %9873
  %9875 = zext i32 %9874 to i64
  store i64 %9875, i64* %9868, align 8
  store %struct.Memory* %loadMem_4aaedb, %struct.Memory** %MEMORY
  %loadMem_4aaee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9877 = getelementptr inbounds %struct.GPR, %struct.GPR* %9876, i32 0, i32 33
  %9878 = getelementptr inbounds %struct.Reg, %struct.Reg* %9877, i32 0, i32 0
  %PC.i2975 = bitcast %union.anon* %9878 to i64*
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9880 = getelementptr inbounds %struct.GPR, %struct.GPR* %9879, i32 0, i32 17
  %9881 = getelementptr inbounds %struct.Reg, %struct.Reg* %9880, i32 0, i32 0
  %R8D.i2976 = bitcast %union.anon* %9881 to i32*
  %9882 = bitcast i32* %R8D.i2976 to i64*
  %9883 = load i32, i32* %R8D.i2976
  %9884 = zext i32 %9883 to i64
  %9885 = load i64, i64* %PC.i2975
  %9886 = add i64 %9885, 3
  store i64 %9886, i64* %PC.i2975
  %9887 = shl i64 %9884, 32
  %9888 = ashr i64 %9887, 33
  %9889 = trunc i64 %9884 to i8
  %9890 = and i8 %9889, 1
  %9891 = trunc i64 %9888 to i32
  %9892 = and i64 %9888, 4294967295
  store i64 %9892, i64* %9882, align 8
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9890, i8* %9893, align 1
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9895 = and i32 %9891, 255
  %9896 = call i32 @llvm.ctpop.i32(i32 %9895)
  %9897 = trunc i32 %9896 to i8
  %9898 = and i8 %9897, 1
  %9899 = xor i8 %9898, 1
  store i8 %9899, i8* %9894, align 1
  %9900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9900, align 1
  %9901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9902 = icmp eq i32 %9891, 0
  %9903 = zext i1 %9902 to i8
  store i8 %9903, i8* %9901, align 1
  %9904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9905 = lshr i32 %9891, 31
  %9906 = trunc i32 %9905 to i8
  store i8 %9906, i8* %9904, align 1
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9907, align 1
  store %struct.Memory* %loadMem_4aaee2, %struct.Memory** %MEMORY
  %loadMem_4aaee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9909 = getelementptr inbounds %struct.GPR, %struct.GPR* %9908, i32 0, i32 33
  %9910 = getelementptr inbounds %struct.Reg, %struct.Reg* %9909, i32 0, i32 0
  %PC.i2972 = bitcast %union.anon* %9910 to i64*
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9912 = getelementptr inbounds %struct.GPR, %struct.GPR* %9911, i32 0, i32 17
  %9913 = getelementptr inbounds %struct.Reg, %struct.Reg* %9912, i32 0, i32 0
  %R8D.i2973 = bitcast %union.anon* %9913 to i32*
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 15
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %RBP.i2974 = bitcast %union.anon* %9916 to i64*
  %9917 = bitcast i32* %R8D.i2973 to i64*
  %9918 = load i32, i32* %R8D.i2973
  %9919 = zext i32 %9918 to i64
  %9920 = load i64, i64* %RBP.i2974
  %9921 = sub i64 %9920, 492
  %9922 = load i64, i64* %PC.i2972
  %9923 = add i64 %9922, 7
  store i64 %9923, i64* %PC.i2972
  %9924 = inttoptr i64 %9921 to i32*
  %9925 = load i32, i32* %9924
  %9926 = add i32 %9925, %9918
  %9927 = zext i32 %9926 to i64
  store i64 %9927, i64* %9917, align 8
  %9928 = icmp ult i32 %9926, %9918
  %9929 = icmp ult i32 %9926, %9925
  %9930 = or i1 %9928, %9929
  %9931 = zext i1 %9930 to i8
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9931, i8* %9932, align 1
  %9933 = and i32 %9926, 255
  %9934 = call i32 @llvm.ctpop.i32(i32 %9933)
  %9935 = trunc i32 %9934 to i8
  %9936 = and i8 %9935, 1
  %9937 = xor i8 %9936, 1
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9937, i8* %9938, align 1
  %9939 = xor i32 %9925, %9918
  %9940 = xor i32 %9939, %9926
  %9941 = lshr i32 %9940, 4
  %9942 = trunc i32 %9941 to i8
  %9943 = and i8 %9942, 1
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9943, i8* %9944, align 1
  %9945 = icmp eq i32 %9926, 0
  %9946 = zext i1 %9945 to i8
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9946, i8* %9947, align 1
  %9948 = lshr i32 %9926, 31
  %9949 = trunc i32 %9948 to i8
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9949, i8* %9950, align 1
  %9951 = lshr i32 %9918, 31
  %9952 = lshr i32 %9925, 31
  %9953 = xor i32 %9948, %9951
  %9954 = xor i32 %9948, %9952
  %9955 = add i32 %9953, %9954
  %9956 = icmp eq i32 %9955, 2
  %9957 = zext i1 %9956 to i8
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9957, i8* %9958, align 1
  store %struct.Memory* %loadMem_4aaee6, %struct.Memory** %MEMORY
  %loadMem_4aaeed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9960 = getelementptr inbounds %struct.GPR, %struct.GPR* %9959, i32 0, i32 33
  %9961 = getelementptr inbounds %struct.Reg, %struct.Reg* %9960, i32 0, i32 0
  %PC.i2969 = bitcast %union.anon* %9961 to i64*
  %9962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9963 = getelementptr inbounds %struct.GPR, %struct.GPR* %9962, i32 0, i32 17
  %9964 = getelementptr inbounds %struct.Reg, %struct.Reg* %9963, i32 0, i32 0
  %R8D.i2970 = bitcast %union.anon* %9964 to i32*
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9966 = getelementptr inbounds %struct.GPR, %struct.GPR* %9965, i32 0, i32 11
  %9967 = getelementptr inbounds %struct.Reg, %struct.Reg* %9966, i32 0, i32 0
  %RDI.i2971 = bitcast %union.anon* %9967 to i64*
  %9968 = load i64, i64* %RDI.i2971
  %9969 = load i32, i32* %R8D.i2970
  %9970 = zext i32 %9969 to i64
  %9971 = load i64, i64* %PC.i2969
  %9972 = add i64 %9971, 3
  store i64 %9972, i64* %PC.i2969
  %9973 = trunc i64 %9968 to i32
  %9974 = sub i32 %9973, %9969
  %9975 = zext i32 %9974 to i64
  store i64 %9975, i64* %RDI.i2971, align 8
  %9976 = icmp ult i32 %9973, %9969
  %9977 = zext i1 %9976 to i8
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9977, i8* %9978, align 1
  %9979 = and i32 %9974, 255
  %9980 = call i32 @llvm.ctpop.i32(i32 %9979)
  %9981 = trunc i32 %9980 to i8
  %9982 = and i8 %9981, 1
  %9983 = xor i8 %9982, 1
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9983, i8* %9984, align 1
  %9985 = xor i64 %9970, %9968
  %9986 = trunc i64 %9985 to i32
  %9987 = xor i32 %9986, %9974
  %9988 = lshr i32 %9987, 4
  %9989 = trunc i32 %9988 to i8
  %9990 = and i8 %9989, 1
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9990, i8* %9991, align 1
  %9992 = icmp eq i32 %9974, 0
  %9993 = zext i1 %9992 to i8
  %9994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9993, i8* %9994, align 1
  %9995 = lshr i32 %9974, 31
  %9996 = trunc i32 %9995 to i8
  %9997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9996, i8* %9997, align 1
  %9998 = lshr i32 %9973, 31
  %9999 = lshr i32 %9969, 31
  %10000 = xor i32 %9999, %9998
  %10001 = xor i32 %9995, %9998
  %10002 = add i32 %10001, %10000
  %10003 = icmp eq i32 %10002, 2
  %10004 = zext i1 %10003 to i8
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10004, i8* %10005, align 1
  store %struct.Memory* %loadMem_4aaeed, %struct.Memory** %MEMORY
  %loadMem_4aaef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10007 = getelementptr inbounds %struct.GPR, %struct.GPR* %10006, i32 0, i32 33
  %10008 = getelementptr inbounds %struct.Reg, %struct.Reg* %10007, i32 0, i32 0
  %PC.i2966 = bitcast %union.anon* %10008 to i64*
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10010 = getelementptr inbounds %struct.GPR, %struct.GPR* %10009, i32 0, i32 11
  %10011 = getelementptr inbounds %struct.Reg, %struct.Reg* %10010, i32 0, i32 0
  %EDI.i2967 = bitcast %union.anon* %10011 to i32*
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10013 = getelementptr inbounds %struct.GPR, %struct.GPR* %10012, i32 0, i32 15
  %10014 = getelementptr inbounds %struct.Reg, %struct.Reg* %10013, i32 0, i32 0
  %RBP.i2968 = bitcast %union.anon* %10014 to i64*
  %10015 = load i64, i64* %RBP.i2968
  %10016 = sub i64 %10015, 520
  %10017 = load i32, i32* %EDI.i2967
  %10018 = zext i32 %10017 to i64
  %10019 = load i64, i64* %PC.i2966
  %10020 = add i64 %10019, 6
  store i64 %10020, i64* %PC.i2966
  %10021 = inttoptr i64 %10016 to i32*
  store i32 %10017, i32* %10021
  store %struct.Memory* %loadMem_4aaef0, %struct.Memory** %MEMORY
  %loadMem_4aaef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10023 = getelementptr inbounds %struct.GPR, %struct.GPR* %10022, i32 0, i32 33
  %10024 = getelementptr inbounds %struct.Reg, %struct.Reg* %10023, i32 0, i32 0
  %PC.i2963 = bitcast %union.anon* %10024 to i64*
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10026 = getelementptr inbounds %struct.GPR, %struct.GPR* %10025, i32 0, i32 11
  %10027 = getelementptr inbounds %struct.Reg, %struct.Reg* %10026, i32 0, i32 0
  %RDI.i2964 = bitcast %union.anon* %10027 to i64*
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10029 = getelementptr inbounds %struct.GPR, %struct.GPR* %10028, i32 0, i32 15
  %10030 = getelementptr inbounds %struct.Reg, %struct.Reg* %10029, i32 0, i32 0
  %RBP.i2965 = bitcast %union.anon* %10030 to i64*
  %10031 = load i64, i64* %RBP.i2965
  %10032 = sub i64 %10031, 492
  %10033 = load i64, i64* %PC.i2963
  %10034 = add i64 %10033, 6
  store i64 %10034, i64* %PC.i2963
  %10035 = inttoptr i64 %10032 to i32*
  %10036 = load i32, i32* %10035
  %10037 = zext i32 %10036 to i64
  store i64 %10037, i64* %RDI.i2964, align 8
  store %struct.Memory* %loadMem_4aaef6, %struct.Memory** %MEMORY
  %loadMem_4aaefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10039 = getelementptr inbounds %struct.GPR, %struct.GPR* %10038, i32 0, i32 33
  %10040 = getelementptr inbounds %struct.Reg, %struct.Reg* %10039, i32 0, i32 0
  %PC.i2960 = bitcast %union.anon* %10040 to i64*
  %10041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10042 = getelementptr inbounds %struct.GPR, %struct.GPR* %10041, i32 0, i32 11
  %10043 = getelementptr inbounds %struct.Reg, %struct.Reg* %10042, i32 0, i32 0
  %RDI.i2961 = bitcast %union.anon* %10043 to i64*
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10045 = getelementptr inbounds %struct.GPR, %struct.GPR* %10044, i32 0, i32 15
  %10046 = getelementptr inbounds %struct.Reg, %struct.Reg* %10045, i32 0, i32 0
  %RBP.i2962 = bitcast %union.anon* %10046 to i64*
  %10047 = load i64, i64* %RDI.i2961
  %10048 = load i64, i64* %RBP.i2962
  %10049 = sub i64 %10048, 488
  %10050 = load i64, i64* %PC.i2960
  %10051 = add i64 %10050, 6
  store i64 %10051, i64* %PC.i2960
  %10052 = trunc i64 %10047 to i32
  %10053 = inttoptr i64 %10049 to i32*
  %10054 = load i32, i32* %10053
  %10055 = sub i32 %10052, %10054
  %10056 = zext i32 %10055 to i64
  store i64 %10056, i64* %RDI.i2961, align 8
  %10057 = icmp ult i32 %10052, %10054
  %10058 = zext i1 %10057 to i8
  %10059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10058, i8* %10059, align 1
  %10060 = and i32 %10055, 255
  %10061 = call i32 @llvm.ctpop.i32(i32 %10060)
  %10062 = trunc i32 %10061 to i8
  %10063 = and i8 %10062, 1
  %10064 = xor i8 %10063, 1
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10064, i8* %10065, align 1
  %10066 = xor i32 %10054, %10052
  %10067 = xor i32 %10066, %10055
  %10068 = lshr i32 %10067, 4
  %10069 = trunc i32 %10068 to i8
  %10070 = and i8 %10069, 1
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10070, i8* %10071, align 1
  %10072 = icmp eq i32 %10055, 0
  %10073 = zext i1 %10072 to i8
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10073, i8* %10074, align 1
  %10075 = lshr i32 %10055, 31
  %10076 = trunc i32 %10075 to i8
  %10077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10076, i8* %10077, align 1
  %10078 = lshr i32 %10052, 31
  %10079 = lshr i32 %10054, 31
  %10080 = xor i32 %10079, %10078
  %10081 = xor i32 %10075, %10078
  %10082 = add i32 %10081, %10080
  %10083 = icmp eq i32 %10082, 2
  %10084 = zext i1 %10083 to i8
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10084, i8* %10085, align 1
  store %struct.Memory* %loadMem_4aaefc, %struct.Memory** %MEMORY
  %loadMem_4aaf02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 33
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %PC.i2957 = bitcast %union.anon* %10088 to i64*
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10090 = getelementptr inbounds %struct.GPR, %struct.GPR* %10089, i32 0, i32 17
  %10091 = getelementptr inbounds %struct.Reg, %struct.Reg* %10090, i32 0, i32 0
  %R8D.i2958 = bitcast %union.anon* %10091 to i32*
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10093 = getelementptr inbounds %struct.GPR, %struct.GPR* %10092, i32 0, i32 15
  %10094 = getelementptr inbounds %struct.Reg, %struct.Reg* %10093, i32 0, i32 0
  %RBP.i2959 = bitcast %union.anon* %10094 to i64*
  %10095 = bitcast i32* %R8D.i2958 to i64*
  %10096 = load i64, i64* %RBP.i2959
  %10097 = sub i64 %10096, 484
  %10098 = load i64, i64* %PC.i2957
  %10099 = add i64 %10098, 7
  store i64 %10099, i64* %PC.i2957
  %10100 = inttoptr i64 %10097 to i32*
  %10101 = load i32, i32* %10100
  %10102 = zext i32 %10101 to i64
  store i64 %10102, i64* %10095, align 8
  store %struct.Memory* %loadMem_4aaf02, %struct.Memory** %MEMORY
  %loadMem_4aaf09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10104 = getelementptr inbounds %struct.GPR, %struct.GPR* %10103, i32 0, i32 33
  %10105 = getelementptr inbounds %struct.Reg, %struct.Reg* %10104, i32 0, i32 0
  %PC.i2955 = bitcast %union.anon* %10105 to i64*
  %10106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10107 = getelementptr inbounds %struct.GPR, %struct.GPR* %10106, i32 0, i32 17
  %10108 = getelementptr inbounds %struct.Reg, %struct.Reg* %10107, i32 0, i32 0
  %R8D.i2956 = bitcast %union.anon* %10108 to i32*
  %10109 = bitcast i32* %R8D.i2956 to i64*
  %10110 = load i32, i32* %R8D.i2956
  %10111 = zext i32 %10110 to i64
  %10112 = load i64, i64* %PC.i2955
  %10113 = add i64 %10112, 3
  store i64 %10113, i64* %PC.i2955
  %10114 = shl i64 %10111, 32
  %10115 = ashr i64 %10114, 33
  %10116 = trunc i64 %10111 to i8
  %10117 = and i8 %10116, 1
  %10118 = trunc i64 %10115 to i32
  %10119 = and i64 %10115, 4294967295
  store i64 %10119, i64* %10109, align 8
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10117, i8* %10120, align 1
  %10121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10122 = and i32 %10118, 255
  %10123 = call i32 @llvm.ctpop.i32(i32 %10122)
  %10124 = trunc i32 %10123 to i8
  %10125 = and i8 %10124, 1
  %10126 = xor i8 %10125, 1
  store i8 %10126, i8* %10121, align 1
  %10127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10127, align 1
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10129 = icmp eq i32 %10118, 0
  %10130 = zext i1 %10129 to i8
  store i8 %10130, i8* %10128, align 1
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10132 = lshr i32 %10118, 31
  %10133 = trunc i32 %10132 to i8
  store i8 %10133, i8* %10131, align 1
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10134, align 1
  store %struct.Memory* %loadMem_4aaf09, %struct.Memory** %MEMORY
  %loadMem_4aaf0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10136 = getelementptr inbounds %struct.GPR, %struct.GPR* %10135, i32 0, i32 33
  %10137 = getelementptr inbounds %struct.Reg, %struct.Reg* %10136, i32 0, i32 0
  %PC.i2952 = bitcast %union.anon* %10137 to i64*
  %10138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10139 = getelementptr inbounds %struct.GPR, %struct.GPR* %10138, i32 0, i32 17
  %10140 = getelementptr inbounds %struct.Reg, %struct.Reg* %10139, i32 0, i32 0
  %R8D.i2953 = bitcast %union.anon* %10140 to i32*
  %10141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10142 = getelementptr inbounds %struct.GPR, %struct.GPR* %10141, i32 0, i32 15
  %10143 = getelementptr inbounds %struct.Reg, %struct.Reg* %10142, i32 0, i32 0
  %RBP.i2954 = bitcast %union.anon* %10143 to i64*
  %10144 = bitcast i32* %R8D.i2953 to i64*
  %10145 = load i32, i32* %R8D.i2953
  %10146 = zext i32 %10145 to i64
  %10147 = load i64, i64* %RBP.i2954
  %10148 = sub i64 %10147, 484
  %10149 = load i64, i64* %PC.i2952
  %10150 = add i64 %10149, 7
  store i64 %10150, i64* %PC.i2952
  %10151 = inttoptr i64 %10148 to i32*
  %10152 = load i32, i32* %10151
  %10153 = add i32 %10152, %10145
  %10154 = zext i32 %10153 to i64
  store i64 %10154, i64* %10144, align 8
  %10155 = icmp ult i32 %10153, %10145
  %10156 = icmp ult i32 %10153, %10152
  %10157 = or i1 %10155, %10156
  %10158 = zext i1 %10157 to i8
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10158, i8* %10159, align 1
  %10160 = and i32 %10153, 255
  %10161 = call i32 @llvm.ctpop.i32(i32 %10160)
  %10162 = trunc i32 %10161 to i8
  %10163 = and i8 %10162, 1
  %10164 = xor i8 %10163, 1
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10164, i8* %10165, align 1
  %10166 = xor i32 %10152, %10145
  %10167 = xor i32 %10166, %10153
  %10168 = lshr i32 %10167, 4
  %10169 = trunc i32 %10168 to i8
  %10170 = and i8 %10169, 1
  %10171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10170, i8* %10171, align 1
  %10172 = icmp eq i32 %10153, 0
  %10173 = zext i1 %10172 to i8
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10173, i8* %10174, align 1
  %10175 = lshr i32 %10153, 31
  %10176 = trunc i32 %10175 to i8
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10176, i8* %10177, align 1
  %10178 = lshr i32 %10145, 31
  %10179 = lshr i32 %10152, 31
  %10180 = xor i32 %10175, %10178
  %10181 = xor i32 %10175, %10179
  %10182 = add i32 %10180, %10181
  %10183 = icmp eq i32 %10182, 2
  %10184 = zext i1 %10183 to i8
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10184, i8* %10185, align 1
  store %struct.Memory* %loadMem_4aaf0d, %struct.Memory** %MEMORY
  %loadMem_4aaf14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10187 = getelementptr inbounds %struct.GPR, %struct.GPR* %10186, i32 0, i32 33
  %10188 = getelementptr inbounds %struct.Reg, %struct.Reg* %10187, i32 0, i32 0
  %PC.i2949 = bitcast %union.anon* %10188 to i64*
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10190 = getelementptr inbounds %struct.GPR, %struct.GPR* %10189, i32 0, i32 17
  %10191 = getelementptr inbounds %struct.Reg, %struct.Reg* %10190, i32 0, i32 0
  %R8D.i2950 = bitcast %union.anon* %10191 to i32*
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10193 = getelementptr inbounds %struct.GPR, %struct.GPR* %10192, i32 0, i32 11
  %10194 = getelementptr inbounds %struct.Reg, %struct.Reg* %10193, i32 0, i32 0
  %RDI.i2951 = bitcast %union.anon* %10194 to i64*
  %10195 = load i64, i64* %RDI.i2951
  %10196 = load i32, i32* %R8D.i2950
  %10197 = zext i32 %10196 to i64
  %10198 = load i64, i64* %PC.i2949
  %10199 = add i64 %10198, 3
  store i64 %10199, i64* %PC.i2949
  %10200 = trunc i64 %10195 to i32
  %10201 = add i32 %10196, %10200
  %10202 = zext i32 %10201 to i64
  store i64 %10202, i64* %RDI.i2951, align 8
  %10203 = icmp ult i32 %10201, %10200
  %10204 = icmp ult i32 %10201, %10196
  %10205 = or i1 %10203, %10204
  %10206 = zext i1 %10205 to i8
  %10207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10206, i8* %10207, align 1
  %10208 = and i32 %10201, 255
  %10209 = call i32 @llvm.ctpop.i32(i32 %10208)
  %10210 = trunc i32 %10209 to i8
  %10211 = and i8 %10210, 1
  %10212 = xor i8 %10211, 1
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10212, i8* %10213, align 1
  %10214 = xor i64 %10197, %10195
  %10215 = trunc i64 %10214 to i32
  %10216 = xor i32 %10215, %10201
  %10217 = lshr i32 %10216, 4
  %10218 = trunc i32 %10217 to i8
  %10219 = and i8 %10218, 1
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10219, i8* %10220, align 1
  %10221 = icmp eq i32 %10201, 0
  %10222 = zext i1 %10221 to i8
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10222, i8* %10223, align 1
  %10224 = lshr i32 %10201, 31
  %10225 = trunc i32 %10224 to i8
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10225, i8* %10226, align 1
  %10227 = lshr i32 %10200, 31
  %10228 = lshr i32 %10196, 31
  %10229 = xor i32 %10224, %10227
  %10230 = xor i32 %10224, %10228
  %10231 = add i32 %10229, %10230
  %10232 = icmp eq i32 %10231, 2
  %10233 = zext i1 %10232 to i8
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10233, i8* %10234, align 1
  store %struct.Memory* %loadMem_4aaf14, %struct.Memory** %MEMORY
  %loadMem_4aaf17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 33
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %PC.i2946 = bitcast %union.anon* %10237 to i64*
  %10238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10239 = getelementptr inbounds %struct.GPR, %struct.GPR* %10238, i32 0, i32 11
  %10240 = getelementptr inbounds %struct.Reg, %struct.Reg* %10239, i32 0, i32 0
  %EDI.i2947 = bitcast %union.anon* %10240 to i32*
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10242 = getelementptr inbounds %struct.GPR, %struct.GPR* %10241, i32 0, i32 15
  %10243 = getelementptr inbounds %struct.Reg, %struct.Reg* %10242, i32 0, i32 0
  %RBP.i2948 = bitcast %union.anon* %10243 to i64*
  %10244 = load i64, i64* %RBP.i2948
  %10245 = sub i64 %10244, 516
  %10246 = load i32, i32* %EDI.i2947
  %10247 = zext i32 %10246 to i64
  %10248 = load i64, i64* %PC.i2946
  %10249 = add i64 %10248, 6
  store i64 %10249, i64* %PC.i2946
  %10250 = inttoptr i64 %10245 to i32*
  store i32 %10246, i32* %10250
  store %struct.Memory* %loadMem_4aaf17, %struct.Memory** %MEMORY
  %loadMem_4aaf1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10252 = getelementptr inbounds %struct.GPR, %struct.GPR* %10251, i32 0, i32 33
  %10253 = getelementptr inbounds %struct.Reg, %struct.Reg* %10252, i32 0, i32 0
  %PC.i2943 = bitcast %union.anon* %10253 to i64*
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10255 = getelementptr inbounds %struct.GPR, %struct.GPR* %10254, i32 0, i32 11
  %10256 = getelementptr inbounds %struct.Reg, %struct.Reg* %10255, i32 0, i32 0
  %RDI.i2944 = bitcast %union.anon* %10256 to i64*
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10258 = getelementptr inbounds %struct.GPR, %struct.GPR* %10257, i32 0, i32 15
  %10259 = getelementptr inbounds %struct.Reg, %struct.Reg* %10258, i32 0, i32 0
  %RBP.i2945 = bitcast %union.anon* %10259 to i64*
  %10260 = load i64, i64* %RBP.i2945
  %10261 = sub i64 %10260, 544
  %10262 = load i64, i64* %PC.i2943
  %10263 = add i64 %10262, 6
  store i64 %10263, i64* %PC.i2943
  %10264 = inttoptr i64 %10261 to i32*
  %10265 = load i32, i32* %10264
  %10266 = zext i32 %10265 to i64
  store i64 %10266, i64* %RDI.i2944, align 8
  store %struct.Memory* %loadMem_4aaf1d, %struct.Memory** %MEMORY
  %loadMem_4aaf23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10268 = getelementptr inbounds %struct.GPR, %struct.GPR* %10267, i32 0, i32 33
  %10269 = getelementptr inbounds %struct.Reg, %struct.Reg* %10268, i32 0, i32 0
  %PC.i2940 = bitcast %union.anon* %10269 to i64*
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10271 = getelementptr inbounds %struct.GPR, %struct.GPR* %10270, i32 0, i32 11
  %10272 = getelementptr inbounds %struct.Reg, %struct.Reg* %10271, i32 0, i32 0
  %RDI.i2941 = bitcast %union.anon* %10272 to i64*
  %10273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10274 = getelementptr inbounds %struct.GPR, %struct.GPR* %10273, i32 0, i32 15
  %10275 = getelementptr inbounds %struct.Reg, %struct.Reg* %10274, i32 0, i32 0
  %RBP.i2942 = bitcast %union.anon* %10275 to i64*
  %10276 = load i64, i64* %RDI.i2941
  %10277 = load i64, i64* %RBP.i2942
  %10278 = sub i64 %10277, 540
  %10279 = load i64, i64* %PC.i2940
  %10280 = add i64 %10279, 6
  store i64 %10280, i64* %PC.i2940
  %10281 = trunc i64 %10276 to i32
  %10282 = inttoptr i64 %10278 to i32*
  %10283 = load i32, i32* %10282
  %10284 = add i32 %10283, %10281
  %10285 = zext i32 %10284 to i64
  store i64 %10285, i64* %RDI.i2941, align 8
  %10286 = icmp ult i32 %10284, %10281
  %10287 = icmp ult i32 %10284, %10283
  %10288 = or i1 %10286, %10287
  %10289 = zext i1 %10288 to i8
  %10290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10289, i8* %10290, align 1
  %10291 = and i32 %10284, 255
  %10292 = call i32 @llvm.ctpop.i32(i32 %10291)
  %10293 = trunc i32 %10292 to i8
  %10294 = and i8 %10293, 1
  %10295 = xor i8 %10294, 1
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10295, i8* %10296, align 1
  %10297 = xor i32 %10283, %10281
  %10298 = xor i32 %10297, %10284
  %10299 = lshr i32 %10298, 4
  %10300 = trunc i32 %10299 to i8
  %10301 = and i8 %10300, 1
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10301, i8* %10302, align 1
  %10303 = icmp eq i32 %10284, 0
  %10304 = zext i1 %10303 to i8
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10304, i8* %10305, align 1
  %10306 = lshr i32 %10284, 31
  %10307 = trunc i32 %10306 to i8
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10307, i8* %10308, align 1
  %10309 = lshr i32 %10281, 31
  %10310 = lshr i32 %10283, 31
  %10311 = xor i32 %10306, %10309
  %10312 = xor i32 %10306, %10310
  %10313 = add i32 %10311, %10312
  %10314 = icmp eq i32 %10313, 2
  %10315 = zext i1 %10314 to i8
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10315, i8* %10316, align 1
  store %struct.Memory* %loadMem_4aaf23, %struct.Memory** %MEMORY
  %loadMem_4aaf29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10318 = getelementptr inbounds %struct.GPR, %struct.GPR* %10317, i32 0, i32 33
  %10319 = getelementptr inbounds %struct.Reg, %struct.Reg* %10318, i32 0, i32 0
  %PC.i2938 = bitcast %union.anon* %10319 to i64*
  %10320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10321 = getelementptr inbounds %struct.GPR, %struct.GPR* %10320, i32 0, i32 5
  %10322 = getelementptr inbounds %struct.Reg, %struct.Reg* %10321, i32 0, i32 0
  %RCX.i2939 = bitcast %union.anon* %10322 to i64*
  %10323 = load i64, i64* %PC.i2938
  %10324 = add i64 %10323, 8
  store i64 %10324, i64* %PC.i2938
  %10325 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10325, i64* %RCX.i2939, align 8
  store %struct.Memory* %loadMem_4aaf29, %struct.Memory** %MEMORY
  %loadMem_4aaf31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10327 = getelementptr inbounds %struct.GPR, %struct.GPR* %10326, i32 0, i32 33
  %10328 = getelementptr inbounds %struct.Reg, %struct.Reg* %10327, i32 0, i32 0
  %PC.i2936 = bitcast %union.anon* %10328 to i64*
  %10329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10330 = getelementptr inbounds %struct.GPR, %struct.GPR* %10329, i32 0, i32 5
  %10331 = getelementptr inbounds %struct.Reg, %struct.Reg* %10330, i32 0, i32 0
  %RCX.i2937 = bitcast %union.anon* %10331 to i64*
  %10332 = load i64, i64* %RCX.i2937
  %10333 = load i64, i64* %PC.i2936
  %10334 = add i64 %10333, 7
  store i64 %10334, i64* %PC.i2936
  %10335 = add i64 13112, %10332
  store i64 %10335, i64* %RCX.i2937, align 8
  %10336 = icmp ult i64 %10335, %10332
  %10337 = icmp ult i64 %10335, 13112
  %10338 = or i1 %10336, %10337
  %10339 = zext i1 %10338 to i8
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10339, i8* %10340, align 1
  %10341 = trunc i64 %10335 to i32
  %10342 = and i32 %10341, 255
  %10343 = call i32 @llvm.ctpop.i32(i32 %10342)
  %10344 = trunc i32 %10343 to i8
  %10345 = and i8 %10344, 1
  %10346 = xor i8 %10345, 1
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10346, i8* %10347, align 1
  %10348 = xor i64 13112, %10332
  %10349 = xor i64 %10348, %10335
  %10350 = lshr i64 %10349, 4
  %10351 = trunc i64 %10350 to i8
  %10352 = and i8 %10351, 1
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10352, i8* %10353, align 1
  %10354 = icmp eq i64 %10335, 0
  %10355 = zext i1 %10354 to i8
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10355, i8* %10356, align 1
  %10357 = lshr i64 %10335, 63
  %10358 = trunc i64 %10357 to i8
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10358, i8* %10359, align 1
  %10360 = lshr i64 %10332, 63
  %10361 = xor i64 %10357, %10360
  %10362 = add i64 %10361, %10357
  %10363 = icmp eq i64 %10362, 2
  %10364 = zext i1 %10363 to i8
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10364, i8* %10365, align 1
  store %struct.Memory* %loadMem_4aaf31, %struct.Memory** %MEMORY
  %loadMem_4aaf38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10367 = getelementptr inbounds %struct.GPR, %struct.GPR* %10366, i32 0, i32 33
  %10368 = getelementptr inbounds %struct.Reg, %struct.Reg* %10367, i32 0, i32 0
  %PC.i2933 = bitcast %union.anon* %10368 to i64*
  %10369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10370 = getelementptr inbounds %struct.GPR, %struct.GPR* %10369, i32 0, i32 7
  %10371 = getelementptr inbounds %struct.Reg, %struct.Reg* %10370, i32 0, i32 0
  %RDX.i2934 = bitcast %union.anon* %10371 to i64*
  %10372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10373 = getelementptr inbounds %struct.GPR, %struct.GPR* %10372, i32 0, i32 15
  %10374 = getelementptr inbounds %struct.Reg, %struct.Reg* %10373, i32 0, i32 0
  %RBP.i2935 = bitcast %union.anon* %10374 to i64*
  %10375 = load i64, i64* %RBP.i2935
  %10376 = sub i64 %10375, 24
  %10377 = load i64, i64* %PC.i2933
  %10378 = add i64 %10377, 4
  store i64 %10378, i64* %PC.i2933
  %10379 = inttoptr i64 %10376 to i32*
  %10380 = load i32, i32* %10379
  %10381 = sext i32 %10380 to i64
  store i64 %10381, i64* %RDX.i2934, align 8
  store %struct.Memory* %loadMem_4aaf38, %struct.Memory** %MEMORY
  %loadMem_4aaf3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10383 = getelementptr inbounds %struct.GPR, %struct.GPR* %10382, i32 0, i32 33
  %10384 = getelementptr inbounds %struct.Reg, %struct.Reg* %10383, i32 0, i32 0
  %PC.i2931 = bitcast %union.anon* %10384 to i64*
  %10385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10386 = getelementptr inbounds %struct.GPR, %struct.GPR* %10385, i32 0, i32 7
  %10387 = getelementptr inbounds %struct.Reg, %struct.Reg* %10386, i32 0, i32 0
  %RDX.i2932 = bitcast %union.anon* %10387 to i64*
  %10388 = load i64, i64* %RDX.i2932
  %10389 = load i64, i64* %PC.i2931
  %10390 = add i64 %10389, 4
  store i64 %10390, i64* %PC.i2931
  %10391 = shl i64 %10388, 5
  %10392 = icmp slt i64 %10391, 0
  %10393 = shl i64 %10391, 1
  store i64 %10393, i64* %RDX.i2932, align 8
  %10394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10395 = zext i1 %10392 to i8
  store i8 %10395, i8* %10394, align 1
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10397 = trunc i64 %10393 to i32
  %10398 = and i32 %10397, 254
  %10399 = call i32 @llvm.ctpop.i32(i32 %10398)
  %10400 = trunc i32 %10399 to i8
  %10401 = and i8 %10400, 1
  %10402 = xor i8 %10401, 1
  store i8 %10402, i8* %10396, align 1
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10403, align 1
  %10404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10405 = icmp eq i64 %10393, 0
  %10406 = zext i1 %10405 to i8
  store i8 %10406, i8* %10404, align 1
  %10407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10408 = lshr i64 %10393, 63
  %10409 = trunc i64 %10408 to i8
  store i8 %10409, i8* %10407, align 1
  %10410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10410, align 1
  store %struct.Memory* %loadMem_4aaf3c, %struct.Memory** %MEMORY
  %loadMem_4aaf40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10412 = getelementptr inbounds %struct.GPR, %struct.GPR* %10411, i32 0, i32 33
  %10413 = getelementptr inbounds %struct.Reg, %struct.Reg* %10412, i32 0, i32 0
  %PC.i2928 = bitcast %union.anon* %10413 to i64*
  %10414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10415 = getelementptr inbounds %struct.GPR, %struct.GPR* %10414, i32 0, i32 5
  %10416 = getelementptr inbounds %struct.Reg, %struct.Reg* %10415, i32 0, i32 0
  %RCX.i2929 = bitcast %union.anon* %10416 to i64*
  %10417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10418 = getelementptr inbounds %struct.GPR, %struct.GPR* %10417, i32 0, i32 7
  %10419 = getelementptr inbounds %struct.Reg, %struct.Reg* %10418, i32 0, i32 0
  %RDX.i2930 = bitcast %union.anon* %10419 to i64*
  %10420 = load i64, i64* %RCX.i2929
  %10421 = load i64, i64* %RDX.i2930
  %10422 = load i64, i64* %PC.i2928
  %10423 = add i64 %10422, 3
  store i64 %10423, i64* %PC.i2928
  %10424 = add i64 %10421, %10420
  store i64 %10424, i64* %RCX.i2929, align 8
  %10425 = icmp ult i64 %10424, %10420
  %10426 = icmp ult i64 %10424, %10421
  %10427 = or i1 %10425, %10426
  %10428 = zext i1 %10427 to i8
  %10429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10428, i8* %10429, align 1
  %10430 = trunc i64 %10424 to i32
  %10431 = and i32 %10430, 255
  %10432 = call i32 @llvm.ctpop.i32(i32 %10431)
  %10433 = trunc i32 %10432 to i8
  %10434 = and i8 %10433, 1
  %10435 = xor i8 %10434, 1
  %10436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10435, i8* %10436, align 1
  %10437 = xor i64 %10421, %10420
  %10438 = xor i64 %10437, %10424
  %10439 = lshr i64 %10438, 4
  %10440 = trunc i64 %10439 to i8
  %10441 = and i8 %10440, 1
  %10442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10441, i8* %10442, align 1
  %10443 = icmp eq i64 %10424, 0
  %10444 = zext i1 %10443 to i8
  %10445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10444, i8* %10445, align 1
  %10446 = lshr i64 %10424, 63
  %10447 = trunc i64 %10446 to i8
  %10448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10447, i8* %10448, align 1
  %10449 = lshr i64 %10420, 63
  %10450 = lshr i64 %10421, 63
  %10451 = xor i64 %10446, %10449
  %10452 = xor i64 %10446, %10450
  %10453 = add i64 %10451, %10452
  %10454 = icmp eq i64 %10453, 2
  %10455 = zext i1 %10454 to i8
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10455, i8* %10456, align 1
  store %struct.Memory* %loadMem_4aaf40, %struct.Memory** %MEMORY
  %loadMem_4aaf43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10458 = getelementptr inbounds %struct.GPR, %struct.GPR* %10457, i32 0, i32 33
  %10459 = getelementptr inbounds %struct.Reg, %struct.Reg* %10458, i32 0, i32 0
  %PC.i2925 = bitcast %union.anon* %10459 to i64*
  %10460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10461 = getelementptr inbounds %struct.GPR, %struct.GPR* %10460, i32 0, i32 11
  %10462 = getelementptr inbounds %struct.Reg, %struct.Reg* %10461, i32 0, i32 0
  %EDI.i2926 = bitcast %union.anon* %10462 to i32*
  %10463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10464 = getelementptr inbounds %struct.GPR, %struct.GPR* %10463, i32 0, i32 5
  %10465 = getelementptr inbounds %struct.Reg, %struct.Reg* %10464, i32 0, i32 0
  %RCX.i2927 = bitcast %union.anon* %10465 to i64*
  %10466 = load i64, i64* %RCX.i2927
  %10467 = load i32, i32* %EDI.i2926
  %10468 = zext i32 %10467 to i64
  %10469 = load i64, i64* %PC.i2925
  %10470 = add i64 %10469, 2
  store i64 %10470, i64* %PC.i2925
  %10471 = inttoptr i64 %10466 to i32*
  store i32 %10467, i32* %10471
  store %struct.Memory* %loadMem_4aaf43, %struct.Memory** %MEMORY
  %loadMem_4aaf45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10473 = getelementptr inbounds %struct.GPR, %struct.GPR* %10472, i32 0, i32 33
  %10474 = getelementptr inbounds %struct.Reg, %struct.Reg* %10473, i32 0, i32 0
  %PC.i2922 = bitcast %union.anon* %10474 to i64*
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10476 = getelementptr inbounds %struct.GPR, %struct.GPR* %10475, i32 0, i32 11
  %10477 = getelementptr inbounds %struct.Reg, %struct.Reg* %10476, i32 0, i32 0
  %RDI.i2923 = bitcast %union.anon* %10477 to i64*
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10479 = getelementptr inbounds %struct.GPR, %struct.GPR* %10478, i32 0, i32 15
  %10480 = getelementptr inbounds %struct.Reg, %struct.Reg* %10479, i32 0, i32 0
  %RBP.i2924 = bitcast %union.anon* %10480 to i64*
  %10481 = load i64, i64* %RBP.i2924
  %10482 = sub i64 %10481, 536
  %10483 = load i64, i64* %PC.i2922
  %10484 = add i64 %10483, 6
  store i64 %10484, i64* %PC.i2922
  %10485 = inttoptr i64 %10482 to i32*
  %10486 = load i32, i32* %10485
  %10487 = zext i32 %10486 to i64
  store i64 %10487, i64* %RDI.i2923, align 8
  store %struct.Memory* %loadMem_4aaf45, %struct.Memory** %MEMORY
  %loadMem_4aaf4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10489 = getelementptr inbounds %struct.GPR, %struct.GPR* %10488, i32 0, i32 33
  %10490 = getelementptr inbounds %struct.Reg, %struct.Reg* %10489, i32 0, i32 0
  %PC.i2919 = bitcast %union.anon* %10490 to i64*
  %10491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10492 = getelementptr inbounds %struct.GPR, %struct.GPR* %10491, i32 0, i32 17
  %10493 = getelementptr inbounds %struct.Reg, %struct.Reg* %10492, i32 0, i32 0
  %R8D.i2920 = bitcast %union.anon* %10493 to i32*
  %10494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10495 = getelementptr inbounds %struct.GPR, %struct.GPR* %10494, i32 0, i32 15
  %10496 = getelementptr inbounds %struct.Reg, %struct.Reg* %10495, i32 0, i32 0
  %RBP.i2921 = bitcast %union.anon* %10496 to i64*
  %10497 = bitcast i32* %R8D.i2920 to i64*
  %10498 = load i64, i64* %RBP.i2921
  %10499 = sub i64 %10498, 532
  %10500 = load i64, i64* %PC.i2919
  %10501 = add i64 %10500, 7
  store i64 %10501, i64* %PC.i2919
  %10502 = inttoptr i64 %10499 to i32*
  %10503 = load i32, i32* %10502
  %10504 = zext i32 %10503 to i64
  store i64 %10504, i64* %10497, align 8
  store %struct.Memory* %loadMem_4aaf4b, %struct.Memory** %MEMORY
  %loadMem_4aaf52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10506 = getelementptr inbounds %struct.GPR, %struct.GPR* %10505, i32 0, i32 33
  %10507 = getelementptr inbounds %struct.Reg, %struct.Reg* %10506, i32 0, i32 0
  %PC.i2917 = bitcast %union.anon* %10507 to i64*
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10509 = getelementptr inbounds %struct.GPR, %struct.GPR* %10508, i32 0, i32 17
  %10510 = getelementptr inbounds %struct.Reg, %struct.Reg* %10509, i32 0, i32 0
  %R8D.i2918 = bitcast %union.anon* %10510 to i32*
  %10511 = bitcast i32* %R8D.i2918 to i64*
  %10512 = load i32, i32* %R8D.i2918
  %10513 = zext i32 %10512 to i64
  %10514 = load i64, i64* %PC.i2917
  %10515 = add i64 %10514, 3
  store i64 %10515, i64* %PC.i2917
  %10516 = shl i64 %10513, 32
  %10517 = ashr i64 %10516, 33
  %10518 = trunc i64 %10513 to i8
  %10519 = and i8 %10518, 1
  %10520 = trunc i64 %10517 to i32
  %10521 = and i64 %10517, 4294967295
  store i64 %10521, i64* %10511, align 8
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10519, i8* %10522, align 1
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10524 = and i32 %10520, 255
  %10525 = call i32 @llvm.ctpop.i32(i32 %10524)
  %10526 = trunc i32 %10525 to i8
  %10527 = and i8 %10526, 1
  %10528 = xor i8 %10527, 1
  store i8 %10528, i8* %10523, align 1
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10529, align 1
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10531 = icmp eq i32 %10520, 0
  %10532 = zext i1 %10531 to i8
  store i8 %10532, i8* %10530, align 1
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10534 = lshr i32 %10520, 31
  %10535 = trunc i32 %10534 to i8
  store i8 %10535, i8* %10533, align 1
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10536, align 1
  store %struct.Memory* %loadMem_4aaf52, %struct.Memory** %MEMORY
  %loadMem_4aaf56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10538 = getelementptr inbounds %struct.GPR, %struct.GPR* %10537, i32 0, i32 33
  %10539 = getelementptr inbounds %struct.Reg, %struct.Reg* %10538, i32 0, i32 0
  %PC.i2914 = bitcast %union.anon* %10539 to i64*
  %10540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10541 = getelementptr inbounds %struct.GPR, %struct.GPR* %10540, i32 0, i32 17
  %10542 = getelementptr inbounds %struct.Reg, %struct.Reg* %10541, i32 0, i32 0
  %R8D.i2915 = bitcast %union.anon* %10542 to i32*
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10544 = getelementptr inbounds %struct.GPR, %struct.GPR* %10543, i32 0, i32 11
  %10545 = getelementptr inbounds %struct.Reg, %struct.Reg* %10544, i32 0, i32 0
  %RDI.i2916 = bitcast %union.anon* %10545 to i64*
  %10546 = load i64, i64* %RDI.i2916
  %10547 = load i32, i32* %R8D.i2915
  %10548 = zext i32 %10547 to i64
  %10549 = load i64, i64* %PC.i2914
  %10550 = add i64 %10549, 3
  store i64 %10550, i64* %PC.i2914
  %10551 = trunc i64 %10546 to i32
  %10552 = add i32 %10547, %10551
  %10553 = zext i32 %10552 to i64
  store i64 %10553, i64* %RDI.i2916, align 8
  %10554 = icmp ult i32 %10552, %10551
  %10555 = icmp ult i32 %10552, %10547
  %10556 = or i1 %10554, %10555
  %10557 = zext i1 %10556 to i8
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10557, i8* %10558, align 1
  %10559 = and i32 %10552, 255
  %10560 = call i32 @llvm.ctpop.i32(i32 %10559)
  %10561 = trunc i32 %10560 to i8
  %10562 = and i8 %10561, 1
  %10563 = xor i8 %10562, 1
  %10564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10563, i8* %10564, align 1
  %10565 = xor i64 %10548, %10546
  %10566 = trunc i64 %10565 to i32
  %10567 = xor i32 %10566, %10552
  %10568 = lshr i32 %10567, 4
  %10569 = trunc i32 %10568 to i8
  %10570 = and i8 %10569, 1
  %10571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10570, i8* %10571, align 1
  %10572 = icmp eq i32 %10552, 0
  %10573 = zext i1 %10572 to i8
  %10574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10573, i8* %10574, align 1
  %10575 = lshr i32 %10552, 31
  %10576 = trunc i32 %10575 to i8
  %10577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10576, i8* %10577, align 1
  %10578 = lshr i32 %10551, 31
  %10579 = lshr i32 %10547, 31
  %10580 = xor i32 %10575, %10578
  %10581 = xor i32 %10575, %10579
  %10582 = add i32 %10580, %10581
  %10583 = icmp eq i32 %10582, 2
  %10584 = zext i1 %10583 to i8
  %10585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10584, i8* %10585, align 1
  store %struct.Memory* %loadMem_4aaf56, %struct.Memory** %MEMORY
  %loadMem_4aaf59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10587 = getelementptr inbounds %struct.GPR, %struct.GPR* %10586, i32 0, i32 33
  %10588 = getelementptr inbounds %struct.Reg, %struct.Reg* %10587, i32 0, i32 0
  %PC.i2912 = bitcast %union.anon* %10588 to i64*
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 5
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %RCX.i2913 = bitcast %union.anon* %10591 to i64*
  %10592 = load i64, i64* %PC.i2912
  %10593 = add i64 %10592, 8
  store i64 %10593, i64* %PC.i2912
  %10594 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10594, i64* %RCX.i2913, align 8
  store %struct.Memory* %loadMem_4aaf59, %struct.Memory** %MEMORY
  %loadMem_4aaf61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 33
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %PC.i2910 = bitcast %union.anon* %10597 to i64*
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10599 = getelementptr inbounds %struct.GPR, %struct.GPR* %10598, i32 0, i32 5
  %10600 = getelementptr inbounds %struct.Reg, %struct.Reg* %10599, i32 0, i32 0
  %RCX.i2911 = bitcast %union.anon* %10600 to i64*
  %10601 = load i64, i64* %RCX.i2911
  %10602 = load i64, i64* %PC.i2910
  %10603 = add i64 %10602, 7
  store i64 %10603, i64* %PC.i2910
  %10604 = add i64 13112, %10601
  store i64 %10604, i64* %RCX.i2911, align 8
  %10605 = icmp ult i64 %10604, %10601
  %10606 = icmp ult i64 %10604, 13112
  %10607 = or i1 %10605, %10606
  %10608 = zext i1 %10607 to i8
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10608, i8* %10609, align 1
  %10610 = trunc i64 %10604 to i32
  %10611 = and i32 %10610, 255
  %10612 = call i32 @llvm.ctpop.i32(i32 %10611)
  %10613 = trunc i32 %10612 to i8
  %10614 = and i8 %10613, 1
  %10615 = xor i8 %10614, 1
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10615, i8* %10616, align 1
  %10617 = xor i64 13112, %10601
  %10618 = xor i64 %10617, %10604
  %10619 = lshr i64 %10618, 4
  %10620 = trunc i64 %10619 to i8
  %10621 = and i8 %10620, 1
  %10622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10621, i8* %10622, align 1
  %10623 = icmp eq i64 %10604, 0
  %10624 = zext i1 %10623 to i8
  %10625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10624, i8* %10625, align 1
  %10626 = lshr i64 %10604, 63
  %10627 = trunc i64 %10626 to i8
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10627, i8* %10628, align 1
  %10629 = lshr i64 %10601, 63
  %10630 = xor i64 %10626, %10629
  %10631 = add i64 %10630, %10626
  %10632 = icmp eq i64 %10631, 2
  %10633 = zext i1 %10632 to i8
  %10634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10633, i8* %10634, align 1
  store %struct.Memory* %loadMem_4aaf61, %struct.Memory** %MEMORY
  %loadMem_4aaf68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 33
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %PC.i2907 = bitcast %union.anon* %10637 to i64*
  %10638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10639 = getelementptr inbounds %struct.GPR, %struct.GPR* %10638, i32 0, i32 7
  %10640 = getelementptr inbounds %struct.Reg, %struct.Reg* %10639, i32 0, i32 0
  %RDX.i2908 = bitcast %union.anon* %10640 to i64*
  %10641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10642 = getelementptr inbounds %struct.GPR, %struct.GPR* %10641, i32 0, i32 15
  %10643 = getelementptr inbounds %struct.Reg, %struct.Reg* %10642, i32 0, i32 0
  %RBP.i2909 = bitcast %union.anon* %10643 to i64*
  %10644 = load i64, i64* %RBP.i2909
  %10645 = sub i64 %10644, 24
  %10646 = load i64, i64* %PC.i2907
  %10647 = add i64 %10646, 4
  store i64 %10647, i64* %PC.i2907
  %10648 = inttoptr i64 %10645 to i32*
  %10649 = load i32, i32* %10648
  %10650 = sext i32 %10649 to i64
  store i64 %10650, i64* %RDX.i2908, align 8
  store %struct.Memory* %loadMem_4aaf68, %struct.Memory** %MEMORY
  %loadMem_4aaf6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10652 = getelementptr inbounds %struct.GPR, %struct.GPR* %10651, i32 0, i32 33
  %10653 = getelementptr inbounds %struct.Reg, %struct.Reg* %10652, i32 0, i32 0
  %PC.i2905 = bitcast %union.anon* %10653 to i64*
  %10654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10655 = getelementptr inbounds %struct.GPR, %struct.GPR* %10654, i32 0, i32 7
  %10656 = getelementptr inbounds %struct.Reg, %struct.Reg* %10655, i32 0, i32 0
  %RDX.i2906 = bitcast %union.anon* %10656 to i64*
  %10657 = load i64, i64* %RDX.i2906
  %10658 = load i64, i64* %PC.i2905
  %10659 = add i64 %10658, 4
  store i64 %10659, i64* %PC.i2905
  %10660 = shl i64 %10657, 5
  %10661 = icmp slt i64 %10660, 0
  %10662 = shl i64 %10660, 1
  store i64 %10662, i64* %RDX.i2906, align 8
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10664 = zext i1 %10661 to i8
  store i8 %10664, i8* %10663, align 1
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10666 = trunc i64 %10662 to i32
  %10667 = and i32 %10666, 254
  %10668 = call i32 @llvm.ctpop.i32(i32 %10667)
  %10669 = trunc i32 %10668 to i8
  %10670 = and i8 %10669, 1
  %10671 = xor i8 %10670, 1
  store i8 %10671, i8* %10665, align 1
  %10672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10672, align 1
  %10673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10674 = icmp eq i64 %10662, 0
  %10675 = zext i1 %10674 to i8
  store i8 %10675, i8* %10673, align 1
  %10676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10677 = lshr i64 %10662, 63
  %10678 = trunc i64 %10677 to i8
  store i8 %10678, i8* %10676, align 1
  %10679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10679, align 1
  store %struct.Memory* %loadMem_4aaf6c, %struct.Memory** %MEMORY
  %loadMem_4aaf70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10681 = getelementptr inbounds %struct.GPR, %struct.GPR* %10680, i32 0, i32 33
  %10682 = getelementptr inbounds %struct.Reg, %struct.Reg* %10681, i32 0, i32 0
  %PC.i2902 = bitcast %union.anon* %10682 to i64*
  %10683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10684 = getelementptr inbounds %struct.GPR, %struct.GPR* %10683, i32 0, i32 5
  %10685 = getelementptr inbounds %struct.Reg, %struct.Reg* %10684, i32 0, i32 0
  %RCX.i2903 = bitcast %union.anon* %10685 to i64*
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10687 = getelementptr inbounds %struct.GPR, %struct.GPR* %10686, i32 0, i32 7
  %10688 = getelementptr inbounds %struct.Reg, %struct.Reg* %10687, i32 0, i32 0
  %RDX.i2904 = bitcast %union.anon* %10688 to i64*
  %10689 = load i64, i64* %RCX.i2903
  %10690 = load i64, i64* %RDX.i2904
  %10691 = load i64, i64* %PC.i2902
  %10692 = add i64 %10691, 3
  store i64 %10692, i64* %PC.i2902
  %10693 = add i64 %10690, %10689
  store i64 %10693, i64* %RCX.i2903, align 8
  %10694 = icmp ult i64 %10693, %10689
  %10695 = icmp ult i64 %10693, %10690
  %10696 = or i1 %10694, %10695
  %10697 = zext i1 %10696 to i8
  %10698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10697, i8* %10698, align 1
  %10699 = trunc i64 %10693 to i32
  %10700 = and i32 %10699, 255
  %10701 = call i32 @llvm.ctpop.i32(i32 %10700)
  %10702 = trunc i32 %10701 to i8
  %10703 = and i8 %10702, 1
  %10704 = xor i8 %10703, 1
  %10705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10704, i8* %10705, align 1
  %10706 = xor i64 %10690, %10689
  %10707 = xor i64 %10706, %10693
  %10708 = lshr i64 %10707, 4
  %10709 = trunc i64 %10708 to i8
  %10710 = and i8 %10709, 1
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10710, i8* %10711, align 1
  %10712 = icmp eq i64 %10693, 0
  %10713 = zext i1 %10712 to i8
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10713, i8* %10714, align 1
  %10715 = lshr i64 %10693, 63
  %10716 = trunc i64 %10715 to i8
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10716, i8* %10717, align 1
  %10718 = lshr i64 %10689, 63
  %10719 = lshr i64 %10690, 63
  %10720 = xor i64 %10715, %10718
  %10721 = xor i64 %10715, %10719
  %10722 = add i64 %10720, %10721
  %10723 = icmp eq i64 %10722, 2
  %10724 = zext i1 %10723 to i8
  %10725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10724, i8* %10725, align 1
  store %struct.Memory* %loadMem_4aaf70, %struct.Memory** %MEMORY
  %loadMem_4aaf73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10727 = getelementptr inbounds %struct.GPR, %struct.GPR* %10726, i32 0, i32 33
  %10728 = getelementptr inbounds %struct.Reg, %struct.Reg* %10727, i32 0, i32 0
  %PC.i2899 = bitcast %union.anon* %10728 to i64*
  %10729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10730 = getelementptr inbounds %struct.GPR, %struct.GPR* %10729, i32 0, i32 11
  %10731 = getelementptr inbounds %struct.Reg, %struct.Reg* %10730, i32 0, i32 0
  %EDI.i2900 = bitcast %union.anon* %10731 to i32*
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10733 = getelementptr inbounds %struct.GPR, %struct.GPR* %10732, i32 0, i32 5
  %10734 = getelementptr inbounds %struct.Reg, %struct.Reg* %10733, i32 0, i32 0
  %RCX.i2901 = bitcast %union.anon* %10734 to i64*
  %10735 = load i64, i64* %RCX.i2901
  %10736 = add i64 %10735, 8
  %10737 = load i32, i32* %EDI.i2900
  %10738 = zext i32 %10737 to i64
  %10739 = load i64, i64* %PC.i2899
  %10740 = add i64 %10739, 3
  store i64 %10740, i64* %PC.i2899
  %10741 = inttoptr i64 %10736 to i32*
  store i32 %10737, i32* %10741
  store %struct.Memory* %loadMem_4aaf73, %struct.Memory** %MEMORY
  %loadMem_4aaf76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10743 = getelementptr inbounds %struct.GPR, %struct.GPR* %10742, i32 0, i32 33
  %10744 = getelementptr inbounds %struct.Reg, %struct.Reg* %10743, i32 0, i32 0
  %PC.i2896 = bitcast %union.anon* %10744 to i64*
  %10745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10746 = getelementptr inbounds %struct.GPR, %struct.GPR* %10745, i32 0, i32 11
  %10747 = getelementptr inbounds %struct.Reg, %struct.Reg* %10746, i32 0, i32 0
  %RDI.i2897 = bitcast %union.anon* %10747 to i64*
  %10748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10749 = getelementptr inbounds %struct.GPR, %struct.GPR* %10748, i32 0, i32 15
  %10750 = getelementptr inbounds %struct.Reg, %struct.Reg* %10749, i32 0, i32 0
  %RBP.i2898 = bitcast %union.anon* %10750 to i64*
  %10751 = load i64, i64* %RBP.i2898
  %10752 = sub i64 %10751, 544
  %10753 = load i64, i64* %PC.i2896
  %10754 = add i64 %10753, 6
  store i64 %10754, i64* %PC.i2896
  %10755 = inttoptr i64 %10752 to i32*
  %10756 = load i32, i32* %10755
  %10757 = zext i32 %10756 to i64
  store i64 %10757, i64* %RDI.i2897, align 8
  store %struct.Memory* %loadMem_4aaf76, %struct.Memory** %MEMORY
  %loadMem_4aaf7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10759 = getelementptr inbounds %struct.GPR, %struct.GPR* %10758, i32 0, i32 33
  %10760 = getelementptr inbounds %struct.Reg, %struct.Reg* %10759, i32 0, i32 0
  %PC.i2893 = bitcast %union.anon* %10760 to i64*
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 11
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %RDI.i2894 = bitcast %union.anon* %10763 to i64*
  %10764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10765 = getelementptr inbounds %struct.GPR, %struct.GPR* %10764, i32 0, i32 15
  %10766 = getelementptr inbounds %struct.Reg, %struct.Reg* %10765, i32 0, i32 0
  %RBP.i2895 = bitcast %union.anon* %10766 to i64*
  %10767 = load i64, i64* %RDI.i2894
  %10768 = load i64, i64* %RBP.i2895
  %10769 = sub i64 %10768, 540
  %10770 = load i64, i64* %PC.i2893
  %10771 = add i64 %10770, 6
  store i64 %10771, i64* %PC.i2893
  %10772 = trunc i64 %10767 to i32
  %10773 = inttoptr i64 %10769 to i32*
  %10774 = load i32, i32* %10773
  %10775 = sub i32 %10772, %10774
  %10776 = zext i32 %10775 to i64
  store i64 %10776, i64* %RDI.i2894, align 8
  %10777 = icmp ult i32 %10772, %10774
  %10778 = zext i1 %10777 to i8
  %10779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10778, i8* %10779, align 1
  %10780 = and i32 %10775, 255
  %10781 = call i32 @llvm.ctpop.i32(i32 %10780)
  %10782 = trunc i32 %10781 to i8
  %10783 = and i8 %10782, 1
  %10784 = xor i8 %10783, 1
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10784, i8* %10785, align 1
  %10786 = xor i32 %10774, %10772
  %10787 = xor i32 %10786, %10775
  %10788 = lshr i32 %10787, 4
  %10789 = trunc i32 %10788 to i8
  %10790 = and i8 %10789, 1
  %10791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10790, i8* %10791, align 1
  %10792 = icmp eq i32 %10775, 0
  %10793 = zext i1 %10792 to i8
  %10794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10793, i8* %10794, align 1
  %10795 = lshr i32 %10775, 31
  %10796 = trunc i32 %10795 to i8
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10796, i8* %10797, align 1
  %10798 = lshr i32 %10772, 31
  %10799 = lshr i32 %10774, 31
  %10800 = xor i32 %10799, %10798
  %10801 = xor i32 %10795, %10798
  %10802 = add i32 %10801, %10800
  %10803 = icmp eq i32 %10802, 2
  %10804 = zext i1 %10803 to i8
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10804, i8* %10805, align 1
  store %struct.Memory* %loadMem_4aaf7c, %struct.Memory** %MEMORY
  %loadMem_4aaf82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10807 = getelementptr inbounds %struct.GPR, %struct.GPR* %10806, i32 0, i32 33
  %10808 = getelementptr inbounds %struct.Reg, %struct.Reg* %10807, i32 0, i32 0
  %PC.i2891 = bitcast %union.anon* %10808 to i64*
  %10809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10810 = getelementptr inbounds %struct.GPR, %struct.GPR* %10809, i32 0, i32 5
  %10811 = getelementptr inbounds %struct.Reg, %struct.Reg* %10810, i32 0, i32 0
  %RCX.i2892 = bitcast %union.anon* %10811 to i64*
  %10812 = load i64, i64* %PC.i2891
  %10813 = add i64 %10812, 8
  store i64 %10813, i64* %PC.i2891
  %10814 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10814, i64* %RCX.i2892, align 8
  store %struct.Memory* %loadMem_4aaf82, %struct.Memory** %MEMORY
  %loadMem_4aaf8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10816 = getelementptr inbounds %struct.GPR, %struct.GPR* %10815, i32 0, i32 33
  %10817 = getelementptr inbounds %struct.Reg, %struct.Reg* %10816, i32 0, i32 0
  %PC.i2889 = bitcast %union.anon* %10817 to i64*
  %10818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10819 = getelementptr inbounds %struct.GPR, %struct.GPR* %10818, i32 0, i32 5
  %10820 = getelementptr inbounds %struct.Reg, %struct.Reg* %10819, i32 0, i32 0
  %RCX.i2890 = bitcast %union.anon* %10820 to i64*
  %10821 = load i64, i64* %RCX.i2890
  %10822 = load i64, i64* %PC.i2889
  %10823 = add i64 %10822, 7
  store i64 %10823, i64* %PC.i2889
  %10824 = add i64 13112, %10821
  store i64 %10824, i64* %RCX.i2890, align 8
  %10825 = icmp ult i64 %10824, %10821
  %10826 = icmp ult i64 %10824, 13112
  %10827 = or i1 %10825, %10826
  %10828 = zext i1 %10827 to i8
  %10829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10828, i8* %10829, align 1
  %10830 = trunc i64 %10824 to i32
  %10831 = and i32 %10830, 255
  %10832 = call i32 @llvm.ctpop.i32(i32 %10831)
  %10833 = trunc i32 %10832 to i8
  %10834 = and i8 %10833, 1
  %10835 = xor i8 %10834, 1
  %10836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10835, i8* %10836, align 1
  %10837 = xor i64 13112, %10821
  %10838 = xor i64 %10837, %10824
  %10839 = lshr i64 %10838, 4
  %10840 = trunc i64 %10839 to i8
  %10841 = and i8 %10840, 1
  %10842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10841, i8* %10842, align 1
  %10843 = icmp eq i64 %10824, 0
  %10844 = zext i1 %10843 to i8
  %10845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10844, i8* %10845, align 1
  %10846 = lshr i64 %10824, 63
  %10847 = trunc i64 %10846 to i8
  %10848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10847, i8* %10848, align 1
  %10849 = lshr i64 %10821, 63
  %10850 = xor i64 %10846, %10849
  %10851 = add i64 %10850, %10846
  %10852 = icmp eq i64 %10851, 2
  %10853 = zext i1 %10852 to i8
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10853, i8* %10854, align 1
  store %struct.Memory* %loadMem_4aaf8a, %struct.Memory** %MEMORY
  %loadMem_4aaf91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10856 = getelementptr inbounds %struct.GPR, %struct.GPR* %10855, i32 0, i32 33
  %10857 = getelementptr inbounds %struct.Reg, %struct.Reg* %10856, i32 0, i32 0
  %PC.i2886 = bitcast %union.anon* %10857 to i64*
  %10858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10859 = getelementptr inbounds %struct.GPR, %struct.GPR* %10858, i32 0, i32 7
  %10860 = getelementptr inbounds %struct.Reg, %struct.Reg* %10859, i32 0, i32 0
  %RDX.i2887 = bitcast %union.anon* %10860 to i64*
  %10861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10862 = getelementptr inbounds %struct.GPR, %struct.GPR* %10861, i32 0, i32 15
  %10863 = getelementptr inbounds %struct.Reg, %struct.Reg* %10862, i32 0, i32 0
  %RBP.i2888 = bitcast %union.anon* %10863 to i64*
  %10864 = load i64, i64* %RBP.i2888
  %10865 = sub i64 %10864, 24
  %10866 = load i64, i64* %PC.i2886
  %10867 = add i64 %10866, 4
  store i64 %10867, i64* %PC.i2886
  %10868 = inttoptr i64 %10865 to i32*
  %10869 = load i32, i32* %10868
  %10870 = sext i32 %10869 to i64
  store i64 %10870, i64* %RDX.i2887, align 8
  store %struct.Memory* %loadMem_4aaf91, %struct.Memory** %MEMORY
  %loadMem_4aaf95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10872 = getelementptr inbounds %struct.GPR, %struct.GPR* %10871, i32 0, i32 33
  %10873 = getelementptr inbounds %struct.Reg, %struct.Reg* %10872, i32 0, i32 0
  %PC.i2884 = bitcast %union.anon* %10873 to i64*
  %10874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10875 = getelementptr inbounds %struct.GPR, %struct.GPR* %10874, i32 0, i32 7
  %10876 = getelementptr inbounds %struct.Reg, %struct.Reg* %10875, i32 0, i32 0
  %RDX.i2885 = bitcast %union.anon* %10876 to i64*
  %10877 = load i64, i64* %RDX.i2885
  %10878 = load i64, i64* %PC.i2884
  %10879 = add i64 %10878, 4
  store i64 %10879, i64* %PC.i2884
  %10880 = shl i64 %10877, 5
  %10881 = icmp slt i64 %10880, 0
  %10882 = shl i64 %10880, 1
  store i64 %10882, i64* %RDX.i2885, align 8
  %10883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10884 = zext i1 %10881 to i8
  store i8 %10884, i8* %10883, align 1
  %10885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10886 = trunc i64 %10882 to i32
  %10887 = and i32 %10886, 254
  %10888 = call i32 @llvm.ctpop.i32(i32 %10887)
  %10889 = trunc i32 %10888 to i8
  %10890 = and i8 %10889, 1
  %10891 = xor i8 %10890, 1
  store i8 %10891, i8* %10885, align 1
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10892, align 1
  %10893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10894 = icmp eq i64 %10882, 0
  %10895 = zext i1 %10894 to i8
  store i8 %10895, i8* %10893, align 1
  %10896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10897 = lshr i64 %10882, 63
  %10898 = trunc i64 %10897 to i8
  store i8 %10898, i8* %10896, align 1
  %10899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10899, align 1
  store %struct.Memory* %loadMem_4aaf95, %struct.Memory** %MEMORY
  %loadMem_4aaf99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10901 = getelementptr inbounds %struct.GPR, %struct.GPR* %10900, i32 0, i32 33
  %10902 = getelementptr inbounds %struct.Reg, %struct.Reg* %10901, i32 0, i32 0
  %PC.i2881 = bitcast %union.anon* %10902 to i64*
  %10903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10904 = getelementptr inbounds %struct.GPR, %struct.GPR* %10903, i32 0, i32 5
  %10905 = getelementptr inbounds %struct.Reg, %struct.Reg* %10904, i32 0, i32 0
  %RCX.i2882 = bitcast %union.anon* %10905 to i64*
  %10906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10907 = getelementptr inbounds %struct.GPR, %struct.GPR* %10906, i32 0, i32 7
  %10908 = getelementptr inbounds %struct.Reg, %struct.Reg* %10907, i32 0, i32 0
  %RDX.i2883 = bitcast %union.anon* %10908 to i64*
  %10909 = load i64, i64* %RCX.i2882
  %10910 = load i64, i64* %RDX.i2883
  %10911 = load i64, i64* %PC.i2881
  %10912 = add i64 %10911, 3
  store i64 %10912, i64* %PC.i2881
  %10913 = add i64 %10910, %10909
  store i64 %10913, i64* %RCX.i2882, align 8
  %10914 = icmp ult i64 %10913, %10909
  %10915 = icmp ult i64 %10913, %10910
  %10916 = or i1 %10914, %10915
  %10917 = zext i1 %10916 to i8
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10917, i8* %10918, align 1
  %10919 = trunc i64 %10913 to i32
  %10920 = and i32 %10919, 255
  %10921 = call i32 @llvm.ctpop.i32(i32 %10920)
  %10922 = trunc i32 %10921 to i8
  %10923 = and i8 %10922, 1
  %10924 = xor i8 %10923, 1
  %10925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10924, i8* %10925, align 1
  %10926 = xor i64 %10910, %10909
  %10927 = xor i64 %10926, %10913
  %10928 = lshr i64 %10927, 4
  %10929 = trunc i64 %10928 to i8
  %10930 = and i8 %10929, 1
  %10931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10930, i8* %10931, align 1
  %10932 = icmp eq i64 %10913, 0
  %10933 = zext i1 %10932 to i8
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10933, i8* %10934, align 1
  %10935 = lshr i64 %10913, 63
  %10936 = trunc i64 %10935 to i8
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10936, i8* %10937, align 1
  %10938 = lshr i64 %10909, 63
  %10939 = lshr i64 %10910, 63
  %10940 = xor i64 %10935, %10938
  %10941 = xor i64 %10935, %10939
  %10942 = add i64 %10940, %10941
  %10943 = icmp eq i64 %10942, 2
  %10944 = zext i1 %10943 to i8
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10944, i8* %10945, align 1
  store %struct.Memory* %loadMem_4aaf99, %struct.Memory** %MEMORY
  %loadMem_4aaf9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10947 = getelementptr inbounds %struct.GPR, %struct.GPR* %10946, i32 0, i32 33
  %10948 = getelementptr inbounds %struct.Reg, %struct.Reg* %10947, i32 0, i32 0
  %PC.i2878 = bitcast %union.anon* %10948 to i64*
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 11
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %EDI.i2879 = bitcast %union.anon* %10951 to i32*
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10953 = getelementptr inbounds %struct.GPR, %struct.GPR* %10952, i32 0, i32 5
  %10954 = getelementptr inbounds %struct.Reg, %struct.Reg* %10953, i32 0, i32 0
  %RCX.i2880 = bitcast %union.anon* %10954 to i64*
  %10955 = load i64, i64* %RCX.i2880
  %10956 = add i64 %10955, 16
  %10957 = load i32, i32* %EDI.i2879
  %10958 = zext i32 %10957 to i64
  %10959 = load i64, i64* %PC.i2878
  %10960 = add i64 %10959, 3
  store i64 %10960, i64* %PC.i2878
  %10961 = inttoptr i64 %10956 to i32*
  store i32 %10957, i32* %10961
  store %struct.Memory* %loadMem_4aaf9c, %struct.Memory** %MEMORY
  %loadMem_4aaf9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10963 = getelementptr inbounds %struct.GPR, %struct.GPR* %10962, i32 0, i32 33
  %10964 = getelementptr inbounds %struct.Reg, %struct.Reg* %10963, i32 0, i32 0
  %PC.i2875 = bitcast %union.anon* %10964 to i64*
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 11
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %RDI.i2876 = bitcast %union.anon* %10967 to i64*
  %10968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10969 = getelementptr inbounds %struct.GPR, %struct.GPR* %10968, i32 0, i32 15
  %10970 = getelementptr inbounds %struct.Reg, %struct.Reg* %10969, i32 0, i32 0
  %RBP.i2877 = bitcast %union.anon* %10970 to i64*
  %10971 = load i64, i64* %RBP.i2877
  %10972 = sub i64 %10971, 536
  %10973 = load i64, i64* %PC.i2875
  %10974 = add i64 %10973, 6
  store i64 %10974, i64* %PC.i2875
  %10975 = inttoptr i64 %10972 to i32*
  %10976 = load i32, i32* %10975
  %10977 = zext i32 %10976 to i64
  store i64 %10977, i64* %RDI.i2876, align 8
  store %struct.Memory* %loadMem_4aaf9f, %struct.Memory** %MEMORY
  %loadMem_4aafa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10979 = getelementptr inbounds %struct.GPR, %struct.GPR* %10978, i32 0, i32 33
  %10980 = getelementptr inbounds %struct.Reg, %struct.Reg* %10979, i32 0, i32 0
  %PC.i2873 = bitcast %union.anon* %10980 to i64*
  %10981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10982 = getelementptr inbounds %struct.GPR, %struct.GPR* %10981, i32 0, i32 11
  %10983 = getelementptr inbounds %struct.Reg, %struct.Reg* %10982, i32 0, i32 0
  %RDI.i2874 = bitcast %union.anon* %10983 to i64*
  %10984 = load i64, i64* %RDI.i2874
  %10985 = load i64, i64* %PC.i2873
  %10986 = add i64 %10985, 2
  store i64 %10986, i64* %PC.i2873
  %10987 = shl i64 %10984, 32
  %10988 = ashr i64 %10987, 33
  %10989 = trunc i64 %10984 to i8
  %10990 = and i8 %10989, 1
  %10991 = trunc i64 %10988 to i32
  %10992 = and i64 %10988, 4294967295
  store i64 %10992, i64* %RDI.i2874, align 8
  %10993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10990, i8* %10993, align 1
  %10994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10995 = and i32 %10991, 255
  %10996 = call i32 @llvm.ctpop.i32(i32 %10995)
  %10997 = trunc i32 %10996 to i8
  %10998 = and i8 %10997, 1
  %10999 = xor i8 %10998, 1
  store i8 %10999, i8* %10994, align 1
  %11000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11000, align 1
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11002 = icmp eq i32 %10991, 0
  %11003 = zext i1 %11002 to i8
  store i8 %11003, i8* %11001, align 1
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11005 = lshr i32 %10991, 31
  %11006 = trunc i32 %11005 to i8
  store i8 %11006, i8* %11004, align 1
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11007, align 1
  store %struct.Memory* %loadMem_4aafa5, %struct.Memory** %MEMORY
  %loadMem_4aafa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11009 = getelementptr inbounds %struct.GPR, %struct.GPR* %11008, i32 0, i32 33
  %11010 = getelementptr inbounds %struct.Reg, %struct.Reg* %11009, i32 0, i32 0
  %PC.i2870 = bitcast %union.anon* %11010 to i64*
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11012 = getelementptr inbounds %struct.GPR, %struct.GPR* %11011, i32 0, i32 11
  %11013 = getelementptr inbounds %struct.Reg, %struct.Reg* %11012, i32 0, i32 0
  %RDI.i2871 = bitcast %union.anon* %11013 to i64*
  %11014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11015 = getelementptr inbounds %struct.GPR, %struct.GPR* %11014, i32 0, i32 15
  %11016 = getelementptr inbounds %struct.Reg, %struct.Reg* %11015, i32 0, i32 0
  %RBP.i2872 = bitcast %union.anon* %11016 to i64*
  %11017 = load i64, i64* %RDI.i2871
  %11018 = load i64, i64* %RBP.i2872
  %11019 = sub i64 %11018, 532
  %11020 = load i64, i64* %PC.i2870
  %11021 = add i64 %11020, 6
  store i64 %11021, i64* %PC.i2870
  %11022 = trunc i64 %11017 to i32
  %11023 = inttoptr i64 %11019 to i32*
  %11024 = load i32, i32* %11023
  %11025 = sub i32 %11022, %11024
  %11026 = zext i32 %11025 to i64
  store i64 %11026, i64* %RDI.i2871, align 8
  %11027 = icmp ult i32 %11022, %11024
  %11028 = zext i1 %11027 to i8
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11028, i8* %11029, align 1
  %11030 = and i32 %11025, 255
  %11031 = call i32 @llvm.ctpop.i32(i32 %11030)
  %11032 = trunc i32 %11031 to i8
  %11033 = and i8 %11032, 1
  %11034 = xor i8 %11033, 1
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11034, i8* %11035, align 1
  %11036 = xor i32 %11024, %11022
  %11037 = xor i32 %11036, %11025
  %11038 = lshr i32 %11037, 4
  %11039 = trunc i32 %11038 to i8
  %11040 = and i8 %11039, 1
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11040, i8* %11041, align 1
  %11042 = icmp eq i32 %11025, 0
  %11043 = zext i1 %11042 to i8
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11043, i8* %11044, align 1
  %11045 = lshr i32 %11025, 31
  %11046 = trunc i32 %11045 to i8
  %11047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11046, i8* %11047, align 1
  %11048 = lshr i32 %11022, 31
  %11049 = lshr i32 %11024, 31
  %11050 = xor i32 %11049, %11048
  %11051 = xor i32 %11045, %11048
  %11052 = add i32 %11051, %11050
  %11053 = icmp eq i32 %11052, 2
  %11054 = zext i1 %11053 to i8
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11054, i8* %11055, align 1
  store %struct.Memory* %loadMem_4aafa8, %struct.Memory** %MEMORY
  %loadMem_4aafae = load %struct.Memory*, %struct.Memory** %MEMORY
  %11056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11057 = getelementptr inbounds %struct.GPR, %struct.GPR* %11056, i32 0, i32 33
  %11058 = getelementptr inbounds %struct.Reg, %struct.Reg* %11057, i32 0, i32 0
  %PC.i2868 = bitcast %union.anon* %11058 to i64*
  %11059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11060 = getelementptr inbounds %struct.GPR, %struct.GPR* %11059, i32 0, i32 5
  %11061 = getelementptr inbounds %struct.Reg, %struct.Reg* %11060, i32 0, i32 0
  %RCX.i2869 = bitcast %union.anon* %11061 to i64*
  %11062 = load i64, i64* %PC.i2868
  %11063 = add i64 %11062, 8
  store i64 %11063, i64* %PC.i2868
  %11064 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11064, i64* %RCX.i2869, align 8
  store %struct.Memory* %loadMem_4aafae, %struct.Memory** %MEMORY
  %loadMem_4aafb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11066 = getelementptr inbounds %struct.GPR, %struct.GPR* %11065, i32 0, i32 33
  %11067 = getelementptr inbounds %struct.Reg, %struct.Reg* %11066, i32 0, i32 0
  %PC.i2866 = bitcast %union.anon* %11067 to i64*
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11069 = getelementptr inbounds %struct.GPR, %struct.GPR* %11068, i32 0, i32 5
  %11070 = getelementptr inbounds %struct.Reg, %struct.Reg* %11069, i32 0, i32 0
  %RCX.i2867 = bitcast %union.anon* %11070 to i64*
  %11071 = load i64, i64* %RCX.i2867
  %11072 = load i64, i64* %PC.i2866
  %11073 = add i64 %11072, 7
  store i64 %11073, i64* %PC.i2866
  %11074 = add i64 13112, %11071
  store i64 %11074, i64* %RCX.i2867, align 8
  %11075 = icmp ult i64 %11074, %11071
  %11076 = icmp ult i64 %11074, 13112
  %11077 = or i1 %11075, %11076
  %11078 = zext i1 %11077 to i8
  %11079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11078, i8* %11079, align 1
  %11080 = trunc i64 %11074 to i32
  %11081 = and i32 %11080, 255
  %11082 = call i32 @llvm.ctpop.i32(i32 %11081)
  %11083 = trunc i32 %11082 to i8
  %11084 = and i8 %11083, 1
  %11085 = xor i8 %11084, 1
  %11086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11085, i8* %11086, align 1
  %11087 = xor i64 13112, %11071
  %11088 = xor i64 %11087, %11074
  %11089 = lshr i64 %11088, 4
  %11090 = trunc i64 %11089 to i8
  %11091 = and i8 %11090, 1
  %11092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11091, i8* %11092, align 1
  %11093 = icmp eq i64 %11074, 0
  %11094 = zext i1 %11093 to i8
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11094, i8* %11095, align 1
  %11096 = lshr i64 %11074, 63
  %11097 = trunc i64 %11096 to i8
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11097, i8* %11098, align 1
  %11099 = lshr i64 %11071, 63
  %11100 = xor i64 %11096, %11099
  %11101 = add i64 %11100, %11096
  %11102 = icmp eq i64 %11101, 2
  %11103 = zext i1 %11102 to i8
  %11104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11103, i8* %11104, align 1
  store %struct.Memory* %loadMem_4aafb6, %struct.Memory** %MEMORY
  %loadMem_4aafbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11106 = getelementptr inbounds %struct.GPR, %struct.GPR* %11105, i32 0, i32 33
  %11107 = getelementptr inbounds %struct.Reg, %struct.Reg* %11106, i32 0, i32 0
  %PC.i2863 = bitcast %union.anon* %11107 to i64*
  %11108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11109 = getelementptr inbounds %struct.GPR, %struct.GPR* %11108, i32 0, i32 7
  %11110 = getelementptr inbounds %struct.Reg, %struct.Reg* %11109, i32 0, i32 0
  %RDX.i2864 = bitcast %union.anon* %11110 to i64*
  %11111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11112 = getelementptr inbounds %struct.GPR, %struct.GPR* %11111, i32 0, i32 15
  %11113 = getelementptr inbounds %struct.Reg, %struct.Reg* %11112, i32 0, i32 0
  %RBP.i2865 = bitcast %union.anon* %11113 to i64*
  %11114 = load i64, i64* %RBP.i2865
  %11115 = sub i64 %11114, 24
  %11116 = load i64, i64* %PC.i2863
  %11117 = add i64 %11116, 4
  store i64 %11117, i64* %PC.i2863
  %11118 = inttoptr i64 %11115 to i32*
  %11119 = load i32, i32* %11118
  %11120 = sext i32 %11119 to i64
  store i64 %11120, i64* %RDX.i2864, align 8
  store %struct.Memory* %loadMem_4aafbd, %struct.Memory** %MEMORY
  %loadMem_4aafc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11122 = getelementptr inbounds %struct.GPR, %struct.GPR* %11121, i32 0, i32 33
  %11123 = getelementptr inbounds %struct.Reg, %struct.Reg* %11122, i32 0, i32 0
  %PC.i2861 = bitcast %union.anon* %11123 to i64*
  %11124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11125 = getelementptr inbounds %struct.GPR, %struct.GPR* %11124, i32 0, i32 7
  %11126 = getelementptr inbounds %struct.Reg, %struct.Reg* %11125, i32 0, i32 0
  %RDX.i2862 = bitcast %union.anon* %11126 to i64*
  %11127 = load i64, i64* %RDX.i2862
  %11128 = load i64, i64* %PC.i2861
  %11129 = add i64 %11128, 4
  store i64 %11129, i64* %PC.i2861
  %11130 = shl i64 %11127, 5
  %11131 = icmp slt i64 %11130, 0
  %11132 = shl i64 %11130, 1
  store i64 %11132, i64* %RDX.i2862, align 8
  %11133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11134 = zext i1 %11131 to i8
  store i8 %11134, i8* %11133, align 1
  %11135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11136 = trunc i64 %11132 to i32
  %11137 = and i32 %11136, 254
  %11138 = call i32 @llvm.ctpop.i32(i32 %11137)
  %11139 = trunc i32 %11138 to i8
  %11140 = and i8 %11139, 1
  %11141 = xor i8 %11140, 1
  store i8 %11141, i8* %11135, align 1
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11142, align 1
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11144 = icmp eq i64 %11132, 0
  %11145 = zext i1 %11144 to i8
  store i8 %11145, i8* %11143, align 1
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11147 = lshr i64 %11132, 63
  %11148 = trunc i64 %11147 to i8
  store i8 %11148, i8* %11146, align 1
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11149, align 1
  store %struct.Memory* %loadMem_4aafc1, %struct.Memory** %MEMORY
  %loadMem_4aafc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11151 = getelementptr inbounds %struct.GPR, %struct.GPR* %11150, i32 0, i32 33
  %11152 = getelementptr inbounds %struct.Reg, %struct.Reg* %11151, i32 0, i32 0
  %PC.i2858 = bitcast %union.anon* %11152 to i64*
  %11153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11154 = getelementptr inbounds %struct.GPR, %struct.GPR* %11153, i32 0, i32 5
  %11155 = getelementptr inbounds %struct.Reg, %struct.Reg* %11154, i32 0, i32 0
  %RCX.i2859 = bitcast %union.anon* %11155 to i64*
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11157 = getelementptr inbounds %struct.GPR, %struct.GPR* %11156, i32 0, i32 7
  %11158 = getelementptr inbounds %struct.Reg, %struct.Reg* %11157, i32 0, i32 0
  %RDX.i2860 = bitcast %union.anon* %11158 to i64*
  %11159 = load i64, i64* %RCX.i2859
  %11160 = load i64, i64* %RDX.i2860
  %11161 = load i64, i64* %PC.i2858
  %11162 = add i64 %11161, 3
  store i64 %11162, i64* %PC.i2858
  %11163 = add i64 %11160, %11159
  store i64 %11163, i64* %RCX.i2859, align 8
  %11164 = icmp ult i64 %11163, %11159
  %11165 = icmp ult i64 %11163, %11160
  %11166 = or i1 %11164, %11165
  %11167 = zext i1 %11166 to i8
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11167, i8* %11168, align 1
  %11169 = trunc i64 %11163 to i32
  %11170 = and i32 %11169, 255
  %11171 = call i32 @llvm.ctpop.i32(i32 %11170)
  %11172 = trunc i32 %11171 to i8
  %11173 = and i8 %11172, 1
  %11174 = xor i8 %11173, 1
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11174, i8* %11175, align 1
  %11176 = xor i64 %11160, %11159
  %11177 = xor i64 %11176, %11163
  %11178 = lshr i64 %11177, 4
  %11179 = trunc i64 %11178 to i8
  %11180 = and i8 %11179, 1
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11180, i8* %11181, align 1
  %11182 = icmp eq i64 %11163, 0
  %11183 = zext i1 %11182 to i8
  %11184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11183, i8* %11184, align 1
  %11185 = lshr i64 %11163, 63
  %11186 = trunc i64 %11185 to i8
  %11187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11186, i8* %11187, align 1
  %11188 = lshr i64 %11159, 63
  %11189 = lshr i64 %11160, 63
  %11190 = xor i64 %11185, %11188
  %11191 = xor i64 %11185, %11189
  %11192 = add i64 %11190, %11191
  %11193 = icmp eq i64 %11192, 2
  %11194 = zext i1 %11193 to i8
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11194, i8* %11195, align 1
  store %struct.Memory* %loadMem_4aafc5, %struct.Memory** %MEMORY
  %loadMem_4aafc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11197 = getelementptr inbounds %struct.GPR, %struct.GPR* %11196, i32 0, i32 33
  %11198 = getelementptr inbounds %struct.Reg, %struct.Reg* %11197, i32 0, i32 0
  %PC.i2855 = bitcast %union.anon* %11198 to i64*
  %11199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11200 = getelementptr inbounds %struct.GPR, %struct.GPR* %11199, i32 0, i32 11
  %11201 = getelementptr inbounds %struct.Reg, %struct.Reg* %11200, i32 0, i32 0
  %EDI.i2856 = bitcast %union.anon* %11201 to i32*
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11203 = getelementptr inbounds %struct.GPR, %struct.GPR* %11202, i32 0, i32 5
  %11204 = getelementptr inbounds %struct.Reg, %struct.Reg* %11203, i32 0, i32 0
  %RCX.i2857 = bitcast %union.anon* %11204 to i64*
  %11205 = load i64, i64* %RCX.i2857
  %11206 = add i64 %11205, 24
  %11207 = load i32, i32* %EDI.i2856
  %11208 = zext i32 %11207 to i64
  %11209 = load i64, i64* %PC.i2855
  %11210 = add i64 %11209, 3
  store i64 %11210, i64* %PC.i2855
  %11211 = inttoptr i64 %11206 to i32*
  store i32 %11207, i32* %11211
  store %struct.Memory* %loadMem_4aafc8, %struct.Memory** %MEMORY
  %loadMem_4aafcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11213 = getelementptr inbounds %struct.GPR, %struct.GPR* %11212, i32 0, i32 33
  %11214 = getelementptr inbounds %struct.Reg, %struct.Reg* %11213, i32 0, i32 0
  %PC.i2852 = bitcast %union.anon* %11214 to i64*
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11216 = getelementptr inbounds %struct.GPR, %struct.GPR* %11215, i32 0, i32 11
  %11217 = getelementptr inbounds %struct.Reg, %struct.Reg* %11216, i32 0, i32 0
  %RDI.i2853 = bitcast %union.anon* %11217 to i64*
  %11218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11219 = getelementptr inbounds %struct.GPR, %struct.GPR* %11218, i32 0, i32 15
  %11220 = getelementptr inbounds %struct.Reg, %struct.Reg* %11219, i32 0, i32 0
  %RBP.i2854 = bitcast %union.anon* %11220 to i64*
  %11221 = load i64, i64* %RBP.i2854
  %11222 = sub i64 %11221, 528
  %11223 = load i64, i64* %PC.i2852
  %11224 = add i64 %11223, 6
  store i64 %11224, i64* %PC.i2852
  %11225 = inttoptr i64 %11222 to i32*
  %11226 = load i32, i32* %11225
  %11227 = zext i32 %11226 to i64
  store i64 %11227, i64* %RDI.i2853, align 8
  store %struct.Memory* %loadMem_4aafcb, %struct.Memory** %MEMORY
  %loadMem_4aafd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11229 = getelementptr inbounds %struct.GPR, %struct.GPR* %11228, i32 0, i32 33
  %11230 = getelementptr inbounds %struct.Reg, %struct.Reg* %11229, i32 0, i32 0
  %PC.i2849 = bitcast %union.anon* %11230 to i64*
  %11231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11232 = getelementptr inbounds %struct.GPR, %struct.GPR* %11231, i32 0, i32 17
  %11233 = getelementptr inbounds %struct.Reg, %struct.Reg* %11232, i32 0, i32 0
  %R8D.i2850 = bitcast %union.anon* %11233 to i32*
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11235 = getelementptr inbounds %struct.GPR, %struct.GPR* %11234, i32 0, i32 15
  %11236 = getelementptr inbounds %struct.Reg, %struct.Reg* %11235, i32 0, i32 0
  %RBP.i2851 = bitcast %union.anon* %11236 to i64*
  %11237 = bitcast i32* %R8D.i2850 to i64*
  %11238 = load i64, i64* %RBP.i2851
  %11239 = sub i64 %11238, 516
  %11240 = load i64, i64* %PC.i2849
  %11241 = add i64 %11240, 7
  store i64 %11241, i64* %PC.i2849
  %11242 = inttoptr i64 %11239 to i32*
  %11243 = load i32, i32* %11242
  %11244 = zext i32 %11243 to i64
  store i64 %11244, i64* %11237, align 8
  store %struct.Memory* %loadMem_4aafd1, %struct.Memory** %MEMORY
  %loadMem_4aafd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11246 = getelementptr inbounds %struct.GPR, %struct.GPR* %11245, i32 0, i32 33
  %11247 = getelementptr inbounds %struct.Reg, %struct.Reg* %11246, i32 0, i32 0
  %PC.i2847 = bitcast %union.anon* %11247 to i64*
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11249 = getelementptr inbounds %struct.GPR, %struct.GPR* %11248, i32 0, i32 17
  %11250 = getelementptr inbounds %struct.Reg, %struct.Reg* %11249, i32 0, i32 0
  %R8D.i2848 = bitcast %union.anon* %11250 to i32*
  %11251 = bitcast i32* %R8D.i2848 to i64*
  %11252 = load i32, i32* %R8D.i2848
  %11253 = zext i32 %11252 to i64
  %11254 = load i64, i64* %PC.i2847
  %11255 = add i64 %11254, 4
  store i64 %11255, i64* %PC.i2847
  %11256 = shl i64 %11253, 32
  %11257 = ashr exact i64 %11256, 32
  %11258 = ashr i64 %11257, 1
  %11259 = lshr i64 %11258, 1
  %11260 = trunc i64 %11258 to i8
  %11261 = and i8 %11260, 1
  %11262 = trunc i64 %11259 to i32
  %11263 = and i64 %11259, 4294967295
  store i64 %11263, i64* %11251, align 8
  %11264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11261, i8* %11264, align 1
  %11265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11266 = and i32 %11262, 255
  %11267 = call i32 @llvm.ctpop.i32(i32 %11266)
  %11268 = trunc i32 %11267 to i8
  %11269 = and i8 %11268, 1
  %11270 = xor i8 %11269, 1
  store i8 %11270, i8* %11265, align 1
  %11271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11271, align 1
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11273 = icmp eq i32 %11262, 0
  %11274 = zext i1 %11273 to i8
  store i8 %11274, i8* %11272, align 1
  %11275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11276 = lshr i32 %11262, 31
  %11277 = trunc i32 %11276 to i8
  store i8 %11277, i8* %11275, align 1
  %11278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11278, align 1
  store %struct.Memory* %loadMem_4aafd8, %struct.Memory** %MEMORY
  %loadMem_4aafdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11280 = getelementptr inbounds %struct.GPR, %struct.GPR* %11279, i32 0, i32 33
  %11281 = getelementptr inbounds %struct.Reg, %struct.Reg* %11280, i32 0, i32 0
  %PC.i2844 = bitcast %union.anon* %11281 to i64*
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11283 = getelementptr inbounds %struct.GPR, %struct.GPR* %11282, i32 0, i32 17
  %11284 = getelementptr inbounds %struct.Reg, %struct.Reg* %11283, i32 0, i32 0
  %R8D.i2845 = bitcast %union.anon* %11284 to i32*
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11286 = getelementptr inbounds %struct.GPR, %struct.GPR* %11285, i32 0, i32 11
  %11287 = getelementptr inbounds %struct.Reg, %struct.Reg* %11286, i32 0, i32 0
  %RDI.i2846 = bitcast %union.anon* %11287 to i64*
  %11288 = load i64, i64* %RDI.i2846
  %11289 = load i32, i32* %R8D.i2845
  %11290 = zext i32 %11289 to i64
  %11291 = load i64, i64* %PC.i2844
  %11292 = add i64 %11291, 3
  store i64 %11292, i64* %PC.i2844
  %11293 = trunc i64 %11288 to i32
  %11294 = add i32 %11289, %11293
  %11295 = zext i32 %11294 to i64
  store i64 %11295, i64* %RDI.i2846, align 8
  %11296 = icmp ult i32 %11294, %11293
  %11297 = icmp ult i32 %11294, %11289
  %11298 = or i1 %11296, %11297
  %11299 = zext i1 %11298 to i8
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11299, i8* %11300, align 1
  %11301 = and i32 %11294, 255
  %11302 = call i32 @llvm.ctpop.i32(i32 %11301)
  %11303 = trunc i32 %11302 to i8
  %11304 = and i8 %11303, 1
  %11305 = xor i8 %11304, 1
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11305, i8* %11306, align 1
  %11307 = xor i64 %11290, %11288
  %11308 = trunc i64 %11307 to i32
  %11309 = xor i32 %11308, %11294
  %11310 = lshr i32 %11309, 4
  %11311 = trunc i32 %11310 to i8
  %11312 = and i8 %11311, 1
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11312, i8* %11313, align 1
  %11314 = icmp eq i32 %11294, 0
  %11315 = zext i1 %11314 to i8
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11315, i8* %11316, align 1
  %11317 = lshr i32 %11294, 31
  %11318 = trunc i32 %11317 to i8
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11318, i8* %11319, align 1
  %11320 = lshr i32 %11293, 31
  %11321 = lshr i32 %11289, 31
  %11322 = xor i32 %11317, %11320
  %11323 = xor i32 %11317, %11321
  %11324 = add i32 %11322, %11323
  %11325 = icmp eq i32 %11324, 2
  %11326 = zext i1 %11325 to i8
  %11327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11326, i8* %11327, align 1
  store %struct.Memory* %loadMem_4aafdc, %struct.Memory** %MEMORY
  %loadMem_4aafdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11329 = getelementptr inbounds %struct.GPR, %struct.GPR* %11328, i32 0, i32 33
  %11330 = getelementptr inbounds %struct.Reg, %struct.Reg* %11329, i32 0, i32 0
  %PC.i2842 = bitcast %union.anon* %11330 to i64*
  %11331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11332 = getelementptr inbounds %struct.GPR, %struct.GPR* %11331, i32 0, i32 5
  %11333 = getelementptr inbounds %struct.Reg, %struct.Reg* %11332, i32 0, i32 0
  %RCX.i2843 = bitcast %union.anon* %11333 to i64*
  %11334 = load i64, i64* %PC.i2842
  %11335 = add i64 %11334, 8
  store i64 %11335, i64* %PC.i2842
  %11336 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11336, i64* %RCX.i2843, align 8
  store %struct.Memory* %loadMem_4aafdf, %struct.Memory** %MEMORY
  %loadMem_4aafe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11338 = getelementptr inbounds %struct.GPR, %struct.GPR* %11337, i32 0, i32 33
  %11339 = getelementptr inbounds %struct.Reg, %struct.Reg* %11338, i32 0, i32 0
  %PC.i2840 = bitcast %union.anon* %11339 to i64*
  %11340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11341 = getelementptr inbounds %struct.GPR, %struct.GPR* %11340, i32 0, i32 5
  %11342 = getelementptr inbounds %struct.Reg, %struct.Reg* %11341, i32 0, i32 0
  %RCX.i2841 = bitcast %union.anon* %11342 to i64*
  %11343 = load i64, i64* %RCX.i2841
  %11344 = load i64, i64* %PC.i2840
  %11345 = add i64 %11344, 7
  store i64 %11345, i64* %PC.i2840
  %11346 = add i64 13112, %11343
  store i64 %11346, i64* %RCX.i2841, align 8
  %11347 = icmp ult i64 %11346, %11343
  %11348 = icmp ult i64 %11346, 13112
  %11349 = or i1 %11347, %11348
  %11350 = zext i1 %11349 to i8
  %11351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11350, i8* %11351, align 1
  %11352 = trunc i64 %11346 to i32
  %11353 = and i32 %11352, 255
  %11354 = call i32 @llvm.ctpop.i32(i32 %11353)
  %11355 = trunc i32 %11354 to i8
  %11356 = and i8 %11355, 1
  %11357 = xor i8 %11356, 1
  %11358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11357, i8* %11358, align 1
  %11359 = xor i64 13112, %11343
  %11360 = xor i64 %11359, %11346
  %11361 = lshr i64 %11360, 4
  %11362 = trunc i64 %11361 to i8
  %11363 = and i8 %11362, 1
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11363, i8* %11364, align 1
  %11365 = icmp eq i64 %11346, 0
  %11366 = zext i1 %11365 to i8
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11366, i8* %11367, align 1
  %11368 = lshr i64 %11346, 63
  %11369 = trunc i64 %11368 to i8
  %11370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11369, i8* %11370, align 1
  %11371 = lshr i64 %11343, 63
  %11372 = xor i64 %11368, %11371
  %11373 = add i64 %11372, %11368
  %11374 = icmp eq i64 %11373, 2
  %11375 = zext i1 %11374 to i8
  %11376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11375, i8* %11376, align 1
  store %struct.Memory* %loadMem_4aafe7, %struct.Memory** %MEMORY
  %loadMem_4aafee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11378 = getelementptr inbounds %struct.GPR, %struct.GPR* %11377, i32 0, i32 33
  %11379 = getelementptr inbounds %struct.Reg, %struct.Reg* %11378, i32 0, i32 0
  %PC.i2837 = bitcast %union.anon* %11379 to i64*
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 7
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %RDX.i2838 = bitcast %union.anon* %11382 to i64*
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11384 = getelementptr inbounds %struct.GPR, %struct.GPR* %11383, i32 0, i32 15
  %11385 = getelementptr inbounds %struct.Reg, %struct.Reg* %11384, i32 0, i32 0
  %RBP.i2839 = bitcast %union.anon* %11385 to i64*
  %11386 = load i64, i64* %RBP.i2839
  %11387 = sub i64 %11386, 24
  %11388 = load i64, i64* %PC.i2837
  %11389 = add i64 %11388, 4
  store i64 %11389, i64* %PC.i2837
  %11390 = inttoptr i64 %11387 to i32*
  %11391 = load i32, i32* %11390
  %11392 = sext i32 %11391 to i64
  store i64 %11392, i64* %RDX.i2838, align 8
  store %struct.Memory* %loadMem_4aafee, %struct.Memory** %MEMORY
  %loadMem_4aaff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11394 = getelementptr inbounds %struct.GPR, %struct.GPR* %11393, i32 0, i32 33
  %11395 = getelementptr inbounds %struct.Reg, %struct.Reg* %11394, i32 0, i32 0
  %PC.i2835 = bitcast %union.anon* %11395 to i64*
  %11396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11397 = getelementptr inbounds %struct.GPR, %struct.GPR* %11396, i32 0, i32 7
  %11398 = getelementptr inbounds %struct.Reg, %struct.Reg* %11397, i32 0, i32 0
  %RDX.i2836 = bitcast %union.anon* %11398 to i64*
  %11399 = load i64, i64* %RDX.i2836
  %11400 = load i64, i64* %PC.i2835
  %11401 = add i64 %11400, 4
  store i64 %11401, i64* %PC.i2835
  %11402 = shl i64 %11399, 5
  %11403 = icmp slt i64 %11402, 0
  %11404 = shl i64 %11402, 1
  store i64 %11404, i64* %RDX.i2836, align 8
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11406 = zext i1 %11403 to i8
  store i8 %11406, i8* %11405, align 1
  %11407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11408 = trunc i64 %11404 to i32
  %11409 = and i32 %11408, 254
  %11410 = call i32 @llvm.ctpop.i32(i32 %11409)
  %11411 = trunc i32 %11410 to i8
  %11412 = and i8 %11411, 1
  %11413 = xor i8 %11412, 1
  store i8 %11413, i8* %11407, align 1
  %11414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11414, align 1
  %11415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11416 = icmp eq i64 %11404, 0
  %11417 = zext i1 %11416 to i8
  store i8 %11417, i8* %11415, align 1
  %11418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11419 = lshr i64 %11404, 63
  %11420 = trunc i64 %11419 to i8
  store i8 %11420, i8* %11418, align 1
  %11421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11421, align 1
  store %struct.Memory* %loadMem_4aaff2, %struct.Memory** %MEMORY
  %loadMem_4aaff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11423 = getelementptr inbounds %struct.GPR, %struct.GPR* %11422, i32 0, i32 33
  %11424 = getelementptr inbounds %struct.Reg, %struct.Reg* %11423, i32 0, i32 0
  %PC.i2832 = bitcast %union.anon* %11424 to i64*
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11426 = getelementptr inbounds %struct.GPR, %struct.GPR* %11425, i32 0, i32 5
  %11427 = getelementptr inbounds %struct.Reg, %struct.Reg* %11426, i32 0, i32 0
  %RCX.i2833 = bitcast %union.anon* %11427 to i64*
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 7
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %RDX.i2834 = bitcast %union.anon* %11430 to i64*
  %11431 = load i64, i64* %RCX.i2833
  %11432 = load i64, i64* %RDX.i2834
  %11433 = load i64, i64* %PC.i2832
  %11434 = add i64 %11433, 3
  store i64 %11434, i64* %PC.i2832
  %11435 = add i64 %11432, %11431
  store i64 %11435, i64* %RCX.i2833, align 8
  %11436 = icmp ult i64 %11435, %11431
  %11437 = icmp ult i64 %11435, %11432
  %11438 = or i1 %11436, %11437
  %11439 = zext i1 %11438 to i8
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11439, i8* %11440, align 1
  %11441 = trunc i64 %11435 to i32
  %11442 = and i32 %11441, 255
  %11443 = call i32 @llvm.ctpop.i32(i32 %11442)
  %11444 = trunc i32 %11443 to i8
  %11445 = and i8 %11444, 1
  %11446 = xor i8 %11445, 1
  %11447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11446, i8* %11447, align 1
  %11448 = xor i64 %11432, %11431
  %11449 = xor i64 %11448, %11435
  %11450 = lshr i64 %11449, 4
  %11451 = trunc i64 %11450 to i8
  %11452 = and i8 %11451, 1
  %11453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11452, i8* %11453, align 1
  %11454 = icmp eq i64 %11435, 0
  %11455 = zext i1 %11454 to i8
  %11456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11455, i8* %11456, align 1
  %11457 = lshr i64 %11435, 63
  %11458 = trunc i64 %11457 to i8
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11458, i8* %11459, align 1
  %11460 = lshr i64 %11431, 63
  %11461 = lshr i64 %11432, 63
  %11462 = xor i64 %11457, %11460
  %11463 = xor i64 %11457, %11461
  %11464 = add i64 %11462, %11463
  %11465 = icmp eq i64 %11464, 2
  %11466 = zext i1 %11465 to i8
  %11467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11466, i8* %11467, align 1
  store %struct.Memory* %loadMem_4aaff6, %struct.Memory** %MEMORY
  %loadMem_4aaff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11469 = getelementptr inbounds %struct.GPR, %struct.GPR* %11468, i32 0, i32 33
  %11470 = getelementptr inbounds %struct.Reg, %struct.Reg* %11469, i32 0, i32 0
  %PC.i2829 = bitcast %union.anon* %11470 to i64*
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11472 = getelementptr inbounds %struct.GPR, %struct.GPR* %11471, i32 0, i32 11
  %11473 = getelementptr inbounds %struct.Reg, %struct.Reg* %11472, i32 0, i32 0
  %EDI.i2830 = bitcast %union.anon* %11473 to i32*
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11475 = getelementptr inbounds %struct.GPR, %struct.GPR* %11474, i32 0, i32 5
  %11476 = getelementptr inbounds %struct.Reg, %struct.Reg* %11475, i32 0, i32 0
  %RCX.i2831 = bitcast %union.anon* %11476 to i64*
  %11477 = load i64, i64* %RCX.i2831
  %11478 = add i64 %11477, 4
  %11479 = load i32, i32* %EDI.i2830
  %11480 = zext i32 %11479 to i64
  %11481 = load i64, i64* %PC.i2829
  %11482 = add i64 %11481, 3
  store i64 %11482, i64* %PC.i2829
  %11483 = inttoptr i64 %11478 to i32*
  store i32 %11479, i32* %11483
  store %struct.Memory* %loadMem_4aaff9, %struct.Memory** %MEMORY
  %loadMem_4aaffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11485 = getelementptr inbounds %struct.GPR, %struct.GPR* %11484, i32 0, i32 33
  %11486 = getelementptr inbounds %struct.Reg, %struct.Reg* %11485, i32 0, i32 0
  %PC.i2826 = bitcast %union.anon* %11486 to i64*
  %11487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11488 = getelementptr inbounds %struct.GPR, %struct.GPR* %11487, i32 0, i32 11
  %11489 = getelementptr inbounds %struct.Reg, %struct.Reg* %11488, i32 0, i32 0
  %RDI.i2827 = bitcast %union.anon* %11489 to i64*
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11491 = getelementptr inbounds %struct.GPR, %struct.GPR* %11490, i32 0, i32 15
  %11492 = getelementptr inbounds %struct.Reg, %struct.Reg* %11491, i32 0, i32 0
  %RBP.i2828 = bitcast %union.anon* %11492 to i64*
  %11493 = load i64, i64* %RBP.i2828
  %11494 = sub i64 %11493, 524
  %11495 = load i64, i64* %PC.i2826
  %11496 = add i64 %11495, 6
  store i64 %11496, i64* %PC.i2826
  %11497 = inttoptr i64 %11494 to i32*
  %11498 = load i32, i32* %11497
  %11499 = zext i32 %11498 to i64
  store i64 %11499, i64* %RDI.i2827, align 8
  store %struct.Memory* %loadMem_4aaffc, %struct.Memory** %MEMORY
  %loadMem_4ab002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11501 = getelementptr inbounds %struct.GPR, %struct.GPR* %11500, i32 0, i32 33
  %11502 = getelementptr inbounds %struct.Reg, %struct.Reg* %11501, i32 0, i32 0
  %PC.i2823 = bitcast %union.anon* %11502 to i64*
  %11503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11504 = getelementptr inbounds %struct.GPR, %struct.GPR* %11503, i32 0, i32 17
  %11505 = getelementptr inbounds %struct.Reg, %struct.Reg* %11504, i32 0, i32 0
  %R8D.i2824 = bitcast %union.anon* %11505 to i32*
  %11506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11507 = getelementptr inbounds %struct.GPR, %struct.GPR* %11506, i32 0, i32 15
  %11508 = getelementptr inbounds %struct.Reg, %struct.Reg* %11507, i32 0, i32 0
  %RBP.i2825 = bitcast %union.anon* %11508 to i64*
  %11509 = bitcast i32* %R8D.i2824 to i64*
  %11510 = load i64, i64* %RBP.i2825
  %11511 = sub i64 %11510, 520
  %11512 = load i64, i64* %PC.i2823
  %11513 = add i64 %11512, 7
  store i64 %11513, i64* %PC.i2823
  %11514 = inttoptr i64 %11511 to i32*
  %11515 = load i32, i32* %11514
  %11516 = zext i32 %11515 to i64
  store i64 %11516, i64* %11509, align 8
  store %struct.Memory* %loadMem_4ab002, %struct.Memory** %MEMORY
  %loadMem_4ab009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11518 = getelementptr inbounds %struct.GPR, %struct.GPR* %11517, i32 0, i32 33
  %11519 = getelementptr inbounds %struct.Reg, %struct.Reg* %11518, i32 0, i32 0
  %PC.i2821 = bitcast %union.anon* %11519 to i64*
  %11520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11521 = getelementptr inbounds %struct.GPR, %struct.GPR* %11520, i32 0, i32 17
  %11522 = getelementptr inbounds %struct.Reg, %struct.Reg* %11521, i32 0, i32 0
  %R8D.i2822 = bitcast %union.anon* %11522 to i32*
  %11523 = bitcast i32* %R8D.i2822 to i64*
  %11524 = load i32, i32* %R8D.i2822
  %11525 = zext i32 %11524 to i64
  %11526 = load i64, i64* %PC.i2821
  %11527 = add i64 %11526, 4
  store i64 %11527, i64* %PC.i2821
  %11528 = shl i64 %11525, 32
  %11529 = ashr exact i64 %11528, 32
  %11530 = ashr i64 %11529, 1
  %11531 = lshr i64 %11530, 1
  %11532 = trunc i64 %11530 to i8
  %11533 = and i8 %11532, 1
  %11534 = trunc i64 %11531 to i32
  %11535 = and i64 %11531, 4294967295
  store i64 %11535, i64* %11523, align 8
  %11536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11533, i8* %11536, align 1
  %11537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11538 = and i32 %11534, 255
  %11539 = call i32 @llvm.ctpop.i32(i32 %11538)
  %11540 = trunc i32 %11539 to i8
  %11541 = and i8 %11540, 1
  %11542 = xor i8 %11541, 1
  store i8 %11542, i8* %11537, align 1
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11543, align 1
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11545 = icmp eq i32 %11534, 0
  %11546 = zext i1 %11545 to i8
  store i8 %11546, i8* %11544, align 1
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11548 = lshr i32 %11534, 31
  %11549 = trunc i32 %11548 to i8
  store i8 %11549, i8* %11547, align 1
  %11550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11550, align 1
  store %struct.Memory* %loadMem_4ab009, %struct.Memory** %MEMORY
  %loadMem_4ab00d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11552 = getelementptr inbounds %struct.GPR, %struct.GPR* %11551, i32 0, i32 33
  %11553 = getelementptr inbounds %struct.Reg, %struct.Reg* %11552, i32 0, i32 0
  %PC.i2818 = bitcast %union.anon* %11553 to i64*
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11555 = getelementptr inbounds %struct.GPR, %struct.GPR* %11554, i32 0, i32 17
  %11556 = getelementptr inbounds %struct.Reg, %struct.Reg* %11555, i32 0, i32 0
  %R8D.i2819 = bitcast %union.anon* %11556 to i32*
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11558 = getelementptr inbounds %struct.GPR, %struct.GPR* %11557, i32 0, i32 11
  %11559 = getelementptr inbounds %struct.Reg, %struct.Reg* %11558, i32 0, i32 0
  %RDI.i2820 = bitcast %union.anon* %11559 to i64*
  %11560 = load i64, i64* %RDI.i2820
  %11561 = load i32, i32* %R8D.i2819
  %11562 = zext i32 %11561 to i64
  %11563 = load i64, i64* %PC.i2818
  %11564 = add i64 %11563, 3
  store i64 %11564, i64* %PC.i2818
  %11565 = trunc i64 %11560 to i32
  %11566 = add i32 %11561, %11565
  %11567 = zext i32 %11566 to i64
  store i64 %11567, i64* %RDI.i2820, align 8
  %11568 = icmp ult i32 %11566, %11565
  %11569 = icmp ult i32 %11566, %11561
  %11570 = or i1 %11568, %11569
  %11571 = zext i1 %11570 to i8
  %11572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11571, i8* %11572, align 1
  %11573 = and i32 %11566, 255
  %11574 = call i32 @llvm.ctpop.i32(i32 %11573)
  %11575 = trunc i32 %11574 to i8
  %11576 = and i8 %11575, 1
  %11577 = xor i8 %11576, 1
  %11578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11577, i8* %11578, align 1
  %11579 = xor i64 %11562, %11560
  %11580 = trunc i64 %11579 to i32
  %11581 = xor i32 %11580, %11566
  %11582 = lshr i32 %11581, 4
  %11583 = trunc i32 %11582 to i8
  %11584 = and i8 %11583, 1
  %11585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11584, i8* %11585, align 1
  %11586 = icmp eq i32 %11566, 0
  %11587 = zext i1 %11586 to i8
  %11588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11587, i8* %11588, align 1
  %11589 = lshr i32 %11566, 31
  %11590 = trunc i32 %11589 to i8
  %11591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11590, i8* %11591, align 1
  %11592 = lshr i32 %11565, 31
  %11593 = lshr i32 %11561, 31
  %11594 = xor i32 %11589, %11592
  %11595 = xor i32 %11589, %11593
  %11596 = add i32 %11594, %11595
  %11597 = icmp eq i32 %11596, 2
  %11598 = zext i1 %11597 to i8
  %11599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11598, i8* %11599, align 1
  store %struct.Memory* %loadMem_4ab00d, %struct.Memory** %MEMORY
  %loadMem_4ab010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11601 = getelementptr inbounds %struct.GPR, %struct.GPR* %11600, i32 0, i32 33
  %11602 = getelementptr inbounds %struct.Reg, %struct.Reg* %11601, i32 0, i32 0
  %PC.i2816 = bitcast %union.anon* %11602 to i64*
  %11603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11604 = getelementptr inbounds %struct.GPR, %struct.GPR* %11603, i32 0, i32 5
  %11605 = getelementptr inbounds %struct.Reg, %struct.Reg* %11604, i32 0, i32 0
  %RCX.i2817 = bitcast %union.anon* %11605 to i64*
  %11606 = load i64, i64* %PC.i2816
  %11607 = add i64 %11606, 8
  store i64 %11607, i64* %PC.i2816
  %11608 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11608, i64* %RCX.i2817, align 8
  store %struct.Memory* %loadMem_4ab010, %struct.Memory** %MEMORY
  %loadMem_4ab018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11610 = getelementptr inbounds %struct.GPR, %struct.GPR* %11609, i32 0, i32 33
  %11611 = getelementptr inbounds %struct.Reg, %struct.Reg* %11610, i32 0, i32 0
  %PC.i2814 = bitcast %union.anon* %11611 to i64*
  %11612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11613 = getelementptr inbounds %struct.GPR, %struct.GPR* %11612, i32 0, i32 5
  %11614 = getelementptr inbounds %struct.Reg, %struct.Reg* %11613, i32 0, i32 0
  %RCX.i2815 = bitcast %union.anon* %11614 to i64*
  %11615 = load i64, i64* %RCX.i2815
  %11616 = load i64, i64* %PC.i2814
  %11617 = add i64 %11616, 7
  store i64 %11617, i64* %PC.i2814
  %11618 = add i64 13112, %11615
  store i64 %11618, i64* %RCX.i2815, align 8
  %11619 = icmp ult i64 %11618, %11615
  %11620 = icmp ult i64 %11618, 13112
  %11621 = or i1 %11619, %11620
  %11622 = zext i1 %11621 to i8
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11622, i8* %11623, align 1
  %11624 = trunc i64 %11618 to i32
  %11625 = and i32 %11624, 255
  %11626 = call i32 @llvm.ctpop.i32(i32 %11625)
  %11627 = trunc i32 %11626 to i8
  %11628 = and i8 %11627, 1
  %11629 = xor i8 %11628, 1
  %11630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11629, i8* %11630, align 1
  %11631 = xor i64 13112, %11615
  %11632 = xor i64 %11631, %11618
  %11633 = lshr i64 %11632, 4
  %11634 = trunc i64 %11633 to i8
  %11635 = and i8 %11634, 1
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11635, i8* %11636, align 1
  %11637 = icmp eq i64 %11618, 0
  %11638 = zext i1 %11637 to i8
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11638, i8* %11639, align 1
  %11640 = lshr i64 %11618, 63
  %11641 = trunc i64 %11640 to i8
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11641, i8* %11642, align 1
  %11643 = lshr i64 %11615, 63
  %11644 = xor i64 %11640, %11643
  %11645 = add i64 %11644, %11640
  %11646 = icmp eq i64 %11645, 2
  %11647 = zext i1 %11646 to i8
  %11648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11647, i8* %11648, align 1
  store %struct.Memory* %loadMem_4ab018, %struct.Memory** %MEMORY
  %loadMem_4ab01f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11650 = getelementptr inbounds %struct.GPR, %struct.GPR* %11649, i32 0, i32 33
  %11651 = getelementptr inbounds %struct.Reg, %struct.Reg* %11650, i32 0, i32 0
  %PC.i2811 = bitcast %union.anon* %11651 to i64*
  %11652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11653 = getelementptr inbounds %struct.GPR, %struct.GPR* %11652, i32 0, i32 7
  %11654 = getelementptr inbounds %struct.Reg, %struct.Reg* %11653, i32 0, i32 0
  %RDX.i2812 = bitcast %union.anon* %11654 to i64*
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11656 = getelementptr inbounds %struct.GPR, %struct.GPR* %11655, i32 0, i32 15
  %11657 = getelementptr inbounds %struct.Reg, %struct.Reg* %11656, i32 0, i32 0
  %RBP.i2813 = bitcast %union.anon* %11657 to i64*
  %11658 = load i64, i64* %RBP.i2813
  %11659 = sub i64 %11658, 24
  %11660 = load i64, i64* %PC.i2811
  %11661 = add i64 %11660, 4
  store i64 %11661, i64* %PC.i2811
  %11662 = inttoptr i64 %11659 to i32*
  %11663 = load i32, i32* %11662
  %11664 = sext i32 %11663 to i64
  store i64 %11664, i64* %RDX.i2812, align 8
  store %struct.Memory* %loadMem_4ab01f, %struct.Memory** %MEMORY
  %loadMem_4ab023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11666 = getelementptr inbounds %struct.GPR, %struct.GPR* %11665, i32 0, i32 33
  %11667 = getelementptr inbounds %struct.Reg, %struct.Reg* %11666, i32 0, i32 0
  %PC.i2809 = bitcast %union.anon* %11667 to i64*
  %11668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11669 = getelementptr inbounds %struct.GPR, %struct.GPR* %11668, i32 0, i32 7
  %11670 = getelementptr inbounds %struct.Reg, %struct.Reg* %11669, i32 0, i32 0
  %RDX.i2810 = bitcast %union.anon* %11670 to i64*
  %11671 = load i64, i64* %RDX.i2810
  %11672 = load i64, i64* %PC.i2809
  %11673 = add i64 %11672, 4
  store i64 %11673, i64* %PC.i2809
  %11674 = shl i64 %11671, 5
  %11675 = icmp slt i64 %11674, 0
  %11676 = shl i64 %11674, 1
  store i64 %11676, i64* %RDX.i2810, align 8
  %11677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11678 = zext i1 %11675 to i8
  store i8 %11678, i8* %11677, align 1
  %11679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11680 = trunc i64 %11676 to i32
  %11681 = and i32 %11680, 254
  %11682 = call i32 @llvm.ctpop.i32(i32 %11681)
  %11683 = trunc i32 %11682 to i8
  %11684 = and i8 %11683, 1
  %11685 = xor i8 %11684, 1
  store i8 %11685, i8* %11679, align 1
  %11686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11686, align 1
  %11687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11688 = icmp eq i64 %11676, 0
  %11689 = zext i1 %11688 to i8
  store i8 %11689, i8* %11687, align 1
  %11690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11691 = lshr i64 %11676, 63
  %11692 = trunc i64 %11691 to i8
  store i8 %11692, i8* %11690, align 1
  %11693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11693, align 1
  store %struct.Memory* %loadMem_4ab023, %struct.Memory** %MEMORY
  %loadMem_4ab027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11695 = getelementptr inbounds %struct.GPR, %struct.GPR* %11694, i32 0, i32 33
  %11696 = getelementptr inbounds %struct.Reg, %struct.Reg* %11695, i32 0, i32 0
  %PC.i2806 = bitcast %union.anon* %11696 to i64*
  %11697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11698 = getelementptr inbounds %struct.GPR, %struct.GPR* %11697, i32 0, i32 5
  %11699 = getelementptr inbounds %struct.Reg, %struct.Reg* %11698, i32 0, i32 0
  %RCX.i2807 = bitcast %union.anon* %11699 to i64*
  %11700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11701 = getelementptr inbounds %struct.GPR, %struct.GPR* %11700, i32 0, i32 7
  %11702 = getelementptr inbounds %struct.Reg, %struct.Reg* %11701, i32 0, i32 0
  %RDX.i2808 = bitcast %union.anon* %11702 to i64*
  %11703 = load i64, i64* %RCX.i2807
  %11704 = load i64, i64* %RDX.i2808
  %11705 = load i64, i64* %PC.i2806
  %11706 = add i64 %11705, 3
  store i64 %11706, i64* %PC.i2806
  %11707 = add i64 %11704, %11703
  store i64 %11707, i64* %RCX.i2807, align 8
  %11708 = icmp ult i64 %11707, %11703
  %11709 = icmp ult i64 %11707, %11704
  %11710 = or i1 %11708, %11709
  %11711 = zext i1 %11710 to i8
  %11712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11711, i8* %11712, align 1
  %11713 = trunc i64 %11707 to i32
  %11714 = and i32 %11713, 255
  %11715 = call i32 @llvm.ctpop.i32(i32 %11714)
  %11716 = trunc i32 %11715 to i8
  %11717 = and i8 %11716, 1
  %11718 = xor i8 %11717, 1
  %11719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11718, i8* %11719, align 1
  %11720 = xor i64 %11704, %11703
  %11721 = xor i64 %11720, %11707
  %11722 = lshr i64 %11721, 4
  %11723 = trunc i64 %11722 to i8
  %11724 = and i8 %11723, 1
  %11725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11724, i8* %11725, align 1
  %11726 = icmp eq i64 %11707, 0
  %11727 = zext i1 %11726 to i8
  %11728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11727, i8* %11728, align 1
  %11729 = lshr i64 %11707, 63
  %11730 = trunc i64 %11729 to i8
  %11731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11730, i8* %11731, align 1
  %11732 = lshr i64 %11703, 63
  %11733 = lshr i64 %11704, 63
  %11734 = xor i64 %11729, %11732
  %11735 = xor i64 %11729, %11733
  %11736 = add i64 %11734, %11735
  %11737 = icmp eq i64 %11736, 2
  %11738 = zext i1 %11737 to i8
  %11739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11738, i8* %11739, align 1
  store %struct.Memory* %loadMem_4ab027, %struct.Memory** %MEMORY
  %loadMem_4ab02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11741 = getelementptr inbounds %struct.GPR, %struct.GPR* %11740, i32 0, i32 33
  %11742 = getelementptr inbounds %struct.Reg, %struct.Reg* %11741, i32 0, i32 0
  %PC.i2803 = bitcast %union.anon* %11742 to i64*
  %11743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11744 = getelementptr inbounds %struct.GPR, %struct.GPR* %11743, i32 0, i32 11
  %11745 = getelementptr inbounds %struct.Reg, %struct.Reg* %11744, i32 0, i32 0
  %EDI.i2804 = bitcast %union.anon* %11745 to i32*
  %11746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11747 = getelementptr inbounds %struct.GPR, %struct.GPR* %11746, i32 0, i32 5
  %11748 = getelementptr inbounds %struct.Reg, %struct.Reg* %11747, i32 0, i32 0
  %RCX.i2805 = bitcast %union.anon* %11748 to i64*
  %11749 = load i64, i64* %RCX.i2805
  %11750 = add i64 %11749, 12
  %11751 = load i32, i32* %EDI.i2804
  %11752 = zext i32 %11751 to i64
  %11753 = load i64, i64* %PC.i2803
  %11754 = add i64 %11753, 3
  store i64 %11754, i64* %PC.i2803
  %11755 = inttoptr i64 %11750 to i32*
  store i32 %11751, i32* %11755
  store %struct.Memory* %loadMem_4ab02a, %struct.Memory** %MEMORY
  %loadMem_4ab02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11757 = getelementptr inbounds %struct.GPR, %struct.GPR* %11756, i32 0, i32 33
  %11758 = getelementptr inbounds %struct.Reg, %struct.Reg* %11757, i32 0, i32 0
  %PC.i2800 = bitcast %union.anon* %11758 to i64*
  %11759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11760 = getelementptr inbounds %struct.GPR, %struct.GPR* %11759, i32 0, i32 11
  %11761 = getelementptr inbounds %struct.Reg, %struct.Reg* %11760, i32 0, i32 0
  %RDI.i2801 = bitcast %union.anon* %11761 to i64*
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11763 = getelementptr inbounds %struct.GPR, %struct.GPR* %11762, i32 0, i32 15
  %11764 = getelementptr inbounds %struct.Reg, %struct.Reg* %11763, i32 0, i32 0
  %RBP.i2802 = bitcast %union.anon* %11764 to i64*
  %11765 = load i64, i64* %RBP.i2802
  %11766 = sub i64 %11765, 520
  %11767 = load i64, i64* %PC.i2800
  %11768 = add i64 %11767, 6
  store i64 %11768, i64* %PC.i2800
  %11769 = inttoptr i64 %11766 to i32*
  %11770 = load i32, i32* %11769
  %11771 = zext i32 %11770 to i64
  store i64 %11771, i64* %RDI.i2801, align 8
  store %struct.Memory* %loadMem_4ab02d, %struct.Memory** %MEMORY
  %loadMem_4ab033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11773 = getelementptr inbounds %struct.GPR, %struct.GPR* %11772, i32 0, i32 33
  %11774 = getelementptr inbounds %struct.Reg, %struct.Reg* %11773, i32 0, i32 0
  %PC.i2797 = bitcast %union.anon* %11774 to i64*
  %11775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11776 = getelementptr inbounds %struct.GPR, %struct.GPR* %11775, i32 0, i32 17
  %11777 = getelementptr inbounds %struct.Reg, %struct.Reg* %11776, i32 0, i32 0
  %R8D.i2798 = bitcast %union.anon* %11777 to i32*
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11779 = getelementptr inbounds %struct.GPR, %struct.GPR* %11778, i32 0, i32 15
  %11780 = getelementptr inbounds %struct.Reg, %struct.Reg* %11779, i32 0, i32 0
  %RBP.i2799 = bitcast %union.anon* %11780 to i64*
  %11781 = bitcast i32* %R8D.i2798 to i64*
  %11782 = load i64, i64* %RBP.i2799
  %11783 = sub i64 %11782, 524
  %11784 = load i64, i64* %PC.i2797
  %11785 = add i64 %11784, 7
  store i64 %11785, i64* %PC.i2797
  %11786 = inttoptr i64 %11783 to i32*
  %11787 = load i32, i32* %11786
  %11788 = zext i32 %11787 to i64
  store i64 %11788, i64* %11781, align 8
  store %struct.Memory* %loadMem_4ab033, %struct.Memory** %MEMORY
  %loadMem_4ab03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11790 = getelementptr inbounds %struct.GPR, %struct.GPR* %11789, i32 0, i32 33
  %11791 = getelementptr inbounds %struct.Reg, %struct.Reg* %11790, i32 0, i32 0
  %PC.i2795 = bitcast %union.anon* %11791 to i64*
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11793 = getelementptr inbounds %struct.GPR, %struct.GPR* %11792, i32 0, i32 17
  %11794 = getelementptr inbounds %struct.Reg, %struct.Reg* %11793, i32 0, i32 0
  %R8D.i2796 = bitcast %union.anon* %11794 to i32*
  %11795 = bitcast i32* %R8D.i2796 to i64*
  %11796 = load i32, i32* %R8D.i2796
  %11797 = zext i32 %11796 to i64
  %11798 = load i64, i64* %PC.i2795
  %11799 = add i64 %11798, 4
  store i64 %11799, i64* %PC.i2795
  %11800 = shl i64 %11797, 32
  %11801 = ashr exact i64 %11800, 32
  %11802 = ashr i64 %11801, 1
  %11803 = lshr i64 %11802, 1
  %11804 = trunc i64 %11802 to i8
  %11805 = and i8 %11804, 1
  %11806 = trunc i64 %11803 to i32
  %11807 = and i64 %11803, 4294967295
  store i64 %11807, i64* %11795, align 8
  %11808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11805, i8* %11808, align 1
  %11809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11810 = and i32 %11806, 255
  %11811 = call i32 @llvm.ctpop.i32(i32 %11810)
  %11812 = trunc i32 %11811 to i8
  %11813 = and i8 %11812, 1
  %11814 = xor i8 %11813, 1
  store i8 %11814, i8* %11809, align 1
  %11815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11815, align 1
  %11816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11817 = icmp eq i32 %11806, 0
  %11818 = zext i1 %11817 to i8
  store i8 %11818, i8* %11816, align 1
  %11819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11820 = lshr i32 %11806, 31
  %11821 = trunc i32 %11820 to i8
  store i8 %11821, i8* %11819, align 1
  %11822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11822, align 1
  store %struct.Memory* %loadMem_4ab03a, %struct.Memory** %MEMORY
  %loadMem_4ab03e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11824 = getelementptr inbounds %struct.GPR, %struct.GPR* %11823, i32 0, i32 33
  %11825 = getelementptr inbounds %struct.Reg, %struct.Reg* %11824, i32 0, i32 0
  %PC.i2792 = bitcast %union.anon* %11825 to i64*
  %11826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11827 = getelementptr inbounds %struct.GPR, %struct.GPR* %11826, i32 0, i32 17
  %11828 = getelementptr inbounds %struct.Reg, %struct.Reg* %11827, i32 0, i32 0
  %R8D.i2793 = bitcast %union.anon* %11828 to i32*
  %11829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11830 = getelementptr inbounds %struct.GPR, %struct.GPR* %11829, i32 0, i32 11
  %11831 = getelementptr inbounds %struct.Reg, %struct.Reg* %11830, i32 0, i32 0
  %RDI.i2794 = bitcast %union.anon* %11831 to i64*
  %11832 = load i64, i64* %RDI.i2794
  %11833 = load i32, i32* %R8D.i2793
  %11834 = zext i32 %11833 to i64
  %11835 = load i64, i64* %PC.i2792
  %11836 = add i64 %11835, 3
  store i64 %11836, i64* %PC.i2792
  %11837 = trunc i64 %11832 to i32
  %11838 = sub i32 %11837, %11833
  %11839 = zext i32 %11838 to i64
  store i64 %11839, i64* %RDI.i2794, align 8
  %11840 = icmp ult i32 %11837, %11833
  %11841 = zext i1 %11840 to i8
  %11842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11841, i8* %11842, align 1
  %11843 = and i32 %11838, 255
  %11844 = call i32 @llvm.ctpop.i32(i32 %11843)
  %11845 = trunc i32 %11844 to i8
  %11846 = and i8 %11845, 1
  %11847 = xor i8 %11846, 1
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11847, i8* %11848, align 1
  %11849 = xor i64 %11834, %11832
  %11850 = trunc i64 %11849 to i32
  %11851 = xor i32 %11850, %11838
  %11852 = lshr i32 %11851, 4
  %11853 = trunc i32 %11852 to i8
  %11854 = and i8 %11853, 1
  %11855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11854, i8* %11855, align 1
  %11856 = icmp eq i32 %11838, 0
  %11857 = zext i1 %11856 to i8
  %11858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11857, i8* %11858, align 1
  %11859 = lshr i32 %11838, 31
  %11860 = trunc i32 %11859 to i8
  %11861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11860, i8* %11861, align 1
  %11862 = lshr i32 %11837, 31
  %11863 = lshr i32 %11833, 31
  %11864 = xor i32 %11863, %11862
  %11865 = xor i32 %11859, %11862
  %11866 = add i32 %11865, %11864
  %11867 = icmp eq i32 %11866, 2
  %11868 = zext i1 %11867 to i8
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11868, i8* %11869, align 1
  store %struct.Memory* %loadMem_4ab03e, %struct.Memory** %MEMORY
  %loadMem_4ab041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11871 = getelementptr inbounds %struct.GPR, %struct.GPR* %11870, i32 0, i32 33
  %11872 = getelementptr inbounds %struct.Reg, %struct.Reg* %11871, i32 0, i32 0
  %PC.i2790 = bitcast %union.anon* %11872 to i64*
  %11873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11874 = getelementptr inbounds %struct.GPR, %struct.GPR* %11873, i32 0, i32 5
  %11875 = getelementptr inbounds %struct.Reg, %struct.Reg* %11874, i32 0, i32 0
  %RCX.i2791 = bitcast %union.anon* %11875 to i64*
  %11876 = load i64, i64* %PC.i2790
  %11877 = add i64 %11876, 8
  store i64 %11877, i64* %PC.i2790
  %11878 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11878, i64* %RCX.i2791, align 8
  store %struct.Memory* %loadMem_4ab041, %struct.Memory** %MEMORY
  %loadMem_4ab049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11880 = getelementptr inbounds %struct.GPR, %struct.GPR* %11879, i32 0, i32 33
  %11881 = getelementptr inbounds %struct.Reg, %struct.Reg* %11880, i32 0, i32 0
  %PC.i2788 = bitcast %union.anon* %11881 to i64*
  %11882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11883 = getelementptr inbounds %struct.GPR, %struct.GPR* %11882, i32 0, i32 5
  %11884 = getelementptr inbounds %struct.Reg, %struct.Reg* %11883, i32 0, i32 0
  %RCX.i2789 = bitcast %union.anon* %11884 to i64*
  %11885 = load i64, i64* %RCX.i2789
  %11886 = load i64, i64* %PC.i2788
  %11887 = add i64 %11886, 7
  store i64 %11887, i64* %PC.i2788
  %11888 = add i64 13112, %11885
  store i64 %11888, i64* %RCX.i2789, align 8
  %11889 = icmp ult i64 %11888, %11885
  %11890 = icmp ult i64 %11888, 13112
  %11891 = or i1 %11889, %11890
  %11892 = zext i1 %11891 to i8
  %11893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11892, i8* %11893, align 1
  %11894 = trunc i64 %11888 to i32
  %11895 = and i32 %11894, 255
  %11896 = call i32 @llvm.ctpop.i32(i32 %11895)
  %11897 = trunc i32 %11896 to i8
  %11898 = and i8 %11897, 1
  %11899 = xor i8 %11898, 1
  %11900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11899, i8* %11900, align 1
  %11901 = xor i64 13112, %11885
  %11902 = xor i64 %11901, %11888
  %11903 = lshr i64 %11902, 4
  %11904 = trunc i64 %11903 to i8
  %11905 = and i8 %11904, 1
  %11906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11905, i8* %11906, align 1
  %11907 = icmp eq i64 %11888, 0
  %11908 = zext i1 %11907 to i8
  %11909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11908, i8* %11909, align 1
  %11910 = lshr i64 %11888, 63
  %11911 = trunc i64 %11910 to i8
  %11912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11911, i8* %11912, align 1
  %11913 = lshr i64 %11885, 63
  %11914 = xor i64 %11910, %11913
  %11915 = add i64 %11914, %11910
  %11916 = icmp eq i64 %11915, 2
  %11917 = zext i1 %11916 to i8
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11917, i8* %11918, align 1
  store %struct.Memory* %loadMem_4ab049, %struct.Memory** %MEMORY
  %loadMem_4ab050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11920 = getelementptr inbounds %struct.GPR, %struct.GPR* %11919, i32 0, i32 33
  %11921 = getelementptr inbounds %struct.Reg, %struct.Reg* %11920, i32 0, i32 0
  %PC.i2785 = bitcast %union.anon* %11921 to i64*
  %11922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11923 = getelementptr inbounds %struct.GPR, %struct.GPR* %11922, i32 0, i32 7
  %11924 = getelementptr inbounds %struct.Reg, %struct.Reg* %11923, i32 0, i32 0
  %RDX.i2786 = bitcast %union.anon* %11924 to i64*
  %11925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11926 = getelementptr inbounds %struct.GPR, %struct.GPR* %11925, i32 0, i32 15
  %11927 = getelementptr inbounds %struct.Reg, %struct.Reg* %11926, i32 0, i32 0
  %RBP.i2787 = bitcast %union.anon* %11927 to i64*
  %11928 = load i64, i64* %RBP.i2787
  %11929 = sub i64 %11928, 24
  %11930 = load i64, i64* %PC.i2785
  %11931 = add i64 %11930, 4
  store i64 %11931, i64* %PC.i2785
  %11932 = inttoptr i64 %11929 to i32*
  %11933 = load i32, i32* %11932
  %11934 = sext i32 %11933 to i64
  store i64 %11934, i64* %RDX.i2786, align 8
  store %struct.Memory* %loadMem_4ab050, %struct.Memory** %MEMORY
  %loadMem_4ab054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11936 = getelementptr inbounds %struct.GPR, %struct.GPR* %11935, i32 0, i32 33
  %11937 = getelementptr inbounds %struct.Reg, %struct.Reg* %11936, i32 0, i32 0
  %PC.i2783 = bitcast %union.anon* %11937 to i64*
  %11938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11939 = getelementptr inbounds %struct.GPR, %struct.GPR* %11938, i32 0, i32 7
  %11940 = getelementptr inbounds %struct.Reg, %struct.Reg* %11939, i32 0, i32 0
  %RDX.i2784 = bitcast %union.anon* %11940 to i64*
  %11941 = load i64, i64* %RDX.i2784
  %11942 = load i64, i64* %PC.i2783
  %11943 = add i64 %11942, 4
  store i64 %11943, i64* %PC.i2783
  %11944 = shl i64 %11941, 5
  %11945 = icmp slt i64 %11944, 0
  %11946 = shl i64 %11944, 1
  store i64 %11946, i64* %RDX.i2784, align 8
  %11947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11948 = zext i1 %11945 to i8
  store i8 %11948, i8* %11947, align 1
  %11949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11950 = trunc i64 %11946 to i32
  %11951 = and i32 %11950, 254
  %11952 = call i32 @llvm.ctpop.i32(i32 %11951)
  %11953 = trunc i32 %11952 to i8
  %11954 = and i8 %11953, 1
  %11955 = xor i8 %11954, 1
  store i8 %11955, i8* %11949, align 1
  %11956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11956, align 1
  %11957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11958 = icmp eq i64 %11946, 0
  %11959 = zext i1 %11958 to i8
  store i8 %11959, i8* %11957, align 1
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11961 = lshr i64 %11946, 63
  %11962 = trunc i64 %11961 to i8
  store i8 %11962, i8* %11960, align 1
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11963, align 1
  store %struct.Memory* %loadMem_4ab054, %struct.Memory** %MEMORY
  %loadMem_4ab058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11965 = getelementptr inbounds %struct.GPR, %struct.GPR* %11964, i32 0, i32 33
  %11966 = getelementptr inbounds %struct.Reg, %struct.Reg* %11965, i32 0, i32 0
  %PC.i2780 = bitcast %union.anon* %11966 to i64*
  %11967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11968 = getelementptr inbounds %struct.GPR, %struct.GPR* %11967, i32 0, i32 5
  %11969 = getelementptr inbounds %struct.Reg, %struct.Reg* %11968, i32 0, i32 0
  %RCX.i2781 = bitcast %union.anon* %11969 to i64*
  %11970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11971 = getelementptr inbounds %struct.GPR, %struct.GPR* %11970, i32 0, i32 7
  %11972 = getelementptr inbounds %struct.Reg, %struct.Reg* %11971, i32 0, i32 0
  %RDX.i2782 = bitcast %union.anon* %11972 to i64*
  %11973 = load i64, i64* %RCX.i2781
  %11974 = load i64, i64* %RDX.i2782
  %11975 = load i64, i64* %PC.i2780
  %11976 = add i64 %11975, 3
  store i64 %11976, i64* %PC.i2780
  %11977 = add i64 %11974, %11973
  store i64 %11977, i64* %RCX.i2781, align 8
  %11978 = icmp ult i64 %11977, %11973
  %11979 = icmp ult i64 %11977, %11974
  %11980 = or i1 %11978, %11979
  %11981 = zext i1 %11980 to i8
  %11982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11981, i8* %11982, align 1
  %11983 = trunc i64 %11977 to i32
  %11984 = and i32 %11983, 255
  %11985 = call i32 @llvm.ctpop.i32(i32 %11984)
  %11986 = trunc i32 %11985 to i8
  %11987 = and i8 %11986, 1
  %11988 = xor i8 %11987, 1
  %11989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11988, i8* %11989, align 1
  %11990 = xor i64 %11974, %11973
  %11991 = xor i64 %11990, %11977
  %11992 = lshr i64 %11991, 4
  %11993 = trunc i64 %11992 to i8
  %11994 = and i8 %11993, 1
  %11995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11994, i8* %11995, align 1
  %11996 = icmp eq i64 %11977, 0
  %11997 = zext i1 %11996 to i8
  %11998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11997, i8* %11998, align 1
  %11999 = lshr i64 %11977, 63
  %12000 = trunc i64 %11999 to i8
  %12001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12000, i8* %12001, align 1
  %12002 = lshr i64 %11973, 63
  %12003 = lshr i64 %11974, 63
  %12004 = xor i64 %11999, %12002
  %12005 = xor i64 %11999, %12003
  %12006 = add i64 %12004, %12005
  %12007 = icmp eq i64 %12006, 2
  %12008 = zext i1 %12007 to i8
  %12009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12008, i8* %12009, align 1
  store %struct.Memory* %loadMem_4ab058, %struct.Memory** %MEMORY
  %loadMem_4ab05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12011 = getelementptr inbounds %struct.GPR, %struct.GPR* %12010, i32 0, i32 33
  %12012 = getelementptr inbounds %struct.Reg, %struct.Reg* %12011, i32 0, i32 0
  %PC.i2777 = bitcast %union.anon* %12012 to i64*
  %12013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12014 = getelementptr inbounds %struct.GPR, %struct.GPR* %12013, i32 0, i32 11
  %12015 = getelementptr inbounds %struct.Reg, %struct.Reg* %12014, i32 0, i32 0
  %EDI.i2778 = bitcast %union.anon* %12015 to i32*
  %12016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12017 = getelementptr inbounds %struct.GPR, %struct.GPR* %12016, i32 0, i32 5
  %12018 = getelementptr inbounds %struct.Reg, %struct.Reg* %12017, i32 0, i32 0
  %RCX.i2779 = bitcast %union.anon* %12018 to i64*
  %12019 = load i64, i64* %RCX.i2779
  %12020 = add i64 %12019, 20
  %12021 = load i32, i32* %EDI.i2778
  %12022 = zext i32 %12021 to i64
  %12023 = load i64, i64* %PC.i2777
  %12024 = add i64 %12023, 3
  store i64 %12024, i64* %PC.i2777
  %12025 = inttoptr i64 %12020 to i32*
  store i32 %12021, i32* %12025
  store %struct.Memory* %loadMem_4ab05b, %struct.Memory** %MEMORY
  %loadMem_4ab05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12027 = getelementptr inbounds %struct.GPR, %struct.GPR* %12026, i32 0, i32 33
  %12028 = getelementptr inbounds %struct.Reg, %struct.Reg* %12027, i32 0, i32 0
  %PC.i2774 = bitcast %union.anon* %12028 to i64*
  %12029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12030 = getelementptr inbounds %struct.GPR, %struct.GPR* %12029, i32 0, i32 1
  %12031 = getelementptr inbounds %struct.Reg, %struct.Reg* %12030, i32 0, i32 0
  %RAX.i2775 = bitcast %union.anon* %12031 to i64*
  %12032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12033 = getelementptr inbounds %struct.GPR, %struct.GPR* %12032, i32 0, i32 15
  %12034 = getelementptr inbounds %struct.Reg, %struct.Reg* %12033, i32 0, i32 0
  %RBP.i2776 = bitcast %union.anon* %12034 to i64*
  %12035 = load i64, i64* %RAX.i2775
  %12036 = load i64, i64* %RBP.i2776
  %12037 = sub i64 %12036, 516
  %12038 = load i64, i64* %PC.i2774
  %12039 = add i64 %12038, 6
  store i64 %12039, i64* %PC.i2774
  %12040 = trunc i64 %12035 to i32
  %12041 = inttoptr i64 %12037 to i32*
  %12042 = load i32, i32* %12041
  %12043 = sub i32 %12040, %12042
  %12044 = zext i32 %12043 to i64
  store i64 %12044, i64* %RAX.i2775, align 8
  %12045 = icmp ult i32 %12040, %12042
  %12046 = zext i1 %12045 to i8
  %12047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12046, i8* %12047, align 1
  %12048 = and i32 %12043, 255
  %12049 = call i32 @llvm.ctpop.i32(i32 %12048)
  %12050 = trunc i32 %12049 to i8
  %12051 = and i8 %12050, 1
  %12052 = xor i8 %12051, 1
  %12053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12052, i8* %12053, align 1
  %12054 = xor i32 %12042, %12040
  %12055 = xor i32 %12054, %12043
  %12056 = lshr i32 %12055, 4
  %12057 = trunc i32 %12056 to i8
  %12058 = and i8 %12057, 1
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12058, i8* %12059, align 1
  %12060 = icmp eq i32 %12043, 0
  %12061 = zext i1 %12060 to i8
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12061, i8* %12062, align 1
  %12063 = lshr i32 %12043, 31
  %12064 = trunc i32 %12063 to i8
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12064, i8* %12065, align 1
  %12066 = lshr i32 %12040, 31
  %12067 = lshr i32 %12042, 31
  %12068 = xor i32 %12067, %12066
  %12069 = xor i32 %12063, %12066
  %12070 = add i32 %12069, %12068
  %12071 = icmp eq i32 %12070, 2
  %12072 = zext i1 %12071 to i8
  %12073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12072, i8* %12073, align 1
  store %struct.Memory* %loadMem_4ab05e, %struct.Memory** %MEMORY
  %loadMem_4ab064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12075 = getelementptr inbounds %struct.GPR, %struct.GPR* %12074, i32 0, i32 33
  %12076 = getelementptr inbounds %struct.Reg, %struct.Reg* %12075, i32 0, i32 0
  %PC.i2771 = bitcast %union.anon* %12076 to i64*
  %12077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12078 = getelementptr inbounds %struct.GPR, %struct.GPR* %12077, i32 0, i32 11
  %12079 = getelementptr inbounds %struct.Reg, %struct.Reg* %12078, i32 0, i32 0
  %RDI.i2772 = bitcast %union.anon* %12079 to i64*
  %12080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12081 = getelementptr inbounds %struct.GPR, %struct.GPR* %12080, i32 0, i32 15
  %12082 = getelementptr inbounds %struct.Reg, %struct.Reg* %12081, i32 0, i32 0
  %RBP.i2773 = bitcast %union.anon* %12082 to i64*
  %12083 = load i64, i64* %RBP.i2773
  %12084 = sub i64 %12083, 528
  %12085 = load i64, i64* %PC.i2771
  %12086 = add i64 %12085, 6
  store i64 %12086, i64* %PC.i2771
  %12087 = inttoptr i64 %12084 to i32*
  %12088 = load i32, i32* %12087
  %12089 = zext i32 %12088 to i64
  store i64 %12089, i64* %RDI.i2772, align 8
  store %struct.Memory* %loadMem_4ab064, %struct.Memory** %MEMORY
  %loadMem_4ab06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12091 = getelementptr inbounds %struct.GPR, %struct.GPR* %12090, i32 0, i32 33
  %12092 = getelementptr inbounds %struct.Reg, %struct.Reg* %12091, i32 0, i32 0
  %PC.i2769 = bitcast %union.anon* %12092 to i64*
  %12093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12094 = getelementptr inbounds %struct.GPR, %struct.GPR* %12093, i32 0, i32 11
  %12095 = getelementptr inbounds %struct.Reg, %struct.Reg* %12094, i32 0, i32 0
  %RDI.i2770 = bitcast %union.anon* %12095 to i64*
  %12096 = load i64, i64* %RDI.i2770
  %12097 = load i64, i64* %PC.i2769
  %12098 = add i64 %12097, 3
  store i64 %12098, i64* %PC.i2769
  %12099 = shl i64 %12096, 32
  %12100 = ashr exact i64 %12099, 32
  %12101 = ashr i64 %12100, 1
  %12102 = lshr i64 %12101, 1
  %12103 = trunc i64 %12101 to i8
  %12104 = and i8 %12103, 1
  %12105 = trunc i64 %12102 to i32
  %12106 = and i64 %12102, 4294967295
  store i64 %12106, i64* %RDI.i2770, align 8
  %12107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12104, i8* %12107, align 1
  %12108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12109 = and i32 %12105, 255
  %12110 = call i32 @llvm.ctpop.i32(i32 %12109)
  %12111 = trunc i32 %12110 to i8
  %12112 = and i8 %12111, 1
  %12113 = xor i8 %12112, 1
  store i8 %12113, i8* %12108, align 1
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12114, align 1
  %12115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12116 = icmp eq i32 %12105, 0
  %12117 = zext i1 %12116 to i8
  store i8 %12117, i8* %12115, align 1
  %12118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12119 = lshr i32 %12105, 31
  %12120 = trunc i32 %12119 to i8
  store i8 %12120, i8* %12118, align 1
  %12121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12121, align 1
  store %struct.Memory* %loadMem_4ab06a, %struct.Memory** %MEMORY
  %loadMem_4ab06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12123 = getelementptr inbounds %struct.GPR, %struct.GPR* %12122, i32 0, i32 33
  %12124 = getelementptr inbounds %struct.Reg, %struct.Reg* %12123, i32 0, i32 0
  %PC.i2766 = bitcast %union.anon* %12124 to i64*
  %12125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12126 = getelementptr inbounds %struct.GPR, %struct.GPR* %12125, i32 0, i32 11
  %12127 = getelementptr inbounds %struct.Reg, %struct.Reg* %12126, i32 0, i32 0
  %EDI.i2767 = bitcast %union.anon* %12127 to i32*
  %12128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12129 = getelementptr inbounds %struct.GPR, %struct.GPR* %12128, i32 0, i32 1
  %12130 = getelementptr inbounds %struct.Reg, %struct.Reg* %12129, i32 0, i32 0
  %RAX.i2768 = bitcast %union.anon* %12130 to i64*
  %12131 = load i64, i64* %RAX.i2768
  %12132 = load i32, i32* %EDI.i2767
  %12133 = zext i32 %12132 to i64
  %12134 = load i64, i64* %PC.i2766
  %12135 = add i64 %12134, 2
  store i64 %12135, i64* %PC.i2766
  %12136 = trunc i64 %12131 to i32
  %12137 = add i32 %12132, %12136
  %12138 = zext i32 %12137 to i64
  store i64 %12138, i64* %RAX.i2768, align 8
  %12139 = icmp ult i32 %12137, %12136
  %12140 = icmp ult i32 %12137, %12132
  %12141 = or i1 %12139, %12140
  %12142 = zext i1 %12141 to i8
  %12143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12142, i8* %12143, align 1
  %12144 = and i32 %12137, 255
  %12145 = call i32 @llvm.ctpop.i32(i32 %12144)
  %12146 = trunc i32 %12145 to i8
  %12147 = and i8 %12146, 1
  %12148 = xor i8 %12147, 1
  %12149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12148, i8* %12149, align 1
  %12150 = xor i64 %12133, %12131
  %12151 = trunc i64 %12150 to i32
  %12152 = xor i32 %12151, %12137
  %12153 = lshr i32 %12152, 4
  %12154 = trunc i32 %12153 to i8
  %12155 = and i8 %12154, 1
  %12156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12155, i8* %12156, align 1
  %12157 = icmp eq i32 %12137, 0
  %12158 = zext i1 %12157 to i8
  %12159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12158, i8* %12159, align 1
  %12160 = lshr i32 %12137, 31
  %12161 = trunc i32 %12160 to i8
  %12162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12161, i8* %12162, align 1
  %12163 = lshr i32 %12136, 31
  %12164 = lshr i32 %12132, 31
  %12165 = xor i32 %12160, %12163
  %12166 = xor i32 %12160, %12164
  %12167 = add i32 %12165, %12166
  %12168 = icmp eq i32 %12167, 2
  %12169 = zext i1 %12168 to i8
  %12170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12169, i8* %12170, align 1
  store %struct.Memory* %loadMem_4ab06d, %struct.Memory** %MEMORY
  %loadMem_4ab06f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12172 = getelementptr inbounds %struct.GPR, %struct.GPR* %12171, i32 0, i32 33
  %12173 = getelementptr inbounds %struct.Reg, %struct.Reg* %12172, i32 0, i32 0
  %PC.i2764 = bitcast %union.anon* %12173 to i64*
  %12174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12175 = getelementptr inbounds %struct.GPR, %struct.GPR* %12174, i32 0, i32 5
  %12176 = getelementptr inbounds %struct.Reg, %struct.Reg* %12175, i32 0, i32 0
  %RCX.i2765 = bitcast %union.anon* %12176 to i64*
  %12177 = load i64, i64* %PC.i2764
  %12178 = add i64 %12177, 8
  store i64 %12178, i64* %PC.i2764
  %12179 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12179, i64* %RCX.i2765, align 8
  store %struct.Memory* %loadMem_4ab06f, %struct.Memory** %MEMORY
  %loadMem_4ab077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12181 = getelementptr inbounds %struct.GPR, %struct.GPR* %12180, i32 0, i32 33
  %12182 = getelementptr inbounds %struct.Reg, %struct.Reg* %12181, i32 0, i32 0
  %PC.i2762 = bitcast %union.anon* %12182 to i64*
  %12183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12184 = getelementptr inbounds %struct.GPR, %struct.GPR* %12183, i32 0, i32 5
  %12185 = getelementptr inbounds %struct.Reg, %struct.Reg* %12184, i32 0, i32 0
  %RCX.i2763 = bitcast %union.anon* %12185 to i64*
  %12186 = load i64, i64* %RCX.i2763
  %12187 = load i64, i64* %PC.i2762
  %12188 = add i64 %12187, 7
  store i64 %12188, i64* %PC.i2762
  %12189 = add i64 13112, %12186
  store i64 %12189, i64* %RCX.i2763, align 8
  %12190 = icmp ult i64 %12189, %12186
  %12191 = icmp ult i64 %12189, 13112
  %12192 = or i1 %12190, %12191
  %12193 = zext i1 %12192 to i8
  %12194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12193, i8* %12194, align 1
  %12195 = trunc i64 %12189 to i32
  %12196 = and i32 %12195, 255
  %12197 = call i32 @llvm.ctpop.i32(i32 %12196)
  %12198 = trunc i32 %12197 to i8
  %12199 = and i8 %12198, 1
  %12200 = xor i8 %12199, 1
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12200, i8* %12201, align 1
  %12202 = xor i64 13112, %12186
  %12203 = xor i64 %12202, %12189
  %12204 = lshr i64 %12203, 4
  %12205 = trunc i64 %12204 to i8
  %12206 = and i8 %12205, 1
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12206, i8* %12207, align 1
  %12208 = icmp eq i64 %12189, 0
  %12209 = zext i1 %12208 to i8
  %12210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12209, i8* %12210, align 1
  %12211 = lshr i64 %12189, 63
  %12212 = trunc i64 %12211 to i8
  %12213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12212, i8* %12213, align 1
  %12214 = lshr i64 %12186, 63
  %12215 = xor i64 %12211, %12214
  %12216 = add i64 %12215, %12211
  %12217 = icmp eq i64 %12216, 2
  %12218 = zext i1 %12217 to i8
  %12219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12218, i8* %12219, align 1
  store %struct.Memory* %loadMem_4ab077, %struct.Memory** %MEMORY
  %loadMem_4ab07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12221 = getelementptr inbounds %struct.GPR, %struct.GPR* %12220, i32 0, i32 33
  %12222 = getelementptr inbounds %struct.Reg, %struct.Reg* %12221, i32 0, i32 0
  %PC.i2759 = bitcast %union.anon* %12222 to i64*
  %12223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12224 = getelementptr inbounds %struct.GPR, %struct.GPR* %12223, i32 0, i32 7
  %12225 = getelementptr inbounds %struct.Reg, %struct.Reg* %12224, i32 0, i32 0
  %RDX.i2760 = bitcast %union.anon* %12225 to i64*
  %12226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12227 = getelementptr inbounds %struct.GPR, %struct.GPR* %12226, i32 0, i32 15
  %12228 = getelementptr inbounds %struct.Reg, %struct.Reg* %12227, i32 0, i32 0
  %RBP.i2761 = bitcast %union.anon* %12228 to i64*
  %12229 = load i64, i64* %RBP.i2761
  %12230 = sub i64 %12229, 24
  %12231 = load i64, i64* %PC.i2759
  %12232 = add i64 %12231, 4
  store i64 %12232, i64* %PC.i2759
  %12233 = inttoptr i64 %12230 to i32*
  %12234 = load i32, i32* %12233
  %12235 = sext i32 %12234 to i64
  store i64 %12235, i64* %RDX.i2760, align 8
  store %struct.Memory* %loadMem_4ab07e, %struct.Memory** %MEMORY
  %loadMem_4ab082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12237 = getelementptr inbounds %struct.GPR, %struct.GPR* %12236, i32 0, i32 33
  %12238 = getelementptr inbounds %struct.Reg, %struct.Reg* %12237, i32 0, i32 0
  %PC.i2757 = bitcast %union.anon* %12238 to i64*
  %12239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12240 = getelementptr inbounds %struct.GPR, %struct.GPR* %12239, i32 0, i32 7
  %12241 = getelementptr inbounds %struct.Reg, %struct.Reg* %12240, i32 0, i32 0
  %RDX.i2758 = bitcast %union.anon* %12241 to i64*
  %12242 = load i64, i64* %RDX.i2758
  %12243 = load i64, i64* %PC.i2757
  %12244 = add i64 %12243, 4
  store i64 %12244, i64* %PC.i2757
  %12245 = shl i64 %12242, 5
  %12246 = icmp slt i64 %12245, 0
  %12247 = shl i64 %12245, 1
  store i64 %12247, i64* %RDX.i2758, align 8
  %12248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12249 = zext i1 %12246 to i8
  store i8 %12249, i8* %12248, align 1
  %12250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12251 = trunc i64 %12247 to i32
  %12252 = and i32 %12251, 254
  %12253 = call i32 @llvm.ctpop.i32(i32 %12252)
  %12254 = trunc i32 %12253 to i8
  %12255 = and i8 %12254, 1
  %12256 = xor i8 %12255, 1
  store i8 %12256, i8* %12250, align 1
  %12257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12257, align 1
  %12258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12259 = icmp eq i64 %12247, 0
  %12260 = zext i1 %12259 to i8
  store i8 %12260, i8* %12258, align 1
  %12261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12262 = lshr i64 %12247, 63
  %12263 = trunc i64 %12262 to i8
  store i8 %12263, i8* %12261, align 1
  %12264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12264, align 1
  store %struct.Memory* %loadMem_4ab082, %struct.Memory** %MEMORY
  %loadMem_4ab086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12266 = getelementptr inbounds %struct.GPR, %struct.GPR* %12265, i32 0, i32 33
  %12267 = getelementptr inbounds %struct.Reg, %struct.Reg* %12266, i32 0, i32 0
  %PC.i2754 = bitcast %union.anon* %12267 to i64*
  %12268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12269 = getelementptr inbounds %struct.GPR, %struct.GPR* %12268, i32 0, i32 5
  %12270 = getelementptr inbounds %struct.Reg, %struct.Reg* %12269, i32 0, i32 0
  %RCX.i2755 = bitcast %union.anon* %12270 to i64*
  %12271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12272 = getelementptr inbounds %struct.GPR, %struct.GPR* %12271, i32 0, i32 7
  %12273 = getelementptr inbounds %struct.Reg, %struct.Reg* %12272, i32 0, i32 0
  %RDX.i2756 = bitcast %union.anon* %12273 to i64*
  %12274 = load i64, i64* %RCX.i2755
  %12275 = load i64, i64* %RDX.i2756
  %12276 = load i64, i64* %PC.i2754
  %12277 = add i64 %12276, 3
  store i64 %12277, i64* %PC.i2754
  %12278 = add i64 %12275, %12274
  store i64 %12278, i64* %RCX.i2755, align 8
  %12279 = icmp ult i64 %12278, %12274
  %12280 = icmp ult i64 %12278, %12275
  %12281 = or i1 %12279, %12280
  %12282 = zext i1 %12281 to i8
  %12283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12282, i8* %12283, align 1
  %12284 = trunc i64 %12278 to i32
  %12285 = and i32 %12284, 255
  %12286 = call i32 @llvm.ctpop.i32(i32 %12285)
  %12287 = trunc i32 %12286 to i8
  %12288 = and i8 %12287, 1
  %12289 = xor i8 %12288, 1
  %12290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12289, i8* %12290, align 1
  %12291 = xor i64 %12275, %12274
  %12292 = xor i64 %12291, %12278
  %12293 = lshr i64 %12292, 4
  %12294 = trunc i64 %12293 to i8
  %12295 = and i8 %12294, 1
  %12296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12295, i8* %12296, align 1
  %12297 = icmp eq i64 %12278, 0
  %12298 = zext i1 %12297 to i8
  %12299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12298, i8* %12299, align 1
  %12300 = lshr i64 %12278, 63
  %12301 = trunc i64 %12300 to i8
  %12302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12301, i8* %12302, align 1
  %12303 = lshr i64 %12274, 63
  %12304 = lshr i64 %12275, 63
  %12305 = xor i64 %12300, %12303
  %12306 = xor i64 %12300, %12304
  %12307 = add i64 %12305, %12306
  %12308 = icmp eq i64 %12307, 2
  %12309 = zext i1 %12308 to i8
  %12310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12309, i8* %12310, align 1
  store %struct.Memory* %loadMem_4ab086, %struct.Memory** %MEMORY
  %loadMem_4ab089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12312 = getelementptr inbounds %struct.GPR, %struct.GPR* %12311, i32 0, i32 33
  %12313 = getelementptr inbounds %struct.Reg, %struct.Reg* %12312, i32 0, i32 0
  %PC.i2751 = bitcast %union.anon* %12313 to i64*
  %12314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12315 = getelementptr inbounds %struct.GPR, %struct.GPR* %12314, i32 0, i32 1
  %12316 = getelementptr inbounds %struct.Reg, %struct.Reg* %12315, i32 0, i32 0
  %EAX.i2752 = bitcast %union.anon* %12316 to i32*
  %12317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12318 = getelementptr inbounds %struct.GPR, %struct.GPR* %12317, i32 0, i32 5
  %12319 = getelementptr inbounds %struct.Reg, %struct.Reg* %12318, i32 0, i32 0
  %RCX.i2753 = bitcast %union.anon* %12319 to i64*
  %12320 = load i64, i64* %RCX.i2753
  %12321 = add i64 %12320, 28
  %12322 = load i32, i32* %EAX.i2752
  %12323 = zext i32 %12322 to i64
  %12324 = load i64, i64* %PC.i2751
  %12325 = add i64 %12324, 3
  store i64 %12325, i64* %PC.i2751
  %12326 = inttoptr i64 %12321 to i32*
  store i32 %12322, i32* %12326
  store %struct.Memory* %loadMem_4ab089, %struct.Memory** %MEMORY
  %loadMem_4ab08c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12328 = getelementptr inbounds %struct.GPR, %struct.GPR* %12327, i32 0, i32 33
  %12329 = getelementptr inbounds %struct.Reg, %struct.Reg* %12328, i32 0, i32 0
  %PC.i2748 = bitcast %union.anon* %12329 to i64*
  %12330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12331 = getelementptr inbounds %struct.GPR, %struct.GPR* %12330, i32 0, i32 1
  %12332 = getelementptr inbounds %struct.Reg, %struct.Reg* %12331, i32 0, i32 0
  %RAX.i2749 = bitcast %union.anon* %12332 to i64*
  %12333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12334 = getelementptr inbounds %struct.GPR, %struct.GPR* %12333, i32 0, i32 15
  %12335 = getelementptr inbounds %struct.Reg, %struct.Reg* %12334, i32 0, i32 0
  %RBP.i2750 = bitcast %union.anon* %12335 to i64*
  %12336 = load i64, i64* %RBP.i2750
  %12337 = sub i64 %12336, 24
  %12338 = load i64, i64* %PC.i2748
  %12339 = add i64 %12338, 3
  store i64 %12339, i64* %PC.i2748
  %12340 = inttoptr i64 %12337 to i32*
  %12341 = load i32, i32* %12340
  %12342 = zext i32 %12341 to i64
  store i64 %12342, i64* %RAX.i2749, align 8
  store %struct.Memory* %loadMem_4ab08c, %struct.Memory** %MEMORY
  %loadMem_4ab08f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12344 = getelementptr inbounds %struct.GPR, %struct.GPR* %12343, i32 0, i32 33
  %12345 = getelementptr inbounds %struct.Reg, %struct.Reg* %12344, i32 0, i32 0
  %PC.i2746 = bitcast %union.anon* %12345 to i64*
  %12346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12347 = getelementptr inbounds %struct.GPR, %struct.GPR* %12346, i32 0, i32 1
  %12348 = getelementptr inbounds %struct.Reg, %struct.Reg* %12347, i32 0, i32 0
  %RAX.i2747 = bitcast %union.anon* %12348 to i64*
  %12349 = load i64, i64* %RAX.i2747
  %12350 = load i64, i64* %PC.i2746
  %12351 = add i64 %12350, 3
  store i64 %12351, i64* %PC.i2746
  %12352 = trunc i64 %12349 to i32
  %12353 = add i32 1, %12352
  %12354 = zext i32 %12353 to i64
  store i64 %12354, i64* %RAX.i2747, align 8
  %12355 = icmp ult i32 %12353, %12352
  %12356 = icmp ult i32 %12353, 1
  %12357 = or i1 %12355, %12356
  %12358 = zext i1 %12357 to i8
  %12359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12358, i8* %12359, align 1
  %12360 = and i32 %12353, 255
  %12361 = call i32 @llvm.ctpop.i32(i32 %12360)
  %12362 = trunc i32 %12361 to i8
  %12363 = and i8 %12362, 1
  %12364 = xor i8 %12363, 1
  %12365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12364, i8* %12365, align 1
  %12366 = xor i64 1, %12349
  %12367 = trunc i64 %12366 to i32
  %12368 = xor i32 %12367, %12353
  %12369 = lshr i32 %12368, 4
  %12370 = trunc i32 %12369 to i8
  %12371 = and i8 %12370, 1
  %12372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12371, i8* %12372, align 1
  %12373 = icmp eq i32 %12353, 0
  %12374 = zext i1 %12373 to i8
  %12375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12374, i8* %12375, align 1
  %12376 = lshr i32 %12353, 31
  %12377 = trunc i32 %12376 to i8
  %12378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12377, i8* %12378, align 1
  %12379 = lshr i32 %12352, 31
  %12380 = xor i32 %12376, %12379
  %12381 = add i32 %12380, %12376
  %12382 = icmp eq i32 %12381, 2
  %12383 = zext i1 %12382 to i8
  %12384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12383, i8* %12384, align 1
  store %struct.Memory* %loadMem_4ab08f, %struct.Memory** %MEMORY
  %loadMem_4ab092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12386 = getelementptr inbounds %struct.GPR, %struct.GPR* %12385, i32 0, i32 33
  %12387 = getelementptr inbounds %struct.Reg, %struct.Reg* %12386, i32 0, i32 0
  %PC.i2743 = bitcast %union.anon* %12387 to i64*
  %12388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12389 = getelementptr inbounds %struct.GPR, %struct.GPR* %12388, i32 0, i32 1
  %12390 = getelementptr inbounds %struct.Reg, %struct.Reg* %12389, i32 0, i32 0
  %EAX.i2744 = bitcast %union.anon* %12390 to i32*
  %12391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12392 = getelementptr inbounds %struct.GPR, %struct.GPR* %12391, i32 0, i32 15
  %12393 = getelementptr inbounds %struct.Reg, %struct.Reg* %12392, i32 0, i32 0
  %RBP.i2745 = bitcast %union.anon* %12393 to i64*
  %12394 = load i64, i64* %RBP.i2745
  %12395 = sub i64 %12394, 24
  %12396 = load i32, i32* %EAX.i2744
  %12397 = zext i32 %12396 to i64
  %12398 = load i64, i64* %PC.i2743
  %12399 = add i64 %12398, 3
  store i64 %12399, i64* %PC.i2743
  %12400 = inttoptr i64 %12395 to i32*
  store i32 %12396, i32* %12400
  store %struct.Memory* %loadMem_4ab092, %struct.Memory** %MEMORY
  %loadMem_4ab095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12402 = getelementptr inbounds %struct.GPR, %struct.GPR* %12401, i32 0, i32 33
  %12403 = getelementptr inbounds %struct.Reg, %struct.Reg* %12402, i32 0, i32 0
  %PC.i2742 = bitcast %union.anon* %12403 to i64*
  %12404 = load i64, i64* %PC.i2742
  %12405 = add i64 %12404, -985
  %12406 = load i64, i64* %PC.i2742
  %12407 = add i64 %12406, 5
  store i64 %12407, i64* %PC.i2742
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12405, i64* %12408, align 8
  store %struct.Memory* %loadMem_4ab095, %struct.Memory** %MEMORY
  br label %block_.L_4aacbc

block_.L_4ab09a:                                  ; preds = %block_4aacf0
  %loadMem_4ab09a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12410 = getelementptr inbounds %struct.GPR, %struct.GPR* %12409, i32 0, i32 33
  %12411 = getelementptr inbounds %struct.Reg, %struct.Reg* %12410, i32 0, i32 0
  %PC.i2740 = bitcast %union.anon* %12411 to i64*
  %12412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12413 = getelementptr inbounds %struct.GPR, %struct.GPR* %12412, i32 0, i32 15
  %12414 = getelementptr inbounds %struct.Reg, %struct.Reg* %12413, i32 0, i32 0
  %RBP.i2741 = bitcast %union.anon* %12414 to i64*
  %12415 = load i64, i64* %RBP.i2741
  %12416 = sub i64 %12415, 56
  %12417 = load i64, i64* %PC.i2740
  %12418 = add i64 %12417, 7
  store i64 %12418, i64* %PC.i2740
  %12419 = inttoptr i64 %12416 to i32*
  store i32 0, i32* %12419
  store %struct.Memory* %loadMem_4ab09a, %struct.Memory** %MEMORY
  %loadMem_4ab0a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12421 = getelementptr inbounds %struct.GPR, %struct.GPR* %12420, i32 0, i32 33
  %12422 = getelementptr inbounds %struct.Reg, %struct.Reg* %12421, i32 0, i32 0
  %PC.i2738 = bitcast %union.anon* %12422 to i64*
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12424 = getelementptr inbounds %struct.GPR, %struct.GPR* %12423, i32 0, i32 15
  %12425 = getelementptr inbounds %struct.Reg, %struct.Reg* %12424, i32 0, i32 0
  %RBP.i2739 = bitcast %union.anon* %12425 to i64*
  %12426 = load i64, i64* %RBP.i2739
  %12427 = sub i64 %12426, 52
  %12428 = load i64, i64* %PC.i2738
  %12429 = add i64 %12428, 7
  store i64 %12429, i64* %PC.i2738
  %12430 = inttoptr i64 %12427 to i32*
  store i32 -1, i32* %12430
  store %struct.Memory* %loadMem_4ab0a1, %struct.Memory** %MEMORY
  %loadMem_4ab0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12432 = getelementptr inbounds %struct.GPR, %struct.GPR* %12431, i32 0, i32 33
  %12433 = getelementptr inbounds %struct.Reg, %struct.Reg* %12432, i32 0, i32 0
  %PC.i2736 = bitcast %union.anon* %12433 to i64*
  %12434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12435 = getelementptr inbounds %struct.GPR, %struct.GPR* %12434, i32 0, i32 15
  %12436 = getelementptr inbounds %struct.Reg, %struct.Reg* %12435, i32 0, i32 0
  %RBP.i2737 = bitcast %union.anon* %12436 to i64*
  %12437 = load i64, i64* %RBP.i2737
  %12438 = sub i64 %12437, 48
  %12439 = load i64, i64* %PC.i2736
  %12440 = add i64 %12439, 7
  store i64 %12440, i64* %PC.i2736
  %12441 = inttoptr i64 %12438 to i32*
  store i32 0, i32* %12441
  store %struct.Memory* %loadMem_4ab0a8, %struct.Memory** %MEMORY
  %loadMem_4ab0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %12442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12443 = getelementptr inbounds %struct.GPR, %struct.GPR* %12442, i32 0, i32 33
  %12444 = getelementptr inbounds %struct.Reg, %struct.Reg* %12443, i32 0, i32 0
  %PC.i2734 = bitcast %union.anon* %12444 to i64*
  %12445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12446 = getelementptr inbounds %struct.GPR, %struct.GPR* %12445, i32 0, i32 15
  %12447 = getelementptr inbounds %struct.Reg, %struct.Reg* %12446, i32 0, i32 0
  %RBP.i2735 = bitcast %union.anon* %12447 to i64*
  %12448 = load i64, i64* %RBP.i2735
  %12449 = sub i64 %12448, 388
  %12450 = load i64, i64* %PC.i2734
  %12451 = add i64 %12450, 10
  store i64 %12451, i64* %PC.i2734
  %12452 = inttoptr i64 %12449 to i32*
  store i32 -1, i32* %12452
  store %struct.Memory* %loadMem_4ab0af, %struct.Memory** %MEMORY
  %loadMem_4ab0b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12454 = getelementptr inbounds %struct.GPR, %struct.GPR* %12453, i32 0, i32 33
  %12455 = getelementptr inbounds %struct.Reg, %struct.Reg* %12454, i32 0, i32 0
  %PC.i2732 = bitcast %union.anon* %12455 to i64*
  %12456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12457 = getelementptr inbounds %struct.GPR, %struct.GPR* %12456, i32 0, i32 15
  %12458 = getelementptr inbounds %struct.Reg, %struct.Reg* %12457, i32 0, i32 0
  %RBP.i2733 = bitcast %union.anon* %12458 to i64*
  %12459 = load i64, i64* %RBP.i2733
  %12460 = sub i64 %12459, 392
  %12461 = load i64, i64* %PC.i2732
  %12462 = add i64 %12461, 10
  store i64 %12462, i64* %PC.i2732
  %12463 = inttoptr i64 %12460 to i32*
  store i32 -1, i32* %12463
  store %struct.Memory* %loadMem_4ab0b9, %struct.Memory** %MEMORY
  %loadMem_4ab0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12465 = getelementptr inbounds %struct.GPR, %struct.GPR* %12464, i32 0, i32 33
  %12466 = getelementptr inbounds %struct.Reg, %struct.Reg* %12465, i32 0, i32 0
  %PC.i2730 = bitcast %union.anon* %12466 to i64*
  %12467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12468 = getelementptr inbounds %struct.GPR, %struct.GPR* %12467, i32 0, i32 15
  %12469 = getelementptr inbounds %struct.Reg, %struct.Reg* %12468, i32 0, i32 0
  %RBP.i2731 = bitcast %union.anon* %12469 to i64*
  %12470 = load i64, i64* %RBP.i2731
  %12471 = sub i64 %12470, 396
  %12472 = load i64, i64* %PC.i2730
  %12473 = add i64 %12472, 10
  store i64 %12473, i64* %PC.i2730
  %12474 = inttoptr i64 %12471 to i32*
  store i32 -1, i32* %12474
  store %struct.Memory* %loadMem_4ab0c3, %struct.Memory** %MEMORY
  %loadMem_4ab0cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12476 = getelementptr inbounds %struct.GPR, %struct.GPR* %12475, i32 0, i32 33
  %12477 = getelementptr inbounds %struct.Reg, %struct.Reg* %12476, i32 0, i32 0
  %PC.i2728 = bitcast %union.anon* %12477 to i64*
  %12478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12479 = getelementptr inbounds %struct.GPR, %struct.GPR* %12478, i32 0, i32 15
  %12480 = getelementptr inbounds %struct.Reg, %struct.Reg* %12479, i32 0, i32 0
  %RBP.i2729 = bitcast %union.anon* %12480 to i64*
  %12481 = load i64, i64* %RBP.i2729
  %12482 = sub i64 %12481, 400
  %12483 = load i64, i64* %PC.i2728
  %12484 = add i64 %12483, 10
  store i64 %12484, i64* %PC.i2728
  %12485 = inttoptr i64 %12482 to i32*
  store i32 -1, i32* %12485
  store %struct.Memory* %loadMem_4ab0cd, %struct.Memory** %MEMORY
  %loadMem_4ab0d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12487 = getelementptr inbounds %struct.GPR, %struct.GPR* %12486, i32 0, i32 33
  %12488 = getelementptr inbounds %struct.Reg, %struct.Reg* %12487, i32 0, i32 0
  %PC.i2726 = bitcast %union.anon* %12488 to i64*
  %12489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12490 = getelementptr inbounds %struct.GPR, %struct.GPR* %12489, i32 0, i32 15
  %12491 = getelementptr inbounds %struct.Reg, %struct.Reg* %12490, i32 0, i32 0
  %RBP.i2727 = bitcast %union.anon* %12491 to i64*
  %12492 = load i64, i64* %RBP.i2727
  %12493 = sub i64 %12492, 372
  %12494 = load i64, i64* %PC.i2726
  %12495 = add i64 %12494, 10
  store i64 %12495, i64* %PC.i2726
  %12496 = inttoptr i64 %12493 to i32*
  store i32 0, i32* %12496
  store %struct.Memory* %loadMem_4ab0d7, %struct.Memory** %MEMORY
  %loadMem_4ab0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12498 = getelementptr inbounds %struct.GPR, %struct.GPR* %12497, i32 0, i32 33
  %12499 = getelementptr inbounds %struct.Reg, %struct.Reg* %12498, i32 0, i32 0
  %PC.i2724 = bitcast %union.anon* %12499 to i64*
  %12500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12501 = getelementptr inbounds %struct.GPR, %struct.GPR* %12500, i32 0, i32 15
  %12502 = getelementptr inbounds %struct.Reg, %struct.Reg* %12501, i32 0, i32 0
  %RBP.i2725 = bitcast %union.anon* %12502 to i64*
  %12503 = load i64, i64* %RBP.i2725
  %12504 = sub i64 %12503, 376
  %12505 = load i64, i64* %PC.i2724
  %12506 = add i64 %12505, 10
  store i64 %12506, i64* %PC.i2724
  %12507 = inttoptr i64 %12504 to i32*
  store i32 0, i32* %12507
  store %struct.Memory* %loadMem_4ab0e1, %struct.Memory** %MEMORY
  %loadMem_4ab0eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12509 = getelementptr inbounds %struct.GPR, %struct.GPR* %12508, i32 0, i32 33
  %12510 = getelementptr inbounds %struct.Reg, %struct.Reg* %12509, i32 0, i32 0
  %PC.i2722 = bitcast %union.anon* %12510 to i64*
  %12511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12512 = getelementptr inbounds %struct.GPR, %struct.GPR* %12511, i32 0, i32 15
  %12513 = getelementptr inbounds %struct.Reg, %struct.Reg* %12512, i32 0, i32 0
  %RBP.i2723 = bitcast %union.anon* %12513 to i64*
  %12514 = load i64, i64* %RBP.i2723
  %12515 = sub i64 %12514, 380
  %12516 = load i64, i64* %PC.i2722
  %12517 = add i64 %12516, 10
  store i64 %12517, i64* %PC.i2722
  %12518 = inttoptr i64 %12515 to i32*
  store i32 0, i32* %12518
  store %struct.Memory* %loadMem_4ab0eb, %struct.Memory** %MEMORY
  %loadMem_4ab0f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12520 = getelementptr inbounds %struct.GPR, %struct.GPR* %12519, i32 0, i32 33
  %12521 = getelementptr inbounds %struct.Reg, %struct.Reg* %12520, i32 0, i32 0
  %PC.i2720 = bitcast %union.anon* %12521 to i64*
  %12522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12523 = getelementptr inbounds %struct.GPR, %struct.GPR* %12522, i32 0, i32 15
  %12524 = getelementptr inbounds %struct.Reg, %struct.Reg* %12523, i32 0, i32 0
  %RBP.i2721 = bitcast %union.anon* %12524 to i64*
  %12525 = load i64, i64* %RBP.i2721
  %12526 = sub i64 %12525, 384
  %12527 = load i64, i64* %PC.i2720
  %12528 = add i64 %12527, 10
  store i64 %12528, i64* %PC.i2720
  %12529 = inttoptr i64 %12526 to i32*
  store i32 0, i32* %12529
  store %struct.Memory* %loadMem_4ab0f5, %struct.Memory** %MEMORY
  %loadMem_4ab0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %12530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12531 = getelementptr inbounds %struct.GPR, %struct.GPR* %12530, i32 0, i32 33
  %12532 = getelementptr inbounds %struct.Reg, %struct.Reg* %12531, i32 0, i32 0
  %PC.i2718 = bitcast %union.anon* %12532 to i64*
  %12533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12534 = getelementptr inbounds %struct.GPR, %struct.GPR* %12533, i32 0, i32 15
  %12535 = getelementptr inbounds %struct.Reg, %struct.Reg* %12534, i32 0, i32 0
  %RBP.i2719 = bitcast %union.anon* %12535 to i64*
  %12536 = load i64, i64* %RBP.i2719
  %12537 = sub i64 %12536, 36
  %12538 = load i64, i64* %PC.i2718
  %12539 = add i64 %12538, 7
  store i64 %12539, i64* %PC.i2718
  %12540 = inttoptr i64 %12537 to i32*
  store i32 0, i32* %12540
  store %struct.Memory* %loadMem_4ab0ff, %struct.Memory** %MEMORY
  br label %block_.L_4ab106

block_.L_4ab106:                                  ; preds = %block_.L_4ab6d2, %block_.L_4ab09a
  %loadMem_4ab106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12542 = getelementptr inbounds %struct.GPR, %struct.GPR* %12541, i32 0, i32 33
  %12543 = getelementptr inbounds %struct.Reg, %struct.Reg* %12542, i32 0, i32 0
  %PC.i2716 = bitcast %union.anon* %12543 to i64*
  %12544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12545 = getelementptr inbounds %struct.GPR, %struct.GPR* %12544, i32 0, i32 15
  %12546 = getelementptr inbounds %struct.Reg, %struct.Reg* %12545, i32 0, i32 0
  %RBP.i2717 = bitcast %union.anon* %12546 to i64*
  %12547 = load i64, i64* %RBP.i2717
  %12548 = sub i64 %12547, 36
  %12549 = load i64, i64* %PC.i2716
  %12550 = add i64 %12549, 4
  store i64 %12550, i64* %PC.i2716
  %12551 = inttoptr i64 %12548 to i32*
  %12552 = load i32, i32* %12551
  %12553 = sub i32 %12552, 64
  %12554 = icmp ult i32 %12552, 64
  %12555 = zext i1 %12554 to i8
  %12556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12555, i8* %12556, align 1
  %12557 = and i32 %12553, 255
  %12558 = call i32 @llvm.ctpop.i32(i32 %12557)
  %12559 = trunc i32 %12558 to i8
  %12560 = and i8 %12559, 1
  %12561 = xor i8 %12560, 1
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12561, i8* %12562, align 1
  %12563 = xor i32 %12552, 64
  %12564 = xor i32 %12563, %12553
  %12565 = lshr i32 %12564, 4
  %12566 = trunc i32 %12565 to i8
  %12567 = and i8 %12566, 1
  %12568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12567, i8* %12568, align 1
  %12569 = icmp eq i32 %12553, 0
  %12570 = zext i1 %12569 to i8
  %12571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12570, i8* %12571, align 1
  %12572 = lshr i32 %12553, 31
  %12573 = trunc i32 %12572 to i8
  %12574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12573, i8* %12574, align 1
  %12575 = lshr i32 %12552, 31
  %12576 = xor i32 %12572, %12575
  %12577 = add i32 %12576, %12575
  %12578 = icmp eq i32 %12577, 2
  %12579 = zext i1 %12578 to i8
  %12580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12579, i8* %12580, align 1
  store %struct.Memory* %loadMem_4ab106, %struct.Memory** %MEMORY
  %loadMem_4ab10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12582 = getelementptr inbounds %struct.GPR, %struct.GPR* %12581, i32 0, i32 33
  %12583 = getelementptr inbounds %struct.Reg, %struct.Reg* %12582, i32 0, i32 0
  %PC.i2715 = bitcast %union.anon* %12583 to i64*
  %12584 = load i64, i64* %PC.i2715
  %12585 = add i64 %12584, 1494
  %12586 = load i64, i64* %PC.i2715
  %12587 = add i64 %12586, 6
  %12588 = load i64, i64* %PC.i2715
  %12589 = add i64 %12588, 6
  store i64 %12589, i64* %PC.i2715
  %12590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12591 = load i8, i8* %12590, align 1
  %12592 = icmp ne i8 %12591, 0
  %12593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12594 = load i8, i8* %12593, align 1
  %12595 = icmp ne i8 %12594, 0
  %12596 = xor i1 %12592, %12595
  %12597 = xor i1 %12596, true
  %12598 = zext i1 %12597 to i8
  store i8 %12598, i8* %BRANCH_TAKEN, align 1
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12600 = select i1 %12596, i64 %12587, i64 %12585
  store i64 %12600, i64* %12599, align 8
  store %struct.Memory* %loadMem_4ab10a, %struct.Memory** %MEMORY
  %loadBr_4ab10a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab10a = icmp eq i8 %loadBr_4ab10a, 1
  br i1 %cmpBr_4ab10a, label %block_.L_4ab6e0, label %block_4ab110

block_4ab110:                                     ; preds = %block_.L_4ab106
  %loadMem_4ab110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12602 = getelementptr inbounds %struct.GPR, %struct.GPR* %12601, i32 0, i32 33
  %12603 = getelementptr inbounds %struct.Reg, %struct.Reg* %12602, i32 0, i32 0
  %PC.i2713 = bitcast %union.anon* %12603 to i64*
  %12604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12605 = getelementptr inbounds %struct.GPR, %struct.GPR* %12604, i32 0, i32 1
  %12606 = getelementptr inbounds %struct.Reg, %struct.Reg* %12605, i32 0, i32 0
  %RAX.i2714 = bitcast %union.anon* %12606 to i64*
  %12607 = load i64, i64* %PC.i2713
  %12608 = add i64 %12607, 8
  store i64 %12608, i64* %PC.i2713
  %12609 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12609, i64* %RAX.i2714, align 8
  store %struct.Memory* %loadMem_4ab110, %struct.Memory** %MEMORY
  %loadMem_4ab118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12611 = getelementptr inbounds %struct.GPR, %struct.GPR* %12610, i32 0, i32 33
  %12612 = getelementptr inbounds %struct.Reg, %struct.Reg* %12611, i32 0, i32 0
  %PC.i2711 = bitcast %union.anon* %12612 to i64*
  %12613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12614 = getelementptr inbounds %struct.GPR, %struct.GPR* %12613, i32 0, i32 1
  %12615 = getelementptr inbounds %struct.Reg, %struct.Reg* %12614, i32 0, i32 0
  %RAX.i2712 = bitcast %union.anon* %12615 to i64*
  %12616 = load i64, i64* %RAX.i2712
  %12617 = add i64 %12616, 72444
  %12618 = load i64, i64* %PC.i2711
  %12619 = add i64 %12618, 7
  store i64 %12619, i64* %PC.i2711
  %12620 = inttoptr i64 %12617 to i32*
  %12621 = load i32, i32* %12620
  %12622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12622, align 1
  %12623 = and i32 %12621, 255
  %12624 = call i32 @llvm.ctpop.i32(i32 %12623)
  %12625 = trunc i32 %12624 to i8
  %12626 = and i8 %12625, 1
  %12627 = xor i8 %12626, 1
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12627, i8* %12628, align 1
  %12629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12629, align 1
  %12630 = icmp eq i32 %12621, 0
  %12631 = zext i1 %12630 to i8
  %12632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12631, i8* %12632, align 1
  %12633 = lshr i32 %12621, 31
  %12634 = trunc i32 %12633 to i8
  %12635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12634, i8* %12635, align 1
  %12636 = lshr i32 %12621, 31
  %12637 = xor i32 %12633, %12636
  %12638 = add i32 %12637, %12636
  %12639 = icmp eq i32 %12638, 2
  %12640 = zext i1 %12639 to i8
  %12641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12640, i8* %12641, align 1
  store %struct.Memory* %loadMem_4ab118, %struct.Memory** %MEMORY
  %loadMem_4ab11f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12643 = getelementptr inbounds %struct.GPR, %struct.GPR* %12642, i32 0, i32 33
  %12644 = getelementptr inbounds %struct.Reg, %struct.Reg* %12643, i32 0, i32 0
  %PC.i2710 = bitcast %union.anon* %12644 to i64*
  %12645 = load i64, i64* %PC.i2710
  %12646 = add i64 %12645, 47
  %12647 = load i64, i64* %PC.i2710
  %12648 = add i64 %12647, 6
  %12649 = load i64, i64* %PC.i2710
  %12650 = add i64 %12649, 6
  store i64 %12650, i64* %PC.i2710
  %12651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12652 = load i8, i8* %12651, align 1
  %12653 = icmp eq i8 %12652, 0
  %12654 = zext i1 %12653 to i8
  store i8 %12654, i8* %BRANCH_TAKEN, align 1
  %12655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12656 = select i1 %12653, i64 %12646, i64 %12648
  store i64 %12656, i64* %12655, align 8
  store %struct.Memory* %loadMem_4ab11f, %struct.Memory** %MEMORY
  %loadBr_4ab11f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab11f = icmp eq i8 %loadBr_4ab11f, 1
  br i1 %cmpBr_4ab11f, label %block_.L_4ab14e, label %block_4ab125

block_4ab125:                                     ; preds = %block_4ab110
  %loadMem_4ab125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12658 = getelementptr inbounds %struct.GPR, %struct.GPR* %12657, i32 0, i32 33
  %12659 = getelementptr inbounds %struct.Reg, %struct.Reg* %12658, i32 0, i32 0
  %PC.i2708 = bitcast %union.anon* %12659 to i64*
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12661 = getelementptr inbounds %struct.GPR, %struct.GPR* %12660, i32 0, i32 1
  %12662 = getelementptr inbounds %struct.Reg, %struct.Reg* %12661, i32 0, i32 0
  %RAX.i2709 = bitcast %union.anon* %12662 to i64*
  %12663 = load i64, i64* %PC.i2708
  %12664 = add i64 %12663, 8
  store i64 %12664, i64* %PC.i2708
  %12665 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12665, i64* %RAX.i2709, align 8
  store %struct.Memory* %loadMem_4ab125, %struct.Memory** %MEMORY
  %loadMem_4ab12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12667 = getelementptr inbounds %struct.GPR, %struct.GPR* %12666, i32 0, i32 33
  %12668 = getelementptr inbounds %struct.Reg, %struct.Reg* %12667, i32 0, i32 0
  %PC.i2706 = bitcast %union.anon* %12668 to i64*
  %12669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12670 = getelementptr inbounds %struct.GPR, %struct.GPR* %12669, i32 0, i32 1
  %12671 = getelementptr inbounds %struct.Reg, %struct.Reg* %12670, i32 0, i32 0
  %RAX.i2707 = bitcast %union.anon* %12671 to i64*
  %12672 = load i64, i64* %RAX.i2707
  %12673 = add i64 %12672, 72400
  %12674 = load i64, i64* %PC.i2706
  %12675 = add i64 %12674, 7
  store i64 %12675, i64* %PC.i2706
  %12676 = inttoptr i64 %12673 to i32*
  %12677 = load i32, i32* %12676
  %12678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12678, align 1
  %12679 = and i32 %12677, 255
  %12680 = call i32 @llvm.ctpop.i32(i32 %12679)
  %12681 = trunc i32 %12680 to i8
  %12682 = and i8 %12681, 1
  %12683 = xor i8 %12682, 1
  %12684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12683, i8* %12684, align 1
  %12685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12685, align 1
  %12686 = icmp eq i32 %12677, 0
  %12687 = zext i1 %12686 to i8
  %12688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12687, i8* %12688, align 1
  %12689 = lshr i32 %12677, 31
  %12690 = trunc i32 %12689 to i8
  %12691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12690, i8* %12691, align 1
  %12692 = lshr i32 %12677, 31
  %12693 = xor i32 %12689, %12692
  %12694 = add i32 %12693, %12692
  %12695 = icmp eq i32 %12694, 2
  %12696 = zext i1 %12695 to i8
  %12697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12696, i8* %12697, align 1
  store %struct.Memory* %loadMem_4ab12d, %struct.Memory** %MEMORY
  %loadMem_4ab134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 33
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %PC.i2705 = bitcast %union.anon* %12700 to i64*
  %12701 = load i64, i64* %PC.i2705
  %12702 = add i64 %12701, 61
  %12703 = load i64, i64* %PC.i2705
  %12704 = add i64 %12703, 6
  %12705 = load i64, i64* %PC.i2705
  %12706 = add i64 %12705, 6
  store i64 %12706, i64* %PC.i2705
  %12707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12708 = load i8, i8* %12707, align 1
  store i8 %12708, i8* %BRANCH_TAKEN, align 1
  %12709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12710 = icmp ne i8 %12708, 0
  %12711 = select i1 %12710, i64 %12702, i64 %12704
  store i64 %12711, i64* %12709, align 8
  store %struct.Memory* %loadMem_4ab134, %struct.Memory** %MEMORY
  %loadBr_4ab134 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab134 = icmp eq i8 %loadBr_4ab134, 1
  br i1 %cmpBr_4ab134, label %block_.L_4ab171, label %block_4ab13a

block_4ab13a:                                     ; preds = %block_4ab125
  %loadMem_4ab13a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12713 = getelementptr inbounds %struct.GPR, %struct.GPR* %12712, i32 0, i32 33
  %12714 = getelementptr inbounds %struct.Reg, %struct.Reg* %12713, i32 0, i32 0
  %PC.i2702 = bitcast %union.anon* %12714 to i64*
  %12715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12716 = getelementptr inbounds %struct.GPR, %struct.GPR* %12715, i32 0, i32 1
  %12717 = getelementptr inbounds %struct.Reg, %struct.Reg* %12716, i32 0, i32 0
  %RAX.i2703 = bitcast %union.anon* %12717 to i64*
  %12718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12719 = getelementptr inbounds %struct.GPR, %struct.GPR* %12718, i32 0, i32 15
  %12720 = getelementptr inbounds %struct.Reg, %struct.Reg* %12719, i32 0, i32 0
  %RBP.i2704 = bitcast %union.anon* %12720 to i64*
  %12721 = load i64, i64* %RBP.i2704
  %12722 = sub i64 %12721, 408
  %12723 = load i64, i64* %PC.i2702
  %12724 = add i64 %12723, 7
  store i64 %12724, i64* %PC.i2702
  %12725 = inttoptr i64 %12722 to i64*
  %12726 = load i64, i64* %12725
  store i64 %12726, i64* %RAX.i2703, align 8
  store %struct.Memory* %loadMem_4ab13a, %struct.Memory** %MEMORY
  %loadMem_4ab141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12728 = getelementptr inbounds %struct.GPR, %struct.GPR* %12727, i32 0, i32 33
  %12729 = getelementptr inbounds %struct.Reg, %struct.Reg* %12728, i32 0, i32 0
  %PC.i2700 = bitcast %union.anon* %12729 to i64*
  %12730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12731 = getelementptr inbounds %struct.GPR, %struct.GPR* %12730, i32 0, i32 1
  %12732 = getelementptr inbounds %struct.Reg, %struct.Reg* %12731, i32 0, i32 0
  %RAX.i2701 = bitcast %union.anon* %12732 to i64*
  %12733 = load i64, i64* %RAX.i2701
  %12734 = add i64 %12733, 532
  %12735 = load i64, i64* %PC.i2700
  %12736 = add i64 %12735, 7
  store i64 %12736, i64* %PC.i2700
  %12737 = inttoptr i64 %12734 to i32*
  %12738 = load i32, i32* %12737
  %12739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12739, align 1
  %12740 = and i32 %12738, 255
  %12741 = call i32 @llvm.ctpop.i32(i32 %12740)
  %12742 = trunc i32 %12741 to i8
  %12743 = and i8 %12742, 1
  %12744 = xor i8 %12743, 1
  %12745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12744, i8* %12745, align 1
  %12746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12746, align 1
  %12747 = icmp eq i32 %12738, 0
  %12748 = zext i1 %12747 to i8
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12748, i8* %12749, align 1
  %12750 = lshr i32 %12738, 31
  %12751 = trunc i32 %12750 to i8
  %12752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12751, i8* %12752, align 1
  %12753 = lshr i32 %12738, 31
  %12754 = xor i32 %12750, %12753
  %12755 = add i32 %12754, %12753
  %12756 = icmp eq i32 %12755, 2
  %12757 = zext i1 %12756 to i8
  %12758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12757, i8* %12758, align 1
  store %struct.Memory* %loadMem_4ab141, %struct.Memory** %MEMORY
  %loadMem_4ab148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12760 = getelementptr inbounds %struct.GPR, %struct.GPR* %12759, i32 0, i32 33
  %12761 = getelementptr inbounds %struct.Reg, %struct.Reg* %12760, i32 0, i32 0
  %PC.i2699 = bitcast %union.anon* %12761 to i64*
  %12762 = load i64, i64* %PC.i2699
  %12763 = add i64 %12762, 41
  %12764 = load i64, i64* %PC.i2699
  %12765 = add i64 %12764, 6
  %12766 = load i64, i64* %PC.i2699
  %12767 = add i64 %12766, 6
  store i64 %12767, i64* %PC.i2699
  %12768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12769 = load i8, i8* %12768, align 1
  store i8 %12769, i8* %BRANCH_TAKEN, align 1
  %12770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12771 = icmp ne i8 %12769, 0
  %12772 = select i1 %12771, i64 %12763, i64 %12765
  store i64 %12772, i64* %12770, align 8
  store %struct.Memory* %loadMem_4ab148, %struct.Memory** %MEMORY
  %loadBr_4ab148 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab148 = icmp eq i8 %loadBr_4ab148, 1
  br i1 %cmpBr_4ab148, label %block_.L_4ab171, label %block_.L_4ab14e

block_.L_4ab14e:                                  ; preds = %block_4ab13a, %block_4ab110
  %loadMem_4ab14e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12774 = getelementptr inbounds %struct.GPR, %struct.GPR* %12773, i32 0, i32 33
  %12775 = getelementptr inbounds %struct.Reg, %struct.Reg* %12774, i32 0, i32 0
  %PC.i2696 = bitcast %union.anon* %12775 to i64*
  %12776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12777 = getelementptr inbounds %struct.GPR, %struct.GPR* %12776, i32 0, i32 1
  %12778 = getelementptr inbounds %struct.Reg, %struct.Reg* %12777, i32 0, i32 0
  %RAX.i2697 = bitcast %union.anon* %12778 to i64*
  %12779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12780 = getelementptr inbounds %struct.GPR, %struct.GPR* %12779, i32 0, i32 15
  %12781 = getelementptr inbounds %struct.Reg, %struct.Reg* %12780, i32 0, i32 0
  %RBP.i2698 = bitcast %union.anon* %12781 to i64*
  %12782 = load i64, i64* %RBP.i2698
  %12783 = sub i64 %12782, 36
  %12784 = load i64, i64* %PC.i2696
  %12785 = add i64 %12784, 4
  store i64 %12785, i64* %PC.i2696
  %12786 = inttoptr i64 %12783 to i32*
  %12787 = load i32, i32* %12786
  %12788 = sext i32 %12787 to i64
  store i64 %12788, i64* %RAX.i2697, align 8
  store %struct.Memory* %loadMem_4ab14e, %struct.Memory** %MEMORY
  %loadMem_4ab152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12790 = getelementptr inbounds %struct.GPR, %struct.GPR* %12789, i32 0, i32 33
  %12791 = getelementptr inbounds %struct.Reg, %struct.Reg* %12790, i32 0, i32 0
  %PC.i2693 = bitcast %union.anon* %12791 to i64*
  %12792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12793 = getelementptr inbounds %struct.GPR, %struct.GPR* %12792, i32 0, i32 1
  %12794 = getelementptr inbounds %struct.Reg, %struct.Reg* %12793, i32 0, i32 0
  %RAX.i2694 = bitcast %union.anon* %12794 to i64*
  %12795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12796 = getelementptr inbounds %struct.GPR, %struct.GPR* %12795, i32 0, i32 5
  %12797 = getelementptr inbounds %struct.Reg, %struct.Reg* %12796, i32 0, i32 0
  %RCX.i2695 = bitcast %union.anon* %12797 to i64*
  %12798 = load i64, i64* %RAX.i2694
  %12799 = mul i64 %12798, 2
  %12800 = add i64 %12799, 4957136
  %12801 = load i64, i64* %PC.i2693
  %12802 = add i64 %12801, 8
  store i64 %12802, i64* %PC.i2693
  %12803 = inttoptr i64 %12800 to i8*
  %12804 = load i8, i8* %12803
  %12805 = zext i8 %12804 to i64
  store i64 %12805, i64* %RCX.i2695, align 8
  store %struct.Memory* %loadMem_4ab152, %struct.Memory** %MEMORY
  %loadMem_4ab15a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12807 = getelementptr inbounds %struct.GPR, %struct.GPR* %12806, i32 0, i32 33
  %12808 = getelementptr inbounds %struct.Reg, %struct.Reg* %12807, i32 0, i32 0
  %PC.i2690 = bitcast %union.anon* %12808 to i64*
  %12809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12810 = getelementptr inbounds %struct.GPR, %struct.GPR* %12809, i32 0, i32 5
  %12811 = getelementptr inbounds %struct.Reg, %struct.Reg* %12810, i32 0, i32 0
  %ECX.i2691 = bitcast %union.anon* %12811 to i32*
  %12812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12813 = getelementptr inbounds %struct.GPR, %struct.GPR* %12812, i32 0, i32 15
  %12814 = getelementptr inbounds %struct.Reg, %struct.Reg* %12813, i32 0, i32 0
  %RBP.i2692 = bitcast %union.anon* %12814 to i64*
  %12815 = load i64, i64* %RBP.i2692
  %12816 = sub i64 %12815, 24
  %12817 = load i32, i32* %ECX.i2691
  %12818 = zext i32 %12817 to i64
  %12819 = load i64, i64* %PC.i2690
  %12820 = add i64 %12819, 3
  store i64 %12820, i64* %PC.i2690
  %12821 = inttoptr i64 %12816 to i32*
  store i32 %12817, i32* %12821
  store %struct.Memory* %loadMem_4ab15a, %struct.Memory** %MEMORY
  %loadMem_4ab15d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12823 = getelementptr inbounds %struct.GPR, %struct.GPR* %12822, i32 0, i32 33
  %12824 = getelementptr inbounds %struct.Reg, %struct.Reg* %12823, i32 0, i32 0
  %PC.i2687 = bitcast %union.anon* %12824 to i64*
  %12825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12826 = getelementptr inbounds %struct.GPR, %struct.GPR* %12825, i32 0, i32 1
  %12827 = getelementptr inbounds %struct.Reg, %struct.Reg* %12826, i32 0, i32 0
  %RAX.i2688 = bitcast %union.anon* %12827 to i64*
  %12828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12829 = getelementptr inbounds %struct.GPR, %struct.GPR* %12828, i32 0, i32 15
  %12830 = getelementptr inbounds %struct.Reg, %struct.Reg* %12829, i32 0, i32 0
  %RBP.i2689 = bitcast %union.anon* %12830 to i64*
  %12831 = load i64, i64* %RBP.i2689
  %12832 = sub i64 %12831, 36
  %12833 = load i64, i64* %PC.i2687
  %12834 = add i64 %12833, 4
  store i64 %12834, i64* %PC.i2687
  %12835 = inttoptr i64 %12832 to i32*
  %12836 = load i32, i32* %12835
  %12837 = sext i32 %12836 to i64
  store i64 %12837, i64* %RAX.i2688, align 8
  store %struct.Memory* %loadMem_4ab15d, %struct.Memory** %MEMORY
  %loadMem_4ab161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12839 = getelementptr inbounds %struct.GPR, %struct.GPR* %12838, i32 0, i32 33
  %12840 = getelementptr inbounds %struct.Reg, %struct.Reg* %12839, i32 0, i32 0
  %PC.i2684 = bitcast %union.anon* %12840 to i64*
  %12841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12842 = getelementptr inbounds %struct.GPR, %struct.GPR* %12841, i32 0, i32 1
  %12843 = getelementptr inbounds %struct.Reg, %struct.Reg* %12842, i32 0, i32 0
  %RAX.i2685 = bitcast %union.anon* %12843 to i64*
  %12844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12845 = getelementptr inbounds %struct.GPR, %struct.GPR* %12844, i32 0, i32 5
  %12846 = getelementptr inbounds %struct.Reg, %struct.Reg* %12845, i32 0, i32 0
  %RCX.i2686 = bitcast %union.anon* %12846 to i64*
  %12847 = load i64, i64* %RAX.i2685
  %12848 = mul i64 %12847, 2
  %12849 = add i64 %12848, 4957137
  %12850 = load i64, i64* %PC.i2684
  %12851 = add i64 %12850, 8
  store i64 %12851, i64* %PC.i2684
  %12852 = inttoptr i64 %12849 to i8*
  %12853 = load i8, i8* %12852
  %12854 = zext i8 %12853 to i64
  store i64 %12854, i64* %RCX.i2686, align 8
  store %struct.Memory* %loadMem_4ab161, %struct.Memory** %MEMORY
  %loadMem_4ab169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12856 = getelementptr inbounds %struct.GPR, %struct.GPR* %12855, i32 0, i32 33
  %12857 = getelementptr inbounds %struct.Reg, %struct.Reg* %12856, i32 0, i32 0
  %PC.i2681 = bitcast %union.anon* %12857 to i64*
  %12858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12859 = getelementptr inbounds %struct.GPR, %struct.GPR* %12858, i32 0, i32 5
  %12860 = getelementptr inbounds %struct.Reg, %struct.Reg* %12859, i32 0, i32 0
  %ECX.i2682 = bitcast %union.anon* %12860 to i32*
  %12861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12862 = getelementptr inbounds %struct.GPR, %struct.GPR* %12861, i32 0, i32 15
  %12863 = getelementptr inbounds %struct.Reg, %struct.Reg* %12862, i32 0, i32 0
  %RBP.i2683 = bitcast %union.anon* %12863 to i64*
  %12864 = load i64, i64* %RBP.i2683
  %12865 = sub i64 %12864, 28
  %12866 = load i32, i32* %ECX.i2682
  %12867 = zext i32 %12866 to i64
  %12868 = load i64, i64* %PC.i2681
  %12869 = add i64 %12868, 3
  store i64 %12869, i64* %PC.i2681
  %12870 = inttoptr i64 %12865 to i32*
  store i32 %12866, i32* %12870
  store %struct.Memory* %loadMem_4ab169, %struct.Memory** %MEMORY
  %loadMem_4ab16c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12872 = getelementptr inbounds %struct.GPR, %struct.GPR* %12871, i32 0, i32 33
  %12873 = getelementptr inbounds %struct.Reg, %struct.Reg* %12872, i32 0, i32 0
  %PC.i2680 = bitcast %union.anon* %12873 to i64*
  %12874 = load i64, i64* %PC.i2680
  %12875 = add i64 %12874, 35
  %12876 = load i64, i64* %PC.i2680
  %12877 = add i64 %12876, 5
  store i64 %12877, i64* %PC.i2680
  %12878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12875, i64* %12878, align 8
  store %struct.Memory* %loadMem_4ab16c, %struct.Memory** %MEMORY
  br label %block_.L_4ab18f

block_.L_4ab171:                                  ; preds = %block_4ab13a, %block_4ab125
  %loadMem_4ab171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12880 = getelementptr inbounds %struct.GPR, %struct.GPR* %12879, i32 0, i32 33
  %12881 = getelementptr inbounds %struct.Reg, %struct.Reg* %12880, i32 0, i32 0
  %PC.i2677 = bitcast %union.anon* %12881 to i64*
  %12882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12883 = getelementptr inbounds %struct.GPR, %struct.GPR* %12882, i32 0, i32 1
  %12884 = getelementptr inbounds %struct.Reg, %struct.Reg* %12883, i32 0, i32 0
  %RAX.i2678 = bitcast %union.anon* %12884 to i64*
  %12885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12886 = getelementptr inbounds %struct.GPR, %struct.GPR* %12885, i32 0, i32 15
  %12887 = getelementptr inbounds %struct.Reg, %struct.Reg* %12886, i32 0, i32 0
  %RBP.i2679 = bitcast %union.anon* %12887 to i64*
  %12888 = load i64, i64* %RBP.i2679
  %12889 = sub i64 %12888, 36
  %12890 = load i64, i64* %PC.i2677
  %12891 = add i64 %12890, 4
  store i64 %12891, i64* %PC.i2677
  %12892 = inttoptr i64 %12889 to i32*
  %12893 = load i32, i32* %12892
  %12894 = sext i32 %12893 to i64
  store i64 %12894, i64* %RAX.i2678, align 8
  store %struct.Memory* %loadMem_4ab171, %struct.Memory** %MEMORY
  %loadMem_4ab175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12896 = getelementptr inbounds %struct.GPR, %struct.GPR* %12895, i32 0, i32 33
  %12897 = getelementptr inbounds %struct.Reg, %struct.Reg* %12896, i32 0, i32 0
  %PC.i2674 = bitcast %union.anon* %12897 to i64*
  %12898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12899 = getelementptr inbounds %struct.GPR, %struct.GPR* %12898, i32 0, i32 1
  %12900 = getelementptr inbounds %struct.Reg, %struct.Reg* %12899, i32 0, i32 0
  %RAX.i2675 = bitcast %union.anon* %12900 to i64*
  %12901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12902 = getelementptr inbounds %struct.GPR, %struct.GPR* %12901, i32 0, i32 5
  %12903 = getelementptr inbounds %struct.Reg, %struct.Reg* %12902, i32 0, i32 0
  %RCX.i2676 = bitcast %union.anon* %12903 to i64*
  %12904 = load i64, i64* %RAX.i2675
  %12905 = mul i64 %12904, 2
  %12906 = add i64 %12905, 4957008
  %12907 = load i64, i64* %PC.i2674
  %12908 = add i64 %12907, 8
  store i64 %12908, i64* %PC.i2674
  %12909 = inttoptr i64 %12906 to i8*
  %12910 = load i8, i8* %12909
  %12911 = zext i8 %12910 to i64
  store i64 %12911, i64* %RCX.i2676, align 8
  store %struct.Memory* %loadMem_4ab175, %struct.Memory** %MEMORY
  %loadMem_4ab17d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12913 = getelementptr inbounds %struct.GPR, %struct.GPR* %12912, i32 0, i32 33
  %12914 = getelementptr inbounds %struct.Reg, %struct.Reg* %12913, i32 0, i32 0
  %PC.i2671 = bitcast %union.anon* %12914 to i64*
  %12915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12916 = getelementptr inbounds %struct.GPR, %struct.GPR* %12915, i32 0, i32 5
  %12917 = getelementptr inbounds %struct.Reg, %struct.Reg* %12916, i32 0, i32 0
  %ECX.i2672 = bitcast %union.anon* %12917 to i32*
  %12918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12919 = getelementptr inbounds %struct.GPR, %struct.GPR* %12918, i32 0, i32 15
  %12920 = getelementptr inbounds %struct.Reg, %struct.Reg* %12919, i32 0, i32 0
  %RBP.i2673 = bitcast %union.anon* %12920 to i64*
  %12921 = load i64, i64* %RBP.i2673
  %12922 = sub i64 %12921, 24
  %12923 = load i32, i32* %ECX.i2672
  %12924 = zext i32 %12923 to i64
  %12925 = load i64, i64* %PC.i2671
  %12926 = add i64 %12925, 3
  store i64 %12926, i64* %PC.i2671
  %12927 = inttoptr i64 %12922 to i32*
  store i32 %12923, i32* %12927
  store %struct.Memory* %loadMem_4ab17d, %struct.Memory** %MEMORY
  %loadMem_4ab180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12929 = getelementptr inbounds %struct.GPR, %struct.GPR* %12928, i32 0, i32 33
  %12930 = getelementptr inbounds %struct.Reg, %struct.Reg* %12929, i32 0, i32 0
  %PC.i2668 = bitcast %union.anon* %12930 to i64*
  %12931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12932 = getelementptr inbounds %struct.GPR, %struct.GPR* %12931, i32 0, i32 1
  %12933 = getelementptr inbounds %struct.Reg, %struct.Reg* %12932, i32 0, i32 0
  %RAX.i2669 = bitcast %union.anon* %12933 to i64*
  %12934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12935 = getelementptr inbounds %struct.GPR, %struct.GPR* %12934, i32 0, i32 15
  %12936 = getelementptr inbounds %struct.Reg, %struct.Reg* %12935, i32 0, i32 0
  %RBP.i2670 = bitcast %union.anon* %12936 to i64*
  %12937 = load i64, i64* %RBP.i2670
  %12938 = sub i64 %12937, 36
  %12939 = load i64, i64* %PC.i2668
  %12940 = add i64 %12939, 4
  store i64 %12940, i64* %PC.i2668
  %12941 = inttoptr i64 %12938 to i32*
  %12942 = load i32, i32* %12941
  %12943 = sext i32 %12942 to i64
  store i64 %12943, i64* %RAX.i2669, align 8
  store %struct.Memory* %loadMem_4ab180, %struct.Memory** %MEMORY
  %loadMem_4ab184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12945 = getelementptr inbounds %struct.GPR, %struct.GPR* %12944, i32 0, i32 33
  %12946 = getelementptr inbounds %struct.Reg, %struct.Reg* %12945, i32 0, i32 0
  %PC.i2665 = bitcast %union.anon* %12946 to i64*
  %12947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12948 = getelementptr inbounds %struct.GPR, %struct.GPR* %12947, i32 0, i32 1
  %12949 = getelementptr inbounds %struct.Reg, %struct.Reg* %12948, i32 0, i32 0
  %RAX.i2666 = bitcast %union.anon* %12949 to i64*
  %12950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12951 = getelementptr inbounds %struct.GPR, %struct.GPR* %12950, i32 0, i32 5
  %12952 = getelementptr inbounds %struct.Reg, %struct.Reg* %12951, i32 0, i32 0
  %RCX.i2667 = bitcast %union.anon* %12952 to i64*
  %12953 = load i64, i64* %RAX.i2666
  %12954 = mul i64 %12953, 2
  %12955 = add i64 %12954, 4957009
  %12956 = load i64, i64* %PC.i2665
  %12957 = add i64 %12956, 8
  store i64 %12957, i64* %PC.i2665
  %12958 = inttoptr i64 %12955 to i8*
  %12959 = load i8, i8* %12958
  %12960 = zext i8 %12959 to i64
  store i64 %12960, i64* %RCX.i2667, align 8
  store %struct.Memory* %loadMem_4ab184, %struct.Memory** %MEMORY
  %loadMem_4ab18c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12962 = getelementptr inbounds %struct.GPR, %struct.GPR* %12961, i32 0, i32 33
  %12963 = getelementptr inbounds %struct.Reg, %struct.Reg* %12962, i32 0, i32 0
  %PC.i2662 = bitcast %union.anon* %12963 to i64*
  %12964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12965 = getelementptr inbounds %struct.GPR, %struct.GPR* %12964, i32 0, i32 5
  %12966 = getelementptr inbounds %struct.Reg, %struct.Reg* %12965, i32 0, i32 0
  %ECX.i2663 = bitcast %union.anon* %12966 to i32*
  %12967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12968 = getelementptr inbounds %struct.GPR, %struct.GPR* %12967, i32 0, i32 15
  %12969 = getelementptr inbounds %struct.Reg, %struct.Reg* %12968, i32 0, i32 0
  %RBP.i2664 = bitcast %union.anon* %12969 to i64*
  %12970 = load i64, i64* %RBP.i2664
  %12971 = sub i64 %12970, 28
  %12972 = load i32, i32* %ECX.i2663
  %12973 = zext i32 %12972 to i64
  %12974 = load i64, i64* %PC.i2662
  %12975 = add i64 %12974, 3
  store i64 %12975, i64* %PC.i2662
  %12976 = inttoptr i64 %12971 to i32*
  store i32 %12972, i32* %12976
  store %struct.Memory* %loadMem_4ab18c, %struct.Memory** %MEMORY
  br label %block_.L_4ab18f

block_.L_4ab18f:                                  ; preds = %block_.L_4ab171, %block_.L_4ab14e
  %loadMem_4ab18f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12978 = getelementptr inbounds %struct.GPR, %struct.GPR* %12977, i32 0, i32 33
  %12979 = getelementptr inbounds %struct.Reg, %struct.Reg* %12978, i32 0, i32 0
  %PC.i2659 = bitcast %union.anon* %12979 to i64*
  %12980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12981 = getelementptr inbounds %struct.GPR, %struct.GPR* %12980, i32 0, i32 1
  %12982 = getelementptr inbounds %struct.Reg, %struct.Reg* %12981, i32 0, i32 0
  %RAX.i2660 = bitcast %union.anon* %12982 to i64*
  %12983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12984 = getelementptr inbounds %struct.GPR, %struct.GPR* %12983, i32 0, i32 15
  %12985 = getelementptr inbounds %struct.Reg, %struct.Reg* %12984, i32 0, i32 0
  %RBP.i2661 = bitcast %union.anon* %12985 to i64*
  %12986 = load i64, i64* %RBP.i2661
  %12987 = sub i64 %12986, 52
  %12988 = load i64, i64* %PC.i2659
  %12989 = add i64 %12988, 3
  store i64 %12989, i64* %PC.i2659
  %12990 = inttoptr i64 %12987 to i32*
  %12991 = load i32, i32* %12990
  %12992 = zext i32 %12991 to i64
  store i64 %12992, i64* %RAX.i2660, align 8
  store %struct.Memory* %loadMem_4ab18f, %struct.Memory** %MEMORY
  %loadMem_4ab192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12994 = getelementptr inbounds %struct.GPR, %struct.GPR* %12993, i32 0, i32 33
  %12995 = getelementptr inbounds %struct.Reg, %struct.Reg* %12994, i32 0, i32 0
  %PC.i2657 = bitcast %union.anon* %12995 to i64*
  %12996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12997 = getelementptr inbounds %struct.GPR, %struct.GPR* %12996, i32 0, i32 1
  %12998 = getelementptr inbounds %struct.Reg, %struct.Reg* %12997, i32 0, i32 0
  %RAX.i2658 = bitcast %union.anon* %12998 to i64*
  %12999 = load i64, i64* %RAX.i2658
  %13000 = load i64, i64* %PC.i2657
  %13001 = add i64 %13000, 3
  store i64 %13001, i64* %PC.i2657
  %13002 = trunc i64 %12999 to i32
  %13003 = add i32 1, %13002
  %13004 = zext i32 %13003 to i64
  store i64 %13004, i64* %RAX.i2658, align 8
  %13005 = icmp ult i32 %13003, %13002
  %13006 = icmp ult i32 %13003, 1
  %13007 = or i1 %13005, %13006
  %13008 = zext i1 %13007 to i8
  %13009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13008, i8* %13009, align 1
  %13010 = and i32 %13003, 255
  %13011 = call i32 @llvm.ctpop.i32(i32 %13010)
  %13012 = trunc i32 %13011 to i8
  %13013 = and i8 %13012, 1
  %13014 = xor i8 %13013, 1
  %13015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13014, i8* %13015, align 1
  %13016 = xor i64 1, %12999
  %13017 = trunc i64 %13016 to i32
  %13018 = xor i32 %13017, %13003
  %13019 = lshr i32 %13018, 4
  %13020 = trunc i32 %13019 to i8
  %13021 = and i8 %13020, 1
  %13022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13021, i8* %13022, align 1
  %13023 = icmp eq i32 %13003, 0
  %13024 = zext i1 %13023 to i8
  %13025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13024, i8* %13025, align 1
  %13026 = lshr i32 %13003, 31
  %13027 = trunc i32 %13026 to i8
  %13028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13027, i8* %13028, align 1
  %13029 = lshr i32 %13002, 31
  %13030 = xor i32 %13026, %13029
  %13031 = add i32 %13030, %13026
  %13032 = icmp eq i32 %13031, 2
  %13033 = zext i1 %13032 to i8
  %13034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13033, i8* %13034, align 1
  store %struct.Memory* %loadMem_4ab192, %struct.Memory** %MEMORY
  %loadMem_4ab195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13036 = getelementptr inbounds %struct.GPR, %struct.GPR* %13035, i32 0, i32 33
  %13037 = getelementptr inbounds %struct.Reg, %struct.Reg* %13036, i32 0, i32 0
  %PC.i2654 = bitcast %union.anon* %13037 to i64*
  %13038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13039 = getelementptr inbounds %struct.GPR, %struct.GPR* %13038, i32 0, i32 1
  %13040 = getelementptr inbounds %struct.Reg, %struct.Reg* %13039, i32 0, i32 0
  %EAX.i2655 = bitcast %union.anon* %13040 to i32*
  %13041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13042 = getelementptr inbounds %struct.GPR, %struct.GPR* %13041, i32 0, i32 15
  %13043 = getelementptr inbounds %struct.Reg, %struct.Reg* %13042, i32 0, i32 0
  %RBP.i2656 = bitcast %union.anon* %13043 to i64*
  %13044 = load i64, i64* %RBP.i2656
  %13045 = sub i64 %13044, 52
  %13046 = load i32, i32* %EAX.i2655
  %13047 = zext i32 %13046 to i64
  %13048 = load i64, i64* %PC.i2654
  %13049 = add i64 %13048, 3
  store i64 %13049, i64* %PC.i2654
  %13050 = inttoptr i64 %13045 to i32*
  store i32 %13046, i32* %13050
  store %struct.Memory* %loadMem_4ab195, %struct.Memory** %MEMORY
  %loadMem_4ab198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13052 = getelementptr inbounds %struct.GPR, %struct.GPR* %13051, i32 0, i32 33
  %13053 = getelementptr inbounds %struct.Reg, %struct.Reg* %13052, i32 0, i32 0
  %PC.i2652 = bitcast %union.anon* %13053 to i64*
  %13054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13055 = getelementptr inbounds %struct.GPR, %struct.GPR* %13054, i32 0, i32 15
  %13056 = getelementptr inbounds %struct.Reg, %struct.Reg* %13055, i32 0, i32 0
  %RBP.i2653 = bitcast %union.anon* %13056 to i64*
  %13057 = load i64, i64* %RBP.i2653
  %13058 = sub i64 %13057, 32
  %13059 = load i64, i64* %PC.i2652
  %13060 = add i64 %13059, 7
  store i64 %13060, i64* %PC.i2652
  %13061 = inttoptr i64 %13058 to i32*
  store i32 0, i32* %13061
  store %struct.Memory* %loadMem_4ab198, %struct.Memory** %MEMORY
  %loadMem_4ab19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13063 = getelementptr inbounds %struct.GPR, %struct.GPR* %13062, i32 0, i32 33
  %13064 = getelementptr inbounds %struct.Reg, %struct.Reg* %13063, i32 0, i32 0
  %PC.i2649 = bitcast %union.anon* %13064 to i64*
  %13065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13066 = getelementptr inbounds %struct.GPR, %struct.GPR* %13065, i32 0, i32 1
  %13067 = getelementptr inbounds %struct.Reg, %struct.Reg* %13066, i32 0, i32 0
  %RAX.i2650 = bitcast %union.anon* %13067 to i64*
  %13068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13069 = getelementptr inbounds %struct.GPR, %struct.GPR* %13068, i32 0, i32 15
  %13070 = getelementptr inbounds %struct.Reg, %struct.Reg* %13069, i32 0, i32 0
  %RBP.i2651 = bitcast %union.anon* %13070 to i64*
  %13071 = load i64, i64* %RBP.i2651
  %13072 = sub i64 %13071, 36
  %13073 = load i64, i64* %PC.i2649
  %13074 = add i64 %13073, 3
  store i64 %13074, i64* %PC.i2649
  %13075 = inttoptr i64 %13072 to i32*
  %13076 = load i32, i32* %13075
  %13077 = zext i32 %13076 to i64
  store i64 %13077, i64* %RAX.i2650, align 8
  store %struct.Memory* %loadMem_4ab19f, %struct.Memory** %MEMORY
  %loadMem_4ab1a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13079 = getelementptr inbounds %struct.GPR, %struct.GPR* %13078, i32 0, i32 33
  %13080 = getelementptr inbounds %struct.Reg, %struct.Reg* %13079, i32 0, i32 0
  %PC.i2647 = bitcast %union.anon* %13080 to i64*
  %13081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13082 = getelementptr inbounds %struct.GPR, %struct.GPR* %13081, i32 0, i32 1
  %13083 = getelementptr inbounds %struct.Reg, %struct.Reg* %13082, i32 0, i32 0
  %RAX.i2648 = bitcast %union.anon* %13083 to i64*
  %13084 = load i64, i64* %RAX.i2648
  %13085 = load i64, i64* %PC.i2647
  %13086 = add i64 %13085, 3
  store i64 %13086, i64* %PC.i2647
  %13087 = and i64 3, %13084
  %13088 = trunc i64 %13087 to i32
  store i64 %13087, i64* %RAX.i2648, align 8
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13089, align 1
  %13090 = and i32 %13088, 255
  %13091 = call i32 @llvm.ctpop.i32(i32 %13090)
  %13092 = trunc i32 %13091 to i8
  %13093 = and i8 %13092, 1
  %13094 = xor i8 %13093, 1
  %13095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13094, i8* %13095, align 1
  %13096 = icmp eq i32 %13088, 0
  %13097 = zext i1 %13096 to i8
  %13098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13097, i8* %13098, align 1
  %13099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13099, align 1
  %13100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13100, align 1
  %13101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13101, align 1
  store %struct.Memory* %loadMem_4ab1a2, %struct.Memory** %MEMORY
  %loadMem_4ab1a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 33
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %PC.i2644 = bitcast %union.anon* %13104 to i64*
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 1
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %EAX.i2645 = bitcast %union.anon* %13107 to i32*
  %13108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13109 = getelementptr inbounds %struct.GPR, %struct.GPR* %13108, i32 0, i32 5
  %13110 = getelementptr inbounds %struct.Reg, %struct.Reg* %13109, i32 0, i32 0
  %RCX.i2646 = bitcast %union.anon* %13110 to i64*
  %13111 = load i32, i32* %EAX.i2645
  %13112 = zext i32 %13111 to i64
  %13113 = load i64, i64* %PC.i2644
  %13114 = add i64 %13113, 3
  store i64 %13114, i64* %PC.i2644
  %13115 = shl i64 %13112, 32
  %13116 = ashr exact i64 %13115, 32
  store i64 %13116, i64* %RCX.i2646, align 8
  store %struct.Memory* %loadMem_4ab1a5, %struct.Memory** %MEMORY
  %loadMem_4ab1a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13118 = getelementptr inbounds %struct.GPR, %struct.GPR* %13117, i32 0, i32 33
  %13119 = getelementptr inbounds %struct.Reg, %struct.Reg* %13118, i32 0, i32 0
  %PC.i2640 = bitcast %union.anon* %13119 to i64*
  %13120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13121 = getelementptr inbounds %struct.GPR, %struct.GPR* %13120, i32 0, i32 1
  %13122 = getelementptr inbounds %struct.Reg, %struct.Reg* %13121, i32 0, i32 0
  %RAX.i2641 = bitcast %union.anon* %13122 to i64*
  %13123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13124 = getelementptr inbounds %struct.GPR, %struct.GPR* %13123, i32 0, i32 5
  %13125 = getelementptr inbounds %struct.Reg, %struct.Reg* %13124, i32 0, i32 0
  %RCX.i2642 = bitcast %union.anon* %13125 to i64*
  %13126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13127 = getelementptr inbounds %struct.GPR, %struct.GPR* %13126, i32 0, i32 15
  %13128 = getelementptr inbounds %struct.Reg, %struct.Reg* %13127, i32 0, i32 0
  %RBP.i2643 = bitcast %union.anon* %13128 to i64*
  %13129 = load i64, i64* %RBP.i2643
  %13130 = load i64, i64* %RCX.i2642
  %13131 = mul i64 %13130, 4
  %13132 = add i64 %13129, -400
  %13133 = add i64 %13132, %13131
  %13134 = load i64, i64* %PC.i2640
  %13135 = add i64 %13134, 7
  store i64 %13135, i64* %PC.i2640
  %13136 = inttoptr i64 %13133 to i32*
  %13137 = load i32, i32* %13136
  %13138 = zext i32 %13137 to i64
  store i64 %13138, i64* %RAX.i2641, align 8
  store %struct.Memory* %loadMem_4ab1a8, %struct.Memory** %MEMORY
  %loadMem_4ab1af = load %struct.Memory*, %struct.Memory** %MEMORY
  %13139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13140 = getelementptr inbounds %struct.GPR, %struct.GPR* %13139, i32 0, i32 33
  %13141 = getelementptr inbounds %struct.Reg, %struct.Reg* %13140, i32 0, i32 0
  %PC.i2638 = bitcast %union.anon* %13141 to i64*
  %13142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13143 = getelementptr inbounds %struct.GPR, %struct.GPR* %13142, i32 0, i32 1
  %13144 = getelementptr inbounds %struct.Reg, %struct.Reg* %13143, i32 0, i32 0
  %RAX.i2639 = bitcast %union.anon* %13144 to i64*
  %13145 = load i64, i64* %RAX.i2639
  %13146 = load i64, i64* %PC.i2638
  %13147 = add i64 %13146, 3
  store i64 %13147, i64* %PC.i2638
  %13148 = trunc i64 %13145 to i32
  %13149 = add i32 1, %13148
  %13150 = zext i32 %13149 to i64
  store i64 %13150, i64* %RAX.i2639, align 8
  %13151 = icmp ult i32 %13149, %13148
  %13152 = icmp ult i32 %13149, 1
  %13153 = or i1 %13151, %13152
  %13154 = zext i1 %13153 to i8
  %13155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13154, i8* %13155, align 1
  %13156 = and i32 %13149, 255
  %13157 = call i32 @llvm.ctpop.i32(i32 %13156)
  %13158 = trunc i32 %13157 to i8
  %13159 = and i8 %13158, 1
  %13160 = xor i8 %13159, 1
  %13161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13160, i8* %13161, align 1
  %13162 = xor i64 1, %13145
  %13163 = trunc i64 %13162 to i32
  %13164 = xor i32 %13163, %13149
  %13165 = lshr i32 %13164, 4
  %13166 = trunc i32 %13165 to i8
  %13167 = and i8 %13166, 1
  %13168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13167, i8* %13168, align 1
  %13169 = icmp eq i32 %13149, 0
  %13170 = zext i1 %13169 to i8
  %13171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13170, i8* %13171, align 1
  %13172 = lshr i32 %13149, 31
  %13173 = trunc i32 %13172 to i8
  %13174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13173, i8* %13174, align 1
  %13175 = lshr i32 %13148, 31
  %13176 = xor i32 %13172, %13175
  %13177 = add i32 %13176, %13172
  %13178 = icmp eq i32 %13177, 2
  %13179 = zext i1 %13178 to i8
  %13180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13179, i8* %13180, align 1
  store %struct.Memory* %loadMem_4ab1af, %struct.Memory** %MEMORY
  %loadMem_4ab1b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13182 = getelementptr inbounds %struct.GPR, %struct.GPR* %13181, i32 0, i32 33
  %13183 = getelementptr inbounds %struct.Reg, %struct.Reg* %13182, i32 0, i32 0
  %PC.i2634 = bitcast %union.anon* %13183 to i64*
  %13184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13185 = getelementptr inbounds %struct.GPR, %struct.GPR* %13184, i32 0, i32 1
  %13186 = getelementptr inbounds %struct.Reg, %struct.Reg* %13185, i32 0, i32 0
  %EAX.i2635 = bitcast %union.anon* %13186 to i32*
  %13187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13188 = getelementptr inbounds %struct.GPR, %struct.GPR* %13187, i32 0, i32 5
  %13189 = getelementptr inbounds %struct.Reg, %struct.Reg* %13188, i32 0, i32 0
  %RCX.i2636 = bitcast %union.anon* %13189 to i64*
  %13190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13191 = getelementptr inbounds %struct.GPR, %struct.GPR* %13190, i32 0, i32 15
  %13192 = getelementptr inbounds %struct.Reg, %struct.Reg* %13191, i32 0, i32 0
  %RBP.i2637 = bitcast %union.anon* %13192 to i64*
  %13193 = load i64, i64* %RBP.i2637
  %13194 = load i64, i64* %RCX.i2636
  %13195 = mul i64 %13194, 4
  %13196 = add i64 %13193, -400
  %13197 = add i64 %13196, %13195
  %13198 = load i32, i32* %EAX.i2635
  %13199 = zext i32 %13198 to i64
  %13200 = load i64, i64* %PC.i2634
  %13201 = add i64 %13200, 7
  store i64 %13201, i64* %PC.i2634
  %13202 = inttoptr i64 %13197 to i32*
  store i32 %13198, i32* %13202
  store %struct.Memory* %loadMem_4ab1b2, %struct.Memory** %MEMORY
  %loadMem_4ab1b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13204 = getelementptr inbounds %struct.GPR, %struct.GPR* %13203, i32 0, i32 33
  %13205 = getelementptr inbounds %struct.Reg, %struct.Reg* %13204, i32 0, i32 0
  %PC.i2632 = bitcast %union.anon* %13205 to i64*
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13207 = getelementptr inbounds %struct.GPR, %struct.GPR* %13206, i32 0, i32 15
  %13208 = getelementptr inbounds %struct.Reg, %struct.Reg* %13207, i32 0, i32 0
  %RBP.i2633 = bitcast %union.anon* %13208 to i64*
  %13209 = load i64, i64* %RBP.i2633
  %13210 = sub i64 %13209, 412
  %13211 = load i64, i64* %PC.i2632
  %13212 = add i64 %13211, 7
  store i64 %13212, i64* %PC.i2632
  %13213 = inttoptr i64 %13210 to i32*
  %13214 = load i32, i32* %13213
  %13215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13215, align 1
  %13216 = and i32 %13214, 255
  %13217 = call i32 @llvm.ctpop.i32(i32 %13216)
  %13218 = trunc i32 %13217 to i8
  %13219 = and i8 %13218, 1
  %13220 = xor i8 %13219, 1
  %13221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13220, i8* %13221, align 1
  %13222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13222, align 1
  %13223 = icmp eq i32 %13214, 0
  %13224 = zext i1 %13223 to i8
  %13225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13224, i8* %13225, align 1
  %13226 = lshr i32 %13214, 31
  %13227 = trunc i32 %13226 to i8
  %13228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13227, i8* %13228, align 1
  %13229 = lshr i32 %13214, 31
  %13230 = xor i32 %13226, %13229
  %13231 = add i32 %13230, %13229
  %13232 = icmp eq i32 %13231, 2
  %13233 = zext i1 %13232 to i8
  %13234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13233, i8* %13234, align 1
  store %struct.Memory* %loadMem_4ab1b9, %struct.Memory** %MEMORY
  %loadMem_4ab1c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13236 = getelementptr inbounds %struct.GPR, %struct.GPR* %13235, i32 0, i32 33
  %13237 = getelementptr inbounds %struct.Reg, %struct.Reg* %13236, i32 0, i32 0
  %PC.i2631 = bitcast %union.anon* %13237 to i64*
  %13238 = load i64, i64* %PC.i2631
  %13239 = add i64 %13238, 51
  %13240 = load i64, i64* %PC.i2631
  %13241 = add i64 %13240, 6
  %13242 = load i64, i64* %PC.i2631
  %13243 = add i64 %13242, 6
  store i64 %13243, i64* %PC.i2631
  %13244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13245 = load i8, i8* %13244, align 1
  store i8 %13245, i8* %BRANCH_TAKEN, align 1
  %13246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13247 = icmp ne i8 %13245, 0
  %13248 = select i1 %13247, i64 %13239, i64 %13241
  store i64 %13248, i64* %13246, align 8
  store %struct.Memory* %loadMem_4ab1c0, %struct.Memory** %MEMORY
  %loadBr_4ab1c0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab1c0 = icmp eq i8 %loadBr_4ab1c0, 1
  br i1 %cmpBr_4ab1c0, label %block_.L_4ab1f3, label %block_4ab1c6

block_4ab1c6:                                     ; preds = %block_.L_4ab18f
  %loadMem_4ab1c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13250 = getelementptr inbounds %struct.GPR, %struct.GPR* %13249, i32 0, i32 33
  %13251 = getelementptr inbounds %struct.Reg, %struct.Reg* %13250, i32 0, i32 0
  %PC.i2629 = bitcast %union.anon* %13251 to i64*
  %13252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13253 = getelementptr inbounds %struct.GPR, %struct.GPR* %13252, i32 0, i32 1
  %13254 = getelementptr inbounds %struct.Reg, %struct.Reg* %13253, i32 0, i32 0
  %RAX.i2630 = bitcast %union.anon* %13254 to i64*
  %13255 = load i64, i64* %PC.i2629
  %13256 = add i64 %13255, 8
  store i64 %13256, i64* %PC.i2629
  %13257 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13257, i64* %RAX.i2630, align 8
  store %struct.Memory* %loadMem_4ab1c6, %struct.Memory** %MEMORY
  %loadMem_4ab1ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %13258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13259 = getelementptr inbounds %struct.GPR, %struct.GPR* %13258, i32 0, i32 33
  %13260 = getelementptr inbounds %struct.Reg, %struct.Reg* %13259, i32 0, i32 0
  %PC.i2627 = bitcast %union.anon* %13260 to i64*
  %13261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13262 = getelementptr inbounds %struct.GPR, %struct.GPR* %13261, i32 0, i32 1
  %13263 = getelementptr inbounds %struct.Reg, %struct.Reg* %13262, i32 0, i32 0
  %RAX.i2628 = bitcast %union.anon* %13263 to i64*
  %13264 = load i64, i64* %RAX.i2628
  %13265 = load i64, i64* %PC.i2627
  %13266 = add i64 %13265, 6
  store i64 %13266, i64* %PC.i2627
  %13267 = add i64 13112, %13264
  store i64 %13267, i64* %RAX.i2628, align 8
  %13268 = icmp ult i64 %13267, %13264
  %13269 = icmp ult i64 %13267, 13112
  %13270 = or i1 %13268, %13269
  %13271 = zext i1 %13270 to i8
  %13272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13271, i8* %13272, align 1
  %13273 = trunc i64 %13267 to i32
  %13274 = and i32 %13273, 255
  %13275 = call i32 @llvm.ctpop.i32(i32 %13274)
  %13276 = trunc i32 %13275 to i8
  %13277 = and i8 %13276, 1
  %13278 = xor i8 %13277, 1
  %13279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13278, i8* %13279, align 1
  %13280 = xor i64 13112, %13264
  %13281 = xor i64 %13280, %13267
  %13282 = lshr i64 %13281, 4
  %13283 = trunc i64 %13282 to i8
  %13284 = and i8 %13283, 1
  %13285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13284, i8* %13285, align 1
  %13286 = icmp eq i64 %13267, 0
  %13287 = zext i1 %13286 to i8
  %13288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13287, i8* %13288, align 1
  %13289 = lshr i64 %13267, 63
  %13290 = trunc i64 %13289 to i8
  %13291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13290, i8* %13291, align 1
  %13292 = lshr i64 %13264, 63
  %13293 = xor i64 %13289, %13292
  %13294 = add i64 %13293, %13289
  %13295 = icmp eq i64 %13294, 2
  %13296 = zext i1 %13295 to i8
  %13297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13296, i8* %13297, align 1
  store %struct.Memory* %loadMem_4ab1ce, %struct.Memory** %MEMORY
  %loadMem_4ab1d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13299 = getelementptr inbounds %struct.GPR, %struct.GPR* %13298, i32 0, i32 33
  %13300 = getelementptr inbounds %struct.Reg, %struct.Reg* %13299, i32 0, i32 0
  %PC.i2624 = bitcast %union.anon* %13300 to i64*
  %13301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13302 = getelementptr inbounds %struct.GPR, %struct.GPR* %13301, i32 0, i32 5
  %13303 = getelementptr inbounds %struct.Reg, %struct.Reg* %13302, i32 0, i32 0
  %RCX.i2625 = bitcast %union.anon* %13303 to i64*
  %13304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13305 = getelementptr inbounds %struct.GPR, %struct.GPR* %13304, i32 0, i32 15
  %13306 = getelementptr inbounds %struct.Reg, %struct.Reg* %13305, i32 0, i32 0
  %RBP.i2626 = bitcast %union.anon* %13306 to i64*
  %13307 = load i64, i64* %RBP.i2626
  %13308 = sub i64 %13307, 24
  %13309 = load i64, i64* %PC.i2624
  %13310 = add i64 %13309, 4
  store i64 %13310, i64* %PC.i2624
  %13311 = inttoptr i64 %13308 to i32*
  %13312 = load i32, i32* %13311
  %13313 = sext i32 %13312 to i64
  store i64 %13313, i64* %RCX.i2625, align 8
  store %struct.Memory* %loadMem_4ab1d4, %struct.Memory** %MEMORY
  %loadMem_4ab1d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13315 = getelementptr inbounds %struct.GPR, %struct.GPR* %13314, i32 0, i32 33
  %13316 = getelementptr inbounds %struct.Reg, %struct.Reg* %13315, i32 0, i32 0
  %PC.i2622 = bitcast %union.anon* %13316 to i64*
  %13317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13318 = getelementptr inbounds %struct.GPR, %struct.GPR* %13317, i32 0, i32 5
  %13319 = getelementptr inbounds %struct.Reg, %struct.Reg* %13318, i32 0, i32 0
  %RCX.i2623 = bitcast %union.anon* %13319 to i64*
  %13320 = load i64, i64* %RCX.i2623
  %13321 = load i64, i64* %PC.i2622
  %13322 = add i64 %13321, 4
  store i64 %13322, i64* %PC.i2622
  %13323 = shl i64 %13320, 5
  %13324 = icmp slt i64 %13323, 0
  %13325 = shl i64 %13323, 1
  store i64 %13325, i64* %RCX.i2623, align 8
  %13326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13327 = zext i1 %13324 to i8
  store i8 %13327, i8* %13326, align 1
  %13328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13329 = trunc i64 %13325 to i32
  %13330 = and i32 %13329, 254
  %13331 = call i32 @llvm.ctpop.i32(i32 %13330)
  %13332 = trunc i32 %13331 to i8
  %13333 = and i8 %13332, 1
  %13334 = xor i8 %13333, 1
  store i8 %13334, i8* %13328, align 1
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13335, align 1
  %13336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13337 = icmp eq i64 %13325, 0
  %13338 = zext i1 %13337 to i8
  store i8 %13338, i8* %13336, align 1
  %13339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13340 = lshr i64 %13325, 63
  %13341 = trunc i64 %13340 to i8
  store i8 %13341, i8* %13339, align 1
  %13342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13342, align 1
  store %struct.Memory* %loadMem_4ab1d8, %struct.Memory** %MEMORY
  %loadMem_4ab1dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13344 = getelementptr inbounds %struct.GPR, %struct.GPR* %13343, i32 0, i32 33
  %13345 = getelementptr inbounds %struct.Reg, %struct.Reg* %13344, i32 0, i32 0
  %PC.i2619 = bitcast %union.anon* %13345 to i64*
  %13346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13347 = getelementptr inbounds %struct.GPR, %struct.GPR* %13346, i32 0, i32 1
  %13348 = getelementptr inbounds %struct.Reg, %struct.Reg* %13347, i32 0, i32 0
  %RAX.i2620 = bitcast %union.anon* %13348 to i64*
  %13349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13350 = getelementptr inbounds %struct.GPR, %struct.GPR* %13349, i32 0, i32 5
  %13351 = getelementptr inbounds %struct.Reg, %struct.Reg* %13350, i32 0, i32 0
  %RCX.i2621 = bitcast %union.anon* %13351 to i64*
  %13352 = load i64, i64* %RAX.i2620
  %13353 = load i64, i64* %RCX.i2621
  %13354 = load i64, i64* %PC.i2619
  %13355 = add i64 %13354, 3
  store i64 %13355, i64* %PC.i2619
  %13356 = add i64 %13353, %13352
  store i64 %13356, i64* %RAX.i2620, align 8
  %13357 = icmp ult i64 %13356, %13352
  %13358 = icmp ult i64 %13356, %13353
  %13359 = or i1 %13357, %13358
  %13360 = zext i1 %13359 to i8
  %13361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13360, i8* %13361, align 1
  %13362 = trunc i64 %13356 to i32
  %13363 = and i32 %13362, 255
  %13364 = call i32 @llvm.ctpop.i32(i32 %13363)
  %13365 = trunc i32 %13364 to i8
  %13366 = and i8 %13365, 1
  %13367 = xor i8 %13366, 1
  %13368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13367, i8* %13368, align 1
  %13369 = xor i64 %13353, %13352
  %13370 = xor i64 %13369, %13356
  %13371 = lshr i64 %13370, 4
  %13372 = trunc i64 %13371 to i8
  %13373 = and i8 %13372, 1
  %13374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13373, i8* %13374, align 1
  %13375 = icmp eq i64 %13356, 0
  %13376 = zext i1 %13375 to i8
  %13377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13376, i8* %13377, align 1
  %13378 = lshr i64 %13356, 63
  %13379 = trunc i64 %13378 to i8
  %13380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13379, i8* %13380, align 1
  %13381 = lshr i64 %13352, 63
  %13382 = lshr i64 %13353, 63
  %13383 = xor i64 %13378, %13381
  %13384 = xor i64 %13378, %13382
  %13385 = add i64 %13383, %13384
  %13386 = icmp eq i64 %13385, 2
  %13387 = zext i1 %13386 to i8
  %13388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13387, i8* %13388, align 1
  store %struct.Memory* %loadMem_4ab1dc, %struct.Memory** %MEMORY
  %loadMem_4ab1df = load %struct.Memory*, %struct.Memory** %MEMORY
  %13389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13390 = getelementptr inbounds %struct.GPR, %struct.GPR* %13389, i32 0, i32 33
  %13391 = getelementptr inbounds %struct.Reg, %struct.Reg* %13390, i32 0, i32 0
  %PC.i2616 = bitcast %union.anon* %13391 to i64*
  %13392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13393 = getelementptr inbounds %struct.GPR, %struct.GPR* %13392, i32 0, i32 5
  %13394 = getelementptr inbounds %struct.Reg, %struct.Reg* %13393, i32 0, i32 0
  %RCX.i2617 = bitcast %union.anon* %13394 to i64*
  %13395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13396 = getelementptr inbounds %struct.GPR, %struct.GPR* %13395, i32 0, i32 15
  %13397 = getelementptr inbounds %struct.Reg, %struct.Reg* %13396, i32 0, i32 0
  %RBP.i2618 = bitcast %union.anon* %13397 to i64*
  %13398 = load i64, i64* %RBP.i2618
  %13399 = sub i64 %13398, 28
  %13400 = load i64, i64* %PC.i2616
  %13401 = add i64 %13400, 4
  store i64 %13401, i64* %PC.i2616
  %13402 = inttoptr i64 %13399 to i32*
  %13403 = load i32, i32* %13402
  %13404 = sext i32 %13403 to i64
  store i64 %13404, i64* %RCX.i2617, align 8
  store %struct.Memory* %loadMem_4ab1df, %struct.Memory** %MEMORY
  %loadMem_4ab1e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13406 = getelementptr inbounds %struct.GPR, %struct.GPR* %13405, i32 0, i32 33
  %13407 = getelementptr inbounds %struct.Reg, %struct.Reg* %13406, i32 0, i32 0
  %PC.i2612 = bitcast %union.anon* %13407 to i64*
  %13408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13409 = getelementptr inbounds %struct.GPR, %struct.GPR* %13408, i32 0, i32 1
  %13410 = getelementptr inbounds %struct.Reg, %struct.Reg* %13409, i32 0, i32 0
  %RAX.i2613 = bitcast %union.anon* %13410 to i64*
  %13411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13412 = getelementptr inbounds %struct.GPR, %struct.GPR* %13411, i32 0, i32 5
  %13413 = getelementptr inbounds %struct.Reg, %struct.Reg* %13412, i32 0, i32 0
  %RCX.i2614 = bitcast %union.anon* %13413 to i64*
  %13414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13415 = getelementptr inbounds %struct.GPR, %struct.GPR* %13414, i32 0, i32 11
  %13416 = getelementptr inbounds %struct.Reg, %struct.Reg* %13415, i32 0, i32 0
  %RDI.i2615 = bitcast %union.anon* %13416 to i64*
  %13417 = load i64, i64* %RAX.i2613
  %13418 = load i64, i64* %RCX.i2614
  %13419 = mul i64 %13418, 4
  %13420 = add i64 %13419, %13417
  %13421 = load i64, i64* %PC.i2612
  %13422 = add i64 %13421, 3
  store i64 %13422, i64* %PC.i2612
  %13423 = inttoptr i64 %13420 to i32*
  %13424 = load i32, i32* %13423
  %13425 = zext i32 %13424 to i64
  store i64 %13425, i64* %RDI.i2615, align 8
  store %struct.Memory* %loadMem_4ab1e3, %struct.Memory** %MEMORY
  %loadMem1_4ab1e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13427 = getelementptr inbounds %struct.GPR, %struct.GPR* %13426, i32 0, i32 33
  %13428 = getelementptr inbounds %struct.Reg, %struct.Reg* %13427, i32 0, i32 0
  %PC.i2611 = bitcast %union.anon* %13428 to i64*
  %13429 = load i64, i64* %PC.i2611
  %13430 = add i64 %13429, -696806
  %13431 = load i64, i64* %PC.i2611
  %13432 = add i64 %13431, 5
  %13433 = load i64, i64* %PC.i2611
  %13434 = add i64 %13433, 5
  store i64 %13434, i64* %PC.i2611
  %13435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13436 = load i64, i64* %13435, align 8
  %13437 = add i64 %13436, -8
  %13438 = inttoptr i64 %13437 to i64*
  store i64 %13432, i64* %13438
  store i64 %13437, i64* %13435, align 8
  %13439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13430, i64* %13439, align 8
  store %struct.Memory* %loadMem1_4ab1e6, %struct.Memory** %MEMORY
  %loadMem2_4ab1e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4ab1e6 = load i64, i64* %3
  %13440 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_4ab1e6)
  store %struct.Memory* %13440, %struct.Memory** %MEMORY
  %loadMem_4ab1eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13442 = getelementptr inbounds %struct.GPR, %struct.GPR* %13441, i32 0, i32 33
  %13443 = getelementptr inbounds %struct.Reg, %struct.Reg* %13442, i32 0, i32 0
  %PC.i2605 = bitcast %union.anon* %13443 to i64*
  %13444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13445 = getelementptr inbounds %struct.GPR, %struct.GPR* %13444, i32 0, i32 1
  %13446 = getelementptr inbounds %struct.Reg, %struct.Reg* %13445, i32 0, i32 0
  %EAX.i2606 = bitcast %union.anon* %13446 to i32*
  %13447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13448 = getelementptr inbounds %struct.GPR, %struct.GPR* %13447, i32 0, i32 15
  %13449 = getelementptr inbounds %struct.Reg, %struct.Reg* %13448, i32 0, i32 0
  %RBP.i2607 = bitcast %union.anon* %13449 to i64*
  %13450 = load i64, i64* %RBP.i2607
  %13451 = sub i64 %13450, 44
  %13452 = load i32, i32* %EAX.i2606
  %13453 = zext i32 %13452 to i64
  %13454 = load i64, i64* %PC.i2605
  %13455 = add i64 %13454, 3
  store i64 %13455, i64* %PC.i2605
  %13456 = inttoptr i64 %13451 to i32*
  store i32 %13452, i32* %13456
  store %struct.Memory* %loadMem_4ab1eb, %struct.Memory** %MEMORY
  %loadMem_4ab1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13458 = getelementptr inbounds %struct.GPR, %struct.GPR* %13457, i32 0, i32 33
  %13459 = getelementptr inbounds %struct.Reg, %struct.Reg* %13458, i32 0, i32 0
  %PC.i2604 = bitcast %union.anon* %13459 to i64*
  %13460 = load i64, i64* %PC.i2604
  %13461 = add i64 %13460, 273
  %13462 = load i64, i64* %PC.i2604
  %13463 = add i64 %13462, 5
  store i64 %13463, i64* %PC.i2604
  %13464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13461, i64* %13464, align 8
  store %struct.Memory* %loadMem_4ab1ee, %struct.Memory** %MEMORY
  br label %block_.L_4ab2ff

block_.L_4ab1f3:                                  ; preds = %block_.L_4ab18f
  %loadMem_4ab1f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13466 = getelementptr inbounds %struct.GPR, %struct.GPR* %13465, i32 0, i32 33
  %13467 = getelementptr inbounds %struct.Reg, %struct.Reg* %13466, i32 0, i32 0
  %PC.i2602 = bitcast %union.anon* %13467 to i64*
  %13468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13469 = getelementptr inbounds %struct.GPR, %struct.GPR* %13468, i32 0, i32 15
  %13470 = getelementptr inbounds %struct.Reg, %struct.Reg* %13469, i32 0, i32 0
  %RBP.i2603 = bitcast %union.anon* %13470 to i64*
  %13471 = load i64, i64* %RBP.i2603
  %13472 = sub i64 %13471, 20
  %13473 = load i64, i64* %PC.i2602
  %13474 = add i64 %13473, 4
  store i64 %13474, i64* %PC.i2602
  %13475 = inttoptr i64 %13472 to i32*
  %13476 = load i32, i32* %13475
  %13477 = sub i32 %13476, 1
  %13478 = icmp ult i32 %13476, 1
  %13479 = zext i1 %13478 to i8
  %13480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13479, i8* %13480, align 1
  %13481 = and i32 %13477, 255
  %13482 = call i32 @llvm.ctpop.i32(i32 %13481)
  %13483 = trunc i32 %13482 to i8
  %13484 = and i8 %13483, 1
  %13485 = xor i8 %13484, 1
  %13486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13485, i8* %13486, align 1
  %13487 = xor i32 %13476, 1
  %13488 = xor i32 %13487, %13477
  %13489 = lshr i32 %13488, 4
  %13490 = trunc i32 %13489 to i8
  %13491 = and i8 %13490, 1
  %13492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13491, i8* %13492, align 1
  %13493 = icmp eq i32 %13477, 0
  %13494 = zext i1 %13493 to i8
  %13495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13494, i8* %13495, align 1
  %13496 = lshr i32 %13477, 31
  %13497 = trunc i32 %13496 to i8
  %13498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13497, i8* %13498, align 1
  %13499 = lshr i32 %13476, 31
  %13500 = xor i32 %13496, %13499
  %13501 = add i32 %13500, %13499
  %13502 = icmp eq i32 %13501, 2
  %13503 = zext i1 %13502 to i8
  %13504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13503, i8* %13504, align 1
  store %struct.Memory* %loadMem_4ab1f3, %struct.Memory** %MEMORY
  %loadMem_4ab1f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13506 = getelementptr inbounds %struct.GPR, %struct.GPR* %13505, i32 0, i32 33
  %13507 = getelementptr inbounds %struct.Reg, %struct.Reg* %13506, i32 0, i32 0
  %PC.i2601 = bitcast %union.anon* %13507 to i64*
  %13508 = load i64, i64* %PC.i2601
  %13509 = add i64 %13508, 135
  %13510 = load i64, i64* %PC.i2601
  %13511 = add i64 %13510, 6
  %13512 = load i64, i64* %PC.i2601
  %13513 = add i64 %13512, 6
  store i64 %13513, i64* %PC.i2601
  %13514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13515 = load i8, i8* %13514, align 1
  %13516 = icmp eq i8 %13515, 0
  %13517 = zext i1 %13516 to i8
  store i8 %13517, i8* %BRANCH_TAKEN, align 1
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13519 = select i1 %13516, i64 %13509, i64 %13511
  store i64 %13519, i64* %13518, align 8
  store %struct.Memory* %loadMem_4ab1f7, %struct.Memory** %MEMORY
  %loadBr_4ab1f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab1f7 = icmp eq i8 %loadBr_4ab1f7, 1
  br i1 %cmpBr_4ab1f7, label %block_.L_4ab27e, label %block_4ab1fd

block_4ab1fd:                                     ; preds = %block_.L_4ab1f3
  %loadMem_4ab1fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13521 = getelementptr inbounds %struct.GPR, %struct.GPR* %13520, i32 0, i32 33
  %13522 = getelementptr inbounds %struct.Reg, %struct.Reg* %13521, i32 0, i32 0
  %PC.i2599 = bitcast %union.anon* %13522 to i64*
  %13523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13524 = getelementptr inbounds %struct.GPR, %struct.GPR* %13523, i32 0, i32 1
  %13525 = getelementptr inbounds %struct.Reg, %struct.Reg* %13524, i32 0, i32 0
  %RAX.i2600 = bitcast %union.anon* %13525 to i64*
  %13526 = load i64, i64* %PC.i2599
  %13527 = add i64 %13526, 8
  store i64 %13527, i64* %PC.i2599
  %13528 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13528, i64* %RAX.i2600, align 8
  store %struct.Memory* %loadMem_4ab1fd, %struct.Memory** %MEMORY
  %loadMem_4ab205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13530 = getelementptr inbounds %struct.GPR, %struct.GPR* %13529, i32 0, i32 33
  %13531 = getelementptr inbounds %struct.Reg, %struct.Reg* %13530, i32 0, i32 0
  %PC.i2597 = bitcast %union.anon* %13531 to i64*
  %13532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13533 = getelementptr inbounds %struct.GPR, %struct.GPR* %13532, i32 0, i32 1
  %13534 = getelementptr inbounds %struct.Reg, %struct.Reg* %13533, i32 0, i32 0
  %RAX.i2598 = bitcast %union.anon* %13534 to i64*
  %13535 = load i64, i64* %RAX.i2598
  %13536 = load i64, i64* %PC.i2597
  %13537 = add i64 %13536, 6
  store i64 %13537, i64* %PC.i2597
  %13538 = add i64 13112, %13535
  store i64 %13538, i64* %RAX.i2598, align 8
  %13539 = icmp ult i64 %13538, %13535
  %13540 = icmp ult i64 %13538, 13112
  %13541 = or i1 %13539, %13540
  %13542 = zext i1 %13541 to i8
  %13543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13542, i8* %13543, align 1
  %13544 = trunc i64 %13538 to i32
  %13545 = and i32 %13544, 255
  %13546 = call i32 @llvm.ctpop.i32(i32 %13545)
  %13547 = trunc i32 %13546 to i8
  %13548 = and i8 %13547, 1
  %13549 = xor i8 %13548, 1
  %13550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13549, i8* %13550, align 1
  %13551 = xor i64 13112, %13535
  %13552 = xor i64 %13551, %13538
  %13553 = lshr i64 %13552, 4
  %13554 = trunc i64 %13553 to i8
  %13555 = and i8 %13554, 1
  %13556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13555, i8* %13556, align 1
  %13557 = icmp eq i64 %13538, 0
  %13558 = zext i1 %13557 to i8
  %13559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13558, i8* %13559, align 1
  %13560 = lshr i64 %13538, 63
  %13561 = trunc i64 %13560 to i8
  %13562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13561, i8* %13562, align 1
  %13563 = lshr i64 %13535, 63
  %13564 = xor i64 %13560, %13563
  %13565 = add i64 %13564, %13560
  %13566 = icmp eq i64 %13565, 2
  %13567 = zext i1 %13566 to i8
  %13568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13567, i8* %13568, align 1
  store %struct.Memory* %loadMem_4ab205, %struct.Memory** %MEMORY
  %loadMem_4ab20b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13570 = getelementptr inbounds %struct.GPR, %struct.GPR* %13569, i32 0, i32 33
  %13571 = getelementptr inbounds %struct.Reg, %struct.Reg* %13570, i32 0, i32 0
  %PC.i2594 = bitcast %union.anon* %13571 to i64*
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13573 = getelementptr inbounds %struct.GPR, %struct.GPR* %13572, i32 0, i32 5
  %13574 = getelementptr inbounds %struct.Reg, %struct.Reg* %13573, i32 0, i32 0
  %RCX.i2595 = bitcast %union.anon* %13574 to i64*
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13576 = getelementptr inbounds %struct.GPR, %struct.GPR* %13575, i32 0, i32 15
  %13577 = getelementptr inbounds %struct.Reg, %struct.Reg* %13576, i32 0, i32 0
  %RBP.i2596 = bitcast %union.anon* %13577 to i64*
  %13578 = load i64, i64* %RBP.i2596
  %13579 = sub i64 %13578, 24
  %13580 = load i64, i64* %PC.i2594
  %13581 = add i64 %13580, 4
  store i64 %13581, i64* %PC.i2594
  %13582 = inttoptr i64 %13579 to i32*
  %13583 = load i32, i32* %13582
  %13584 = sext i32 %13583 to i64
  store i64 %13584, i64* %RCX.i2595, align 8
  store %struct.Memory* %loadMem_4ab20b, %struct.Memory** %MEMORY
  %loadMem_4ab20f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13586 = getelementptr inbounds %struct.GPR, %struct.GPR* %13585, i32 0, i32 33
  %13587 = getelementptr inbounds %struct.Reg, %struct.Reg* %13586, i32 0, i32 0
  %PC.i2592 = bitcast %union.anon* %13587 to i64*
  %13588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13589 = getelementptr inbounds %struct.GPR, %struct.GPR* %13588, i32 0, i32 5
  %13590 = getelementptr inbounds %struct.Reg, %struct.Reg* %13589, i32 0, i32 0
  %RCX.i2593 = bitcast %union.anon* %13590 to i64*
  %13591 = load i64, i64* %RCX.i2593
  %13592 = load i64, i64* %PC.i2592
  %13593 = add i64 %13592, 4
  store i64 %13593, i64* %PC.i2592
  %13594 = shl i64 %13591, 5
  %13595 = icmp slt i64 %13594, 0
  %13596 = shl i64 %13594, 1
  store i64 %13596, i64* %RCX.i2593, align 8
  %13597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13598 = zext i1 %13595 to i8
  store i8 %13598, i8* %13597, align 1
  %13599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13600 = trunc i64 %13596 to i32
  %13601 = and i32 %13600, 254
  %13602 = call i32 @llvm.ctpop.i32(i32 %13601)
  %13603 = trunc i32 %13602 to i8
  %13604 = and i8 %13603, 1
  %13605 = xor i8 %13604, 1
  store i8 %13605, i8* %13599, align 1
  %13606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13606, align 1
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13608 = icmp eq i64 %13596, 0
  %13609 = zext i1 %13608 to i8
  store i8 %13609, i8* %13607, align 1
  %13610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13611 = lshr i64 %13596, 63
  %13612 = trunc i64 %13611 to i8
  store i8 %13612, i8* %13610, align 1
  %13613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13613, align 1
  store %struct.Memory* %loadMem_4ab20f, %struct.Memory** %MEMORY
  %loadMem_4ab213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13615 = getelementptr inbounds %struct.GPR, %struct.GPR* %13614, i32 0, i32 33
  %13616 = getelementptr inbounds %struct.Reg, %struct.Reg* %13615, i32 0, i32 0
  %PC.i2589 = bitcast %union.anon* %13616 to i64*
  %13617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13618 = getelementptr inbounds %struct.GPR, %struct.GPR* %13617, i32 0, i32 1
  %13619 = getelementptr inbounds %struct.Reg, %struct.Reg* %13618, i32 0, i32 0
  %RAX.i2590 = bitcast %union.anon* %13619 to i64*
  %13620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13621 = getelementptr inbounds %struct.GPR, %struct.GPR* %13620, i32 0, i32 5
  %13622 = getelementptr inbounds %struct.Reg, %struct.Reg* %13621, i32 0, i32 0
  %RCX.i2591 = bitcast %union.anon* %13622 to i64*
  %13623 = load i64, i64* %RAX.i2590
  %13624 = load i64, i64* %RCX.i2591
  %13625 = load i64, i64* %PC.i2589
  %13626 = add i64 %13625, 3
  store i64 %13626, i64* %PC.i2589
  %13627 = add i64 %13624, %13623
  store i64 %13627, i64* %RAX.i2590, align 8
  %13628 = icmp ult i64 %13627, %13623
  %13629 = icmp ult i64 %13627, %13624
  %13630 = or i1 %13628, %13629
  %13631 = zext i1 %13630 to i8
  %13632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13631, i8* %13632, align 1
  %13633 = trunc i64 %13627 to i32
  %13634 = and i32 %13633, 255
  %13635 = call i32 @llvm.ctpop.i32(i32 %13634)
  %13636 = trunc i32 %13635 to i8
  %13637 = and i8 %13636, 1
  %13638 = xor i8 %13637, 1
  %13639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13638, i8* %13639, align 1
  %13640 = xor i64 %13624, %13623
  %13641 = xor i64 %13640, %13627
  %13642 = lshr i64 %13641, 4
  %13643 = trunc i64 %13642 to i8
  %13644 = and i8 %13643, 1
  %13645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13644, i8* %13645, align 1
  %13646 = icmp eq i64 %13627, 0
  %13647 = zext i1 %13646 to i8
  %13648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13647, i8* %13648, align 1
  %13649 = lshr i64 %13627, 63
  %13650 = trunc i64 %13649 to i8
  %13651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13650, i8* %13651, align 1
  %13652 = lshr i64 %13623, 63
  %13653 = lshr i64 %13624, 63
  %13654 = xor i64 %13649, %13652
  %13655 = xor i64 %13649, %13653
  %13656 = add i64 %13654, %13655
  %13657 = icmp eq i64 %13656, 2
  %13658 = zext i1 %13657 to i8
  %13659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13658, i8* %13659, align 1
  store %struct.Memory* %loadMem_4ab213, %struct.Memory** %MEMORY
  %loadMem_4ab216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13661 = getelementptr inbounds %struct.GPR, %struct.GPR* %13660, i32 0, i32 33
  %13662 = getelementptr inbounds %struct.Reg, %struct.Reg* %13661, i32 0, i32 0
  %PC.i2586 = bitcast %union.anon* %13662 to i64*
  %13663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13664 = getelementptr inbounds %struct.GPR, %struct.GPR* %13663, i32 0, i32 5
  %13665 = getelementptr inbounds %struct.Reg, %struct.Reg* %13664, i32 0, i32 0
  %RCX.i2587 = bitcast %union.anon* %13665 to i64*
  %13666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13667 = getelementptr inbounds %struct.GPR, %struct.GPR* %13666, i32 0, i32 15
  %13668 = getelementptr inbounds %struct.Reg, %struct.Reg* %13667, i32 0, i32 0
  %RBP.i2588 = bitcast %union.anon* %13668 to i64*
  %13669 = load i64, i64* %RBP.i2588
  %13670 = sub i64 %13669, 28
  %13671 = load i64, i64* %PC.i2586
  %13672 = add i64 %13671, 4
  store i64 %13672, i64* %PC.i2586
  %13673 = inttoptr i64 %13670 to i32*
  %13674 = load i32, i32* %13673
  %13675 = sext i32 %13674 to i64
  store i64 %13675, i64* %RCX.i2587, align 8
  store %struct.Memory* %loadMem_4ab216, %struct.Memory** %MEMORY
  %loadMem_4ab21a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13677 = getelementptr inbounds %struct.GPR, %struct.GPR* %13676, i32 0, i32 33
  %13678 = getelementptr inbounds %struct.Reg, %struct.Reg* %13677, i32 0, i32 0
  %PC.i2582 = bitcast %union.anon* %13678 to i64*
  %13679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13680 = getelementptr inbounds %struct.GPR, %struct.GPR* %13679, i32 0, i32 1
  %13681 = getelementptr inbounds %struct.Reg, %struct.Reg* %13680, i32 0, i32 0
  %RAX.i2583 = bitcast %union.anon* %13681 to i64*
  %13682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13683 = getelementptr inbounds %struct.GPR, %struct.GPR* %13682, i32 0, i32 5
  %13684 = getelementptr inbounds %struct.Reg, %struct.Reg* %13683, i32 0, i32 0
  %RCX.i2584 = bitcast %union.anon* %13684 to i64*
  %13685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13686 = getelementptr inbounds %struct.GPR, %struct.GPR* %13685, i32 0, i32 11
  %13687 = getelementptr inbounds %struct.Reg, %struct.Reg* %13686, i32 0, i32 0
  %RDI.i2585 = bitcast %union.anon* %13687 to i64*
  %13688 = load i64, i64* %RAX.i2583
  %13689 = load i64, i64* %RCX.i2584
  %13690 = mul i64 %13689, 4
  %13691 = add i64 %13690, %13688
  %13692 = load i64, i64* %PC.i2582
  %13693 = add i64 %13692, 3
  store i64 %13693, i64* %PC.i2582
  %13694 = inttoptr i64 %13691 to i32*
  %13695 = load i32, i32* %13694
  %13696 = zext i32 %13695 to i64
  store i64 %13696, i64* %RDI.i2585, align 8
  store %struct.Memory* %loadMem_4ab21a, %struct.Memory** %MEMORY
  %loadMem1_4ab21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13698 = getelementptr inbounds %struct.GPR, %struct.GPR* %13697, i32 0, i32 33
  %13699 = getelementptr inbounds %struct.Reg, %struct.Reg* %13698, i32 0, i32 0
  %PC.i2581 = bitcast %union.anon* %13699 to i64*
  %13700 = load i64, i64* %PC.i2581
  %13701 = add i64 %13700, -696861
  %13702 = load i64, i64* %PC.i2581
  %13703 = add i64 %13702, 5
  %13704 = load i64, i64* %PC.i2581
  %13705 = add i64 %13704, 5
  store i64 %13705, i64* %PC.i2581
  %13706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13707 = load i64, i64* %13706, align 8
  %13708 = add i64 %13707, -8
  %13709 = inttoptr i64 %13708 to i64*
  store i64 %13703, i64* %13709
  store i64 %13708, i64* %13706, align 8
  %13710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13701, i64* %13710, align 8
  store %struct.Memory* %loadMem1_4ab21d, %struct.Memory** %MEMORY
  %loadMem2_4ab21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4ab21d = load i64, i64* %3
  %13711 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_4ab21d)
  store %struct.Memory* %13711, %struct.Memory** %MEMORY
  %loadMem_4ab222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13713 = getelementptr inbounds %struct.GPR, %struct.GPR* %13712, i32 0, i32 33
  %13714 = getelementptr inbounds %struct.Reg, %struct.Reg* %13713, i32 0, i32 0
  %PC.i2577 = bitcast %union.anon* %13714 to i64*
  %13715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13716 = getelementptr inbounds %struct.GPR, %struct.GPR* %13715, i32 0, i32 5
  %13717 = getelementptr inbounds %struct.Reg, %struct.Reg* %13716, i32 0, i32 0
  %RCX.i2578 = bitcast %union.anon* %13717 to i64*
  %13718 = load i64, i64* %PC.i2577
  %13719 = add i64 %13718, 10
  store i64 %13719, i64* %PC.i2577
  store i64 7156720, i64* %RCX.i2578, align 8
  store %struct.Memory* %loadMem_4ab222, %struct.Memory** %MEMORY
  %loadMem_4ab22c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13721 = getelementptr inbounds %struct.GPR, %struct.GPR* %13720, i32 0, i32 33
  %13722 = getelementptr inbounds %struct.Reg, %struct.Reg* %13721, i32 0, i32 0
  %PC.i2575 = bitcast %union.anon* %13722 to i64*
  %13723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13724 = getelementptr inbounds %struct.GPR, %struct.GPR* %13723, i32 0, i32 7
  %13725 = getelementptr inbounds %struct.Reg, %struct.Reg* %13724, i32 0, i32 0
  %RDX.i2576 = bitcast %union.anon* %13725 to i64*
  %13726 = load i64, i64* %PC.i2575
  %13727 = add i64 %13726, 10
  store i64 %13727, i64* %PC.i2575
  store i64 ptrtoint (%G__0x6d0bc0_type* @G__0x6d0bc0 to i64), i64* %RDX.i2576, align 8
  store %struct.Memory* %loadMem_4ab22c, %struct.Memory** %MEMORY
  %loadMem_4ab236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13729 = getelementptr inbounds %struct.GPR, %struct.GPR* %13728, i32 0, i32 33
  %13730 = getelementptr inbounds %struct.Reg, %struct.Reg* %13729, i32 0, i32 0
  %PC.i2572 = bitcast %union.anon* %13730 to i64*
  %13731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13732 = getelementptr inbounds %struct.GPR, %struct.GPR* %13731, i32 0, i32 9
  %13733 = getelementptr inbounds %struct.Reg, %struct.Reg* %13732, i32 0, i32 0
  %RSI.i2573 = bitcast %union.anon* %13733 to i64*
  %13734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13735 = getelementptr inbounds %struct.GPR, %struct.GPR* %13734, i32 0, i32 15
  %13736 = getelementptr inbounds %struct.Reg, %struct.Reg* %13735, i32 0, i32 0
  %RBP.i2574 = bitcast %union.anon* %13736 to i64*
  %13737 = load i64, i64* %RBP.i2574
  %13738 = sub i64 %13737, 64
  %13739 = load i64, i64* %PC.i2572
  %13740 = add i64 %13739, 4
  store i64 %13740, i64* %PC.i2572
  %13741 = inttoptr i64 %13738 to i32*
  %13742 = load i32, i32* %13741
  %13743 = sext i32 %13742 to i64
  store i64 %13743, i64* %RSI.i2573, align 8
  store %struct.Memory* %loadMem_4ab236, %struct.Memory** %MEMORY
  %loadMem_4ab23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13745 = getelementptr inbounds %struct.GPR, %struct.GPR* %13744, i32 0, i32 33
  %13746 = getelementptr inbounds %struct.Reg, %struct.Reg* %13745, i32 0, i32 0
  %PC.i2570 = bitcast %union.anon* %13746 to i64*
  %13747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13748 = getelementptr inbounds %struct.GPR, %struct.GPR* %13747, i32 0, i32 9
  %13749 = getelementptr inbounds %struct.Reg, %struct.Reg* %13748, i32 0, i32 0
  %RSI.i2571 = bitcast %union.anon* %13749 to i64*
  %13750 = load i64, i64* %RSI.i2571
  %13751 = load i64, i64* %PC.i2570
  %13752 = add i64 %13751, 4
  store i64 %13752, i64* %PC.i2570
  %13753 = shl i64 %13750, 7
  %13754 = icmp slt i64 %13753, 0
  %13755 = shl i64 %13753, 1
  store i64 %13755, i64* %RSI.i2571, align 8
  %13756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13757 = zext i1 %13754 to i8
  store i8 %13757, i8* %13756, align 1
  %13758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13759 = trunc i64 %13755 to i32
  store i8 1, i8* %13758, align 1
  %13760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13760, align 1
  %13761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13762 = icmp eq i64 %13755, 0
  %13763 = zext i1 %13762 to i8
  store i8 %13763, i8* %13761, align 1
  %13764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13765 = lshr i64 %13755, 63
  %13766 = trunc i64 %13765 to i8
  store i8 %13766, i8* %13764, align 1
  %13767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13767, align 1
  store %struct.Memory* %loadMem_4ab23a, %struct.Memory** %MEMORY
  %loadMem_4ab23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13769 = getelementptr inbounds %struct.GPR, %struct.GPR* %13768, i32 0, i32 33
  %13770 = getelementptr inbounds %struct.Reg, %struct.Reg* %13769, i32 0, i32 0
  %PC.i2567 = bitcast %union.anon* %13770 to i64*
  %13771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13772 = getelementptr inbounds %struct.GPR, %struct.GPR* %13771, i32 0, i32 7
  %13773 = getelementptr inbounds %struct.Reg, %struct.Reg* %13772, i32 0, i32 0
  %RDX.i2568 = bitcast %union.anon* %13773 to i64*
  %13774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13775 = getelementptr inbounds %struct.GPR, %struct.GPR* %13774, i32 0, i32 9
  %13776 = getelementptr inbounds %struct.Reg, %struct.Reg* %13775, i32 0, i32 0
  %RSI.i2569 = bitcast %union.anon* %13776 to i64*
  %13777 = load i64, i64* %RDX.i2568
  %13778 = load i64, i64* %RSI.i2569
  %13779 = load i64, i64* %PC.i2567
  %13780 = add i64 %13779, 3
  store i64 %13780, i64* %PC.i2567
  %13781 = add i64 %13778, %13777
  store i64 %13781, i64* %RDX.i2568, align 8
  %13782 = icmp ult i64 %13781, %13777
  %13783 = icmp ult i64 %13781, %13778
  %13784 = or i1 %13782, %13783
  %13785 = zext i1 %13784 to i8
  %13786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13785, i8* %13786, align 1
  %13787 = trunc i64 %13781 to i32
  %13788 = and i32 %13787, 255
  %13789 = call i32 @llvm.ctpop.i32(i32 %13788)
  %13790 = trunc i32 %13789 to i8
  %13791 = and i8 %13790, 1
  %13792 = xor i8 %13791, 1
  %13793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13792, i8* %13793, align 1
  %13794 = xor i64 %13778, %13777
  %13795 = xor i64 %13794, %13781
  %13796 = lshr i64 %13795, 4
  %13797 = trunc i64 %13796 to i8
  %13798 = and i8 %13797, 1
  %13799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13798, i8* %13799, align 1
  %13800 = icmp eq i64 %13781, 0
  %13801 = zext i1 %13800 to i8
  %13802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13801, i8* %13802, align 1
  %13803 = lshr i64 %13781, 63
  %13804 = trunc i64 %13803 to i8
  %13805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13804, i8* %13805, align 1
  %13806 = lshr i64 %13777, 63
  %13807 = lshr i64 %13778, 63
  %13808 = xor i64 %13803, %13806
  %13809 = xor i64 %13803, %13807
  %13810 = add i64 %13808, %13809
  %13811 = icmp eq i64 %13810, 2
  %13812 = zext i1 %13811 to i8
  %13813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13812, i8* %13813, align 1
  store %struct.Memory* %loadMem_4ab23e, %struct.Memory** %MEMORY
  %loadMem_4ab241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13815 = getelementptr inbounds %struct.GPR, %struct.GPR* %13814, i32 0, i32 33
  %13816 = getelementptr inbounds %struct.Reg, %struct.Reg* %13815, i32 0, i32 0
  %PC.i2564 = bitcast %union.anon* %13816 to i64*
  %13817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13818 = getelementptr inbounds %struct.GPR, %struct.GPR* %13817, i32 0, i32 9
  %13819 = getelementptr inbounds %struct.Reg, %struct.Reg* %13818, i32 0, i32 0
  %RSI.i2565 = bitcast %union.anon* %13819 to i64*
  %13820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13821 = getelementptr inbounds %struct.GPR, %struct.GPR* %13820, i32 0, i32 15
  %13822 = getelementptr inbounds %struct.Reg, %struct.Reg* %13821, i32 0, i32 0
  %RBP.i2566 = bitcast %union.anon* %13822 to i64*
  %13823 = load i64, i64* %RBP.i2566
  %13824 = sub i64 %13823, 24
  %13825 = load i64, i64* %PC.i2564
  %13826 = add i64 %13825, 4
  store i64 %13826, i64* %PC.i2564
  %13827 = inttoptr i64 %13824 to i32*
  %13828 = load i32, i32* %13827
  %13829 = sext i32 %13828 to i64
  store i64 %13829, i64* %RSI.i2565, align 8
  store %struct.Memory* %loadMem_4ab241, %struct.Memory** %MEMORY
  %loadMem_4ab245 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13831 = getelementptr inbounds %struct.GPR, %struct.GPR* %13830, i32 0, i32 33
  %13832 = getelementptr inbounds %struct.Reg, %struct.Reg* %13831, i32 0, i32 0
  %PC.i2562 = bitcast %union.anon* %13832 to i64*
  %13833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13834 = getelementptr inbounds %struct.GPR, %struct.GPR* %13833, i32 0, i32 9
  %13835 = getelementptr inbounds %struct.Reg, %struct.Reg* %13834, i32 0, i32 0
  %RSI.i2563 = bitcast %union.anon* %13835 to i64*
  %13836 = load i64, i64* %RSI.i2563
  %13837 = load i64, i64* %PC.i2562
  %13838 = add i64 %13837, 4
  store i64 %13838, i64* %PC.i2562
  %13839 = shl i64 %13836, 4
  %13840 = icmp slt i64 %13839, 0
  %13841 = shl i64 %13839, 1
  store i64 %13841, i64* %RSI.i2563, align 8
  %13842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13843 = zext i1 %13840 to i8
  store i8 %13843, i8* %13842, align 1
  %13844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13845 = trunc i64 %13841 to i32
  %13846 = and i32 %13845, 254
  %13847 = call i32 @llvm.ctpop.i32(i32 %13846)
  %13848 = trunc i32 %13847 to i8
  %13849 = and i8 %13848, 1
  %13850 = xor i8 %13849, 1
  store i8 %13850, i8* %13844, align 1
  %13851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13851, align 1
  %13852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13853 = icmp eq i64 %13841, 0
  %13854 = zext i1 %13853 to i8
  store i8 %13854, i8* %13852, align 1
  %13855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13856 = lshr i64 %13841, 63
  %13857 = trunc i64 %13856 to i8
  store i8 %13857, i8* %13855, align 1
  %13858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13858, align 1
  store %struct.Memory* %loadMem_4ab245, %struct.Memory** %MEMORY
  %loadMem_4ab249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13860 = getelementptr inbounds %struct.GPR, %struct.GPR* %13859, i32 0, i32 33
  %13861 = getelementptr inbounds %struct.Reg, %struct.Reg* %13860, i32 0, i32 0
  %PC.i2559 = bitcast %union.anon* %13861 to i64*
  %13862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13863 = getelementptr inbounds %struct.GPR, %struct.GPR* %13862, i32 0, i32 7
  %13864 = getelementptr inbounds %struct.Reg, %struct.Reg* %13863, i32 0, i32 0
  %RDX.i2560 = bitcast %union.anon* %13864 to i64*
  %13865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13866 = getelementptr inbounds %struct.GPR, %struct.GPR* %13865, i32 0, i32 9
  %13867 = getelementptr inbounds %struct.Reg, %struct.Reg* %13866, i32 0, i32 0
  %RSI.i2561 = bitcast %union.anon* %13867 to i64*
  %13868 = load i64, i64* %RDX.i2560
  %13869 = load i64, i64* %RSI.i2561
  %13870 = load i64, i64* %PC.i2559
  %13871 = add i64 %13870, 3
  store i64 %13871, i64* %PC.i2559
  %13872 = add i64 %13869, %13868
  store i64 %13872, i64* %RDX.i2560, align 8
  %13873 = icmp ult i64 %13872, %13868
  %13874 = icmp ult i64 %13872, %13869
  %13875 = or i1 %13873, %13874
  %13876 = zext i1 %13875 to i8
  %13877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13876, i8* %13877, align 1
  %13878 = trunc i64 %13872 to i32
  %13879 = and i32 %13878, 255
  %13880 = call i32 @llvm.ctpop.i32(i32 %13879)
  %13881 = trunc i32 %13880 to i8
  %13882 = and i8 %13881, 1
  %13883 = xor i8 %13882, 1
  %13884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13883, i8* %13884, align 1
  %13885 = xor i64 %13869, %13868
  %13886 = xor i64 %13885, %13872
  %13887 = lshr i64 %13886, 4
  %13888 = trunc i64 %13887 to i8
  %13889 = and i8 %13888, 1
  %13890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13889, i8* %13890, align 1
  %13891 = icmp eq i64 %13872, 0
  %13892 = zext i1 %13891 to i8
  %13893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13892, i8* %13893, align 1
  %13894 = lshr i64 %13872, 63
  %13895 = trunc i64 %13894 to i8
  %13896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13895, i8* %13896, align 1
  %13897 = lshr i64 %13868, 63
  %13898 = lshr i64 %13869, 63
  %13899 = xor i64 %13894, %13897
  %13900 = xor i64 %13894, %13898
  %13901 = add i64 %13899, %13900
  %13902 = icmp eq i64 %13901, 2
  %13903 = zext i1 %13902 to i8
  %13904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13903, i8* %13904, align 1
  store %struct.Memory* %loadMem_4ab249, %struct.Memory** %MEMORY
  %loadMem_4ab24c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13906 = getelementptr inbounds %struct.GPR, %struct.GPR* %13905, i32 0, i32 33
  %13907 = getelementptr inbounds %struct.Reg, %struct.Reg* %13906, i32 0, i32 0
  %PC.i2556 = bitcast %union.anon* %13907 to i64*
  %13908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13909 = getelementptr inbounds %struct.GPR, %struct.GPR* %13908, i32 0, i32 9
  %13910 = getelementptr inbounds %struct.Reg, %struct.Reg* %13909, i32 0, i32 0
  %RSI.i2557 = bitcast %union.anon* %13910 to i64*
  %13911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13912 = getelementptr inbounds %struct.GPR, %struct.GPR* %13911, i32 0, i32 15
  %13913 = getelementptr inbounds %struct.Reg, %struct.Reg* %13912, i32 0, i32 0
  %RBP.i2558 = bitcast %union.anon* %13913 to i64*
  %13914 = load i64, i64* %RBP.i2558
  %13915 = sub i64 %13914, 28
  %13916 = load i64, i64* %PC.i2556
  %13917 = add i64 %13916, 4
  store i64 %13917, i64* %PC.i2556
  %13918 = inttoptr i64 %13915 to i32*
  %13919 = load i32, i32* %13918
  %13920 = sext i32 %13919 to i64
  store i64 %13920, i64* %RSI.i2557, align 8
  store %struct.Memory* %loadMem_4ab24c, %struct.Memory** %MEMORY
  %loadMem_4ab250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13922 = getelementptr inbounds %struct.GPR, %struct.GPR* %13921, i32 0, i32 33
  %13923 = getelementptr inbounds %struct.Reg, %struct.Reg* %13922, i32 0, i32 0
  %PC.i2552 = bitcast %union.anon* %13923 to i64*
  %13924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13925 = getelementptr inbounds %struct.GPR, %struct.GPR* %13924, i32 0, i32 1
  %13926 = getelementptr inbounds %struct.Reg, %struct.Reg* %13925, i32 0, i32 0
  %RAX.i2553 = bitcast %union.anon* %13926 to i64*
  %13927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13928 = getelementptr inbounds %struct.GPR, %struct.GPR* %13927, i32 0, i32 7
  %13929 = getelementptr inbounds %struct.Reg, %struct.Reg* %13928, i32 0, i32 0
  %RDX.i2554 = bitcast %union.anon* %13929 to i64*
  %13930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13931 = getelementptr inbounds %struct.GPR, %struct.GPR* %13930, i32 0, i32 9
  %13932 = getelementptr inbounds %struct.Reg, %struct.Reg* %13931, i32 0, i32 0
  %RSI.i2555 = bitcast %union.anon* %13932 to i64*
  %13933 = load i64, i64* %RAX.i2553
  %13934 = load i64, i64* %RDX.i2554
  %13935 = load i64, i64* %RSI.i2555
  %13936 = mul i64 %13935, 4
  %13937 = add i64 %13936, %13934
  %13938 = load i64, i64* %PC.i2552
  %13939 = add i64 %13938, 4
  store i64 %13939, i64* %PC.i2552
  %13940 = inttoptr i64 %13937 to i32*
  %13941 = load i32, i32* %13940
  %13942 = shl i64 %13933, 32
  %13943 = ashr exact i64 %13942, 32
  %13944 = sext i32 %13941 to i64
  %13945 = mul i64 %13944, %13943
  %13946 = trunc i64 %13945 to i32
  %13947 = and i64 %13945, 4294967295
  store i64 %13947, i64* %RAX.i2553, align 8
  %13948 = shl i64 %13945, 32
  %13949 = ashr exact i64 %13948, 32
  %13950 = icmp ne i64 %13949, %13945
  %13951 = zext i1 %13950 to i8
  %13952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13951, i8* %13952, align 1
  %13953 = and i32 %13946, 255
  %13954 = call i32 @llvm.ctpop.i32(i32 %13953)
  %13955 = trunc i32 %13954 to i8
  %13956 = and i8 %13955, 1
  %13957 = xor i8 %13956, 1
  %13958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13957, i8* %13958, align 1
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13959, align 1
  %13960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13960, align 1
  %13961 = lshr i32 %13946, 31
  %13962 = trunc i32 %13961 to i8
  %13963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13962, i8* %13963, align 1
  %13964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13951, i8* %13964, align 1
  store %struct.Memory* %loadMem_4ab250, %struct.Memory** %MEMORY
  %loadMem_4ab254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13966 = getelementptr inbounds %struct.GPR, %struct.GPR* %13965, i32 0, i32 33
  %13967 = getelementptr inbounds %struct.Reg, %struct.Reg* %13966, i32 0, i32 0
  %PC.i2549 = bitcast %union.anon* %13967 to i64*
  %13968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13969 = getelementptr inbounds %struct.GPR, %struct.GPR* %13968, i32 0, i32 7
  %13970 = getelementptr inbounds %struct.Reg, %struct.Reg* %13969, i32 0, i32 0
  %RDX.i2550 = bitcast %union.anon* %13970 to i64*
  %13971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13972 = getelementptr inbounds %struct.GPR, %struct.GPR* %13971, i32 0, i32 15
  %13973 = getelementptr inbounds %struct.Reg, %struct.Reg* %13972, i32 0, i32 0
  %RBP.i2551 = bitcast %union.anon* %13973 to i64*
  %13974 = load i64, i64* %RBP.i2551
  %13975 = sub i64 %13974, 60
  %13976 = load i64, i64* %PC.i2549
  %13977 = add i64 %13976, 4
  store i64 %13977, i64* %PC.i2549
  %13978 = inttoptr i64 %13975 to i32*
  %13979 = load i32, i32* %13978
  %13980 = sext i32 %13979 to i64
  store i64 %13980, i64* %RDX.i2550, align 8
  store %struct.Memory* %loadMem_4ab254, %struct.Memory** %MEMORY
  %loadMem_4ab258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13982 = getelementptr inbounds %struct.GPR, %struct.GPR* %13981, i32 0, i32 33
  %13983 = getelementptr inbounds %struct.Reg, %struct.Reg* %13982, i32 0, i32 0
  %PC.i2547 = bitcast %union.anon* %13983 to i64*
  %13984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13985 = getelementptr inbounds %struct.GPR, %struct.GPR* %13984, i32 0, i32 7
  %13986 = getelementptr inbounds %struct.Reg, %struct.Reg* %13985, i32 0, i32 0
  %RDX.i2548 = bitcast %union.anon* %13986 to i64*
  %13987 = load i64, i64* %RDX.i2548
  %13988 = load i64, i64* %PC.i2547
  %13989 = add i64 %13988, 4
  store i64 %13989, i64* %PC.i2547
  %13990 = shl i64 %13987, 7
  %13991 = icmp slt i64 %13990, 0
  %13992 = shl i64 %13990, 1
  store i64 %13992, i64* %RDX.i2548, align 8
  %13993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13994 = zext i1 %13991 to i8
  store i8 %13994, i8* %13993, align 1
  %13995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13996 = trunc i64 %13992 to i32
  store i8 1, i8* %13995, align 1
  %13997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13997, align 1
  %13998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13999 = icmp eq i64 %13992, 0
  %14000 = zext i1 %13999 to i8
  store i8 %14000, i8* %13998, align 1
  %14001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14002 = lshr i64 %13992, 63
  %14003 = trunc i64 %14002 to i8
  store i8 %14003, i8* %14001, align 1
  %14004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14004, align 1
  store %struct.Memory* %loadMem_4ab258, %struct.Memory** %MEMORY
  %loadMem_4ab25c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14006 = getelementptr inbounds %struct.GPR, %struct.GPR* %14005, i32 0, i32 33
  %14007 = getelementptr inbounds %struct.Reg, %struct.Reg* %14006, i32 0, i32 0
  %PC.i2544 = bitcast %union.anon* %14007 to i64*
  %14008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14009 = getelementptr inbounds %struct.GPR, %struct.GPR* %14008, i32 0, i32 5
  %14010 = getelementptr inbounds %struct.Reg, %struct.Reg* %14009, i32 0, i32 0
  %RCX.i2545 = bitcast %union.anon* %14010 to i64*
  %14011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14012 = getelementptr inbounds %struct.GPR, %struct.GPR* %14011, i32 0, i32 7
  %14013 = getelementptr inbounds %struct.Reg, %struct.Reg* %14012, i32 0, i32 0
  %RDX.i2546 = bitcast %union.anon* %14013 to i64*
  %14014 = load i64, i64* %RCX.i2545
  %14015 = load i64, i64* %RDX.i2546
  %14016 = load i64, i64* %PC.i2544
  %14017 = add i64 %14016, 3
  store i64 %14017, i64* %PC.i2544
  %14018 = add i64 %14015, %14014
  store i64 %14018, i64* %RCX.i2545, align 8
  %14019 = icmp ult i64 %14018, %14014
  %14020 = icmp ult i64 %14018, %14015
  %14021 = or i1 %14019, %14020
  %14022 = zext i1 %14021 to i8
  %14023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14022, i8* %14023, align 1
  %14024 = trunc i64 %14018 to i32
  %14025 = and i32 %14024, 255
  %14026 = call i32 @llvm.ctpop.i32(i32 %14025)
  %14027 = trunc i32 %14026 to i8
  %14028 = and i8 %14027, 1
  %14029 = xor i8 %14028, 1
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14029, i8* %14030, align 1
  %14031 = xor i64 %14015, %14014
  %14032 = xor i64 %14031, %14018
  %14033 = lshr i64 %14032, 4
  %14034 = trunc i64 %14033 to i8
  %14035 = and i8 %14034, 1
  %14036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14035, i8* %14036, align 1
  %14037 = icmp eq i64 %14018, 0
  %14038 = zext i1 %14037 to i8
  %14039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14038, i8* %14039, align 1
  %14040 = lshr i64 %14018, 63
  %14041 = trunc i64 %14040 to i8
  %14042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14041, i8* %14042, align 1
  %14043 = lshr i64 %14014, 63
  %14044 = lshr i64 %14015, 63
  %14045 = xor i64 %14040, %14043
  %14046 = xor i64 %14040, %14044
  %14047 = add i64 %14045, %14046
  %14048 = icmp eq i64 %14047, 2
  %14049 = zext i1 %14048 to i8
  %14050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14049, i8* %14050, align 1
  store %struct.Memory* %loadMem_4ab25c, %struct.Memory** %MEMORY
  %loadMem_4ab25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14052 = getelementptr inbounds %struct.GPR, %struct.GPR* %14051, i32 0, i32 33
  %14053 = getelementptr inbounds %struct.Reg, %struct.Reg* %14052, i32 0, i32 0
  %PC.i2541 = bitcast %union.anon* %14053 to i64*
  %14054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14055 = getelementptr inbounds %struct.GPR, %struct.GPR* %14054, i32 0, i32 7
  %14056 = getelementptr inbounds %struct.Reg, %struct.Reg* %14055, i32 0, i32 0
  %RDX.i2542 = bitcast %union.anon* %14056 to i64*
  %14057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14058 = getelementptr inbounds %struct.GPR, %struct.GPR* %14057, i32 0, i32 15
  %14059 = getelementptr inbounds %struct.Reg, %struct.Reg* %14058, i32 0, i32 0
  %RBP.i2543 = bitcast %union.anon* %14059 to i64*
  %14060 = load i64, i64* %RBP.i2543
  %14061 = sub i64 %14060, 24
  %14062 = load i64, i64* %PC.i2541
  %14063 = add i64 %14062, 4
  store i64 %14063, i64* %PC.i2541
  %14064 = inttoptr i64 %14061 to i32*
  %14065 = load i32, i32* %14064
  %14066 = sext i32 %14065 to i64
  store i64 %14066, i64* %RDX.i2542, align 8
  store %struct.Memory* %loadMem_4ab25f, %struct.Memory** %MEMORY
  %loadMem_4ab263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14068 = getelementptr inbounds %struct.GPR, %struct.GPR* %14067, i32 0, i32 33
  %14069 = getelementptr inbounds %struct.Reg, %struct.Reg* %14068, i32 0, i32 0
  %PC.i2539 = bitcast %union.anon* %14069 to i64*
  %14070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14071 = getelementptr inbounds %struct.GPR, %struct.GPR* %14070, i32 0, i32 7
  %14072 = getelementptr inbounds %struct.Reg, %struct.Reg* %14071, i32 0, i32 0
  %RDX.i2540 = bitcast %union.anon* %14072 to i64*
  %14073 = load i64, i64* %RDX.i2540
  %14074 = load i64, i64* %PC.i2539
  %14075 = add i64 %14074, 4
  store i64 %14075, i64* %PC.i2539
  %14076 = shl i64 %14073, 4
  %14077 = icmp slt i64 %14076, 0
  %14078 = shl i64 %14076, 1
  store i64 %14078, i64* %RDX.i2540, align 8
  %14079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14080 = zext i1 %14077 to i8
  store i8 %14080, i8* %14079, align 1
  %14081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14082 = trunc i64 %14078 to i32
  %14083 = and i32 %14082, 254
  %14084 = call i32 @llvm.ctpop.i32(i32 %14083)
  %14085 = trunc i32 %14084 to i8
  %14086 = and i8 %14085, 1
  %14087 = xor i8 %14086, 1
  store i8 %14087, i8* %14081, align 1
  %14088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14088, align 1
  %14089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14090 = icmp eq i64 %14078, 0
  %14091 = zext i1 %14090 to i8
  store i8 %14091, i8* %14089, align 1
  %14092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14093 = lshr i64 %14078, 63
  %14094 = trunc i64 %14093 to i8
  store i8 %14094, i8* %14092, align 1
  %14095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14095, align 1
  store %struct.Memory* %loadMem_4ab263, %struct.Memory** %MEMORY
  %loadMem_4ab267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14097 = getelementptr inbounds %struct.GPR, %struct.GPR* %14096, i32 0, i32 33
  %14098 = getelementptr inbounds %struct.Reg, %struct.Reg* %14097, i32 0, i32 0
  %PC.i2536 = bitcast %union.anon* %14098 to i64*
  %14099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14100 = getelementptr inbounds %struct.GPR, %struct.GPR* %14099, i32 0, i32 5
  %14101 = getelementptr inbounds %struct.Reg, %struct.Reg* %14100, i32 0, i32 0
  %RCX.i2537 = bitcast %union.anon* %14101 to i64*
  %14102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14103 = getelementptr inbounds %struct.GPR, %struct.GPR* %14102, i32 0, i32 7
  %14104 = getelementptr inbounds %struct.Reg, %struct.Reg* %14103, i32 0, i32 0
  %RDX.i2538 = bitcast %union.anon* %14104 to i64*
  %14105 = load i64, i64* %RCX.i2537
  %14106 = load i64, i64* %RDX.i2538
  %14107 = load i64, i64* %PC.i2536
  %14108 = add i64 %14107, 3
  store i64 %14108, i64* %PC.i2536
  %14109 = add i64 %14106, %14105
  store i64 %14109, i64* %RCX.i2537, align 8
  %14110 = icmp ult i64 %14109, %14105
  %14111 = icmp ult i64 %14109, %14106
  %14112 = or i1 %14110, %14111
  %14113 = zext i1 %14112 to i8
  %14114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14113, i8* %14114, align 1
  %14115 = trunc i64 %14109 to i32
  %14116 = and i32 %14115, 255
  %14117 = call i32 @llvm.ctpop.i32(i32 %14116)
  %14118 = trunc i32 %14117 to i8
  %14119 = and i8 %14118, 1
  %14120 = xor i8 %14119, 1
  %14121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14120, i8* %14121, align 1
  %14122 = xor i64 %14106, %14105
  %14123 = xor i64 %14122, %14109
  %14124 = lshr i64 %14123, 4
  %14125 = trunc i64 %14124 to i8
  %14126 = and i8 %14125, 1
  %14127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14126, i8* %14127, align 1
  %14128 = icmp eq i64 %14109, 0
  %14129 = zext i1 %14128 to i8
  %14130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14129, i8* %14130, align 1
  %14131 = lshr i64 %14109, 63
  %14132 = trunc i64 %14131 to i8
  %14133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14132, i8* %14133, align 1
  %14134 = lshr i64 %14105, 63
  %14135 = lshr i64 %14106, 63
  %14136 = xor i64 %14131, %14134
  %14137 = xor i64 %14131, %14135
  %14138 = add i64 %14136, %14137
  %14139 = icmp eq i64 %14138, 2
  %14140 = zext i1 %14139 to i8
  %14141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14140, i8* %14141, align 1
  store %struct.Memory* %loadMem_4ab267, %struct.Memory** %MEMORY
  %loadMem_4ab26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14143 = getelementptr inbounds %struct.GPR, %struct.GPR* %14142, i32 0, i32 33
  %14144 = getelementptr inbounds %struct.Reg, %struct.Reg* %14143, i32 0, i32 0
  %PC.i2533 = bitcast %union.anon* %14144 to i64*
  %14145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14146 = getelementptr inbounds %struct.GPR, %struct.GPR* %14145, i32 0, i32 7
  %14147 = getelementptr inbounds %struct.Reg, %struct.Reg* %14146, i32 0, i32 0
  %RDX.i2534 = bitcast %union.anon* %14147 to i64*
  %14148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14149 = getelementptr inbounds %struct.GPR, %struct.GPR* %14148, i32 0, i32 15
  %14150 = getelementptr inbounds %struct.Reg, %struct.Reg* %14149, i32 0, i32 0
  %RBP.i2535 = bitcast %union.anon* %14150 to i64*
  %14151 = load i64, i64* %RBP.i2535
  %14152 = sub i64 %14151, 28
  %14153 = load i64, i64* %PC.i2533
  %14154 = add i64 %14153, 4
  store i64 %14154, i64* %PC.i2533
  %14155 = inttoptr i64 %14152 to i32*
  %14156 = load i32, i32* %14155
  %14157 = sext i32 %14156 to i64
  store i64 %14157, i64* %RDX.i2534, align 8
  store %struct.Memory* %loadMem_4ab26a, %struct.Memory** %MEMORY
  %loadMem_4ab26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14159 = getelementptr inbounds %struct.GPR, %struct.GPR* %14158, i32 0, i32 33
  %14160 = getelementptr inbounds %struct.Reg, %struct.Reg* %14159, i32 0, i32 0
  %PC.i2529 = bitcast %union.anon* %14160 to i64*
  %14161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14162 = getelementptr inbounds %struct.GPR, %struct.GPR* %14161, i32 0, i32 1
  %14163 = getelementptr inbounds %struct.Reg, %struct.Reg* %14162, i32 0, i32 0
  %RAX.i2530 = bitcast %union.anon* %14163 to i64*
  %14164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14165 = getelementptr inbounds %struct.GPR, %struct.GPR* %14164, i32 0, i32 5
  %14166 = getelementptr inbounds %struct.Reg, %struct.Reg* %14165, i32 0, i32 0
  %RCX.i2531 = bitcast %union.anon* %14166 to i64*
  %14167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14168 = getelementptr inbounds %struct.GPR, %struct.GPR* %14167, i32 0, i32 7
  %14169 = getelementptr inbounds %struct.Reg, %struct.Reg* %14168, i32 0, i32 0
  %RDX.i2532 = bitcast %union.anon* %14169 to i64*
  %14170 = load i64, i64* %RAX.i2530
  %14171 = load i64, i64* %RCX.i2531
  %14172 = load i64, i64* %RDX.i2532
  %14173 = mul i64 %14172, 4
  %14174 = add i64 %14173, %14171
  %14175 = load i64, i64* %PC.i2529
  %14176 = add i64 %14175, 3
  store i64 %14176, i64* %PC.i2529
  %14177 = trunc i64 %14170 to i32
  %14178 = inttoptr i64 %14174 to i32*
  %14179 = load i32, i32* %14178
  %14180 = add i32 %14179, %14177
  %14181 = zext i32 %14180 to i64
  store i64 %14181, i64* %RAX.i2530, align 8
  %14182 = icmp ult i32 %14180, %14177
  %14183 = icmp ult i32 %14180, %14179
  %14184 = or i1 %14182, %14183
  %14185 = zext i1 %14184 to i8
  %14186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14185, i8* %14186, align 1
  %14187 = and i32 %14180, 255
  %14188 = call i32 @llvm.ctpop.i32(i32 %14187)
  %14189 = trunc i32 %14188 to i8
  %14190 = and i8 %14189, 1
  %14191 = xor i8 %14190, 1
  %14192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14191, i8* %14192, align 1
  %14193 = xor i32 %14179, %14177
  %14194 = xor i32 %14193, %14180
  %14195 = lshr i32 %14194, 4
  %14196 = trunc i32 %14195 to i8
  %14197 = and i8 %14196, 1
  %14198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14197, i8* %14198, align 1
  %14199 = icmp eq i32 %14180, 0
  %14200 = zext i1 %14199 to i8
  %14201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14200, i8* %14201, align 1
  %14202 = lshr i32 %14180, 31
  %14203 = trunc i32 %14202 to i8
  %14204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14203, i8* %14204, align 1
  %14205 = lshr i32 %14177, 31
  %14206 = lshr i32 %14179, 31
  %14207 = xor i32 %14202, %14205
  %14208 = xor i32 %14202, %14206
  %14209 = add i32 %14207, %14208
  %14210 = icmp eq i32 %14209, 2
  %14211 = zext i1 %14210 to i8
  %14212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14211, i8* %14212, align 1
  store %struct.Memory* %loadMem_4ab26e, %struct.Memory** %MEMORY
  %loadMem_4ab271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14214 = getelementptr inbounds %struct.GPR, %struct.GPR* %14213, i32 0, i32 33
  %14215 = getelementptr inbounds %struct.Reg, %struct.Reg* %14214, i32 0, i32 0
  %PC.i2526 = bitcast %union.anon* %14215 to i64*
  %14216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14217 = getelementptr inbounds %struct.GPR, %struct.GPR* %14216, i32 0, i32 5
  %14218 = getelementptr inbounds %struct.Reg, %struct.Reg* %14217, i32 0, i32 0
  %RCX.i2527 = bitcast %union.anon* %14218 to i64*
  %14219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14220 = getelementptr inbounds %struct.GPR, %struct.GPR* %14219, i32 0, i32 15
  %14221 = getelementptr inbounds %struct.Reg, %struct.Reg* %14220, i32 0, i32 0
  %RBP.i2528 = bitcast %union.anon* %14221 to i64*
  %14222 = load i64, i64* %RBP.i2528
  %14223 = sub i64 %14222, 68
  %14224 = load i64, i64* %PC.i2526
  %14225 = add i64 %14224, 3
  store i64 %14225, i64* %PC.i2526
  %14226 = inttoptr i64 %14223 to i32*
  %14227 = load i32, i32* %14226
  %14228 = zext i32 %14227 to i64
  store i64 %14228, i64* %RCX.i2527, align 8
  store %struct.Memory* %loadMem_4ab271, %struct.Memory** %MEMORY
  %loadMem_4ab274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14230 = getelementptr inbounds %struct.GPR, %struct.GPR* %14229, i32 0, i32 33
  %14231 = getelementptr inbounds %struct.Reg, %struct.Reg* %14230, i32 0, i32 0
  %PC.i2522 = bitcast %union.anon* %14231 to i64*
  %14232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14233 = getelementptr inbounds %struct.GPR, %struct.GPR* %14232, i32 0, i32 5
  %14234 = getelementptr inbounds %struct.Reg, %struct.Reg* %14233, i32 0, i32 0
  %14235 = bitcast %union.anon* %14234 to %struct.anon.2*
  %CL.i2523 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14235, i32 0, i32 0
  %14236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14237 = getelementptr inbounds %struct.GPR, %struct.GPR* %14236, i32 0, i32 1
  %14238 = getelementptr inbounds %struct.Reg, %struct.Reg* %14237, i32 0, i32 0
  %RAX.i2524 = bitcast %union.anon* %14238 to i64*
  %14239 = load i64, i64* %RAX.i2524
  %14240 = load i8, i8* %CL.i2523
  %14241 = zext i8 %14240 to i64
  %14242 = load i64, i64* %PC.i2522
  %14243 = add i64 %14242, 2
  store i64 %14243, i64* %PC.i2522
  %14244 = trunc i64 %14241 to i5
  switch i5 %14244, label %14248 [
    i5 0, label %routine_sarl__cl___eax.exit2525
    i5 1, label %14245
  ]

; <label>:14245:                                  ; preds = %block_4ab1fd
  %14246 = shl i64 %14239, 32
  %14247 = ashr i64 %14246, 33
  br label %14255

; <label>:14248:                                  ; preds = %block_4ab1fd
  %14249 = and i64 %14241, 31
  %14250 = add i64 %14249, -1
  %14251 = shl i64 %14239, 32
  %14252 = ashr exact i64 %14251, 32
  %14253 = ashr i64 %14252, %14250
  %14254 = lshr i64 %14253, 1
  br label %14255

; <label>:14255:                                  ; preds = %14248, %14245
  %14256 = phi i64 [ %14254, %14248 ], [ %14247, %14245 ]
  %14257 = phi i64 [ %14253, %14248 ], [ %14239, %14245 ]
  %14258 = trunc i64 %14257 to i8
  %14259 = and i8 %14258, 1
  %14260 = trunc i64 %14256 to i32
  %14261 = and i64 %14256, 4294967295
  store i64 %14261, i64* %RAX.i2524, align 8
  %14262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14259, i8* %14262, align 1
  %14263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14264 = and i32 %14260, 255
  %14265 = call i32 @llvm.ctpop.i32(i32 %14264)
  %14266 = trunc i32 %14265 to i8
  %14267 = and i8 %14266, 1
  %14268 = xor i8 %14267, 1
  store i8 %14268, i8* %14263, align 1
  %14269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14269, align 1
  %14270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14271 = icmp eq i32 %14260, 0
  %14272 = zext i1 %14271 to i8
  store i8 %14272, i8* %14270, align 1
  %14273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14274 = lshr i32 %14260, 31
  %14275 = trunc i32 %14274 to i8
  store i8 %14275, i8* %14273, align 1
  %14276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14276, align 1
  br label %routine_sarl__cl___eax.exit2525

routine_sarl__cl___eax.exit2525:                  ; preds = %block_4ab1fd, %14255
  store %struct.Memory* %loadMem_4ab274, %struct.Memory** %MEMORY
  %loadMem_4ab276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14278 = getelementptr inbounds %struct.GPR, %struct.GPR* %14277, i32 0, i32 33
  %14279 = getelementptr inbounds %struct.Reg, %struct.Reg* %14278, i32 0, i32 0
  %PC.i2519 = bitcast %union.anon* %14279 to i64*
  %14280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14281 = getelementptr inbounds %struct.GPR, %struct.GPR* %14280, i32 0, i32 1
  %14282 = getelementptr inbounds %struct.Reg, %struct.Reg* %14281, i32 0, i32 0
  %EAX.i2520 = bitcast %union.anon* %14282 to i32*
  %14283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14284 = getelementptr inbounds %struct.GPR, %struct.GPR* %14283, i32 0, i32 15
  %14285 = getelementptr inbounds %struct.Reg, %struct.Reg* %14284, i32 0, i32 0
  %RBP.i2521 = bitcast %union.anon* %14285 to i64*
  %14286 = load i64, i64* %RBP.i2521
  %14287 = sub i64 %14286, 44
  %14288 = load i32, i32* %EAX.i2520
  %14289 = zext i32 %14288 to i64
  %14290 = load i64, i64* %PC.i2519
  %14291 = add i64 %14290, 3
  store i64 %14291, i64* %PC.i2519
  %14292 = inttoptr i64 %14287 to i32*
  store i32 %14288, i32* %14292
  store %struct.Memory* %loadMem_4ab276, %struct.Memory** %MEMORY
  %loadMem_4ab279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14294 = getelementptr inbounds %struct.GPR, %struct.GPR* %14293, i32 0, i32 33
  %14295 = getelementptr inbounds %struct.Reg, %struct.Reg* %14294, i32 0, i32 0
  %PC.i2518 = bitcast %union.anon* %14295 to i64*
  %14296 = load i64, i64* %PC.i2518
  %14297 = add i64 %14296, 129
  %14298 = load i64, i64* %PC.i2518
  %14299 = add i64 %14298, 5
  store i64 %14299, i64* %PC.i2518
  %14300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14297, i64* %14300, align 8
  store %struct.Memory* %loadMem_4ab279, %struct.Memory** %MEMORY
  br label %block_.L_4ab2fa

block_.L_4ab27e:                                  ; preds = %block_.L_4ab1f3
  %loadMem_4ab27e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14302 = getelementptr inbounds %struct.GPR, %struct.GPR* %14301, i32 0, i32 33
  %14303 = getelementptr inbounds %struct.Reg, %struct.Reg* %14302, i32 0, i32 0
  %PC.i2516 = bitcast %union.anon* %14303 to i64*
  %14304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14305 = getelementptr inbounds %struct.GPR, %struct.GPR* %14304, i32 0, i32 1
  %14306 = getelementptr inbounds %struct.Reg, %struct.Reg* %14305, i32 0, i32 0
  %RAX.i2517 = bitcast %union.anon* %14306 to i64*
  %14307 = load i64, i64* %PC.i2516
  %14308 = add i64 %14307, 8
  store i64 %14308, i64* %PC.i2516
  %14309 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14309, i64* %RAX.i2517, align 8
  store %struct.Memory* %loadMem_4ab27e, %struct.Memory** %MEMORY
  %loadMem_4ab286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14311 = getelementptr inbounds %struct.GPR, %struct.GPR* %14310, i32 0, i32 33
  %14312 = getelementptr inbounds %struct.Reg, %struct.Reg* %14311, i32 0, i32 0
  %PC.i2514 = bitcast %union.anon* %14312 to i64*
  %14313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14314 = getelementptr inbounds %struct.GPR, %struct.GPR* %14313, i32 0, i32 1
  %14315 = getelementptr inbounds %struct.Reg, %struct.Reg* %14314, i32 0, i32 0
  %RAX.i2515 = bitcast %union.anon* %14315 to i64*
  %14316 = load i64, i64* %RAX.i2515
  %14317 = load i64, i64* %PC.i2514
  %14318 = add i64 %14317, 6
  store i64 %14318, i64* %PC.i2514
  %14319 = add i64 13112, %14316
  store i64 %14319, i64* %RAX.i2515, align 8
  %14320 = icmp ult i64 %14319, %14316
  %14321 = icmp ult i64 %14319, 13112
  %14322 = or i1 %14320, %14321
  %14323 = zext i1 %14322 to i8
  %14324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14323, i8* %14324, align 1
  %14325 = trunc i64 %14319 to i32
  %14326 = and i32 %14325, 255
  %14327 = call i32 @llvm.ctpop.i32(i32 %14326)
  %14328 = trunc i32 %14327 to i8
  %14329 = and i8 %14328, 1
  %14330 = xor i8 %14329, 1
  %14331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14330, i8* %14331, align 1
  %14332 = xor i64 13112, %14316
  %14333 = xor i64 %14332, %14319
  %14334 = lshr i64 %14333, 4
  %14335 = trunc i64 %14334 to i8
  %14336 = and i8 %14335, 1
  %14337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14336, i8* %14337, align 1
  %14338 = icmp eq i64 %14319, 0
  %14339 = zext i1 %14338 to i8
  %14340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14339, i8* %14340, align 1
  %14341 = lshr i64 %14319, 63
  %14342 = trunc i64 %14341 to i8
  %14343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14342, i8* %14343, align 1
  %14344 = lshr i64 %14316, 63
  %14345 = xor i64 %14341, %14344
  %14346 = add i64 %14345, %14341
  %14347 = icmp eq i64 %14346, 2
  %14348 = zext i1 %14347 to i8
  %14349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14348, i8* %14349, align 1
  store %struct.Memory* %loadMem_4ab286, %struct.Memory** %MEMORY
  %loadMem_4ab28c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14351 = getelementptr inbounds %struct.GPR, %struct.GPR* %14350, i32 0, i32 33
  %14352 = getelementptr inbounds %struct.Reg, %struct.Reg* %14351, i32 0, i32 0
  %PC.i2511 = bitcast %union.anon* %14352 to i64*
  %14353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14354 = getelementptr inbounds %struct.GPR, %struct.GPR* %14353, i32 0, i32 5
  %14355 = getelementptr inbounds %struct.Reg, %struct.Reg* %14354, i32 0, i32 0
  %RCX.i2512 = bitcast %union.anon* %14355 to i64*
  %14356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14357 = getelementptr inbounds %struct.GPR, %struct.GPR* %14356, i32 0, i32 15
  %14358 = getelementptr inbounds %struct.Reg, %struct.Reg* %14357, i32 0, i32 0
  %RBP.i2513 = bitcast %union.anon* %14358 to i64*
  %14359 = load i64, i64* %RBP.i2513
  %14360 = sub i64 %14359, 24
  %14361 = load i64, i64* %PC.i2511
  %14362 = add i64 %14361, 4
  store i64 %14362, i64* %PC.i2511
  %14363 = inttoptr i64 %14360 to i32*
  %14364 = load i32, i32* %14363
  %14365 = sext i32 %14364 to i64
  store i64 %14365, i64* %RCX.i2512, align 8
  store %struct.Memory* %loadMem_4ab28c, %struct.Memory** %MEMORY
  %loadMem_4ab290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14367 = getelementptr inbounds %struct.GPR, %struct.GPR* %14366, i32 0, i32 33
  %14368 = getelementptr inbounds %struct.Reg, %struct.Reg* %14367, i32 0, i32 0
  %PC.i2509 = bitcast %union.anon* %14368 to i64*
  %14369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14370 = getelementptr inbounds %struct.GPR, %struct.GPR* %14369, i32 0, i32 5
  %14371 = getelementptr inbounds %struct.Reg, %struct.Reg* %14370, i32 0, i32 0
  %RCX.i2510 = bitcast %union.anon* %14371 to i64*
  %14372 = load i64, i64* %RCX.i2510
  %14373 = load i64, i64* %PC.i2509
  %14374 = add i64 %14373, 4
  store i64 %14374, i64* %PC.i2509
  %14375 = shl i64 %14372, 5
  %14376 = icmp slt i64 %14375, 0
  %14377 = shl i64 %14375, 1
  store i64 %14377, i64* %RCX.i2510, align 8
  %14378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14379 = zext i1 %14376 to i8
  store i8 %14379, i8* %14378, align 1
  %14380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14381 = trunc i64 %14377 to i32
  %14382 = and i32 %14381, 254
  %14383 = call i32 @llvm.ctpop.i32(i32 %14382)
  %14384 = trunc i32 %14383 to i8
  %14385 = and i8 %14384, 1
  %14386 = xor i8 %14385, 1
  store i8 %14386, i8* %14380, align 1
  %14387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14387, align 1
  %14388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14389 = icmp eq i64 %14377, 0
  %14390 = zext i1 %14389 to i8
  store i8 %14390, i8* %14388, align 1
  %14391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14392 = lshr i64 %14377, 63
  %14393 = trunc i64 %14392 to i8
  store i8 %14393, i8* %14391, align 1
  %14394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14394, align 1
  store %struct.Memory* %loadMem_4ab290, %struct.Memory** %MEMORY
  %loadMem_4ab294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14396 = getelementptr inbounds %struct.GPR, %struct.GPR* %14395, i32 0, i32 33
  %14397 = getelementptr inbounds %struct.Reg, %struct.Reg* %14396, i32 0, i32 0
  %PC.i2506 = bitcast %union.anon* %14397 to i64*
  %14398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14399 = getelementptr inbounds %struct.GPR, %struct.GPR* %14398, i32 0, i32 1
  %14400 = getelementptr inbounds %struct.Reg, %struct.Reg* %14399, i32 0, i32 0
  %RAX.i2507 = bitcast %union.anon* %14400 to i64*
  %14401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14402 = getelementptr inbounds %struct.GPR, %struct.GPR* %14401, i32 0, i32 5
  %14403 = getelementptr inbounds %struct.Reg, %struct.Reg* %14402, i32 0, i32 0
  %RCX.i2508 = bitcast %union.anon* %14403 to i64*
  %14404 = load i64, i64* %RAX.i2507
  %14405 = load i64, i64* %RCX.i2508
  %14406 = load i64, i64* %PC.i2506
  %14407 = add i64 %14406, 3
  store i64 %14407, i64* %PC.i2506
  %14408 = add i64 %14405, %14404
  store i64 %14408, i64* %RAX.i2507, align 8
  %14409 = icmp ult i64 %14408, %14404
  %14410 = icmp ult i64 %14408, %14405
  %14411 = or i1 %14409, %14410
  %14412 = zext i1 %14411 to i8
  %14413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14412, i8* %14413, align 1
  %14414 = trunc i64 %14408 to i32
  %14415 = and i32 %14414, 255
  %14416 = call i32 @llvm.ctpop.i32(i32 %14415)
  %14417 = trunc i32 %14416 to i8
  %14418 = and i8 %14417, 1
  %14419 = xor i8 %14418, 1
  %14420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14419, i8* %14420, align 1
  %14421 = xor i64 %14405, %14404
  %14422 = xor i64 %14421, %14408
  %14423 = lshr i64 %14422, 4
  %14424 = trunc i64 %14423 to i8
  %14425 = and i8 %14424, 1
  %14426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14425, i8* %14426, align 1
  %14427 = icmp eq i64 %14408, 0
  %14428 = zext i1 %14427 to i8
  %14429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14428, i8* %14429, align 1
  %14430 = lshr i64 %14408, 63
  %14431 = trunc i64 %14430 to i8
  %14432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14431, i8* %14432, align 1
  %14433 = lshr i64 %14404, 63
  %14434 = lshr i64 %14405, 63
  %14435 = xor i64 %14430, %14433
  %14436 = xor i64 %14430, %14434
  %14437 = add i64 %14435, %14436
  %14438 = icmp eq i64 %14437, 2
  %14439 = zext i1 %14438 to i8
  %14440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14439, i8* %14440, align 1
  store %struct.Memory* %loadMem_4ab294, %struct.Memory** %MEMORY
  %loadMem_4ab297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14442 = getelementptr inbounds %struct.GPR, %struct.GPR* %14441, i32 0, i32 33
  %14443 = getelementptr inbounds %struct.Reg, %struct.Reg* %14442, i32 0, i32 0
  %PC.i2503 = bitcast %union.anon* %14443 to i64*
  %14444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14445 = getelementptr inbounds %struct.GPR, %struct.GPR* %14444, i32 0, i32 5
  %14446 = getelementptr inbounds %struct.Reg, %struct.Reg* %14445, i32 0, i32 0
  %RCX.i2504 = bitcast %union.anon* %14446 to i64*
  %14447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14448 = getelementptr inbounds %struct.GPR, %struct.GPR* %14447, i32 0, i32 15
  %14449 = getelementptr inbounds %struct.Reg, %struct.Reg* %14448, i32 0, i32 0
  %RBP.i2505 = bitcast %union.anon* %14449 to i64*
  %14450 = load i64, i64* %RBP.i2505
  %14451 = sub i64 %14450, 28
  %14452 = load i64, i64* %PC.i2503
  %14453 = add i64 %14452, 4
  store i64 %14453, i64* %PC.i2503
  %14454 = inttoptr i64 %14451 to i32*
  %14455 = load i32, i32* %14454
  %14456 = sext i32 %14455 to i64
  store i64 %14456, i64* %RCX.i2504, align 8
  store %struct.Memory* %loadMem_4ab297, %struct.Memory** %MEMORY
  %loadMem_4ab29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14458 = getelementptr inbounds %struct.GPR, %struct.GPR* %14457, i32 0, i32 33
  %14459 = getelementptr inbounds %struct.Reg, %struct.Reg* %14458, i32 0, i32 0
  %PC.i2499 = bitcast %union.anon* %14459 to i64*
  %14460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14461 = getelementptr inbounds %struct.GPR, %struct.GPR* %14460, i32 0, i32 1
  %14462 = getelementptr inbounds %struct.Reg, %struct.Reg* %14461, i32 0, i32 0
  %RAX.i2500 = bitcast %union.anon* %14462 to i64*
  %14463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14464 = getelementptr inbounds %struct.GPR, %struct.GPR* %14463, i32 0, i32 5
  %14465 = getelementptr inbounds %struct.Reg, %struct.Reg* %14464, i32 0, i32 0
  %RCX.i2501 = bitcast %union.anon* %14465 to i64*
  %14466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14467 = getelementptr inbounds %struct.GPR, %struct.GPR* %14466, i32 0, i32 11
  %14468 = getelementptr inbounds %struct.Reg, %struct.Reg* %14467, i32 0, i32 0
  %RDI.i2502 = bitcast %union.anon* %14468 to i64*
  %14469 = load i64, i64* %RAX.i2500
  %14470 = load i64, i64* %RCX.i2501
  %14471 = mul i64 %14470, 4
  %14472 = add i64 %14471, %14469
  %14473 = load i64, i64* %PC.i2499
  %14474 = add i64 %14473, 3
  store i64 %14474, i64* %PC.i2499
  %14475 = inttoptr i64 %14472 to i32*
  %14476 = load i32, i32* %14475
  %14477 = zext i32 %14476 to i64
  store i64 %14477, i64* %RDI.i2502, align 8
  store %struct.Memory* %loadMem_4ab29b, %struct.Memory** %MEMORY
  %loadMem1_4ab29e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14479 = getelementptr inbounds %struct.GPR, %struct.GPR* %14478, i32 0, i32 33
  %14480 = getelementptr inbounds %struct.Reg, %struct.Reg* %14479, i32 0, i32 0
  %PC.i2498 = bitcast %union.anon* %14480 to i64*
  %14481 = load i64, i64* %PC.i2498
  %14482 = add i64 %14481, -696990
  %14483 = load i64, i64* %PC.i2498
  %14484 = add i64 %14483, 5
  %14485 = load i64, i64* %PC.i2498
  %14486 = add i64 %14485, 5
  store i64 %14486, i64* %PC.i2498
  %14487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14488 = load i64, i64* %14487, align 8
  %14489 = add i64 %14488, -8
  %14490 = inttoptr i64 %14489 to i64*
  store i64 %14484, i64* %14490
  store i64 %14489, i64* %14487, align 8
  %14491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14482, i64* %14491, align 8
  store %struct.Memory* %loadMem1_4ab29e, %struct.Memory** %MEMORY
  %loadMem2_4ab29e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4ab29e = load i64, i64* %3
  %14492 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_4ab29e)
  store %struct.Memory* %14492, %struct.Memory** %MEMORY
  %loadMem_4ab2a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14494 = getelementptr inbounds %struct.GPR, %struct.GPR* %14493, i32 0, i32 33
  %14495 = getelementptr inbounds %struct.Reg, %struct.Reg* %14494, i32 0, i32 0
  %PC.i2493 = bitcast %union.anon* %14495 to i64*
  %14496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14497 = getelementptr inbounds %struct.GPR, %struct.GPR* %14496, i32 0, i32 5
  %14498 = getelementptr inbounds %struct.Reg, %struct.Reg* %14497, i32 0, i32 0
  %RCX.i2494 = bitcast %union.anon* %14498 to i64*
  %14499 = load i64, i64* %PC.i2493
  %14500 = add i64 %14499, 10
  store i64 %14500, i64* %PC.i2493
  store i64 7474576, i64* %RCX.i2494, align 8
  store %struct.Memory* %loadMem_4ab2a3, %struct.Memory** %MEMORY
  %loadMem_4ab2ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %14501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14502 = getelementptr inbounds %struct.GPR, %struct.GPR* %14501, i32 0, i32 33
  %14503 = getelementptr inbounds %struct.Reg, %struct.Reg* %14502, i32 0, i32 0
  %PC.i2491 = bitcast %union.anon* %14503 to i64*
  %14504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14505 = getelementptr inbounds %struct.GPR, %struct.GPR* %14504, i32 0, i32 7
  %14506 = getelementptr inbounds %struct.Reg, %struct.Reg* %14505, i32 0, i32 0
  %RDX.i2492 = bitcast %union.anon* %14506 to i64*
  %14507 = load i64, i64* %PC.i2491
  %14508 = add i64 %14507, 10
  store i64 %14508, i64* %PC.i2491
  store i64 ptrtoint (%G__0x70f6e0_type* @G__0x70f6e0 to i64), i64* %RDX.i2492, align 8
  store %struct.Memory* %loadMem_4ab2ad, %struct.Memory** %MEMORY
  %loadMem_4ab2b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14510 = getelementptr inbounds %struct.GPR, %struct.GPR* %14509, i32 0, i32 33
  %14511 = getelementptr inbounds %struct.Reg, %struct.Reg* %14510, i32 0, i32 0
  %PC.i2488 = bitcast %union.anon* %14511 to i64*
  %14512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14513 = getelementptr inbounds %struct.GPR, %struct.GPR* %14512, i32 0, i32 9
  %14514 = getelementptr inbounds %struct.Reg, %struct.Reg* %14513, i32 0, i32 0
  %RSI.i2489 = bitcast %union.anon* %14514 to i64*
  %14515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14516 = getelementptr inbounds %struct.GPR, %struct.GPR* %14515, i32 0, i32 15
  %14517 = getelementptr inbounds %struct.Reg, %struct.Reg* %14516, i32 0, i32 0
  %RBP.i2490 = bitcast %union.anon* %14517 to i64*
  %14518 = load i64, i64* %RBP.i2490
  %14519 = sub i64 %14518, 64
  %14520 = load i64, i64* %PC.i2488
  %14521 = add i64 %14520, 4
  store i64 %14521, i64* %PC.i2488
  %14522 = inttoptr i64 %14519 to i32*
  %14523 = load i32, i32* %14522
  %14524 = sext i32 %14523 to i64
  store i64 %14524, i64* %RSI.i2489, align 8
  store %struct.Memory* %loadMem_4ab2b7, %struct.Memory** %MEMORY
  %loadMem_4ab2bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14526 = getelementptr inbounds %struct.GPR, %struct.GPR* %14525, i32 0, i32 33
  %14527 = getelementptr inbounds %struct.Reg, %struct.Reg* %14526, i32 0, i32 0
  %PC.i2486 = bitcast %union.anon* %14527 to i64*
  %14528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14529 = getelementptr inbounds %struct.GPR, %struct.GPR* %14528, i32 0, i32 9
  %14530 = getelementptr inbounds %struct.Reg, %struct.Reg* %14529, i32 0, i32 0
  %RSI.i2487 = bitcast %union.anon* %14530 to i64*
  %14531 = load i64, i64* %RSI.i2487
  %14532 = load i64, i64* %PC.i2486
  %14533 = add i64 %14532, 4
  store i64 %14533, i64* %PC.i2486
  %14534 = shl i64 %14531, 7
  %14535 = icmp slt i64 %14534, 0
  %14536 = shl i64 %14534, 1
  store i64 %14536, i64* %RSI.i2487, align 8
  %14537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14538 = zext i1 %14535 to i8
  store i8 %14538, i8* %14537, align 1
  %14539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14540 = trunc i64 %14536 to i32
  store i8 1, i8* %14539, align 1
  %14541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14541, align 1
  %14542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14543 = icmp eq i64 %14536, 0
  %14544 = zext i1 %14543 to i8
  store i8 %14544, i8* %14542, align 1
  %14545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14546 = lshr i64 %14536, 63
  %14547 = trunc i64 %14546 to i8
  store i8 %14547, i8* %14545, align 1
  %14548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14548, align 1
  store %struct.Memory* %loadMem_4ab2bb, %struct.Memory** %MEMORY
  %loadMem_4ab2bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14550 = getelementptr inbounds %struct.GPR, %struct.GPR* %14549, i32 0, i32 33
  %14551 = getelementptr inbounds %struct.Reg, %struct.Reg* %14550, i32 0, i32 0
  %PC.i2483 = bitcast %union.anon* %14551 to i64*
  %14552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14553 = getelementptr inbounds %struct.GPR, %struct.GPR* %14552, i32 0, i32 7
  %14554 = getelementptr inbounds %struct.Reg, %struct.Reg* %14553, i32 0, i32 0
  %RDX.i2484 = bitcast %union.anon* %14554 to i64*
  %14555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14556 = getelementptr inbounds %struct.GPR, %struct.GPR* %14555, i32 0, i32 9
  %14557 = getelementptr inbounds %struct.Reg, %struct.Reg* %14556, i32 0, i32 0
  %RSI.i2485 = bitcast %union.anon* %14557 to i64*
  %14558 = load i64, i64* %RDX.i2484
  %14559 = load i64, i64* %RSI.i2485
  %14560 = load i64, i64* %PC.i2483
  %14561 = add i64 %14560, 3
  store i64 %14561, i64* %PC.i2483
  %14562 = add i64 %14559, %14558
  store i64 %14562, i64* %RDX.i2484, align 8
  %14563 = icmp ult i64 %14562, %14558
  %14564 = icmp ult i64 %14562, %14559
  %14565 = or i1 %14563, %14564
  %14566 = zext i1 %14565 to i8
  %14567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14566, i8* %14567, align 1
  %14568 = trunc i64 %14562 to i32
  %14569 = and i32 %14568, 255
  %14570 = call i32 @llvm.ctpop.i32(i32 %14569)
  %14571 = trunc i32 %14570 to i8
  %14572 = and i8 %14571, 1
  %14573 = xor i8 %14572, 1
  %14574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14573, i8* %14574, align 1
  %14575 = xor i64 %14559, %14558
  %14576 = xor i64 %14575, %14562
  %14577 = lshr i64 %14576, 4
  %14578 = trunc i64 %14577 to i8
  %14579 = and i8 %14578, 1
  %14580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14579, i8* %14580, align 1
  %14581 = icmp eq i64 %14562, 0
  %14582 = zext i1 %14581 to i8
  %14583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14582, i8* %14583, align 1
  %14584 = lshr i64 %14562, 63
  %14585 = trunc i64 %14584 to i8
  %14586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14585, i8* %14586, align 1
  %14587 = lshr i64 %14558, 63
  %14588 = lshr i64 %14559, 63
  %14589 = xor i64 %14584, %14587
  %14590 = xor i64 %14584, %14588
  %14591 = add i64 %14589, %14590
  %14592 = icmp eq i64 %14591, 2
  %14593 = zext i1 %14592 to i8
  %14594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14593, i8* %14594, align 1
  store %struct.Memory* %loadMem_4ab2bf, %struct.Memory** %MEMORY
  %loadMem_4ab2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14596 = getelementptr inbounds %struct.GPR, %struct.GPR* %14595, i32 0, i32 33
  %14597 = getelementptr inbounds %struct.Reg, %struct.Reg* %14596, i32 0, i32 0
  %PC.i2480 = bitcast %union.anon* %14597 to i64*
  %14598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14599 = getelementptr inbounds %struct.GPR, %struct.GPR* %14598, i32 0, i32 9
  %14600 = getelementptr inbounds %struct.Reg, %struct.Reg* %14599, i32 0, i32 0
  %RSI.i2481 = bitcast %union.anon* %14600 to i64*
  %14601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14602 = getelementptr inbounds %struct.GPR, %struct.GPR* %14601, i32 0, i32 15
  %14603 = getelementptr inbounds %struct.Reg, %struct.Reg* %14602, i32 0, i32 0
  %RBP.i2482 = bitcast %union.anon* %14603 to i64*
  %14604 = load i64, i64* %RBP.i2482
  %14605 = sub i64 %14604, 24
  %14606 = load i64, i64* %PC.i2480
  %14607 = add i64 %14606, 4
  store i64 %14607, i64* %PC.i2480
  %14608 = inttoptr i64 %14605 to i32*
  %14609 = load i32, i32* %14608
  %14610 = sext i32 %14609 to i64
  store i64 %14610, i64* %RSI.i2481, align 8
  store %struct.Memory* %loadMem_4ab2c2, %struct.Memory** %MEMORY
  %loadMem_4ab2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14612 = getelementptr inbounds %struct.GPR, %struct.GPR* %14611, i32 0, i32 33
  %14613 = getelementptr inbounds %struct.Reg, %struct.Reg* %14612, i32 0, i32 0
  %PC.i2478 = bitcast %union.anon* %14613 to i64*
  %14614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14615 = getelementptr inbounds %struct.GPR, %struct.GPR* %14614, i32 0, i32 9
  %14616 = getelementptr inbounds %struct.Reg, %struct.Reg* %14615, i32 0, i32 0
  %RSI.i2479 = bitcast %union.anon* %14616 to i64*
  %14617 = load i64, i64* %RSI.i2479
  %14618 = load i64, i64* %PC.i2478
  %14619 = add i64 %14618, 4
  store i64 %14619, i64* %PC.i2478
  %14620 = shl i64 %14617, 4
  %14621 = icmp slt i64 %14620, 0
  %14622 = shl i64 %14620, 1
  store i64 %14622, i64* %RSI.i2479, align 8
  %14623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14624 = zext i1 %14621 to i8
  store i8 %14624, i8* %14623, align 1
  %14625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14626 = trunc i64 %14622 to i32
  %14627 = and i32 %14626, 254
  %14628 = call i32 @llvm.ctpop.i32(i32 %14627)
  %14629 = trunc i32 %14628 to i8
  %14630 = and i8 %14629, 1
  %14631 = xor i8 %14630, 1
  store i8 %14631, i8* %14625, align 1
  %14632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14632, align 1
  %14633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14634 = icmp eq i64 %14622, 0
  %14635 = zext i1 %14634 to i8
  store i8 %14635, i8* %14633, align 1
  %14636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14637 = lshr i64 %14622, 63
  %14638 = trunc i64 %14637 to i8
  store i8 %14638, i8* %14636, align 1
  %14639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14639, align 1
  store %struct.Memory* %loadMem_4ab2c6, %struct.Memory** %MEMORY
  %loadMem_4ab2ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %14640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14641 = getelementptr inbounds %struct.GPR, %struct.GPR* %14640, i32 0, i32 33
  %14642 = getelementptr inbounds %struct.Reg, %struct.Reg* %14641, i32 0, i32 0
  %PC.i2475 = bitcast %union.anon* %14642 to i64*
  %14643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14644 = getelementptr inbounds %struct.GPR, %struct.GPR* %14643, i32 0, i32 7
  %14645 = getelementptr inbounds %struct.Reg, %struct.Reg* %14644, i32 0, i32 0
  %RDX.i2476 = bitcast %union.anon* %14645 to i64*
  %14646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14647 = getelementptr inbounds %struct.GPR, %struct.GPR* %14646, i32 0, i32 9
  %14648 = getelementptr inbounds %struct.Reg, %struct.Reg* %14647, i32 0, i32 0
  %RSI.i2477 = bitcast %union.anon* %14648 to i64*
  %14649 = load i64, i64* %RDX.i2476
  %14650 = load i64, i64* %RSI.i2477
  %14651 = load i64, i64* %PC.i2475
  %14652 = add i64 %14651, 3
  store i64 %14652, i64* %PC.i2475
  %14653 = add i64 %14650, %14649
  store i64 %14653, i64* %RDX.i2476, align 8
  %14654 = icmp ult i64 %14653, %14649
  %14655 = icmp ult i64 %14653, %14650
  %14656 = or i1 %14654, %14655
  %14657 = zext i1 %14656 to i8
  %14658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14657, i8* %14658, align 1
  %14659 = trunc i64 %14653 to i32
  %14660 = and i32 %14659, 255
  %14661 = call i32 @llvm.ctpop.i32(i32 %14660)
  %14662 = trunc i32 %14661 to i8
  %14663 = and i8 %14662, 1
  %14664 = xor i8 %14663, 1
  %14665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14664, i8* %14665, align 1
  %14666 = xor i64 %14650, %14649
  %14667 = xor i64 %14666, %14653
  %14668 = lshr i64 %14667, 4
  %14669 = trunc i64 %14668 to i8
  %14670 = and i8 %14669, 1
  %14671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14670, i8* %14671, align 1
  %14672 = icmp eq i64 %14653, 0
  %14673 = zext i1 %14672 to i8
  %14674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14673, i8* %14674, align 1
  %14675 = lshr i64 %14653, 63
  %14676 = trunc i64 %14675 to i8
  %14677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14676, i8* %14677, align 1
  %14678 = lshr i64 %14649, 63
  %14679 = lshr i64 %14650, 63
  %14680 = xor i64 %14675, %14678
  %14681 = xor i64 %14675, %14679
  %14682 = add i64 %14680, %14681
  %14683 = icmp eq i64 %14682, 2
  %14684 = zext i1 %14683 to i8
  %14685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14684, i8* %14685, align 1
  store %struct.Memory* %loadMem_4ab2ca, %struct.Memory** %MEMORY
  %loadMem_4ab2cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14687 = getelementptr inbounds %struct.GPR, %struct.GPR* %14686, i32 0, i32 33
  %14688 = getelementptr inbounds %struct.Reg, %struct.Reg* %14687, i32 0, i32 0
  %PC.i2472 = bitcast %union.anon* %14688 to i64*
  %14689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14690 = getelementptr inbounds %struct.GPR, %struct.GPR* %14689, i32 0, i32 9
  %14691 = getelementptr inbounds %struct.Reg, %struct.Reg* %14690, i32 0, i32 0
  %RSI.i2473 = bitcast %union.anon* %14691 to i64*
  %14692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14693 = getelementptr inbounds %struct.GPR, %struct.GPR* %14692, i32 0, i32 15
  %14694 = getelementptr inbounds %struct.Reg, %struct.Reg* %14693, i32 0, i32 0
  %RBP.i2474 = bitcast %union.anon* %14694 to i64*
  %14695 = load i64, i64* %RBP.i2474
  %14696 = sub i64 %14695, 28
  %14697 = load i64, i64* %PC.i2472
  %14698 = add i64 %14697, 4
  store i64 %14698, i64* %PC.i2472
  %14699 = inttoptr i64 %14696 to i32*
  %14700 = load i32, i32* %14699
  %14701 = sext i32 %14700 to i64
  store i64 %14701, i64* %RSI.i2473, align 8
  store %struct.Memory* %loadMem_4ab2cd, %struct.Memory** %MEMORY
  %loadMem_4ab2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14703 = getelementptr inbounds %struct.GPR, %struct.GPR* %14702, i32 0, i32 33
  %14704 = getelementptr inbounds %struct.Reg, %struct.Reg* %14703, i32 0, i32 0
  %PC.i2468 = bitcast %union.anon* %14704 to i64*
  %14705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14706 = getelementptr inbounds %struct.GPR, %struct.GPR* %14705, i32 0, i32 1
  %14707 = getelementptr inbounds %struct.Reg, %struct.Reg* %14706, i32 0, i32 0
  %RAX.i2469 = bitcast %union.anon* %14707 to i64*
  %14708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14709 = getelementptr inbounds %struct.GPR, %struct.GPR* %14708, i32 0, i32 7
  %14710 = getelementptr inbounds %struct.Reg, %struct.Reg* %14709, i32 0, i32 0
  %RDX.i2470 = bitcast %union.anon* %14710 to i64*
  %14711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14712 = getelementptr inbounds %struct.GPR, %struct.GPR* %14711, i32 0, i32 9
  %14713 = getelementptr inbounds %struct.Reg, %struct.Reg* %14712, i32 0, i32 0
  %RSI.i2471 = bitcast %union.anon* %14713 to i64*
  %14714 = load i64, i64* %RAX.i2469
  %14715 = load i64, i64* %RDX.i2470
  %14716 = load i64, i64* %RSI.i2471
  %14717 = mul i64 %14716, 4
  %14718 = add i64 %14717, %14715
  %14719 = load i64, i64* %PC.i2468
  %14720 = add i64 %14719, 4
  store i64 %14720, i64* %PC.i2468
  %14721 = inttoptr i64 %14718 to i32*
  %14722 = load i32, i32* %14721
  %14723 = shl i64 %14714, 32
  %14724 = ashr exact i64 %14723, 32
  %14725 = sext i32 %14722 to i64
  %14726 = mul i64 %14725, %14724
  %14727 = trunc i64 %14726 to i32
  %14728 = and i64 %14726, 4294967295
  store i64 %14728, i64* %RAX.i2469, align 8
  %14729 = shl i64 %14726, 32
  %14730 = ashr exact i64 %14729, 32
  %14731 = icmp ne i64 %14730, %14726
  %14732 = zext i1 %14731 to i8
  %14733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14732, i8* %14733, align 1
  %14734 = and i32 %14727, 255
  %14735 = call i32 @llvm.ctpop.i32(i32 %14734)
  %14736 = trunc i32 %14735 to i8
  %14737 = and i8 %14736, 1
  %14738 = xor i8 %14737, 1
  %14739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14738, i8* %14739, align 1
  %14740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14740, align 1
  %14741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14741, align 1
  %14742 = lshr i32 %14727, 31
  %14743 = trunc i32 %14742 to i8
  %14744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14743, i8* %14744, align 1
  %14745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14732, i8* %14745, align 1
  store %struct.Memory* %loadMem_4ab2d1, %struct.Memory** %MEMORY
  %loadMem_4ab2d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14747 = getelementptr inbounds %struct.GPR, %struct.GPR* %14746, i32 0, i32 33
  %14748 = getelementptr inbounds %struct.Reg, %struct.Reg* %14747, i32 0, i32 0
  %PC.i2465 = bitcast %union.anon* %14748 to i64*
  %14749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14750 = getelementptr inbounds %struct.GPR, %struct.GPR* %14749, i32 0, i32 7
  %14751 = getelementptr inbounds %struct.Reg, %struct.Reg* %14750, i32 0, i32 0
  %RDX.i2466 = bitcast %union.anon* %14751 to i64*
  %14752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14753 = getelementptr inbounds %struct.GPR, %struct.GPR* %14752, i32 0, i32 15
  %14754 = getelementptr inbounds %struct.Reg, %struct.Reg* %14753, i32 0, i32 0
  %RBP.i2467 = bitcast %union.anon* %14754 to i64*
  %14755 = load i64, i64* %RBP.i2467
  %14756 = sub i64 %14755, 60
  %14757 = load i64, i64* %PC.i2465
  %14758 = add i64 %14757, 4
  store i64 %14758, i64* %PC.i2465
  %14759 = inttoptr i64 %14756 to i32*
  %14760 = load i32, i32* %14759
  %14761 = sext i32 %14760 to i64
  store i64 %14761, i64* %RDX.i2466, align 8
  store %struct.Memory* %loadMem_4ab2d5, %struct.Memory** %MEMORY
  %loadMem_4ab2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14763 = getelementptr inbounds %struct.GPR, %struct.GPR* %14762, i32 0, i32 33
  %14764 = getelementptr inbounds %struct.Reg, %struct.Reg* %14763, i32 0, i32 0
  %PC.i2463 = bitcast %union.anon* %14764 to i64*
  %14765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14766 = getelementptr inbounds %struct.GPR, %struct.GPR* %14765, i32 0, i32 7
  %14767 = getelementptr inbounds %struct.Reg, %struct.Reg* %14766, i32 0, i32 0
  %RDX.i2464 = bitcast %union.anon* %14767 to i64*
  %14768 = load i64, i64* %RDX.i2464
  %14769 = load i64, i64* %PC.i2463
  %14770 = add i64 %14769, 4
  store i64 %14770, i64* %PC.i2463
  %14771 = shl i64 %14768, 7
  %14772 = icmp slt i64 %14771, 0
  %14773 = shl i64 %14771, 1
  store i64 %14773, i64* %RDX.i2464, align 8
  %14774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14775 = zext i1 %14772 to i8
  store i8 %14775, i8* %14774, align 1
  %14776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14777 = trunc i64 %14773 to i32
  store i8 1, i8* %14776, align 1
  %14778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14778, align 1
  %14779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14780 = icmp eq i64 %14773, 0
  %14781 = zext i1 %14780 to i8
  store i8 %14781, i8* %14779, align 1
  %14782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14783 = lshr i64 %14773, 63
  %14784 = trunc i64 %14783 to i8
  store i8 %14784, i8* %14782, align 1
  %14785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14785, align 1
  store %struct.Memory* %loadMem_4ab2d9, %struct.Memory** %MEMORY
  %loadMem_4ab2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14787 = getelementptr inbounds %struct.GPR, %struct.GPR* %14786, i32 0, i32 33
  %14788 = getelementptr inbounds %struct.Reg, %struct.Reg* %14787, i32 0, i32 0
  %PC.i2460 = bitcast %union.anon* %14788 to i64*
  %14789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14790 = getelementptr inbounds %struct.GPR, %struct.GPR* %14789, i32 0, i32 5
  %14791 = getelementptr inbounds %struct.Reg, %struct.Reg* %14790, i32 0, i32 0
  %RCX.i2461 = bitcast %union.anon* %14791 to i64*
  %14792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14793 = getelementptr inbounds %struct.GPR, %struct.GPR* %14792, i32 0, i32 7
  %14794 = getelementptr inbounds %struct.Reg, %struct.Reg* %14793, i32 0, i32 0
  %RDX.i2462 = bitcast %union.anon* %14794 to i64*
  %14795 = load i64, i64* %RCX.i2461
  %14796 = load i64, i64* %RDX.i2462
  %14797 = load i64, i64* %PC.i2460
  %14798 = add i64 %14797, 3
  store i64 %14798, i64* %PC.i2460
  %14799 = add i64 %14796, %14795
  store i64 %14799, i64* %RCX.i2461, align 8
  %14800 = icmp ult i64 %14799, %14795
  %14801 = icmp ult i64 %14799, %14796
  %14802 = or i1 %14800, %14801
  %14803 = zext i1 %14802 to i8
  %14804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14803, i8* %14804, align 1
  %14805 = trunc i64 %14799 to i32
  %14806 = and i32 %14805, 255
  %14807 = call i32 @llvm.ctpop.i32(i32 %14806)
  %14808 = trunc i32 %14807 to i8
  %14809 = and i8 %14808, 1
  %14810 = xor i8 %14809, 1
  %14811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14810, i8* %14811, align 1
  %14812 = xor i64 %14796, %14795
  %14813 = xor i64 %14812, %14799
  %14814 = lshr i64 %14813, 4
  %14815 = trunc i64 %14814 to i8
  %14816 = and i8 %14815, 1
  %14817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14816, i8* %14817, align 1
  %14818 = icmp eq i64 %14799, 0
  %14819 = zext i1 %14818 to i8
  %14820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14819, i8* %14820, align 1
  %14821 = lshr i64 %14799, 63
  %14822 = trunc i64 %14821 to i8
  %14823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14822, i8* %14823, align 1
  %14824 = lshr i64 %14795, 63
  %14825 = lshr i64 %14796, 63
  %14826 = xor i64 %14821, %14824
  %14827 = xor i64 %14821, %14825
  %14828 = add i64 %14826, %14827
  %14829 = icmp eq i64 %14828, 2
  %14830 = zext i1 %14829 to i8
  %14831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14830, i8* %14831, align 1
  store %struct.Memory* %loadMem_4ab2dd, %struct.Memory** %MEMORY
  %loadMem_4ab2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14833 = getelementptr inbounds %struct.GPR, %struct.GPR* %14832, i32 0, i32 33
  %14834 = getelementptr inbounds %struct.Reg, %struct.Reg* %14833, i32 0, i32 0
  %PC.i2457 = bitcast %union.anon* %14834 to i64*
  %14835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14836 = getelementptr inbounds %struct.GPR, %struct.GPR* %14835, i32 0, i32 7
  %14837 = getelementptr inbounds %struct.Reg, %struct.Reg* %14836, i32 0, i32 0
  %RDX.i2458 = bitcast %union.anon* %14837 to i64*
  %14838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14839 = getelementptr inbounds %struct.GPR, %struct.GPR* %14838, i32 0, i32 15
  %14840 = getelementptr inbounds %struct.Reg, %struct.Reg* %14839, i32 0, i32 0
  %RBP.i2459 = bitcast %union.anon* %14840 to i64*
  %14841 = load i64, i64* %RBP.i2459
  %14842 = sub i64 %14841, 24
  %14843 = load i64, i64* %PC.i2457
  %14844 = add i64 %14843, 4
  store i64 %14844, i64* %PC.i2457
  %14845 = inttoptr i64 %14842 to i32*
  %14846 = load i32, i32* %14845
  %14847 = sext i32 %14846 to i64
  store i64 %14847, i64* %RDX.i2458, align 8
  store %struct.Memory* %loadMem_4ab2e0, %struct.Memory** %MEMORY
  %loadMem_4ab2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14849 = getelementptr inbounds %struct.GPR, %struct.GPR* %14848, i32 0, i32 33
  %14850 = getelementptr inbounds %struct.Reg, %struct.Reg* %14849, i32 0, i32 0
  %PC.i2455 = bitcast %union.anon* %14850 to i64*
  %14851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14852 = getelementptr inbounds %struct.GPR, %struct.GPR* %14851, i32 0, i32 7
  %14853 = getelementptr inbounds %struct.Reg, %struct.Reg* %14852, i32 0, i32 0
  %RDX.i2456 = bitcast %union.anon* %14853 to i64*
  %14854 = load i64, i64* %RDX.i2456
  %14855 = load i64, i64* %PC.i2455
  %14856 = add i64 %14855, 4
  store i64 %14856, i64* %PC.i2455
  %14857 = shl i64 %14854, 4
  %14858 = icmp slt i64 %14857, 0
  %14859 = shl i64 %14857, 1
  store i64 %14859, i64* %RDX.i2456, align 8
  %14860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14861 = zext i1 %14858 to i8
  store i8 %14861, i8* %14860, align 1
  %14862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14863 = trunc i64 %14859 to i32
  %14864 = and i32 %14863, 254
  %14865 = call i32 @llvm.ctpop.i32(i32 %14864)
  %14866 = trunc i32 %14865 to i8
  %14867 = and i8 %14866, 1
  %14868 = xor i8 %14867, 1
  store i8 %14868, i8* %14862, align 1
  %14869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14869, align 1
  %14870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14871 = icmp eq i64 %14859, 0
  %14872 = zext i1 %14871 to i8
  store i8 %14872, i8* %14870, align 1
  %14873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14874 = lshr i64 %14859, 63
  %14875 = trunc i64 %14874 to i8
  store i8 %14875, i8* %14873, align 1
  %14876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14876, align 1
  store %struct.Memory* %loadMem_4ab2e4, %struct.Memory** %MEMORY
  %loadMem_4ab2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14878 = getelementptr inbounds %struct.GPR, %struct.GPR* %14877, i32 0, i32 33
  %14879 = getelementptr inbounds %struct.Reg, %struct.Reg* %14878, i32 0, i32 0
  %PC.i2452 = bitcast %union.anon* %14879 to i64*
  %14880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14881 = getelementptr inbounds %struct.GPR, %struct.GPR* %14880, i32 0, i32 5
  %14882 = getelementptr inbounds %struct.Reg, %struct.Reg* %14881, i32 0, i32 0
  %RCX.i2453 = bitcast %union.anon* %14882 to i64*
  %14883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14884 = getelementptr inbounds %struct.GPR, %struct.GPR* %14883, i32 0, i32 7
  %14885 = getelementptr inbounds %struct.Reg, %struct.Reg* %14884, i32 0, i32 0
  %RDX.i2454 = bitcast %union.anon* %14885 to i64*
  %14886 = load i64, i64* %RCX.i2453
  %14887 = load i64, i64* %RDX.i2454
  %14888 = load i64, i64* %PC.i2452
  %14889 = add i64 %14888, 3
  store i64 %14889, i64* %PC.i2452
  %14890 = add i64 %14887, %14886
  store i64 %14890, i64* %RCX.i2453, align 8
  %14891 = icmp ult i64 %14890, %14886
  %14892 = icmp ult i64 %14890, %14887
  %14893 = or i1 %14891, %14892
  %14894 = zext i1 %14893 to i8
  %14895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14894, i8* %14895, align 1
  %14896 = trunc i64 %14890 to i32
  %14897 = and i32 %14896, 255
  %14898 = call i32 @llvm.ctpop.i32(i32 %14897)
  %14899 = trunc i32 %14898 to i8
  %14900 = and i8 %14899, 1
  %14901 = xor i8 %14900, 1
  %14902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14901, i8* %14902, align 1
  %14903 = xor i64 %14887, %14886
  %14904 = xor i64 %14903, %14890
  %14905 = lshr i64 %14904, 4
  %14906 = trunc i64 %14905 to i8
  %14907 = and i8 %14906, 1
  %14908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14907, i8* %14908, align 1
  %14909 = icmp eq i64 %14890, 0
  %14910 = zext i1 %14909 to i8
  %14911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14910, i8* %14911, align 1
  %14912 = lshr i64 %14890, 63
  %14913 = trunc i64 %14912 to i8
  %14914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14913, i8* %14914, align 1
  %14915 = lshr i64 %14886, 63
  %14916 = lshr i64 %14887, 63
  %14917 = xor i64 %14912, %14915
  %14918 = xor i64 %14912, %14916
  %14919 = add i64 %14917, %14918
  %14920 = icmp eq i64 %14919, 2
  %14921 = zext i1 %14920 to i8
  %14922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14921, i8* %14922, align 1
  store %struct.Memory* %loadMem_4ab2e8, %struct.Memory** %MEMORY
  %loadMem_4ab2eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14924 = getelementptr inbounds %struct.GPR, %struct.GPR* %14923, i32 0, i32 33
  %14925 = getelementptr inbounds %struct.Reg, %struct.Reg* %14924, i32 0, i32 0
  %PC.i2449 = bitcast %union.anon* %14925 to i64*
  %14926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14927 = getelementptr inbounds %struct.GPR, %struct.GPR* %14926, i32 0, i32 7
  %14928 = getelementptr inbounds %struct.Reg, %struct.Reg* %14927, i32 0, i32 0
  %RDX.i2450 = bitcast %union.anon* %14928 to i64*
  %14929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14930 = getelementptr inbounds %struct.GPR, %struct.GPR* %14929, i32 0, i32 15
  %14931 = getelementptr inbounds %struct.Reg, %struct.Reg* %14930, i32 0, i32 0
  %RBP.i2451 = bitcast %union.anon* %14931 to i64*
  %14932 = load i64, i64* %RBP.i2451
  %14933 = sub i64 %14932, 28
  %14934 = load i64, i64* %PC.i2449
  %14935 = add i64 %14934, 4
  store i64 %14935, i64* %PC.i2449
  %14936 = inttoptr i64 %14933 to i32*
  %14937 = load i32, i32* %14936
  %14938 = sext i32 %14937 to i64
  store i64 %14938, i64* %RDX.i2450, align 8
  store %struct.Memory* %loadMem_4ab2eb, %struct.Memory** %MEMORY
  %loadMem_4ab2ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %14939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14940 = getelementptr inbounds %struct.GPR, %struct.GPR* %14939, i32 0, i32 33
  %14941 = getelementptr inbounds %struct.Reg, %struct.Reg* %14940, i32 0, i32 0
  %PC.i2445 = bitcast %union.anon* %14941 to i64*
  %14942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14943 = getelementptr inbounds %struct.GPR, %struct.GPR* %14942, i32 0, i32 1
  %14944 = getelementptr inbounds %struct.Reg, %struct.Reg* %14943, i32 0, i32 0
  %RAX.i2446 = bitcast %union.anon* %14944 to i64*
  %14945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14946 = getelementptr inbounds %struct.GPR, %struct.GPR* %14945, i32 0, i32 5
  %14947 = getelementptr inbounds %struct.Reg, %struct.Reg* %14946, i32 0, i32 0
  %RCX.i2447 = bitcast %union.anon* %14947 to i64*
  %14948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14949 = getelementptr inbounds %struct.GPR, %struct.GPR* %14948, i32 0, i32 7
  %14950 = getelementptr inbounds %struct.Reg, %struct.Reg* %14949, i32 0, i32 0
  %RDX.i2448 = bitcast %union.anon* %14950 to i64*
  %14951 = load i64, i64* %RAX.i2446
  %14952 = load i64, i64* %RCX.i2447
  %14953 = load i64, i64* %RDX.i2448
  %14954 = mul i64 %14953, 4
  %14955 = add i64 %14954, %14952
  %14956 = load i64, i64* %PC.i2445
  %14957 = add i64 %14956, 3
  store i64 %14957, i64* %PC.i2445
  %14958 = trunc i64 %14951 to i32
  %14959 = inttoptr i64 %14955 to i32*
  %14960 = load i32, i32* %14959
  %14961 = add i32 %14960, %14958
  %14962 = zext i32 %14961 to i64
  store i64 %14962, i64* %RAX.i2446, align 8
  %14963 = icmp ult i32 %14961, %14958
  %14964 = icmp ult i32 %14961, %14960
  %14965 = or i1 %14963, %14964
  %14966 = zext i1 %14965 to i8
  %14967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14966, i8* %14967, align 1
  %14968 = and i32 %14961, 255
  %14969 = call i32 @llvm.ctpop.i32(i32 %14968)
  %14970 = trunc i32 %14969 to i8
  %14971 = and i8 %14970, 1
  %14972 = xor i8 %14971, 1
  %14973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14972, i8* %14973, align 1
  %14974 = xor i32 %14960, %14958
  %14975 = xor i32 %14974, %14961
  %14976 = lshr i32 %14975, 4
  %14977 = trunc i32 %14976 to i8
  %14978 = and i8 %14977, 1
  %14979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14978, i8* %14979, align 1
  %14980 = icmp eq i32 %14961, 0
  %14981 = zext i1 %14980 to i8
  %14982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14981, i8* %14982, align 1
  %14983 = lshr i32 %14961, 31
  %14984 = trunc i32 %14983 to i8
  %14985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14984, i8* %14985, align 1
  %14986 = lshr i32 %14958, 31
  %14987 = lshr i32 %14960, 31
  %14988 = xor i32 %14983, %14986
  %14989 = xor i32 %14983, %14987
  %14990 = add i32 %14988, %14989
  %14991 = icmp eq i32 %14990, 2
  %14992 = zext i1 %14991 to i8
  %14993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14992, i8* %14993, align 1
  store %struct.Memory* %loadMem_4ab2ef, %struct.Memory** %MEMORY
  %loadMem_4ab2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14995 = getelementptr inbounds %struct.GPR, %struct.GPR* %14994, i32 0, i32 33
  %14996 = getelementptr inbounds %struct.Reg, %struct.Reg* %14995, i32 0, i32 0
  %PC.i2442 = bitcast %union.anon* %14996 to i64*
  %14997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14998 = getelementptr inbounds %struct.GPR, %struct.GPR* %14997, i32 0, i32 5
  %14999 = getelementptr inbounds %struct.Reg, %struct.Reg* %14998, i32 0, i32 0
  %RCX.i2443 = bitcast %union.anon* %14999 to i64*
  %15000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15001 = getelementptr inbounds %struct.GPR, %struct.GPR* %15000, i32 0, i32 15
  %15002 = getelementptr inbounds %struct.Reg, %struct.Reg* %15001, i32 0, i32 0
  %RBP.i2444 = bitcast %union.anon* %15002 to i64*
  %15003 = load i64, i64* %RBP.i2444
  %15004 = sub i64 %15003, 68
  %15005 = load i64, i64* %PC.i2442
  %15006 = add i64 %15005, 3
  store i64 %15006, i64* %PC.i2442
  %15007 = inttoptr i64 %15004 to i32*
  %15008 = load i32, i32* %15007
  %15009 = zext i32 %15008 to i64
  store i64 %15009, i64* %RCX.i2443, align 8
  store %struct.Memory* %loadMem_4ab2f2, %struct.Memory** %MEMORY
  %loadMem_4ab2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15011 = getelementptr inbounds %struct.GPR, %struct.GPR* %15010, i32 0, i32 33
  %15012 = getelementptr inbounds %struct.Reg, %struct.Reg* %15011, i32 0, i32 0
  %PC.i2439 = bitcast %union.anon* %15012 to i64*
  %15013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15014 = getelementptr inbounds %struct.GPR, %struct.GPR* %15013, i32 0, i32 5
  %15015 = getelementptr inbounds %struct.Reg, %struct.Reg* %15014, i32 0, i32 0
  %15016 = bitcast %union.anon* %15015 to %struct.anon.2*
  %CL.i2440 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15016, i32 0, i32 0
  %15017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15018 = getelementptr inbounds %struct.GPR, %struct.GPR* %15017, i32 0, i32 1
  %15019 = getelementptr inbounds %struct.Reg, %struct.Reg* %15018, i32 0, i32 0
  %RAX.i2441 = bitcast %union.anon* %15019 to i64*
  %15020 = load i64, i64* %RAX.i2441
  %15021 = load i8, i8* %CL.i2440
  %15022 = zext i8 %15021 to i64
  %15023 = load i64, i64* %PC.i2439
  %15024 = add i64 %15023, 2
  store i64 %15024, i64* %PC.i2439
  %15025 = trunc i64 %15022 to i5
  switch i5 %15025, label %15029 [
    i5 0, label %routine_sarl__cl___eax.exit
    i5 1, label %15026
  ]

; <label>:15026:                                  ; preds = %block_.L_4ab27e
  %15027 = shl i64 %15020, 32
  %15028 = ashr i64 %15027, 33
  br label %15036

; <label>:15029:                                  ; preds = %block_.L_4ab27e
  %15030 = and i64 %15022, 31
  %15031 = add i64 %15030, -1
  %15032 = shl i64 %15020, 32
  %15033 = ashr exact i64 %15032, 32
  %15034 = ashr i64 %15033, %15031
  %15035 = lshr i64 %15034, 1
  br label %15036

; <label>:15036:                                  ; preds = %15029, %15026
  %15037 = phi i64 [ %15035, %15029 ], [ %15028, %15026 ]
  %15038 = phi i64 [ %15034, %15029 ], [ %15020, %15026 ]
  %15039 = trunc i64 %15038 to i8
  %15040 = and i8 %15039, 1
  %15041 = trunc i64 %15037 to i32
  %15042 = and i64 %15037, 4294967295
  store i64 %15042, i64* %RAX.i2441, align 8
  %15043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15040, i8* %15043, align 1
  %15044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15045 = and i32 %15041, 255
  %15046 = call i32 @llvm.ctpop.i32(i32 %15045)
  %15047 = trunc i32 %15046 to i8
  %15048 = and i8 %15047, 1
  %15049 = xor i8 %15048, 1
  store i8 %15049, i8* %15044, align 1
  %15050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15050, align 1
  %15051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15052 = icmp eq i32 %15041, 0
  %15053 = zext i1 %15052 to i8
  store i8 %15053, i8* %15051, align 1
  %15054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15055 = lshr i32 %15041, 31
  %15056 = trunc i32 %15055 to i8
  store i8 %15056, i8* %15054, align 1
  %15057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15057, align 1
  br label %routine_sarl__cl___eax.exit

routine_sarl__cl___eax.exit:                      ; preds = %block_.L_4ab27e, %15036
  store %struct.Memory* %loadMem_4ab2f5, %struct.Memory** %MEMORY
  %loadMem_4ab2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15059 = getelementptr inbounds %struct.GPR, %struct.GPR* %15058, i32 0, i32 33
  %15060 = getelementptr inbounds %struct.Reg, %struct.Reg* %15059, i32 0, i32 0
  %PC.i2436 = bitcast %union.anon* %15060 to i64*
  %15061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15062 = getelementptr inbounds %struct.GPR, %struct.GPR* %15061, i32 0, i32 1
  %15063 = getelementptr inbounds %struct.Reg, %struct.Reg* %15062, i32 0, i32 0
  %EAX.i2437 = bitcast %union.anon* %15063 to i32*
  %15064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15065 = getelementptr inbounds %struct.GPR, %struct.GPR* %15064, i32 0, i32 15
  %15066 = getelementptr inbounds %struct.Reg, %struct.Reg* %15065, i32 0, i32 0
  %RBP.i2438 = bitcast %union.anon* %15066 to i64*
  %15067 = load i64, i64* %RBP.i2438
  %15068 = sub i64 %15067, 44
  %15069 = load i32, i32* %EAX.i2437
  %15070 = zext i32 %15069 to i64
  %15071 = load i64, i64* %PC.i2436
  %15072 = add i64 %15071, 3
  store i64 %15072, i64* %PC.i2436
  %15073 = inttoptr i64 %15068 to i32*
  store i32 %15069, i32* %15073
  store %struct.Memory* %loadMem_4ab2f7, %struct.Memory** %MEMORY
  br label %block_.L_4ab2fa

block_.L_4ab2fa:                                  ; preds = %routine_sarl__cl___eax.exit, %routine_sarl__cl___eax.exit2525
  %loadMem_4ab2fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %15074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15075 = getelementptr inbounds %struct.GPR, %struct.GPR* %15074, i32 0, i32 33
  %15076 = getelementptr inbounds %struct.Reg, %struct.Reg* %15075, i32 0, i32 0
  %PC.i2435 = bitcast %union.anon* %15076 to i64*
  %15077 = load i64, i64* %PC.i2435
  %15078 = add i64 %15077, 5
  %15079 = load i64, i64* %PC.i2435
  %15080 = add i64 %15079, 5
  store i64 %15080, i64* %PC.i2435
  %15081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15078, i64* %15081, align 8
  store %struct.Memory* %loadMem_4ab2fa, %struct.Memory** %MEMORY
  br label %block_.L_4ab2ff

block_.L_4ab2ff:                                  ; preds = %block_.L_4ab2fa, %block_4ab1c6
  %loadMem_4ab2ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %15082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15083 = getelementptr inbounds %struct.GPR, %struct.GPR* %15082, i32 0, i32 33
  %15084 = getelementptr inbounds %struct.Reg, %struct.Reg* %15083, i32 0, i32 0
  %PC.i2433 = bitcast %union.anon* %15084 to i64*
  %15085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15086 = getelementptr inbounds %struct.GPR, %struct.GPR* %15085, i32 0, i32 15
  %15087 = getelementptr inbounds %struct.Reg, %struct.Reg* %15086, i32 0, i32 0
  %RBP.i2434 = bitcast %union.anon* %15087 to i64*
  %15088 = load i64, i64* %RBP.i2434
  %15089 = sub i64 %15088, 44
  %15090 = load i64, i64* %PC.i2433
  %15091 = add i64 %15090, 4
  store i64 %15091, i64* %PC.i2433
  %15092 = inttoptr i64 %15089 to i32*
  %15093 = load i32, i32* %15092
  %15094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15094, align 1
  %15095 = and i32 %15093, 255
  %15096 = call i32 @llvm.ctpop.i32(i32 %15095)
  %15097 = trunc i32 %15096 to i8
  %15098 = and i8 %15097, 1
  %15099 = xor i8 %15098, 1
  %15100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15099, i8* %15100, align 1
  %15101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15101, align 1
  %15102 = icmp eq i32 %15093, 0
  %15103 = zext i1 %15102 to i8
  %15104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15103, i8* %15104, align 1
  %15105 = lshr i32 %15093, 31
  %15106 = trunc i32 %15105 to i8
  %15107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15106, i8* %15107, align 1
  %15108 = lshr i32 %15093, 31
  %15109 = xor i32 %15105, %15108
  %15110 = add i32 %15109, %15108
  %15111 = icmp eq i32 %15110, 2
  %15112 = zext i1 %15111 to i8
  %15113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15112, i8* %15113, align 1
  store %struct.Memory* %loadMem_4ab2ff, %struct.Memory** %MEMORY
  %loadMem_4ab303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15115 = getelementptr inbounds %struct.GPR, %struct.GPR* %15114, i32 0, i32 33
  %15116 = getelementptr inbounds %struct.Reg, %struct.Reg* %15115, i32 0, i32 0
  %PC.i2432 = bitcast %union.anon* %15116 to i64*
  %15117 = load i64, i64* %PC.i2432
  %15118 = add i64 %15117, 921
  %15119 = load i64, i64* %PC.i2432
  %15120 = add i64 %15119, 6
  %15121 = load i64, i64* %PC.i2432
  %15122 = add i64 %15121, 6
  store i64 %15122, i64* %PC.i2432
  %15123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15124 = load i8, i8* %15123, align 1
  store i8 %15124, i8* %BRANCH_TAKEN, align 1
  %15125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15126 = icmp ne i8 %15124, 0
  %15127 = select i1 %15126, i64 %15118, i64 %15120
  store i64 %15127, i64* %15125, align 8
  store %struct.Memory* %loadMem_4ab303, %struct.Memory** %MEMORY
  %loadBr_4ab303 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab303 = icmp eq i8 %loadBr_4ab303, 1
  br i1 %cmpBr_4ab303, label %block_.L_4ab69c, label %block_4ab309

block_4ab309:                                     ; preds = %block_.L_4ab2ff
  %loadMem_4ab309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15129 = getelementptr inbounds %struct.GPR, %struct.GPR* %15128, i32 0, i32 33
  %15130 = getelementptr inbounds %struct.Reg, %struct.Reg* %15129, i32 0, i32 0
  %PC.i2430 = bitcast %union.anon* %15130 to i64*
  %15131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15132 = getelementptr inbounds %struct.GPR, %struct.GPR* %15131, i32 0, i32 15
  %15133 = getelementptr inbounds %struct.Reg, %struct.Reg* %15132, i32 0, i32 0
  %RBP.i2431 = bitcast %union.anon* %15133 to i64*
  %15134 = load i64, i64* %RBP.i2431
  %15135 = sub i64 %15134, 56
  %15136 = load i64, i64* %PC.i2430
  %15137 = add i64 %15136, 7
  store i64 %15137, i64* %PC.i2430
  %15138 = inttoptr i64 %15135 to i32*
  store i32 1, i32* %15138
  store %struct.Memory* %loadMem_4ab309, %struct.Memory** %MEMORY
  %loadMem_4ab310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15140 = getelementptr inbounds %struct.GPR, %struct.GPR* %15139, i32 0, i32 33
  %15141 = getelementptr inbounds %struct.Reg, %struct.Reg* %15140, i32 0, i32 0
  %PC.i2427 = bitcast %union.anon* %15141 to i64*
  %15142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15143 = getelementptr inbounds %struct.GPR, %struct.GPR* %15142, i32 0, i32 1
  %15144 = getelementptr inbounds %struct.Reg, %struct.Reg* %15143, i32 0, i32 0
  %RAX.i2428 = bitcast %union.anon* %15144 to i64*
  %15145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15146 = getelementptr inbounds %struct.GPR, %struct.GPR* %15145, i32 0, i32 15
  %15147 = getelementptr inbounds %struct.Reg, %struct.Reg* %15146, i32 0, i32 0
  %RBP.i2429 = bitcast %union.anon* %15147 to i64*
  %15148 = load i64, i64* %RBP.i2429
  %15149 = sub i64 %15148, 408
  %15150 = load i64, i64* %PC.i2427
  %15151 = add i64 %15150, 7
  store i64 %15151, i64* %PC.i2427
  %15152 = inttoptr i64 %15149 to i64*
  %15153 = load i64, i64* %15152
  store i64 %15153, i64* %RAX.i2428, align 8
  store %struct.Memory* %loadMem_4ab310, %struct.Memory** %MEMORY
  %loadMem_4ab317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15155 = getelementptr inbounds %struct.GPR, %struct.GPR* %15154, i32 0, i32 33
  %15156 = getelementptr inbounds %struct.Reg, %struct.Reg* %15155, i32 0, i32 0
  %PC.i2425 = bitcast %union.anon* %15156 to i64*
  %15157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15158 = getelementptr inbounds %struct.GPR, %struct.GPR* %15157, i32 0, i32 1
  %15159 = getelementptr inbounds %struct.Reg, %struct.Reg* %15158, i32 0, i32 0
  %RAX.i2426 = bitcast %union.anon* %15159 to i64*
  %15160 = load i64, i64* %RAX.i2426
  %15161 = add i64 %15160, 572
  %15162 = load i64, i64* %PC.i2425
  %15163 = add i64 %15162, 7
  store i64 %15163, i64* %PC.i2425
  %15164 = inttoptr i64 %15161 to i32*
  %15165 = load i32, i32* %15164
  %15166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15166, align 1
  %15167 = and i32 %15165, 255
  %15168 = call i32 @llvm.ctpop.i32(i32 %15167)
  %15169 = trunc i32 %15168 to i8
  %15170 = and i8 %15169, 1
  %15171 = xor i8 %15170, 1
  %15172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15171, i8* %15172, align 1
  %15173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15173, align 1
  %15174 = icmp eq i32 %15165, 0
  %15175 = zext i1 %15174 to i8
  %15176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15175, i8* %15176, align 1
  %15177 = lshr i32 %15165, 31
  %15178 = trunc i32 %15177 to i8
  %15179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15178, i8* %15179, align 1
  %15180 = lshr i32 %15165, 31
  %15181 = xor i32 %15177, %15180
  %15182 = add i32 %15181, %15180
  %15183 = icmp eq i32 %15182, 2
  %15184 = zext i1 %15183 to i8
  %15185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15184, i8* %15185, align 1
  store %struct.Memory* %loadMem_4ab317, %struct.Memory** %MEMORY
  %loadMem_4ab31e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15187 = getelementptr inbounds %struct.GPR, %struct.GPR* %15186, i32 0, i32 33
  %15188 = getelementptr inbounds %struct.Reg, %struct.Reg* %15187, i32 0, i32 0
  %PC.i2424 = bitcast %union.anon* %15188 to i64*
  %15189 = load i64, i64* %PC.i2424
  %15190 = add i64 %15189, 343
  %15191 = load i64, i64* %PC.i2424
  %15192 = add i64 %15191, 6
  %15193 = load i64, i64* %PC.i2424
  %15194 = add i64 %15193, 6
  store i64 %15194, i64* %PC.i2424
  %15195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15196 = load i8, i8* %15195, align 1
  store i8 %15196, i8* %BRANCH_TAKEN, align 1
  %15197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15198 = icmp ne i8 %15196, 0
  %15199 = select i1 %15198, i64 %15190, i64 %15192
  store i64 %15199, i64* %15197, align 8
  store %struct.Memory* %loadMem_4ab31e, %struct.Memory** %MEMORY
  %loadBr_4ab31e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab31e = icmp eq i8 %loadBr_4ab31e, 1
  br i1 %cmpBr_4ab31e, label %block_.L_4ab475, label %block_4ab324

block_4ab324:                                     ; preds = %block_4ab309
  %loadMem_4ab324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15201 = getelementptr inbounds %struct.GPR, %struct.GPR* %15200, i32 0, i32 33
  %15202 = getelementptr inbounds %struct.Reg, %struct.Reg* %15201, i32 0, i32 0
  %PC.i2422 = bitcast %union.anon* %15202 to i64*
  %15203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15204 = getelementptr inbounds %struct.GPR, %struct.GPR* %15203, i32 0, i32 1
  %15205 = getelementptr inbounds %struct.Reg, %struct.Reg* %15204, i32 0, i32 0
  %RAX.i2423 = bitcast %union.anon* %15205 to i64*
  %15206 = load i64, i64* %PC.i2422
  %15207 = add i64 %15206, 8
  store i64 %15207, i64* %PC.i2422
  %15208 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %15208, i64* %RAX.i2423, align 8
  store %struct.Memory* %loadMem_4ab324, %struct.Memory** %MEMORY
  %loadMem_4ab32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15210 = getelementptr inbounds %struct.GPR, %struct.GPR* %15209, i32 0, i32 33
  %15211 = getelementptr inbounds %struct.Reg, %struct.Reg* %15210, i32 0, i32 0
  %PC.i2420 = bitcast %union.anon* %15211 to i64*
  %15212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15213 = getelementptr inbounds %struct.GPR, %struct.GPR* %15212, i32 0, i32 1
  %15214 = getelementptr inbounds %struct.Reg, %struct.Reg* %15213, i32 0, i32 0
  %RAX.i2421 = bitcast %union.anon* %15214 to i64*
  %15215 = load i64, i64* %RAX.i2421
  %15216 = add i64 %15215, 2356
  %15217 = load i64, i64* %PC.i2420
  %15218 = add i64 %15217, 7
  store i64 %15218, i64* %PC.i2420
  %15219 = inttoptr i64 %15216 to i32*
  %15220 = load i32, i32* %15219
  %15221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15221, align 1
  %15222 = and i32 %15220, 255
  %15223 = call i32 @llvm.ctpop.i32(i32 %15222)
  %15224 = trunc i32 %15223 to i8
  %15225 = and i8 %15224, 1
  %15226 = xor i8 %15225, 1
  %15227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15226, i8* %15227, align 1
  %15228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15228, align 1
  %15229 = icmp eq i32 %15220, 0
  %15230 = zext i1 %15229 to i8
  %15231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15230, i8* %15231, align 1
  %15232 = lshr i32 %15220, 31
  %15233 = trunc i32 %15232 to i8
  %15234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15233, i8* %15234, align 1
  %15235 = lshr i32 %15220, 31
  %15236 = xor i32 %15232, %15235
  %15237 = add i32 %15236, %15235
  %15238 = icmp eq i32 %15237, 2
  %15239 = zext i1 %15238 to i8
  %15240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15239, i8* %15240, align 1
  store %struct.Memory* %loadMem_4ab32c, %struct.Memory** %MEMORY
  %loadMem_4ab333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15242 = getelementptr inbounds %struct.GPR, %struct.GPR* %15241, i32 0, i32 33
  %15243 = getelementptr inbounds %struct.Reg, %struct.Reg* %15242, i32 0, i32 0
  %PC.i2419 = bitcast %union.anon* %15243 to i64*
  %15244 = load i64, i64* %PC.i2419
  %15245 = add i64 %15244, 322
  %15246 = load i64, i64* %PC.i2419
  %15247 = add i64 %15246, 6
  %15248 = load i64, i64* %PC.i2419
  %15249 = add i64 %15248, 6
  store i64 %15249, i64* %PC.i2419
  %15250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15251 = load i8, i8* %15250, align 1
  %15252 = icmp eq i8 %15251, 0
  %15253 = zext i1 %15252 to i8
  store i8 %15253, i8* %BRANCH_TAKEN, align 1
  %15254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15255 = select i1 %15252, i64 %15245, i64 %15247
  store i64 %15255, i64* %15254, align 8
  store %struct.Memory* %loadMem_4ab333, %struct.Memory** %MEMORY
  %loadBr_4ab333 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab333 = icmp eq i8 %loadBr_4ab333, 1
  br i1 %cmpBr_4ab333, label %block_.L_4ab475, label %block_4ab339

block_4ab339:                                     ; preds = %block_4ab324
  %loadMem_4ab339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15257 = getelementptr inbounds %struct.GPR, %struct.GPR* %15256, i32 0, i32 33
  %15258 = getelementptr inbounds %struct.Reg, %struct.Reg* %15257, i32 0, i32 0
  %PC.i2417 = bitcast %union.anon* %15258 to i64*
  %15259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15260 = getelementptr inbounds %struct.GPR, %struct.GPR* %15259, i32 0, i32 15
  %15261 = getelementptr inbounds %struct.Reg, %struct.Reg* %15260, i32 0, i32 0
  %RBP.i2418 = bitcast %union.anon* %15261 to i64*
  %15262 = load i64, i64* %RBP.i2418
  %15263 = sub i64 %15262, 44
  %15264 = load i64, i64* %PC.i2417
  %15265 = add i64 %15264, 4
  store i64 %15265, i64* %PC.i2417
  %15266 = inttoptr i64 %15263 to i32*
  %15267 = load i32, i32* %15266
  %15268 = sub i32 %15267, 1
  %15269 = icmp ult i32 %15267, 1
  %15270 = zext i1 %15269 to i8
  %15271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15270, i8* %15271, align 1
  %15272 = and i32 %15268, 255
  %15273 = call i32 @llvm.ctpop.i32(i32 %15272)
  %15274 = trunc i32 %15273 to i8
  %15275 = and i8 %15274, 1
  %15276 = xor i8 %15275, 1
  %15277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15276, i8* %15277, align 1
  %15278 = xor i32 %15267, 1
  %15279 = xor i32 %15278, %15268
  %15280 = lshr i32 %15279, 4
  %15281 = trunc i32 %15280 to i8
  %15282 = and i8 %15281, 1
  %15283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15282, i8* %15283, align 1
  %15284 = icmp eq i32 %15268, 0
  %15285 = zext i1 %15284 to i8
  %15286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15285, i8* %15286, align 1
  %15287 = lshr i32 %15268, 31
  %15288 = trunc i32 %15287 to i8
  %15289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15288, i8* %15289, align 1
  %15290 = lshr i32 %15267, 31
  %15291 = xor i32 %15287, %15290
  %15292 = add i32 %15291, %15290
  %15293 = icmp eq i32 %15292, 2
  %15294 = zext i1 %15293 to i8
  %15295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15294, i8* %15295, align 1
  store %struct.Memory* %loadMem_4ab339, %struct.Memory** %MEMORY
  %loadMem_4ab33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15297 = getelementptr inbounds %struct.GPR, %struct.GPR* %15296, i32 0, i32 33
  %15298 = getelementptr inbounds %struct.Reg, %struct.Reg* %15297, i32 0, i32 0
  %PC.i2416 = bitcast %union.anon* %15298 to i64*
  %15299 = load i64, i64* %PC.i2416
  %15300 = add i64 %15299, 25
  %15301 = load i64, i64* %PC.i2416
  %15302 = add i64 %15301, 6
  %15303 = load i64, i64* %PC.i2416
  %15304 = add i64 %15303, 6
  store i64 %15304, i64* %PC.i2416
  %15305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15306 = load i8, i8* %15305, align 1
  %15307 = icmp ne i8 %15306, 0
  %15308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15309 = load i8, i8* %15308, align 1
  %15310 = icmp ne i8 %15309, 0
  %15311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15312 = load i8, i8* %15311, align 1
  %15313 = icmp ne i8 %15312, 0
  %15314 = xor i1 %15310, %15313
  %15315 = or i1 %15307, %15314
  %15316 = zext i1 %15315 to i8
  store i8 %15316, i8* %BRANCH_TAKEN, align 1
  %15317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15318 = select i1 %15315, i64 %15300, i64 %15302
  store i64 %15318, i64* %15317, align 8
  store %struct.Memory* %loadMem_4ab33d, %struct.Memory** %MEMORY
  %loadBr_4ab33d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab33d = icmp eq i8 %loadBr_4ab33d, 1
  br i1 %cmpBr_4ab33d, label %block_.L_4ab356, label %block_4ab343

block_4ab343:                                     ; preds = %block_4ab339
  %loadMem_4ab343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15320 = getelementptr inbounds %struct.GPR, %struct.GPR* %15319, i32 0, i32 33
  %15321 = getelementptr inbounds %struct.Reg, %struct.Reg* %15320, i32 0, i32 0
  %PC.i2413 = bitcast %union.anon* %15321 to i64*
  %15322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15323 = getelementptr inbounds %struct.GPR, %struct.GPR* %15322, i32 0, i32 1
  %15324 = getelementptr inbounds %struct.Reg, %struct.Reg* %15323, i32 0, i32 0
  %RAX.i2414 = bitcast %union.anon* %15324 to i64*
  %15325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15326 = getelementptr inbounds %struct.GPR, %struct.GPR* %15325, i32 0, i32 15
  %15327 = getelementptr inbounds %struct.Reg, %struct.Reg* %15326, i32 0, i32 0
  %RBP.i2415 = bitcast %union.anon* %15327 to i64*
  %15328 = load i64, i64* %RBP.i2415
  %15329 = sub i64 %15328, 16
  %15330 = load i64, i64* %PC.i2413
  %15331 = add i64 %15330, 4
  store i64 %15331, i64* %PC.i2413
  %15332 = inttoptr i64 %15329 to i64*
  %15333 = load i64, i64* %15332
  store i64 %15333, i64* %RAX.i2414, align 8
  store %struct.Memory* %loadMem_4ab343, %struct.Memory** %MEMORY
  %loadMem_4ab347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15335 = getelementptr inbounds %struct.GPR, %struct.GPR* %15334, i32 0, i32 33
  %15336 = getelementptr inbounds %struct.Reg, %struct.Reg* %15335, i32 0, i32 0
  %PC.i2410 = bitcast %union.anon* %15336 to i64*
  %15337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15338 = getelementptr inbounds %struct.GPR, %struct.GPR* %15337, i32 0, i32 1
  %15339 = getelementptr inbounds %struct.Reg, %struct.Reg* %15338, i32 0, i32 0
  %RAX.i2411 = bitcast %union.anon* %15339 to i64*
  %15340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15341 = getelementptr inbounds %struct.GPR, %struct.GPR* %15340, i32 0, i32 5
  %15342 = getelementptr inbounds %struct.Reg, %struct.Reg* %15341, i32 0, i32 0
  %RCX.i2412 = bitcast %union.anon* %15342 to i64*
  %15343 = load i64, i64* %RAX.i2411
  %15344 = load i64, i64* %PC.i2410
  %15345 = add i64 %15344, 2
  store i64 %15345, i64* %PC.i2410
  %15346 = inttoptr i64 %15343 to i32*
  %15347 = load i32, i32* %15346
  %15348 = zext i32 %15347 to i64
  store i64 %15348, i64* %RCX.i2412, align 8
  store %struct.Memory* %loadMem_4ab347, %struct.Memory** %MEMORY
  %loadMem_4ab349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15350 = getelementptr inbounds %struct.GPR, %struct.GPR* %15349, i32 0, i32 33
  %15351 = getelementptr inbounds %struct.Reg, %struct.Reg* %15350, i32 0, i32 0
  %PC.i2408 = bitcast %union.anon* %15351 to i64*
  %15352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15353 = getelementptr inbounds %struct.GPR, %struct.GPR* %15352, i32 0, i32 5
  %15354 = getelementptr inbounds %struct.Reg, %struct.Reg* %15353, i32 0, i32 0
  %RCX.i2409 = bitcast %union.anon* %15354 to i64*
  %15355 = load i64, i64* %RCX.i2409
  %15356 = load i64, i64* %PC.i2408
  %15357 = add i64 %15356, 6
  store i64 %15357, i64* %PC.i2408
  %15358 = trunc i64 %15355 to i32
  %15359 = add i32 999999, %15358
  %15360 = zext i32 %15359 to i64
  store i64 %15360, i64* %RCX.i2409, align 8
  %15361 = icmp ult i32 %15359, %15358
  %15362 = icmp ult i32 %15359, 999999
  %15363 = or i1 %15361, %15362
  %15364 = zext i1 %15363 to i8
  %15365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15364, i8* %15365, align 1
  %15366 = and i32 %15359, 255
  %15367 = call i32 @llvm.ctpop.i32(i32 %15366)
  %15368 = trunc i32 %15367 to i8
  %15369 = and i8 %15368, 1
  %15370 = xor i8 %15369, 1
  %15371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15370, i8* %15371, align 1
  %15372 = xor i64 999999, %15355
  %15373 = trunc i64 %15372 to i32
  %15374 = xor i32 %15373, %15359
  %15375 = lshr i32 %15374, 4
  %15376 = trunc i32 %15375 to i8
  %15377 = and i8 %15376, 1
  %15378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15377, i8* %15378, align 1
  %15379 = icmp eq i32 %15359, 0
  %15380 = zext i1 %15379 to i8
  %15381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15380, i8* %15381, align 1
  %15382 = lshr i32 %15359, 31
  %15383 = trunc i32 %15382 to i8
  %15384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15383, i8* %15384, align 1
  %15385 = lshr i32 %15358, 31
  %15386 = xor i32 %15382, %15385
  %15387 = add i32 %15386, %15382
  %15388 = icmp eq i32 %15387, 2
  %15389 = zext i1 %15388 to i8
  %15390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15389, i8* %15390, align 1
  store %struct.Memory* %loadMem_4ab349, %struct.Memory** %MEMORY
  %loadMem_4ab34f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15392 = getelementptr inbounds %struct.GPR, %struct.GPR* %15391, i32 0, i32 33
  %15393 = getelementptr inbounds %struct.Reg, %struct.Reg* %15392, i32 0, i32 0
  %PC.i2405 = bitcast %union.anon* %15393 to i64*
  %15394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15395 = getelementptr inbounds %struct.GPR, %struct.GPR* %15394, i32 0, i32 5
  %15396 = getelementptr inbounds %struct.Reg, %struct.Reg* %15395, i32 0, i32 0
  %ECX.i2406 = bitcast %union.anon* %15396 to i32*
  %15397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15398 = getelementptr inbounds %struct.GPR, %struct.GPR* %15397, i32 0, i32 1
  %15399 = getelementptr inbounds %struct.Reg, %struct.Reg* %15398, i32 0, i32 0
  %RAX.i2407 = bitcast %union.anon* %15399 to i64*
  %15400 = load i64, i64* %RAX.i2407
  %15401 = load i32, i32* %ECX.i2406
  %15402 = zext i32 %15401 to i64
  %15403 = load i64, i64* %PC.i2405
  %15404 = add i64 %15403, 2
  store i64 %15404, i64* %PC.i2405
  %15405 = inttoptr i64 %15400 to i32*
  store i32 %15401, i32* %15405
  store %struct.Memory* %loadMem_4ab34f, %struct.Memory** %MEMORY
  %loadMem_4ab351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15407 = getelementptr inbounds %struct.GPR, %struct.GPR* %15406, i32 0, i32 33
  %15408 = getelementptr inbounds %struct.Reg, %struct.Reg* %15407, i32 0, i32 0
  %PC.i2404 = bitcast %union.anon* %15408 to i64*
  %15409 = load i64, i64* %PC.i2404
  %15410 = add i64 %15409, 66
  %15411 = load i64, i64* %PC.i2404
  %15412 = add i64 %15411, 5
  store i64 %15412, i64* %PC.i2404
  %15413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15410, i64* %15413, align 8
  store %struct.Memory* %loadMem_4ab351, %struct.Memory** %MEMORY
  br label %block_.L_4ab393

block_.L_4ab356:                                  ; preds = %block_4ab339
  %loadMem_4ab356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15415 = getelementptr inbounds %struct.GPR, %struct.GPR* %15414, i32 0, i32 33
  %15416 = getelementptr inbounds %struct.Reg, %struct.Reg* %15415, i32 0, i32 0
  %PC.i2402 = bitcast %union.anon* %15416 to i64*
  %15417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15418 = getelementptr inbounds %struct.GPR, %struct.GPR* %15417, i32 0, i32 1
  %15419 = getelementptr inbounds %struct.Reg, %struct.Reg* %15418, i32 0, i32 0
  %RAX.i2403 = bitcast %union.anon* %15419 to i64*
  %15420 = load i64, i64* %PC.i2402
  %15421 = add i64 %15420, 10
  store i64 %15421, i64* %PC.i2402
  store i64 ptrtoint (%G__0x4ba450_type* @G__0x4ba450 to i64), i64* %RAX.i2403, align 8
  store %struct.Memory* %loadMem_4ab356, %struct.Memory** %MEMORY
  %loadMem_4ab360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15423 = getelementptr inbounds %struct.GPR, %struct.GPR* %15422, i32 0, i32 33
  %15424 = getelementptr inbounds %struct.Reg, %struct.Reg* %15423, i32 0, i32 0
  %PC.i2400 = bitcast %union.anon* %15424 to i64*
  %15425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15426 = getelementptr inbounds %struct.GPR, %struct.GPR* %15425, i32 0, i32 5
  %15427 = getelementptr inbounds %struct.Reg, %struct.Reg* %15426, i32 0, i32 0
  %RCX.i2401 = bitcast %union.anon* %15427 to i64*
  %15428 = load i64, i64* %PC.i2400
  %15429 = add i64 %15428, 8
  store i64 %15429, i64* %PC.i2400
  %15430 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %15430, i64* %RCX.i2401, align 8
  store %struct.Memory* %loadMem_4ab360, %struct.Memory** %MEMORY
  %loadMem_4ab368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15432 = getelementptr inbounds %struct.GPR, %struct.GPR* %15431, i32 0, i32 33
  %15433 = getelementptr inbounds %struct.Reg, %struct.Reg* %15432, i32 0, i32 0
  %PC.i2398 = bitcast %union.anon* %15433 to i64*
  %15434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15435 = getelementptr inbounds %struct.GPR, %struct.GPR* %15434, i32 0, i32 5
  %15436 = getelementptr inbounds %struct.Reg, %struct.Reg* %15435, i32 0, i32 0
  %RCX.i2399 = bitcast %union.anon* %15436 to i64*
  %15437 = load i64, i64* %RCX.i2399
  %15438 = add i64 %15437, 2468
  %15439 = load i64, i64* %PC.i2398
  %15440 = add i64 %15439, 7
  store i64 %15440, i64* %PC.i2398
  %15441 = inttoptr i64 %15438 to i32*
  %15442 = load i32, i32* %15441
  %15443 = sext i32 %15442 to i64
  store i64 %15443, i64* %RCX.i2399, align 8
  store %struct.Memory* %loadMem_4ab368, %struct.Memory** %MEMORY
  %loadMem_4ab36f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15445 = getelementptr inbounds %struct.GPR, %struct.GPR* %15444, i32 0, i32 33
  %15446 = getelementptr inbounds %struct.Reg, %struct.Reg* %15445, i32 0, i32 0
  %PC.i2396 = bitcast %union.anon* %15446 to i64*
  %15447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15448 = getelementptr inbounds %struct.GPR, %struct.GPR* %15447, i32 0, i32 5
  %15449 = getelementptr inbounds %struct.Reg, %struct.Reg* %15448, i32 0, i32 0
  %RCX.i2397 = bitcast %union.anon* %15449 to i64*
  %15450 = load i64, i64* %RCX.i2397
  %15451 = load i64, i64* %PC.i2396
  %15452 = add i64 %15451, 4
  store i64 %15452, i64* %PC.i2396
  %15453 = shl i64 %15450, 5
  %15454 = icmp slt i64 %15453, 0
  %15455 = shl i64 %15453, 1
  store i64 %15455, i64* %RCX.i2397, align 8
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15457 = zext i1 %15454 to i8
  store i8 %15457, i8* %15456, align 1
  %15458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15459 = trunc i64 %15455 to i32
  %15460 = and i32 %15459, 254
  %15461 = call i32 @llvm.ctpop.i32(i32 %15460)
  %15462 = trunc i32 %15461 to i8
  %15463 = and i8 %15462, 1
  %15464 = xor i8 %15463, 1
  store i8 %15464, i8* %15458, align 1
  %15465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15465, align 1
  %15466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15467 = icmp eq i64 %15455, 0
  %15468 = zext i1 %15467 to i8
  store i8 %15468, i8* %15466, align 1
  %15469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15470 = lshr i64 %15455, 63
  %15471 = trunc i64 %15470 to i8
  store i8 %15471, i8* %15469, align 1
  %15472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15472, align 1
  store %struct.Memory* %loadMem_4ab36f, %struct.Memory** %MEMORY
  %loadMem_4ab373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15474 = getelementptr inbounds %struct.GPR, %struct.GPR* %15473, i32 0, i32 33
  %15475 = getelementptr inbounds %struct.Reg, %struct.Reg* %15474, i32 0, i32 0
  %PC.i2393 = bitcast %union.anon* %15475 to i64*
  %15476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15477 = getelementptr inbounds %struct.GPR, %struct.GPR* %15476, i32 0, i32 1
  %15478 = getelementptr inbounds %struct.Reg, %struct.Reg* %15477, i32 0, i32 0
  %RAX.i2394 = bitcast %union.anon* %15478 to i64*
  %15479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15480 = getelementptr inbounds %struct.GPR, %struct.GPR* %15479, i32 0, i32 5
  %15481 = getelementptr inbounds %struct.Reg, %struct.Reg* %15480, i32 0, i32 0
  %RCX.i2395 = bitcast %union.anon* %15481 to i64*
  %15482 = load i64, i64* %RAX.i2394
  %15483 = load i64, i64* %RCX.i2395
  %15484 = load i64, i64* %PC.i2393
  %15485 = add i64 %15484, 3
  store i64 %15485, i64* %PC.i2393
  %15486 = add i64 %15483, %15482
  store i64 %15486, i64* %RAX.i2394, align 8
  %15487 = icmp ult i64 %15486, %15482
  %15488 = icmp ult i64 %15486, %15483
  %15489 = or i1 %15487, %15488
  %15490 = zext i1 %15489 to i8
  %15491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15490, i8* %15491, align 1
  %15492 = trunc i64 %15486 to i32
  %15493 = and i32 %15492, 255
  %15494 = call i32 @llvm.ctpop.i32(i32 %15493)
  %15495 = trunc i32 %15494 to i8
  %15496 = and i8 %15495, 1
  %15497 = xor i8 %15496, 1
  %15498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15497, i8* %15498, align 1
  %15499 = xor i64 %15483, %15482
  %15500 = xor i64 %15499, %15486
  %15501 = lshr i64 %15500, 4
  %15502 = trunc i64 %15501 to i8
  %15503 = and i8 %15502, 1
  %15504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15503, i8* %15504, align 1
  %15505 = icmp eq i64 %15486, 0
  %15506 = zext i1 %15505 to i8
  %15507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15506, i8* %15507, align 1
  %15508 = lshr i64 %15486, 63
  %15509 = trunc i64 %15508 to i8
  %15510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15509, i8* %15510, align 1
  %15511 = lshr i64 %15482, 63
  %15512 = lshr i64 %15483, 63
  %15513 = xor i64 %15508, %15511
  %15514 = xor i64 %15508, %15512
  %15515 = add i64 %15513, %15514
  %15516 = icmp eq i64 %15515, 2
  %15517 = zext i1 %15516 to i8
  %15518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15517, i8* %15518, align 1
  store %struct.Memory* %loadMem_4ab373, %struct.Memory** %MEMORY
  %loadMem_4ab376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15520 = getelementptr inbounds %struct.GPR, %struct.GPR* %15519, i32 0, i32 33
  %15521 = getelementptr inbounds %struct.Reg, %struct.Reg* %15520, i32 0, i32 0
  %PC.i2390 = bitcast %union.anon* %15521 to i64*
  %15522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15523 = getelementptr inbounds %struct.GPR, %struct.GPR* %15522, i32 0, i32 7
  %15524 = getelementptr inbounds %struct.Reg, %struct.Reg* %15523, i32 0, i32 0
  %RDX.i2391 = bitcast %union.anon* %15524 to i64*
  %15525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15526 = getelementptr inbounds %struct.GPR, %struct.GPR* %15525, i32 0, i32 15
  %15527 = getelementptr inbounds %struct.Reg, %struct.Reg* %15526, i32 0, i32 0
  %RBP.i2392 = bitcast %union.anon* %15527 to i64*
  %15528 = load i64, i64* %RBP.i2392
  %15529 = sub i64 %15528, 36
  %15530 = load i64, i64* %PC.i2390
  %15531 = add i64 %15530, 3
  store i64 %15531, i64* %PC.i2390
  %15532 = inttoptr i64 %15529 to i32*
  %15533 = load i32, i32* %15532
  %15534 = zext i32 %15533 to i64
  store i64 %15534, i64* %RDX.i2391, align 8
  store %struct.Memory* %loadMem_4ab376, %struct.Memory** %MEMORY
  %loadMem_4ab379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15536 = getelementptr inbounds %struct.GPR, %struct.GPR* %15535, i32 0, i32 33
  %15537 = getelementptr inbounds %struct.Reg, %struct.Reg* %15536, i32 0, i32 0
  %PC.i2388 = bitcast %union.anon* %15537 to i64*
  %15538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15539 = getelementptr inbounds %struct.GPR, %struct.GPR* %15538, i32 0, i32 7
  %15540 = getelementptr inbounds %struct.Reg, %struct.Reg* %15539, i32 0, i32 0
  %RDX.i2389 = bitcast %union.anon* %15540 to i64*
  %15541 = load i64, i64* %RDX.i2389
  %15542 = load i64, i64* %PC.i2388
  %15543 = add i64 %15542, 3
  store i64 %15543, i64* %PC.i2388
  %15544 = and i64 3, %15541
  %15545 = trunc i64 %15544 to i32
  store i64 %15544, i64* %RDX.i2389, align 8
  %15546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15546, align 1
  %15547 = and i32 %15545, 255
  %15548 = call i32 @llvm.ctpop.i32(i32 %15547)
  %15549 = trunc i32 %15548 to i8
  %15550 = and i8 %15549, 1
  %15551 = xor i8 %15550, 1
  %15552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15551, i8* %15552, align 1
  %15553 = icmp eq i32 %15545, 0
  %15554 = zext i1 %15553 to i8
  %15555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15554, i8* %15555, align 1
  %15556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %15556, align 1
  %15557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15557, align 1
  %15558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15558, align 1
  store %struct.Memory* %loadMem_4ab379, %struct.Memory** %MEMORY
  %loadMem_4ab37c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15560 = getelementptr inbounds %struct.GPR, %struct.GPR* %15559, i32 0, i32 33
  %15561 = getelementptr inbounds %struct.Reg, %struct.Reg* %15560, i32 0, i32 0
  %PC.i2385 = bitcast %union.anon* %15561 to i64*
  %15562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15563 = getelementptr inbounds %struct.GPR, %struct.GPR* %15562, i32 0, i32 7
  %15564 = getelementptr inbounds %struct.Reg, %struct.Reg* %15563, i32 0, i32 0
  %EDX.i2386 = bitcast %union.anon* %15564 to i32*
  %15565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15566 = getelementptr inbounds %struct.GPR, %struct.GPR* %15565, i32 0, i32 5
  %15567 = getelementptr inbounds %struct.Reg, %struct.Reg* %15566, i32 0, i32 0
  %RCX.i2387 = bitcast %union.anon* %15567 to i64*
  %15568 = load i32, i32* %EDX.i2386
  %15569 = zext i32 %15568 to i64
  %15570 = load i64, i64* %PC.i2385
  %15571 = add i64 %15570, 3
  store i64 %15571, i64* %PC.i2385
  %15572 = shl i64 %15569, 32
  %15573 = ashr exact i64 %15572, 32
  store i64 %15573, i64* %RCX.i2387, align 8
  store %struct.Memory* %loadMem_4ab37c, %struct.Memory** %MEMORY
  %loadMem_4ab37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15575 = getelementptr inbounds %struct.GPR, %struct.GPR* %15574, i32 0, i32 33
  %15576 = getelementptr inbounds %struct.Reg, %struct.Reg* %15575, i32 0, i32 0
  %PC.i2382 = bitcast %union.anon* %15576 to i64*
  %15577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15578 = getelementptr inbounds %struct.GPR, %struct.GPR* %15577, i32 0, i32 5
  %15579 = getelementptr inbounds %struct.Reg, %struct.Reg* %15578, i32 0, i32 0
  %RCX.i2383 = bitcast %union.anon* %15579 to i64*
  %15580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15581 = getelementptr inbounds %struct.GPR, %struct.GPR* %15580, i32 0, i32 15
  %15582 = getelementptr inbounds %struct.Reg, %struct.Reg* %15581, i32 0, i32 0
  %RBP.i2384 = bitcast %union.anon* %15582 to i64*
  %15583 = load i64, i64* %RBP.i2384
  %15584 = load i64, i64* %RCX.i2383
  %15585 = mul i64 %15584, 4
  %15586 = add i64 %15583, -400
  %15587 = add i64 %15586, %15585
  %15588 = load i64, i64* %PC.i2382
  %15589 = add i64 %15588, 8
  store i64 %15589, i64* %PC.i2382
  %15590 = inttoptr i64 %15587 to i32*
  %15591 = load i32, i32* %15590
  %15592 = sext i32 %15591 to i64
  store i64 %15592, i64* %RCX.i2383, align 8
  store %struct.Memory* %loadMem_4ab37f, %struct.Memory** %MEMORY
  %loadMem_4ab387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15594 = getelementptr inbounds %struct.GPR, %struct.GPR* %15593, i32 0, i32 33
  %15595 = getelementptr inbounds %struct.Reg, %struct.Reg* %15594, i32 0, i32 0
  %PC.i2378 = bitcast %union.anon* %15595 to i64*
  %15596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15597 = getelementptr inbounds %struct.GPR, %struct.GPR* %15596, i32 0, i32 1
  %15598 = getelementptr inbounds %struct.Reg, %struct.Reg* %15597, i32 0, i32 0
  %RAX.i2379 = bitcast %union.anon* %15598 to i64*
  %15599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15600 = getelementptr inbounds %struct.GPR, %struct.GPR* %15599, i32 0, i32 5
  %15601 = getelementptr inbounds %struct.Reg, %struct.Reg* %15600, i32 0, i32 0
  %RCX.i2380 = bitcast %union.anon* %15601 to i64*
  %15602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15603 = getelementptr inbounds %struct.GPR, %struct.GPR* %15602, i32 0, i32 7
  %15604 = getelementptr inbounds %struct.Reg, %struct.Reg* %15603, i32 0, i32 0
  %RDX.i2381 = bitcast %union.anon* %15604 to i64*
  %15605 = load i64, i64* %RAX.i2379
  %15606 = load i64, i64* %RCX.i2380
  %15607 = add i64 %15606, %15605
  %15608 = load i64, i64* %PC.i2378
  %15609 = add i64 %15608, 4
  store i64 %15609, i64* %PC.i2378
  %15610 = inttoptr i64 %15607 to i8*
  %15611 = load i8, i8* %15610
  %15612 = zext i8 %15611 to i64
  store i64 %15612, i64* %RDX.i2381, align 8
  store %struct.Memory* %loadMem_4ab387, %struct.Memory** %MEMORY
  %loadMem_4ab38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15614 = getelementptr inbounds %struct.GPR, %struct.GPR* %15613, i32 0, i32 33
  %15615 = getelementptr inbounds %struct.Reg, %struct.Reg* %15614, i32 0, i32 0
  %PC.i2375 = bitcast %union.anon* %15615 to i64*
  %15616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15617 = getelementptr inbounds %struct.GPR, %struct.GPR* %15616, i32 0, i32 1
  %15618 = getelementptr inbounds %struct.Reg, %struct.Reg* %15617, i32 0, i32 0
  %RAX.i2376 = bitcast %union.anon* %15618 to i64*
  %15619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15620 = getelementptr inbounds %struct.GPR, %struct.GPR* %15619, i32 0, i32 15
  %15621 = getelementptr inbounds %struct.Reg, %struct.Reg* %15620, i32 0, i32 0
  %RBP.i2377 = bitcast %union.anon* %15621 to i64*
  %15622 = load i64, i64* %RBP.i2377
  %15623 = sub i64 %15622, 16
  %15624 = load i64, i64* %PC.i2375
  %15625 = add i64 %15624, 4
  store i64 %15625, i64* %PC.i2375
  %15626 = inttoptr i64 %15623 to i64*
  %15627 = load i64, i64* %15626
  store i64 %15627, i64* %RAX.i2376, align 8
  store %struct.Memory* %loadMem_4ab38b, %struct.Memory** %MEMORY
  %loadMem_4ab38f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15629 = getelementptr inbounds %struct.GPR, %struct.GPR* %15628, i32 0, i32 33
  %15630 = getelementptr inbounds %struct.Reg, %struct.Reg* %15629, i32 0, i32 0
  %PC.i2372 = bitcast %union.anon* %15630 to i64*
  %15631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15632 = getelementptr inbounds %struct.GPR, %struct.GPR* %15631, i32 0, i32 1
  %15633 = getelementptr inbounds %struct.Reg, %struct.Reg* %15632, i32 0, i32 0
  %RAX.i2373 = bitcast %union.anon* %15633 to i64*
  %15634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15635 = getelementptr inbounds %struct.GPR, %struct.GPR* %15634, i32 0, i32 7
  %15636 = getelementptr inbounds %struct.Reg, %struct.Reg* %15635, i32 0, i32 0
  %RDX.i2374 = bitcast %union.anon* %15636 to i64*
  %15637 = load i64, i64* %RDX.i2374
  %15638 = load i64, i64* %RAX.i2373
  %15639 = load i64, i64* %PC.i2372
  %15640 = add i64 %15639, 2
  store i64 %15640, i64* %PC.i2372
  %15641 = trunc i64 %15637 to i32
  %15642 = inttoptr i64 %15638 to i32*
  %15643 = load i32, i32* %15642
  %15644 = add i32 %15643, %15641
  %15645 = zext i32 %15644 to i64
  store i64 %15645, i64* %RDX.i2374, align 8
  %15646 = icmp ult i32 %15644, %15641
  %15647 = icmp ult i32 %15644, %15643
  %15648 = or i1 %15646, %15647
  %15649 = zext i1 %15648 to i8
  %15650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15649, i8* %15650, align 1
  %15651 = and i32 %15644, 255
  %15652 = call i32 @llvm.ctpop.i32(i32 %15651)
  %15653 = trunc i32 %15652 to i8
  %15654 = and i8 %15653, 1
  %15655 = xor i8 %15654, 1
  %15656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15655, i8* %15656, align 1
  %15657 = xor i32 %15643, %15641
  %15658 = xor i32 %15657, %15644
  %15659 = lshr i32 %15658, 4
  %15660 = trunc i32 %15659 to i8
  %15661 = and i8 %15660, 1
  %15662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15661, i8* %15662, align 1
  %15663 = icmp eq i32 %15644, 0
  %15664 = zext i1 %15663 to i8
  %15665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15664, i8* %15665, align 1
  %15666 = lshr i32 %15644, 31
  %15667 = trunc i32 %15666 to i8
  %15668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15667, i8* %15668, align 1
  %15669 = lshr i32 %15641, 31
  %15670 = lshr i32 %15643, 31
  %15671 = xor i32 %15666, %15669
  %15672 = xor i32 %15666, %15670
  %15673 = add i32 %15671, %15672
  %15674 = icmp eq i32 %15673, 2
  %15675 = zext i1 %15674 to i8
  %15676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15675, i8* %15676, align 1
  store %struct.Memory* %loadMem_4ab38f, %struct.Memory** %MEMORY
  %loadMem_4ab391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15678 = getelementptr inbounds %struct.GPR, %struct.GPR* %15677, i32 0, i32 33
  %15679 = getelementptr inbounds %struct.Reg, %struct.Reg* %15678, i32 0, i32 0
  %PC.i2369 = bitcast %union.anon* %15679 to i64*
  %15680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15681 = getelementptr inbounds %struct.GPR, %struct.GPR* %15680, i32 0, i32 7
  %15682 = getelementptr inbounds %struct.Reg, %struct.Reg* %15681, i32 0, i32 0
  %EDX.i2370 = bitcast %union.anon* %15682 to i32*
  %15683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15684 = getelementptr inbounds %struct.GPR, %struct.GPR* %15683, i32 0, i32 1
  %15685 = getelementptr inbounds %struct.Reg, %struct.Reg* %15684, i32 0, i32 0
  %RAX.i2371 = bitcast %union.anon* %15685 to i64*
  %15686 = load i64, i64* %RAX.i2371
  %15687 = load i32, i32* %EDX.i2370
  %15688 = zext i32 %15687 to i64
  %15689 = load i64, i64* %PC.i2369
  %15690 = add i64 %15689, 2
  store i64 %15690, i64* %PC.i2369
  %15691 = inttoptr i64 %15686 to i32*
  store i32 %15687, i32* %15691
  store %struct.Memory* %loadMem_4ab391, %struct.Memory** %MEMORY
  br label %block_.L_4ab393

block_.L_4ab393:                                  ; preds = %block_.L_4ab356, %block_4ab343
  %loadMem_4ab393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15693 = getelementptr inbounds %struct.GPR, %struct.GPR* %15692, i32 0, i32 33
  %15694 = getelementptr inbounds %struct.Reg, %struct.Reg* %15693, i32 0, i32 0
  %PC.i2366 = bitcast %union.anon* %15694 to i64*
  %15695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15696 = getelementptr inbounds %struct.GPR, %struct.GPR* %15695, i32 0, i32 11
  %15697 = getelementptr inbounds %struct.Reg, %struct.Reg* %15696, i32 0, i32 0
  %RDI.i2367 = bitcast %union.anon* %15697 to i64*
  %15698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15699 = getelementptr inbounds %struct.GPR, %struct.GPR* %15698, i32 0, i32 15
  %15700 = getelementptr inbounds %struct.Reg, %struct.Reg* %15699, i32 0, i32 0
  %RBP.i2368 = bitcast %union.anon* %15700 to i64*
  %15701 = load i64, i64* %RBP.i2368
  %15702 = sub i64 %15701, 44
  %15703 = load i64, i64* %PC.i2366
  %15704 = add i64 %15703, 3
  store i64 %15704, i64* %PC.i2366
  %15705 = inttoptr i64 %15702 to i32*
  %15706 = load i32, i32* %15705
  %15707 = zext i32 %15706 to i64
  store i64 %15707, i64* %RDI.i2367, align 8
  store %struct.Memory* %loadMem_4ab393, %struct.Memory** %MEMORY
  %loadMem_4ab396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15709 = getelementptr inbounds %struct.GPR, %struct.GPR* %15708, i32 0, i32 33
  %15710 = getelementptr inbounds %struct.Reg, %struct.Reg* %15709, i32 0, i32 0
  %PC.i2364 = bitcast %union.anon* %15710 to i64*
  %15711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15712 = getelementptr inbounds %struct.GPR, %struct.GPR* %15711, i32 0, i32 1
  %15713 = getelementptr inbounds %struct.Reg, %struct.Reg* %15712, i32 0, i32 0
  %RAX.i2365 = bitcast %union.anon* %15713 to i64*
  %15714 = load i64, i64* %PC.i2364
  %15715 = add i64 %15714, 8
  store i64 %15715, i64* %PC.i2364
  %15716 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15716, i64* %RAX.i2365, align 8
  store %struct.Memory* %loadMem_4ab396, %struct.Memory** %MEMORY
  %loadMem_4ab39e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15718 = getelementptr inbounds %struct.GPR, %struct.GPR* %15717, i32 0, i32 33
  %15719 = getelementptr inbounds %struct.Reg, %struct.Reg* %15718, i32 0, i32 0
  %PC.i2362 = bitcast %union.anon* %15719 to i64*
  %15720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15721 = getelementptr inbounds %struct.GPR, %struct.GPR* %15720, i32 0, i32 1
  %15722 = getelementptr inbounds %struct.Reg, %struct.Reg* %15721, i32 0, i32 0
  %RAX.i2363 = bitcast %union.anon* %15722 to i64*
  %15723 = load i64, i64* %RAX.i2363
  %15724 = load i64, i64* %PC.i2362
  %15725 = add i64 %15724, 6
  store i64 %15725, i64* %PC.i2362
  %15726 = add i64 13112, %15723
  store i64 %15726, i64* %RAX.i2363, align 8
  %15727 = icmp ult i64 %15726, %15723
  %15728 = icmp ult i64 %15726, 13112
  %15729 = or i1 %15727, %15728
  %15730 = zext i1 %15729 to i8
  %15731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15730, i8* %15731, align 1
  %15732 = trunc i64 %15726 to i32
  %15733 = and i32 %15732, 255
  %15734 = call i32 @llvm.ctpop.i32(i32 %15733)
  %15735 = trunc i32 %15734 to i8
  %15736 = and i8 %15735, 1
  %15737 = xor i8 %15736, 1
  %15738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15737, i8* %15738, align 1
  %15739 = xor i64 13112, %15723
  %15740 = xor i64 %15739, %15726
  %15741 = lshr i64 %15740, 4
  %15742 = trunc i64 %15741 to i8
  %15743 = and i8 %15742, 1
  %15744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15743, i8* %15744, align 1
  %15745 = icmp eq i64 %15726, 0
  %15746 = zext i1 %15745 to i8
  %15747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15746, i8* %15747, align 1
  %15748 = lshr i64 %15726, 63
  %15749 = trunc i64 %15748 to i8
  %15750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15749, i8* %15750, align 1
  %15751 = lshr i64 %15723, 63
  %15752 = xor i64 %15748, %15751
  %15753 = add i64 %15752, %15748
  %15754 = icmp eq i64 %15753, 2
  %15755 = zext i1 %15754 to i8
  %15756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15755, i8* %15756, align 1
  store %struct.Memory* %loadMem_4ab39e, %struct.Memory** %MEMORY
  %loadMem_4ab3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15758 = getelementptr inbounds %struct.GPR, %struct.GPR* %15757, i32 0, i32 33
  %15759 = getelementptr inbounds %struct.Reg, %struct.Reg* %15758, i32 0, i32 0
  %PC.i2359 = bitcast %union.anon* %15759 to i64*
  %15760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15761 = getelementptr inbounds %struct.GPR, %struct.GPR* %15760, i32 0, i32 5
  %15762 = getelementptr inbounds %struct.Reg, %struct.Reg* %15761, i32 0, i32 0
  %RCX.i2360 = bitcast %union.anon* %15762 to i64*
  %15763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15764 = getelementptr inbounds %struct.GPR, %struct.GPR* %15763, i32 0, i32 15
  %15765 = getelementptr inbounds %struct.Reg, %struct.Reg* %15764, i32 0, i32 0
  %RBP.i2361 = bitcast %union.anon* %15765 to i64*
  %15766 = load i64, i64* %RBP.i2361
  %15767 = sub i64 %15766, 24
  %15768 = load i64, i64* %PC.i2359
  %15769 = add i64 %15768, 4
  store i64 %15769, i64* %PC.i2359
  %15770 = inttoptr i64 %15767 to i32*
  %15771 = load i32, i32* %15770
  %15772 = sext i32 %15771 to i64
  store i64 %15772, i64* %RCX.i2360, align 8
  store %struct.Memory* %loadMem_4ab3a4, %struct.Memory** %MEMORY
  %loadMem_4ab3a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15774 = getelementptr inbounds %struct.GPR, %struct.GPR* %15773, i32 0, i32 33
  %15775 = getelementptr inbounds %struct.Reg, %struct.Reg* %15774, i32 0, i32 0
  %PC.i2357 = bitcast %union.anon* %15775 to i64*
  %15776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15777 = getelementptr inbounds %struct.GPR, %struct.GPR* %15776, i32 0, i32 5
  %15778 = getelementptr inbounds %struct.Reg, %struct.Reg* %15777, i32 0, i32 0
  %RCX.i2358 = bitcast %union.anon* %15778 to i64*
  %15779 = load i64, i64* %RCX.i2358
  %15780 = load i64, i64* %PC.i2357
  %15781 = add i64 %15780, 4
  store i64 %15781, i64* %PC.i2357
  %15782 = shl i64 %15779, 5
  %15783 = icmp slt i64 %15782, 0
  %15784 = shl i64 %15782, 1
  store i64 %15784, i64* %RCX.i2358, align 8
  %15785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15786 = zext i1 %15783 to i8
  store i8 %15786, i8* %15785, align 1
  %15787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15788 = trunc i64 %15784 to i32
  %15789 = and i32 %15788, 254
  %15790 = call i32 @llvm.ctpop.i32(i32 %15789)
  %15791 = trunc i32 %15790 to i8
  %15792 = and i8 %15791, 1
  %15793 = xor i8 %15792, 1
  store i8 %15793, i8* %15787, align 1
  %15794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15794, align 1
  %15795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15796 = icmp eq i64 %15784, 0
  %15797 = zext i1 %15796 to i8
  store i8 %15797, i8* %15795, align 1
  %15798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15799 = lshr i64 %15784, 63
  %15800 = trunc i64 %15799 to i8
  store i8 %15800, i8* %15798, align 1
  %15801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15801, align 1
  store %struct.Memory* %loadMem_4ab3a8, %struct.Memory** %MEMORY
  %loadMem_4ab3ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %15802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15803 = getelementptr inbounds %struct.GPR, %struct.GPR* %15802, i32 0, i32 33
  %15804 = getelementptr inbounds %struct.Reg, %struct.Reg* %15803, i32 0, i32 0
  %PC.i2354 = bitcast %union.anon* %15804 to i64*
  %15805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15806 = getelementptr inbounds %struct.GPR, %struct.GPR* %15805, i32 0, i32 1
  %15807 = getelementptr inbounds %struct.Reg, %struct.Reg* %15806, i32 0, i32 0
  %RAX.i2355 = bitcast %union.anon* %15807 to i64*
  %15808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15809 = getelementptr inbounds %struct.GPR, %struct.GPR* %15808, i32 0, i32 5
  %15810 = getelementptr inbounds %struct.Reg, %struct.Reg* %15809, i32 0, i32 0
  %RCX.i2356 = bitcast %union.anon* %15810 to i64*
  %15811 = load i64, i64* %RAX.i2355
  %15812 = load i64, i64* %RCX.i2356
  %15813 = load i64, i64* %PC.i2354
  %15814 = add i64 %15813, 3
  store i64 %15814, i64* %PC.i2354
  %15815 = add i64 %15812, %15811
  store i64 %15815, i64* %RAX.i2355, align 8
  %15816 = icmp ult i64 %15815, %15811
  %15817 = icmp ult i64 %15815, %15812
  %15818 = or i1 %15816, %15817
  %15819 = zext i1 %15818 to i8
  %15820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15819, i8* %15820, align 1
  %15821 = trunc i64 %15815 to i32
  %15822 = and i32 %15821, 255
  %15823 = call i32 @llvm.ctpop.i32(i32 %15822)
  %15824 = trunc i32 %15823 to i8
  %15825 = and i8 %15824, 1
  %15826 = xor i8 %15825, 1
  %15827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15826, i8* %15827, align 1
  %15828 = xor i64 %15812, %15811
  %15829 = xor i64 %15828, %15815
  %15830 = lshr i64 %15829, 4
  %15831 = trunc i64 %15830 to i8
  %15832 = and i8 %15831, 1
  %15833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15832, i8* %15833, align 1
  %15834 = icmp eq i64 %15815, 0
  %15835 = zext i1 %15834 to i8
  %15836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15835, i8* %15836, align 1
  %15837 = lshr i64 %15815, 63
  %15838 = trunc i64 %15837 to i8
  %15839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15838, i8* %15839, align 1
  %15840 = lshr i64 %15811, 63
  %15841 = lshr i64 %15812, 63
  %15842 = xor i64 %15837, %15840
  %15843 = xor i64 %15837, %15841
  %15844 = add i64 %15842, %15843
  %15845 = icmp eq i64 %15844, 2
  %15846 = zext i1 %15845 to i8
  %15847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15846, i8* %15847, align 1
  store %struct.Memory* %loadMem_4ab3ac, %struct.Memory** %MEMORY
  %loadMem_4ab3af = load %struct.Memory*, %struct.Memory** %MEMORY
  %15848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15849 = getelementptr inbounds %struct.GPR, %struct.GPR* %15848, i32 0, i32 33
  %15850 = getelementptr inbounds %struct.Reg, %struct.Reg* %15849, i32 0, i32 0
  %PC.i2351 = bitcast %union.anon* %15850 to i64*
  %15851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15852 = getelementptr inbounds %struct.GPR, %struct.GPR* %15851, i32 0, i32 5
  %15853 = getelementptr inbounds %struct.Reg, %struct.Reg* %15852, i32 0, i32 0
  %RCX.i2352 = bitcast %union.anon* %15853 to i64*
  %15854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15855 = getelementptr inbounds %struct.GPR, %struct.GPR* %15854, i32 0, i32 15
  %15856 = getelementptr inbounds %struct.Reg, %struct.Reg* %15855, i32 0, i32 0
  %RBP.i2353 = bitcast %union.anon* %15856 to i64*
  %15857 = load i64, i64* %RBP.i2353
  %15858 = sub i64 %15857, 28
  %15859 = load i64, i64* %PC.i2351
  %15860 = add i64 %15859, 4
  store i64 %15860, i64* %PC.i2351
  %15861 = inttoptr i64 %15858 to i32*
  %15862 = load i32, i32* %15861
  %15863 = sext i32 %15862 to i64
  store i64 %15863, i64* %RCX.i2352, align 8
  store %struct.Memory* %loadMem_4ab3af, %struct.Memory** %MEMORY
  %loadMem_4ab3b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15865 = getelementptr inbounds %struct.GPR, %struct.GPR* %15864, i32 0, i32 33
  %15866 = getelementptr inbounds %struct.Reg, %struct.Reg* %15865, i32 0, i32 0
  %PC.i2347 = bitcast %union.anon* %15866 to i64*
  %15867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15868 = getelementptr inbounds %struct.GPR, %struct.GPR* %15867, i32 0, i32 1
  %15869 = getelementptr inbounds %struct.Reg, %struct.Reg* %15868, i32 0, i32 0
  %RAX.i2348 = bitcast %union.anon* %15869 to i64*
  %15870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15871 = getelementptr inbounds %struct.GPR, %struct.GPR* %15870, i32 0, i32 5
  %15872 = getelementptr inbounds %struct.Reg, %struct.Reg* %15871, i32 0, i32 0
  %RCX.i2349 = bitcast %union.anon* %15872 to i64*
  %15873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15874 = getelementptr inbounds %struct.GPR, %struct.GPR* %15873, i32 0, i32 9
  %15875 = getelementptr inbounds %struct.Reg, %struct.Reg* %15874, i32 0, i32 0
  %RSI.i2350 = bitcast %union.anon* %15875 to i64*
  %15876 = load i64, i64* %RAX.i2348
  %15877 = load i64, i64* %RCX.i2349
  %15878 = mul i64 %15877, 4
  %15879 = add i64 %15878, %15876
  %15880 = load i64, i64* %PC.i2347
  %15881 = add i64 %15880, 3
  store i64 %15881, i64* %PC.i2347
  %15882 = inttoptr i64 %15879 to i32*
  %15883 = load i32, i32* %15882
  %15884 = zext i32 %15883 to i64
  store i64 %15884, i64* %RSI.i2350, align 8
  store %struct.Memory* %loadMem_4ab3b3, %struct.Memory** %MEMORY
  %loadMem1_4ab3b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15886 = getelementptr inbounds %struct.GPR, %struct.GPR* %15885, i32 0, i32 33
  %15887 = getelementptr inbounds %struct.Reg, %struct.Reg* %15886, i32 0, i32 0
  %PC.i2346 = bitcast %union.anon* %15887 to i64*
  %15888 = load i64, i64* %PC.i2346
  %15889 = add i64 %15888, -221798
  %15890 = load i64, i64* %PC.i2346
  %15891 = add i64 %15890, 5
  %15892 = load i64, i64* %PC.i2346
  %15893 = add i64 %15892, 5
  store i64 %15893, i64* %PC.i2346
  %15894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15895 = load i64, i64* %15894, align 8
  %15896 = add i64 %15895, -8
  %15897 = inttoptr i64 %15896 to i64*
  store i64 %15891, i64* %15897
  store i64 %15896, i64* %15894, align 8
  %15898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15889, i64* %15898, align 8
  store %struct.Memory* %loadMem1_4ab3b6, %struct.Memory** %MEMORY
  %loadMem2_4ab3b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4ab3b6 = load i64, i64* %3
  %call2_4ab3b6 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_4ab3b6, %struct.Memory* %loadMem2_4ab3b6)
  store %struct.Memory* %call2_4ab3b6, %struct.Memory** %MEMORY
  %loadMem_4ab3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15900 = getelementptr inbounds %struct.GPR, %struct.GPR* %15899, i32 0, i32 33
  %15901 = getelementptr inbounds %struct.Reg, %struct.Reg* %15900, i32 0, i32 0
  %PC.i2344 = bitcast %union.anon* %15901 to i64*
  %15902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15903 = getelementptr inbounds %struct.GPR, %struct.GPR* %15902, i32 0, i32 5
  %15904 = getelementptr inbounds %struct.Reg, %struct.Reg* %15903, i32 0, i32 0
  %RCX.i2345 = bitcast %union.anon* %15904 to i64*
  %15905 = load i64, i64* %PC.i2344
  %15906 = add i64 %15905, 8
  store i64 %15906, i64* %PC.i2344
  %15907 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15907, i64* %RCX.i2345, align 8
  store %struct.Memory* %loadMem_4ab3bb, %struct.Memory** %MEMORY
  %loadMem_4ab3c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15909 = getelementptr inbounds %struct.GPR, %struct.GPR* %15908, i32 0, i32 33
  %15910 = getelementptr inbounds %struct.Reg, %struct.Reg* %15909, i32 0, i32 0
  %PC.i2342 = bitcast %union.anon* %15910 to i64*
  %15911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15912 = getelementptr inbounds %struct.GPR, %struct.GPR* %15911, i32 0, i32 5
  %15913 = getelementptr inbounds %struct.Reg, %struct.Reg* %15912, i32 0, i32 0
  %RCX.i2343 = bitcast %union.anon* %15913 to i64*
  %15914 = load i64, i64* %RCX.i2343
  %15915 = add i64 %15914, 14136
  %15916 = load i64, i64* %PC.i2342
  %15917 = add i64 %15916, 7
  store i64 %15917, i64* %PC.i2342
  %15918 = inttoptr i64 %15915 to i64*
  %15919 = load i64, i64* %15918
  store i64 %15919, i64* %RCX.i2343, align 8
  store %struct.Memory* %loadMem_4ab3c3, %struct.Memory** %MEMORY
  %loadMem_4ab3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %15920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15921 = getelementptr inbounds %struct.GPR, %struct.GPR* %15920, i32 0, i32 33
  %15922 = getelementptr inbounds %struct.Reg, %struct.Reg* %15921, i32 0, i32 0
  %PC.i2339 = bitcast %union.anon* %15922 to i64*
  %15923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15924 = getelementptr inbounds %struct.GPR, %struct.GPR* %15923, i32 0, i32 7
  %15925 = getelementptr inbounds %struct.Reg, %struct.Reg* %15924, i32 0, i32 0
  %RDX.i2340 = bitcast %union.anon* %15925 to i64*
  %15926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15927 = getelementptr inbounds %struct.GPR, %struct.GPR* %15926, i32 0, i32 15
  %15928 = getelementptr inbounds %struct.Reg, %struct.Reg* %15927, i32 0, i32 0
  %RBP.i2341 = bitcast %union.anon* %15928 to i64*
  %15929 = load i64, i64* %RBP.i2341
  %15930 = sub i64 %15929, 4
  %15931 = load i64, i64* %PC.i2339
  %15932 = add i64 %15931, 4
  store i64 %15932, i64* %PC.i2339
  %15933 = inttoptr i64 %15930 to i32*
  %15934 = load i32, i32* %15933
  %15935 = sext i32 %15934 to i64
  store i64 %15935, i64* %RDX.i2340, align 8
  store %struct.Memory* %loadMem_4ab3ca, %struct.Memory** %MEMORY
  %loadMem_4ab3ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %15936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15937 = getelementptr inbounds %struct.GPR, %struct.GPR* %15936, i32 0, i32 33
  %15938 = getelementptr inbounds %struct.Reg, %struct.Reg* %15937, i32 0, i32 0
  %PC.i2336 = bitcast %union.anon* %15938 to i64*
  %15939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15940 = getelementptr inbounds %struct.GPR, %struct.GPR* %15939, i32 0, i32 5
  %15941 = getelementptr inbounds %struct.Reg, %struct.Reg* %15940, i32 0, i32 0
  %RCX.i2337 = bitcast %union.anon* %15941 to i64*
  %15942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15943 = getelementptr inbounds %struct.GPR, %struct.GPR* %15942, i32 0, i32 7
  %15944 = getelementptr inbounds %struct.Reg, %struct.Reg* %15943, i32 0, i32 0
  %RDX.i2338 = bitcast %union.anon* %15944 to i64*
  %15945 = load i64, i64* %RCX.i2337
  %15946 = load i64, i64* %RDX.i2338
  %15947 = mul i64 %15946, 8
  %15948 = add i64 %15947, %15945
  %15949 = load i64, i64* %PC.i2336
  %15950 = add i64 %15949, 4
  store i64 %15950, i64* %PC.i2336
  %15951 = inttoptr i64 %15948 to i64*
  %15952 = load i64, i64* %15951
  store i64 %15952, i64* %RCX.i2337, align 8
  store %struct.Memory* %loadMem_4ab3ce, %struct.Memory** %MEMORY
  %loadMem_4ab3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15954 = getelementptr inbounds %struct.GPR, %struct.GPR* %15953, i32 0, i32 33
  %15955 = getelementptr inbounds %struct.Reg, %struct.Reg* %15954, i32 0, i32 0
  %PC.i2333 = bitcast %union.anon* %15955 to i64*
  %15956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15957 = getelementptr inbounds %struct.GPR, %struct.GPR* %15956, i32 0, i32 9
  %15958 = getelementptr inbounds %struct.Reg, %struct.Reg* %15957, i32 0, i32 0
  %RSI.i2334 = bitcast %union.anon* %15958 to i64*
  %15959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15960 = getelementptr inbounds %struct.GPR, %struct.GPR* %15959, i32 0, i32 15
  %15961 = getelementptr inbounds %struct.Reg, %struct.Reg* %15960, i32 0, i32 0
  %RBP.i2335 = bitcast %union.anon* %15961 to i64*
  %15962 = load i64, i64* %RBP.i2335
  %15963 = sub i64 %15962, 36
  %15964 = load i64, i64* %PC.i2333
  %15965 = add i64 %15964, 3
  store i64 %15965, i64* %PC.i2333
  %15966 = inttoptr i64 %15963 to i32*
  %15967 = load i32, i32* %15966
  %15968 = zext i32 %15967 to i64
  store i64 %15968, i64* %RSI.i2334, align 8
  store %struct.Memory* %loadMem_4ab3d2, %struct.Memory** %MEMORY
  %loadMem_4ab3d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15970 = getelementptr inbounds %struct.GPR, %struct.GPR* %15969, i32 0, i32 33
  %15971 = getelementptr inbounds %struct.Reg, %struct.Reg* %15970, i32 0, i32 0
  %PC.i2331 = bitcast %union.anon* %15971 to i64*
  %15972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15973 = getelementptr inbounds %struct.GPR, %struct.GPR* %15972, i32 0, i32 9
  %15974 = getelementptr inbounds %struct.Reg, %struct.Reg* %15973, i32 0, i32 0
  %RSI.i2332 = bitcast %union.anon* %15974 to i64*
  %15975 = load i64, i64* %RSI.i2332
  %15976 = load i64, i64* %PC.i2331
  %15977 = add i64 %15976, 3
  store i64 %15977, i64* %PC.i2331
  %15978 = and i64 3, %15975
  %15979 = trunc i64 %15978 to i32
  store i64 %15978, i64* %RSI.i2332, align 8
  %15980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15980, align 1
  %15981 = and i32 %15979, 255
  %15982 = call i32 @llvm.ctpop.i32(i32 %15981)
  %15983 = trunc i32 %15982 to i8
  %15984 = and i8 %15983, 1
  %15985 = xor i8 %15984, 1
  %15986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15985, i8* %15986, align 1
  %15987 = icmp eq i32 %15979, 0
  %15988 = zext i1 %15987 to i8
  %15989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15988, i8* %15989, align 1
  %15990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %15990, align 1
  %15991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15991, align 1
  %15992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15992, align 1
  store %struct.Memory* %loadMem_4ab3d5, %struct.Memory** %MEMORY
  %loadMem_4ab3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15994 = getelementptr inbounds %struct.GPR, %struct.GPR* %15993, i32 0, i32 33
  %15995 = getelementptr inbounds %struct.Reg, %struct.Reg* %15994, i32 0, i32 0
  %PC.i2328 = bitcast %union.anon* %15995 to i64*
  %15996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15997 = getelementptr inbounds %struct.GPR, %struct.GPR* %15996, i32 0, i32 9
  %15998 = getelementptr inbounds %struct.Reg, %struct.Reg* %15997, i32 0, i32 0
  %ESI.i2329 = bitcast %union.anon* %15998 to i32*
  %15999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16000 = getelementptr inbounds %struct.GPR, %struct.GPR* %15999, i32 0, i32 7
  %16001 = getelementptr inbounds %struct.Reg, %struct.Reg* %16000, i32 0, i32 0
  %RDX.i2330 = bitcast %union.anon* %16001 to i64*
  %16002 = load i32, i32* %ESI.i2329
  %16003 = zext i32 %16002 to i64
  %16004 = load i64, i64* %PC.i2328
  %16005 = add i64 %16004, 3
  store i64 %16005, i64* %PC.i2328
  %16006 = shl i64 %16003, 32
  %16007 = ashr exact i64 %16006, 32
  store i64 %16007, i64* %RDX.i2330, align 8
  store %struct.Memory* %loadMem_4ab3d8, %struct.Memory** %MEMORY
  %loadMem_4ab3db = load %struct.Memory*, %struct.Memory** %MEMORY
  %16008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16009 = getelementptr inbounds %struct.GPR, %struct.GPR* %16008, i32 0, i32 33
  %16010 = getelementptr inbounds %struct.Reg, %struct.Reg* %16009, i32 0, i32 0
  %PC.i2325 = bitcast %union.anon* %16010 to i64*
  %16011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16012 = getelementptr inbounds %struct.GPR, %struct.GPR* %16011, i32 0, i32 5
  %16013 = getelementptr inbounds %struct.Reg, %struct.Reg* %16012, i32 0, i32 0
  %RCX.i2326 = bitcast %union.anon* %16013 to i64*
  %16014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16015 = getelementptr inbounds %struct.GPR, %struct.GPR* %16014, i32 0, i32 7
  %16016 = getelementptr inbounds %struct.Reg, %struct.Reg* %16015, i32 0, i32 0
  %RDX.i2327 = bitcast %union.anon* %16016 to i64*
  %16017 = load i64, i64* %RCX.i2326
  %16018 = load i64, i64* %RDX.i2327
  %16019 = mul i64 %16018, 8
  %16020 = add i64 %16019, %16017
  %16021 = load i64, i64* %PC.i2325
  %16022 = add i64 %16021, 4
  store i64 %16022, i64* %PC.i2325
  %16023 = inttoptr i64 %16020 to i64*
  %16024 = load i64, i64* %16023
  store i64 %16024, i64* %RCX.i2326, align 8
  store %struct.Memory* %loadMem_4ab3db, %struct.Memory** %MEMORY
  %loadMem_4ab3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %16025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16026 = getelementptr inbounds %struct.GPR, %struct.GPR* %16025, i32 0, i32 33
  %16027 = getelementptr inbounds %struct.Reg, %struct.Reg* %16026, i32 0, i32 0
  %PC.i2323 = bitcast %union.anon* %16027 to i64*
  %16028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16029 = getelementptr inbounds %struct.GPR, %struct.GPR* %16028, i32 0, i32 5
  %16030 = getelementptr inbounds %struct.Reg, %struct.Reg* %16029, i32 0, i32 0
  %RCX.i2324 = bitcast %union.anon* %16030 to i64*
  %16031 = load i64, i64* %RCX.i2324
  %16032 = load i64, i64* %PC.i2323
  %16033 = add i64 %16032, 3
  store i64 %16033, i64* %PC.i2323
  %16034 = inttoptr i64 %16031 to i64*
  %16035 = load i64, i64* %16034
  store i64 %16035, i64* %RCX.i2324, align 8
  store %struct.Memory* %loadMem_4ab3df, %struct.Memory** %MEMORY
  %loadMem_4ab3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16037 = getelementptr inbounds %struct.GPR, %struct.GPR* %16036, i32 0, i32 33
  %16038 = getelementptr inbounds %struct.Reg, %struct.Reg* %16037, i32 0, i32 0
  %PC.i2320 = bitcast %union.anon* %16038 to i64*
  %16039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16040 = getelementptr inbounds %struct.GPR, %struct.GPR* %16039, i32 0, i32 9
  %16041 = getelementptr inbounds %struct.Reg, %struct.Reg* %16040, i32 0, i32 0
  %RSI.i2321 = bitcast %union.anon* %16041 to i64*
  %16042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16043 = getelementptr inbounds %struct.GPR, %struct.GPR* %16042, i32 0, i32 15
  %16044 = getelementptr inbounds %struct.Reg, %struct.Reg* %16043, i32 0, i32 0
  %RBP.i2322 = bitcast %union.anon* %16044 to i64*
  %16045 = load i64, i64* %RBP.i2322
  %16046 = sub i64 %16045, 36
  %16047 = load i64, i64* %PC.i2320
  %16048 = add i64 %16047, 3
  store i64 %16048, i64* %PC.i2320
  %16049 = inttoptr i64 %16046 to i32*
  %16050 = load i32, i32* %16049
  %16051 = zext i32 %16050 to i64
  store i64 %16051, i64* %RSI.i2321, align 8
  store %struct.Memory* %loadMem_4ab3e2, %struct.Memory** %MEMORY
  %loadMem_4ab3e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16053 = getelementptr inbounds %struct.GPR, %struct.GPR* %16052, i32 0, i32 33
  %16054 = getelementptr inbounds %struct.Reg, %struct.Reg* %16053, i32 0, i32 0
  %PC.i2318 = bitcast %union.anon* %16054 to i64*
  %16055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16056 = getelementptr inbounds %struct.GPR, %struct.GPR* %16055, i32 0, i32 9
  %16057 = getelementptr inbounds %struct.Reg, %struct.Reg* %16056, i32 0, i32 0
  %RSI.i2319 = bitcast %union.anon* %16057 to i64*
  %16058 = load i64, i64* %RSI.i2319
  %16059 = load i64, i64* %PC.i2318
  %16060 = add i64 %16059, 3
  store i64 %16060, i64* %PC.i2318
  %16061 = and i64 3, %16058
  %16062 = trunc i64 %16061 to i32
  store i64 %16061, i64* %RSI.i2319, align 8
  %16063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16063, align 1
  %16064 = and i32 %16062, 255
  %16065 = call i32 @llvm.ctpop.i32(i32 %16064)
  %16066 = trunc i32 %16065 to i8
  %16067 = and i8 %16066, 1
  %16068 = xor i8 %16067, 1
  %16069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16068, i8* %16069, align 1
  %16070 = icmp eq i32 %16062, 0
  %16071 = zext i1 %16070 to i8
  %16072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16071, i8* %16072, align 1
  %16073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16073, align 1
  %16074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16074, align 1
  %16075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16075, align 1
  store %struct.Memory* %loadMem_4ab3e5, %struct.Memory** %MEMORY
  %loadMem_4ab3e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16077 = getelementptr inbounds %struct.GPR, %struct.GPR* %16076, i32 0, i32 33
  %16078 = getelementptr inbounds %struct.Reg, %struct.Reg* %16077, i32 0, i32 0
  %PC.i2315 = bitcast %union.anon* %16078 to i64*
  %16079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16080 = getelementptr inbounds %struct.GPR, %struct.GPR* %16079, i32 0, i32 9
  %16081 = getelementptr inbounds %struct.Reg, %struct.Reg* %16080, i32 0, i32 0
  %ESI.i2316 = bitcast %union.anon* %16081 to i32*
  %16082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16083 = getelementptr inbounds %struct.GPR, %struct.GPR* %16082, i32 0, i32 7
  %16084 = getelementptr inbounds %struct.Reg, %struct.Reg* %16083, i32 0, i32 0
  %RDX.i2317 = bitcast %union.anon* %16084 to i64*
  %16085 = load i32, i32* %ESI.i2316
  %16086 = zext i32 %16085 to i64
  %16087 = load i64, i64* %PC.i2315
  %16088 = add i64 %16087, 3
  store i64 %16088, i64* %PC.i2315
  %16089 = shl i64 %16086, 32
  %16090 = ashr exact i64 %16089, 32
  store i64 %16090, i64* %RDX.i2317, align 8
  store %struct.Memory* %loadMem_4ab3e8, %struct.Memory** %MEMORY
  %loadMem_4ab3eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16092 = getelementptr inbounds %struct.GPR, %struct.GPR* %16091, i32 0, i32 33
  %16093 = getelementptr inbounds %struct.Reg, %struct.Reg* %16092, i32 0, i32 0
  %PC.i2312 = bitcast %union.anon* %16093 to i64*
  %16094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16095 = getelementptr inbounds %struct.GPR, %struct.GPR* %16094, i32 0, i32 7
  %16096 = getelementptr inbounds %struct.Reg, %struct.Reg* %16095, i32 0, i32 0
  %RDX.i2313 = bitcast %union.anon* %16096 to i64*
  %16097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16098 = getelementptr inbounds %struct.GPR, %struct.GPR* %16097, i32 0, i32 15
  %16099 = getelementptr inbounds %struct.Reg, %struct.Reg* %16098, i32 0, i32 0
  %RBP.i2314 = bitcast %union.anon* %16099 to i64*
  %16100 = load i64, i64* %RBP.i2314
  %16101 = load i64, i64* %RDX.i2313
  %16102 = mul i64 %16101, 4
  %16103 = add i64 %16100, -384
  %16104 = add i64 %16103, %16102
  %16105 = load i64, i64* %PC.i2312
  %16106 = add i64 %16105, 8
  store i64 %16106, i64* %PC.i2312
  %16107 = inttoptr i64 %16104 to i32*
  %16108 = load i32, i32* %16107
  %16109 = sext i32 %16108 to i64
  store i64 %16109, i64* %RDX.i2313, align 8
  store %struct.Memory* %loadMem_4ab3eb, %struct.Memory** %MEMORY
  %loadMem_4ab3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16111 = getelementptr inbounds %struct.GPR, %struct.GPR* %16110, i32 0, i32 33
  %16112 = getelementptr inbounds %struct.Reg, %struct.Reg* %16111, i32 0, i32 0
  %PC.i2308 = bitcast %union.anon* %16112 to i64*
  %16113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16114 = getelementptr inbounds %struct.GPR, %struct.GPR* %16113, i32 0, i32 1
  %16115 = getelementptr inbounds %struct.Reg, %struct.Reg* %16114, i32 0, i32 0
  %EAX.i2309 = bitcast %union.anon* %16115 to i32*
  %16116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16117 = getelementptr inbounds %struct.GPR, %struct.GPR* %16116, i32 0, i32 5
  %16118 = getelementptr inbounds %struct.Reg, %struct.Reg* %16117, i32 0, i32 0
  %RCX.i2310 = bitcast %union.anon* %16118 to i64*
  %16119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16120 = getelementptr inbounds %struct.GPR, %struct.GPR* %16119, i32 0, i32 7
  %16121 = getelementptr inbounds %struct.Reg, %struct.Reg* %16120, i32 0, i32 0
  %RDX.i2311 = bitcast %union.anon* %16121 to i64*
  %16122 = load i64, i64* %RCX.i2310
  %16123 = load i64, i64* %RDX.i2311
  %16124 = mul i64 %16123, 4
  %16125 = add i64 %16124, %16122
  %16126 = load i32, i32* %EAX.i2309
  %16127 = zext i32 %16126 to i64
  %16128 = load i64, i64* %PC.i2308
  %16129 = add i64 %16128, 3
  store i64 %16129, i64* %PC.i2308
  %16130 = inttoptr i64 %16125 to i32*
  store i32 %16126, i32* %16130
  store %struct.Memory* %loadMem_4ab3f3, %struct.Memory** %MEMORY
  %loadMem_4ab3f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16132 = getelementptr inbounds %struct.GPR, %struct.GPR* %16131, i32 0, i32 33
  %16133 = getelementptr inbounds %struct.Reg, %struct.Reg* %16132, i32 0, i32 0
  %PC.i2305 = bitcast %union.anon* %16133 to i64*
  %16134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16135 = getelementptr inbounds %struct.GPR, %struct.GPR* %16134, i32 0, i32 1
  %16136 = getelementptr inbounds %struct.Reg, %struct.Reg* %16135, i32 0, i32 0
  %RAX.i2306 = bitcast %union.anon* %16136 to i64*
  %16137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16138 = getelementptr inbounds %struct.GPR, %struct.GPR* %16137, i32 0, i32 15
  %16139 = getelementptr inbounds %struct.Reg, %struct.Reg* %16138, i32 0, i32 0
  %RBP.i2307 = bitcast %union.anon* %16139 to i64*
  %16140 = load i64, i64* %RBP.i2307
  %16141 = sub i64 %16140, 36
  %16142 = load i64, i64* %PC.i2305
  %16143 = add i64 %16142, 3
  store i64 %16143, i64* %PC.i2305
  %16144 = inttoptr i64 %16141 to i32*
  %16145 = load i32, i32* %16144
  %16146 = zext i32 %16145 to i64
  store i64 %16146, i64* %RAX.i2306, align 8
  store %struct.Memory* %loadMem_4ab3f6, %struct.Memory** %MEMORY
  %loadMem_4ab3f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16148 = getelementptr inbounds %struct.GPR, %struct.GPR* %16147, i32 0, i32 33
  %16149 = getelementptr inbounds %struct.Reg, %struct.Reg* %16148, i32 0, i32 0
  %PC.i2303 = bitcast %union.anon* %16149 to i64*
  %16150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16151 = getelementptr inbounds %struct.GPR, %struct.GPR* %16150, i32 0, i32 1
  %16152 = getelementptr inbounds %struct.Reg, %struct.Reg* %16151, i32 0, i32 0
  %RAX.i2304 = bitcast %union.anon* %16152 to i64*
  %16153 = load i64, i64* %RAX.i2304
  %16154 = load i64, i64* %PC.i2303
  %16155 = add i64 %16154, 3
  store i64 %16155, i64* %PC.i2303
  %16156 = and i64 3, %16153
  %16157 = trunc i64 %16156 to i32
  store i64 %16156, i64* %RAX.i2304, align 8
  %16158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16158, align 1
  %16159 = and i32 %16157, 255
  %16160 = call i32 @llvm.ctpop.i32(i32 %16159)
  %16161 = trunc i32 %16160 to i8
  %16162 = and i8 %16161, 1
  %16163 = xor i8 %16162, 1
  %16164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16163, i8* %16164, align 1
  %16165 = icmp eq i32 %16157, 0
  %16166 = zext i1 %16165 to i8
  %16167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16166, i8* %16167, align 1
  %16168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16168, align 1
  %16169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16169, align 1
  %16170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16170, align 1
  store %struct.Memory* %loadMem_4ab3f9, %struct.Memory** %MEMORY
  %loadMem_4ab3fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %16171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16172 = getelementptr inbounds %struct.GPR, %struct.GPR* %16171, i32 0, i32 33
  %16173 = getelementptr inbounds %struct.Reg, %struct.Reg* %16172, i32 0, i32 0
  %PC.i2300 = bitcast %union.anon* %16173 to i64*
  %16174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16175 = getelementptr inbounds %struct.GPR, %struct.GPR* %16174, i32 0, i32 1
  %16176 = getelementptr inbounds %struct.Reg, %struct.Reg* %16175, i32 0, i32 0
  %EAX.i2301 = bitcast %union.anon* %16176 to i32*
  %16177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16178 = getelementptr inbounds %struct.GPR, %struct.GPR* %16177, i32 0, i32 5
  %16179 = getelementptr inbounds %struct.Reg, %struct.Reg* %16178, i32 0, i32 0
  %RCX.i2302 = bitcast %union.anon* %16179 to i64*
  %16180 = load i32, i32* %EAX.i2301
  %16181 = zext i32 %16180 to i64
  %16182 = load i64, i64* %PC.i2300
  %16183 = add i64 %16182, 3
  store i64 %16183, i64* %PC.i2300
  %16184 = shl i64 %16181, 32
  %16185 = ashr exact i64 %16184, 32
  store i64 %16185, i64* %RCX.i2302, align 8
  store %struct.Memory* %loadMem_4ab3fc, %struct.Memory** %MEMORY
  %loadMem_4ab3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %16186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16187 = getelementptr inbounds %struct.GPR, %struct.GPR* %16186, i32 0, i32 33
  %16188 = getelementptr inbounds %struct.Reg, %struct.Reg* %16187, i32 0, i32 0
  %PC.i2296 = bitcast %union.anon* %16188 to i64*
  %16189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16190 = getelementptr inbounds %struct.GPR, %struct.GPR* %16189, i32 0, i32 1
  %16191 = getelementptr inbounds %struct.Reg, %struct.Reg* %16190, i32 0, i32 0
  %RAX.i2297 = bitcast %union.anon* %16191 to i64*
  %16192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16193 = getelementptr inbounds %struct.GPR, %struct.GPR* %16192, i32 0, i32 5
  %16194 = getelementptr inbounds %struct.Reg, %struct.Reg* %16193, i32 0, i32 0
  %RCX.i2298 = bitcast %union.anon* %16194 to i64*
  %16195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16196 = getelementptr inbounds %struct.GPR, %struct.GPR* %16195, i32 0, i32 15
  %16197 = getelementptr inbounds %struct.Reg, %struct.Reg* %16196, i32 0, i32 0
  %RBP.i2299 = bitcast %union.anon* %16197 to i64*
  %16198 = load i64, i64* %RBP.i2299
  %16199 = load i64, i64* %RCX.i2298
  %16200 = mul i64 %16199, 4
  %16201 = add i64 %16198, -400
  %16202 = add i64 %16201, %16200
  %16203 = load i64, i64* %PC.i2296
  %16204 = add i64 %16203, 7
  store i64 %16204, i64* %PC.i2296
  %16205 = inttoptr i64 %16202 to i32*
  %16206 = load i32, i32* %16205
  %16207 = zext i32 %16206 to i64
  store i64 %16207, i64* %RAX.i2297, align 8
  store %struct.Memory* %loadMem_4ab3ff, %struct.Memory** %MEMORY
  %loadMem_4ab406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16209 = getelementptr inbounds %struct.GPR, %struct.GPR* %16208, i32 0, i32 33
  %16210 = getelementptr inbounds %struct.Reg, %struct.Reg* %16209, i32 0, i32 0
  %PC.i2294 = bitcast %union.anon* %16210 to i64*
  %16211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16212 = getelementptr inbounds %struct.GPR, %struct.GPR* %16211, i32 0, i32 5
  %16213 = getelementptr inbounds %struct.Reg, %struct.Reg* %16212, i32 0, i32 0
  %RCX.i2295 = bitcast %union.anon* %16213 to i64*
  %16214 = load i64, i64* %PC.i2294
  %16215 = add i64 %16214, 8
  store i64 %16215, i64* %PC.i2294
  %16216 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %16216, i64* %RCX.i2295, align 8
  store %struct.Memory* %loadMem_4ab406, %struct.Memory** %MEMORY
  %loadMem_4ab40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16218 = getelementptr inbounds %struct.GPR, %struct.GPR* %16217, i32 0, i32 33
  %16219 = getelementptr inbounds %struct.Reg, %struct.Reg* %16218, i32 0, i32 0
  %PC.i2292 = bitcast %union.anon* %16219 to i64*
  %16220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16221 = getelementptr inbounds %struct.GPR, %struct.GPR* %16220, i32 0, i32 5
  %16222 = getelementptr inbounds %struct.Reg, %struct.Reg* %16221, i32 0, i32 0
  %RCX.i2293 = bitcast %union.anon* %16222 to i64*
  %16223 = load i64, i64* %RCX.i2293
  %16224 = add i64 %16223, 14136
  %16225 = load i64, i64* %PC.i2292
  %16226 = add i64 %16225, 7
  store i64 %16226, i64* %PC.i2292
  %16227 = inttoptr i64 %16224 to i64*
  %16228 = load i64, i64* %16227
  store i64 %16228, i64* %RCX.i2293, align 8
  store %struct.Memory* %loadMem_4ab40e, %struct.Memory** %MEMORY
  %loadMem_4ab415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16230 = getelementptr inbounds %struct.GPR, %struct.GPR* %16229, i32 0, i32 33
  %16231 = getelementptr inbounds %struct.Reg, %struct.Reg* %16230, i32 0, i32 0
  %PC.i2289 = bitcast %union.anon* %16231 to i64*
  %16232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16233 = getelementptr inbounds %struct.GPR, %struct.GPR* %16232, i32 0, i32 7
  %16234 = getelementptr inbounds %struct.Reg, %struct.Reg* %16233, i32 0, i32 0
  %RDX.i2290 = bitcast %union.anon* %16234 to i64*
  %16235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16236 = getelementptr inbounds %struct.GPR, %struct.GPR* %16235, i32 0, i32 15
  %16237 = getelementptr inbounds %struct.Reg, %struct.Reg* %16236, i32 0, i32 0
  %RBP.i2291 = bitcast %union.anon* %16237 to i64*
  %16238 = load i64, i64* %RBP.i2291
  %16239 = sub i64 %16238, 4
  %16240 = load i64, i64* %PC.i2289
  %16241 = add i64 %16240, 4
  store i64 %16241, i64* %PC.i2289
  %16242 = inttoptr i64 %16239 to i32*
  %16243 = load i32, i32* %16242
  %16244 = sext i32 %16243 to i64
  store i64 %16244, i64* %RDX.i2290, align 8
  store %struct.Memory* %loadMem_4ab415, %struct.Memory** %MEMORY
  %loadMem_4ab419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16246 = getelementptr inbounds %struct.GPR, %struct.GPR* %16245, i32 0, i32 33
  %16247 = getelementptr inbounds %struct.Reg, %struct.Reg* %16246, i32 0, i32 0
  %PC.i2286 = bitcast %union.anon* %16247 to i64*
  %16248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16249 = getelementptr inbounds %struct.GPR, %struct.GPR* %16248, i32 0, i32 5
  %16250 = getelementptr inbounds %struct.Reg, %struct.Reg* %16249, i32 0, i32 0
  %RCX.i2287 = bitcast %union.anon* %16250 to i64*
  %16251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16252 = getelementptr inbounds %struct.GPR, %struct.GPR* %16251, i32 0, i32 7
  %16253 = getelementptr inbounds %struct.Reg, %struct.Reg* %16252, i32 0, i32 0
  %RDX.i2288 = bitcast %union.anon* %16253 to i64*
  %16254 = load i64, i64* %RCX.i2287
  %16255 = load i64, i64* %RDX.i2288
  %16256 = mul i64 %16255, 8
  %16257 = add i64 %16256, %16254
  %16258 = load i64, i64* %PC.i2286
  %16259 = add i64 %16258, 4
  store i64 %16259, i64* %PC.i2286
  %16260 = inttoptr i64 %16257 to i64*
  %16261 = load i64, i64* %16260
  store i64 %16261, i64* %RCX.i2287, align 8
  store %struct.Memory* %loadMem_4ab419, %struct.Memory** %MEMORY
  %loadMem_4ab41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16263 = getelementptr inbounds %struct.GPR, %struct.GPR* %16262, i32 0, i32 33
  %16264 = getelementptr inbounds %struct.Reg, %struct.Reg* %16263, i32 0, i32 0
  %PC.i2283 = bitcast %union.anon* %16264 to i64*
  %16265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16266 = getelementptr inbounds %struct.GPR, %struct.GPR* %16265, i32 0, i32 9
  %16267 = getelementptr inbounds %struct.Reg, %struct.Reg* %16266, i32 0, i32 0
  %RSI.i2284 = bitcast %union.anon* %16267 to i64*
  %16268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16269 = getelementptr inbounds %struct.GPR, %struct.GPR* %16268, i32 0, i32 15
  %16270 = getelementptr inbounds %struct.Reg, %struct.Reg* %16269, i32 0, i32 0
  %RBP.i2285 = bitcast %union.anon* %16270 to i64*
  %16271 = load i64, i64* %RBP.i2285
  %16272 = sub i64 %16271, 36
  %16273 = load i64, i64* %PC.i2283
  %16274 = add i64 %16273, 3
  store i64 %16274, i64* %PC.i2283
  %16275 = inttoptr i64 %16272 to i32*
  %16276 = load i32, i32* %16275
  %16277 = zext i32 %16276 to i64
  store i64 %16277, i64* %RSI.i2284, align 8
  store %struct.Memory* %loadMem_4ab41d, %struct.Memory** %MEMORY
  %loadMem_4ab420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16279 = getelementptr inbounds %struct.GPR, %struct.GPR* %16278, i32 0, i32 33
  %16280 = getelementptr inbounds %struct.Reg, %struct.Reg* %16279, i32 0, i32 0
  %PC.i2281 = bitcast %union.anon* %16280 to i64*
  %16281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16282 = getelementptr inbounds %struct.GPR, %struct.GPR* %16281, i32 0, i32 9
  %16283 = getelementptr inbounds %struct.Reg, %struct.Reg* %16282, i32 0, i32 0
  %RSI.i2282 = bitcast %union.anon* %16283 to i64*
  %16284 = load i64, i64* %RSI.i2282
  %16285 = load i64, i64* %PC.i2281
  %16286 = add i64 %16285, 3
  store i64 %16286, i64* %PC.i2281
  %16287 = and i64 3, %16284
  %16288 = trunc i64 %16287 to i32
  store i64 %16287, i64* %RSI.i2282, align 8
  %16289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16289, align 1
  %16290 = and i32 %16288, 255
  %16291 = call i32 @llvm.ctpop.i32(i32 %16290)
  %16292 = trunc i32 %16291 to i8
  %16293 = and i8 %16292, 1
  %16294 = xor i8 %16293, 1
  %16295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16294, i8* %16295, align 1
  %16296 = icmp eq i32 %16288, 0
  %16297 = zext i1 %16296 to i8
  %16298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16297, i8* %16298, align 1
  %16299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16299, align 1
  %16300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16300, align 1
  %16301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16301, align 1
  store %struct.Memory* %loadMem_4ab420, %struct.Memory** %MEMORY
  %loadMem_4ab423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16303 = getelementptr inbounds %struct.GPR, %struct.GPR* %16302, i32 0, i32 33
  %16304 = getelementptr inbounds %struct.Reg, %struct.Reg* %16303, i32 0, i32 0
  %PC.i2278 = bitcast %union.anon* %16304 to i64*
  %16305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16306 = getelementptr inbounds %struct.GPR, %struct.GPR* %16305, i32 0, i32 9
  %16307 = getelementptr inbounds %struct.Reg, %struct.Reg* %16306, i32 0, i32 0
  %ESI.i2279 = bitcast %union.anon* %16307 to i32*
  %16308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16309 = getelementptr inbounds %struct.GPR, %struct.GPR* %16308, i32 0, i32 7
  %16310 = getelementptr inbounds %struct.Reg, %struct.Reg* %16309, i32 0, i32 0
  %RDX.i2280 = bitcast %union.anon* %16310 to i64*
  %16311 = load i32, i32* %ESI.i2279
  %16312 = zext i32 %16311 to i64
  %16313 = load i64, i64* %PC.i2278
  %16314 = add i64 %16313, 3
  store i64 %16314, i64* %PC.i2278
  %16315 = shl i64 %16312, 32
  %16316 = ashr exact i64 %16315, 32
  store i64 %16316, i64* %RDX.i2280, align 8
  store %struct.Memory* %loadMem_4ab423, %struct.Memory** %MEMORY
  %loadMem_4ab426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16318 = getelementptr inbounds %struct.GPR, %struct.GPR* %16317, i32 0, i32 33
  %16319 = getelementptr inbounds %struct.Reg, %struct.Reg* %16318, i32 0, i32 0
  %PC.i2275 = bitcast %union.anon* %16319 to i64*
  %16320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16321 = getelementptr inbounds %struct.GPR, %struct.GPR* %16320, i32 0, i32 5
  %16322 = getelementptr inbounds %struct.Reg, %struct.Reg* %16321, i32 0, i32 0
  %RCX.i2276 = bitcast %union.anon* %16322 to i64*
  %16323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16324 = getelementptr inbounds %struct.GPR, %struct.GPR* %16323, i32 0, i32 7
  %16325 = getelementptr inbounds %struct.Reg, %struct.Reg* %16324, i32 0, i32 0
  %RDX.i2277 = bitcast %union.anon* %16325 to i64*
  %16326 = load i64, i64* %RCX.i2276
  %16327 = load i64, i64* %RDX.i2277
  %16328 = mul i64 %16327, 8
  %16329 = add i64 %16328, %16326
  %16330 = load i64, i64* %PC.i2275
  %16331 = add i64 %16330, 4
  store i64 %16331, i64* %PC.i2275
  %16332 = inttoptr i64 %16329 to i64*
  %16333 = load i64, i64* %16332
  store i64 %16333, i64* %RCX.i2276, align 8
  store %struct.Memory* %loadMem_4ab426, %struct.Memory** %MEMORY
  %loadMem_4ab42a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16335 = getelementptr inbounds %struct.GPR, %struct.GPR* %16334, i32 0, i32 33
  %16336 = getelementptr inbounds %struct.Reg, %struct.Reg* %16335, i32 0, i32 0
  %PC.i2273 = bitcast %union.anon* %16336 to i64*
  %16337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16338 = getelementptr inbounds %struct.GPR, %struct.GPR* %16337, i32 0, i32 5
  %16339 = getelementptr inbounds %struct.Reg, %struct.Reg* %16338, i32 0, i32 0
  %RCX.i2274 = bitcast %union.anon* %16339 to i64*
  %16340 = load i64, i64* %RCX.i2274
  %16341 = add i64 %16340, 8
  %16342 = load i64, i64* %PC.i2273
  %16343 = add i64 %16342, 4
  store i64 %16343, i64* %PC.i2273
  %16344 = inttoptr i64 %16341 to i64*
  %16345 = load i64, i64* %16344
  store i64 %16345, i64* %RCX.i2274, align 8
  store %struct.Memory* %loadMem_4ab42a, %struct.Memory** %MEMORY
  %loadMem_4ab42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16347 = getelementptr inbounds %struct.GPR, %struct.GPR* %16346, i32 0, i32 33
  %16348 = getelementptr inbounds %struct.Reg, %struct.Reg* %16347, i32 0, i32 0
  %PC.i2270 = bitcast %union.anon* %16348 to i64*
  %16349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16350 = getelementptr inbounds %struct.GPR, %struct.GPR* %16349, i32 0, i32 9
  %16351 = getelementptr inbounds %struct.Reg, %struct.Reg* %16350, i32 0, i32 0
  %RSI.i2271 = bitcast %union.anon* %16351 to i64*
  %16352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16353 = getelementptr inbounds %struct.GPR, %struct.GPR* %16352, i32 0, i32 15
  %16354 = getelementptr inbounds %struct.Reg, %struct.Reg* %16353, i32 0, i32 0
  %RBP.i2272 = bitcast %union.anon* %16354 to i64*
  %16355 = load i64, i64* %RBP.i2272
  %16356 = sub i64 %16355, 36
  %16357 = load i64, i64* %PC.i2270
  %16358 = add i64 %16357, 3
  store i64 %16358, i64* %PC.i2270
  %16359 = inttoptr i64 %16356 to i32*
  %16360 = load i32, i32* %16359
  %16361 = zext i32 %16360 to i64
  store i64 %16361, i64* %RSI.i2271, align 8
  store %struct.Memory* %loadMem_4ab42e, %struct.Memory** %MEMORY
  %loadMem_4ab431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16363 = getelementptr inbounds %struct.GPR, %struct.GPR* %16362, i32 0, i32 33
  %16364 = getelementptr inbounds %struct.Reg, %struct.Reg* %16363, i32 0, i32 0
  %PC.i2268 = bitcast %union.anon* %16364 to i64*
  %16365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16366 = getelementptr inbounds %struct.GPR, %struct.GPR* %16365, i32 0, i32 9
  %16367 = getelementptr inbounds %struct.Reg, %struct.Reg* %16366, i32 0, i32 0
  %RSI.i2269 = bitcast %union.anon* %16367 to i64*
  %16368 = load i64, i64* %RSI.i2269
  %16369 = load i64, i64* %PC.i2268
  %16370 = add i64 %16369, 3
  store i64 %16370, i64* %PC.i2268
  %16371 = and i64 3, %16368
  %16372 = trunc i64 %16371 to i32
  store i64 %16371, i64* %RSI.i2269, align 8
  %16373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16373, align 1
  %16374 = and i32 %16372, 255
  %16375 = call i32 @llvm.ctpop.i32(i32 %16374)
  %16376 = trunc i32 %16375 to i8
  %16377 = and i8 %16376, 1
  %16378 = xor i8 %16377, 1
  %16379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16378, i8* %16379, align 1
  %16380 = icmp eq i32 %16372, 0
  %16381 = zext i1 %16380 to i8
  %16382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16381, i8* %16382, align 1
  %16383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16383, align 1
  %16384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16384, align 1
  %16385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16385, align 1
  store %struct.Memory* %loadMem_4ab431, %struct.Memory** %MEMORY
  %loadMem_4ab434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16387 = getelementptr inbounds %struct.GPR, %struct.GPR* %16386, i32 0, i32 33
  %16388 = getelementptr inbounds %struct.Reg, %struct.Reg* %16387, i32 0, i32 0
  %PC.i2265 = bitcast %union.anon* %16388 to i64*
  %16389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16390 = getelementptr inbounds %struct.GPR, %struct.GPR* %16389, i32 0, i32 9
  %16391 = getelementptr inbounds %struct.Reg, %struct.Reg* %16390, i32 0, i32 0
  %ESI.i2266 = bitcast %union.anon* %16391 to i32*
  %16392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16393 = getelementptr inbounds %struct.GPR, %struct.GPR* %16392, i32 0, i32 7
  %16394 = getelementptr inbounds %struct.Reg, %struct.Reg* %16393, i32 0, i32 0
  %RDX.i2267 = bitcast %union.anon* %16394 to i64*
  %16395 = load i32, i32* %ESI.i2266
  %16396 = zext i32 %16395 to i64
  %16397 = load i64, i64* %PC.i2265
  %16398 = add i64 %16397, 3
  store i64 %16398, i64* %PC.i2265
  %16399 = shl i64 %16396, 32
  %16400 = ashr exact i64 %16399, 32
  store i64 %16400, i64* %RDX.i2267, align 8
  store %struct.Memory* %loadMem_4ab434, %struct.Memory** %MEMORY
  %loadMem_4ab437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16402 = getelementptr inbounds %struct.GPR, %struct.GPR* %16401, i32 0, i32 33
  %16403 = getelementptr inbounds %struct.Reg, %struct.Reg* %16402, i32 0, i32 0
  %PC.i2262 = bitcast %union.anon* %16403 to i64*
  %16404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16405 = getelementptr inbounds %struct.GPR, %struct.GPR* %16404, i32 0, i32 7
  %16406 = getelementptr inbounds %struct.Reg, %struct.Reg* %16405, i32 0, i32 0
  %RDX.i2263 = bitcast %union.anon* %16406 to i64*
  %16407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16408 = getelementptr inbounds %struct.GPR, %struct.GPR* %16407, i32 0, i32 15
  %16409 = getelementptr inbounds %struct.Reg, %struct.Reg* %16408, i32 0, i32 0
  %RBP.i2264 = bitcast %union.anon* %16409 to i64*
  %16410 = load i64, i64* %RBP.i2264
  %16411 = load i64, i64* %RDX.i2263
  %16412 = mul i64 %16411, 4
  %16413 = add i64 %16410, -384
  %16414 = add i64 %16413, %16412
  %16415 = load i64, i64* %PC.i2262
  %16416 = add i64 %16415, 8
  store i64 %16416, i64* %PC.i2262
  %16417 = inttoptr i64 %16414 to i32*
  %16418 = load i32, i32* %16417
  %16419 = sext i32 %16418 to i64
  store i64 %16419, i64* %RDX.i2263, align 8
  store %struct.Memory* %loadMem_4ab437, %struct.Memory** %MEMORY
  %loadMem_4ab43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16421 = getelementptr inbounds %struct.GPR, %struct.GPR* %16420, i32 0, i32 33
  %16422 = getelementptr inbounds %struct.Reg, %struct.Reg* %16421, i32 0, i32 0
  %PC.i2258 = bitcast %union.anon* %16422 to i64*
  %16423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16424 = getelementptr inbounds %struct.GPR, %struct.GPR* %16423, i32 0, i32 1
  %16425 = getelementptr inbounds %struct.Reg, %struct.Reg* %16424, i32 0, i32 0
  %EAX.i2259 = bitcast %union.anon* %16425 to i32*
  %16426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16427 = getelementptr inbounds %struct.GPR, %struct.GPR* %16426, i32 0, i32 5
  %16428 = getelementptr inbounds %struct.Reg, %struct.Reg* %16427, i32 0, i32 0
  %RCX.i2260 = bitcast %union.anon* %16428 to i64*
  %16429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16430 = getelementptr inbounds %struct.GPR, %struct.GPR* %16429, i32 0, i32 7
  %16431 = getelementptr inbounds %struct.Reg, %struct.Reg* %16430, i32 0, i32 0
  %RDX.i2261 = bitcast %union.anon* %16431 to i64*
  %16432 = load i64, i64* %RCX.i2260
  %16433 = load i64, i64* %RDX.i2261
  %16434 = mul i64 %16433, 4
  %16435 = add i64 %16434, %16432
  %16436 = load i32, i32* %EAX.i2259
  %16437 = zext i32 %16436 to i64
  %16438 = load i64, i64* %PC.i2258
  %16439 = add i64 %16438, 3
  store i64 %16439, i64* %PC.i2258
  %16440 = inttoptr i64 %16435 to i32*
  store i32 %16436, i32* %16440
  store %struct.Memory* %loadMem_4ab43f, %struct.Memory** %MEMORY
  %loadMem_4ab442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16442 = getelementptr inbounds %struct.GPR, %struct.GPR* %16441, i32 0, i32 33
  %16443 = getelementptr inbounds %struct.Reg, %struct.Reg* %16442, i32 0, i32 0
  %PC.i2255 = bitcast %union.anon* %16443 to i64*
  %16444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16445 = getelementptr inbounds %struct.GPR, %struct.GPR* %16444, i32 0, i32 1
  %16446 = getelementptr inbounds %struct.Reg, %struct.Reg* %16445, i32 0, i32 0
  %RAX.i2256 = bitcast %union.anon* %16446 to i64*
  %16447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16448 = getelementptr inbounds %struct.GPR, %struct.GPR* %16447, i32 0, i32 15
  %16449 = getelementptr inbounds %struct.Reg, %struct.Reg* %16448, i32 0, i32 0
  %RBP.i2257 = bitcast %union.anon* %16449 to i64*
  %16450 = load i64, i64* %RBP.i2257
  %16451 = sub i64 %16450, 36
  %16452 = load i64, i64* %PC.i2255
  %16453 = add i64 %16452, 3
  store i64 %16453, i64* %PC.i2255
  %16454 = inttoptr i64 %16451 to i32*
  %16455 = load i32, i32* %16454
  %16456 = zext i32 %16455 to i64
  store i64 %16456, i64* %RAX.i2256, align 8
  store %struct.Memory* %loadMem_4ab442, %struct.Memory** %MEMORY
  %loadMem_4ab445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16458 = getelementptr inbounds %struct.GPR, %struct.GPR* %16457, i32 0, i32 33
  %16459 = getelementptr inbounds %struct.Reg, %struct.Reg* %16458, i32 0, i32 0
  %PC.i2253 = bitcast %union.anon* %16459 to i64*
  %16460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16461 = getelementptr inbounds %struct.GPR, %struct.GPR* %16460, i32 0, i32 1
  %16462 = getelementptr inbounds %struct.Reg, %struct.Reg* %16461, i32 0, i32 0
  %RAX.i2254 = bitcast %union.anon* %16462 to i64*
  %16463 = load i64, i64* %RAX.i2254
  %16464 = load i64, i64* %PC.i2253
  %16465 = add i64 %16464, 3
  store i64 %16465, i64* %PC.i2253
  %16466 = and i64 3, %16463
  %16467 = trunc i64 %16466 to i32
  store i64 %16466, i64* %RAX.i2254, align 8
  %16468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16468, align 1
  %16469 = and i32 %16467, 255
  %16470 = call i32 @llvm.ctpop.i32(i32 %16469)
  %16471 = trunc i32 %16470 to i8
  %16472 = and i8 %16471, 1
  %16473 = xor i8 %16472, 1
  %16474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16473, i8* %16474, align 1
  %16475 = icmp eq i32 %16467, 0
  %16476 = zext i1 %16475 to i8
  %16477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16476, i8* %16477, align 1
  %16478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16478, align 1
  %16479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16479, align 1
  %16480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16480, align 1
  store %struct.Memory* %loadMem_4ab445, %struct.Memory** %MEMORY
  %loadMem_4ab448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16482 = getelementptr inbounds %struct.GPR, %struct.GPR* %16481, i32 0, i32 33
  %16483 = getelementptr inbounds %struct.Reg, %struct.Reg* %16482, i32 0, i32 0
  %PC.i2250 = bitcast %union.anon* %16483 to i64*
  %16484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16485 = getelementptr inbounds %struct.GPR, %struct.GPR* %16484, i32 0, i32 1
  %16486 = getelementptr inbounds %struct.Reg, %struct.Reg* %16485, i32 0, i32 0
  %EAX.i2251 = bitcast %union.anon* %16486 to i32*
  %16487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16488 = getelementptr inbounds %struct.GPR, %struct.GPR* %16487, i32 0, i32 5
  %16489 = getelementptr inbounds %struct.Reg, %struct.Reg* %16488, i32 0, i32 0
  %RCX.i2252 = bitcast %union.anon* %16489 to i64*
  %16490 = load i32, i32* %EAX.i2251
  %16491 = zext i32 %16490 to i64
  %16492 = load i64, i64* %PC.i2250
  %16493 = add i64 %16492, 3
  store i64 %16493, i64* %PC.i2250
  %16494 = shl i64 %16491, 32
  %16495 = ashr exact i64 %16494, 32
  store i64 %16495, i64* %RCX.i2252, align 8
  store %struct.Memory* %loadMem_4ab448, %struct.Memory** %MEMORY
  %loadMem_4ab44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16497 = getelementptr inbounds %struct.GPR, %struct.GPR* %16496, i32 0, i32 33
  %16498 = getelementptr inbounds %struct.Reg, %struct.Reg* %16497, i32 0, i32 0
  %PC.i2246 = bitcast %union.anon* %16498 to i64*
  %16499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16500 = getelementptr inbounds %struct.GPR, %struct.GPR* %16499, i32 0, i32 1
  %16501 = getelementptr inbounds %struct.Reg, %struct.Reg* %16500, i32 0, i32 0
  %RAX.i2247 = bitcast %union.anon* %16501 to i64*
  %16502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16503 = getelementptr inbounds %struct.GPR, %struct.GPR* %16502, i32 0, i32 5
  %16504 = getelementptr inbounds %struct.Reg, %struct.Reg* %16503, i32 0, i32 0
  %RCX.i2248 = bitcast %union.anon* %16504 to i64*
  %16505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16506 = getelementptr inbounds %struct.GPR, %struct.GPR* %16505, i32 0, i32 15
  %16507 = getelementptr inbounds %struct.Reg, %struct.Reg* %16506, i32 0, i32 0
  %RBP.i2249 = bitcast %union.anon* %16507 to i64*
  %16508 = load i64, i64* %RBP.i2249
  %16509 = load i64, i64* %RCX.i2248
  %16510 = mul i64 %16509, 4
  %16511 = add i64 %16508, -384
  %16512 = add i64 %16511, %16510
  %16513 = load i64, i64* %PC.i2246
  %16514 = add i64 %16513, 7
  store i64 %16514, i64* %PC.i2246
  %16515 = inttoptr i64 %16512 to i32*
  %16516 = load i32, i32* %16515
  %16517 = zext i32 %16516 to i64
  store i64 %16517, i64* %RAX.i2247, align 8
  store %struct.Memory* %loadMem_4ab44b, %struct.Memory** %MEMORY
  %loadMem_4ab452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16519 = getelementptr inbounds %struct.GPR, %struct.GPR* %16518, i32 0, i32 33
  %16520 = getelementptr inbounds %struct.Reg, %struct.Reg* %16519, i32 0, i32 0
  %PC.i2244 = bitcast %union.anon* %16520 to i64*
  %16521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16522 = getelementptr inbounds %struct.GPR, %struct.GPR* %16521, i32 0, i32 1
  %16523 = getelementptr inbounds %struct.Reg, %struct.Reg* %16522, i32 0, i32 0
  %RAX.i2245 = bitcast %union.anon* %16523 to i64*
  %16524 = load i64, i64* %RAX.i2245
  %16525 = load i64, i64* %PC.i2244
  %16526 = add i64 %16525, 3
  store i64 %16526, i64* %PC.i2244
  %16527 = trunc i64 %16524 to i32
  %16528 = add i32 1, %16527
  %16529 = zext i32 %16528 to i64
  store i64 %16529, i64* %RAX.i2245, align 8
  %16530 = icmp ult i32 %16528, %16527
  %16531 = icmp ult i32 %16528, 1
  %16532 = or i1 %16530, %16531
  %16533 = zext i1 %16532 to i8
  %16534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16533, i8* %16534, align 1
  %16535 = and i32 %16528, 255
  %16536 = call i32 @llvm.ctpop.i32(i32 %16535)
  %16537 = trunc i32 %16536 to i8
  %16538 = and i8 %16537, 1
  %16539 = xor i8 %16538, 1
  %16540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16539, i8* %16540, align 1
  %16541 = xor i64 1, %16524
  %16542 = trunc i64 %16541 to i32
  %16543 = xor i32 %16542, %16528
  %16544 = lshr i32 %16543, 4
  %16545 = trunc i32 %16544 to i8
  %16546 = and i8 %16545, 1
  %16547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16546, i8* %16547, align 1
  %16548 = icmp eq i32 %16528, 0
  %16549 = zext i1 %16548 to i8
  %16550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16549, i8* %16550, align 1
  %16551 = lshr i32 %16528, 31
  %16552 = trunc i32 %16551 to i8
  %16553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16552, i8* %16553, align 1
  %16554 = lshr i32 %16527, 31
  %16555 = xor i32 %16551, %16554
  %16556 = add i32 %16555, %16551
  %16557 = icmp eq i32 %16556, 2
  %16558 = zext i1 %16557 to i8
  %16559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16558, i8* %16559, align 1
  store %struct.Memory* %loadMem_4ab452, %struct.Memory** %MEMORY
  %loadMem_4ab455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16561 = getelementptr inbounds %struct.GPR, %struct.GPR* %16560, i32 0, i32 33
  %16562 = getelementptr inbounds %struct.Reg, %struct.Reg* %16561, i32 0, i32 0
  %PC.i2240 = bitcast %union.anon* %16562 to i64*
  %16563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16564 = getelementptr inbounds %struct.GPR, %struct.GPR* %16563, i32 0, i32 1
  %16565 = getelementptr inbounds %struct.Reg, %struct.Reg* %16564, i32 0, i32 0
  %EAX.i2241 = bitcast %union.anon* %16565 to i32*
  %16566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16567 = getelementptr inbounds %struct.GPR, %struct.GPR* %16566, i32 0, i32 5
  %16568 = getelementptr inbounds %struct.Reg, %struct.Reg* %16567, i32 0, i32 0
  %RCX.i2242 = bitcast %union.anon* %16568 to i64*
  %16569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16570 = getelementptr inbounds %struct.GPR, %struct.GPR* %16569, i32 0, i32 15
  %16571 = getelementptr inbounds %struct.Reg, %struct.Reg* %16570, i32 0, i32 0
  %RBP.i2243 = bitcast %union.anon* %16571 to i64*
  %16572 = load i64, i64* %RBP.i2243
  %16573 = load i64, i64* %RCX.i2242
  %16574 = mul i64 %16573, 4
  %16575 = add i64 %16572, -384
  %16576 = add i64 %16575, %16574
  %16577 = load i32, i32* %EAX.i2241
  %16578 = zext i32 %16577 to i64
  %16579 = load i64, i64* %PC.i2240
  %16580 = add i64 %16579, 7
  store i64 %16580, i64* %PC.i2240
  %16581 = inttoptr i64 %16576 to i32*
  store i32 %16577, i32* %16581
  store %struct.Memory* %loadMem_4ab455, %struct.Memory** %MEMORY
  %loadMem_4ab45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16583 = getelementptr inbounds %struct.GPR, %struct.GPR* %16582, i32 0, i32 33
  %16584 = getelementptr inbounds %struct.Reg, %struct.Reg* %16583, i32 0, i32 0
  %PC.i2237 = bitcast %union.anon* %16584 to i64*
  %16585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16586 = getelementptr inbounds %struct.GPR, %struct.GPR* %16585, i32 0, i32 1
  %16587 = getelementptr inbounds %struct.Reg, %struct.Reg* %16586, i32 0, i32 0
  %RAX.i2238 = bitcast %union.anon* %16587 to i64*
  %16588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16589 = getelementptr inbounds %struct.GPR, %struct.GPR* %16588, i32 0, i32 15
  %16590 = getelementptr inbounds %struct.Reg, %struct.Reg* %16589, i32 0, i32 0
  %RBP.i2239 = bitcast %union.anon* %16590 to i64*
  %16591 = load i64, i64* %RBP.i2239
  %16592 = sub i64 %16591, 36
  %16593 = load i64, i64* %PC.i2237
  %16594 = add i64 %16593, 3
  store i64 %16594, i64* %PC.i2237
  %16595 = inttoptr i64 %16592 to i32*
  %16596 = load i32, i32* %16595
  %16597 = zext i32 %16596 to i64
  store i64 %16597, i64* %RAX.i2238, align 8
  store %struct.Memory* %loadMem_4ab45c, %struct.Memory** %MEMORY
  %loadMem_4ab45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16599 = getelementptr inbounds %struct.GPR, %struct.GPR* %16598, i32 0, i32 33
  %16600 = getelementptr inbounds %struct.Reg, %struct.Reg* %16599, i32 0, i32 0
  %PC.i2235 = bitcast %union.anon* %16600 to i64*
  %16601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16602 = getelementptr inbounds %struct.GPR, %struct.GPR* %16601, i32 0, i32 1
  %16603 = getelementptr inbounds %struct.Reg, %struct.Reg* %16602, i32 0, i32 0
  %RAX.i2236 = bitcast %union.anon* %16603 to i64*
  %16604 = load i64, i64* %RAX.i2236
  %16605 = load i64, i64* %PC.i2235
  %16606 = add i64 %16605, 3
  store i64 %16606, i64* %PC.i2235
  %16607 = and i64 3, %16604
  %16608 = trunc i64 %16607 to i32
  store i64 %16607, i64* %RAX.i2236, align 8
  %16609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16609, align 1
  %16610 = and i32 %16608, 255
  %16611 = call i32 @llvm.ctpop.i32(i32 %16610)
  %16612 = trunc i32 %16611 to i8
  %16613 = and i8 %16612, 1
  %16614 = xor i8 %16613, 1
  %16615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16614, i8* %16615, align 1
  %16616 = icmp eq i32 %16608, 0
  %16617 = zext i1 %16616 to i8
  %16618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16617, i8* %16618, align 1
  %16619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16619, align 1
  %16620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16620, align 1
  %16621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16621, align 1
  store %struct.Memory* %loadMem_4ab45f, %struct.Memory** %MEMORY
  %loadMem_4ab462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16623 = getelementptr inbounds %struct.GPR, %struct.GPR* %16622, i32 0, i32 33
  %16624 = getelementptr inbounds %struct.Reg, %struct.Reg* %16623, i32 0, i32 0
  %PC.i2232 = bitcast %union.anon* %16624 to i64*
  %16625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16626 = getelementptr inbounds %struct.GPR, %struct.GPR* %16625, i32 0, i32 1
  %16627 = getelementptr inbounds %struct.Reg, %struct.Reg* %16626, i32 0, i32 0
  %EAX.i2233 = bitcast %union.anon* %16627 to i32*
  %16628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16629 = getelementptr inbounds %struct.GPR, %struct.GPR* %16628, i32 0, i32 5
  %16630 = getelementptr inbounds %struct.Reg, %struct.Reg* %16629, i32 0, i32 0
  %RCX.i2234 = bitcast %union.anon* %16630 to i64*
  %16631 = load i32, i32* %EAX.i2233
  %16632 = zext i32 %16631 to i64
  %16633 = load i64, i64* %PC.i2232
  %16634 = add i64 %16633, 3
  store i64 %16634, i64* %PC.i2232
  %16635 = shl i64 %16632, 32
  %16636 = ashr exact i64 %16635, 32
  store i64 %16636, i64* %RCX.i2234, align 8
  store %struct.Memory* %loadMem_4ab462, %struct.Memory** %MEMORY
  %loadMem_4ab465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16638 = getelementptr inbounds %struct.GPR, %struct.GPR* %16637, i32 0, i32 33
  %16639 = getelementptr inbounds %struct.Reg, %struct.Reg* %16638, i32 0, i32 0
  %PC.i2229 = bitcast %union.anon* %16639 to i64*
  %16640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16641 = getelementptr inbounds %struct.GPR, %struct.GPR* %16640, i32 0, i32 5
  %16642 = getelementptr inbounds %struct.Reg, %struct.Reg* %16641, i32 0, i32 0
  %RCX.i2230 = bitcast %union.anon* %16642 to i64*
  %16643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16644 = getelementptr inbounds %struct.GPR, %struct.GPR* %16643, i32 0, i32 15
  %16645 = getelementptr inbounds %struct.Reg, %struct.Reg* %16644, i32 0, i32 0
  %RBP.i2231 = bitcast %union.anon* %16645 to i64*
  %16646 = load i64, i64* %RBP.i2231
  %16647 = load i64, i64* %RCX.i2230
  %16648 = mul i64 %16647, 4
  %16649 = add i64 %16646, -400
  %16650 = add i64 %16649, %16648
  %16651 = load i64, i64* %PC.i2229
  %16652 = add i64 %16651, 11
  store i64 %16652, i64* %PC.i2229
  %16653 = inttoptr i64 %16650 to i32*
  store i32 -1, i32* %16653
  store %struct.Memory* %loadMem_4ab465, %struct.Memory** %MEMORY
  %loadMem_4ab470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16655 = getelementptr inbounds %struct.GPR, %struct.GPR* %16654, i32 0, i32 33
  %16656 = getelementptr inbounds %struct.Reg, %struct.Reg* %16655, i32 0, i32 0
  %PC.i2228 = bitcast %union.anon* %16656 to i64*
  %16657 = load i64, i64* %PC.i2228
  %16658 = add i64 %16657, 163
  %16659 = load i64, i64* %PC.i2228
  %16660 = add i64 %16659, 5
  store i64 %16660, i64* %PC.i2228
  %16661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16658, i64* %16661, align 8
  store %struct.Memory* %loadMem_4ab470, %struct.Memory** %MEMORY
  br label %block_.L_4ab513

block_.L_4ab475:                                  ; preds = %block_4ab324, %block_4ab309
  %loadMem_4ab475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16663 = getelementptr inbounds %struct.GPR, %struct.GPR* %16662, i32 0, i32 33
  %16664 = getelementptr inbounds %struct.Reg, %struct.Reg* %16663, i32 0, i32 0
  %PC.i2226 = bitcast %union.anon* %16664 to i64*
  %16665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16666 = getelementptr inbounds %struct.GPR, %struct.GPR* %16665, i32 0, i32 15
  %16667 = getelementptr inbounds %struct.Reg, %struct.Reg* %16666, i32 0, i32 0
  %RBP.i2227 = bitcast %union.anon* %16667 to i64*
  %16668 = load i64, i64* %RBP.i2227
  %16669 = sub i64 %16668, 44
  %16670 = load i64, i64* %PC.i2226
  %16671 = add i64 %16670, 4
  store i64 %16671, i64* %PC.i2226
  %16672 = inttoptr i64 %16669 to i32*
  %16673 = load i32, i32* %16672
  %16674 = sub i32 %16673, 1
  %16675 = icmp ult i32 %16673, 1
  %16676 = zext i1 %16675 to i8
  %16677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16676, i8* %16677, align 1
  %16678 = and i32 %16674, 255
  %16679 = call i32 @llvm.ctpop.i32(i32 %16678)
  %16680 = trunc i32 %16679 to i8
  %16681 = and i8 %16680, 1
  %16682 = xor i8 %16681, 1
  %16683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16682, i8* %16683, align 1
  %16684 = xor i32 %16673, 1
  %16685 = xor i32 %16684, %16674
  %16686 = lshr i32 %16685, 4
  %16687 = trunc i32 %16686 to i8
  %16688 = and i8 %16687, 1
  %16689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16688, i8* %16689, align 1
  %16690 = icmp eq i32 %16674, 0
  %16691 = zext i1 %16690 to i8
  %16692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16691, i8* %16692, align 1
  %16693 = lshr i32 %16674, 31
  %16694 = trunc i32 %16693 to i8
  %16695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16694, i8* %16695, align 1
  %16696 = lshr i32 %16673, 31
  %16697 = xor i32 %16693, %16696
  %16698 = add i32 %16697, %16696
  %16699 = icmp eq i32 %16698, 2
  %16700 = zext i1 %16699 to i8
  %16701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16700, i8* %16701, align 1
  store %struct.Memory* %loadMem_4ab475, %struct.Memory** %MEMORY
  %loadMem_4ab479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16703 = getelementptr inbounds %struct.GPR, %struct.GPR* %16702, i32 0, i32 33
  %16704 = getelementptr inbounds %struct.Reg, %struct.Reg* %16703, i32 0, i32 0
  %PC.i2225 = bitcast %union.anon* %16704 to i64*
  %16705 = load i64, i64* %PC.i2225
  %16706 = add i64 %16705, 25
  %16707 = load i64, i64* %PC.i2225
  %16708 = add i64 %16707, 6
  %16709 = load i64, i64* %PC.i2225
  %16710 = add i64 %16709, 6
  store i64 %16710, i64* %PC.i2225
  %16711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16712 = load i8, i8* %16711, align 1
  %16713 = icmp ne i8 %16712, 0
  %16714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16715 = load i8, i8* %16714, align 1
  %16716 = icmp ne i8 %16715, 0
  %16717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16718 = load i8, i8* %16717, align 1
  %16719 = icmp ne i8 %16718, 0
  %16720 = xor i1 %16716, %16719
  %16721 = or i1 %16713, %16720
  %16722 = zext i1 %16721 to i8
  store i8 %16722, i8* %BRANCH_TAKEN, align 1
  %16723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16724 = select i1 %16721, i64 %16706, i64 %16708
  store i64 %16724, i64* %16723, align 8
  store %struct.Memory* %loadMem_4ab479, %struct.Memory** %MEMORY
  %loadBr_4ab479 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab479 = icmp eq i8 %loadBr_4ab479, 1
  br i1 %cmpBr_4ab479, label %block_.L_4ab492, label %block_4ab47f

block_4ab47f:                                     ; preds = %block_.L_4ab475
  %loadMem_4ab47f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16726 = getelementptr inbounds %struct.GPR, %struct.GPR* %16725, i32 0, i32 33
  %16727 = getelementptr inbounds %struct.Reg, %struct.Reg* %16726, i32 0, i32 0
  %PC.i2222 = bitcast %union.anon* %16727 to i64*
  %16728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16729 = getelementptr inbounds %struct.GPR, %struct.GPR* %16728, i32 0, i32 1
  %16730 = getelementptr inbounds %struct.Reg, %struct.Reg* %16729, i32 0, i32 0
  %RAX.i2223 = bitcast %union.anon* %16730 to i64*
  %16731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16732 = getelementptr inbounds %struct.GPR, %struct.GPR* %16731, i32 0, i32 15
  %16733 = getelementptr inbounds %struct.Reg, %struct.Reg* %16732, i32 0, i32 0
  %RBP.i2224 = bitcast %union.anon* %16733 to i64*
  %16734 = load i64, i64* %RBP.i2224
  %16735 = sub i64 %16734, 16
  %16736 = load i64, i64* %PC.i2222
  %16737 = add i64 %16736, 4
  store i64 %16737, i64* %PC.i2222
  %16738 = inttoptr i64 %16735 to i64*
  %16739 = load i64, i64* %16738
  store i64 %16739, i64* %RAX.i2223, align 8
  store %struct.Memory* %loadMem_4ab47f, %struct.Memory** %MEMORY
  %loadMem_4ab483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16741 = getelementptr inbounds %struct.GPR, %struct.GPR* %16740, i32 0, i32 33
  %16742 = getelementptr inbounds %struct.Reg, %struct.Reg* %16741, i32 0, i32 0
  %PC.i2219 = bitcast %union.anon* %16742 to i64*
  %16743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16744 = getelementptr inbounds %struct.GPR, %struct.GPR* %16743, i32 0, i32 1
  %16745 = getelementptr inbounds %struct.Reg, %struct.Reg* %16744, i32 0, i32 0
  %RAX.i2220 = bitcast %union.anon* %16745 to i64*
  %16746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16747 = getelementptr inbounds %struct.GPR, %struct.GPR* %16746, i32 0, i32 5
  %16748 = getelementptr inbounds %struct.Reg, %struct.Reg* %16747, i32 0, i32 0
  %RCX.i2221 = bitcast %union.anon* %16748 to i64*
  %16749 = load i64, i64* %RAX.i2220
  %16750 = load i64, i64* %PC.i2219
  %16751 = add i64 %16750, 2
  store i64 %16751, i64* %PC.i2219
  %16752 = inttoptr i64 %16749 to i32*
  %16753 = load i32, i32* %16752
  %16754 = zext i32 %16753 to i64
  store i64 %16754, i64* %RCX.i2221, align 8
  store %struct.Memory* %loadMem_4ab483, %struct.Memory** %MEMORY
  %loadMem_4ab485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16756 = getelementptr inbounds %struct.GPR, %struct.GPR* %16755, i32 0, i32 33
  %16757 = getelementptr inbounds %struct.Reg, %struct.Reg* %16756, i32 0, i32 0
  %PC.i2217 = bitcast %union.anon* %16757 to i64*
  %16758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16759 = getelementptr inbounds %struct.GPR, %struct.GPR* %16758, i32 0, i32 5
  %16760 = getelementptr inbounds %struct.Reg, %struct.Reg* %16759, i32 0, i32 0
  %RCX.i2218 = bitcast %union.anon* %16760 to i64*
  %16761 = load i64, i64* %RCX.i2218
  %16762 = load i64, i64* %PC.i2217
  %16763 = add i64 %16762, 6
  store i64 %16763, i64* %PC.i2217
  %16764 = trunc i64 %16761 to i32
  %16765 = add i32 999999, %16764
  %16766 = zext i32 %16765 to i64
  store i64 %16766, i64* %RCX.i2218, align 8
  %16767 = icmp ult i32 %16765, %16764
  %16768 = icmp ult i32 %16765, 999999
  %16769 = or i1 %16767, %16768
  %16770 = zext i1 %16769 to i8
  %16771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16770, i8* %16771, align 1
  %16772 = and i32 %16765, 255
  %16773 = call i32 @llvm.ctpop.i32(i32 %16772)
  %16774 = trunc i32 %16773 to i8
  %16775 = and i8 %16774, 1
  %16776 = xor i8 %16775, 1
  %16777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16776, i8* %16777, align 1
  %16778 = xor i64 999999, %16761
  %16779 = trunc i64 %16778 to i32
  %16780 = xor i32 %16779, %16765
  %16781 = lshr i32 %16780, 4
  %16782 = trunc i32 %16781 to i8
  %16783 = and i8 %16782, 1
  %16784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16783, i8* %16784, align 1
  %16785 = icmp eq i32 %16765, 0
  %16786 = zext i1 %16785 to i8
  %16787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16786, i8* %16787, align 1
  %16788 = lshr i32 %16765, 31
  %16789 = trunc i32 %16788 to i8
  %16790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16789, i8* %16790, align 1
  %16791 = lshr i32 %16764, 31
  %16792 = xor i32 %16788, %16791
  %16793 = add i32 %16792, %16788
  %16794 = icmp eq i32 %16793, 2
  %16795 = zext i1 %16794 to i8
  %16796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16795, i8* %16796, align 1
  store %struct.Memory* %loadMem_4ab485, %struct.Memory** %MEMORY
  %loadMem_4ab48b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16798 = getelementptr inbounds %struct.GPR, %struct.GPR* %16797, i32 0, i32 33
  %16799 = getelementptr inbounds %struct.Reg, %struct.Reg* %16798, i32 0, i32 0
  %PC.i2214 = bitcast %union.anon* %16799 to i64*
  %16800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16801 = getelementptr inbounds %struct.GPR, %struct.GPR* %16800, i32 0, i32 5
  %16802 = getelementptr inbounds %struct.Reg, %struct.Reg* %16801, i32 0, i32 0
  %ECX.i2215 = bitcast %union.anon* %16802 to i32*
  %16803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16804 = getelementptr inbounds %struct.GPR, %struct.GPR* %16803, i32 0, i32 1
  %16805 = getelementptr inbounds %struct.Reg, %struct.Reg* %16804, i32 0, i32 0
  %RAX.i2216 = bitcast %union.anon* %16805 to i64*
  %16806 = load i64, i64* %RAX.i2216
  %16807 = load i32, i32* %ECX.i2215
  %16808 = zext i32 %16807 to i64
  %16809 = load i64, i64* %PC.i2214
  %16810 = add i64 %16809, 2
  store i64 %16810, i64* %PC.i2214
  %16811 = inttoptr i64 %16806 to i32*
  store i32 %16807, i32* %16811
  store %struct.Memory* %loadMem_4ab48b, %struct.Memory** %MEMORY
  %loadMem_4ab48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16813 = getelementptr inbounds %struct.GPR, %struct.GPR* %16812, i32 0, i32 33
  %16814 = getelementptr inbounds %struct.Reg, %struct.Reg* %16813, i32 0, i32 0
  %PC.i2213 = bitcast %union.anon* %16814 to i64*
  %16815 = load i64, i64* %PC.i2213
  %16816 = add i64 %16815, 53
  %16817 = load i64, i64* %PC.i2213
  %16818 = add i64 %16817, 5
  store i64 %16818, i64* %PC.i2213
  %16819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16816, i64* %16819, align 8
  store %struct.Memory* %loadMem_4ab48d, %struct.Memory** %MEMORY
  br label %block_.L_4ab4c2

block_.L_4ab492:                                  ; preds = %block_.L_4ab475
  %loadMem_4ab492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16821 = getelementptr inbounds %struct.GPR, %struct.GPR* %16820, i32 0, i32 33
  %16822 = getelementptr inbounds %struct.Reg, %struct.Reg* %16821, i32 0, i32 0
  %PC.i2211 = bitcast %union.anon* %16822 to i64*
  %16823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16824 = getelementptr inbounds %struct.GPR, %struct.GPR* %16823, i32 0, i32 1
  %16825 = getelementptr inbounds %struct.Reg, %struct.Reg* %16824, i32 0, i32 0
  %RAX.i2212 = bitcast %union.anon* %16825 to i64*
  %16826 = load i64, i64* %PC.i2211
  %16827 = add i64 %16826, 10
  store i64 %16827, i64* %PC.i2211
  store i64 ptrtoint (%G__0x4ba450_type* @G__0x4ba450 to i64), i64* %RAX.i2212, align 8
  store %struct.Memory* %loadMem_4ab492, %struct.Memory** %MEMORY
  %loadMem_4ab49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16829 = getelementptr inbounds %struct.GPR, %struct.GPR* %16828, i32 0, i32 33
  %16830 = getelementptr inbounds %struct.Reg, %struct.Reg* %16829, i32 0, i32 0
  %PC.i2209 = bitcast %union.anon* %16830 to i64*
  %16831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16832 = getelementptr inbounds %struct.GPR, %struct.GPR* %16831, i32 0, i32 5
  %16833 = getelementptr inbounds %struct.Reg, %struct.Reg* %16832, i32 0, i32 0
  %RCX.i2210 = bitcast %union.anon* %16833 to i64*
  %16834 = load i64, i64* %PC.i2209
  %16835 = add i64 %16834, 8
  store i64 %16835, i64* %PC.i2209
  %16836 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %16836, i64* %RCX.i2210, align 8
  store %struct.Memory* %loadMem_4ab49c, %struct.Memory** %MEMORY
  %loadMem_4ab4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16838 = getelementptr inbounds %struct.GPR, %struct.GPR* %16837, i32 0, i32 33
  %16839 = getelementptr inbounds %struct.Reg, %struct.Reg* %16838, i32 0, i32 0
  %PC.i2207 = bitcast %union.anon* %16839 to i64*
  %16840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16841 = getelementptr inbounds %struct.GPR, %struct.GPR* %16840, i32 0, i32 5
  %16842 = getelementptr inbounds %struct.Reg, %struct.Reg* %16841, i32 0, i32 0
  %RCX.i2208 = bitcast %union.anon* %16842 to i64*
  %16843 = load i64, i64* %RCX.i2208
  %16844 = add i64 %16843, 2468
  %16845 = load i64, i64* %PC.i2207
  %16846 = add i64 %16845, 7
  store i64 %16846, i64* %PC.i2207
  %16847 = inttoptr i64 %16844 to i32*
  %16848 = load i32, i32* %16847
  %16849 = sext i32 %16848 to i64
  store i64 %16849, i64* %RCX.i2208, align 8
  store %struct.Memory* %loadMem_4ab4a4, %struct.Memory** %MEMORY
  %loadMem_4ab4ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %16850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16851 = getelementptr inbounds %struct.GPR, %struct.GPR* %16850, i32 0, i32 33
  %16852 = getelementptr inbounds %struct.Reg, %struct.Reg* %16851, i32 0, i32 0
  %PC.i2205 = bitcast %union.anon* %16852 to i64*
  %16853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16854 = getelementptr inbounds %struct.GPR, %struct.GPR* %16853, i32 0, i32 5
  %16855 = getelementptr inbounds %struct.Reg, %struct.Reg* %16854, i32 0, i32 0
  %RCX.i2206 = bitcast %union.anon* %16855 to i64*
  %16856 = load i64, i64* %RCX.i2206
  %16857 = load i64, i64* %PC.i2205
  %16858 = add i64 %16857, 4
  store i64 %16858, i64* %PC.i2205
  %16859 = shl i64 %16856, 5
  %16860 = icmp slt i64 %16859, 0
  %16861 = shl i64 %16859, 1
  store i64 %16861, i64* %RCX.i2206, align 8
  %16862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16863 = zext i1 %16860 to i8
  store i8 %16863, i8* %16862, align 1
  %16864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16865 = trunc i64 %16861 to i32
  %16866 = and i32 %16865, 254
  %16867 = call i32 @llvm.ctpop.i32(i32 %16866)
  %16868 = trunc i32 %16867 to i8
  %16869 = and i8 %16868, 1
  %16870 = xor i8 %16869, 1
  store i8 %16870, i8* %16864, align 1
  %16871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16871, align 1
  %16872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16873 = icmp eq i64 %16861, 0
  %16874 = zext i1 %16873 to i8
  store i8 %16874, i8* %16872, align 1
  %16875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16876 = lshr i64 %16861, 63
  %16877 = trunc i64 %16876 to i8
  store i8 %16877, i8* %16875, align 1
  %16878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16878, align 1
  store %struct.Memory* %loadMem_4ab4ab, %struct.Memory** %MEMORY
  %loadMem_4ab4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %16879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16880 = getelementptr inbounds %struct.GPR, %struct.GPR* %16879, i32 0, i32 33
  %16881 = getelementptr inbounds %struct.Reg, %struct.Reg* %16880, i32 0, i32 0
  %PC.i2202 = bitcast %union.anon* %16881 to i64*
  %16882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16883 = getelementptr inbounds %struct.GPR, %struct.GPR* %16882, i32 0, i32 1
  %16884 = getelementptr inbounds %struct.Reg, %struct.Reg* %16883, i32 0, i32 0
  %RAX.i2203 = bitcast %union.anon* %16884 to i64*
  %16885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16886 = getelementptr inbounds %struct.GPR, %struct.GPR* %16885, i32 0, i32 5
  %16887 = getelementptr inbounds %struct.Reg, %struct.Reg* %16886, i32 0, i32 0
  %RCX.i2204 = bitcast %union.anon* %16887 to i64*
  %16888 = load i64, i64* %RAX.i2203
  %16889 = load i64, i64* %RCX.i2204
  %16890 = load i64, i64* %PC.i2202
  %16891 = add i64 %16890, 3
  store i64 %16891, i64* %PC.i2202
  %16892 = add i64 %16889, %16888
  store i64 %16892, i64* %RAX.i2203, align 8
  %16893 = icmp ult i64 %16892, %16888
  %16894 = icmp ult i64 %16892, %16889
  %16895 = or i1 %16893, %16894
  %16896 = zext i1 %16895 to i8
  %16897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16896, i8* %16897, align 1
  %16898 = trunc i64 %16892 to i32
  %16899 = and i32 %16898, 255
  %16900 = call i32 @llvm.ctpop.i32(i32 %16899)
  %16901 = trunc i32 %16900 to i8
  %16902 = and i8 %16901, 1
  %16903 = xor i8 %16902, 1
  %16904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16903, i8* %16904, align 1
  %16905 = xor i64 %16889, %16888
  %16906 = xor i64 %16905, %16892
  %16907 = lshr i64 %16906, 4
  %16908 = trunc i64 %16907 to i8
  %16909 = and i8 %16908, 1
  %16910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16909, i8* %16910, align 1
  %16911 = icmp eq i64 %16892, 0
  %16912 = zext i1 %16911 to i8
  %16913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16912, i8* %16913, align 1
  %16914 = lshr i64 %16892, 63
  %16915 = trunc i64 %16914 to i8
  %16916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16915, i8* %16916, align 1
  %16917 = lshr i64 %16888, 63
  %16918 = lshr i64 %16889, 63
  %16919 = xor i64 %16914, %16917
  %16920 = xor i64 %16914, %16918
  %16921 = add i64 %16919, %16920
  %16922 = icmp eq i64 %16921, 2
  %16923 = zext i1 %16922 to i8
  %16924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16923, i8* %16924, align 1
  store %struct.Memory* %loadMem_4ab4af, %struct.Memory** %MEMORY
  %loadMem_4ab4b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16926 = getelementptr inbounds %struct.GPR, %struct.GPR* %16925, i32 0, i32 33
  %16927 = getelementptr inbounds %struct.Reg, %struct.Reg* %16926, i32 0, i32 0
  %PC.i2199 = bitcast %union.anon* %16927 to i64*
  %16928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16929 = getelementptr inbounds %struct.GPR, %struct.GPR* %16928, i32 0, i32 5
  %16930 = getelementptr inbounds %struct.Reg, %struct.Reg* %16929, i32 0, i32 0
  %RCX.i2200 = bitcast %union.anon* %16930 to i64*
  %16931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16932 = getelementptr inbounds %struct.GPR, %struct.GPR* %16931, i32 0, i32 15
  %16933 = getelementptr inbounds %struct.Reg, %struct.Reg* %16932, i32 0, i32 0
  %RBP.i2201 = bitcast %union.anon* %16933 to i64*
  %16934 = load i64, i64* %RBP.i2201
  %16935 = sub i64 %16934, 52
  %16936 = load i64, i64* %PC.i2199
  %16937 = add i64 %16936, 4
  store i64 %16937, i64* %PC.i2199
  %16938 = inttoptr i64 %16935 to i32*
  %16939 = load i32, i32* %16938
  %16940 = sext i32 %16939 to i64
  store i64 %16940, i64* %RCX.i2200, align 8
  store %struct.Memory* %loadMem_4ab4b2, %struct.Memory** %MEMORY
  %loadMem_4ab4b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16942 = getelementptr inbounds %struct.GPR, %struct.GPR* %16941, i32 0, i32 33
  %16943 = getelementptr inbounds %struct.Reg, %struct.Reg* %16942, i32 0, i32 0
  %PC.i2195 = bitcast %union.anon* %16943 to i64*
  %16944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16945 = getelementptr inbounds %struct.GPR, %struct.GPR* %16944, i32 0, i32 1
  %16946 = getelementptr inbounds %struct.Reg, %struct.Reg* %16945, i32 0, i32 0
  %RAX.i2196 = bitcast %union.anon* %16946 to i64*
  %16947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16948 = getelementptr inbounds %struct.GPR, %struct.GPR* %16947, i32 0, i32 5
  %16949 = getelementptr inbounds %struct.Reg, %struct.Reg* %16948, i32 0, i32 0
  %RCX.i2197 = bitcast %union.anon* %16949 to i64*
  %16950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16951 = getelementptr inbounds %struct.GPR, %struct.GPR* %16950, i32 0, i32 7
  %16952 = getelementptr inbounds %struct.Reg, %struct.Reg* %16951, i32 0, i32 0
  %RDX.i2198 = bitcast %union.anon* %16952 to i64*
  %16953 = load i64, i64* %RAX.i2196
  %16954 = load i64, i64* %RCX.i2197
  %16955 = add i64 %16954, %16953
  %16956 = load i64, i64* %PC.i2195
  %16957 = add i64 %16956, 4
  store i64 %16957, i64* %PC.i2195
  %16958 = inttoptr i64 %16955 to i8*
  %16959 = load i8, i8* %16958
  %16960 = zext i8 %16959 to i64
  store i64 %16960, i64* %RDX.i2198, align 8
  store %struct.Memory* %loadMem_4ab4b6, %struct.Memory** %MEMORY
  %loadMem_4ab4ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %16961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16962 = getelementptr inbounds %struct.GPR, %struct.GPR* %16961, i32 0, i32 33
  %16963 = getelementptr inbounds %struct.Reg, %struct.Reg* %16962, i32 0, i32 0
  %PC.i2192 = bitcast %union.anon* %16963 to i64*
  %16964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16965 = getelementptr inbounds %struct.GPR, %struct.GPR* %16964, i32 0, i32 1
  %16966 = getelementptr inbounds %struct.Reg, %struct.Reg* %16965, i32 0, i32 0
  %RAX.i2193 = bitcast %union.anon* %16966 to i64*
  %16967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16968 = getelementptr inbounds %struct.GPR, %struct.GPR* %16967, i32 0, i32 15
  %16969 = getelementptr inbounds %struct.Reg, %struct.Reg* %16968, i32 0, i32 0
  %RBP.i2194 = bitcast %union.anon* %16969 to i64*
  %16970 = load i64, i64* %RBP.i2194
  %16971 = sub i64 %16970, 16
  %16972 = load i64, i64* %PC.i2192
  %16973 = add i64 %16972, 4
  store i64 %16973, i64* %PC.i2192
  %16974 = inttoptr i64 %16971 to i64*
  %16975 = load i64, i64* %16974
  store i64 %16975, i64* %RAX.i2193, align 8
  store %struct.Memory* %loadMem_4ab4ba, %struct.Memory** %MEMORY
  %loadMem_4ab4be = load %struct.Memory*, %struct.Memory** %MEMORY
  %16976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16977 = getelementptr inbounds %struct.GPR, %struct.GPR* %16976, i32 0, i32 33
  %16978 = getelementptr inbounds %struct.Reg, %struct.Reg* %16977, i32 0, i32 0
  %PC.i2189 = bitcast %union.anon* %16978 to i64*
  %16979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16980 = getelementptr inbounds %struct.GPR, %struct.GPR* %16979, i32 0, i32 1
  %16981 = getelementptr inbounds %struct.Reg, %struct.Reg* %16980, i32 0, i32 0
  %RAX.i2190 = bitcast %union.anon* %16981 to i64*
  %16982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16983 = getelementptr inbounds %struct.GPR, %struct.GPR* %16982, i32 0, i32 7
  %16984 = getelementptr inbounds %struct.Reg, %struct.Reg* %16983, i32 0, i32 0
  %RDX.i2191 = bitcast %union.anon* %16984 to i64*
  %16985 = load i64, i64* %RDX.i2191
  %16986 = load i64, i64* %RAX.i2190
  %16987 = load i64, i64* %PC.i2189
  %16988 = add i64 %16987, 2
  store i64 %16988, i64* %PC.i2189
  %16989 = trunc i64 %16985 to i32
  %16990 = inttoptr i64 %16986 to i32*
  %16991 = load i32, i32* %16990
  %16992 = add i32 %16991, %16989
  %16993 = zext i32 %16992 to i64
  store i64 %16993, i64* %RDX.i2191, align 8
  %16994 = icmp ult i32 %16992, %16989
  %16995 = icmp ult i32 %16992, %16991
  %16996 = or i1 %16994, %16995
  %16997 = zext i1 %16996 to i8
  %16998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16997, i8* %16998, align 1
  %16999 = and i32 %16992, 255
  %17000 = call i32 @llvm.ctpop.i32(i32 %16999)
  %17001 = trunc i32 %17000 to i8
  %17002 = and i8 %17001, 1
  %17003 = xor i8 %17002, 1
  %17004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17003, i8* %17004, align 1
  %17005 = xor i32 %16991, %16989
  %17006 = xor i32 %17005, %16992
  %17007 = lshr i32 %17006, 4
  %17008 = trunc i32 %17007 to i8
  %17009 = and i8 %17008, 1
  %17010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17009, i8* %17010, align 1
  %17011 = icmp eq i32 %16992, 0
  %17012 = zext i1 %17011 to i8
  %17013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17012, i8* %17013, align 1
  %17014 = lshr i32 %16992, 31
  %17015 = trunc i32 %17014 to i8
  %17016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17015, i8* %17016, align 1
  %17017 = lshr i32 %16989, 31
  %17018 = lshr i32 %16991, 31
  %17019 = xor i32 %17014, %17017
  %17020 = xor i32 %17014, %17018
  %17021 = add i32 %17019, %17020
  %17022 = icmp eq i32 %17021, 2
  %17023 = zext i1 %17022 to i8
  %17024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17023, i8* %17024, align 1
  store %struct.Memory* %loadMem_4ab4be, %struct.Memory** %MEMORY
  %loadMem_4ab4c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17026 = getelementptr inbounds %struct.GPR, %struct.GPR* %17025, i32 0, i32 33
  %17027 = getelementptr inbounds %struct.Reg, %struct.Reg* %17026, i32 0, i32 0
  %PC.i2186 = bitcast %union.anon* %17027 to i64*
  %17028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17029 = getelementptr inbounds %struct.GPR, %struct.GPR* %17028, i32 0, i32 7
  %17030 = getelementptr inbounds %struct.Reg, %struct.Reg* %17029, i32 0, i32 0
  %EDX.i2187 = bitcast %union.anon* %17030 to i32*
  %17031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17032 = getelementptr inbounds %struct.GPR, %struct.GPR* %17031, i32 0, i32 1
  %17033 = getelementptr inbounds %struct.Reg, %struct.Reg* %17032, i32 0, i32 0
  %RAX.i2188 = bitcast %union.anon* %17033 to i64*
  %17034 = load i64, i64* %RAX.i2188
  %17035 = load i32, i32* %EDX.i2187
  %17036 = zext i32 %17035 to i64
  %17037 = load i64, i64* %PC.i2186
  %17038 = add i64 %17037, 2
  store i64 %17038, i64* %PC.i2186
  %17039 = inttoptr i64 %17034 to i32*
  store i32 %17035, i32* %17039
  store %struct.Memory* %loadMem_4ab4c0, %struct.Memory** %MEMORY
  br label %block_.L_4ab4c2

block_.L_4ab4c2:                                  ; preds = %block_.L_4ab492, %block_4ab47f
  %loadMem_4ab4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17041 = getelementptr inbounds %struct.GPR, %struct.GPR* %17040, i32 0, i32 33
  %17042 = getelementptr inbounds %struct.Reg, %struct.Reg* %17041, i32 0, i32 0
  %PC.i2183 = bitcast %union.anon* %17042 to i64*
  %17043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17044 = getelementptr inbounds %struct.GPR, %struct.GPR* %17043, i32 0, i32 11
  %17045 = getelementptr inbounds %struct.Reg, %struct.Reg* %17044, i32 0, i32 0
  %RDI.i2184 = bitcast %union.anon* %17045 to i64*
  %17046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17047 = getelementptr inbounds %struct.GPR, %struct.GPR* %17046, i32 0, i32 15
  %17048 = getelementptr inbounds %struct.Reg, %struct.Reg* %17047, i32 0, i32 0
  %RBP.i2185 = bitcast %union.anon* %17048 to i64*
  %17049 = load i64, i64* %RBP.i2185
  %17050 = sub i64 %17049, 44
  %17051 = load i64, i64* %PC.i2183
  %17052 = add i64 %17051, 3
  store i64 %17052, i64* %PC.i2183
  %17053 = inttoptr i64 %17050 to i32*
  %17054 = load i32, i32* %17053
  %17055 = zext i32 %17054 to i64
  store i64 %17055, i64* %RDI.i2184, align 8
  store %struct.Memory* %loadMem_4ab4c2, %struct.Memory** %MEMORY
  %loadMem_4ab4c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17057 = getelementptr inbounds %struct.GPR, %struct.GPR* %17056, i32 0, i32 33
  %17058 = getelementptr inbounds %struct.Reg, %struct.Reg* %17057, i32 0, i32 0
  %PC.i2181 = bitcast %union.anon* %17058 to i64*
  %17059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17060 = getelementptr inbounds %struct.GPR, %struct.GPR* %17059, i32 0, i32 1
  %17061 = getelementptr inbounds %struct.Reg, %struct.Reg* %17060, i32 0, i32 0
  %RAX.i2182 = bitcast %union.anon* %17061 to i64*
  %17062 = load i64, i64* %PC.i2181
  %17063 = add i64 %17062, 8
  store i64 %17063, i64* %PC.i2181
  %17064 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17064, i64* %RAX.i2182, align 8
  store %struct.Memory* %loadMem_4ab4c5, %struct.Memory** %MEMORY
  %loadMem_4ab4cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17066 = getelementptr inbounds %struct.GPR, %struct.GPR* %17065, i32 0, i32 33
  %17067 = getelementptr inbounds %struct.Reg, %struct.Reg* %17066, i32 0, i32 0
  %PC.i2179 = bitcast %union.anon* %17067 to i64*
  %17068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17069 = getelementptr inbounds %struct.GPR, %struct.GPR* %17068, i32 0, i32 1
  %17070 = getelementptr inbounds %struct.Reg, %struct.Reg* %17069, i32 0, i32 0
  %RAX.i2180 = bitcast %union.anon* %17070 to i64*
  %17071 = load i64, i64* %RAX.i2180
  %17072 = load i64, i64* %PC.i2179
  %17073 = add i64 %17072, 6
  store i64 %17073, i64* %PC.i2179
  %17074 = add i64 13112, %17071
  store i64 %17074, i64* %RAX.i2180, align 8
  %17075 = icmp ult i64 %17074, %17071
  %17076 = icmp ult i64 %17074, 13112
  %17077 = or i1 %17075, %17076
  %17078 = zext i1 %17077 to i8
  %17079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17078, i8* %17079, align 1
  %17080 = trunc i64 %17074 to i32
  %17081 = and i32 %17080, 255
  %17082 = call i32 @llvm.ctpop.i32(i32 %17081)
  %17083 = trunc i32 %17082 to i8
  %17084 = and i8 %17083, 1
  %17085 = xor i8 %17084, 1
  %17086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17085, i8* %17086, align 1
  %17087 = xor i64 13112, %17071
  %17088 = xor i64 %17087, %17074
  %17089 = lshr i64 %17088, 4
  %17090 = trunc i64 %17089 to i8
  %17091 = and i8 %17090, 1
  %17092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17091, i8* %17092, align 1
  %17093 = icmp eq i64 %17074, 0
  %17094 = zext i1 %17093 to i8
  %17095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17094, i8* %17095, align 1
  %17096 = lshr i64 %17074, 63
  %17097 = trunc i64 %17096 to i8
  %17098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17097, i8* %17098, align 1
  %17099 = lshr i64 %17071, 63
  %17100 = xor i64 %17096, %17099
  %17101 = add i64 %17100, %17096
  %17102 = icmp eq i64 %17101, 2
  %17103 = zext i1 %17102 to i8
  %17104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17103, i8* %17104, align 1
  store %struct.Memory* %loadMem_4ab4cd, %struct.Memory** %MEMORY
  %loadMem_4ab4d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17106 = getelementptr inbounds %struct.GPR, %struct.GPR* %17105, i32 0, i32 33
  %17107 = getelementptr inbounds %struct.Reg, %struct.Reg* %17106, i32 0, i32 0
  %PC.i2176 = bitcast %union.anon* %17107 to i64*
  %17108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17109 = getelementptr inbounds %struct.GPR, %struct.GPR* %17108, i32 0, i32 5
  %17110 = getelementptr inbounds %struct.Reg, %struct.Reg* %17109, i32 0, i32 0
  %RCX.i2177 = bitcast %union.anon* %17110 to i64*
  %17111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17112 = getelementptr inbounds %struct.GPR, %struct.GPR* %17111, i32 0, i32 15
  %17113 = getelementptr inbounds %struct.Reg, %struct.Reg* %17112, i32 0, i32 0
  %RBP.i2178 = bitcast %union.anon* %17113 to i64*
  %17114 = load i64, i64* %RBP.i2178
  %17115 = sub i64 %17114, 24
  %17116 = load i64, i64* %PC.i2176
  %17117 = add i64 %17116, 4
  store i64 %17117, i64* %PC.i2176
  %17118 = inttoptr i64 %17115 to i32*
  %17119 = load i32, i32* %17118
  %17120 = sext i32 %17119 to i64
  store i64 %17120, i64* %RCX.i2177, align 8
  store %struct.Memory* %loadMem_4ab4d3, %struct.Memory** %MEMORY
  %loadMem_4ab4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17122 = getelementptr inbounds %struct.GPR, %struct.GPR* %17121, i32 0, i32 33
  %17123 = getelementptr inbounds %struct.Reg, %struct.Reg* %17122, i32 0, i32 0
  %PC.i2174 = bitcast %union.anon* %17123 to i64*
  %17124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17125 = getelementptr inbounds %struct.GPR, %struct.GPR* %17124, i32 0, i32 5
  %17126 = getelementptr inbounds %struct.Reg, %struct.Reg* %17125, i32 0, i32 0
  %RCX.i2175 = bitcast %union.anon* %17126 to i64*
  %17127 = load i64, i64* %RCX.i2175
  %17128 = load i64, i64* %PC.i2174
  %17129 = add i64 %17128, 4
  store i64 %17129, i64* %PC.i2174
  %17130 = shl i64 %17127, 5
  %17131 = icmp slt i64 %17130, 0
  %17132 = shl i64 %17130, 1
  store i64 %17132, i64* %RCX.i2175, align 8
  %17133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17134 = zext i1 %17131 to i8
  store i8 %17134, i8* %17133, align 1
  %17135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17136 = trunc i64 %17132 to i32
  %17137 = and i32 %17136, 254
  %17138 = call i32 @llvm.ctpop.i32(i32 %17137)
  %17139 = trunc i32 %17138 to i8
  %17140 = and i8 %17139, 1
  %17141 = xor i8 %17140, 1
  store i8 %17141, i8* %17135, align 1
  %17142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17142, align 1
  %17143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17144 = icmp eq i64 %17132, 0
  %17145 = zext i1 %17144 to i8
  store i8 %17145, i8* %17143, align 1
  %17146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17147 = lshr i64 %17132, 63
  %17148 = trunc i64 %17147 to i8
  store i8 %17148, i8* %17146, align 1
  %17149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17149, align 1
  store %struct.Memory* %loadMem_4ab4d7, %struct.Memory** %MEMORY
  %loadMem_4ab4db = load %struct.Memory*, %struct.Memory** %MEMORY
  %17150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17151 = getelementptr inbounds %struct.GPR, %struct.GPR* %17150, i32 0, i32 33
  %17152 = getelementptr inbounds %struct.Reg, %struct.Reg* %17151, i32 0, i32 0
  %PC.i2171 = bitcast %union.anon* %17152 to i64*
  %17153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17154 = getelementptr inbounds %struct.GPR, %struct.GPR* %17153, i32 0, i32 1
  %17155 = getelementptr inbounds %struct.Reg, %struct.Reg* %17154, i32 0, i32 0
  %RAX.i2172 = bitcast %union.anon* %17155 to i64*
  %17156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17157 = getelementptr inbounds %struct.GPR, %struct.GPR* %17156, i32 0, i32 5
  %17158 = getelementptr inbounds %struct.Reg, %struct.Reg* %17157, i32 0, i32 0
  %RCX.i2173 = bitcast %union.anon* %17158 to i64*
  %17159 = load i64, i64* %RAX.i2172
  %17160 = load i64, i64* %RCX.i2173
  %17161 = load i64, i64* %PC.i2171
  %17162 = add i64 %17161, 3
  store i64 %17162, i64* %PC.i2171
  %17163 = add i64 %17160, %17159
  store i64 %17163, i64* %RAX.i2172, align 8
  %17164 = icmp ult i64 %17163, %17159
  %17165 = icmp ult i64 %17163, %17160
  %17166 = or i1 %17164, %17165
  %17167 = zext i1 %17166 to i8
  %17168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17167, i8* %17168, align 1
  %17169 = trunc i64 %17163 to i32
  %17170 = and i32 %17169, 255
  %17171 = call i32 @llvm.ctpop.i32(i32 %17170)
  %17172 = trunc i32 %17171 to i8
  %17173 = and i8 %17172, 1
  %17174 = xor i8 %17173, 1
  %17175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17174, i8* %17175, align 1
  %17176 = xor i64 %17160, %17159
  %17177 = xor i64 %17176, %17163
  %17178 = lshr i64 %17177, 4
  %17179 = trunc i64 %17178 to i8
  %17180 = and i8 %17179, 1
  %17181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17180, i8* %17181, align 1
  %17182 = icmp eq i64 %17163, 0
  %17183 = zext i1 %17182 to i8
  %17184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17183, i8* %17184, align 1
  %17185 = lshr i64 %17163, 63
  %17186 = trunc i64 %17185 to i8
  %17187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17186, i8* %17187, align 1
  %17188 = lshr i64 %17159, 63
  %17189 = lshr i64 %17160, 63
  %17190 = xor i64 %17185, %17188
  %17191 = xor i64 %17185, %17189
  %17192 = add i64 %17190, %17191
  %17193 = icmp eq i64 %17192, 2
  %17194 = zext i1 %17193 to i8
  %17195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17194, i8* %17195, align 1
  store %struct.Memory* %loadMem_4ab4db, %struct.Memory** %MEMORY
  %loadMem_4ab4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %17196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17197 = getelementptr inbounds %struct.GPR, %struct.GPR* %17196, i32 0, i32 33
  %17198 = getelementptr inbounds %struct.Reg, %struct.Reg* %17197, i32 0, i32 0
  %PC.i2168 = bitcast %union.anon* %17198 to i64*
  %17199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17200 = getelementptr inbounds %struct.GPR, %struct.GPR* %17199, i32 0, i32 5
  %17201 = getelementptr inbounds %struct.Reg, %struct.Reg* %17200, i32 0, i32 0
  %RCX.i2169 = bitcast %union.anon* %17201 to i64*
  %17202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17203 = getelementptr inbounds %struct.GPR, %struct.GPR* %17202, i32 0, i32 15
  %17204 = getelementptr inbounds %struct.Reg, %struct.Reg* %17203, i32 0, i32 0
  %RBP.i2170 = bitcast %union.anon* %17204 to i64*
  %17205 = load i64, i64* %RBP.i2170
  %17206 = sub i64 %17205, 28
  %17207 = load i64, i64* %PC.i2168
  %17208 = add i64 %17207, 4
  store i64 %17208, i64* %PC.i2168
  %17209 = inttoptr i64 %17206 to i32*
  %17210 = load i32, i32* %17209
  %17211 = sext i32 %17210 to i64
  store i64 %17211, i64* %RCX.i2169, align 8
  store %struct.Memory* %loadMem_4ab4de, %struct.Memory** %MEMORY
  %loadMem_4ab4e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17213 = getelementptr inbounds %struct.GPR, %struct.GPR* %17212, i32 0, i32 33
  %17214 = getelementptr inbounds %struct.Reg, %struct.Reg* %17213, i32 0, i32 0
  %PC.i2164 = bitcast %union.anon* %17214 to i64*
  %17215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17216 = getelementptr inbounds %struct.GPR, %struct.GPR* %17215, i32 0, i32 1
  %17217 = getelementptr inbounds %struct.Reg, %struct.Reg* %17216, i32 0, i32 0
  %RAX.i2165 = bitcast %union.anon* %17217 to i64*
  %17218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17219 = getelementptr inbounds %struct.GPR, %struct.GPR* %17218, i32 0, i32 5
  %17220 = getelementptr inbounds %struct.Reg, %struct.Reg* %17219, i32 0, i32 0
  %RCX.i2166 = bitcast %union.anon* %17220 to i64*
  %17221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17222 = getelementptr inbounds %struct.GPR, %struct.GPR* %17221, i32 0, i32 9
  %17223 = getelementptr inbounds %struct.Reg, %struct.Reg* %17222, i32 0, i32 0
  %RSI.i2167 = bitcast %union.anon* %17223 to i64*
  %17224 = load i64, i64* %RAX.i2165
  %17225 = load i64, i64* %RCX.i2166
  %17226 = mul i64 %17225, 4
  %17227 = add i64 %17226, %17224
  %17228 = load i64, i64* %PC.i2164
  %17229 = add i64 %17228, 3
  store i64 %17229, i64* %PC.i2164
  %17230 = inttoptr i64 %17227 to i32*
  %17231 = load i32, i32* %17230
  %17232 = zext i32 %17231 to i64
  store i64 %17232, i64* %RSI.i2167, align 8
  store %struct.Memory* %loadMem_4ab4e2, %struct.Memory** %MEMORY
  %loadMem1_4ab4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17234 = getelementptr inbounds %struct.GPR, %struct.GPR* %17233, i32 0, i32 33
  %17235 = getelementptr inbounds %struct.Reg, %struct.Reg* %17234, i32 0, i32 0
  %PC.i2163 = bitcast %union.anon* %17235 to i64*
  %17236 = load i64, i64* %PC.i2163
  %17237 = add i64 %17236, -222101
  %17238 = load i64, i64* %PC.i2163
  %17239 = add i64 %17238, 5
  %17240 = load i64, i64* %PC.i2163
  %17241 = add i64 %17240, 5
  store i64 %17241, i64* %PC.i2163
  %17242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %17243 = load i64, i64* %17242, align 8
  %17244 = add i64 %17243, -8
  %17245 = inttoptr i64 %17244 to i64*
  store i64 %17239, i64* %17245
  store i64 %17244, i64* %17242, align 8
  %17246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17237, i64* %17246, align 8
  store %struct.Memory* %loadMem1_4ab4e5, %struct.Memory** %MEMORY
  %loadMem2_4ab4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4ab4e5 = load i64, i64* %3
  %call2_4ab4e5 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_4ab4e5, %struct.Memory* %loadMem2_4ab4e5)
  store %struct.Memory* %call2_4ab4e5, %struct.Memory** %MEMORY
  %loadMem_4ab4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %17247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17248 = getelementptr inbounds %struct.GPR, %struct.GPR* %17247, i32 0, i32 33
  %17249 = getelementptr inbounds %struct.Reg, %struct.Reg* %17248, i32 0, i32 0
  %PC.i2160 = bitcast %union.anon* %17249 to i64*
  %17250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17251 = getelementptr inbounds %struct.GPR, %struct.GPR* %17250, i32 0, i32 5
  %17252 = getelementptr inbounds %struct.Reg, %struct.Reg* %17251, i32 0, i32 0
  %RCX.i2161 = bitcast %union.anon* %17252 to i64*
  %17253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17254 = getelementptr inbounds %struct.GPR, %struct.GPR* %17253, i32 0, i32 15
  %17255 = getelementptr inbounds %struct.Reg, %struct.Reg* %17254, i32 0, i32 0
  %RBP.i2162 = bitcast %union.anon* %17255 to i64*
  %17256 = load i64, i64* %RBP.i2162
  %17257 = sub i64 %17256, 96
  %17258 = load i64, i64* %PC.i2160
  %17259 = add i64 %17258, 4
  store i64 %17259, i64* %PC.i2160
  %17260 = inttoptr i64 %17257 to i64*
  %17261 = load i64, i64* %17260
  store i64 %17261, i64* %RCX.i2161, align 8
  store %struct.Memory* %loadMem_4ab4ea, %struct.Memory** %MEMORY
  %loadMem_4ab4ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %17262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17263 = getelementptr inbounds %struct.GPR, %struct.GPR* %17262, i32 0, i32 33
  %17264 = getelementptr inbounds %struct.Reg, %struct.Reg* %17263, i32 0, i32 0
  %PC.i2157 = bitcast %union.anon* %17264 to i64*
  %17265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17266 = getelementptr inbounds %struct.GPR, %struct.GPR* %17265, i32 0, i32 7
  %17267 = getelementptr inbounds %struct.Reg, %struct.Reg* %17266, i32 0, i32 0
  %RDX.i2158 = bitcast %union.anon* %17267 to i64*
  %17268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17269 = getelementptr inbounds %struct.GPR, %struct.GPR* %17268, i32 0, i32 15
  %17270 = getelementptr inbounds %struct.Reg, %struct.Reg* %17269, i32 0, i32 0
  %RBP.i2159 = bitcast %union.anon* %17270 to i64*
  %17271 = load i64, i64* %RBP.i2159
  %17272 = sub i64 %17271, 48
  %17273 = load i64, i64* %PC.i2157
  %17274 = add i64 %17273, 4
  store i64 %17274, i64* %PC.i2157
  %17275 = inttoptr i64 %17272 to i32*
  %17276 = load i32, i32* %17275
  %17277 = sext i32 %17276 to i64
  store i64 %17277, i64* %RDX.i2158, align 8
  store %struct.Memory* %loadMem_4ab4ee, %struct.Memory** %MEMORY
  %loadMem_4ab4f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17279 = getelementptr inbounds %struct.GPR, %struct.GPR* %17278, i32 0, i32 33
  %17280 = getelementptr inbounds %struct.Reg, %struct.Reg* %17279, i32 0, i32 0
  %PC.i2153 = bitcast %union.anon* %17280 to i64*
  %17281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17282 = getelementptr inbounds %struct.GPR, %struct.GPR* %17281, i32 0, i32 1
  %17283 = getelementptr inbounds %struct.Reg, %struct.Reg* %17282, i32 0, i32 0
  %EAX.i2154 = bitcast %union.anon* %17283 to i32*
  %17284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17285 = getelementptr inbounds %struct.GPR, %struct.GPR* %17284, i32 0, i32 5
  %17286 = getelementptr inbounds %struct.Reg, %struct.Reg* %17285, i32 0, i32 0
  %RCX.i2155 = bitcast %union.anon* %17286 to i64*
  %17287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17288 = getelementptr inbounds %struct.GPR, %struct.GPR* %17287, i32 0, i32 7
  %17289 = getelementptr inbounds %struct.Reg, %struct.Reg* %17288, i32 0, i32 0
  %RDX.i2156 = bitcast %union.anon* %17289 to i64*
  %17290 = load i64, i64* %RCX.i2155
  %17291 = load i64, i64* %RDX.i2156
  %17292 = mul i64 %17291, 4
  %17293 = add i64 %17292, %17290
  %17294 = load i32, i32* %EAX.i2154
  %17295 = zext i32 %17294 to i64
  %17296 = load i64, i64* %PC.i2153
  %17297 = add i64 %17296, 3
  store i64 %17297, i64* %PC.i2153
  %17298 = inttoptr i64 %17293 to i32*
  store i32 %17294, i32* %17298
  store %struct.Memory* %loadMem_4ab4f2, %struct.Memory** %MEMORY
  %loadMem_4ab4f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17300 = getelementptr inbounds %struct.GPR, %struct.GPR* %17299, i32 0, i32 33
  %17301 = getelementptr inbounds %struct.Reg, %struct.Reg* %17300, i32 0, i32 0
  %PC.i2150 = bitcast %union.anon* %17301 to i64*
  %17302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17303 = getelementptr inbounds %struct.GPR, %struct.GPR* %17302, i32 0, i32 1
  %17304 = getelementptr inbounds %struct.Reg, %struct.Reg* %17303, i32 0, i32 0
  %RAX.i2151 = bitcast %union.anon* %17304 to i64*
  %17305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17306 = getelementptr inbounds %struct.GPR, %struct.GPR* %17305, i32 0, i32 15
  %17307 = getelementptr inbounds %struct.Reg, %struct.Reg* %17306, i32 0, i32 0
  %RBP.i2152 = bitcast %union.anon* %17307 to i64*
  %17308 = load i64, i64* %RBP.i2152
  %17309 = sub i64 %17308, 52
  %17310 = load i64, i64* %PC.i2150
  %17311 = add i64 %17310, 3
  store i64 %17311, i64* %PC.i2150
  %17312 = inttoptr i64 %17309 to i32*
  %17313 = load i32, i32* %17312
  %17314 = zext i32 %17313 to i64
  store i64 %17314, i64* %RAX.i2151, align 8
  store %struct.Memory* %loadMem_4ab4f5, %struct.Memory** %MEMORY
  %loadMem_4ab4f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17316 = getelementptr inbounds %struct.GPR, %struct.GPR* %17315, i32 0, i32 33
  %17317 = getelementptr inbounds %struct.Reg, %struct.Reg* %17316, i32 0, i32 0
  %PC.i2147 = bitcast %union.anon* %17317 to i64*
  %17318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17319 = getelementptr inbounds %struct.GPR, %struct.GPR* %17318, i32 0, i32 5
  %17320 = getelementptr inbounds %struct.Reg, %struct.Reg* %17319, i32 0, i32 0
  %RCX.i2148 = bitcast %union.anon* %17320 to i64*
  %17321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17322 = getelementptr inbounds %struct.GPR, %struct.GPR* %17321, i32 0, i32 15
  %17323 = getelementptr inbounds %struct.Reg, %struct.Reg* %17322, i32 0, i32 0
  %RBP.i2149 = bitcast %union.anon* %17323 to i64*
  %17324 = load i64, i64* %RBP.i2149
  %17325 = sub i64 %17324, 104
  %17326 = load i64, i64* %PC.i2147
  %17327 = add i64 %17326, 4
  store i64 %17327, i64* %PC.i2147
  %17328 = inttoptr i64 %17325 to i64*
  %17329 = load i64, i64* %17328
  store i64 %17329, i64* %RCX.i2148, align 8
  store %struct.Memory* %loadMem_4ab4f8, %struct.Memory** %MEMORY
  %loadMem_4ab4fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17331 = getelementptr inbounds %struct.GPR, %struct.GPR* %17330, i32 0, i32 33
  %17332 = getelementptr inbounds %struct.Reg, %struct.Reg* %17331, i32 0, i32 0
  %PC.i2144 = bitcast %union.anon* %17332 to i64*
  %17333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17334 = getelementptr inbounds %struct.GPR, %struct.GPR* %17333, i32 0, i32 7
  %17335 = getelementptr inbounds %struct.Reg, %struct.Reg* %17334, i32 0, i32 0
  %RDX.i2145 = bitcast %union.anon* %17335 to i64*
  %17336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17337 = getelementptr inbounds %struct.GPR, %struct.GPR* %17336, i32 0, i32 15
  %17338 = getelementptr inbounds %struct.Reg, %struct.Reg* %17337, i32 0, i32 0
  %RBP.i2146 = bitcast %union.anon* %17338 to i64*
  %17339 = load i64, i64* %RBP.i2146
  %17340 = sub i64 %17339, 48
  %17341 = load i64, i64* %PC.i2144
  %17342 = add i64 %17341, 4
  store i64 %17342, i64* %PC.i2144
  %17343 = inttoptr i64 %17340 to i32*
  %17344 = load i32, i32* %17343
  %17345 = sext i32 %17344 to i64
  store i64 %17345, i64* %RDX.i2145, align 8
  store %struct.Memory* %loadMem_4ab4fc, %struct.Memory** %MEMORY
  %loadMem_4ab500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17347 = getelementptr inbounds %struct.GPR, %struct.GPR* %17346, i32 0, i32 33
  %17348 = getelementptr inbounds %struct.Reg, %struct.Reg* %17347, i32 0, i32 0
  %PC.i2140 = bitcast %union.anon* %17348 to i64*
  %17349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17350 = getelementptr inbounds %struct.GPR, %struct.GPR* %17349, i32 0, i32 1
  %17351 = getelementptr inbounds %struct.Reg, %struct.Reg* %17350, i32 0, i32 0
  %EAX.i2141 = bitcast %union.anon* %17351 to i32*
  %17352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17353 = getelementptr inbounds %struct.GPR, %struct.GPR* %17352, i32 0, i32 5
  %17354 = getelementptr inbounds %struct.Reg, %struct.Reg* %17353, i32 0, i32 0
  %RCX.i2142 = bitcast %union.anon* %17354 to i64*
  %17355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17356 = getelementptr inbounds %struct.GPR, %struct.GPR* %17355, i32 0, i32 7
  %17357 = getelementptr inbounds %struct.Reg, %struct.Reg* %17356, i32 0, i32 0
  %RDX.i2143 = bitcast %union.anon* %17357 to i64*
  %17358 = load i64, i64* %RCX.i2142
  %17359 = load i64, i64* %RDX.i2143
  %17360 = mul i64 %17359, 4
  %17361 = add i64 %17360, %17358
  %17362 = load i32, i32* %EAX.i2141
  %17363 = zext i32 %17362 to i64
  %17364 = load i64, i64* %PC.i2140
  %17365 = add i64 %17364, 3
  store i64 %17365, i64* %PC.i2140
  %17366 = inttoptr i64 %17361 to i32*
  store i32 %17362, i32* %17366
  store %struct.Memory* %loadMem_4ab500, %struct.Memory** %MEMORY
  %loadMem_4ab503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17368 = getelementptr inbounds %struct.GPR, %struct.GPR* %17367, i32 0, i32 33
  %17369 = getelementptr inbounds %struct.Reg, %struct.Reg* %17368, i32 0, i32 0
  %PC.i2137 = bitcast %union.anon* %17369 to i64*
  %17370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17371 = getelementptr inbounds %struct.GPR, %struct.GPR* %17370, i32 0, i32 1
  %17372 = getelementptr inbounds %struct.Reg, %struct.Reg* %17371, i32 0, i32 0
  %RAX.i2138 = bitcast %union.anon* %17372 to i64*
  %17373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17374 = getelementptr inbounds %struct.GPR, %struct.GPR* %17373, i32 0, i32 15
  %17375 = getelementptr inbounds %struct.Reg, %struct.Reg* %17374, i32 0, i32 0
  %RBP.i2139 = bitcast %union.anon* %17375 to i64*
  %17376 = load i64, i64* %RBP.i2139
  %17377 = sub i64 %17376, 48
  %17378 = load i64, i64* %PC.i2137
  %17379 = add i64 %17378, 3
  store i64 %17379, i64* %PC.i2137
  %17380 = inttoptr i64 %17377 to i32*
  %17381 = load i32, i32* %17380
  %17382 = zext i32 %17381 to i64
  store i64 %17382, i64* %RAX.i2138, align 8
  store %struct.Memory* %loadMem_4ab503, %struct.Memory** %MEMORY
  %loadMem_4ab506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17384 = getelementptr inbounds %struct.GPR, %struct.GPR* %17383, i32 0, i32 33
  %17385 = getelementptr inbounds %struct.Reg, %struct.Reg* %17384, i32 0, i32 0
  %PC.i2135 = bitcast %union.anon* %17385 to i64*
  %17386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17387 = getelementptr inbounds %struct.GPR, %struct.GPR* %17386, i32 0, i32 1
  %17388 = getelementptr inbounds %struct.Reg, %struct.Reg* %17387, i32 0, i32 0
  %RAX.i2136 = bitcast %union.anon* %17388 to i64*
  %17389 = load i64, i64* %RAX.i2136
  %17390 = load i64, i64* %PC.i2135
  %17391 = add i64 %17390, 3
  store i64 %17391, i64* %PC.i2135
  %17392 = trunc i64 %17389 to i32
  %17393 = add i32 1, %17392
  %17394 = zext i32 %17393 to i64
  store i64 %17394, i64* %RAX.i2136, align 8
  %17395 = icmp ult i32 %17393, %17392
  %17396 = icmp ult i32 %17393, 1
  %17397 = or i1 %17395, %17396
  %17398 = zext i1 %17397 to i8
  %17399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17398, i8* %17399, align 1
  %17400 = and i32 %17393, 255
  %17401 = call i32 @llvm.ctpop.i32(i32 %17400)
  %17402 = trunc i32 %17401 to i8
  %17403 = and i8 %17402, 1
  %17404 = xor i8 %17403, 1
  %17405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17404, i8* %17405, align 1
  %17406 = xor i64 1, %17389
  %17407 = trunc i64 %17406 to i32
  %17408 = xor i32 %17407, %17393
  %17409 = lshr i32 %17408, 4
  %17410 = trunc i32 %17409 to i8
  %17411 = and i8 %17410, 1
  %17412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17411, i8* %17412, align 1
  %17413 = icmp eq i32 %17393, 0
  %17414 = zext i1 %17413 to i8
  %17415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17414, i8* %17415, align 1
  %17416 = lshr i32 %17393, 31
  %17417 = trunc i32 %17416 to i8
  %17418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17417, i8* %17418, align 1
  %17419 = lshr i32 %17392, 31
  %17420 = xor i32 %17416, %17419
  %17421 = add i32 %17420, %17416
  %17422 = icmp eq i32 %17421, 2
  %17423 = zext i1 %17422 to i8
  %17424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17423, i8* %17424, align 1
  store %struct.Memory* %loadMem_4ab506, %struct.Memory** %MEMORY
  %loadMem_4ab509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17426 = getelementptr inbounds %struct.GPR, %struct.GPR* %17425, i32 0, i32 33
  %17427 = getelementptr inbounds %struct.Reg, %struct.Reg* %17426, i32 0, i32 0
  %PC.i2132 = bitcast %union.anon* %17427 to i64*
  %17428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17429 = getelementptr inbounds %struct.GPR, %struct.GPR* %17428, i32 0, i32 1
  %17430 = getelementptr inbounds %struct.Reg, %struct.Reg* %17429, i32 0, i32 0
  %EAX.i2133 = bitcast %union.anon* %17430 to i32*
  %17431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17432 = getelementptr inbounds %struct.GPR, %struct.GPR* %17431, i32 0, i32 15
  %17433 = getelementptr inbounds %struct.Reg, %struct.Reg* %17432, i32 0, i32 0
  %RBP.i2134 = bitcast %union.anon* %17433 to i64*
  %17434 = load i64, i64* %RBP.i2134
  %17435 = sub i64 %17434, 48
  %17436 = load i32, i32* %EAX.i2133
  %17437 = zext i32 %17436 to i64
  %17438 = load i64, i64* %PC.i2132
  %17439 = add i64 %17438, 3
  store i64 %17439, i64* %PC.i2132
  %17440 = inttoptr i64 %17435 to i32*
  store i32 %17436, i32* %17440
  store %struct.Memory* %loadMem_4ab509, %struct.Memory** %MEMORY
  %loadMem_4ab50c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17442 = getelementptr inbounds %struct.GPR, %struct.GPR* %17441, i32 0, i32 33
  %17443 = getelementptr inbounds %struct.Reg, %struct.Reg* %17442, i32 0, i32 0
  %PC.i2130 = bitcast %union.anon* %17443 to i64*
  %17444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17445 = getelementptr inbounds %struct.GPR, %struct.GPR* %17444, i32 0, i32 15
  %17446 = getelementptr inbounds %struct.Reg, %struct.Reg* %17445, i32 0, i32 0
  %RBP.i2131 = bitcast %union.anon* %17446 to i64*
  %17447 = load i64, i64* %RBP.i2131
  %17448 = sub i64 %17447, 52
  %17449 = load i64, i64* %PC.i2130
  %17450 = add i64 %17449, 7
  store i64 %17450, i64* %PC.i2130
  %17451 = inttoptr i64 %17448 to i32*
  store i32 -1, i32* %17451
  store %struct.Memory* %loadMem_4ab50c, %struct.Memory** %MEMORY
  br label %block_.L_4ab513

block_.L_4ab513:                                  ; preds = %block_.L_4ab4c2, %block_.L_4ab393
  %loadMem_4ab513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17453 = getelementptr inbounds %struct.GPR, %struct.GPR* %17452, i32 0, i32 33
  %17454 = getelementptr inbounds %struct.Reg, %struct.Reg* %17453, i32 0, i32 0
  %PC.i2127 = bitcast %union.anon* %17454 to i64*
  %17455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17456 = getelementptr inbounds %struct.GPR, %struct.GPR* %17455, i32 0, i32 11
  %17457 = getelementptr inbounds %struct.Reg, %struct.Reg* %17456, i32 0, i32 0
  %RDI.i2128 = bitcast %union.anon* %17457 to i64*
  %17458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17459 = getelementptr inbounds %struct.GPR, %struct.GPR* %17458, i32 0, i32 15
  %17460 = getelementptr inbounds %struct.Reg, %struct.Reg* %17459, i32 0, i32 0
  %RBP.i2129 = bitcast %union.anon* %17460 to i64*
  %17461 = load i64, i64* %RBP.i2129
  %17462 = sub i64 %17461, 44
  %17463 = load i64, i64* %PC.i2127
  %17464 = add i64 %17463, 3
  store i64 %17464, i64* %PC.i2127
  %17465 = inttoptr i64 %17462 to i32*
  %17466 = load i32, i32* %17465
  %17467 = zext i32 %17466 to i64
  store i64 %17467, i64* %RDI.i2128, align 8
  store %struct.Memory* %loadMem_4ab513, %struct.Memory** %MEMORY
  %loadMem_4ab516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17469 = getelementptr inbounds %struct.GPR, %struct.GPR* %17468, i32 0, i32 33
  %17470 = getelementptr inbounds %struct.Reg, %struct.Reg* %17469, i32 0, i32 0
  %PC.i2125 = bitcast %union.anon* %17470 to i64*
  %17471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17472 = getelementptr inbounds %struct.GPR, %struct.GPR* %17471, i32 0, i32 1
  %17473 = getelementptr inbounds %struct.Reg, %struct.Reg* %17472, i32 0, i32 0
  %RAX.i2126 = bitcast %union.anon* %17473 to i64*
  %17474 = load i64, i64* %PC.i2125
  %17475 = add i64 %17474, 8
  store i64 %17475, i64* %PC.i2125
  %17476 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17476, i64* %RAX.i2126, align 8
  store %struct.Memory* %loadMem_4ab516, %struct.Memory** %MEMORY
  %loadMem_4ab51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17478 = getelementptr inbounds %struct.GPR, %struct.GPR* %17477, i32 0, i32 33
  %17479 = getelementptr inbounds %struct.Reg, %struct.Reg* %17478, i32 0, i32 0
  %PC.i2123 = bitcast %union.anon* %17479 to i64*
  %17480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17481 = getelementptr inbounds %struct.GPR, %struct.GPR* %17480, i32 0, i32 1
  %17482 = getelementptr inbounds %struct.Reg, %struct.Reg* %17481, i32 0, i32 0
  %RAX.i2124 = bitcast %union.anon* %17482 to i64*
  %17483 = load i64, i64* %RAX.i2124
  %17484 = load i64, i64* %PC.i2123
  %17485 = add i64 %17484, 6
  store i64 %17485, i64* %PC.i2123
  %17486 = add i64 13112, %17483
  store i64 %17486, i64* %RAX.i2124, align 8
  %17487 = icmp ult i64 %17486, %17483
  %17488 = icmp ult i64 %17486, 13112
  %17489 = or i1 %17487, %17488
  %17490 = zext i1 %17489 to i8
  %17491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17490, i8* %17491, align 1
  %17492 = trunc i64 %17486 to i32
  %17493 = and i32 %17492, 255
  %17494 = call i32 @llvm.ctpop.i32(i32 %17493)
  %17495 = trunc i32 %17494 to i8
  %17496 = and i8 %17495, 1
  %17497 = xor i8 %17496, 1
  %17498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17497, i8* %17498, align 1
  %17499 = xor i64 13112, %17483
  %17500 = xor i64 %17499, %17486
  %17501 = lshr i64 %17500, 4
  %17502 = trunc i64 %17501 to i8
  %17503 = and i8 %17502, 1
  %17504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17503, i8* %17504, align 1
  %17505 = icmp eq i64 %17486, 0
  %17506 = zext i1 %17505 to i8
  %17507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17506, i8* %17507, align 1
  %17508 = lshr i64 %17486, 63
  %17509 = trunc i64 %17508 to i8
  %17510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17509, i8* %17510, align 1
  %17511 = lshr i64 %17483, 63
  %17512 = xor i64 %17508, %17511
  %17513 = add i64 %17512, %17508
  %17514 = icmp eq i64 %17513, 2
  %17515 = zext i1 %17514 to i8
  %17516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17515, i8* %17516, align 1
  store %struct.Memory* %loadMem_4ab51e, %struct.Memory** %MEMORY
  %loadMem_4ab524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17518 = getelementptr inbounds %struct.GPR, %struct.GPR* %17517, i32 0, i32 33
  %17519 = getelementptr inbounds %struct.Reg, %struct.Reg* %17518, i32 0, i32 0
  %PC.i2120 = bitcast %union.anon* %17519 to i64*
  %17520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17521 = getelementptr inbounds %struct.GPR, %struct.GPR* %17520, i32 0, i32 5
  %17522 = getelementptr inbounds %struct.Reg, %struct.Reg* %17521, i32 0, i32 0
  %RCX.i2121 = bitcast %union.anon* %17522 to i64*
  %17523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17524 = getelementptr inbounds %struct.GPR, %struct.GPR* %17523, i32 0, i32 15
  %17525 = getelementptr inbounds %struct.Reg, %struct.Reg* %17524, i32 0, i32 0
  %RBP.i2122 = bitcast %union.anon* %17525 to i64*
  %17526 = load i64, i64* %RBP.i2122
  %17527 = sub i64 %17526, 24
  %17528 = load i64, i64* %PC.i2120
  %17529 = add i64 %17528, 4
  store i64 %17529, i64* %PC.i2120
  %17530 = inttoptr i64 %17527 to i32*
  %17531 = load i32, i32* %17530
  %17532 = sext i32 %17531 to i64
  store i64 %17532, i64* %RCX.i2121, align 8
  store %struct.Memory* %loadMem_4ab524, %struct.Memory** %MEMORY
  %loadMem_4ab528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17534 = getelementptr inbounds %struct.GPR, %struct.GPR* %17533, i32 0, i32 33
  %17535 = getelementptr inbounds %struct.Reg, %struct.Reg* %17534, i32 0, i32 0
  %PC.i2118 = bitcast %union.anon* %17535 to i64*
  %17536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17537 = getelementptr inbounds %struct.GPR, %struct.GPR* %17536, i32 0, i32 5
  %17538 = getelementptr inbounds %struct.Reg, %struct.Reg* %17537, i32 0, i32 0
  %RCX.i2119 = bitcast %union.anon* %17538 to i64*
  %17539 = load i64, i64* %RCX.i2119
  %17540 = load i64, i64* %PC.i2118
  %17541 = add i64 %17540, 4
  store i64 %17541, i64* %PC.i2118
  %17542 = shl i64 %17539, 5
  %17543 = icmp slt i64 %17542, 0
  %17544 = shl i64 %17542, 1
  store i64 %17544, i64* %RCX.i2119, align 8
  %17545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17546 = zext i1 %17543 to i8
  store i8 %17546, i8* %17545, align 1
  %17547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17548 = trunc i64 %17544 to i32
  %17549 = and i32 %17548, 254
  %17550 = call i32 @llvm.ctpop.i32(i32 %17549)
  %17551 = trunc i32 %17550 to i8
  %17552 = and i8 %17551, 1
  %17553 = xor i8 %17552, 1
  store i8 %17553, i8* %17547, align 1
  %17554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17554, align 1
  %17555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17556 = icmp eq i64 %17544, 0
  %17557 = zext i1 %17556 to i8
  store i8 %17557, i8* %17555, align 1
  %17558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17559 = lshr i64 %17544, 63
  %17560 = trunc i64 %17559 to i8
  store i8 %17560, i8* %17558, align 1
  %17561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17561, align 1
  store %struct.Memory* %loadMem_4ab528, %struct.Memory** %MEMORY
  %loadMem_4ab52c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17563 = getelementptr inbounds %struct.GPR, %struct.GPR* %17562, i32 0, i32 33
  %17564 = getelementptr inbounds %struct.Reg, %struct.Reg* %17563, i32 0, i32 0
  %PC.i2115 = bitcast %union.anon* %17564 to i64*
  %17565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17566 = getelementptr inbounds %struct.GPR, %struct.GPR* %17565, i32 0, i32 1
  %17567 = getelementptr inbounds %struct.Reg, %struct.Reg* %17566, i32 0, i32 0
  %RAX.i2116 = bitcast %union.anon* %17567 to i64*
  %17568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17569 = getelementptr inbounds %struct.GPR, %struct.GPR* %17568, i32 0, i32 5
  %17570 = getelementptr inbounds %struct.Reg, %struct.Reg* %17569, i32 0, i32 0
  %RCX.i2117 = bitcast %union.anon* %17570 to i64*
  %17571 = load i64, i64* %RAX.i2116
  %17572 = load i64, i64* %RCX.i2117
  %17573 = load i64, i64* %PC.i2115
  %17574 = add i64 %17573, 3
  store i64 %17574, i64* %PC.i2115
  %17575 = add i64 %17572, %17571
  store i64 %17575, i64* %RAX.i2116, align 8
  %17576 = icmp ult i64 %17575, %17571
  %17577 = icmp ult i64 %17575, %17572
  %17578 = or i1 %17576, %17577
  %17579 = zext i1 %17578 to i8
  %17580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17579, i8* %17580, align 1
  %17581 = trunc i64 %17575 to i32
  %17582 = and i32 %17581, 255
  %17583 = call i32 @llvm.ctpop.i32(i32 %17582)
  %17584 = trunc i32 %17583 to i8
  %17585 = and i8 %17584, 1
  %17586 = xor i8 %17585, 1
  %17587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17586, i8* %17587, align 1
  %17588 = xor i64 %17572, %17571
  %17589 = xor i64 %17588, %17575
  %17590 = lshr i64 %17589, 4
  %17591 = trunc i64 %17590 to i8
  %17592 = and i8 %17591, 1
  %17593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17592, i8* %17593, align 1
  %17594 = icmp eq i64 %17575, 0
  %17595 = zext i1 %17594 to i8
  %17596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17595, i8* %17596, align 1
  %17597 = lshr i64 %17575, 63
  %17598 = trunc i64 %17597 to i8
  %17599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17598, i8* %17599, align 1
  %17600 = lshr i64 %17571, 63
  %17601 = lshr i64 %17572, 63
  %17602 = xor i64 %17597, %17600
  %17603 = xor i64 %17597, %17601
  %17604 = add i64 %17602, %17603
  %17605 = icmp eq i64 %17604, 2
  %17606 = zext i1 %17605 to i8
  %17607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17606, i8* %17607, align 1
  store %struct.Memory* %loadMem_4ab52c, %struct.Memory** %MEMORY
  %loadMem_4ab52f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17609 = getelementptr inbounds %struct.GPR, %struct.GPR* %17608, i32 0, i32 33
  %17610 = getelementptr inbounds %struct.Reg, %struct.Reg* %17609, i32 0, i32 0
  %PC.i2112 = bitcast %union.anon* %17610 to i64*
  %17611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17612 = getelementptr inbounds %struct.GPR, %struct.GPR* %17611, i32 0, i32 5
  %17613 = getelementptr inbounds %struct.Reg, %struct.Reg* %17612, i32 0, i32 0
  %RCX.i2113 = bitcast %union.anon* %17613 to i64*
  %17614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17615 = getelementptr inbounds %struct.GPR, %struct.GPR* %17614, i32 0, i32 15
  %17616 = getelementptr inbounds %struct.Reg, %struct.Reg* %17615, i32 0, i32 0
  %RBP.i2114 = bitcast %union.anon* %17616 to i64*
  %17617 = load i64, i64* %RBP.i2114
  %17618 = sub i64 %17617, 28
  %17619 = load i64, i64* %PC.i2112
  %17620 = add i64 %17619, 4
  store i64 %17620, i64* %PC.i2112
  %17621 = inttoptr i64 %17618 to i32*
  %17622 = load i32, i32* %17621
  %17623 = sext i32 %17622 to i64
  store i64 %17623, i64* %RCX.i2113, align 8
  store %struct.Memory* %loadMem_4ab52f, %struct.Memory** %MEMORY
  %loadMem_4ab533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17625 = getelementptr inbounds %struct.GPR, %struct.GPR* %17624, i32 0, i32 33
  %17626 = getelementptr inbounds %struct.Reg, %struct.Reg* %17625, i32 0, i32 0
  %PC.i2108 = bitcast %union.anon* %17626 to i64*
  %17627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17628 = getelementptr inbounds %struct.GPR, %struct.GPR* %17627, i32 0, i32 1
  %17629 = getelementptr inbounds %struct.Reg, %struct.Reg* %17628, i32 0, i32 0
  %RAX.i2109 = bitcast %union.anon* %17629 to i64*
  %17630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17631 = getelementptr inbounds %struct.GPR, %struct.GPR* %17630, i32 0, i32 5
  %17632 = getelementptr inbounds %struct.Reg, %struct.Reg* %17631, i32 0, i32 0
  %RCX.i2110 = bitcast %union.anon* %17632 to i64*
  %17633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17634 = getelementptr inbounds %struct.GPR, %struct.GPR* %17633, i32 0, i32 9
  %17635 = getelementptr inbounds %struct.Reg, %struct.Reg* %17634, i32 0, i32 0
  %RSI.i2111 = bitcast %union.anon* %17635 to i64*
  %17636 = load i64, i64* %RAX.i2109
  %17637 = load i64, i64* %RCX.i2110
  %17638 = mul i64 %17637, 4
  %17639 = add i64 %17638, %17636
  %17640 = load i64, i64* %PC.i2108
  %17641 = add i64 %17640, 3
  store i64 %17641, i64* %PC.i2108
  %17642 = inttoptr i64 %17639 to i32*
  %17643 = load i32, i32* %17642
  %17644 = zext i32 %17643 to i64
  store i64 %17644, i64* %RSI.i2111, align 8
  store %struct.Memory* %loadMem_4ab533, %struct.Memory** %MEMORY
  %loadMem1_4ab536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17646 = getelementptr inbounds %struct.GPR, %struct.GPR* %17645, i32 0, i32 33
  %17647 = getelementptr inbounds %struct.Reg, %struct.Reg* %17646, i32 0, i32 0
  %PC.i2107 = bitcast %union.anon* %17647 to i64*
  %17648 = load i64, i64* %PC.i2107
  %17649 = add i64 %17648, -222182
  %17650 = load i64, i64* %PC.i2107
  %17651 = add i64 %17650, 5
  %17652 = load i64, i64* %PC.i2107
  %17653 = add i64 %17652, 5
  store i64 %17653, i64* %PC.i2107
  %17654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %17655 = load i64, i64* %17654, align 8
  %17656 = add i64 %17655, -8
  %17657 = inttoptr i64 %17656 to i64*
  store i64 %17651, i64* %17657
  store i64 %17656, i64* %17654, align 8
  %17658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17649, i64* %17658, align 8
  store %struct.Memory* %loadMem1_4ab536, %struct.Memory** %MEMORY
  %loadMem2_4ab536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4ab536 = load i64, i64* %3
  %call2_4ab536 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_4ab536, %struct.Memory* %loadMem2_4ab536)
  store %struct.Memory* %call2_4ab536, %struct.Memory** %MEMORY
  %loadMem_4ab53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17660 = getelementptr inbounds %struct.GPR, %struct.GPR* %17659, i32 0, i32 33
  %17661 = getelementptr inbounds %struct.Reg, %struct.Reg* %17660, i32 0, i32 0
  %PC.i2104 = bitcast %union.anon* %17661 to i64*
  %17662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17663 = getelementptr inbounds %struct.GPR, %struct.GPR* %17662, i32 0, i32 1
  %17664 = getelementptr inbounds %struct.Reg, %struct.Reg* %17663, i32 0, i32 0
  %EAX.i2105 = bitcast %union.anon* %17664 to i32*
  %17665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17666 = getelementptr inbounds %struct.GPR, %struct.GPR* %17665, i32 0, i32 15
  %17667 = getelementptr inbounds %struct.Reg, %struct.Reg* %17666, i32 0, i32 0
  %RBP.i2106 = bitcast %union.anon* %17667 to i64*
  %17668 = load i64, i64* %RBP.i2106
  %17669 = sub i64 %17668, 44
  %17670 = load i32, i32* %EAX.i2105
  %17671 = zext i32 %17670 to i64
  %17672 = load i64, i64* %PC.i2104
  %17673 = add i64 %17672, 3
  store i64 %17673, i64* %PC.i2104
  %17674 = inttoptr i64 %17669 to i32*
  store i32 %17670, i32* %17674
  store %struct.Memory* %loadMem_4ab53b, %struct.Memory** %MEMORY
  %loadMem_4ab53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17676 = getelementptr inbounds %struct.GPR, %struct.GPR* %17675, i32 0, i32 33
  %17677 = getelementptr inbounds %struct.Reg, %struct.Reg* %17676, i32 0, i32 0
  %PC.i2102 = bitcast %union.anon* %17677 to i64*
  %17678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17679 = getelementptr inbounds %struct.GPR, %struct.GPR* %17678, i32 0, i32 15
  %17680 = getelementptr inbounds %struct.Reg, %struct.Reg* %17679, i32 0, i32 0
  %RBP.i2103 = bitcast %union.anon* %17680 to i64*
  %17681 = load i64, i64* %RBP.i2103
  %17682 = sub i64 %17681, 412
  %17683 = load i64, i64* %PC.i2102
  %17684 = add i64 %17683, 7
  store i64 %17684, i64* %PC.i2102
  %17685 = inttoptr i64 %17682 to i32*
  %17686 = load i32, i32* %17685
  %17687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17687, align 1
  %17688 = and i32 %17686, 255
  %17689 = call i32 @llvm.ctpop.i32(i32 %17688)
  %17690 = trunc i32 %17689 to i8
  %17691 = and i8 %17690, 1
  %17692 = xor i8 %17691, 1
  %17693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17692, i8* %17693, align 1
  %17694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17694, align 1
  %17695 = icmp eq i32 %17686, 0
  %17696 = zext i1 %17695 to i8
  %17697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17696, i8* %17697, align 1
  %17698 = lshr i32 %17686, 31
  %17699 = trunc i32 %17698 to i8
  %17700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17699, i8* %17700, align 1
  %17701 = lshr i32 %17686, 31
  %17702 = xor i32 %17698, %17701
  %17703 = add i32 %17702, %17701
  %17704 = icmp eq i32 %17703, 2
  %17705 = zext i1 %17704 to i8
  %17706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17705, i8* %17706, align 1
  store %struct.Memory* %loadMem_4ab53e, %struct.Memory** %MEMORY
  %loadMem_4ab545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17708 = getelementptr inbounds %struct.GPR, %struct.GPR* %17707, i32 0, i32 33
  %17709 = getelementptr inbounds %struct.Reg, %struct.Reg* %17708, i32 0, i32 0
  %PC.i2101 = bitcast %union.anon* %17709 to i64*
  %17710 = load i64, i64* %PC.i2101
  %17711 = add i64 %17710, 17
  %17712 = load i64, i64* %PC.i2101
  %17713 = add i64 %17712, 6
  %17714 = load i64, i64* %PC.i2101
  %17715 = add i64 %17714, 6
  store i64 %17715, i64* %PC.i2101
  %17716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17717 = load i8, i8* %17716, align 1
  store i8 %17717, i8* %BRANCH_TAKEN, align 1
  %17718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17719 = icmp ne i8 %17717, 0
  %17720 = select i1 %17719, i64 %17711, i64 %17713
  store i64 %17720, i64* %17718, align 8
  store %struct.Memory* %loadMem_4ab545, %struct.Memory** %MEMORY
  %loadBr_4ab545 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab545 = icmp eq i8 %loadBr_4ab545, 1
  br i1 %cmpBr_4ab545, label %block_.L_4ab556, label %block_4ab54b

block_4ab54b:                                     ; preds = %block_.L_4ab513
  %loadMem_4ab54b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17722 = getelementptr inbounds %struct.GPR, %struct.GPR* %17721, i32 0, i32 33
  %17723 = getelementptr inbounds %struct.Reg, %struct.Reg* %17722, i32 0, i32 0
  %PC.i2098 = bitcast %union.anon* %17723 to i64*
  %17724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17725 = getelementptr inbounds %struct.GPR, %struct.GPR* %17724, i32 0, i32 1
  %17726 = getelementptr inbounds %struct.Reg, %struct.Reg* %17725, i32 0, i32 0
  %RAX.i2099 = bitcast %union.anon* %17726 to i64*
  %17727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17728 = getelementptr inbounds %struct.GPR, %struct.GPR* %17727, i32 0, i32 15
  %17729 = getelementptr inbounds %struct.Reg, %struct.Reg* %17728, i32 0, i32 0
  %RBP.i2100 = bitcast %union.anon* %17729 to i64*
  %17730 = load i64, i64* %RBP.i2100
  %17731 = sub i64 %17730, 44
  %17732 = load i64, i64* %PC.i2098
  %17733 = add i64 %17732, 3
  store i64 %17733, i64* %PC.i2098
  %17734 = inttoptr i64 %17731 to i32*
  %17735 = load i32, i32* %17734
  %17736 = zext i32 %17735 to i64
  store i64 %17736, i64* %RAX.i2099, align 8
  store %struct.Memory* %loadMem_4ab54b, %struct.Memory** %MEMORY
  %loadMem_4ab54e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17738 = getelementptr inbounds %struct.GPR, %struct.GPR* %17737, i32 0, i32 33
  %17739 = getelementptr inbounds %struct.Reg, %struct.Reg* %17738, i32 0, i32 0
  %PC.i2095 = bitcast %union.anon* %17739 to i64*
  %17740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17741 = getelementptr inbounds %struct.GPR, %struct.GPR* %17740, i32 0, i32 1
  %17742 = getelementptr inbounds %struct.Reg, %struct.Reg* %17741, i32 0, i32 0
  %EAX.i2096 = bitcast %union.anon* %17742 to i32*
  %17743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17744 = getelementptr inbounds %struct.GPR, %struct.GPR* %17743, i32 0, i32 15
  %17745 = getelementptr inbounds %struct.Reg, %struct.Reg* %17744, i32 0, i32 0
  %RBP.i2097 = bitcast %union.anon* %17745 to i64*
  %17746 = load i64, i64* %RBP.i2097
  %17747 = sub i64 %17746, 32
  %17748 = load i32, i32* %EAX.i2096
  %17749 = zext i32 %17748 to i64
  %17750 = load i64, i64* %PC.i2095
  %17751 = add i64 %17750, 3
  store i64 %17751, i64* %PC.i2095
  %17752 = inttoptr i64 %17747 to i32*
  store i32 %17748, i32* %17752
  store %struct.Memory* %loadMem_4ab54e, %struct.Memory** %MEMORY
  %loadMem_4ab551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17754 = getelementptr inbounds %struct.GPR, %struct.GPR* %17753, i32 0, i32 33
  %17755 = getelementptr inbounds %struct.Reg, %struct.Reg* %17754, i32 0, i32 0
  %PC.i2094 = bitcast %union.anon* %17755 to i64*
  %17756 = load i64, i64* %PC.i2094
  %17757 = add i64 %17756, 326
  %17758 = load i64, i64* %PC.i2094
  %17759 = add i64 %17758, 5
  store i64 %17759, i64* %PC.i2094
  %17760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17757, i64* %17760, align 8
  store %struct.Memory* %loadMem_4ab551, %struct.Memory** %MEMORY
  br label %block_.L_4ab697

block_.L_4ab556:                                  ; preds = %block_.L_4ab513
  %loadMem_4ab556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17762 = getelementptr inbounds %struct.GPR, %struct.GPR* %17761, i32 0, i32 33
  %17763 = getelementptr inbounds %struct.Reg, %struct.Reg* %17762, i32 0, i32 0
  %PC.i2092 = bitcast %union.anon* %17763 to i64*
  %17764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17765 = getelementptr inbounds %struct.GPR, %struct.GPR* %17764, i32 0, i32 15
  %17766 = getelementptr inbounds %struct.Reg, %struct.Reg* %17765, i32 0, i32 0
  %RBP.i2093 = bitcast %union.anon* %17766 to i64*
  %17767 = load i64, i64* %RBP.i2093
  %17768 = sub i64 %17767, 20
  %17769 = load i64, i64* %PC.i2092
  %17770 = add i64 %17769, 4
  store i64 %17770, i64* %PC.i2092
  %17771 = inttoptr i64 %17768 to i32*
  %17772 = load i32, i32* %17771
  %17773 = sub i32 %17772, 1
  %17774 = icmp ult i32 %17772, 1
  %17775 = zext i1 %17774 to i8
  %17776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17775, i8* %17776, align 1
  %17777 = and i32 %17773, 255
  %17778 = call i32 @llvm.ctpop.i32(i32 %17777)
  %17779 = trunc i32 %17778 to i8
  %17780 = and i8 %17779, 1
  %17781 = xor i8 %17780, 1
  %17782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17781, i8* %17782, align 1
  %17783 = xor i32 %17772, 1
  %17784 = xor i32 %17783, %17773
  %17785 = lshr i32 %17784, 4
  %17786 = trunc i32 %17785 to i8
  %17787 = and i8 %17786, 1
  %17788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17787, i8* %17788, align 1
  %17789 = icmp eq i32 %17773, 0
  %17790 = zext i1 %17789 to i8
  %17791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17790, i8* %17791, align 1
  %17792 = lshr i32 %17773, 31
  %17793 = trunc i32 %17792 to i8
  %17794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17793, i8* %17794, align 1
  %17795 = lshr i32 %17772, 31
  %17796 = xor i32 %17792, %17795
  %17797 = add i32 %17796, %17795
  %17798 = icmp eq i32 %17797, 2
  %17799 = zext i1 %17798 to i8
  %17800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17799, i8* %17800, align 1
  store %struct.Memory* %loadMem_4ab556, %struct.Memory** %MEMORY
  %loadMem_4ab55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17802 = getelementptr inbounds %struct.GPR, %struct.GPR* %17801, i32 0, i32 33
  %17803 = getelementptr inbounds %struct.Reg, %struct.Reg* %17802, i32 0, i32 0
  %PC.i2091 = bitcast %union.anon* %17803 to i64*
  %17804 = load i64, i64* %PC.i2091
  %17805 = add i64 %17804, 159
  %17806 = load i64, i64* %PC.i2091
  %17807 = add i64 %17806, 6
  %17808 = load i64, i64* %PC.i2091
  %17809 = add i64 %17808, 6
  store i64 %17809, i64* %PC.i2091
  %17810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17811 = load i8, i8* %17810, align 1
  %17812 = icmp eq i8 %17811, 0
  %17813 = zext i1 %17812 to i8
  store i8 %17813, i8* %BRANCH_TAKEN, align 1
  %17814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17815 = select i1 %17812, i64 %17805, i64 %17807
  store i64 %17815, i64* %17814, align 8
  store %struct.Memory* %loadMem_4ab55a, %struct.Memory** %MEMORY
  %loadBr_4ab55a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab55a = icmp eq i8 %loadBr_4ab55a, 1
  br i1 %cmpBr_4ab55a, label %block_.L_4ab5f9, label %block_4ab560

block_4ab560:                                     ; preds = %block_.L_4ab556
  %loadMem_4ab560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17817 = getelementptr inbounds %struct.GPR, %struct.GPR* %17816, i32 0, i32 33
  %17818 = getelementptr inbounds %struct.Reg, %struct.Reg* %17817, i32 0, i32 0
  %PC.i2089 = bitcast %union.anon* %17818 to i64*
  %17819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17820 = getelementptr inbounds %struct.GPR, %struct.GPR* %17819, i32 0, i32 15
  %17821 = getelementptr inbounds %struct.Reg, %struct.Reg* %17820, i32 0, i32 0
  %RBP.i2090 = bitcast %union.anon* %17821 to i64*
  %17822 = load i64, i64* %RBP.i2090
  %17823 = sub i64 %17822, 60
  %17824 = load i64, i64* %PC.i2089
  %17825 = add i64 %17824, 4
  store i64 %17825, i64* %PC.i2089
  %17826 = inttoptr i64 %17823 to i32*
  %17827 = load i32, i32* %17826
  %17828 = sub i32 %17827, 6
  %17829 = icmp ult i32 %17827, 6
  %17830 = zext i1 %17829 to i8
  %17831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17830, i8* %17831, align 1
  %17832 = and i32 %17828, 255
  %17833 = call i32 @llvm.ctpop.i32(i32 %17832)
  %17834 = trunc i32 %17833 to i8
  %17835 = and i8 %17834, 1
  %17836 = xor i8 %17835, 1
  %17837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17836, i8* %17837, align 1
  %17838 = xor i32 %17827, 6
  %17839 = xor i32 %17838, %17828
  %17840 = lshr i32 %17839, 4
  %17841 = trunc i32 %17840 to i8
  %17842 = and i8 %17841, 1
  %17843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17842, i8* %17843, align 1
  %17844 = icmp eq i32 %17828, 0
  %17845 = zext i1 %17844 to i8
  %17846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17845, i8* %17846, align 1
  %17847 = lshr i32 %17828, 31
  %17848 = trunc i32 %17847 to i8
  %17849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17848, i8* %17849, align 1
  %17850 = lshr i32 %17827, 31
  %17851 = xor i32 %17847, %17850
  %17852 = add i32 %17851, %17850
  %17853 = icmp eq i32 %17852, 2
  %17854 = zext i1 %17853 to i8
  %17855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17854, i8* %17855, align 1
  store %struct.Memory* %loadMem_4ab560, %struct.Memory** %MEMORY
  %loadMem_4ab564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17857 = getelementptr inbounds %struct.GPR, %struct.GPR* %17856, i32 0, i32 33
  %17858 = getelementptr inbounds %struct.Reg, %struct.Reg* %17857, i32 0, i32 0
  %PC.i2088 = bitcast %union.anon* %17858 to i64*
  %17859 = load i64, i64* %PC.i2088
  %17860 = add i64 %17859, 76
  %17861 = load i64, i64* %PC.i2088
  %17862 = add i64 %17861, 6
  %17863 = load i64, i64* %PC.i2088
  %17864 = add i64 %17863, 6
  store i64 %17864, i64* %PC.i2088
  %17865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17866 = load i8, i8* %17865, align 1
  %17867 = icmp ne i8 %17866, 0
  %17868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17869 = load i8, i8* %17868, align 1
  %17870 = icmp ne i8 %17869, 0
  %17871 = xor i1 %17867, %17870
  %17872 = zext i1 %17871 to i8
  store i8 %17872, i8* %BRANCH_TAKEN, align 1
  %17873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17874 = select i1 %17871, i64 %17860, i64 %17862
  store i64 %17874, i64* %17873, align 8
  store %struct.Memory* %loadMem_4ab564, %struct.Memory** %MEMORY
  %loadBr_4ab564 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab564 = icmp eq i8 %loadBr_4ab564, 1
  br i1 %cmpBr_4ab564, label %block_.L_4ab5b0, label %block_4ab56a

block_4ab56a:                                     ; preds = %block_4ab560
  %loadMem_4ab56a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17876 = getelementptr inbounds %struct.GPR, %struct.GPR* %17875, i32 0, i32 33
  %17877 = getelementptr inbounds %struct.Reg, %struct.Reg* %17876, i32 0, i32 0
  %PC.i2086 = bitcast %union.anon* %17877 to i64*
  %17878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17879 = getelementptr inbounds %struct.GPR, %struct.GPR* %17878, i32 0, i32 1
  %17880 = getelementptr inbounds %struct.Reg, %struct.Reg* %17879, i32 0, i32 0
  %RAX.i2087 = bitcast %union.anon* %17880 to i64*
  %17881 = load i64, i64* %PC.i2086
  %17882 = add i64 %17881, 10
  store i64 %17882, i64* %PC.i2086
  store i64 ptrtoint (%G__0x6cfc70_type* @G__0x6cfc70 to i64), i64* %RAX.i2087, align 8
  store %struct.Memory* %loadMem_4ab56a, %struct.Memory** %MEMORY
  %loadMem_4ab574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17884 = getelementptr inbounds %struct.GPR, %struct.GPR* %17883, i32 0, i32 33
  %17885 = getelementptr inbounds %struct.Reg, %struct.Reg* %17884, i32 0, i32 0
  %PC.i2083 = bitcast %union.anon* %17885 to i64*
  %17886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17887 = getelementptr inbounds %struct.GPR, %struct.GPR* %17886, i32 0, i32 5
  %17888 = getelementptr inbounds %struct.Reg, %struct.Reg* %17887, i32 0, i32 0
  %RCX.i2084 = bitcast %union.anon* %17888 to i64*
  %17889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17890 = getelementptr inbounds %struct.GPR, %struct.GPR* %17889, i32 0, i32 15
  %17891 = getelementptr inbounds %struct.Reg, %struct.Reg* %17890, i32 0, i32 0
  %RBP.i2085 = bitcast %union.anon* %17891 to i64*
  %17892 = load i64, i64* %RBP.i2085
  %17893 = sub i64 %17892, 44
  %17894 = load i64, i64* %PC.i2083
  %17895 = add i64 %17894, 3
  store i64 %17895, i64* %PC.i2083
  %17896 = inttoptr i64 %17893 to i32*
  %17897 = load i32, i32* %17896
  %17898 = zext i32 %17897 to i64
  store i64 %17898, i64* %RCX.i2084, align 8
  store %struct.Memory* %loadMem_4ab574, %struct.Memory** %MEMORY
  %loadMem_4ab577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17900 = getelementptr inbounds %struct.GPR, %struct.GPR* %17899, i32 0, i32 33
  %17901 = getelementptr inbounds %struct.Reg, %struct.Reg* %17900, i32 0, i32 0
  %PC.i2080 = bitcast %union.anon* %17901 to i64*
  %17902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17903 = getelementptr inbounds %struct.GPR, %struct.GPR* %17902, i32 0, i32 7
  %17904 = getelementptr inbounds %struct.Reg, %struct.Reg* %17903, i32 0, i32 0
  %RDX.i2081 = bitcast %union.anon* %17904 to i64*
  %17905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17906 = getelementptr inbounds %struct.GPR, %struct.GPR* %17905, i32 0, i32 15
  %17907 = getelementptr inbounds %struct.Reg, %struct.Reg* %17906, i32 0, i32 0
  %RBP.i2082 = bitcast %union.anon* %17907 to i64*
  %17908 = load i64, i64* %RBP.i2082
  %17909 = sub i64 %17908, 64
  %17910 = load i64, i64* %PC.i2080
  %17911 = add i64 %17910, 4
  store i64 %17911, i64* %PC.i2080
  %17912 = inttoptr i64 %17909 to i32*
  %17913 = load i32, i32* %17912
  %17914 = sext i32 %17913 to i64
  store i64 %17914, i64* %RDX.i2081, align 8
  store %struct.Memory* %loadMem_4ab577, %struct.Memory** %MEMORY
  %loadMem_4ab57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17916 = getelementptr inbounds %struct.GPR, %struct.GPR* %17915, i32 0, i32 33
  %17917 = getelementptr inbounds %struct.Reg, %struct.Reg* %17916, i32 0, i32 0
  %PC.i2078 = bitcast %union.anon* %17917 to i64*
  %17918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17919 = getelementptr inbounds %struct.GPR, %struct.GPR* %17918, i32 0, i32 7
  %17920 = getelementptr inbounds %struct.Reg, %struct.Reg* %17919, i32 0, i32 0
  %RDX.i2079 = bitcast %union.anon* %17920 to i64*
  %17921 = load i64, i64* %RDX.i2079
  %17922 = load i64, i64* %PC.i2078
  %17923 = add i64 %17922, 4
  store i64 %17923, i64* %PC.i2078
  %17924 = shl i64 %17921, 7
  %17925 = icmp slt i64 %17924, 0
  %17926 = shl i64 %17924, 1
  store i64 %17926, i64* %RDX.i2079, align 8
  %17927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17928 = zext i1 %17925 to i8
  store i8 %17928, i8* %17927, align 1
  %17929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17930 = trunc i64 %17926 to i32
  store i8 1, i8* %17929, align 1
  %17931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17931, align 1
  %17932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17933 = icmp eq i64 %17926, 0
  %17934 = zext i1 %17933 to i8
  store i8 %17934, i8* %17932, align 1
  %17935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17936 = lshr i64 %17926, 63
  %17937 = trunc i64 %17936 to i8
  store i8 %17937, i8* %17935, align 1
  %17938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17938, align 1
  store %struct.Memory* %loadMem_4ab57b, %struct.Memory** %MEMORY
  %loadMem_4ab57f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17940 = getelementptr inbounds %struct.GPR, %struct.GPR* %17939, i32 0, i32 33
  %17941 = getelementptr inbounds %struct.Reg, %struct.Reg* %17940, i32 0, i32 0
  %PC.i2075 = bitcast %union.anon* %17941 to i64*
  %17942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17943 = getelementptr inbounds %struct.GPR, %struct.GPR* %17942, i32 0, i32 1
  %17944 = getelementptr inbounds %struct.Reg, %struct.Reg* %17943, i32 0, i32 0
  %RAX.i2076 = bitcast %union.anon* %17944 to i64*
  %17945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17946 = getelementptr inbounds %struct.GPR, %struct.GPR* %17945, i32 0, i32 7
  %17947 = getelementptr inbounds %struct.Reg, %struct.Reg* %17946, i32 0, i32 0
  %RDX.i2077 = bitcast %union.anon* %17947 to i64*
  %17948 = load i64, i64* %RAX.i2076
  %17949 = load i64, i64* %RDX.i2077
  %17950 = load i64, i64* %PC.i2075
  %17951 = add i64 %17950, 3
  store i64 %17951, i64* %PC.i2075
  %17952 = add i64 %17949, %17948
  store i64 %17952, i64* %RAX.i2076, align 8
  %17953 = icmp ult i64 %17952, %17948
  %17954 = icmp ult i64 %17952, %17949
  %17955 = or i1 %17953, %17954
  %17956 = zext i1 %17955 to i8
  %17957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17956, i8* %17957, align 1
  %17958 = trunc i64 %17952 to i32
  %17959 = and i32 %17958, 255
  %17960 = call i32 @llvm.ctpop.i32(i32 %17959)
  %17961 = trunc i32 %17960 to i8
  %17962 = and i8 %17961, 1
  %17963 = xor i8 %17962, 1
  %17964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17963, i8* %17964, align 1
  %17965 = xor i64 %17949, %17948
  %17966 = xor i64 %17965, %17952
  %17967 = lshr i64 %17966, 4
  %17968 = trunc i64 %17967 to i8
  %17969 = and i8 %17968, 1
  %17970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17969, i8* %17970, align 1
  %17971 = icmp eq i64 %17952, 0
  %17972 = zext i1 %17971 to i8
  %17973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17972, i8* %17973, align 1
  %17974 = lshr i64 %17952, 63
  %17975 = trunc i64 %17974 to i8
  %17976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17975, i8* %17976, align 1
  %17977 = lshr i64 %17948, 63
  %17978 = lshr i64 %17949, 63
  %17979 = xor i64 %17974, %17977
  %17980 = xor i64 %17974, %17978
  %17981 = add i64 %17979, %17980
  %17982 = icmp eq i64 %17981, 2
  %17983 = zext i1 %17982 to i8
  %17984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17983, i8* %17984, align 1
  store %struct.Memory* %loadMem_4ab57f, %struct.Memory** %MEMORY
  %loadMem_4ab582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17986 = getelementptr inbounds %struct.GPR, %struct.GPR* %17985, i32 0, i32 33
  %17987 = getelementptr inbounds %struct.Reg, %struct.Reg* %17986, i32 0, i32 0
  %PC.i2072 = bitcast %union.anon* %17987 to i64*
  %17988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17989 = getelementptr inbounds %struct.GPR, %struct.GPR* %17988, i32 0, i32 7
  %17990 = getelementptr inbounds %struct.Reg, %struct.Reg* %17989, i32 0, i32 0
  %RDX.i2073 = bitcast %union.anon* %17990 to i64*
  %17991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17992 = getelementptr inbounds %struct.GPR, %struct.GPR* %17991, i32 0, i32 15
  %17993 = getelementptr inbounds %struct.Reg, %struct.Reg* %17992, i32 0, i32 0
  %RBP.i2074 = bitcast %union.anon* %17993 to i64*
  %17994 = load i64, i64* %RBP.i2074
  %17995 = sub i64 %17994, 24
  %17996 = load i64, i64* %PC.i2072
  %17997 = add i64 %17996, 4
  store i64 %17997, i64* %PC.i2072
  %17998 = inttoptr i64 %17995 to i32*
  %17999 = load i32, i32* %17998
  %18000 = sext i32 %17999 to i64
  store i64 %18000, i64* %RDX.i2073, align 8
  store %struct.Memory* %loadMem_4ab582, %struct.Memory** %MEMORY
  %loadMem_4ab586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18002 = getelementptr inbounds %struct.GPR, %struct.GPR* %18001, i32 0, i32 33
  %18003 = getelementptr inbounds %struct.Reg, %struct.Reg* %18002, i32 0, i32 0
  %PC.i2070 = bitcast %union.anon* %18003 to i64*
  %18004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18005 = getelementptr inbounds %struct.GPR, %struct.GPR* %18004, i32 0, i32 7
  %18006 = getelementptr inbounds %struct.Reg, %struct.Reg* %18005, i32 0, i32 0
  %RDX.i2071 = bitcast %union.anon* %18006 to i64*
  %18007 = load i64, i64* %RDX.i2071
  %18008 = load i64, i64* %PC.i2070
  %18009 = add i64 %18008, 4
  store i64 %18009, i64* %PC.i2070
  %18010 = shl i64 %18007, 4
  %18011 = icmp slt i64 %18010, 0
  %18012 = shl i64 %18010, 1
  store i64 %18012, i64* %RDX.i2071, align 8
  %18013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18014 = zext i1 %18011 to i8
  store i8 %18014, i8* %18013, align 1
  %18015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18016 = trunc i64 %18012 to i32
  %18017 = and i32 %18016, 254
  %18018 = call i32 @llvm.ctpop.i32(i32 %18017)
  %18019 = trunc i32 %18018 to i8
  %18020 = and i8 %18019, 1
  %18021 = xor i8 %18020, 1
  store i8 %18021, i8* %18015, align 1
  %18022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18022, align 1
  %18023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18024 = icmp eq i64 %18012, 0
  %18025 = zext i1 %18024 to i8
  store i8 %18025, i8* %18023, align 1
  %18026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18027 = lshr i64 %18012, 63
  %18028 = trunc i64 %18027 to i8
  store i8 %18028, i8* %18026, align 1
  %18029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18029, align 1
  store %struct.Memory* %loadMem_4ab586, %struct.Memory** %MEMORY
  %loadMem_4ab58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18031 = getelementptr inbounds %struct.GPR, %struct.GPR* %18030, i32 0, i32 33
  %18032 = getelementptr inbounds %struct.Reg, %struct.Reg* %18031, i32 0, i32 0
  %PC.i2067 = bitcast %union.anon* %18032 to i64*
  %18033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18034 = getelementptr inbounds %struct.GPR, %struct.GPR* %18033, i32 0, i32 1
  %18035 = getelementptr inbounds %struct.Reg, %struct.Reg* %18034, i32 0, i32 0
  %RAX.i2068 = bitcast %union.anon* %18035 to i64*
  %18036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18037 = getelementptr inbounds %struct.GPR, %struct.GPR* %18036, i32 0, i32 7
  %18038 = getelementptr inbounds %struct.Reg, %struct.Reg* %18037, i32 0, i32 0
  %RDX.i2069 = bitcast %union.anon* %18038 to i64*
  %18039 = load i64, i64* %RAX.i2068
  %18040 = load i64, i64* %RDX.i2069
  %18041 = load i64, i64* %PC.i2067
  %18042 = add i64 %18041, 3
  store i64 %18042, i64* %PC.i2067
  %18043 = add i64 %18040, %18039
  store i64 %18043, i64* %RAX.i2068, align 8
  %18044 = icmp ult i64 %18043, %18039
  %18045 = icmp ult i64 %18043, %18040
  %18046 = or i1 %18044, %18045
  %18047 = zext i1 %18046 to i8
  %18048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18047, i8* %18048, align 1
  %18049 = trunc i64 %18043 to i32
  %18050 = and i32 %18049, 255
  %18051 = call i32 @llvm.ctpop.i32(i32 %18050)
  %18052 = trunc i32 %18051 to i8
  %18053 = and i8 %18052, 1
  %18054 = xor i8 %18053, 1
  %18055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18054, i8* %18055, align 1
  %18056 = xor i64 %18040, %18039
  %18057 = xor i64 %18056, %18043
  %18058 = lshr i64 %18057, 4
  %18059 = trunc i64 %18058 to i8
  %18060 = and i8 %18059, 1
  %18061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18060, i8* %18061, align 1
  %18062 = icmp eq i64 %18043, 0
  %18063 = zext i1 %18062 to i8
  %18064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18063, i8* %18064, align 1
  %18065 = lshr i64 %18043, 63
  %18066 = trunc i64 %18065 to i8
  %18067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18066, i8* %18067, align 1
  %18068 = lshr i64 %18039, 63
  %18069 = lshr i64 %18040, 63
  %18070 = xor i64 %18065, %18068
  %18071 = xor i64 %18065, %18069
  %18072 = add i64 %18070, %18071
  %18073 = icmp eq i64 %18072, 2
  %18074 = zext i1 %18073 to i8
  %18075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18074, i8* %18075, align 1
  store %struct.Memory* %loadMem_4ab58a, %struct.Memory** %MEMORY
  %loadMem_4ab58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18077 = getelementptr inbounds %struct.GPR, %struct.GPR* %18076, i32 0, i32 33
  %18078 = getelementptr inbounds %struct.Reg, %struct.Reg* %18077, i32 0, i32 0
  %PC.i2064 = bitcast %union.anon* %18078 to i64*
  %18079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18080 = getelementptr inbounds %struct.GPR, %struct.GPR* %18079, i32 0, i32 7
  %18081 = getelementptr inbounds %struct.Reg, %struct.Reg* %18080, i32 0, i32 0
  %RDX.i2065 = bitcast %union.anon* %18081 to i64*
  %18082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18083 = getelementptr inbounds %struct.GPR, %struct.GPR* %18082, i32 0, i32 15
  %18084 = getelementptr inbounds %struct.Reg, %struct.Reg* %18083, i32 0, i32 0
  %RBP.i2066 = bitcast %union.anon* %18084 to i64*
  %18085 = load i64, i64* %RBP.i2066
  %18086 = sub i64 %18085, 28
  %18087 = load i64, i64* %PC.i2064
  %18088 = add i64 %18087, 4
  store i64 %18088, i64* %PC.i2064
  %18089 = inttoptr i64 %18086 to i32*
  %18090 = load i32, i32* %18089
  %18091 = sext i32 %18090 to i64
  store i64 %18091, i64* %RDX.i2065, align 8
  store %struct.Memory* %loadMem_4ab58d, %struct.Memory** %MEMORY
  %loadMem_4ab591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18093 = getelementptr inbounds %struct.GPR, %struct.GPR* %18092, i32 0, i32 33
  %18094 = getelementptr inbounds %struct.Reg, %struct.Reg* %18093, i32 0, i32 0
  %PC.i2060 = bitcast %union.anon* %18094 to i64*
  %18095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18096 = getelementptr inbounds %struct.GPR, %struct.GPR* %18095, i32 0, i32 1
  %18097 = getelementptr inbounds %struct.Reg, %struct.Reg* %18096, i32 0, i32 0
  %RAX.i2061 = bitcast %union.anon* %18097 to i64*
  %18098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18099 = getelementptr inbounds %struct.GPR, %struct.GPR* %18098, i32 0, i32 5
  %18100 = getelementptr inbounds %struct.Reg, %struct.Reg* %18099, i32 0, i32 0
  %RCX.i2062 = bitcast %union.anon* %18100 to i64*
  %18101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18102 = getelementptr inbounds %struct.GPR, %struct.GPR* %18101, i32 0, i32 7
  %18103 = getelementptr inbounds %struct.Reg, %struct.Reg* %18102, i32 0, i32 0
  %RDX.i2063 = bitcast %union.anon* %18103 to i64*
  %18104 = load i64, i64* %RCX.i2062
  %18105 = load i64, i64* %RAX.i2061
  %18106 = load i64, i64* %RDX.i2063
  %18107 = mul i64 %18106, 4
  %18108 = add i64 %18107, %18105
  %18109 = load i64, i64* %PC.i2060
  %18110 = add i64 %18109, 4
  store i64 %18110, i64* %PC.i2060
  %18111 = inttoptr i64 %18108 to i32*
  %18112 = load i32, i32* %18111
  %18113 = shl i64 %18104, 32
  %18114 = ashr exact i64 %18113, 32
  %18115 = sext i32 %18112 to i64
  %18116 = mul i64 %18115, %18114
  %18117 = trunc i64 %18116 to i32
  %18118 = and i64 %18116, 4294967295
  store i64 %18118, i64* %RCX.i2062, align 8
  %18119 = shl i64 %18116, 32
  %18120 = ashr exact i64 %18119, 32
  %18121 = icmp ne i64 %18120, %18116
  %18122 = zext i1 %18121 to i8
  %18123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18122, i8* %18123, align 1
  %18124 = and i32 %18117, 255
  %18125 = call i32 @llvm.ctpop.i32(i32 %18124)
  %18126 = trunc i32 %18125 to i8
  %18127 = and i8 %18126, 1
  %18128 = xor i8 %18127, 1
  %18129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18128, i8* %18129, align 1
  %18130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18130, align 1
  %18131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18131, align 1
  %18132 = lshr i32 %18117, 31
  %18133 = trunc i32 %18132 to i8
  %18134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18133, i8* %18134, align 1
  %18135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18122, i8* %18135, align 1
  store %struct.Memory* %loadMem_4ab591, %struct.Memory** %MEMORY
  %loadMem_4ab595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18137 = getelementptr inbounds %struct.GPR, %struct.GPR* %18136, i32 0, i32 33
  %18138 = getelementptr inbounds %struct.Reg, %struct.Reg* %18137, i32 0, i32 0
  %PC.i2057 = bitcast %union.anon* %18138 to i64*
  %18139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18140 = getelementptr inbounds %struct.GPR, %struct.GPR* %18139, i32 0, i32 9
  %18141 = getelementptr inbounds %struct.Reg, %struct.Reg* %18140, i32 0, i32 0
  %RSI.i2058 = bitcast %union.anon* %18141 to i64*
  %18142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18143 = getelementptr inbounds %struct.GPR, %struct.GPR* %18142, i32 0, i32 15
  %18144 = getelementptr inbounds %struct.Reg, %struct.Reg* %18143, i32 0, i32 0
  %RBP.i2059 = bitcast %union.anon* %18144 to i64*
  %18145 = load i64, i64* %RBP.i2059
  %18146 = sub i64 %18145, 72
  %18147 = load i64, i64* %PC.i2057
  %18148 = add i64 %18147, 3
  store i64 %18148, i64* %PC.i2057
  %18149 = inttoptr i64 %18146 to i32*
  %18150 = load i32, i32* %18149
  %18151 = zext i32 %18150 to i64
  store i64 %18151, i64* %RSI.i2058, align 8
  store %struct.Memory* %loadMem_4ab595, %struct.Memory** %MEMORY
  %loadMem_4ab598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18153 = getelementptr inbounds %struct.GPR, %struct.GPR* %18152, i32 0, i32 33
  %18154 = getelementptr inbounds %struct.Reg, %struct.Reg* %18153, i32 0, i32 0
  %PC.i2054 = bitcast %union.anon* %18154 to i64*
  %18155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18156 = getelementptr inbounds %struct.GPR, %struct.GPR* %18155, i32 0, i32 5
  %18157 = getelementptr inbounds %struct.Reg, %struct.Reg* %18156, i32 0, i32 0
  %ECX.i2055 = bitcast %union.anon* %18157 to i32*
  %18158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18159 = getelementptr inbounds %struct.GPR, %struct.GPR* %18158, i32 0, i32 15
  %18160 = getelementptr inbounds %struct.Reg, %struct.Reg* %18159, i32 0, i32 0
  %RBP.i2056 = bitcast %union.anon* %18160 to i64*
  %18161 = load i64, i64* %RBP.i2056
  %18162 = sub i64 %18161, 704
  %18163 = load i32, i32* %ECX.i2055
  %18164 = zext i32 %18163 to i64
  %18165 = load i64, i64* %PC.i2054
  %18166 = add i64 %18165, 6
  store i64 %18166, i64* %PC.i2054
  %18167 = inttoptr i64 %18162 to i32*
  store i32 %18163, i32* %18167
  store %struct.Memory* %loadMem_4ab598, %struct.Memory** %MEMORY
  %loadMem_4ab59e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18169 = getelementptr inbounds %struct.GPR, %struct.GPR* %18168, i32 0, i32 33
  %18170 = getelementptr inbounds %struct.Reg, %struct.Reg* %18169, i32 0, i32 0
  %PC.i2051 = bitcast %union.anon* %18170 to i64*
  %18171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18172 = getelementptr inbounds %struct.GPR, %struct.GPR* %18171, i32 0, i32 9
  %18173 = getelementptr inbounds %struct.Reg, %struct.Reg* %18172, i32 0, i32 0
  %ESI.i2052 = bitcast %union.anon* %18173 to i32*
  %18174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18175 = getelementptr inbounds %struct.GPR, %struct.GPR* %18174, i32 0, i32 5
  %18176 = getelementptr inbounds %struct.Reg, %struct.Reg* %18175, i32 0, i32 0
  %RCX.i2053 = bitcast %union.anon* %18176 to i64*
  %18177 = load i32, i32* %ESI.i2052
  %18178 = zext i32 %18177 to i64
  %18179 = load i64, i64* %PC.i2051
  %18180 = add i64 %18179, 2
  store i64 %18180, i64* %PC.i2051
  %18181 = and i64 %18178, 4294967295
  store i64 %18181, i64* %RCX.i2053, align 8
  store %struct.Memory* %loadMem_4ab59e, %struct.Memory** %MEMORY
  %loadMem_4ab5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18183 = getelementptr inbounds %struct.GPR, %struct.GPR* %18182, i32 0, i32 33
  %18184 = getelementptr inbounds %struct.Reg, %struct.Reg* %18183, i32 0, i32 0
  %PC.i2048 = bitcast %union.anon* %18184 to i64*
  %18185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18186 = getelementptr inbounds %struct.GPR, %struct.GPR* %18185, i32 0, i32 9
  %18187 = getelementptr inbounds %struct.Reg, %struct.Reg* %18186, i32 0, i32 0
  %RSI.i2049 = bitcast %union.anon* %18187 to i64*
  %18188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18189 = getelementptr inbounds %struct.GPR, %struct.GPR* %18188, i32 0, i32 15
  %18190 = getelementptr inbounds %struct.Reg, %struct.Reg* %18189, i32 0, i32 0
  %RBP.i2050 = bitcast %union.anon* %18190 to i64*
  %18191 = load i64, i64* %RBP.i2050
  %18192 = sub i64 %18191, 704
  %18193 = load i64, i64* %PC.i2048
  %18194 = add i64 %18193, 6
  store i64 %18194, i64* %PC.i2048
  %18195 = inttoptr i64 %18192 to i32*
  %18196 = load i32, i32* %18195
  %18197 = zext i32 %18196 to i64
  store i64 %18197, i64* %RSI.i2049, align 8
  store %struct.Memory* %loadMem_4ab5a0, %struct.Memory** %MEMORY
  %loadMem_4ab5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18199 = getelementptr inbounds %struct.GPR, %struct.GPR* %18198, i32 0, i32 33
  %18200 = getelementptr inbounds %struct.Reg, %struct.Reg* %18199, i32 0, i32 0
  %PC.i2044 = bitcast %union.anon* %18200 to i64*
  %18201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18202 = getelementptr inbounds %struct.GPR, %struct.GPR* %18201, i32 0, i32 5
  %18203 = getelementptr inbounds %struct.Reg, %struct.Reg* %18202, i32 0, i32 0
  %18204 = bitcast %union.anon* %18203 to %struct.anon.2*
  %CL.i2045 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18204, i32 0, i32 0
  %18205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18206 = getelementptr inbounds %struct.GPR, %struct.GPR* %18205, i32 0, i32 9
  %18207 = getelementptr inbounds %struct.Reg, %struct.Reg* %18206, i32 0, i32 0
  %RSI.i2046 = bitcast %union.anon* %18207 to i64*
  %18208 = load i64, i64* %RSI.i2046
  %18209 = load i8, i8* %CL.i2045
  %18210 = zext i8 %18209 to i64
  %18211 = load i64, i64* %PC.i2044
  %18212 = add i64 %18211, 2
  store i64 %18212, i64* %PC.i2044
  %18213 = trunc i64 %18210 to i5
  switch i5 %18213, label %18220 [
    i5 0, label %routine_shll__cl___esi.exit2047
    i5 1, label %18214
  ]

; <label>:18214:                                  ; preds = %block_4ab56a
  %18215 = trunc i64 %18208 to i32
  %18216 = shl i32 %18215, 1
  %18217 = icmp slt i32 %18215, 0
  %18218 = icmp slt i32 %18216, 0
  %18219 = xor i1 %18217, %18218
  br label %18229

; <label>:18220:                                  ; preds = %block_4ab56a
  %18221 = and i64 %18210, 31
  %18222 = add i64 %18221, 4294967295
  %18223 = and i64 %18208, 4294967295
  %18224 = and i64 %18222, 4294967295
  %18225 = shl i64 %18223, %18224
  %18226 = trunc i64 %18225 to i32
  %18227 = icmp slt i32 %18226, 0
  %18228 = shl i32 %18226, 1
  br label %18229

; <label>:18229:                                  ; preds = %18220, %18214
  %18230 = phi i1 [ %18217, %18214 ], [ %18227, %18220 ]
  %18231 = phi i1 [ %18219, %18214 ], [ false, %18220 ]
  %18232 = phi i32 [ %18216, %18214 ], [ %18228, %18220 ]
  %18233 = zext i32 %18232 to i64
  store i64 %18233, i64* %RSI.i2046, align 8
  %18234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18235 = zext i1 %18230 to i8
  store i8 %18235, i8* %18234, align 1
  %18236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18237 = and i32 %18232, 254
  %18238 = call i32 @llvm.ctpop.i32(i32 %18237)
  %18239 = trunc i32 %18238 to i8
  %18240 = and i8 %18239, 1
  %18241 = xor i8 %18240, 1
  store i8 %18241, i8* %18236, align 1
  %18242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18242, align 1
  %18243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18244 = icmp eq i32 %18232, 0
  %18245 = zext i1 %18244 to i8
  store i8 %18245, i8* %18243, align 1
  %18246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18247 = lshr i32 %18232, 31
  %18248 = trunc i32 %18247 to i8
  store i8 %18248, i8* %18246, align 1
  %18249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18250 = zext i1 %18231 to i8
  store i8 %18250, i8* %18249, align 1
  br label %routine_shll__cl___esi.exit2047

routine_shll__cl___esi.exit2047:                  ; preds = %block_4ab56a, %18229
  store %struct.Memory* %loadMem_4ab5a6, %struct.Memory** %MEMORY
  %loadMem_4ab5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18252 = getelementptr inbounds %struct.GPR, %struct.GPR* %18251, i32 0, i32 33
  %18253 = getelementptr inbounds %struct.Reg, %struct.Reg* %18252, i32 0, i32 0
  %PC.i2041 = bitcast %union.anon* %18253 to i64*
  %18254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18255 = getelementptr inbounds %struct.GPR, %struct.GPR* %18254, i32 0, i32 9
  %18256 = getelementptr inbounds %struct.Reg, %struct.Reg* %18255, i32 0, i32 0
  %ESI.i2042 = bitcast %union.anon* %18256 to i32*
  %18257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18258 = getelementptr inbounds %struct.GPR, %struct.GPR* %18257, i32 0, i32 15
  %18259 = getelementptr inbounds %struct.Reg, %struct.Reg* %18258, i32 0, i32 0
  %RBP.i2043 = bitcast %union.anon* %18259 to i64*
  %18260 = load i64, i64* %RBP.i2043
  %18261 = sub i64 %18260, 32
  %18262 = load i32, i32* %ESI.i2042
  %18263 = zext i32 %18262 to i64
  %18264 = load i64, i64* %PC.i2041
  %18265 = add i64 %18264, 3
  store i64 %18265, i64* %PC.i2041
  %18266 = inttoptr i64 %18261 to i32*
  store i32 %18262, i32* %18266
  store %struct.Memory* %loadMem_4ab5a8, %struct.Memory** %MEMORY
  %loadMem_4ab5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %18267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18268 = getelementptr inbounds %struct.GPR, %struct.GPR* %18267, i32 0, i32 33
  %18269 = getelementptr inbounds %struct.Reg, %struct.Reg* %18268, i32 0, i32 0
  %PC.i2040 = bitcast %union.anon* %18269 to i64*
  %18270 = load i64, i64* %PC.i2040
  %18271 = add i64 %18270, 73
  %18272 = load i64, i64* %PC.i2040
  %18273 = add i64 %18272, 5
  store i64 %18273, i64* %PC.i2040
  %18274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18271, i64* %18274, align 8
  store %struct.Memory* %loadMem_4ab5ab, %struct.Memory** %MEMORY
  br label %block_.L_4ab5f4

block_.L_4ab5b0:                                  ; preds = %block_4ab560
  %loadMem_4ab5b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18276 = getelementptr inbounds %struct.GPR, %struct.GPR* %18275, i32 0, i32 33
  %18277 = getelementptr inbounds %struct.Reg, %struct.Reg* %18276, i32 0, i32 0
  %PC.i2038 = bitcast %union.anon* %18277 to i64*
  %18278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18279 = getelementptr inbounds %struct.GPR, %struct.GPR* %18278, i32 0, i32 1
  %18280 = getelementptr inbounds %struct.Reg, %struct.Reg* %18279, i32 0, i32 0
  %RAX.i2039 = bitcast %union.anon* %18280 to i64*
  %18281 = load i64, i64* %PC.i2038
  %18282 = add i64 %18281, 10
  store i64 %18282, i64* %PC.i2038
  store i64 ptrtoint (%G__0x6cfc70_type* @G__0x6cfc70 to i64), i64* %RAX.i2039, align 8
  store %struct.Memory* %loadMem_4ab5b0, %struct.Memory** %MEMORY
  %loadMem_4ab5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %18283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18284 = getelementptr inbounds %struct.GPR, %struct.GPR* %18283, i32 0, i32 33
  %18285 = getelementptr inbounds %struct.Reg, %struct.Reg* %18284, i32 0, i32 0
  %PC.i2035 = bitcast %union.anon* %18285 to i64*
  %18286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18287 = getelementptr inbounds %struct.GPR, %struct.GPR* %18286, i32 0, i32 5
  %18288 = getelementptr inbounds %struct.Reg, %struct.Reg* %18287, i32 0, i32 0
  %RCX.i2036 = bitcast %union.anon* %18288 to i64*
  %18289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18290 = getelementptr inbounds %struct.GPR, %struct.GPR* %18289, i32 0, i32 15
  %18291 = getelementptr inbounds %struct.Reg, %struct.Reg* %18290, i32 0, i32 0
  %RBP.i2037 = bitcast %union.anon* %18291 to i64*
  %18292 = load i64, i64* %RBP.i2037
  %18293 = sub i64 %18292, 44
  %18294 = load i64, i64* %PC.i2035
  %18295 = add i64 %18294, 3
  store i64 %18295, i64* %PC.i2035
  %18296 = inttoptr i64 %18293 to i32*
  %18297 = load i32, i32* %18296
  %18298 = zext i32 %18297 to i64
  store i64 %18298, i64* %RCX.i2036, align 8
  store %struct.Memory* %loadMem_4ab5ba, %struct.Memory** %MEMORY
  %loadMem_4ab5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18300 = getelementptr inbounds %struct.GPR, %struct.GPR* %18299, i32 0, i32 33
  %18301 = getelementptr inbounds %struct.Reg, %struct.Reg* %18300, i32 0, i32 0
  %PC.i2032 = bitcast %union.anon* %18301 to i64*
  %18302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18303 = getelementptr inbounds %struct.GPR, %struct.GPR* %18302, i32 0, i32 7
  %18304 = getelementptr inbounds %struct.Reg, %struct.Reg* %18303, i32 0, i32 0
  %RDX.i2033 = bitcast %union.anon* %18304 to i64*
  %18305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18306 = getelementptr inbounds %struct.GPR, %struct.GPR* %18305, i32 0, i32 15
  %18307 = getelementptr inbounds %struct.Reg, %struct.Reg* %18306, i32 0, i32 0
  %RBP.i2034 = bitcast %union.anon* %18307 to i64*
  %18308 = load i64, i64* %RBP.i2034
  %18309 = sub i64 %18308, 64
  %18310 = load i64, i64* %PC.i2032
  %18311 = add i64 %18310, 4
  store i64 %18311, i64* %PC.i2032
  %18312 = inttoptr i64 %18309 to i32*
  %18313 = load i32, i32* %18312
  %18314 = sext i32 %18313 to i64
  store i64 %18314, i64* %RDX.i2033, align 8
  store %struct.Memory* %loadMem_4ab5bd, %struct.Memory** %MEMORY
  %loadMem_4ab5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18316 = getelementptr inbounds %struct.GPR, %struct.GPR* %18315, i32 0, i32 33
  %18317 = getelementptr inbounds %struct.Reg, %struct.Reg* %18316, i32 0, i32 0
  %PC.i2030 = bitcast %union.anon* %18317 to i64*
  %18318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18319 = getelementptr inbounds %struct.GPR, %struct.GPR* %18318, i32 0, i32 7
  %18320 = getelementptr inbounds %struct.Reg, %struct.Reg* %18319, i32 0, i32 0
  %RDX.i2031 = bitcast %union.anon* %18320 to i64*
  %18321 = load i64, i64* %RDX.i2031
  %18322 = load i64, i64* %PC.i2030
  %18323 = add i64 %18322, 4
  store i64 %18323, i64* %PC.i2030
  %18324 = shl i64 %18321, 7
  %18325 = icmp slt i64 %18324, 0
  %18326 = shl i64 %18324, 1
  store i64 %18326, i64* %RDX.i2031, align 8
  %18327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18328 = zext i1 %18325 to i8
  store i8 %18328, i8* %18327, align 1
  %18329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18330 = trunc i64 %18326 to i32
  store i8 1, i8* %18329, align 1
  %18331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18331, align 1
  %18332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18333 = icmp eq i64 %18326, 0
  %18334 = zext i1 %18333 to i8
  store i8 %18334, i8* %18332, align 1
  %18335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18336 = lshr i64 %18326, 63
  %18337 = trunc i64 %18336 to i8
  store i8 %18337, i8* %18335, align 1
  %18338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18338, align 1
  store %struct.Memory* %loadMem_4ab5c1, %struct.Memory** %MEMORY
  %loadMem_4ab5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18340 = getelementptr inbounds %struct.GPR, %struct.GPR* %18339, i32 0, i32 33
  %18341 = getelementptr inbounds %struct.Reg, %struct.Reg* %18340, i32 0, i32 0
  %PC.i2027 = bitcast %union.anon* %18341 to i64*
  %18342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18343 = getelementptr inbounds %struct.GPR, %struct.GPR* %18342, i32 0, i32 1
  %18344 = getelementptr inbounds %struct.Reg, %struct.Reg* %18343, i32 0, i32 0
  %RAX.i2028 = bitcast %union.anon* %18344 to i64*
  %18345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18346 = getelementptr inbounds %struct.GPR, %struct.GPR* %18345, i32 0, i32 7
  %18347 = getelementptr inbounds %struct.Reg, %struct.Reg* %18346, i32 0, i32 0
  %RDX.i2029 = bitcast %union.anon* %18347 to i64*
  %18348 = load i64, i64* %RAX.i2028
  %18349 = load i64, i64* %RDX.i2029
  %18350 = load i64, i64* %PC.i2027
  %18351 = add i64 %18350, 3
  store i64 %18351, i64* %PC.i2027
  %18352 = add i64 %18349, %18348
  store i64 %18352, i64* %RAX.i2028, align 8
  %18353 = icmp ult i64 %18352, %18348
  %18354 = icmp ult i64 %18352, %18349
  %18355 = or i1 %18353, %18354
  %18356 = zext i1 %18355 to i8
  %18357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18356, i8* %18357, align 1
  %18358 = trunc i64 %18352 to i32
  %18359 = and i32 %18358, 255
  %18360 = call i32 @llvm.ctpop.i32(i32 %18359)
  %18361 = trunc i32 %18360 to i8
  %18362 = and i8 %18361, 1
  %18363 = xor i8 %18362, 1
  %18364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18363, i8* %18364, align 1
  %18365 = xor i64 %18349, %18348
  %18366 = xor i64 %18365, %18352
  %18367 = lshr i64 %18366, 4
  %18368 = trunc i64 %18367 to i8
  %18369 = and i8 %18368, 1
  %18370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18369, i8* %18370, align 1
  %18371 = icmp eq i64 %18352, 0
  %18372 = zext i1 %18371 to i8
  %18373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18372, i8* %18373, align 1
  %18374 = lshr i64 %18352, 63
  %18375 = trunc i64 %18374 to i8
  %18376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18375, i8* %18376, align 1
  %18377 = lshr i64 %18348, 63
  %18378 = lshr i64 %18349, 63
  %18379 = xor i64 %18374, %18377
  %18380 = xor i64 %18374, %18378
  %18381 = add i64 %18379, %18380
  %18382 = icmp eq i64 %18381, 2
  %18383 = zext i1 %18382 to i8
  %18384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18383, i8* %18384, align 1
  store %struct.Memory* %loadMem_4ab5c5, %struct.Memory** %MEMORY
  %loadMem_4ab5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18386 = getelementptr inbounds %struct.GPR, %struct.GPR* %18385, i32 0, i32 33
  %18387 = getelementptr inbounds %struct.Reg, %struct.Reg* %18386, i32 0, i32 0
  %PC.i2024 = bitcast %union.anon* %18387 to i64*
  %18388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18389 = getelementptr inbounds %struct.GPR, %struct.GPR* %18388, i32 0, i32 7
  %18390 = getelementptr inbounds %struct.Reg, %struct.Reg* %18389, i32 0, i32 0
  %RDX.i2025 = bitcast %union.anon* %18390 to i64*
  %18391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18392 = getelementptr inbounds %struct.GPR, %struct.GPR* %18391, i32 0, i32 15
  %18393 = getelementptr inbounds %struct.Reg, %struct.Reg* %18392, i32 0, i32 0
  %RBP.i2026 = bitcast %union.anon* %18393 to i64*
  %18394 = load i64, i64* %RBP.i2026
  %18395 = sub i64 %18394, 24
  %18396 = load i64, i64* %PC.i2024
  %18397 = add i64 %18396, 4
  store i64 %18397, i64* %PC.i2024
  %18398 = inttoptr i64 %18395 to i32*
  %18399 = load i32, i32* %18398
  %18400 = sext i32 %18399 to i64
  store i64 %18400, i64* %RDX.i2025, align 8
  store %struct.Memory* %loadMem_4ab5c8, %struct.Memory** %MEMORY
  %loadMem_4ab5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %18401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18402 = getelementptr inbounds %struct.GPR, %struct.GPR* %18401, i32 0, i32 33
  %18403 = getelementptr inbounds %struct.Reg, %struct.Reg* %18402, i32 0, i32 0
  %PC.i2022 = bitcast %union.anon* %18403 to i64*
  %18404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18405 = getelementptr inbounds %struct.GPR, %struct.GPR* %18404, i32 0, i32 7
  %18406 = getelementptr inbounds %struct.Reg, %struct.Reg* %18405, i32 0, i32 0
  %RDX.i2023 = bitcast %union.anon* %18406 to i64*
  %18407 = load i64, i64* %RDX.i2023
  %18408 = load i64, i64* %PC.i2022
  %18409 = add i64 %18408, 4
  store i64 %18409, i64* %PC.i2022
  %18410 = shl i64 %18407, 4
  %18411 = icmp slt i64 %18410, 0
  %18412 = shl i64 %18410, 1
  store i64 %18412, i64* %RDX.i2023, align 8
  %18413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18414 = zext i1 %18411 to i8
  store i8 %18414, i8* %18413, align 1
  %18415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18416 = trunc i64 %18412 to i32
  %18417 = and i32 %18416, 254
  %18418 = call i32 @llvm.ctpop.i32(i32 %18417)
  %18419 = trunc i32 %18418 to i8
  %18420 = and i8 %18419, 1
  %18421 = xor i8 %18420, 1
  store i8 %18421, i8* %18415, align 1
  %18422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18422, align 1
  %18423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18424 = icmp eq i64 %18412, 0
  %18425 = zext i1 %18424 to i8
  store i8 %18425, i8* %18423, align 1
  %18426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18427 = lshr i64 %18412, 63
  %18428 = trunc i64 %18427 to i8
  store i8 %18428, i8* %18426, align 1
  %18429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18429, align 1
  store %struct.Memory* %loadMem_4ab5cc, %struct.Memory** %MEMORY
  %loadMem_4ab5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18431 = getelementptr inbounds %struct.GPR, %struct.GPR* %18430, i32 0, i32 33
  %18432 = getelementptr inbounds %struct.Reg, %struct.Reg* %18431, i32 0, i32 0
  %PC.i2019 = bitcast %union.anon* %18432 to i64*
  %18433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18434 = getelementptr inbounds %struct.GPR, %struct.GPR* %18433, i32 0, i32 1
  %18435 = getelementptr inbounds %struct.Reg, %struct.Reg* %18434, i32 0, i32 0
  %RAX.i2020 = bitcast %union.anon* %18435 to i64*
  %18436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18437 = getelementptr inbounds %struct.GPR, %struct.GPR* %18436, i32 0, i32 7
  %18438 = getelementptr inbounds %struct.Reg, %struct.Reg* %18437, i32 0, i32 0
  %RDX.i2021 = bitcast %union.anon* %18438 to i64*
  %18439 = load i64, i64* %RAX.i2020
  %18440 = load i64, i64* %RDX.i2021
  %18441 = load i64, i64* %PC.i2019
  %18442 = add i64 %18441, 3
  store i64 %18442, i64* %PC.i2019
  %18443 = add i64 %18440, %18439
  store i64 %18443, i64* %RAX.i2020, align 8
  %18444 = icmp ult i64 %18443, %18439
  %18445 = icmp ult i64 %18443, %18440
  %18446 = or i1 %18444, %18445
  %18447 = zext i1 %18446 to i8
  %18448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18447, i8* %18448, align 1
  %18449 = trunc i64 %18443 to i32
  %18450 = and i32 %18449, 255
  %18451 = call i32 @llvm.ctpop.i32(i32 %18450)
  %18452 = trunc i32 %18451 to i8
  %18453 = and i8 %18452, 1
  %18454 = xor i8 %18453, 1
  %18455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18454, i8* %18455, align 1
  %18456 = xor i64 %18440, %18439
  %18457 = xor i64 %18456, %18443
  %18458 = lshr i64 %18457, 4
  %18459 = trunc i64 %18458 to i8
  %18460 = and i8 %18459, 1
  %18461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18460, i8* %18461, align 1
  %18462 = icmp eq i64 %18443, 0
  %18463 = zext i1 %18462 to i8
  %18464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18463, i8* %18464, align 1
  %18465 = lshr i64 %18443, 63
  %18466 = trunc i64 %18465 to i8
  %18467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18466, i8* %18467, align 1
  %18468 = lshr i64 %18439, 63
  %18469 = lshr i64 %18440, 63
  %18470 = xor i64 %18465, %18468
  %18471 = xor i64 %18465, %18469
  %18472 = add i64 %18470, %18471
  %18473 = icmp eq i64 %18472, 2
  %18474 = zext i1 %18473 to i8
  %18475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18474, i8* %18475, align 1
  store %struct.Memory* %loadMem_4ab5d0, %struct.Memory** %MEMORY
  %loadMem_4ab5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18477 = getelementptr inbounds %struct.GPR, %struct.GPR* %18476, i32 0, i32 33
  %18478 = getelementptr inbounds %struct.Reg, %struct.Reg* %18477, i32 0, i32 0
  %PC.i2016 = bitcast %union.anon* %18478 to i64*
  %18479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18480 = getelementptr inbounds %struct.GPR, %struct.GPR* %18479, i32 0, i32 7
  %18481 = getelementptr inbounds %struct.Reg, %struct.Reg* %18480, i32 0, i32 0
  %RDX.i2017 = bitcast %union.anon* %18481 to i64*
  %18482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18483 = getelementptr inbounds %struct.GPR, %struct.GPR* %18482, i32 0, i32 15
  %18484 = getelementptr inbounds %struct.Reg, %struct.Reg* %18483, i32 0, i32 0
  %RBP.i2018 = bitcast %union.anon* %18484 to i64*
  %18485 = load i64, i64* %RBP.i2018
  %18486 = sub i64 %18485, 28
  %18487 = load i64, i64* %PC.i2016
  %18488 = add i64 %18487, 4
  store i64 %18488, i64* %PC.i2016
  %18489 = inttoptr i64 %18486 to i32*
  %18490 = load i32, i32* %18489
  %18491 = sext i32 %18490 to i64
  store i64 %18491, i64* %RDX.i2017, align 8
  store %struct.Memory* %loadMem_4ab5d3, %struct.Memory** %MEMORY
  %loadMem_4ab5d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18493 = getelementptr inbounds %struct.GPR, %struct.GPR* %18492, i32 0, i32 33
  %18494 = getelementptr inbounds %struct.Reg, %struct.Reg* %18493, i32 0, i32 0
  %PC.i2012 = bitcast %union.anon* %18494 to i64*
  %18495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18496 = getelementptr inbounds %struct.GPR, %struct.GPR* %18495, i32 0, i32 1
  %18497 = getelementptr inbounds %struct.Reg, %struct.Reg* %18496, i32 0, i32 0
  %RAX.i2013 = bitcast %union.anon* %18497 to i64*
  %18498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18499 = getelementptr inbounds %struct.GPR, %struct.GPR* %18498, i32 0, i32 5
  %18500 = getelementptr inbounds %struct.Reg, %struct.Reg* %18499, i32 0, i32 0
  %RCX.i2014 = bitcast %union.anon* %18500 to i64*
  %18501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18502 = getelementptr inbounds %struct.GPR, %struct.GPR* %18501, i32 0, i32 7
  %18503 = getelementptr inbounds %struct.Reg, %struct.Reg* %18502, i32 0, i32 0
  %RDX.i2015 = bitcast %union.anon* %18503 to i64*
  %18504 = load i64, i64* %RCX.i2014
  %18505 = load i64, i64* %RAX.i2013
  %18506 = load i64, i64* %RDX.i2015
  %18507 = mul i64 %18506, 4
  %18508 = add i64 %18507, %18505
  %18509 = load i64, i64* %PC.i2012
  %18510 = add i64 %18509, 4
  store i64 %18510, i64* %PC.i2012
  %18511 = inttoptr i64 %18508 to i32*
  %18512 = load i32, i32* %18511
  %18513 = shl i64 %18504, 32
  %18514 = ashr exact i64 %18513, 32
  %18515 = sext i32 %18512 to i64
  %18516 = mul i64 %18515, %18514
  %18517 = trunc i64 %18516 to i32
  %18518 = and i64 %18516, 4294967295
  store i64 %18518, i64* %RCX.i2014, align 8
  %18519 = shl i64 %18516, 32
  %18520 = ashr exact i64 %18519, 32
  %18521 = icmp ne i64 %18520, %18516
  %18522 = zext i1 %18521 to i8
  %18523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18522, i8* %18523, align 1
  %18524 = and i32 %18517, 255
  %18525 = call i32 @llvm.ctpop.i32(i32 %18524)
  %18526 = trunc i32 %18525 to i8
  %18527 = and i8 %18526, 1
  %18528 = xor i8 %18527, 1
  %18529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18528, i8* %18529, align 1
  %18530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18530, align 1
  %18531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18531, align 1
  %18532 = lshr i32 %18517, 31
  %18533 = trunc i32 %18532 to i8
  %18534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18533, i8* %18534, align 1
  %18535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18522, i8* %18535, align 1
  store %struct.Memory* %loadMem_4ab5d7, %struct.Memory** %MEMORY
  %loadMem_4ab5db = load %struct.Memory*, %struct.Memory** %MEMORY
  %18536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18537 = getelementptr inbounds %struct.GPR, %struct.GPR* %18536, i32 0, i32 33
  %18538 = getelementptr inbounds %struct.Reg, %struct.Reg* %18537, i32 0, i32 0
  %PC.i2009 = bitcast %union.anon* %18538 to i64*
  %18539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18540 = getelementptr inbounds %struct.GPR, %struct.GPR* %18539, i32 0, i32 5
  %18541 = getelementptr inbounds %struct.Reg, %struct.Reg* %18540, i32 0, i32 0
  %RCX.i2010 = bitcast %union.anon* %18541 to i64*
  %18542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18543 = getelementptr inbounds %struct.GPR, %struct.GPR* %18542, i32 0, i32 15
  %18544 = getelementptr inbounds %struct.Reg, %struct.Reg* %18543, i32 0, i32 0
  %RBP.i2011 = bitcast %union.anon* %18544 to i64*
  %18545 = load i64, i64* %RCX.i2010
  %18546 = load i64, i64* %RBP.i2011
  %18547 = sub i64 %18546, 80
  %18548 = load i64, i64* %PC.i2009
  %18549 = add i64 %18548, 3
  store i64 %18549, i64* %PC.i2009
  %18550 = trunc i64 %18545 to i32
  %18551 = inttoptr i64 %18547 to i32*
  %18552 = load i32, i32* %18551
  %18553 = add i32 %18552, %18550
  %18554 = zext i32 %18553 to i64
  store i64 %18554, i64* %RCX.i2010, align 8
  %18555 = icmp ult i32 %18553, %18550
  %18556 = icmp ult i32 %18553, %18552
  %18557 = or i1 %18555, %18556
  %18558 = zext i1 %18557 to i8
  %18559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18558, i8* %18559, align 1
  %18560 = and i32 %18553, 255
  %18561 = call i32 @llvm.ctpop.i32(i32 %18560)
  %18562 = trunc i32 %18561 to i8
  %18563 = and i8 %18562, 1
  %18564 = xor i8 %18563, 1
  %18565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18564, i8* %18565, align 1
  %18566 = xor i32 %18552, %18550
  %18567 = xor i32 %18566, %18553
  %18568 = lshr i32 %18567, 4
  %18569 = trunc i32 %18568 to i8
  %18570 = and i8 %18569, 1
  %18571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18570, i8* %18571, align 1
  %18572 = icmp eq i32 %18553, 0
  %18573 = zext i1 %18572 to i8
  %18574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18573, i8* %18574, align 1
  %18575 = lshr i32 %18553, 31
  %18576 = trunc i32 %18575 to i8
  %18577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18576, i8* %18577, align 1
  %18578 = lshr i32 %18550, 31
  %18579 = lshr i32 %18552, 31
  %18580 = xor i32 %18575, %18578
  %18581 = xor i32 %18575, %18579
  %18582 = add i32 %18580, %18581
  %18583 = icmp eq i32 %18582, 2
  %18584 = zext i1 %18583 to i8
  %18585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18584, i8* %18585, align 1
  store %struct.Memory* %loadMem_4ab5db, %struct.Memory** %MEMORY
  %loadMem_4ab5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %18586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18587 = getelementptr inbounds %struct.GPR, %struct.GPR* %18586, i32 0, i32 33
  %18588 = getelementptr inbounds %struct.Reg, %struct.Reg* %18587, i32 0, i32 0
  %PC.i2006 = bitcast %union.anon* %18588 to i64*
  %18589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18590 = getelementptr inbounds %struct.GPR, %struct.GPR* %18589, i32 0, i32 9
  %18591 = getelementptr inbounds %struct.Reg, %struct.Reg* %18590, i32 0, i32 0
  %RSI.i2007 = bitcast %union.anon* %18591 to i64*
  %18592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18593 = getelementptr inbounds %struct.GPR, %struct.GPR* %18592, i32 0, i32 15
  %18594 = getelementptr inbounds %struct.Reg, %struct.Reg* %18593, i32 0, i32 0
  %RBP.i2008 = bitcast %union.anon* %18594 to i64*
  %18595 = load i64, i64* %RBP.i2008
  %18596 = sub i64 %18595, 76
  %18597 = load i64, i64* %PC.i2006
  %18598 = add i64 %18597, 3
  store i64 %18598, i64* %PC.i2006
  %18599 = inttoptr i64 %18596 to i32*
  %18600 = load i32, i32* %18599
  %18601 = zext i32 %18600 to i64
  store i64 %18601, i64* %RSI.i2007, align 8
  store %struct.Memory* %loadMem_4ab5de, %struct.Memory** %MEMORY
  %loadMem_4ab5e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18603 = getelementptr inbounds %struct.GPR, %struct.GPR* %18602, i32 0, i32 33
  %18604 = getelementptr inbounds %struct.Reg, %struct.Reg* %18603, i32 0, i32 0
  %PC.i2003 = bitcast %union.anon* %18604 to i64*
  %18605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18606 = getelementptr inbounds %struct.GPR, %struct.GPR* %18605, i32 0, i32 5
  %18607 = getelementptr inbounds %struct.Reg, %struct.Reg* %18606, i32 0, i32 0
  %ECX.i2004 = bitcast %union.anon* %18607 to i32*
  %18608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18609 = getelementptr inbounds %struct.GPR, %struct.GPR* %18608, i32 0, i32 15
  %18610 = getelementptr inbounds %struct.Reg, %struct.Reg* %18609, i32 0, i32 0
  %RBP.i2005 = bitcast %union.anon* %18610 to i64*
  %18611 = load i64, i64* %RBP.i2005
  %18612 = sub i64 %18611, 708
  %18613 = load i32, i32* %ECX.i2004
  %18614 = zext i32 %18613 to i64
  %18615 = load i64, i64* %PC.i2003
  %18616 = add i64 %18615, 6
  store i64 %18616, i64* %PC.i2003
  %18617 = inttoptr i64 %18612 to i32*
  store i32 %18613, i32* %18617
  store %struct.Memory* %loadMem_4ab5e1, %struct.Memory** %MEMORY
  %loadMem_4ab5e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18619 = getelementptr inbounds %struct.GPR, %struct.GPR* %18618, i32 0, i32 33
  %18620 = getelementptr inbounds %struct.Reg, %struct.Reg* %18619, i32 0, i32 0
  %PC.i2000 = bitcast %union.anon* %18620 to i64*
  %18621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18622 = getelementptr inbounds %struct.GPR, %struct.GPR* %18621, i32 0, i32 9
  %18623 = getelementptr inbounds %struct.Reg, %struct.Reg* %18622, i32 0, i32 0
  %ESI.i2001 = bitcast %union.anon* %18623 to i32*
  %18624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18625 = getelementptr inbounds %struct.GPR, %struct.GPR* %18624, i32 0, i32 5
  %18626 = getelementptr inbounds %struct.Reg, %struct.Reg* %18625, i32 0, i32 0
  %RCX.i2002 = bitcast %union.anon* %18626 to i64*
  %18627 = load i32, i32* %ESI.i2001
  %18628 = zext i32 %18627 to i64
  %18629 = load i64, i64* %PC.i2000
  %18630 = add i64 %18629, 2
  store i64 %18630, i64* %PC.i2000
  %18631 = and i64 %18628, 4294967295
  store i64 %18631, i64* %RCX.i2002, align 8
  store %struct.Memory* %loadMem_4ab5e7, %struct.Memory** %MEMORY
  %loadMem_4ab5e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18633 = getelementptr inbounds %struct.GPR, %struct.GPR* %18632, i32 0, i32 33
  %18634 = getelementptr inbounds %struct.Reg, %struct.Reg* %18633, i32 0, i32 0
  %PC.i1997 = bitcast %union.anon* %18634 to i64*
  %18635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18636 = getelementptr inbounds %struct.GPR, %struct.GPR* %18635, i32 0, i32 9
  %18637 = getelementptr inbounds %struct.Reg, %struct.Reg* %18636, i32 0, i32 0
  %RSI.i1998 = bitcast %union.anon* %18637 to i64*
  %18638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18639 = getelementptr inbounds %struct.GPR, %struct.GPR* %18638, i32 0, i32 15
  %18640 = getelementptr inbounds %struct.Reg, %struct.Reg* %18639, i32 0, i32 0
  %RBP.i1999 = bitcast %union.anon* %18640 to i64*
  %18641 = load i64, i64* %RBP.i1999
  %18642 = sub i64 %18641, 708
  %18643 = load i64, i64* %PC.i1997
  %18644 = add i64 %18643, 6
  store i64 %18644, i64* %PC.i1997
  %18645 = inttoptr i64 %18642 to i32*
  %18646 = load i32, i32* %18645
  %18647 = zext i32 %18646 to i64
  store i64 %18647, i64* %RSI.i1998, align 8
  store %struct.Memory* %loadMem_4ab5e9, %struct.Memory** %MEMORY
  %loadMem_4ab5ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %18648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18649 = getelementptr inbounds %struct.GPR, %struct.GPR* %18648, i32 0, i32 33
  %18650 = getelementptr inbounds %struct.Reg, %struct.Reg* %18649, i32 0, i32 0
  %PC.i1993 = bitcast %union.anon* %18650 to i64*
  %18651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18652 = getelementptr inbounds %struct.GPR, %struct.GPR* %18651, i32 0, i32 5
  %18653 = getelementptr inbounds %struct.Reg, %struct.Reg* %18652, i32 0, i32 0
  %18654 = bitcast %union.anon* %18653 to %struct.anon.2*
  %CL.i1994 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18654, i32 0, i32 0
  %18655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18656 = getelementptr inbounds %struct.GPR, %struct.GPR* %18655, i32 0, i32 9
  %18657 = getelementptr inbounds %struct.Reg, %struct.Reg* %18656, i32 0, i32 0
  %RSI.i1995 = bitcast %union.anon* %18657 to i64*
  %18658 = load i64, i64* %RSI.i1995
  %18659 = load i8, i8* %CL.i1994
  %18660 = zext i8 %18659 to i64
  %18661 = load i64, i64* %PC.i1993
  %18662 = add i64 %18661, 2
  store i64 %18662, i64* %PC.i1993
  %18663 = trunc i64 %18660 to i5
  switch i5 %18663, label %18667 [
    i5 0, label %routine_sarl__cl___esi.exit1996
    i5 1, label %18664
  ]

; <label>:18664:                                  ; preds = %block_.L_4ab5b0
  %18665 = shl i64 %18658, 32
  %18666 = ashr i64 %18665, 33
  br label %18674

; <label>:18667:                                  ; preds = %block_.L_4ab5b0
  %18668 = and i64 %18660, 31
  %18669 = add i64 %18668, -1
  %18670 = shl i64 %18658, 32
  %18671 = ashr exact i64 %18670, 32
  %18672 = ashr i64 %18671, %18669
  %18673 = lshr i64 %18672, 1
  br label %18674

; <label>:18674:                                  ; preds = %18667, %18664
  %18675 = phi i64 [ %18673, %18667 ], [ %18666, %18664 ]
  %18676 = phi i64 [ %18672, %18667 ], [ %18658, %18664 ]
  %18677 = trunc i64 %18676 to i8
  %18678 = and i8 %18677, 1
  %18679 = trunc i64 %18675 to i32
  %18680 = and i64 %18675, 4294967295
  store i64 %18680, i64* %RSI.i1995, align 8
  %18681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18678, i8* %18681, align 1
  %18682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18683 = and i32 %18679, 255
  %18684 = call i32 @llvm.ctpop.i32(i32 %18683)
  %18685 = trunc i32 %18684 to i8
  %18686 = and i8 %18685, 1
  %18687 = xor i8 %18686, 1
  store i8 %18687, i8* %18682, align 1
  %18688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18688, align 1
  %18689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18690 = icmp eq i32 %18679, 0
  %18691 = zext i1 %18690 to i8
  store i8 %18691, i8* %18689, align 1
  %18692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18693 = lshr i32 %18679, 31
  %18694 = trunc i32 %18693 to i8
  store i8 %18694, i8* %18692, align 1
  %18695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18695, align 1
  br label %routine_sarl__cl___esi.exit1996

routine_sarl__cl___esi.exit1996:                  ; preds = %block_.L_4ab5b0, %18674
  store %struct.Memory* %loadMem_4ab5ef, %struct.Memory** %MEMORY
  %loadMem_4ab5f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18697 = getelementptr inbounds %struct.GPR, %struct.GPR* %18696, i32 0, i32 33
  %18698 = getelementptr inbounds %struct.Reg, %struct.Reg* %18697, i32 0, i32 0
  %PC.i1990 = bitcast %union.anon* %18698 to i64*
  %18699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18700 = getelementptr inbounds %struct.GPR, %struct.GPR* %18699, i32 0, i32 9
  %18701 = getelementptr inbounds %struct.Reg, %struct.Reg* %18700, i32 0, i32 0
  %ESI.i1991 = bitcast %union.anon* %18701 to i32*
  %18702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18703 = getelementptr inbounds %struct.GPR, %struct.GPR* %18702, i32 0, i32 15
  %18704 = getelementptr inbounds %struct.Reg, %struct.Reg* %18703, i32 0, i32 0
  %RBP.i1992 = bitcast %union.anon* %18704 to i64*
  %18705 = load i64, i64* %RBP.i1992
  %18706 = sub i64 %18705, 32
  %18707 = load i32, i32* %ESI.i1991
  %18708 = zext i32 %18707 to i64
  %18709 = load i64, i64* %PC.i1990
  %18710 = add i64 %18709, 3
  store i64 %18710, i64* %PC.i1990
  %18711 = inttoptr i64 %18706 to i32*
  store i32 %18707, i32* %18711
  store %struct.Memory* %loadMem_4ab5f1, %struct.Memory** %MEMORY
  br label %block_.L_4ab5f4

block_.L_4ab5f4:                                  ; preds = %routine_sarl__cl___esi.exit1996, %routine_shll__cl___esi.exit2047
  %loadMem_4ab5f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18713 = getelementptr inbounds %struct.GPR, %struct.GPR* %18712, i32 0, i32 33
  %18714 = getelementptr inbounds %struct.Reg, %struct.Reg* %18713, i32 0, i32 0
  %PC.i1989 = bitcast %union.anon* %18714 to i64*
  %18715 = load i64, i64* %PC.i1989
  %18716 = add i64 %18715, 158
  %18717 = load i64, i64* %PC.i1989
  %18718 = add i64 %18717, 5
  store i64 %18718, i64* %PC.i1989
  %18719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18716, i64* %18719, align 8
  store %struct.Memory* %loadMem_4ab5f4, %struct.Memory** %MEMORY
  br label %block_.L_4ab692

block_.L_4ab5f9:                                  ; preds = %block_.L_4ab556
  %loadMem_4ab5f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18721 = getelementptr inbounds %struct.GPR, %struct.GPR* %18720, i32 0, i32 33
  %18722 = getelementptr inbounds %struct.Reg, %struct.Reg* %18721, i32 0, i32 0
  %PC.i1987 = bitcast %union.anon* %18722 to i64*
  %18723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18724 = getelementptr inbounds %struct.GPR, %struct.GPR* %18723, i32 0, i32 15
  %18725 = getelementptr inbounds %struct.Reg, %struct.Reg* %18724, i32 0, i32 0
  %RBP.i1988 = bitcast %union.anon* %18725 to i64*
  %18726 = load i64, i64* %RBP.i1988
  %18727 = sub i64 %18726, 60
  %18728 = load i64, i64* %PC.i1987
  %18729 = add i64 %18728, 4
  store i64 %18729, i64* %PC.i1987
  %18730 = inttoptr i64 %18727 to i32*
  %18731 = load i32, i32* %18730
  %18732 = sub i32 %18731, 6
  %18733 = icmp ult i32 %18731, 6
  %18734 = zext i1 %18733 to i8
  %18735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18734, i8* %18735, align 1
  %18736 = and i32 %18732, 255
  %18737 = call i32 @llvm.ctpop.i32(i32 %18736)
  %18738 = trunc i32 %18737 to i8
  %18739 = and i8 %18738, 1
  %18740 = xor i8 %18739, 1
  %18741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18740, i8* %18741, align 1
  %18742 = xor i32 %18731, 6
  %18743 = xor i32 %18742, %18732
  %18744 = lshr i32 %18743, 4
  %18745 = trunc i32 %18744 to i8
  %18746 = and i8 %18745, 1
  %18747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18746, i8* %18747, align 1
  %18748 = icmp eq i32 %18732, 0
  %18749 = zext i1 %18748 to i8
  %18750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18749, i8* %18750, align 1
  %18751 = lshr i32 %18732, 31
  %18752 = trunc i32 %18751 to i8
  %18753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18752, i8* %18753, align 1
  %18754 = lshr i32 %18731, 31
  %18755 = xor i32 %18751, %18754
  %18756 = add i32 %18755, %18754
  %18757 = icmp eq i32 %18756, 2
  %18758 = zext i1 %18757 to i8
  %18759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18758, i8* %18759, align 1
  store %struct.Memory* %loadMem_4ab5f9, %struct.Memory** %MEMORY
  %loadMem_4ab5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18761 = getelementptr inbounds %struct.GPR, %struct.GPR* %18760, i32 0, i32 33
  %18762 = getelementptr inbounds %struct.Reg, %struct.Reg* %18761, i32 0, i32 0
  %PC.i1986 = bitcast %union.anon* %18762 to i64*
  %18763 = load i64, i64* %PC.i1986
  %18764 = add i64 %18763, 76
  %18765 = load i64, i64* %PC.i1986
  %18766 = add i64 %18765, 6
  %18767 = load i64, i64* %PC.i1986
  %18768 = add i64 %18767, 6
  store i64 %18768, i64* %PC.i1986
  %18769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18770 = load i8, i8* %18769, align 1
  %18771 = icmp ne i8 %18770, 0
  %18772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18773 = load i8, i8* %18772, align 1
  %18774 = icmp ne i8 %18773, 0
  %18775 = xor i1 %18771, %18774
  %18776 = zext i1 %18775 to i8
  store i8 %18776, i8* %BRANCH_TAKEN, align 1
  %18777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18778 = select i1 %18775, i64 %18764, i64 %18766
  store i64 %18778, i64* %18777, align 8
  store %struct.Memory* %loadMem_4ab5fd, %struct.Memory** %MEMORY
  %loadBr_4ab5fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab5fd = icmp eq i8 %loadBr_4ab5fd, 1
  br i1 %cmpBr_4ab5fd, label %block_.L_4ab649, label %block_4ab603

block_4ab603:                                     ; preds = %block_.L_4ab5f9
  %loadMem_4ab603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18780 = getelementptr inbounds %struct.GPR, %struct.GPR* %18779, i32 0, i32 33
  %18781 = getelementptr inbounds %struct.Reg, %struct.Reg* %18780, i32 0, i32 0
  %PC.i1984 = bitcast %union.anon* %18781 to i64*
  %18782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18783 = getelementptr inbounds %struct.GPR, %struct.GPR* %18782, i32 0, i32 1
  %18784 = getelementptr inbounds %struct.Reg, %struct.Reg* %18783, i32 0, i32 0
  %RAX.i1985 = bitcast %union.anon* %18784 to i64*
  %18785 = load i64, i64* %PC.i1984
  %18786 = add i64 %18785, 10
  store i64 %18786, i64* %PC.i1984
  store i64 ptrtoint (%G__0x6d12c0_type* @G__0x6d12c0 to i64), i64* %RAX.i1985, align 8
  store %struct.Memory* %loadMem_4ab603, %struct.Memory** %MEMORY
  %loadMem_4ab60d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18788 = getelementptr inbounds %struct.GPR, %struct.GPR* %18787, i32 0, i32 33
  %18789 = getelementptr inbounds %struct.Reg, %struct.Reg* %18788, i32 0, i32 0
  %PC.i1981 = bitcast %union.anon* %18789 to i64*
  %18790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18791 = getelementptr inbounds %struct.GPR, %struct.GPR* %18790, i32 0, i32 5
  %18792 = getelementptr inbounds %struct.Reg, %struct.Reg* %18791, i32 0, i32 0
  %RCX.i1982 = bitcast %union.anon* %18792 to i64*
  %18793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18794 = getelementptr inbounds %struct.GPR, %struct.GPR* %18793, i32 0, i32 15
  %18795 = getelementptr inbounds %struct.Reg, %struct.Reg* %18794, i32 0, i32 0
  %RBP.i1983 = bitcast %union.anon* %18795 to i64*
  %18796 = load i64, i64* %RBP.i1983
  %18797 = sub i64 %18796, 44
  %18798 = load i64, i64* %PC.i1981
  %18799 = add i64 %18798, 3
  store i64 %18799, i64* %PC.i1981
  %18800 = inttoptr i64 %18797 to i32*
  %18801 = load i32, i32* %18800
  %18802 = zext i32 %18801 to i64
  store i64 %18802, i64* %RCX.i1982, align 8
  store %struct.Memory* %loadMem_4ab60d, %struct.Memory** %MEMORY
  %loadMem_4ab610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18804 = getelementptr inbounds %struct.GPR, %struct.GPR* %18803, i32 0, i32 33
  %18805 = getelementptr inbounds %struct.Reg, %struct.Reg* %18804, i32 0, i32 0
  %PC.i1978 = bitcast %union.anon* %18805 to i64*
  %18806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18807 = getelementptr inbounds %struct.GPR, %struct.GPR* %18806, i32 0, i32 7
  %18808 = getelementptr inbounds %struct.Reg, %struct.Reg* %18807, i32 0, i32 0
  %RDX.i1979 = bitcast %union.anon* %18808 to i64*
  %18809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18810 = getelementptr inbounds %struct.GPR, %struct.GPR* %18809, i32 0, i32 15
  %18811 = getelementptr inbounds %struct.Reg, %struct.Reg* %18810, i32 0, i32 0
  %RBP.i1980 = bitcast %union.anon* %18811 to i64*
  %18812 = load i64, i64* %RBP.i1980
  %18813 = sub i64 %18812, 64
  %18814 = load i64, i64* %PC.i1978
  %18815 = add i64 %18814, 4
  store i64 %18815, i64* %PC.i1978
  %18816 = inttoptr i64 %18813 to i32*
  %18817 = load i32, i32* %18816
  %18818 = sext i32 %18817 to i64
  store i64 %18818, i64* %RDX.i1979, align 8
  store %struct.Memory* %loadMem_4ab610, %struct.Memory** %MEMORY
  %loadMem_4ab614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18820 = getelementptr inbounds %struct.GPR, %struct.GPR* %18819, i32 0, i32 33
  %18821 = getelementptr inbounds %struct.Reg, %struct.Reg* %18820, i32 0, i32 0
  %PC.i1976 = bitcast %union.anon* %18821 to i64*
  %18822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18823 = getelementptr inbounds %struct.GPR, %struct.GPR* %18822, i32 0, i32 7
  %18824 = getelementptr inbounds %struct.Reg, %struct.Reg* %18823, i32 0, i32 0
  %RDX.i1977 = bitcast %union.anon* %18824 to i64*
  %18825 = load i64, i64* %RDX.i1977
  %18826 = load i64, i64* %PC.i1976
  %18827 = add i64 %18826, 4
  store i64 %18827, i64* %PC.i1976
  %18828 = shl i64 %18825, 7
  %18829 = icmp slt i64 %18828, 0
  %18830 = shl i64 %18828, 1
  store i64 %18830, i64* %RDX.i1977, align 8
  %18831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18832 = zext i1 %18829 to i8
  store i8 %18832, i8* %18831, align 1
  %18833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18834 = trunc i64 %18830 to i32
  store i8 1, i8* %18833, align 1
  %18835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18835, align 1
  %18836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18837 = icmp eq i64 %18830, 0
  %18838 = zext i1 %18837 to i8
  store i8 %18838, i8* %18836, align 1
  %18839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18840 = lshr i64 %18830, 63
  %18841 = trunc i64 %18840 to i8
  store i8 %18841, i8* %18839, align 1
  %18842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18842, align 1
  store %struct.Memory* %loadMem_4ab614, %struct.Memory** %MEMORY
  %loadMem_4ab618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18844 = getelementptr inbounds %struct.GPR, %struct.GPR* %18843, i32 0, i32 33
  %18845 = getelementptr inbounds %struct.Reg, %struct.Reg* %18844, i32 0, i32 0
  %PC.i1973 = bitcast %union.anon* %18845 to i64*
  %18846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18847 = getelementptr inbounds %struct.GPR, %struct.GPR* %18846, i32 0, i32 1
  %18848 = getelementptr inbounds %struct.Reg, %struct.Reg* %18847, i32 0, i32 0
  %RAX.i1974 = bitcast %union.anon* %18848 to i64*
  %18849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18850 = getelementptr inbounds %struct.GPR, %struct.GPR* %18849, i32 0, i32 7
  %18851 = getelementptr inbounds %struct.Reg, %struct.Reg* %18850, i32 0, i32 0
  %RDX.i1975 = bitcast %union.anon* %18851 to i64*
  %18852 = load i64, i64* %RAX.i1974
  %18853 = load i64, i64* %RDX.i1975
  %18854 = load i64, i64* %PC.i1973
  %18855 = add i64 %18854, 3
  store i64 %18855, i64* %PC.i1973
  %18856 = add i64 %18853, %18852
  store i64 %18856, i64* %RAX.i1974, align 8
  %18857 = icmp ult i64 %18856, %18852
  %18858 = icmp ult i64 %18856, %18853
  %18859 = or i1 %18857, %18858
  %18860 = zext i1 %18859 to i8
  %18861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18860, i8* %18861, align 1
  %18862 = trunc i64 %18856 to i32
  %18863 = and i32 %18862, 255
  %18864 = call i32 @llvm.ctpop.i32(i32 %18863)
  %18865 = trunc i32 %18864 to i8
  %18866 = and i8 %18865, 1
  %18867 = xor i8 %18866, 1
  %18868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18867, i8* %18868, align 1
  %18869 = xor i64 %18853, %18852
  %18870 = xor i64 %18869, %18856
  %18871 = lshr i64 %18870, 4
  %18872 = trunc i64 %18871 to i8
  %18873 = and i8 %18872, 1
  %18874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18873, i8* %18874, align 1
  %18875 = icmp eq i64 %18856, 0
  %18876 = zext i1 %18875 to i8
  %18877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18876, i8* %18877, align 1
  %18878 = lshr i64 %18856, 63
  %18879 = trunc i64 %18878 to i8
  %18880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18879, i8* %18880, align 1
  %18881 = lshr i64 %18852, 63
  %18882 = lshr i64 %18853, 63
  %18883 = xor i64 %18878, %18881
  %18884 = xor i64 %18878, %18882
  %18885 = add i64 %18883, %18884
  %18886 = icmp eq i64 %18885, 2
  %18887 = zext i1 %18886 to i8
  %18888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18887, i8* %18888, align 1
  store %struct.Memory* %loadMem_4ab618, %struct.Memory** %MEMORY
  %loadMem_4ab61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18890 = getelementptr inbounds %struct.GPR, %struct.GPR* %18889, i32 0, i32 33
  %18891 = getelementptr inbounds %struct.Reg, %struct.Reg* %18890, i32 0, i32 0
  %PC.i1970 = bitcast %union.anon* %18891 to i64*
  %18892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18893 = getelementptr inbounds %struct.GPR, %struct.GPR* %18892, i32 0, i32 7
  %18894 = getelementptr inbounds %struct.Reg, %struct.Reg* %18893, i32 0, i32 0
  %RDX.i1971 = bitcast %union.anon* %18894 to i64*
  %18895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18896 = getelementptr inbounds %struct.GPR, %struct.GPR* %18895, i32 0, i32 15
  %18897 = getelementptr inbounds %struct.Reg, %struct.Reg* %18896, i32 0, i32 0
  %RBP.i1972 = bitcast %union.anon* %18897 to i64*
  %18898 = load i64, i64* %RBP.i1972
  %18899 = sub i64 %18898, 24
  %18900 = load i64, i64* %PC.i1970
  %18901 = add i64 %18900, 4
  store i64 %18901, i64* %PC.i1970
  %18902 = inttoptr i64 %18899 to i32*
  %18903 = load i32, i32* %18902
  %18904 = sext i32 %18903 to i64
  store i64 %18904, i64* %RDX.i1971, align 8
  store %struct.Memory* %loadMem_4ab61b, %struct.Memory** %MEMORY
  %loadMem_4ab61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %18905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18906 = getelementptr inbounds %struct.GPR, %struct.GPR* %18905, i32 0, i32 33
  %18907 = getelementptr inbounds %struct.Reg, %struct.Reg* %18906, i32 0, i32 0
  %PC.i1968 = bitcast %union.anon* %18907 to i64*
  %18908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18909 = getelementptr inbounds %struct.GPR, %struct.GPR* %18908, i32 0, i32 7
  %18910 = getelementptr inbounds %struct.Reg, %struct.Reg* %18909, i32 0, i32 0
  %RDX.i1969 = bitcast %union.anon* %18910 to i64*
  %18911 = load i64, i64* %RDX.i1969
  %18912 = load i64, i64* %PC.i1968
  %18913 = add i64 %18912, 4
  store i64 %18913, i64* %PC.i1968
  %18914 = shl i64 %18911, 4
  %18915 = icmp slt i64 %18914, 0
  %18916 = shl i64 %18914, 1
  store i64 %18916, i64* %RDX.i1969, align 8
  %18917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18918 = zext i1 %18915 to i8
  store i8 %18918, i8* %18917, align 1
  %18919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18920 = trunc i64 %18916 to i32
  %18921 = and i32 %18920, 254
  %18922 = call i32 @llvm.ctpop.i32(i32 %18921)
  %18923 = trunc i32 %18922 to i8
  %18924 = and i8 %18923, 1
  %18925 = xor i8 %18924, 1
  store i8 %18925, i8* %18919, align 1
  %18926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18926, align 1
  %18927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18928 = icmp eq i64 %18916, 0
  %18929 = zext i1 %18928 to i8
  store i8 %18929, i8* %18927, align 1
  %18930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18931 = lshr i64 %18916, 63
  %18932 = trunc i64 %18931 to i8
  store i8 %18932, i8* %18930, align 1
  %18933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18933, align 1
  store %struct.Memory* %loadMem_4ab61f, %struct.Memory** %MEMORY
  %loadMem_4ab623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18935 = getelementptr inbounds %struct.GPR, %struct.GPR* %18934, i32 0, i32 33
  %18936 = getelementptr inbounds %struct.Reg, %struct.Reg* %18935, i32 0, i32 0
  %PC.i1965 = bitcast %union.anon* %18936 to i64*
  %18937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18938 = getelementptr inbounds %struct.GPR, %struct.GPR* %18937, i32 0, i32 1
  %18939 = getelementptr inbounds %struct.Reg, %struct.Reg* %18938, i32 0, i32 0
  %RAX.i1966 = bitcast %union.anon* %18939 to i64*
  %18940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18941 = getelementptr inbounds %struct.GPR, %struct.GPR* %18940, i32 0, i32 7
  %18942 = getelementptr inbounds %struct.Reg, %struct.Reg* %18941, i32 0, i32 0
  %RDX.i1967 = bitcast %union.anon* %18942 to i64*
  %18943 = load i64, i64* %RAX.i1966
  %18944 = load i64, i64* %RDX.i1967
  %18945 = load i64, i64* %PC.i1965
  %18946 = add i64 %18945, 3
  store i64 %18946, i64* %PC.i1965
  %18947 = add i64 %18944, %18943
  store i64 %18947, i64* %RAX.i1966, align 8
  %18948 = icmp ult i64 %18947, %18943
  %18949 = icmp ult i64 %18947, %18944
  %18950 = or i1 %18948, %18949
  %18951 = zext i1 %18950 to i8
  %18952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18951, i8* %18952, align 1
  %18953 = trunc i64 %18947 to i32
  %18954 = and i32 %18953, 255
  %18955 = call i32 @llvm.ctpop.i32(i32 %18954)
  %18956 = trunc i32 %18955 to i8
  %18957 = and i8 %18956, 1
  %18958 = xor i8 %18957, 1
  %18959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18958, i8* %18959, align 1
  %18960 = xor i64 %18944, %18943
  %18961 = xor i64 %18960, %18947
  %18962 = lshr i64 %18961, 4
  %18963 = trunc i64 %18962 to i8
  %18964 = and i8 %18963, 1
  %18965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18964, i8* %18965, align 1
  %18966 = icmp eq i64 %18947, 0
  %18967 = zext i1 %18966 to i8
  %18968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18967, i8* %18968, align 1
  %18969 = lshr i64 %18947, 63
  %18970 = trunc i64 %18969 to i8
  %18971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18970, i8* %18971, align 1
  %18972 = lshr i64 %18943, 63
  %18973 = lshr i64 %18944, 63
  %18974 = xor i64 %18969, %18972
  %18975 = xor i64 %18969, %18973
  %18976 = add i64 %18974, %18975
  %18977 = icmp eq i64 %18976, 2
  %18978 = zext i1 %18977 to i8
  %18979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18978, i8* %18979, align 1
  store %struct.Memory* %loadMem_4ab623, %struct.Memory** %MEMORY
  %loadMem_4ab626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18981 = getelementptr inbounds %struct.GPR, %struct.GPR* %18980, i32 0, i32 33
  %18982 = getelementptr inbounds %struct.Reg, %struct.Reg* %18981, i32 0, i32 0
  %PC.i1962 = bitcast %union.anon* %18982 to i64*
  %18983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18984 = getelementptr inbounds %struct.GPR, %struct.GPR* %18983, i32 0, i32 7
  %18985 = getelementptr inbounds %struct.Reg, %struct.Reg* %18984, i32 0, i32 0
  %RDX.i1963 = bitcast %union.anon* %18985 to i64*
  %18986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18987 = getelementptr inbounds %struct.GPR, %struct.GPR* %18986, i32 0, i32 15
  %18988 = getelementptr inbounds %struct.Reg, %struct.Reg* %18987, i32 0, i32 0
  %RBP.i1964 = bitcast %union.anon* %18988 to i64*
  %18989 = load i64, i64* %RBP.i1964
  %18990 = sub i64 %18989, 28
  %18991 = load i64, i64* %PC.i1962
  %18992 = add i64 %18991, 4
  store i64 %18992, i64* %PC.i1962
  %18993 = inttoptr i64 %18990 to i32*
  %18994 = load i32, i32* %18993
  %18995 = sext i32 %18994 to i64
  store i64 %18995, i64* %RDX.i1963, align 8
  store %struct.Memory* %loadMem_4ab626, %struct.Memory** %MEMORY
  %loadMem_4ab62a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18997 = getelementptr inbounds %struct.GPR, %struct.GPR* %18996, i32 0, i32 33
  %18998 = getelementptr inbounds %struct.Reg, %struct.Reg* %18997, i32 0, i32 0
  %PC.i1958 = bitcast %union.anon* %18998 to i64*
  %18999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19000 = getelementptr inbounds %struct.GPR, %struct.GPR* %18999, i32 0, i32 1
  %19001 = getelementptr inbounds %struct.Reg, %struct.Reg* %19000, i32 0, i32 0
  %RAX.i1959 = bitcast %union.anon* %19001 to i64*
  %19002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19003 = getelementptr inbounds %struct.GPR, %struct.GPR* %19002, i32 0, i32 5
  %19004 = getelementptr inbounds %struct.Reg, %struct.Reg* %19003, i32 0, i32 0
  %RCX.i1960 = bitcast %union.anon* %19004 to i64*
  %19005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19006 = getelementptr inbounds %struct.GPR, %struct.GPR* %19005, i32 0, i32 7
  %19007 = getelementptr inbounds %struct.Reg, %struct.Reg* %19006, i32 0, i32 0
  %RDX.i1961 = bitcast %union.anon* %19007 to i64*
  %19008 = load i64, i64* %RCX.i1960
  %19009 = load i64, i64* %RAX.i1959
  %19010 = load i64, i64* %RDX.i1961
  %19011 = mul i64 %19010, 4
  %19012 = add i64 %19011, %19009
  %19013 = load i64, i64* %PC.i1958
  %19014 = add i64 %19013, 4
  store i64 %19014, i64* %PC.i1958
  %19015 = inttoptr i64 %19012 to i32*
  %19016 = load i32, i32* %19015
  %19017 = shl i64 %19008, 32
  %19018 = ashr exact i64 %19017, 32
  %19019 = sext i32 %19016 to i64
  %19020 = mul i64 %19019, %19018
  %19021 = trunc i64 %19020 to i32
  %19022 = and i64 %19020, 4294967295
  store i64 %19022, i64* %RCX.i1960, align 8
  %19023 = shl i64 %19020, 32
  %19024 = ashr exact i64 %19023, 32
  %19025 = icmp ne i64 %19024, %19020
  %19026 = zext i1 %19025 to i8
  %19027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19026, i8* %19027, align 1
  %19028 = and i32 %19021, 255
  %19029 = call i32 @llvm.ctpop.i32(i32 %19028)
  %19030 = trunc i32 %19029 to i8
  %19031 = and i8 %19030, 1
  %19032 = xor i8 %19031, 1
  %19033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19032, i8* %19033, align 1
  %19034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19034, align 1
  %19035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19035, align 1
  %19036 = lshr i32 %19021, 31
  %19037 = trunc i32 %19036 to i8
  %19038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19037, i8* %19038, align 1
  %19039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19026, i8* %19039, align 1
  store %struct.Memory* %loadMem_4ab62a, %struct.Memory** %MEMORY
  %loadMem_4ab62e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19041 = getelementptr inbounds %struct.GPR, %struct.GPR* %19040, i32 0, i32 33
  %19042 = getelementptr inbounds %struct.Reg, %struct.Reg* %19041, i32 0, i32 0
  %PC.i1955 = bitcast %union.anon* %19042 to i64*
  %19043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19044 = getelementptr inbounds %struct.GPR, %struct.GPR* %19043, i32 0, i32 9
  %19045 = getelementptr inbounds %struct.Reg, %struct.Reg* %19044, i32 0, i32 0
  %RSI.i1956 = bitcast %union.anon* %19045 to i64*
  %19046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19047 = getelementptr inbounds %struct.GPR, %struct.GPR* %19046, i32 0, i32 15
  %19048 = getelementptr inbounds %struct.Reg, %struct.Reg* %19047, i32 0, i32 0
  %RBP.i1957 = bitcast %union.anon* %19048 to i64*
  %19049 = load i64, i64* %RBP.i1957
  %19050 = sub i64 %19049, 72
  %19051 = load i64, i64* %PC.i1955
  %19052 = add i64 %19051, 3
  store i64 %19052, i64* %PC.i1955
  %19053 = inttoptr i64 %19050 to i32*
  %19054 = load i32, i32* %19053
  %19055 = zext i32 %19054 to i64
  store i64 %19055, i64* %RSI.i1956, align 8
  store %struct.Memory* %loadMem_4ab62e, %struct.Memory** %MEMORY
  %loadMem_4ab631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19057 = getelementptr inbounds %struct.GPR, %struct.GPR* %19056, i32 0, i32 33
  %19058 = getelementptr inbounds %struct.Reg, %struct.Reg* %19057, i32 0, i32 0
  %PC.i1952 = bitcast %union.anon* %19058 to i64*
  %19059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19060 = getelementptr inbounds %struct.GPR, %struct.GPR* %19059, i32 0, i32 5
  %19061 = getelementptr inbounds %struct.Reg, %struct.Reg* %19060, i32 0, i32 0
  %ECX.i1953 = bitcast %union.anon* %19061 to i32*
  %19062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19063 = getelementptr inbounds %struct.GPR, %struct.GPR* %19062, i32 0, i32 15
  %19064 = getelementptr inbounds %struct.Reg, %struct.Reg* %19063, i32 0, i32 0
  %RBP.i1954 = bitcast %union.anon* %19064 to i64*
  %19065 = load i64, i64* %RBP.i1954
  %19066 = sub i64 %19065, 712
  %19067 = load i32, i32* %ECX.i1953
  %19068 = zext i32 %19067 to i64
  %19069 = load i64, i64* %PC.i1952
  %19070 = add i64 %19069, 6
  store i64 %19070, i64* %PC.i1952
  %19071 = inttoptr i64 %19066 to i32*
  store i32 %19067, i32* %19071
  store %struct.Memory* %loadMem_4ab631, %struct.Memory** %MEMORY
  %loadMem_4ab637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19073 = getelementptr inbounds %struct.GPR, %struct.GPR* %19072, i32 0, i32 33
  %19074 = getelementptr inbounds %struct.Reg, %struct.Reg* %19073, i32 0, i32 0
  %PC.i1949 = bitcast %union.anon* %19074 to i64*
  %19075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19076 = getelementptr inbounds %struct.GPR, %struct.GPR* %19075, i32 0, i32 9
  %19077 = getelementptr inbounds %struct.Reg, %struct.Reg* %19076, i32 0, i32 0
  %ESI.i1950 = bitcast %union.anon* %19077 to i32*
  %19078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19079 = getelementptr inbounds %struct.GPR, %struct.GPR* %19078, i32 0, i32 5
  %19080 = getelementptr inbounds %struct.Reg, %struct.Reg* %19079, i32 0, i32 0
  %RCX.i1951 = bitcast %union.anon* %19080 to i64*
  %19081 = load i32, i32* %ESI.i1950
  %19082 = zext i32 %19081 to i64
  %19083 = load i64, i64* %PC.i1949
  %19084 = add i64 %19083, 2
  store i64 %19084, i64* %PC.i1949
  %19085 = and i64 %19082, 4294967295
  store i64 %19085, i64* %RCX.i1951, align 8
  store %struct.Memory* %loadMem_4ab637, %struct.Memory** %MEMORY
  %loadMem_4ab639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19087 = getelementptr inbounds %struct.GPR, %struct.GPR* %19086, i32 0, i32 33
  %19088 = getelementptr inbounds %struct.Reg, %struct.Reg* %19087, i32 0, i32 0
  %PC.i1946 = bitcast %union.anon* %19088 to i64*
  %19089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19090 = getelementptr inbounds %struct.GPR, %struct.GPR* %19089, i32 0, i32 9
  %19091 = getelementptr inbounds %struct.Reg, %struct.Reg* %19090, i32 0, i32 0
  %RSI.i1947 = bitcast %union.anon* %19091 to i64*
  %19092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19093 = getelementptr inbounds %struct.GPR, %struct.GPR* %19092, i32 0, i32 15
  %19094 = getelementptr inbounds %struct.Reg, %struct.Reg* %19093, i32 0, i32 0
  %RBP.i1948 = bitcast %union.anon* %19094 to i64*
  %19095 = load i64, i64* %RBP.i1948
  %19096 = sub i64 %19095, 712
  %19097 = load i64, i64* %PC.i1946
  %19098 = add i64 %19097, 6
  store i64 %19098, i64* %PC.i1946
  %19099 = inttoptr i64 %19096 to i32*
  %19100 = load i32, i32* %19099
  %19101 = zext i32 %19100 to i64
  store i64 %19101, i64* %RSI.i1947, align 8
  store %struct.Memory* %loadMem_4ab639, %struct.Memory** %MEMORY
  %loadMem_4ab63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19103 = getelementptr inbounds %struct.GPR, %struct.GPR* %19102, i32 0, i32 33
  %19104 = getelementptr inbounds %struct.Reg, %struct.Reg* %19103, i32 0, i32 0
  %PC.i1943 = bitcast %union.anon* %19104 to i64*
  %19105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19106 = getelementptr inbounds %struct.GPR, %struct.GPR* %19105, i32 0, i32 5
  %19107 = getelementptr inbounds %struct.Reg, %struct.Reg* %19106, i32 0, i32 0
  %19108 = bitcast %union.anon* %19107 to %struct.anon.2*
  %CL.i1944 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %19108, i32 0, i32 0
  %19109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19110 = getelementptr inbounds %struct.GPR, %struct.GPR* %19109, i32 0, i32 9
  %19111 = getelementptr inbounds %struct.Reg, %struct.Reg* %19110, i32 0, i32 0
  %RSI.i1945 = bitcast %union.anon* %19111 to i64*
  %19112 = load i64, i64* %RSI.i1945
  %19113 = load i8, i8* %CL.i1944
  %19114 = zext i8 %19113 to i64
  %19115 = load i64, i64* %PC.i1943
  %19116 = add i64 %19115, 2
  store i64 %19116, i64* %PC.i1943
  %19117 = trunc i64 %19114 to i5
  switch i5 %19117, label %19124 [
    i5 0, label %routine_shll__cl___esi.exit
    i5 1, label %19118
  ]

; <label>:19118:                                  ; preds = %block_4ab603
  %19119 = trunc i64 %19112 to i32
  %19120 = shl i32 %19119, 1
  %19121 = icmp slt i32 %19119, 0
  %19122 = icmp slt i32 %19120, 0
  %19123 = xor i1 %19121, %19122
  br label %19133

; <label>:19124:                                  ; preds = %block_4ab603
  %19125 = and i64 %19114, 31
  %19126 = add i64 %19125, 4294967295
  %19127 = and i64 %19112, 4294967295
  %19128 = and i64 %19126, 4294967295
  %19129 = shl i64 %19127, %19128
  %19130 = trunc i64 %19129 to i32
  %19131 = icmp slt i32 %19130, 0
  %19132 = shl i32 %19130, 1
  br label %19133

; <label>:19133:                                  ; preds = %19124, %19118
  %19134 = phi i1 [ %19121, %19118 ], [ %19131, %19124 ]
  %19135 = phi i1 [ %19123, %19118 ], [ false, %19124 ]
  %19136 = phi i32 [ %19120, %19118 ], [ %19132, %19124 ]
  %19137 = zext i32 %19136 to i64
  store i64 %19137, i64* %RSI.i1945, align 8
  %19138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19139 = zext i1 %19134 to i8
  store i8 %19139, i8* %19138, align 1
  %19140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19141 = and i32 %19136, 254
  %19142 = call i32 @llvm.ctpop.i32(i32 %19141)
  %19143 = trunc i32 %19142 to i8
  %19144 = and i8 %19143, 1
  %19145 = xor i8 %19144, 1
  store i8 %19145, i8* %19140, align 1
  %19146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19146, align 1
  %19147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19148 = icmp eq i32 %19136, 0
  %19149 = zext i1 %19148 to i8
  store i8 %19149, i8* %19147, align 1
  %19150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19151 = lshr i32 %19136, 31
  %19152 = trunc i32 %19151 to i8
  store i8 %19152, i8* %19150, align 1
  %19153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19154 = zext i1 %19135 to i8
  store i8 %19154, i8* %19153, align 1
  br label %routine_shll__cl___esi.exit

routine_shll__cl___esi.exit:                      ; preds = %block_4ab603, %19133
  store %struct.Memory* %loadMem_4ab63f, %struct.Memory** %MEMORY
  %loadMem_4ab641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19156 = getelementptr inbounds %struct.GPR, %struct.GPR* %19155, i32 0, i32 33
  %19157 = getelementptr inbounds %struct.Reg, %struct.Reg* %19156, i32 0, i32 0
  %PC.i1940 = bitcast %union.anon* %19157 to i64*
  %19158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19159 = getelementptr inbounds %struct.GPR, %struct.GPR* %19158, i32 0, i32 9
  %19160 = getelementptr inbounds %struct.Reg, %struct.Reg* %19159, i32 0, i32 0
  %ESI.i1941 = bitcast %union.anon* %19160 to i32*
  %19161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19162 = getelementptr inbounds %struct.GPR, %struct.GPR* %19161, i32 0, i32 15
  %19163 = getelementptr inbounds %struct.Reg, %struct.Reg* %19162, i32 0, i32 0
  %RBP.i1942 = bitcast %union.anon* %19163 to i64*
  %19164 = load i64, i64* %RBP.i1942
  %19165 = sub i64 %19164, 32
  %19166 = load i32, i32* %ESI.i1941
  %19167 = zext i32 %19166 to i64
  %19168 = load i64, i64* %PC.i1940
  %19169 = add i64 %19168, 3
  store i64 %19169, i64* %PC.i1940
  %19170 = inttoptr i64 %19165 to i32*
  store i32 %19166, i32* %19170
  store %struct.Memory* %loadMem_4ab641, %struct.Memory** %MEMORY
  %loadMem_4ab644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19172 = getelementptr inbounds %struct.GPR, %struct.GPR* %19171, i32 0, i32 33
  %19173 = getelementptr inbounds %struct.Reg, %struct.Reg* %19172, i32 0, i32 0
  %PC.i1939 = bitcast %union.anon* %19173 to i64*
  %19174 = load i64, i64* %PC.i1939
  %19175 = add i64 %19174, 73
  %19176 = load i64, i64* %PC.i1939
  %19177 = add i64 %19176, 5
  store i64 %19177, i64* %PC.i1939
  %19178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19175, i64* %19178, align 8
  store %struct.Memory* %loadMem_4ab644, %struct.Memory** %MEMORY
  br label %block_.L_4ab68d

block_.L_4ab649:                                  ; preds = %block_.L_4ab5f9
  %loadMem_4ab649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19180 = getelementptr inbounds %struct.GPR, %struct.GPR* %19179, i32 0, i32 33
  %19181 = getelementptr inbounds %struct.Reg, %struct.Reg* %19180, i32 0, i32 0
  %PC.i1937 = bitcast %union.anon* %19181 to i64*
  %19182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19183 = getelementptr inbounds %struct.GPR, %struct.GPR* %19182, i32 0, i32 1
  %19184 = getelementptr inbounds %struct.Reg, %struct.Reg* %19183, i32 0, i32 0
  %RAX.i1938 = bitcast %union.anon* %19184 to i64*
  %19185 = load i64, i64* %PC.i1937
  %19186 = add i64 %19185, 10
  store i64 %19186, i64* %PC.i1937
  store i64 ptrtoint (%G__0x6d12c0_type* @G__0x6d12c0 to i64), i64* %RAX.i1938, align 8
  store %struct.Memory* %loadMem_4ab649, %struct.Memory** %MEMORY
  %loadMem_4ab653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19188 = getelementptr inbounds %struct.GPR, %struct.GPR* %19187, i32 0, i32 33
  %19189 = getelementptr inbounds %struct.Reg, %struct.Reg* %19188, i32 0, i32 0
  %PC.i1934 = bitcast %union.anon* %19189 to i64*
  %19190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19191 = getelementptr inbounds %struct.GPR, %struct.GPR* %19190, i32 0, i32 5
  %19192 = getelementptr inbounds %struct.Reg, %struct.Reg* %19191, i32 0, i32 0
  %RCX.i1935 = bitcast %union.anon* %19192 to i64*
  %19193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19194 = getelementptr inbounds %struct.GPR, %struct.GPR* %19193, i32 0, i32 15
  %19195 = getelementptr inbounds %struct.Reg, %struct.Reg* %19194, i32 0, i32 0
  %RBP.i1936 = bitcast %union.anon* %19195 to i64*
  %19196 = load i64, i64* %RBP.i1936
  %19197 = sub i64 %19196, 44
  %19198 = load i64, i64* %PC.i1934
  %19199 = add i64 %19198, 3
  store i64 %19199, i64* %PC.i1934
  %19200 = inttoptr i64 %19197 to i32*
  %19201 = load i32, i32* %19200
  %19202 = zext i32 %19201 to i64
  store i64 %19202, i64* %RCX.i1935, align 8
  store %struct.Memory* %loadMem_4ab653, %struct.Memory** %MEMORY
  %loadMem_4ab656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19204 = getelementptr inbounds %struct.GPR, %struct.GPR* %19203, i32 0, i32 33
  %19205 = getelementptr inbounds %struct.Reg, %struct.Reg* %19204, i32 0, i32 0
  %PC.i1931 = bitcast %union.anon* %19205 to i64*
  %19206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19207 = getelementptr inbounds %struct.GPR, %struct.GPR* %19206, i32 0, i32 7
  %19208 = getelementptr inbounds %struct.Reg, %struct.Reg* %19207, i32 0, i32 0
  %RDX.i1932 = bitcast %union.anon* %19208 to i64*
  %19209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19210 = getelementptr inbounds %struct.GPR, %struct.GPR* %19209, i32 0, i32 15
  %19211 = getelementptr inbounds %struct.Reg, %struct.Reg* %19210, i32 0, i32 0
  %RBP.i1933 = bitcast %union.anon* %19211 to i64*
  %19212 = load i64, i64* %RBP.i1933
  %19213 = sub i64 %19212, 64
  %19214 = load i64, i64* %PC.i1931
  %19215 = add i64 %19214, 4
  store i64 %19215, i64* %PC.i1931
  %19216 = inttoptr i64 %19213 to i32*
  %19217 = load i32, i32* %19216
  %19218 = sext i32 %19217 to i64
  store i64 %19218, i64* %RDX.i1932, align 8
  store %struct.Memory* %loadMem_4ab656, %struct.Memory** %MEMORY
  %loadMem_4ab65a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19220 = getelementptr inbounds %struct.GPR, %struct.GPR* %19219, i32 0, i32 33
  %19221 = getelementptr inbounds %struct.Reg, %struct.Reg* %19220, i32 0, i32 0
  %PC.i1929 = bitcast %union.anon* %19221 to i64*
  %19222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19223 = getelementptr inbounds %struct.GPR, %struct.GPR* %19222, i32 0, i32 7
  %19224 = getelementptr inbounds %struct.Reg, %struct.Reg* %19223, i32 0, i32 0
  %RDX.i1930 = bitcast %union.anon* %19224 to i64*
  %19225 = load i64, i64* %RDX.i1930
  %19226 = load i64, i64* %PC.i1929
  %19227 = add i64 %19226, 4
  store i64 %19227, i64* %PC.i1929
  %19228 = shl i64 %19225, 7
  %19229 = icmp slt i64 %19228, 0
  %19230 = shl i64 %19228, 1
  store i64 %19230, i64* %RDX.i1930, align 8
  %19231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19232 = zext i1 %19229 to i8
  store i8 %19232, i8* %19231, align 1
  %19233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19234 = trunc i64 %19230 to i32
  store i8 1, i8* %19233, align 1
  %19235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19235, align 1
  %19236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19237 = icmp eq i64 %19230, 0
  %19238 = zext i1 %19237 to i8
  store i8 %19238, i8* %19236, align 1
  %19239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19240 = lshr i64 %19230, 63
  %19241 = trunc i64 %19240 to i8
  store i8 %19241, i8* %19239, align 1
  %19242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19242, align 1
  store %struct.Memory* %loadMem_4ab65a, %struct.Memory** %MEMORY
  %loadMem_4ab65e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19244 = getelementptr inbounds %struct.GPR, %struct.GPR* %19243, i32 0, i32 33
  %19245 = getelementptr inbounds %struct.Reg, %struct.Reg* %19244, i32 0, i32 0
  %PC.i1926 = bitcast %union.anon* %19245 to i64*
  %19246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19247 = getelementptr inbounds %struct.GPR, %struct.GPR* %19246, i32 0, i32 1
  %19248 = getelementptr inbounds %struct.Reg, %struct.Reg* %19247, i32 0, i32 0
  %RAX.i1927 = bitcast %union.anon* %19248 to i64*
  %19249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19250 = getelementptr inbounds %struct.GPR, %struct.GPR* %19249, i32 0, i32 7
  %19251 = getelementptr inbounds %struct.Reg, %struct.Reg* %19250, i32 0, i32 0
  %RDX.i1928 = bitcast %union.anon* %19251 to i64*
  %19252 = load i64, i64* %RAX.i1927
  %19253 = load i64, i64* %RDX.i1928
  %19254 = load i64, i64* %PC.i1926
  %19255 = add i64 %19254, 3
  store i64 %19255, i64* %PC.i1926
  %19256 = add i64 %19253, %19252
  store i64 %19256, i64* %RAX.i1927, align 8
  %19257 = icmp ult i64 %19256, %19252
  %19258 = icmp ult i64 %19256, %19253
  %19259 = or i1 %19257, %19258
  %19260 = zext i1 %19259 to i8
  %19261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19260, i8* %19261, align 1
  %19262 = trunc i64 %19256 to i32
  %19263 = and i32 %19262, 255
  %19264 = call i32 @llvm.ctpop.i32(i32 %19263)
  %19265 = trunc i32 %19264 to i8
  %19266 = and i8 %19265, 1
  %19267 = xor i8 %19266, 1
  %19268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19267, i8* %19268, align 1
  %19269 = xor i64 %19253, %19252
  %19270 = xor i64 %19269, %19256
  %19271 = lshr i64 %19270, 4
  %19272 = trunc i64 %19271 to i8
  %19273 = and i8 %19272, 1
  %19274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19273, i8* %19274, align 1
  %19275 = icmp eq i64 %19256, 0
  %19276 = zext i1 %19275 to i8
  %19277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19276, i8* %19277, align 1
  %19278 = lshr i64 %19256, 63
  %19279 = trunc i64 %19278 to i8
  %19280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19279, i8* %19280, align 1
  %19281 = lshr i64 %19252, 63
  %19282 = lshr i64 %19253, 63
  %19283 = xor i64 %19278, %19281
  %19284 = xor i64 %19278, %19282
  %19285 = add i64 %19283, %19284
  %19286 = icmp eq i64 %19285, 2
  %19287 = zext i1 %19286 to i8
  %19288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19287, i8* %19288, align 1
  store %struct.Memory* %loadMem_4ab65e, %struct.Memory** %MEMORY
  %loadMem_4ab661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19290 = getelementptr inbounds %struct.GPR, %struct.GPR* %19289, i32 0, i32 33
  %19291 = getelementptr inbounds %struct.Reg, %struct.Reg* %19290, i32 0, i32 0
  %PC.i1923 = bitcast %union.anon* %19291 to i64*
  %19292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19293 = getelementptr inbounds %struct.GPR, %struct.GPR* %19292, i32 0, i32 7
  %19294 = getelementptr inbounds %struct.Reg, %struct.Reg* %19293, i32 0, i32 0
  %RDX.i1924 = bitcast %union.anon* %19294 to i64*
  %19295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19296 = getelementptr inbounds %struct.GPR, %struct.GPR* %19295, i32 0, i32 15
  %19297 = getelementptr inbounds %struct.Reg, %struct.Reg* %19296, i32 0, i32 0
  %RBP.i1925 = bitcast %union.anon* %19297 to i64*
  %19298 = load i64, i64* %RBP.i1925
  %19299 = sub i64 %19298, 24
  %19300 = load i64, i64* %PC.i1923
  %19301 = add i64 %19300, 4
  store i64 %19301, i64* %PC.i1923
  %19302 = inttoptr i64 %19299 to i32*
  %19303 = load i32, i32* %19302
  %19304 = sext i32 %19303 to i64
  store i64 %19304, i64* %RDX.i1924, align 8
  store %struct.Memory* %loadMem_4ab661, %struct.Memory** %MEMORY
  %loadMem_4ab665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19306 = getelementptr inbounds %struct.GPR, %struct.GPR* %19305, i32 0, i32 33
  %19307 = getelementptr inbounds %struct.Reg, %struct.Reg* %19306, i32 0, i32 0
  %PC.i1921 = bitcast %union.anon* %19307 to i64*
  %19308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19309 = getelementptr inbounds %struct.GPR, %struct.GPR* %19308, i32 0, i32 7
  %19310 = getelementptr inbounds %struct.Reg, %struct.Reg* %19309, i32 0, i32 0
  %RDX.i1922 = bitcast %union.anon* %19310 to i64*
  %19311 = load i64, i64* %RDX.i1922
  %19312 = load i64, i64* %PC.i1921
  %19313 = add i64 %19312, 4
  store i64 %19313, i64* %PC.i1921
  %19314 = shl i64 %19311, 4
  %19315 = icmp slt i64 %19314, 0
  %19316 = shl i64 %19314, 1
  store i64 %19316, i64* %RDX.i1922, align 8
  %19317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19318 = zext i1 %19315 to i8
  store i8 %19318, i8* %19317, align 1
  %19319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19320 = trunc i64 %19316 to i32
  %19321 = and i32 %19320, 254
  %19322 = call i32 @llvm.ctpop.i32(i32 %19321)
  %19323 = trunc i32 %19322 to i8
  %19324 = and i8 %19323, 1
  %19325 = xor i8 %19324, 1
  store i8 %19325, i8* %19319, align 1
  %19326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19326, align 1
  %19327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19328 = icmp eq i64 %19316, 0
  %19329 = zext i1 %19328 to i8
  store i8 %19329, i8* %19327, align 1
  %19330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19331 = lshr i64 %19316, 63
  %19332 = trunc i64 %19331 to i8
  store i8 %19332, i8* %19330, align 1
  %19333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19333, align 1
  store %struct.Memory* %loadMem_4ab665, %struct.Memory** %MEMORY
  %loadMem_4ab669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19335 = getelementptr inbounds %struct.GPR, %struct.GPR* %19334, i32 0, i32 33
  %19336 = getelementptr inbounds %struct.Reg, %struct.Reg* %19335, i32 0, i32 0
  %PC.i1918 = bitcast %union.anon* %19336 to i64*
  %19337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19338 = getelementptr inbounds %struct.GPR, %struct.GPR* %19337, i32 0, i32 1
  %19339 = getelementptr inbounds %struct.Reg, %struct.Reg* %19338, i32 0, i32 0
  %RAX.i1919 = bitcast %union.anon* %19339 to i64*
  %19340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19341 = getelementptr inbounds %struct.GPR, %struct.GPR* %19340, i32 0, i32 7
  %19342 = getelementptr inbounds %struct.Reg, %struct.Reg* %19341, i32 0, i32 0
  %RDX.i1920 = bitcast %union.anon* %19342 to i64*
  %19343 = load i64, i64* %RAX.i1919
  %19344 = load i64, i64* %RDX.i1920
  %19345 = load i64, i64* %PC.i1918
  %19346 = add i64 %19345, 3
  store i64 %19346, i64* %PC.i1918
  %19347 = add i64 %19344, %19343
  store i64 %19347, i64* %RAX.i1919, align 8
  %19348 = icmp ult i64 %19347, %19343
  %19349 = icmp ult i64 %19347, %19344
  %19350 = or i1 %19348, %19349
  %19351 = zext i1 %19350 to i8
  %19352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19351, i8* %19352, align 1
  %19353 = trunc i64 %19347 to i32
  %19354 = and i32 %19353, 255
  %19355 = call i32 @llvm.ctpop.i32(i32 %19354)
  %19356 = trunc i32 %19355 to i8
  %19357 = and i8 %19356, 1
  %19358 = xor i8 %19357, 1
  %19359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19358, i8* %19359, align 1
  %19360 = xor i64 %19344, %19343
  %19361 = xor i64 %19360, %19347
  %19362 = lshr i64 %19361, 4
  %19363 = trunc i64 %19362 to i8
  %19364 = and i8 %19363, 1
  %19365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19364, i8* %19365, align 1
  %19366 = icmp eq i64 %19347, 0
  %19367 = zext i1 %19366 to i8
  %19368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19367, i8* %19368, align 1
  %19369 = lshr i64 %19347, 63
  %19370 = trunc i64 %19369 to i8
  %19371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19370, i8* %19371, align 1
  %19372 = lshr i64 %19343, 63
  %19373 = lshr i64 %19344, 63
  %19374 = xor i64 %19369, %19372
  %19375 = xor i64 %19369, %19373
  %19376 = add i64 %19374, %19375
  %19377 = icmp eq i64 %19376, 2
  %19378 = zext i1 %19377 to i8
  %19379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19378, i8* %19379, align 1
  store %struct.Memory* %loadMem_4ab669, %struct.Memory** %MEMORY
  %loadMem_4ab66c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19381 = getelementptr inbounds %struct.GPR, %struct.GPR* %19380, i32 0, i32 33
  %19382 = getelementptr inbounds %struct.Reg, %struct.Reg* %19381, i32 0, i32 0
  %PC.i1915 = bitcast %union.anon* %19382 to i64*
  %19383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19384 = getelementptr inbounds %struct.GPR, %struct.GPR* %19383, i32 0, i32 7
  %19385 = getelementptr inbounds %struct.Reg, %struct.Reg* %19384, i32 0, i32 0
  %RDX.i1916 = bitcast %union.anon* %19385 to i64*
  %19386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19387 = getelementptr inbounds %struct.GPR, %struct.GPR* %19386, i32 0, i32 15
  %19388 = getelementptr inbounds %struct.Reg, %struct.Reg* %19387, i32 0, i32 0
  %RBP.i1917 = bitcast %union.anon* %19388 to i64*
  %19389 = load i64, i64* %RBP.i1917
  %19390 = sub i64 %19389, 28
  %19391 = load i64, i64* %PC.i1915
  %19392 = add i64 %19391, 4
  store i64 %19392, i64* %PC.i1915
  %19393 = inttoptr i64 %19390 to i32*
  %19394 = load i32, i32* %19393
  %19395 = sext i32 %19394 to i64
  store i64 %19395, i64* %RDX.i1916, align 8
  store %struct.Memory* %loadMem_4ab66c, %struct.Memory** %MEMORY
  %loadMem_4ab670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19397 = getelementptr inbounds %struct.GPR, %struct.GPR* %19396, i32 0, i32 33
  %19398 = getelementptr inbounds %struct.Reg, %struct.Reg* %19397, i32 0, i32 0
  %PC.i1911 = bitcast %union.anon* %19398 to i64*
  %19399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19400 = getelementptr inbounds %struct.GPR, %struct.GPR* %19399, i32 0, i32 1
  %19401 = getelementptr inbounds %struct.Reg, %struct.Reg* %19400, i32 0, i32 0
  %RAX.i1912 = bitcast %union.anon* %19401 to i64*
  %19402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19403 = getelementptr inbounds %struct.GPR, %struct.GPR* %19402, i32 0, i32 5
  %19404 = getelementptr inbounds %struct.Reg, %struct.Reg* %19403, i32 0, i32 0
  %RCX.i1913 = bitcast %union.anon* %19404 to i64*
  %19405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19406 = getelementptr inbounds %struct.GPR, %struct.GPR* %19405, i32 0, i32 7
  %19407 = getelementptr inbounds %struct.Reg, %struct.Reg* %19406, i32 0, i32 0
  %RDX.i1914 = bitcast %union.anon* %19407 to i64*
  %19408 = load i64, i64* %RCX.i1913
  %19409 = load i64, i64* %RAX.i1912
  %19410 = load i64, i64* %RDX.i1914
  %19411 = mul i64 %19410, 4
  %19412 = add i64 %19411, %19409
  %19413 = load i64, i64* %PC.i1911
  %19414 = add i64 %19413, 4
  store i64 %19414, i64* %PC.i1911
  %19415 = inttoptr i64 %19412 to i32*
  %19416 = load i32, i32* %19415
  %19417 = shl i64 %19408, 32
  %19418 = ashr exact i64 %19417, 32
  %19419 = sext i32 %19416 to i64
  %19420 = mul i64 %19419, %19418
  %19421 = trunc i64 %19420 to i32
  %19422 = and i64 %19420, 4294967295
  store i64 %19422, i64* %RCX.i1913, align 8
  %19423 = shl i64 %19420, 32
  %19424 = ashr exact i64 %19423, 32
  %19425 = icmp ne i64 %19424, %19420
  %19426 = zext i1 %19425 to i8
  %19427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19426, i8* %19427, align 1
  %19428 = and i32 %19421, 255
  %19429 = call i32 @llvm.ctpop.i32(i32 %19428)
  %19430 = trunc i32 %19429 to i8
  %19431 = and i8 %19430, 1
  %19432 = xor i8 %19431, 1
  %19433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19432, i8* %19433, align 1
  %19434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19434, align 1
  %19435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19435, align 1
  %19436 = lshr i32 %19421, 31
  %19437 = trunc i32 %19436 to i8
  %19438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19437, i8* %19438, align 1
  %19439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19426, i8* %19439, align 1
  store %struct.Memory* %loadMem_4ab670, %struct.Memory** %MEMORY
  %loadMem_4ab674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19441 = getelementptr inbounds %struct.GPR, %struct.GPR* %19440, i32 0, i32 33
  %19442 = getelementptr inbounds %struct.Reg, %struct.Reg* %19441, i32 0, i32 0
  %PC.i1908 = bitcast %union.anon* %19442 to i64*
  %19443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19444 = getelementptr inbounds %struct.GPR, %struct.GPR* %19443, i32 0, i32 5
  %19445 = getelementptr inbounds %struct.Reg, %struct.Reg* %19444, i32 0, i32 0
  %RCX.i1909 = bitcast %union.anon* %19445 to i64*
  %19446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19447 = getelementptr inbounds %struct.GPR, %struct.GPR* %19446, i32 0, i32 15
  %19448 = getelementptr inbounds %struct.Reg, %struct.Reg* %19447, i32 0, i32 0
  %RBP.i1910 = bitcast %union.anon* %19448 to i64*
  %19449 = load i64, i64* %RCX.i1909
  %19450 = load i64, i64* %RBP.i1910
  %19451 = sub i64 %19450, 80
  %19452 = load i64, i64* %PC.i1908
  %19453 = add i64 %19452, 3
  store i64 %19453, i64* %PC.i1908
  %19454 = trunc i64 %19449 to i32
  %19455 = inttoptr i64 %19451 to i32*
  %19456 = load i32, i32* %19455
  %19457 = add i32 %19456, %19454
  %19458 = zext i32 %19457 to i64
  store i64 %19458, i64* %RCX.i1909, align 8
  %19459 = icmp ult i32 %19457, %19454
  %19460 = icmp ult i32 %19457, %19456
  %19461 = or i1 %19459, %19460
  %19462 = zext i1 %19461 to i8
  %19463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19462, i8* %19463, align 1
  %19464 = and i32 %19457, 255
  %19465 = call i32 @llvm.ctpop.i32(i32 %19464)
  %19466 = trunc i32 %19465 to i8
  %19467 = and i8 %19466, 1
  %19468 = xor i8 %19467, 1
  %19469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19468, i8* %19469, align 1
  %19470 = xor i32 %19456, %19454
  %19471 = xor i32 %19470, %19457
  %19472 = lshr i32 %19471, 4
  %19473 = trunc i32 %19472 to i8
  %19474 = and i8 %19473, 1
  %19475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19474, i8* %19475, align 1
  %19476 = icmp eq i32 %19457, 0
  %19477 = zext i1 %19476 to i8
  %19478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19477, i8* %19478, align 1
  %19479 = lshr i32 %19457, 31
  %19480 = trunc i32 %19479 to i8
  %19481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19480, i8* %19481, align 1
  %19482 = lshr i32 %19454, 31
  %19483 = lshr i32 %19456, 31
  %19484 = xor i32 %19479, %19482
  %19485 = xor i32 %19479, %19483
  %19486 = add i32 %19484, %19485
  %19487 = icmp eq i32 %19486, 2
  %19488 = zext i1 %19487 to i8
  %19489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19488, i8* %19489, align 1
  store %struct.Memory* %loadMem_4ab674, %struct.Memory** %MEMORY
  %loadMem_4ab677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19491 = getelementptr inbounds %struct.GPR, %struct.GPR* %19490, i32 0, i32 33
  %19492 = getelementptr inbounds %struct.Reg, %struct.Reg* %19491, i32 0, i32 0
  %PC.i1905 = bitcast %union.anon* %19492 to i64*
  %19493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19494 = getelementptr inbounds %struct.GPR, %struct.GPR* %19493, i32 0, i32 9
  %19495 = getelementptr inbounds %struct.Reg, %struct.Reg* %19494, i32 0, i32 0
  %RSI.i1906 = bitcast %union.anon* %19495 to i64*
  %19496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19497 = getelementptr inbounds %struct.GPR, %struct.GPR* %19496, i32 0, i32 15
  %19498 = getelementptr inbounds %struct.Reg, %struct.Reg* %19497, i32 0, i32 0
  %RBP.i1907 = bitcast %union.anon* %19498 to i64*
  %19499 = load i64, i64* %RBP.i1907
  %19500 = sub i64 %19499, 76
  %19501 = load i64, i64* %PC.i1905
  %19502 = add i64 %19501, 3
  store i64 %19502, i64* %PC.i1905
  %19503 = inttoptr i64 %19500 to i32*
  %19504 = load i32, i32* %19503
  %19505 = zext i32 %19504 to i64
  store i64 %19505, i64* %RSI.i1906, align 8
  store %struct.Memory* %loadMem_4ab677, %struct.Memory** %MEMORY
  %loadMem_4ab67a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19507 = getelementptr inbounds %struct.GPR, %struct.GPR* %19506, i32 0, i32 33
  %19508 = getelementptr inbounds %struct.Reg, %struct.Reg* %19507, i32 0, i32 0
  %PC.i1902 = bitcast %union.anon* %19508 to i64*
  %19509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19510 = getelementptr inbounds %struct.GPR, %struct.GPR* %19509, i32 0, i32 5
  %19511 = getelementptr inbounds %struct.Reg, %struct.Reg* %19510, i32 0, i32 0
  %ECX.i1903 = bitcast %union.anon* %19511 to i32*
  %19512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19513 = getelementptr inbounds %struct.GPR, %struct.GPR* %19512, i32 0, i32 15
  %19514 = getelementptr inbounds %struct.Reg, %struct.Reg* %19513, i32 0, i32 0
  %RBP.i1904 = bitcast %union.anon* %19514 to i64*
  %19515 = load i64, i64* %RBP.i1904
  %19516 = sub i64 %19515, 716
  %19517 = load i32, i32* %ECX.i1903
  %19518 = zext i32 %19517 to i64
  %19519 = load i64, i64* %PC.i1902
  %19520 = add i64 %19519, 6
  store i64 %19520, i64* %PC.i1902
  %19521 = inttoptr i64 %19516 to i32*
  store i32 %19517, i32* %19521
  store %struct.Memory* %loadMem_4ab67a, %struct.Memory** %MEMORY
  %loadMem_4ab680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19523 = getelementptr inbounds %struct.GPR, %struct.GPR* %19522, i32 0, i32 33
  %19524 = getelementptr inbounds %struct.Reg, %struct.Reg* %19523, i32 0, i32 0
  %PC.i1899 = bitcast %union.anon* %19524 to i64*
  %19525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19526 = getelementptr inbounds %struct.GPR, %struct.GPR* %19525, i32 0, i32 9
  %19527 = getelementptr inbounds %struct.Reg, %struct.Reg* %19526, i32 0, i32 0
  %ESI.i1900 = bitcast %union.anon* %19527 to i32*
  %19528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19529 = getelementptr inbounds %struct.GPR, %struct.GPR* %19528, i32 0, i32 5
  %19530 = getelementptr inbounds %struct.Reg, %struct.Reg* %19529, i32 0, i32 0
  %RCX.i1901 = bitcast %union.anon* %19530 to i64*
  %19531 = load i32, i32* %ESI.i1900
  %19532 = zext i32 %19531 to i64
  %19533 = load i64, i64* %PC.i1899
  %19534 = add i64 %19533, 2
  store i64 %19534, i64* %PC.i1899
  %19535 = and i64 %19532, 4294967295
  store i64 %19535, i64* %RCX.i1901, align 8
  store %struct.Memory* %loadMem_4ab680, %struct.Memory** %MEMORY
  %loadMem_4ab682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19537 = getelementptr inbounds %struct.GPR, %struct.GPR* %19536, i32 0, i32 33
  %19538 = getelementptr inbounds %struct.Reg, %struct.Reg* %19537, i32 0, i32 0
  %PC.i1896 = bitcast %union.anon* %19538 to i64*
  %19539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19540 = getelementptr inbounds %struct.GPR, %struct.GPR* %19539, i32 0, i32 9
  %19541 = getelementptr inbounds %struct.Reg, %struct.Reg* %19540, i32 0, i32 0
  %RSI.i1897 = bitcast %union.anon* %19541 to i64*
  %19542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19543 = getelementptr inbounds %struct.GPR, %struct.GPR* %19542, i32 0, i32 15
  %19544 = getelementptr inbounds %struct.Reg, %struct.Reg* %19543, i32 0, i32 0
  %RBP.i1898 = bitcast %union.anon* %19544 to i64*
  %19545 = load i64, i64* %RBP.i1898
  %19546 = sub i64 %19545, 716
  %19547 = load i64, i64* %PC.i1896
  %19548 = add i64 %19547, 6
  store i64 %19548, i64* %PC.i1896
  %19549 = inttoptr i64 %19546 to i32*
  %19550 = load i32, i32* %19549
  %19551 = zext i32 %19550 to i64
  store i64 %19551, i64* %RSI.i1897, align 8
  store %struct.Memory* %loadMem_4ab682, %struct.Memory** %MEMORY
  %loadMem_4ab688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19553 = getelementptr inbounds %struct.GPR, %struct.GPR* %19552, i32 0, i32 33
  %19554 = getelementptr inbounds %struct.Reg, %struct.Reg* %19553, i32 0, i32 0
  %PC.i1893 = bitcast %union.anon* %19554 to i64*
  %19555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19556 = getelementptr inbounds %struct.GPR, %struct.GPR* %19555, i32 0, i32 5
  %19557 = getelementptr inbounds %struct.Reg, %struct.Reg* %19556, i32 0, i32 0
  %19558 = bitcast %union.anon* %19557 to %struct.anon.2*
  %CL.i1894 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %19558, i32 0, i32 0
  %19559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19560 = getelementptr inbounds %struct.GPR, %struct.GPR* %19559, i32 0, i32 9
  %19561 = getelementptr inbounds %struct.Reg, %struct.Reg* %19560, i32 0, i32 0
  %RSI.i1895 = bitcast %union.anon* %19561 to i64*
  %19562 = load i64, i64* %RSI.i1895
  %19563 = load i8, i8* %CL.i1894
  %19564 = zext i8 %19563 to i64
  %19565 = load i64, i64* %PC.i1893
  %19566 = add i64 %19565, 2
  store i64 %19566, i64* %PC.i1893
  %19567 = trunc i64 %19564 to i5
  switch i5 %19567, label %19571 [
    i5 0, label %routine_sarl__cl___esi.exit
    i5 1, label %19568
  ]

; <label>:19568:                                  ; preds = %block_.L_4ab649
  %19569 = shl i64 %19562, 32
  %19570 = ashr i64 %19569, 33
  br label %19578

; <label>:19571:                                  ; preds = %block_.L_4ab649
  %19572 = and i64 %19564, 31
  %19573 = add i64 %19572, -1
  %19574 = shl i64 %19562, 32
  %19575 = ashr exact i64 %19574, 32
  %19576 = ashr i64 %19575, %19573
  %19577 = lshr i64 %19576, 1
  br label %19578

; <label>:19578:                                  ; preds = %19571, %19568
  %19579 = phi i64 [ %19577, %19571 ], [ %19570, %19568 ]
  %19580 = phi i64 [ %19576, %19571 ], [ %19562, %19568 ]
  %19581 = trunc i64 %19580 to i8
  %19582 = and i8 %19581, 1
  %19583 = trunc i64 %19579 to i32
  %19584 = and i64 %19579, 4294967295
  store i64 %19584, i64* %RSI.i1895, align 8
  %19585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19582, i8* %19585, align 1
  %19586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19587 = and i32 %19583, 255
  %19588 = call i32 @llvm.ctpop.i32(i32 %19587)
  %19589 = trunc i32 %19588 to i8
  %19590 = and i8 %19589, 1
  %19591 = xor i8 %19590, 1
  store i8 %19591, i8* %19586, align 1
  %19592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19592, align 1
  %19593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19594 = icmp eq i32 %19583, 0
  %19595 = zext i1 %19594 to i8
  store i8 %19595, i8* %19593, align 1
  %19596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19597 = lshr i32 %19583, 31
  %19598 = trunc i32 %19597 to i8
  store i8 %19598, i8* %19596, align 1
  %19599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19599, align 1
  br label %routine_sarl__cl___esi.exit

routine_sarl__cl___esi.exit:                      ; preds = %block_.L_4ab649, %19578
  store %struct.Memory* %loadMem_4ab688, %struct.Memory** %MEMORY
  %loadMem_4ab68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19601 = getelementptr inbounds %struct.GPR, %struct.GPR* %19600, i32 0, i32 33
  %19602 = getelementptr inbounds %struct.Reg, %struct.Reg* %19601, i32 0, i32 0
  %PC.i1890 = bitcast %union.anon* %19602 to i64*
  %19603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19604 = getelementptr inbounds %struct.GPR, %struct.GPR* %19603, i32 0, i32 9
  %19605 = getelementptr inbounds %struct.Reg, %struct.Reg* %19604, i32 0, i32 0
  %ESI.i1891 = bitcast %union.anon* %19605 to i32*
  %19606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19607 = getelementptr inbounds %struct.GPR, %struct.GPR* %19606, i32 0, i32 15
  %19608 = getelementptr inbounds %struct.Reg, %struct.Reg* %19607, i32 0, i32 0
  %RBP.i1892 = bitcast %union.anon* %19608 to i64*
  %19609 = load i64, i64* %RBP.i1892
  %19610 = sub i64 %19609, 32
  %19611 = load i32, i32* %ESI.i1891
  %19612 = zext i32 %19611 to i64
  %19613 = load i64, i64* %PC.i1890
  %19614 = add i64 %19613, 3
  store i64 %19614, i64* %PC.i1890
  %19615 = inttoptr i64 %19610 to i32*
  store i32 %19611, i32* %19615
  store %struct.Memory* %loadMem_4ab68a, %struct.Memory** %MEMORY
  br label %block_.L_4ab68d

block_.L_4ab68d:                                  ; preds = %routine_sarl__cl___esi.exit, %routine_shll__cl___esi.exit
  %loadMem_4ab68d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19617 = getelementptr inbounds %struct.GPR, %struct.GPR* %19616, i32 0, i32 33
  %19618 = getelementptr inbounds %struct.Reg, %struct.Reg* %19617, i32 0, i32 0
  %PC.i1889 = bitcast %union.anon* %19618 to i64*
  %19619 = load i64, i64* %PC.i1889
  %19620 = add i64 %19619, 5
  %19621 = load i64, i64* %PC.i1889
  %19622 = add i64 %19621, 5
  store i64 %19622, i64* %PC.i1889
  %19623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19620, i64* %19623, align 8
  store %struct.Memory* %loadMem_4ab68d, %struct.Memory** %MEMORY
  br label %block_.L_4ab692

block_.L_4ab692:                                  ; preds = %block_.L_4ab68d, %block_.L_4ab5f4
  %loadMem_4ab692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19625 = getelementptr inbounds %struct.GPR, %struct.GPR* %19624, i32 0, i32 33
  %19626 = getelementptr inbounds %struct.Reg, %struct.Reg* %19625, i32 0, i32 0
  %PC.i1888 = bitcast %union.anon* %19626 to i64*
  %19627 = load i64, i64* %PC.i1888
  %19628 = add i64 %19627, 5
  %19629 = load i64, i64* %PC.i1888
  %19630 = add i64 %19629, 5
  store i64 %19630, i64* %PC.i1888
  %19631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19628, i64* %19631, align 8
  store %struct.Memory* %loadMem_4ab692, %struct.Memory** %MEMORY
  br label %block_.L_4ab697

block_.L_4ab697:                                  ; preds = %block_.L_4ab692, %block_4ab54b
  %loadMem_4ab697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19633 = getelementptr inbounds %struct.GPR, %struct.GPR* %19632, i32 0, i32 33
  %19634 = getelementptr inbounds %struct.Reg, %struct.Reg* %19633, i32 0, i32 0
  %PC.i1887 = bitcast %union.anon* %19634 to i64*
  %19635 = load i64, i64* %PC.i1887
  %19636 = add i64 %19635, 5
  %19637 = load i64, i64* %PC.i1887
  %19638 = add i64 %19637, 5
  store i64 %19638, i64* %PC.i1887
  %19639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19636, i64* %19639, align 8
  store %struct.Memory* %loadMem_4ab697, %struct.Memory** %MEMORY
  br label %block_.L_4ab69c

block_.L_4ab69c:                                  ; preds = %block_.L_4ab697, %block_.L_4ab2ff
  %loadMem_4ab69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19641 = getelementptr inbounds %struct.GPR, %struct.GPR* %19640, i32 0, i32 33
  %19642 = getelementptr inbounds %struct.Reg, %struct.Reg* %19641, i32 0, i32 0
  %PC.i1885 = bitcast %union.anon* %19642 to i64*
  %19643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19644 = getelementptr inbounds %struct.GPR, %struct.GPR* %19643, i32 0, i32 15
  %19645 = getelementptr inbounds %struct.Reg, %struct.Reg* %19644, i32 0, i32 0
  %RBP.i1886 = bitcast %union.anon* %19645 to i64*
  %19646 = load i64, i64* %RBP.i1886
  %19647 = sub i64 %19646, 412
  %19648 = load i64, i64* %PC.i1885
  %19649 = add i64 %19648, 7
  store i64 %19649, i64* %PC.i1885
  %19650 = inttoptr i64 %19647 to i32*
  %19651 = load i32, i32* %19650
  %19652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19652, align 1
  %19653 = and i32 %19651, 255
  %19654 = call i32 @llvm.ctpop.i32(i32 %19653)
  %19655 = trunc i32 %19654 to i8
  %19656 = and i8 %19655, 1
  %19657 = xor i8 %19656, 1
  %19658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19657, i8* %19658, align 1
  %19659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19659, align 1
  %19660 = icmp eq i32 %19651, 0
  %19661 = zext i1 %19660 to i8
  %19662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19661, i8* %19662, align 1
  %19663 = lshr i32 %19651, 31
  %19664 = trunc i32 %19663 to i8
  %19665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19664, i8* %19665, align 1
  %19666 = lshr i32 %19651, 31
  %19667 = xor i32 %19663, %19666
  %19668 = add i32 %19667, %19666
  %19669 = icmp eq i32 %19668, 2
  %19670 = zext i1 %19669 to i8
  %19671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19670, i8* %19671, align 1
  store %struct.Memory* %loadMem_4ab69c, %struct.Memory** %MEMORY
  %loadMem_4ab6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19673 = getelementptr inbounds %struct.GPR, %struct.GPR* %19672, i32 0, i32 33
  %19674 = getelementptr inbounds %struct.Reg, %struct.Reg* %19673, i32 0, i32 0
  %PC.i1884 = bitcast %union.anon* %19674 to i64*
  %19675 = load i64, i64* %PC.i1884
  %19676 = add i64 %19675, 42
  %19677 = load i64, i64* %PC.i1884
  %19678 = add i64 %19677, 6
  %19679 = load i64, i64* %PC.i1884
  %19680 = add i64 %19679, 6
  store i64 %19680, i64* %PC.i1884
  %19681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19682 = load i8, i8* %19681, align 1
  %19683 = icmp eq i8 %19682, 0
  %19684 = zext i1 %19683 to i8
  store i8 %19684, i8* %BRANCH_TAKEN, align 1
  %19685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19686 = select i1 %19683, i64 %19676, i64 %19678
  store i64 %19686, i64* %19685, align 8
  store %struct.Memory* %loadMem_4ab6a3, %struct.Memory** %MEMORY
  %loadBr_4ab6a3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab6a3 = icmp eq i8 %loadBr_4ab6a3, 1
  br i1 %cmpBr_4ab6a3, label %block_.L_4ab6cd, label %block_4ab6a9

block_4ab6a9:                                     ; preds = %block_.L_4ab69c
  %loadMem_4ab6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19688 = getelementptr inbounds %struct.GPR, %struct.GPR* %19687, i32 0, i32 33
  %19689 = getelementptr inbounds %struct.Reg, %struct.Reg* %19688, i32 0, i32 0
  %PC.i1881 = bitcast %union.anon* %19689 to i64*
  %19690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19691 = getelementptr inbounds %struct.GPR, %struct.GPR* %19690, i32 0, i32 1
  %19692 = getelementptr inbounds %struct.Reg, %struct.Reg* %19691, i32 0, i32 0
  %RAX.i1882 = bitcast %union.anon* %19692 to i64*
  %19693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19694 = getelementptr inbounds %struct.GPR, %struct.GPR* %19693, i32 0, i32 15
  %19695 = getelementptr inbounds %struct.Reg, %struct.Reg* %19694, i32 0, i32 0
  %RBP.i1883 = bitcast %union.anon* %19695 to i64*
  %19696 = load i64, i64* %RBP.i1883
  %19697 = sub i64 %19696, 32
  %19698 = load i64, i64* %PC.i1881
  %19699 = add i64 %19698, 3
  store i64 %19699, i64* %PC.i1881
  %19700 = inttoptr i64 %19697 to i32*
  %19701 = load i32, i32* %19700
  %19702 = zext i32 %19701 to i64
  store i64 %19702, i64* %RAX.i1882, align 8
  store %struct.Memory* %loadMem_4ab6a9, %struct.Memory** %MEMORY
  %loadMem_4ab6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %19703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19704 = getelementptr inbounds %struct.GPR, %struct.GPR* %19703, i32 0, i32 33
  %19705 = getelementptr inbounds %struct.Reg, %struct.Reg* %19704, i32 0, i32 0
  %PC.i1879 = bitcast %union.anon* %19705 to i64*
  %19706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19707 = getelementptr inbounds %struct.GPR, %struct.GPR* %19706, i32 0, i32 5
  %19708 = getelementptr inbounds %struct.Reg, %struct.Reg* %19707, i32 0, i32 0
  %RCX.i1880 = bitcast %union.anon* %19708 to i64*
  %19709 = load i64, i64* %PC.i1879
  %19710 = add i64 %19709, 8
  store i64 %19710, i64* %PC.i1879
  %19711 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %19711, i64* %RCX.i1880, align 8
  store %struct.Memory* %loadMem_4ab6ac, %struct.Memory** %MEMORY
  %loadMem_4ab6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19713 = getelementptr inbounds %struct.GPR, %struct.GPR* %19712, i32 0, i32 33
  %19714 = getelementptr inbounds %struct.Reg, %struct.Reg* %19713, i32 0, i32 0
  %PC.i1877 = bitcast %union.anon* %19714 to i64*
  %19715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19716 = getelementptr inbounds %struct.GPR, %struct.GPR* %19715, i32 0, i32 5
  %19717 = getelementptr inbounds %struct.Reg, %struct.Reg* %19716, i32 0, i32 0
  %RCX.i1878 = bitcast %union.anon* %19717 to i64*
  %19718 = load i64, i64* %RCX.i1878
  %19719 = load i64, i64* %PC.i1877
  %19720 = add i64 %19719, 7
  store i64 %19720, i64* %PC.i1877
  %19721 = add i64 13112, %19718
  store i64 %19721, i64* %RCX.i1878, align 8
  %19722 = icmp ult i64 %19721, %19718
  %19723 = icmp ult i64 %19721, 13112
  %19724 = or i1 %19722, %19723
  %19725 = zext i1 %19724 to i8
  %19726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19725, i8* %19726, align 1
  %19727 = trunc i64 %19721 to i32
  %19728 = and i32 %19727, 255
  %19729 = call i32 @llvm.ctpop.i32(i32 %19728)
  %19730 = trunc i32 %19729 to i8
  %19731 = and i8 %19730, 1
  %19732 = xor i8 %19731, 1
  %19733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19732, i8* %19733, align 1
  %19734 = xor i64 13112, %19718
  %19735 = xor i64 %19734, %19721
  %19736 = lshr i64 %19735, 4
  %19737 = trunc i64 %19736 to i8
  %19738 = and i8 %19737, 1
  %19739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19738, i8* %19739, align 1
  %19740 = icmp eq i64 %19721, 0
  %19741 = zext i1 %19740 to i8
  %19742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19741, i8* %19742, align 1
  %19743 = lshr i64 %19721, 63
  %19744 = trunc i64 %19743 to i8
  %19745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19744, i8* %19745, align 1
  %19746 = lshr i64 %19718, 63
  %19747 = xor i64 %19743, %19746
  %19748 = add i64 %19747, %19743
  %19749 = icmp eq i64 %19748, 2
  %19750 = zext i1 %19749 to i8
  %19751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19750, i8* %19751, align 1
  store %struct.Memory* %loadMem_4ab6b4, %struct.Memory** %MEMORY
  %loadMem_4ab6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %19752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19753 = getelementptr inbounds %struct.GPR, %struct.GPR* %19752, i32 0, i32 33
  %19754 = getelementptr inbounds %struct.Reg, %struct.Reg* %19753, i32 0, i32 0
  %PC.i1874 = bitcast %union.anon* %19754 to i64*
  %19755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19756 = getelementptr inbounds %struct.GPR, %struct.GPR* %19755, i32 0, i32 7
  %19757 = getelementptr inbounds %struct.Reg, %struct.Reg* %19756, i32 0, i32 0
  %RDX.i1875 = bitcast %union.anon* %19757 to i64*
  %19758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19759 = getelementptr inbounds %struct.GPR, %struct.GPR* %19758, i32 0, i32 15
  %19760 = getelementptr inbounds %struct.Reg, %struct.Reg* %19759, i32 0, i32 0
  %RBP.i1876 = bitcast %union.anon* %19760 to i64*
  %19761 = load i64, i64* %RBP.i1876
  %19762 = sub i64 %19761, 24
  %19763 = load i64, i64* %PC.i1874
  %19764 = add i64 %19763, 4
  store i64 %19764, i64* %PC.i1874
  %19765 = inttoptr i64 %19762 to i32*
  %19766 = load i32, i32* %19765
  %19767 = sext i32 %19766 to i64
  store i64 %19767, i64* %RDX.i1875, align 8
  store %struct.Memory* %loadMem_4ab6bb, %struct.Memory** %MEMORY
  %loadMem_4ab6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %19768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19769 = getelementptr inbounds %struct.GPR, %struct.GPR* %19768, i32 0, i32 33
  %19770 = getelementptr inbounds %struct.Reg, %struct.Reg* %19769, i32 0, i32 0
  %PC.i1872 = bitcast %union.anon* %19770 to i64*
  %19771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19772 = getelementptr inbounds %struct.GPR, %struct.GPR* %19771, i32 0, i32 7
  %19773 = getelementptr inbounds %struct.Reg, %struct.Reg* %19772, i32 0, i32 0
  %RDX.i1873 = bitcast %union.anon* %19773 to i64*
  %19774 = load i64, i64* %RDX.i1873
  %19775 = load i64, i64* %PC.i1872
  %19776 = add i64 %19775, 4
  store i64 %19776, i64* %PC.i1872
  %19777 = shl i64 %19774, 5
  %19778 = icmp slt i64 %19777, 0
  %19779 = shl i64 %19777, 1
  store i64 %19779, i64* %RDX.i1873, align 8
  %19780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19781 = zext i1 %19778 to i8
  store i8 %19781, i8* %19780, align 1
  %19782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19783 = trunc i64 %19779 to i32
  %19784 = and i32 %19783, 254
  %19785 = call i32 @llvm.ctpop.i32(i32 %19784)
  %19786 = trunc i32 %19785 to i8
  %19787 = and i8 %19786, 1
  %19788 = xor i8 %19787, 1
  store i8 %19788, i8* %19782, align 1
  %19789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19789, align 1
  %19790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19791 = icmp eq i64 %19779, 0
  %19792 = zext i1 %19791 to i8
  store i8 %19792, i8* %19790, align 1
  %19793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19794 = lshr i64 %19779, 63
  %19795 = trunc i64 %19794 to i8
  store i8 %19795, i8* %19793, align 1
  %19796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19796, align 1
  store %struct.Memory* %loadMem_4ab6bf, %struct.Memory** %MEMORY
  %loadMem_4ab6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19798 = getelementptr inbounds %struct.GPR, %struct.GPR* %19797, i32 0, i32 33
  %19799 = getelementptr inbounds %struct.Reg, %struct.Reg* %19798, i32 0, i32 0
  %PC.i1869 = bitcast %union.anon* %19799 to i64*
  %19800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19801 = getelementptr inbounds %struct.GPR, %struct.GPR* %19800, i32 0, i32 5
  %19802 = getelementptr inbounds %struct.Reg, %struct.Reg* %19801, i32 0, i32 0
  %RCX.i1870 = bitcast %union.anon* %19802 to i64*
  %19803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19804 = getelementptr inbounds %struct.GPR, %struct.GPR* %19803, i32 0, i32 7
  %19805 = getelementptr inbounds %struct.Reg, %struct.Reg* %19804, i32 0, i32 0
  %RDX.i1871 = bitcast %union.anon* %19805 to i64*
  %19806 = load i64, i64* %RCX.i1870
  %19807 = load i64, i64* %RDX.i1871
  %19808 = load i64, i64* %PC.i1869
  %19809 = add i64 %19808, 3
  store i64 %19809, i64* %PC.i1869
  %19810 = add i64 %19807, %19806
  store i64 %19810, i64* %RCX.i1870, align 8
  %19811 = icmp ult i64 %19810, %19806
  %19812 = icmp ult i64 %19810, %19807
  %19813 = or i1 %19811, %19812
  %19814 = zext i1 %19813 to i8
  %19815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19814, i8* %19815, align 1
  %19816 = trunc i64 %19810 to i32
  %19817 = and i32 %19816, 255
  %19818 = call i32 @llvm.ctpop.i32(i32 %19817)
  %19819 = trunc i32 %19818 to i8
  %19820 = and i8 %19819, 1
  %19821 = xor i8 %19820, 1
  %19822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19821, i8* %19822, align 1
  %19823 = xor i64 %19807, %19806
  %19824 = xor i64 %19823, %19810
  %19825 = lshr i64 %19824, 4
  %19826 = trunc i64 %19825 to i8
  %19827 = and i8 %19826, 1
  %19828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19827, i8* %19828, align 1
  %19829 = icmp eq i64 %19810, 0
  %19830 = zext i1 %19829 to i8
  %19831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19830, i8* %19831, align 1
  %19832 = lshr i64 %19810, 63
  %19833 = trunc i64 %19832 to i8
  %19834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19833, i8* %19834, align 1
  %19835 = lshr i64 %19806, 63
  %19836 = lshr i64 %19807, 63
  %19837 = xor i64 %19832, %19835
  %19838 = xor i64 %19832, %19836
  %19839 = add i64 %19837, %19838
  %19840 = icmp eq i64 %19839, 2
  %19841 = zext i1 %19840 to i8
  %19842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19841, i8* %19842, align 1
  store %struct.Memory* %loadMem_4ab6c3, %struct.Memory** %MEMORY
  %loadMem_4ab6c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19844 = getelementptr inbounds %struct.GPR, %struct.GPR* %19843, i32 0, i32 33
  %19845 = getelementptr inbounds %struct.Reg, %struct.Reg* %19844, i32 0, i32 0
  %PC.i1866 = bitcast %union.anon* %19845 to i64*
  %19846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19847 = getelementptr inbounds %struct.GPR, %struct.GPR* %19846, i32 0, i32 7
  %19848 = getelementptr inbounds %struct.Reg, %struct.Reg* %19847, i32 0, i32 0
  %RDX.i1867 = bitcast %union.anon* %19848 to i64*
  %19849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19850 = getelementptr inbounds %struct.GPR, %struct.GPR* %19849, i32 0, i32 15
  %19851 = getelementptr inbounds %struct.Reg, %struct.Reg* %19850, i32 0, i32 0
  %RBP.i1868 = bitcast %union.anon* %19851 to i64*
  %19852 = load i64, i64* %RBP.i1868
  %19853 = sub i64 %19852, 28
  %19854 = load i64, i64* %PC.i1866
  %19855 = add i64 %19854, 4
  store i64 %19855, i64* %PC.i1866
  %19856 = inttoptr i64 %19853 to i32*
  %19857 = load i32, i32* %19856
  %19858 = sext i32 %19857 to i64
  store i64 %19858, i64* %RDX.i1867, align 8
  store %struct.Memory* %loadMem_4ab6c6, %struct.Memory** %MEMORY
  %loadMem_4ab6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %19859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19860 = getelementptr inbounds %struct.GPR, %struct.GPR* %19859, i32 0, i32 33
  %19861 = getelementptr inbounds %struct.Reg, %struct.Reg* %19860, i32 0, i32 0
  %PC.i1862 = bitcast %union.anon* %19861 to i64*
  %19862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19863 = getelementptr inbounds %struct.GPR, %struct.GPR* %19862, i32 0, i32 1
  %19864 = getelementptr inbounds %struct.Reg, %struct.Reg* %19863, i32 0, i32 0
  %EAX.i1863 = bitcast %union.anon* %19864 to i32*
  %19865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19866 = getelementptr inbounds %struct.GPR, %struct.GPR* %19865, i32 0, i32 5
  %19867 = getelementptr inbounds %struct.Reg, %struct.Reg* %19866, i32 0, i32 0
  %RCX.i1864 = bitcast %union.anon* %19867 to i64*
  %19868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19869 = getelementptr inbounds %struct.GPR, %struct.GPR* %19868, i32 0, i32 7
  %19870 = getelementptr inbounds %struct.Reg, %struct.Reg* %19869, i32 0, i32 0
  %RDX.i1865 = bitcast %union.anon* %19870 to i64*
  %19871 = load i64, i64* %RCX.i1864
  %19872 = load i64, i64* %RDX.i1865
  %19873 = mul i64 %19872, 4
  %19874 = add i64 %19873, %19871
  %19875 = load i32, i32* %EAX.i1863
  %19876 = zext i32 %19875 to i64
  %19877 = load i64, i64* %PC.i1862
  %19878 = add i64 %19877, 3
  store i64 %19878, i64* %PC.i1862
  %19879 = inttoptr i64 %19874 to i32*
  store i32 %19875, i32* %19879
  store %struct.Memory* %loadMem_4ab6ca, %struct.Memory** %MEMORY
  br label %block_.L_4ab6cd

block_.L_4ab6cd:                                  ; preds = %block_4ab6a9, %block_.L_4ab69c
  %loadMem_4ab6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19881 = getelementptr inbounds %struct.GPR, %struct.GPR* %19880, i32 0, i32 33
  %19882 = getelementptr inbounds %struct.Reg, %struct.Reg* %19881, i32 0, i32 0
  %PC.i1861 = bitcast %union.anon* %19882 to i64*
  %19883 = load i64, i64* %PC.i1861
  %19884 = add i64 %19883, 5
  %19885 = load i64, i64* %PC.i1861
  %19886 = add i64 %19885, 5
  store i64 %19886, i64* %PC.i1861
  %19887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19884, i64* %19887, align 8
  store %struct.Memory* %loadMem_4ab6cd, %struct.Memory** %MEMORY
  br label %block_.L_4ab6d2

block_.L_4ab6d2:                                  ; preds = %block_.L_4ab6cd
  %loadMem_4ab6d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19889 = getelementptr inbounds %struct.GPR, %struct.GPR* %19888, i32 0, i32 33
  %19890 = getelementptr inbounds %struct.Reg, %struct.Reg* %19889, i32 0, i32 0
  %PC.i1858 = bitcast %union.anon* %19890 to i64*
  %19891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19892 = getelementptr inbounds %struct.GPR, %struct.GPR* %19891, i32 0, i32 1
  %19893 = getelementptr inbounds %struct.Reg, %struct.Reg* %19892, i32 0, i32 0
  %RAX.i1859 = bitcast %union.anon* %19893 to i64*
  %19894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19895 = getelementptr inbounds %struct.GPR, %struct.GPR* %19894, i32 0, i32 15
  %19896 = getelementptr inbounds %struct.Reg, %struct.Reg* %19895, i32 0, i32 0
  %RBP.i1860 = bitcast %union.anon* %19896 to i64*
  %19897 = load i64, i64* %RBP.i1860
  %19898 = sub i64 %19897, 36
  %19899 = load i64, i64* %PC.i1858
  %19900 = add i64 %19899, 3
  store i64 %19900, i64* %PC.i1858
  %19901 = inttoptr i64 %19898 to i32*
  %19902 = load i32, i32* %19901
  %19903 = zext i32 %19902 to i64
  store i64 %19903, i64* %RAX.i1859, align 8
  store %struct.Memory* %loadMem_4ab6d2, %struct.Memory** %MEMORY
  %loadMem_4ab6d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19905 = getelementptr inbounds %struct.GPR, %struct.GPR* %19904, i32 0, i32 33
  %19906 = getelementptr inbounds %struct.Reg, %struct.Reg* %19905, i32 0, i32 0
  %PC.i1856 = bitcast %union.anon* %19906 to i64*
  %19907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19908 = getelementptr inbounds %struct.GPR, %struct.GPR* %19907, i32 0, i32 1
  %19909 = getelementptr inbounds %struct.Reg, %struct.Reg* %19908, i32 0, i32 0
  %RAX.i1857 = bitcast %union.anon* %19909 to i64*
  %19910 = load i64, i64* %RAX.i1857
  %19911 = load i64, i64* %PC.i1856
  %19912 = add i64 %19911, 3
  store i64 %19912, i64* %PC.i1856
  %19913 = trunc i64 %19910 to i32
  %19914 = add i32 1, %19913
  %19915 = zext i32 %19914 to i64
  store i64 %19915, i64* %RAX.i1857, align 8
  %19916 = icmp ult i32 %19914, %19913
  %19917 = icmp ult i32 %19914, 1
  %19918 = or i1 %19916, %19917
  %19919 = zext i1 %19918 to i8
  %19920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19919, i8* %19920, align 1
  %19921 = and i32 %19914, 255
  %19922 = call i32 @llvm.ctpop.i32(i32 %19921)
  %19923 = trunc i32 %19922 to i8
  %19924 = and i8 %19923, 1
  %19925 = xor i8 %19924, 1
  %19926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19925, i8* %19926, align 1
  %19927 = xor i64 1, %19910
  %19928 = trunc i64 %19927 to i32
  %19929 = xor i32 %19928, %19914
  %19930 = lshr i32 %19929, 4
  %19931 = trunc i32 %19930 to i8
  %19932 = and i8 %19931, 1
  %19933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19932, i8* %19933, align 1
  %19934 = icmp eq i32 %19914, 0
  %19935 = zext i1 %19934 to i8
  %19936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19935, i8* %19936, align 1
  %19937 = lshr i32 %19914, 31
  %19938 = trunc i32 %19937 to i8
  %19939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19938, i8* %19939, align 1
  %19940 = lshr i32 %19913, 31
  %19941 = xor i32 %19937, %19940
  %19942 = add i32 %19941, %19937
  %19943 = icmp eq i32 %19942, 2
  %19944 = zext i1 %19943 to i8
  %19945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19944, i8* %19945, align 1
  store %struct.Memory* %loadMem_4ab6d5, %struct.Memory** %MEMORY
  %loadMem_4ab6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19947 = getelementptr inbounds %struct.GPR, %struct.GPR* %19946, i32 0, i32 33
  %19948 = getelementptr inbounds %struct.Reg, %struct.Reg* %19947, i32 0, i32 0
  %PC.i1853 = bitcast %union.anon* %19948 to i64*
  %19949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19950 = getelementptr inbounds %struct.GPR, %struct.GPR* %19949, i32 0, i32 1
  %19951 = getelementptr inbounds %struct.Reg, %struct.Reg* %19950, i32 0, i32 0
  %EAX.i1854 = bitcast %union.anon* %19951 to i32*
  %19952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19953 = getelementptr inbounds %struct.GPR, %struct.GPR* %19952, i32 0, i32 15
  %19954 = getelementptr inbounds %struct.Reg, %struct.Reg* %19953, i32 0, i32 0
  %RBP.i1855 = bitcast %union.anon* %19954 to i64*
  %19955 = load i64, i64* %RBP.i1855
  %19956 = sub i64 %19955, 36
  %19957 = load i32, i32* %EAX.i1854
  %19958 = zext i32 %19957 to i64
  %19959 = load i64, i64* %PC.i1853
  %19960 = add i64 %19959, 3
  store i64 %19960, i64* %PC.i1853
  %19961 = inttoptr i64 %19956 to i32*
  store i32 %19957, i32* %19961
  store %struct.Memory* %loadMem_4ab6d8, %struct.Memory** %MEMORY
  %loadMem_4ab6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %19962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19963 = getelementptr inbounds %struct.GPR, %struct.GPR* %19962, i32 0, i32 33
  %19964 = getelementptr inbounds %struct.Reg, %struct.Reg* %19963, i32 0, i32 0
  %PC.i1852 = bitcast %union.anon* %19964 to i64*
  %19965 = load i64, i64* %PC.i1852
  %19966 = add i64 %19965, -1493
  %19967 = load i64, i64* %PC.i1852
  %19968 = add i64 %19967, 5
  store i64 %19968, i64* %PC.i1852
  %19969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19966, i64* %19969, align 8
  store %struct.Memory* %loadMem_4ab6db, %struct.Memory** %MEMORY
  br label %block_.L_4ab106

block_.L_4ab6e0:                                  ; preds = %block_.L_4ab106
  %loadMem_4ab6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19971 = getelementptr inbounds %struct.GPR, %struct.GPR* %19970, i32 0, i32 33
  %19972 = getelementptr inbounds %struct.Reg, %struct.Reg* %19971, i32 0, i32 0
  %PC.i1849 = bitcast %union.anon* %19972 to i64*
  %19973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19974 = getelementptr inbounds %struct.GPR, %struct.GPR* %19973, i32 0, i32 1
  %19975 = getelementptr inbounds %struct.Reg, %struct.Reg* %19974, i32 0, i32 0
  %RAX.i1850 = bitcast %union.anon* %19975 to i64*
  %19976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19977 = getelementptr inbounds %struct.GPR, %struct.GPR* %19976, i32 0, i32 15
  %19978 = getelementptr inbounds %struct.Reg, %struct.Reg* %19977, i32 0, i32 0
  %RBP.i1851 = bitcast %union.anon* %19978 to i64*
  %19979 = load i64, i64* %RBP.i1851
  %19980 = sub i64 %19979, 408
  %19981 = load i64, i64* %PC.i1849
  %19982 = add i64 %19981, 7
  store i64 %19982, i64* %PC.i1849
  %19983 = inttoptr i64 %19980 to i64*
  %19984 = load i64, i64* %19983
  store i64 %19984, i64* %RAX.i1850, align 8
  store %struct.Memory* %loadMem_4ab6e0, %struct.Memory** %MEMORY
  %loadMem_4ab6e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19986 = getelementptr inbounds %struct.GPR, %struct.GPR* %19985, i32 0, i32 33
  %19987 = getelementptr inbounds %struct.Reg, %struct.Reg* %19986, i32 0, i32 0
  %PC.i1847 = bitcast %union.anon* %19987 to i64*
  %19988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19989 = getelementptr inbounds %struct.GPR, %struct.GPR* %19988, i32 0, i32 1
  %19990 = getelementptr inbounds %struct.Reg, %struct.Reg* %19989, i32 0, i32 0
  %RAX.i1848 = bitcast %union.anon* %19990 to i64*
  %19991 = load i64, i64* %RAX.i1848
  %19992 = add i64 %19991, 572
  %19993 = load i64, i64* %PC.i1847
  %19994 = add i64 %19993, 7
  store i64 %19994, i64* %PC.i1847
  %19995 = inttoptr i64 %19992 to i32*
  %19996 = load i32, i32* %19995
  %19997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19997, align 1
  %19998 = and i32 %19996, 255
  %19999 = call i32 @llvm.ctpop.i32(i32 %19998)
  %20000 = trunc i32 %19999 to i8
  %20001 = and i8 %20000, 1
  %20002 = xor i8 %20001, 1
  %20003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20002, i8* %20003, align 1
  %20004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20004, align 1
  %20005 = icmp eq i32 %19996, 0
  %20006 = zext i1 %20005 to i8
  %20007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20006, i8* %20007, align 1
  %20008 = lshr i32 %19996, 31
  %20009 = trunc i32 %20008 to i8
  %20010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20009, i8* %20010, align 1
  %20011 = lshr i32 %19996, 31
  %20012 = xor i32 %20008, %20011
  %20013 = add i32 %20012, %20011
  %20014 = icmp eq i32 %20013, 2
  %20015 = zext i1 %20014 to i8
  %20016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20015, i8* %20016, align 1
  store %struct.Memory* %loadMem_4ab6e7, %struct.Memory** %MEMORY
  %loadMem_4ab6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %20017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20018 = getelementptr inbounds %struct.GPR, %struct.GPR* %20017, i32 0, i32 33
  %20019 = getelementptr inbounds %struct.Reg, %struct.Reg* %20018, i32 0, i32 0
  %PC.i1846 = bitcast %union.anon* %20019 to i64*
  %20020 = load i64, i64* %PC.i1846
  %20021 = add i64 %20020, 27
  %20022 = load i64, i64* %PC.i1846
  %20023 = add i64 %20022, 6
  %20024 = load i64, i64* %PC.i1846
  %20025 = add i64 %20024, 6
  store i64 %20025, i64* %PC.i1846
  %20026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20027 = load i8, i8* %20026, align 1
  store i8 %20027, i8* %BRANCH_TAKEN, align 1
  %20028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20029 = icmp ne i8 %20027, 0
  %20030 = select i1 %20029, i64 %20021, i64 %20023
  store i64 %20030, i64* %20028, align 8
  store %struct.Memory* %loadMem_4ab6ee, %struct.Memory** %MEMORY
  %loadBr_4ab6ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab6ee = icmp eq i8 %loadBr_4ab6ee, 1
  br i1 %cmpBr_4ab6ee, label %block_.L_4ab709, label %block_4ab6f4

block_4ab6f4:                                     ; preds = %block_.L_4ab6e0
  %loadMem_4ab6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20032 = getelementptr inbounds %struct.GPR, %struct.GPR* %20031, i32 0, i32 33
  %20033 = getelementptr inbounds %struct.Reg, %struct.Reg* %20032, i32 0, i32 0
  %PC.i1844 = bitcast %union.anon* %20033 to i64*
  %20034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20035 = getelementptr inbounds %struct.GPR, %struct.GPR* %20034, i32 0, i32 1
  %20036 = getelementptr inbounds %struct.Reg, %struct.Reg* %20035, i32 0, i32 0
  %RAX.i1845 = bitcast %union.anon* %20036 to i64*
  %20037 = load i64, i64* %PC.i1844
  %20038 = add i64 %20037, 8
  store i64 %20038, i64* %PC.i1844
  %20039 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %20039, i64* %RAX.i1845, align 8
  store %struct.Memory* %loadMem_4ab6f4, %struct.Memory** %MEMORY
  %loadMem_4ab6fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %20040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20041 = getelementptr inbounds %struct.GPR, %struct.GPR* %20040, i32 0, i32 33
  %20042 = getelementptr inbounds %struct.Reg, %struct.Reg* %20041, i32 0, i32 0
  %PC.i1842 = bitcast %union.anon* %20042 to i64*
  %20043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20044 = getelementptr inbounds %struct.GPR, %struct.GPR* %20043, i32 0, i32 1
  %20045 = getelementptr inbounds %struct.Reg, %struct.Reg* %20044, i32 0, i32 0
  %RAX.i1843 = bitcast %union.anon* %20045 to i64*
  %20046 = load i64, i64* %RAX.i1843
  %20047 = add i64 %20046, 2356
  %20048 = load i64, i64* %PC.i1842
  %20049 = add i64 %20048, 7
  store i64 %20049, i64* %PC.i1842
  %20050 = inttoptr i64 %20047 to i32*
  %20051 = load i32, i32* %20050
  %20052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20052, align 1
  %20053 = and i32 %20051, 255
  %20054 = call i32 @llvm.ctpop.i32(i32 %20053)
  %20055 = trunc i32 %20054 to i8
  %20056 = and i8 %20055, 1
  %20057 = xor i8 %20056, 1
  %20058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20057, i8* %20058, align 1
  %20059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20059, align 1
  %20060 = icmp eq i32 %20051, 0
  %20061 = zext i1 %20060 to i8
  %20062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20061, i8* %20062, align 1
  %20063 = lshr i32 %20051, 31
  %20064 = trunc i32 %20063 to i8
  %20065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20064, i8* %20065, align 1
  %20066 = lshr i32 %20051, 31
  %20067 = xor i32 %20063, %20066
  %20068 = add i32 %20067, %20066
  %20069 = icmp eq i32 %20068, 2
  %20070 = zext i1 %20069 to i8
  %20071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20070, i8* %20071, align 1
  store %struct.Memory* %loadMem_4ab6fc, %struct.Memory** %MEMORY
  %loadMem_4ab703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20073 = getelementptr inbounds %struct.GPR, %struct.GPR* %20072, i32 0, i32 33
  %20074 = getelementptr inbounds %struct.Reg, %struct.Reg* %20073, i32 0, i32 0
  %PC.i1841 = bitcast %union.anon* %20074 to i64*
  %20075 = load i64, i64* %PC.i1841
  %20076 = add i64 %20075, 26
  %20077 = load i64, i64* %PC.i1841
  %20078 = add i64 %20077, 6
  %20079 = load i64, i64* %PC.i1841
  %20080 = add i64 %20079, 6
  store i64 %20080, i64* %PC.i1841
  %20081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20082 = load i8, i8* %20081, align 1
  store i8 %20082, i8* %BRANCH_TAKEN, align 1
  %20083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20084 = icmp ne i8 %20082, 0
  %20085 = select i1 %20084, i64 %20076, i64 %20078
  store i64 %20085, i64* %20083, align 8
  store %struct.Memory* %loadMem_4ab703, %struct.Memory** %MEMORY
  %loadBr_4ab703 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab703 = icmp eq i8 %loadBr_4ab703, 1
  br i1 %cmpBr_4ab703, label %block_.L_4ab71d, label %block_.L_4ab709

block_.L_4ab709:                                  ; preds = %block_4ab6f4, %block_.L_4ab6e0
  %loadMem_4ab709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20087 = getelementptr inbounds %struct.GPR, %struct.GPR* %20086, i32 0, i32 33
  %20088 = getelementptr inbounds %struct.Reg, %struct.Reg* %20087, i32 0, i32 0
  %PC.i1838 = bitcast %union.anon* %20088 to i64*
  %20089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20090 = getelementptr inbounds %struct.GPR, %struct.GPR* %20089, i32 0, i32 1
  %20091 = getelementptr inbounds %struct.Reg, %struct.Reg* %20090, i32 0, i32 0
  %RAX.i1839 = bitcast %union.anon* %20091 to i64*
  %20092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20093 = getelementptr inbounds %struct.GPR, %struct.GPR* %20092, i32 0, i32 15
  %20094 = getelementptr inbounds %struct.Reg, %struct.Reg* %20093, i32 0, i32 0
  %RBP.i1840 = bitcast %union.anon* %20094 to i64*
  %20095 = load i64, i64* %RBP.i1840
  %20096 = sub i64 %20095, 96
  %20097 = load i64, i64* %PC.i1838
  %20098 = add i64 %20097, 4
  store i64 %20098, i64* %PC.i1838
  %20099 = inttoptr i64 %20096 to i64*
  %20100 = load i64, i64* %20099
  store i64 %20100, i64* %RAX.i1839, align 8
  store %struct.Memory* %loadMem_4ab709, %struct.Memory** %MEMORY
  %loadMem_4ab70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20102 = getelementptr inbounds %struct.GPR, %struct.GPR* %20101, i32 0, i32 33
  %20103 = getelementptr inbounds %struct.Reg, %struct.Reg* %20102, i32 0, i32 0
  %PC.i1835 = bitcast %union.anon* %20103 to i64*
  %20104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20105 = getelementptr inbounds %struct.GPR, %struct.GPR* %20104, i32 0, i32 5
  %20106 = getelementptr inbounds %struct.Reg, %struct.Reg* %20105, i32 0, i32 0
  %RCX.i1836 = bitcast %union.anon* %20106 to i64*
  %20107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20108 = getelementptr inbounds %struct.GPR, %struct.GPR* %20107, i32 0, i32 15
  %20109 = getelementptr inbounds %struct.Reg, %struct.Reg* %20108, i32 0, i32 0
  %RBP.i1837 = bitcast %union.anon* %20109 to i64*
  %20110 = load i64, i64* %RBP.i1837
  %20111 = sub i64 %20110, 48
  %20112 = load i64, i64* %PC.i1835
  %20113 = add i64 %20112, 4
  store i64 %20113, i64* %PC.i1835
  %20114 = inttoptr i64 %20111 to i32*
  %20115 = load i32, i32* %20114
  %20116 = sext i32 %20115 to i64
  store i64 %20116, i64* %RCX.i1836, align 8
  store %struct.Memory* %loadMem_4ab70d, %struct.Memory** %MEMORY
  %loadMem_4ab711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20118 = getelementptr inbounds %struct.GPR, %struct.GPR* %20117, i32 0, i32 33
  %20119 = getelementptr inbounds %struct.Reg, %struct.Reg* %20118, i32 0, i32 0
  %PC.i1832 = bitcast %union.anon* %20119 to i64*
  %20120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20121 = getelementptr inbounds %struct.GPR, %struct.GPR* %20120, i32 0, i32 1
  %20122 = getelementptr inbounds %struct.Reg, %struct.Reg* %20121, i32 0, i32 0
  %RAX.i1833 = bitcast %union.anon* %20122 to i64*
  %20123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20124 = getelementptr inbounds %struct.GPR, %struct.GPR* %20123, i32 0, i32 5
  %20125 = getelementptr inbounds %struct.Reg, %struct.Reg* %20124, i32 0, i32 0
  %RCX.i1834 = bitcast %union.anon* %20125 to i64*
  %20126 = load i64, i64* %RAX.i1833
  %20127 = load i64, i64* %RCX.i1834
  %20128 = mul i64 %20127, 4
  %20129 = add i64 %20128, %20126
  %20130 = load i64, i64* %PC.i1832
  %20131 = add i64 %20130, 7
  store i64 %20131, i64* %PC.i1832
  %20132 = inttoptr i64 %20129 to i32*
  store i32 0, i32* %20132
  store %struct.Memory* %loadMem_4ab711, %struct.Memory** %MEMORY
  %loadMem_4ab718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20134 = getelementptr inbounds %struct.GPR, %struct.GPR* %20133, i32 0, i32 33
  %20135 = getelementptr inbounds %struct.Reg, %struct.Reg* %20134, i32 0, i32 0
  %PC.i1831 = bitcast %union.anon* %20135 to i64*
  %20136 = load i64, i64* %PC.i1831
  %20137 = add i64 %20136, 94
  %20138 = load i64, i64* %PC.i1831
  %20139 = add i64 %20138, 5
  store i64 %20139, i64* %PC.i1831
  %20140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20137, i64* %20140, align 8
  store %struct.Memory* %loadMem_4ab718, %struct.Memory** %MEMORY
  br label %block_.L_4ab776

block_.L_4ab71d:                                  ; preds = %block_4ab6f4
  %loadMem_4ab71d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20142 = getelementptr inbounds %struct.GPR, %struct.GPR* %20141, i32 0, i32 33
  %20143 = getelementptr inbounds %struct.Reg, %struct.Reg* %20142, i32 0, i32 0
  %PC.i1829 = bitcast %union.anon* %20143 to i64*
  %20144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20145 = getelementptr inbounds %struct.GPR, %struct.GPR* %20144, i32 0, i32 15
  %20146 = getelementptr inbounds %struct.Reg, %struct.Reg* %20145, i32 0, i32 0
  %RBP.i1830 = bitcast %union.anon* %20146 to i64*
  %20147 = load i64, i64* %RBP.i1830
  %20148 = sub i64 %20147, 24
  %20149 = load i64, i64* %PC.i1829
  %20150 = add i64 %20149, 7
  store i64 %20150, i64* %PC.i1829
  %20151 = inttoptr i64 %20148 to i32*
  store i32 0, i32* %20151
  store %struct.Memory* %loadMem_4ab71d, %struct.Memory** %MEMORY
  br label %block_.L_4ab724

block_.L_4ab724:                                  ; preds = %block_4ab72e, %block_.L_4ab71d
  %loadMem_4ab724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20153 = getelementptr inbounds %struct.GPR, %struct.GPR* %20152, i32 0, i32 33
  %20154 = getelementptr inbounds %struct.Reg, %struct.Reg* %20153, i32 0, i32 0
  %PC.i1827 = bitcast %union.anon* %20154 to i64*
  %20155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20156 = getelementptr inbounds %struct.GPR, %struct.GPR* %20155, i32 0, i32 15
  %20157 = getelementptr inbounds %struct.Reg, %struct.Reg* %20156, i32 0, i32 0
  %RBP.i1828 = bitcast %union.anon* %20157 to i64*
  %20158 = load i64, i64* %RBP.i1828
  %20159 = sub i64 %20158, 24
  %20160 = load i64, i64* %PC.i1827
  %20161 = add i64 %20160, 4
  store i64 %20161, i64* %PC.i1827
  %20162 = inttoptr i64 %20159 to i32*
  %20163 = load i32, i32* %20162
  %20164 = sub i32 %20163, 4
  %20165 = icmp ult i32 %20163, 4
  %20166 = zext i1 %20165 to i8
  %20167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20166, i8* %20167, align 1
  %20168 = and i32 %20164, 255
  %20169 = call i32 @llvm.ctpop.i32(i32 %20168)
  %20170 = trunc i32 %20169 to i8
  %20171 = and i8 %20170, 1
  %20172 = xor i8 %20171, 1
  %20173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20172, i8* %20173, align 1
  %20174 = xor i32 %20163, 4
  %20175 = xor i32 %20174, %20164
  %20176 = lshr i32 %20175, 4
  %20177 = trunc i32 %20176 to i8
  %20178 = and i8 %20177, 1
  %20179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20178, i8* %20179, align 1
  %20180 = icmp eq i32 %20164, 0
  %20181 = zext i1 %20180 to i8
  %20182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20181, i8* %20182, align 1
  %20183 = lshr i32 %20164, 31
  %20184 = trunc i32 %20183 to i8
  %20185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20184, i8* %20185, align 1
  %20186 = lshr i32 %20163, 31
  %20187 = xor i32 %20183, %20186
  %20188 = add i32 %20187, %20186
  %20189 = icmp eq i32 %20188, 2
  %20190 = zext i1 %20189 to i8
  %20191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20190, i8* %20191, align 1
  store %struct.Memory* %loadMem_4ab724, %struct.Memory** %MEMORY
  %loadMem_4ab728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20193 = getelementptr inbounds %struct.GPR, %struct.GPR* %20192, i32 0, i32 33
  %20194 = getelementptr inbounds %struct.Reg, %struct.Reg* %20193, i32 0, i32 0
  %PC.i1826 = bitcast %union.anon* %20194 to i64*
  %20195 = load i64, i64* %PC.i1826
  %20196 = add i64 %20195, 73
  %20197 = load i64, i64* %PC.i1826
  %20198 = add i64 %20197, 6
  %20199 = load i64, i64* %PC.i1826
  %20200 = add i64 %20199, 6
  store i64 %20200, i64* %PC.i1826
  %20201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20202 = load i8, i8* %20201, align 1
  %20203 = icmp ne i8 %20202, 0
  %20204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20205 = load i8, i8* %20204, align 1
  %20206 = icmp ne i8 %20205, 0
  %20207 = xor i1 %20203, %20206
  %20208 = xor i1 %20207, true
  %20209 = zext i1 %20208 to i8
  store i8 %20209, i8* %BRANCH_TAKEN, align 1
  %20210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20211 = select i1 %20207, i64 %20198, i64 %20196
  store i64 %20211, i64* %20210, align 8
  store %struct.Memory* %loadMem_4ab728, %struct.Memory** %MEMORY
  %loadBr_4ab728 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab728 = icmp eq i8 %loadBr_4ab728, 1
  br i1 %cmpBr_4ab728, label %block_.L_4ab771, label %block_4ab72e

block_4ab72e:                                     ; preds = %block_.L_4ab724
  %loadMem_4ab72e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20213 = getelementptr inbounds %struct.GPR, %struct.GPR* %20212, i32 0, i32 33
  %20214 = getelementptr inbounds %struct.Reg, %struct.Reg* %20213, i32 0, i32 0
  %PC.i1824 = bitcast %union.anon* %20214 to i64*
  %20215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20216 = getelementptr inbounds %struct.GPR, %struct.GPR* %20215, i32 0, i32 1
  %20217 = getelementptr inbounds %struct.Reg, %struct.Reg* %20216, i32 0, i32 0
  %RAX.i1825 = bitcast %union.anon* %20217 to i64*
  %20218 = load i64, i64* %PC.i1824
  %20219 = add i64 %20218, 8
  store i64 %20219, i64* %PC.i1824
  %20220 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20220, i64* %RAX.i1825, align 8
  store %struct.Memory* %loadMem_4ab72e, %struct.Memory** %MEMORY
  %loadMem_4ab736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20222 = getelementptr inbounds %struct.GPR, %struct.GPR* %20221, i32 0, i32 33
  %20223 = getelementptr inbounds %struct.Reg, %struct.Reg* %20222, i32 0, i32 0
  %PC.i1822 = bitcast %union.anon* %20223 to i64*
  %20224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20225 = getelementptr inbounds %struct.GPR, %struct.GPR* %20224, i32 0, i32 1
  %20226 = getelementptr inbounds %struct.Reg, %struct.Reg* %20225, i32 0, i32 0
  %RAX.i1823 = bitcast %union.anon* %20226 to i64*
  %20227 = load i64, i64* %RAX.i1823
  %20228 = add i64 %20227, 14136
  %20229 = load i64, i64* %PC.i1822
  %20230 = add i64 %20229, 7
  store i64 %20230, i64* %PC.i1822
  %20231 = inttoptr i64 %20228 to i64*
  %20232 = load i64, i64* %20231
  store i64 %20232, i64* %RAX.i1823, align 8
  store %struct.Memory* %loadMem_4ab736, %struct.Memory** %MEMORY
  %loadMem_4ab73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20234 = getelementptr inbounds %struct.GPR, %struct.GPR* %20233, i32 0, i32 33
  %20235 = getelementptr inbounds %struct.Reg, %struct.Reg* %20234, i32 0, i32 0
  %PC.i1819 = bitcast %union.anon* %20235 to i64*
  %20236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20237 = getelementptr inbounds %struct.GPR, %struct.GPR* %20236, i32 0, i32 5
  %20238 = getelementptr inbounds %struct.Reg, %struct.Reg* %20237, i32 0, i32 0
  %RCX.i1820 = bitcast %union.anon* %20238 to i64*
  %20239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20240 = getelementptr inbounds %struct.GPR, %struct.GPR* %20239, i32 0, i32 15
  %20241 = getelementptr inbounds %struct.Reg, %struct.Reg* %20240, i32 0, i32 0
  %RBP.i1821 = bitcast %union.anon* %20241 to i64*
  %20242 = load i64, i64* %RBP.i1821
  %20243 = sub i64 %20242, 4
  %20244 = load i64, i64* %PC.i1819
  %20245 = add i64 %20244, 4
  store i64 %20245, i64* %PC.i1819
  %20246 = inttoptr i64 %20243 to i32*
  %20247 = load i32, i32* %20246
  %20248 = sext i32 %20247 to i64
  store i64 %20248, i64* %RCX.i1820, align 8
  store %struct.Memory* %loadMem_4ab73d, %struct.Memory** %MEMORY
  %loadMem_4ab741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20250 = getelementptr inbounds %struct.GPR, %struct.GPR* %20249, i32 0, i32 33
  %20251 = getelementptr inbounds %struct.Reg, %struct.Reg* %20250, i32 0, i32 0
  %PC.i1816 = bitcast %union.anon* %20251 to i64*
  %20252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20253 = getelementptr inbounds %struct.GPR, %struct.GPR* %20252, i32 0, i32 1
  %20254 = getelementptr inbounds %struct.Reg, %struct.Reg* %20253, i32 0, i32 0
  %RAX.i1817 = bitcast %union.anon* %20254 to i64*
  %20255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20256 = getelementptr inbounds %struct.GPR, %struct.GPR* %20255, i32 0, i32 5
  %20257 = getelementptr inbounds %struct.Reg, %struct.Reg* %20256, i32 0, i32 0
  %RCX.i1818 = bitcast %union.anon* %20257 to i64*
  %20258 = load i64, i64* %RAX.i1817
  %20259 = load i64, i64* %RCX.i1818
  %20260 = mul i64 %20259, 8
  %20261 = add i64 %20260, %20258
  %20262 = load i64, i64* %PC.i1816
  %20263 = add i64 %20262, 4
  store i64 %20263, i64* %PC.i1816
  %20264 = inttoptr i64 %20261 to i64*
  %20265 = load i64, i64* %20264
  store i64 %20265, i64* %RAX.i1817, align 8
  store %struct.Memory* %loadMem_4ab741, %struct.Memory** %MEMORY
  %loadMem_4ab745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20267 = getelementptr inbounds %struct.GPR, %struct.GPR* %20266, i32 0, i32 33
  %20268 = getelementptr inbounds %struct.Reg, %struct.Reg* %20267, i32 0, i32 0
  %PC.i1813 = bitcast %union.anon* %20268 to i64*
  %20269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20270 = getelementptr inbounds %struct.GPR, %struct.GPR* %20269, i32 0, i32 5
  %20271 = getelementptr inbounds %struct.Reg, %struct.Reg* %20270, i32 0, i32 0
  %RCX.i1814 = bitcast %union.anon* %20271 to i64*
  %20272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20273 = getelementptr inbounds %struct.GPR, %struct.GPR* %20272, i32 0, i32 15
  %20274 = getelementptr inbounds %struct.Reg, %struct.Reg* %20273, i32 0, i32 0
  %RBP.i1815 = bitcast %union.anon* %20274 to i64*
  %20275 = load i64, i64* %RBP.i1815
  %20276 = sub i64 %20275, 24
  %20277 = load i64, i64* %PC.i1813
  %20278 = add i64 %20277, 4
  store i64 %20278, i64* %PC.i1813
  %20279 = inttoptr i64 %20276 to i32*
  %20280 = load i32, i32* %20279
  %20281 = sext i32 %20280 to i64
  store i64 %20281, i64* %RCX.i1814, align 8
  store %struct.Memory* %loadMem_4ab745, %struct.Memory** %MEMORY
  %loadMem_4ab749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20283 = getelementptr inbounds %struct.GPR, %struct.GPR* %20282, i32 0, i32 33
  %20284 = getelementptr inbounds %struct.Reg, %struct.Reg* %20283, i32 0, i32 0
  %PC.i1810 = bitcast %union.anon* %20284 to i64*
  %20285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20286 = getelementptr inbounds %struct.GPR, %struct.GPR* %20285, i32 0, i32 1
  %20287 = getelementptr inbounds %struct.Reg, %struct.Reg* %20286, i32 0, i32 0
  %RAX.i1811 = bitcast %union.anon* %20287 to i64*
  %20288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20289 = getelementptr inbounds %struct.GPR, %struct.GPR* %20288, i32 0, i32 5
  %20290 = getelementptr inbounds %struct.Reg, %struct.Reg* %20289, i32 0, i32 0
  %RCX.i1812 = bitcast %union.anon* %20290 to i64*
  %20291 = load i64, i64* %RAX.i1811
  %20292 = load i64, i64* %RCX.i1812
  %20293 = mul i64 %20292, 8
  %20294 = add i64 %20293, %20291
  %20295 = load i64, i64* %PC.i1810
  %20296 = add i64 %20295, 4
  store i64 %20296, i64* %PC.i1810
  %20297 = inttoptr i64 %20294 to i64*
  %20298 = load i64, i64* %20297
  store i64 %20298, i64* %RAX.i1811, align 8
  store %struct.Memory* %loadMem_4ab749, %struct.Memory** %MEMORY
  %loadMem_4ab74d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20300 = getelementptr inbounds %struct.GPR, %struct.GPR* %20299, i32 0, i32 33
  %20301 = getelementptr inbounds %struct.Reg, %struct.Reg* %20300, i32 0, i32 0
  %PC.i1808 = bitcast %union.anon* %20301 to i64*
  %20302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20303 = getelementptr inbounds %struct.GPR, %struct.GPR* %20302, i32 0, i32 1
  %20304 = getelementptr inbounds %struct.Reg, %struct.Reg* %20303, i32 0, i32 0
  %RAX.i1809 = bitcast %union.anon* %20304 to i64*
  %20305 = load i64, i64* %RAX.i1809
  %20306 = load i64, i64* %PC.i1808
  %20307 = add i64 %20306, 3
  store i64 %20307, i64* %PC.i1808
  %20308 = inttoptr i64 %20305 to i64*
  %20309 = load i64, i64* %20308
  store i64 %20309, i64* %RAX.i1809, align 8
  store %struct.Memory* %loadMem_4ab74d, %struct.Memory** %MEMORY
  %loadMem_4ab750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20311 = getelementptr inbounds %struct.GPR, %struct.GPR* %20310, i32 0, i32 33
  %20312 = getelementptr inbounds %struct.Reg, %struct.Reg* %20311, i32 0, i32 0
  %PC.i1805 = bitcast %union.anon* %20312 to i64*
  %20313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20314 = getelementptr inbounds %struct.GPR, %struct.GPR* %20313, i32 0, i32 5
  %20315 = getelementptr inbounds %struct.Reg, %struct.Reg* %20314, i32 0, i32 0
  %RCX.i1806 = bitcast %union.anon* %20315 to i64*
  %20316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20317 = getelementptr inbounds %struct.GPR, %struct.GPR* %20316, i32 0, i32 15
  %20318 = getelementptr inbounds %struct.Reg, %struct.Reg* %20317, i32 0, i32 0
  %RBP.i1807 = bitcast %union.anon* %20318 to i64*
  %20319 = load i64, i64* %RBP.i1807
  %20320 = sub i64 %20319, 24
  %20321 = load i64, i64* %PC.i1805
  %20322 = add i64 %20321, 4
  store i64 %20322, i64* %PC.i1805
  %20323 = inttoptr i64 %20320 to i32*
  %20324 = load i32, i32* %20323
  %20325 = sext i32 %20324 to i64
  store i64 %20325, i64* %RCX.i1806, align 8
  store %struct.Memory* %loadMem_4ab750, %struct.Memory** %MEMORY
  %loadMem_4ab754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20327 = getelementptr inbounds %struct.GPR, %struct.GPR* %20326, i32 0, i32 33
  %20328 = getelementptr inbounds %struct.Reg, %struct.Reg* %20327, i32 0, i32 0
  %PC.i1802 = bitcast %union.anon* %20328 to i64*
  %20329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20330 = getelementptr inbounds %struct.GPR, %struct.GPR* %20329, i32 0, i32 5
  %20331 = getelementptr inbounds %struct.Reg, %struct.Reg* %20330, i32 0, i32 0
  %RCX.i1803 = bitcast %union.anon* %20331 to i64*
  %20332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20333 = getelementptr inbounds %struct.GPR, %struct.GPR* %20332, i32 0, i32 15
  %20334 = getelementptr inbounds %struct.Reg, %struct.Reg* %20333, i32 0, i32 0
  %RBP.i1804 = bitcast %union.anon* %20334 to i64*
  %20335 = load i64, i64* %RBP.i1804
  %20336 = load i64, i64* %RCX.i1803
  %20337 = mul i64 %20336, 4
  %20338 = add i64 %20335, -384
  %20339 = add i64 %20338, %20337
  %20340 = load i64, i64* %PC.i1802
  %20341 = add i64 %20340, 8
  store i64 %20341, i64* %PC.i1802
  %20342 = inttoptr i64 %20339 to i32*
  %20343 = load i32, i32* %20342
  %20344 = sext i32 %20343 to i64
  store i64 %20344, i64* %RCX.i1803, align 8
  store %struct.Memory* %loadMem_4ab754, %struct.Memory** %MEMORY
  %loadMem_4ab75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %20345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20346 = getelementptr inbounds %struct.GPR, %struct.GPR* %20345, i32 0, i32 33
  %20347 = getelementptr inbounds %struct.Reg, %struct.Reg* %20346, i32 0, i32 0
  %PC.i1799 = bitcast %union.anon* %20347 to i64*
  %20348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20349 = getelementptr inbounds %struct.GPR, %struct.GPR* %20348, i32 0, i32 1
  %20350 = getelementptr inbounds %struct.Reg, %struct.Reg* %20349, i32 0, i32 0
  %RAX.i1800 = bitcast %union.anon* %20350 to i64*
  %20351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20352 = getelementptr inbounds %struct.GPR, %struct.GPR* %20351, i32 0, i32 5
  %20353 = getelementptr inbounds %struct.Reg, %struct.Reg* %20352, i32 0, i32 0
  %RCX.i1801 = bitcast %union.anon* %20353 to i64*
  %20354 = load i64, i64* %RAX.i1800
  %20355 = load i64, i64* %RCX.i1801
  %20356 = mul i64 %20355, 4
  %20357 = add i64 %20356, %20354
  %20358 = load i64, i64* %PC.i1799
  %20359 = add i64 %20358, 7
  store i64 %20359, i64* %PC.i1799
  %20360 = inttoptr i64 %20357 to i32*
  store i32 0, i32* %20360
  store %struct.Memory* %loadMem_4ab75c, %struct.Memory** %MEMORY
  %loadMem_4ab763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20362 = getelementptr inbounds %struct.GPR, %struct.GPR* %20361, i32 0, i32 33
  %20363 = getelementptr inbounds %struct.Reg, %struct.Reg* %20362, i32 0, i32 0
  %PC.i1796 = bitcast %union.anon* %20363 to i64*
  %20364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20365 = getelementptr inbounds %struct.GPR, %struct.GPR* %20364, i32 0, i32 1
  %20366 = getelementptr inbounds %struct.Reg, %struct.Reg* %20365, i32 0, i32 0
  %RAX.i1797 = bitcast %union.anon* %20366 to i64*
  %20367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20368 = getelementptr inbounds %struct.GPR, %struct.GPR* %20367, i32 0, i32 15
  %20369 = getelementptr inbounds %struct.Reg, %struct.Reg* %20368, i32 0, i32 0
  %RBP.i1798 = bitcast %union.anon* %20369 to i64*
  %20370 = load i64, i64* %RBP.i1798
  %20371 = sub i64 %20370, 24
  %20372 = load i64, i64* %PC.i1796
  %20373 = add i64 %20372, 3
  store i64 %20373, i64* %PC.i1796
  %20374 = inttoptr i64 %20371 to i32*
  %20375 = load i32, i32* %20374
  %20376 = zext i32 %20375 to i64
  store i64 %20376, i64* %RAX.i1797, align 8
  store %struct.Memory* %loadMem_4ab763, %struct.Memory** %MEMORY
  %loadMem_4ab766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20378 = getelementptr inbounds %struct.GPR, %struct.GPR* %20377, i32 0, i32 33
  %20379 = getelementptr inbounds %struct.Reg, %struct.Reg* %20378, i32 0, i32 0
  %PC.i1794 = bitcast %union.anon* %20379 to i64*
  %20380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20381 = getelementptr inbounds %struct.GPR, %struct.GPR* %20380, i32 0, i32 1
  %20382 = getelementptr inbounds %struct.Reg, %struct.Reg* %20381, i32 0, i32 0
  %RAX.i1795 = bitcast %union.anon* %20382 to i64*
  %20383 = load i64, i64* %RAX.i1795
  %20384 = load i64, i64* %PC.i1794
  %20385 = add i64 %20384, 3
  store i64 %20385, i64* %PC.i1794
  %20386 = trunc i64 %20383 to i32
  %20387 = add i32 1, %20386
  %20388 = zext i32 %20387 to i64
  store i64 %20388, i64* %RAX.i1795, align 8
  %20389 = icmp ult i32 %20387, %20386
  %20390 = icmp ult i32 %20387, 1
  %20391 = or i1 %20389, %20390
  %20392 = zext i1 %20391 to i8
  %20393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20392, i8* %20393, align 1
  %20394 = and i32 %20387, 255
  %20395 = call i32 @llvm.ctpop.i32(i32 %20394)
  %20396 = trunc i32 %20395 to i8
  %20397 = and i8 %20396, 1
  %20398 = xor i8 %20397, 1
  %20399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20398, i8* %20399, align 1
  %20400 = xor i64 1, %20383
  %20401 = trunc i64 %20400 to i32
  %20402 = xor i32 %20401, %20387
  %20403 = lshr i32 %20402, 4
  %20404 = trunc i32 %20403 to i8
  %20405 = and i8 %20404, 1
  %20406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20405, i8* %20406, align 1
  %20407 = icmp eq i32 %20387, 0
  %20408 = zext i1 %20407 to i8
  %20409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20408, i8* %20409, align 1
  %20410 = lshr i32 %20387, 31
  %20411 = trunc i32 %20410 to i8
  %20412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20411, i8* %20412, align 1
  %20413 = lshr i32 %20386, 31
  %20414 = xor i32 %20410, %20413
  %20415 = add i32 %20414, %20410
  %20416 = icmp eq i32 %20415, 2
  %20417 = zext i1 %20416 to i8
  %20418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20417, i8* %20418, align 1
  store %struct.Memory* %loadMem_4ab766, %struct.Memory** %MEMORY
  %loadMem_4ab769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20420 = getelementptr inbounds %struct.GPR, %struct.GPR* %20419, i32 0, i32 33
  %20421 = getelementptr inbounds %struct.Reg, %struct.Reg* %20420, i32 0, i32 0
  %PC.i1791 = bitcast %union.anon* %20421 to i64*
  %20422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20423 = getelementptr inbounds %struct.GPR, %struct.GPR* %20422, i32 0, i32 1
  %20424 = getelementptr inbounds %struct.Reg, %struct.Reg* %20423, i32 0, i32 0
  %EAX.i1792 = bitcast %union.anon* %20424 to i32*
  %20425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20426 = getelementptr inbounds %struct.GPR, %struct.GPR* %20425, i32 0, i32 15
  %20427 = getelementptr inbounds %struct.Reg, %struct.Reg* %20426, i32 0, i32 0
  %RBP.i1793 = bitcast %union.anon* %20427 to i64*
  %20428 = load i64, i64* %RBP.i1793
  %20429 = sub i64 %20428, 24
  %20430 = load i32, i32* %EAX.i1792
  %20431 = zext i32 %20430 to i64
  %20432 = load i64, i64* %PC.i1791
  %20433 = add i64 %20432, 3
  store i64 %20433, i64* %PC.i1791
  %20434 = inttoptr i64 %20429 to i32*
  store i32 %20430, i32* %20434
  store %struct.Memory* %loadMem_4ab769, %struct.Memory** %MEMORY
  %loadMem_4ab76c = load %struct.Memory*, %struct.Memory** %MEMORY
  %20435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20436 = getelementptr inbounds %struct.GPR, %struct.GPR* %20435, i32 0, i32 33
  %20437 = getelementptr inbounds %struct.Reg, %struct.Reg* %20436, i32 0, i32 0
  %PC.i1790 = bitcast %union.anon* %20437 to i64*
  %20438 = load i64, i64* %PC.i1790
  %20439 = add i64 %20438, -72
  %20440 = load i64, i64* %PC.i1790
  %20441 = add i64 %20440, 5
  store i64 %20441, i64* %PC.i1790
  %20442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20439, i64* %20442, align 8
  store %struct.Memory* %loadMem_4ab76c, %struct.Memory** %MEMORY
  br label %block_.L_4ab724

block_.L_4ab771:                                  ; preds = %block_.L_4ab724
  %loadMem_4ab771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20444 = getelementptr inbounds %struct.GPR, %struct.GPR* %20443, i32 0, i32 33
  %20445 = getelementptr inbounds %struct.Reg, %struct.Reg* %20444, i32 0, i32 0
  %PC.i1789 = bitcast %union.anon* %20445 to i64*
  %20446 = load i64, i64* %PC.i1789
  %20447 = add i64 %20446, 5
  %20448 = load i64, i64* %PC.i1789
  %20449 = add i64 %20448, 5
  store i64 %20449, i64* %PC.i1789
  %20450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20447, i64* %20450, align 8
  store %struct.Memory* %loadMem_4ab771, %struct.Memory** %MEMORY
  br label %block_.L_4ab776

block_.L_4ab776:                                  ; preds = %block_.L_4ab771, %block_.L_4ab709
  %loadMem_4ab776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20452 = getelementptr inbounds %struct.GPR, %struct.GPR* %20451, i32 0, i32 33
  %20453 = getelementptr inbounds %struct.Reg, %struct.Reg* %20452, i32 0, i32 0
  %PC.i1787 = bitcast %union.anon* %20453 to i64*
  %20454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20455 = getelementptr inbounds %struct.GPR, %struct.GPR* %20454, i32 0, i32 15
  %20456 = getelementptr inbounds %struct.Reg, %struct.Reg* %20455, i32 0, i32 0
  %RBP.i1788 = bitcast %union.anon* %20456 to i64*
  %20457 = load i64, i64* %RBP.i1788
  %20458 = sub i64 %20457, 24
  %20459 = load i64, i64* %PC.i1787
  %20460 = add i64 %20459, 7
  store i64 %20460, i64* %PC.i1787
  %20461 = inttoptr i64 %20458 to i32*
  store i32 0, i32* %20461
  store %struct.Memory* %loadMem_4ab776, %struct.Memory** %MEMORY
  br label %block_.L_4ab77d

block_.L_4ab77d:                                  ; preds = %block_.L_4ab7b6, %block_.L_4ab776
  %loadMem_4ab77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20463 = getelementptr inbounds %struct.GPR, %struct.GPR* %20462, i32 0, i32 33
  %20464 = getelementptr inbounds %struct.Reg, %struct.Reg* %20463, i32 0, i32 0
  %PC.i1784 = bitcast %union.anon* %20464 to i64*
  %20465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20466 = getelementptr inbounds %struct.GPR, %struct.GPR* %20465, i32 0, i32 1
  %20467 = getelementptr inbounds %struct.Reg, %struct.Reg* %20466, i32 0, i32 0
  %EAX.i1785 = bitcast %union.anon* %20467 to i32*
  %20468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20469 = getelementptr inbounds %struct.GPR, %struct.GPR* %20468, i32 0, i32 1
  %20470 = getelementptr inbounds %struct.Reg, %struct.Reg* %20469, i32 0, i32 0
  %RAX.i1786 = bitcast %union.anon* %20470 to i64*
  %20471 = load i64, i64* %RAX.i1786
  %20472 = load i32, i32* %EAX.i1785
  %20473 = zext i32 %20472 to i64
  %20474 = load i64, i64* %PC.i1784
  %20475 = add i64 %20474, 2
  store i64 %20475, i64* %PC.i1784
  %20476 = xor i64 %20473, %20471
  %20477 = trunc i64 %20476 to i32
  %20478 = and i64 %20476, 4294967295
  store i64 %20478, i64* %RAX.i1786, align 8
  %20479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20479, align 1
  %20480 = and i32 %20477, 255
  %20481 = call i32 @llvm.ctpop.i32(i32 %20480)
  %20482 = trunc i32 %20481 to i8
  %20483 = and i8 %20482, 1
  %20484 = xor i8 %20483, 1
  %20485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20484, i8* %20485, align 1
  %20486 = icmp eq i32 %20477, 0
  %20487 = zext i1 %20486 to i8
  %20488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20487, i8* %20488, align 1
  %20489 = lshr i32 %20477, 31
  %20490 = trunc i32 %20489 to i8
  %20491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20490, i8* %20491, align 1
  %20492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20492, align 1
  %20493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20493, align 1
  store %struct.Memory* %loadMem_4ab77d, %struct.Memory** %MEMORY
  %loadMem_4ab77f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20495 = getelementptr inbounds %struct.GPR, %struct.GPR* %20494, i32 0, i32 33
  %20496 = getelementptr inbounds %struct.Reg, %struct.Reg* %20495, i32 0, i32 0
  %PC.i1781 = bitcast %union.anon* %20496 to i64*
  %20497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20498 = getelementptr inbounds %struct.GPR, %struct.GPR* %20497, i32 0, i32 1
  %20499 = getelementptr inbounds %struct.Reg, %struct.Reg* %20498, i32 0, i32 0
  %20500 = bitcast %union.anon* %20499 to %struct.anon.2*
  %AL.i1782 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20500, i32 0, i32 0
  %20501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20502 = getelementptr inbounds %struct.GPR, %struct.GPR* %20501, i32 0, i32 5
  %20503 = getelementptr inbounds %struct.Reg, %struct.Reg* %20502, i32 0, i32 0
  %20504 = bitcast %union.anon* %20503 to %struct.anon.2*
  %CL.i1783 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20504, i32 0, i32 0
  %20505 = load i8, i8* %AL.i1782
  %20506 = zext i8 %20505 to i64
  %20507 = load i64, i64* %PC.i1781
  %20508 = add i64 %20507, 2
  store i64 %20508, i64* %PC.i1781
  store i8 %20505, i8* %CL.i1783, align 1
  store %struct.Memory* %loadMem_4ab77f, %struct.Memory** %MEMORY
  %loadMem_4ab781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20510 = getelementptr inbounds %struct.GPR, %struct.GPR* %20509, i32 0, i32 33
  %20511 = getelementptr inbounds %struct.Reg, %struct.Reg* %20510, i32 0, i32 0
  %PC.i1779 = bitcast %union.anon* %20511 to i64*
  %20512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20513 = getelementptr inbounds %struct.GPR, %struct.GPR* %20512, i32 0, i32 15
  %20514 = getelementptr inbounds %struct.Reg, %struct.Reg* %20513, i32 0, i32 0
  %RBP.i1780 = bitcast %union.anon* %20514 to i64*
  %20515 = load i64, i64* %RBP.i1780
  %20516 = sub i64 %20515, 24
  %20517 = load i64, i64* %PC.i1779
  %20518 = add i64 %20517, 4
  store i64 %20518, i64* %PC.i1779
  %20519 = inttoptr i64 %20516 to i32*
  %20520 = load i32, i32* %20519
  %20521 = sub i32 %20520, 8
  %20522 = icmp ult i32 %20520, 8
  %20523 = zext i1 %20522 to i8
  %20524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20523, i8* %20524, align 1
  %20525 = and i32 %20521, 255
  %20526 = call i32 @llvm.ctpop.i32(i32 %20525)
  %20527 = trunc i32 %20526 to i8
  %20528 = and i8 %20527, 1
  %20529 = xor i8 %20528, 1
  %20530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20529, i8* %20530, align 1
  %20531 = xor i32 %20520, 8
  %20532 = xor i32 %20531, %20521
  %20533 = lshr i32 %20532, 4
  %20534 = trunc i32 %20533 to i8
  %20535 = and i8 %20534, 1
  %20536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20535, i8* %20536, align 1
  %20537 = icmp eq i32 %20521, 0
  %20538 = zext i1 %20537 to i8
  %20539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20538, i8* %20539, align 1
  %20540 = lshr i32 %20521, 31
  %20541 = trunc i32 %20540 to i8
  %20542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20541, i8* %20542, align 1
  %20543 = lshr i32 %20520, 31
  %20544 = xor i32 %20540, %20543
  %20545 = add i32 %20544, %20543
  %20546 = icmp eq i32 %20545, 2
  %20547 = zext i1 %20546 to i8
  %20548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20547, i8* %20548, align 1
  store %struct.Memory* %loadMem_4ab781, %struct.Memory** %MEMORY
  %loadMem_4ab785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20550 = getelementptr inbounds %struct.GPR, %struct.GPR* %20549, i32 0, i32 33
  %20551 = getelementptr inbounds %struct.Reg, %struct.Reg* %20550, i32 0, i32 0
  %PC.i1776 = bitcast %union.anon* %20551 to i64*
  %20552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20553 = getelementptr inbounds %struct.GPR, %struct.GPR* %20552, i32 0, i32 5
  %20554 = getelementptr inbounds %struct.Reg, %struct.Reg* %20553, i32 0, i32 0
  %20555 = bitcast %union.anon* %20554 to %struct.anon.2*
  %CL.i1777 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20555, i32 0, i32 0
  %20556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20557 = getelementptr inbounds %struct.GPR, %struct.GPR* %20556, i32 0, i32 15
  %20558 = getelementptr inbounds %struct.Reg, %struct.Reg* %20557, i32 0, i32 0
  %RBP.i1778 = bitcast %union.anon* %20558 to i64*
  %20559 = load i64, i64* %RBP.i1778
  %20560 = sub i64 %20559, 717
  %20561 = load i8, i8* %CL.i1777
  %20562 = zext i8 %20561 to i64
  %20563 = load i64, i64* %PC.i1776
  %20564 = add i64 %20563, 6
  store i64 %20564, i64* %PC.i1776
  %20565 = inttoptr i64 %20560 to i8*
  store i8 %20561, i8* %20565
  store %struct.Memory* %loadMem_4ab785, %struct.Memory** %MEMORY
  %loadMem_4ab78b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20567 = getelementptr inbounds %struct.GPR, %struct.GPR* %20566, i32 0, i32 33
  %20568 = getelementptr inbounds %struct.Reg, %struct.Reg* %20567, i32 0, i32 0
  %PC.i1775 = bitcast %union.anon* %20568 to i64*
  %20569 = load i64, i64* %PC.i1775
  %20570 = add i64 %20569, 24
  %20571 = load i64, i64* %PC.i1775
  %20572 = add i64 %20571, 6
  %20573 = load i64, i64* %PC.i1775
  %20574 = add i64 %20573, 6
  store i64 %20574, i64* %PC.i1775
  %20575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20576 = load i8, i8* %20575, align 1
  %20577 = icmp ne i8 %20576, 0
  %20578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20579 = load i8, i8* %20578, align 1
  %20580 = icmp ne i8 %20579, 0
  %20581 = xor i1 %20577, %20580
  %20582 = xor i1 %20581, true
  %20583 = zext i1 %20582 to i8
  store i8 %20583, i8* %BRANCH_TAKEN, align 1
  %20584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20585 = select i1 %20581, i64 %20572, i64 %20570
  store i64 %20585, i64* %20584, align 8
  store %struct.Memory* %loadMem_4ab78b, %struct.Memory** %MEMORY
  %loadBr_4ab78b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab78b = icmp eq i8 %loadBr_4ab78b, 1
  br i1 %cmpBr_4ab78b, label %block_.L_4ab7a3, label %block_4ab791

block_4ab791:                                     ; preds = %block_.L_4ab77d
  %loadMem_4ab791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20587 = getelementptr inbounds %struct.GPR, %struct.GPR* %20586, i32 0, i32 33
  %20588 = getelementptr inbounds %struct.Reg, %struct.Reg* %20587, i32 0, i32 0
  %PC.i1773 = bitcast %union.anon* %20588 to i64*
  %20589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20590 = getelementptr inbounds %struct.GPR, %struct.GPR* %20589, i32 0, i32 15
  %20591 = getelementptr inbounds %struct.Reg, %struct.Reg* %20590, i32 0, i32 0
  %RBP.i1774 = bitcast %union.anon* %20591 to i64*
  %20592 = load i64, i64* %RBP.i1774
  %20593 = sub i64 %20592, 412
  %20594 = load i64, i64* %PC.i1773
  %20595 = add i64 %20594, 7
  store i64 %20595, i64* %PC.i1773
  %20596 = inttoptr i64 %20593 to i32*
  %20597 = load i32, i32* %20596
  %20598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20598, align 1
  %20599 = and i32 %20597, 255
  %20600 = call i32 @llvm.ctpop.i32(i32 %20599)
  %20601 = trunc i32 %20600 to i8
  %20602 = and i8 %20601, 1
  %20603 = xor i8 %20602, 1
  %20604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20603, i8* %20604, align 1
  %20605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20605, align 1
  %20606 = icmp eq i32 %20597, 0
  %20607 = zext i1 %20606 to i8
  %20608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20607, i8* %20608, align 1
  %20609 = lshr i32 %20597, 31
  %20610 = trunc i32 %20609 to i8
  %20611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20610, i8* %20611, align 1
  %20612 = lshr i32 %20597, 31
  %20613 = xor i32 %20609, %20612
  %20614 = add i32 %20613, %20612
  %20615 = icmp eq i32 %20614, 2
  %20616 = zext i1 %20615 to i8
  %20617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20616, i8* %20617, align 1
  store %struct.Memory* %loadMem_4ab791, %struct.Memory** %MEMORY
  %loadMem_4ab798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20619 = getelementptr inbounds %struct.GPR, %struct.GPR* %20618, i32 0, i32 33
  %20620 = getelementptr inbounds %struct.Reg, %struct.Reg* %20619, i32 0, i32 0
  %PC.i1771 = bitcast %union.anon* %20620 to i64*
  %20621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20622 = getelementptr inbounds %struct.GPR, %struct.GPR* %20621, i32 0, i32 1
  %20623 = getelementptr inbounds %struct.Reg, %struct.Reg* %20622, i32 0, i32 0
  %20624 = bitcast %union.anon* %20623 to %struct.anon.2*
  %AL.i1772 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20624, i32 0, i32 0
  %20625 = load i64, i64* %PC.i1771
  %20626 = add i64 %20625, 3
  store i64 %20626, i64* %PC.i1771
  %20627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20628 = load i8, i8* %20627, align 1
  %20629 = icmp eq i8 %20628, 0
  %20630 = zext i1 %20629 to i8
  store i8 %20630, i8* %AL.i1772, align 1
  store %struct.Memory* %loadMem_4ab798, %struct.Memory** %MEMORY
  %loadMem_4ab79b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20632 = getelementptr inbounds %struct.GPR, %struct.GPR* %20631, i32 0, i32 33
  %20633 = getelementptr inbounds %struct.Reg, %struct.Reg* %20632, i32 0, i32 0
  %PC.i1769 = bitcast %union.anon* %20633 to i64*
  %20634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20635 = getelementptr inbounds %struct.GPR, %struct.GPR* %20634, i32 0, i32 1
  %20636 = getelementptr inbounds %struct.Reg, %struct.Reg* %20635, i32 0, i32 0
  %20637 = bitcast %union.anon* %20636 to %struct.anon.2*
  %AL.i1770 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20637, i32 0, i32 0
  %20638 = load i8, i8* %AL.i1770
  %20639 = zext i8 %20638 to i64
  %20640 = load i64, i64* %PC.i1769
  %20641 = add i64 %20640, 2
  store i64 %20641, i64* %PC.i1769
  %20642 = xor i64 255, %20639
  %20643 = trunc i64 %20642 to i8
  store i8 %20643, i8* %AL.i1770, align 1
  %20644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20644, align 1
  %20645 = trunc i64 %20642 to i32
  %20646 = and i32 %20645, 255
  %20647 = call i32 @llvm.ctpop.i32(i32 %20646)
  %20648 = trunc i32 %20647 to i8
  %20649 = and i8 %20648, 1
  %20650 = xor i8 %20649, 1
  %20651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20650, i8* %20651, align 1
  %20652 = icmp eq i8 %20643, 0
  %20653 = zext i1 %20652 to i8
  %20654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20653, i8* %20654, align 1
  %20655 = lshr i8 %20643, 7
  %20656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20655, i8* %20656, align 1
  %20657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20657, align 1
  %20658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20658, align 1
  store %struct.Memory* %loadMem_4ab79b, %struct.Memory** %MEMORY
  %loadMem_4ab79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20660 = getelementptr inbounds %struct.GPR, %struct.GPR* %20659, i32 0, i32 33
  %20661 = getelementptr inbounds %struct.Reg, %struct.Reg* %20660, i32 0, i32 0
  %PC.i1766 = bitcast %union.anon* %20661 to i64*
  %20662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20663 = getelementptr inbounds %struct.GPR, %struct.GPR* %20662, i32 0, i32 1
  %20664 = getelementptr inbounds %struct.Reg, %struct.Reg* %20663, i32 0, i32 0
  %20665 = bitcast %union.anon* %20664 to %struct.anon.2*
  %AL.i1767 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20665, i32 0, i32 0
  %20666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20667 = getelementptr inbounds %struct.GPR, %struct.GPR* %20666, i32 0, i32 15
  %20668 = getelementptr inbounds %struct.Reg, %struct.Reg* %20667, i32 0, i32 0
  %RBP.i1768 = bitcast %union.anon* %20668 to i64*
  %20669 = load i64, i64* %RBP.i1768
  %20670 = sub i64 %20669, 717
  %20671 = load i8, i8* %AL.i1767
  %20672 = zext i8 %20671 to i64
  %20673 = load i64, i64* %PC.i1766
  %20674 = add i64 %20673, 6
  store i64 %20674, i64* %PC.i1766
  %20675 = inttoptr i64 %20670 to i8*
  store i8 %20671, i8* %20675
  store %struct.Memory* %loadMem_4ab79d, %struct.Memory** %MEMORY
  br label %block_.L_4ab7a3

block_.L_4ab7a3:                                  ; preds = %block_4ab791, %block_.L_4ab77d
  %loadMem_4ab7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20677 = getelementptr inbounds %struct.GPR, %struct.GPR* %20676, i32 0, i32 33
  %20678 = getelementptr inbounds %struct.Reg, %struct.Reg* %20677, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %20678 to i64*
  %20679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20680 = getelementptr inbounds %struct.GPR, %struct.GPR* %20679, i32 0, i32 1
  %20681 = getelementptr inbounds %struct.Reg, %struct.Reg* %20680, i32 0, i32 0
  %20682 = bitcast %union.anon* %20681 to %struct.anon.2*
  %AL.i1764 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20682, i32 0, i32 0
  %20683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20684 = getelementptr inbounds %struct.GPR, %struct.GPR* %20683, i32 0, i32 15
  %20685 = getelementptr inbounds %struct.Reg, %struct.Reg* %20684, i32 0, i32 0
  %RBP.i1765 = bitcast %union.anon* %20685 to i64*
  %20686 = load i64, i64* %RBP.i1765
  %20687 = sub i64 %20686, 717
  %20688 = load i64, i64* %PC.i1763
  %20689 = add i64 %20688, 6
  store i64 %20689, i64* %PC.i1763
  %20690 = inttoptr i64 %20687 to i8*
  %20691 = load i8, i8* %20690
  store i8 %20691, i8* %AL.i1764, align 1
  store %struct.Memory* %loadMem_4ab7a3, %struct.Memory** %MEMORY
  %loadMem_4ab7a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20693 = getelementptr inbounds %struct.GPR, %struct.GPR* %20692, i32 0, i32 33
  %20694 = getelementptr inbounds %struct.Reg, %struct.Reg* %20693, i32 0, i32 0
  %PC.i1761 = bitcast %union.anon* %20694 to i64*
  %20695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20696 = getelementptr inbounds %struct.GPR, %struct.GPR* %20695, i32 0, i32 1
  %20697 = getelementptr inbounds %struct.Reg, %struct.Reg* %20696, i32 0, i32 0
  %20698 = bitcast %union.anon* %20697 to %struct.anon.2*
  %AL.i1762 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20698, i32 0, i32 0
  %20699 = load i8, i8* %AL.i1762
  %20700 = zext i8 %20699 to i64
  %20701 = load i64, i64* %PC.i1761
  %20702 = add i64 %20701, 2
  store i64 %20702, i64* %PC.i1761
  %20703 = and i64 1, %20700
  %20704 = trunc i64 %20703 to i8
  %20705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20705, align 1
  %20706 = trunc i64 %20703 to i32
  %20707 = and i32 %20706, 255
  %20708 = call i32 @llvm.ctpop.i32(i32 %20707)
  %20709 = trunc i32 %20708 to i8
  %20710 = and i8 %20709, 1
  %20711 = xor i8 %20710, 1
  %20712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20711, i8* %20712, align 1
  %20713 = icmp eq i8 %20704, 0
  %20714 = zext i1 %20713 to i8
  %20715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20714, i8* %20715, align 1
  %20716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %20716, align 1
  %20717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20717, align 1
  %20718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20718, align 1
  store %struct.Memory* %loadMem_4ab7a9, %struct.Memory** %MEMORY
  %loadMem_4ab7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %20719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20720 = getelementptr inbounds %struct.GPR, %struct.GPR* %20719, i32 0, i32 33
  %20721 = getelementptr inbounds %struct.Reg, %struct.Reg* %20720, i32 0, i32 0
  %PC.i1760 = bitcast %union.anon* %20721 to i64*
  %20722 = load i64, i64* %PC.i1760
  %20723 = add i64 %20722, 11
  %20724 = load i64, i64* %PC.i1760
  %20725 = add i64 %20724, 6
  %20726 = load i64, i64* %PC.i1760
  %20727 = add i64 %20726, 6
  store i64 %20727, i64* %PC.i1760
  %20728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20729 = load i8, i8* %20728, align 1
  %20730 = icmp eq i8 %20729, 0
  %20731 = zext i1 %20730 to i8
  store i8 %20731, i8* %BRANCH_TAKEN, align 1
  %20732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20733 = select i1 %20730, i64 %20723, i64 %20725
  store i64 %20733, i64* %20732, align 8
  store %struct.Memory* %loadMem_4ab7ab, %struct.Memory** %MEMORY
  %loadBr_4ab7ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ab7ab = icmp eq i8 %loadBr_4ab7ab, 1
  br i1 %cmpBr_4ab7ab, label %block_.L_4ab7b6, label %block_4ab7b1

block_4ab7b1:                                     ; preds = %block_.L_4ab7a3
  %loadMem_4ab7b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20735 = getelementptr inbounds %struct.GPR, %struct.GPR* %20734, i32 0, i32 33
  %20736 = getelementptr inbounds %struct.Reg, %struct.Reg* %20735, i32 0, i32 0
  %PC.i1759 = bitcast %union.anon* %20736 to i64*
  %20737 = load i64, i64* %PC.i1759
  %20738 = add i64 %20737, 903
  %20739 = load i64, i64* %PC.i1759
  %20740 = add i64 %20739, 5
  store i64 %20740, i64* %PC.i1759
  %20741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20738, i64* %20741, align 8
  store %struct.Memory* %loadMem_4ab7b1, %struct.Memory** %MEMORY
  br label %block_.L_4abb38

block_.L_4ab7b6:                                  ; preds = %block_.L_4ab7a3
  %loadMem_4ab7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20743 = getelementptr inbounds %struct.GPR, %struct.GPR* %20742, i32 0, i32 33
  %20744 = getelementptr inbounds %struct.Reg, %struct.Reg* %20743, i32 0, i32 0
  %PC.i1756 = bitcast %union.anon* %20744 to i64*
  %20745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20746 = getelementptr inbounds %struct.GPR, %struct.GPR* %20745, i32 0, i32 1
  %20747 = getelementptr inbounds %struct.Reg, %struct.Reg* %20746, i32 0, i32 0
  %EAX.i1757 = bitcast %union.anon* %20747 to i32*
  %20748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20749 = getelementptr inbounds %struct.GPR, %struct.GPR* %20748, i32 0, i32 1
  %20750 = getelementptr inbounds %struct.Reg, %struct.Reg* %20749, i32 0, i32 0
  %RAX.i1758 = bitcast %union.anon* %20750 to i64*
  %20751 = load i64, i64* %RAX.i1758
  %20752 = load i32, i32* %EAX.i1757
  %20753 = zext i32 %20752 to i64
  %20754 = load i64, i64* %PC.i1756
  %20755 = add i64 %20754, 2
  store i64 %20755, i64* %PC.i1756
  %20756 = xor i64 %20753, %20751
  %20757 = trunc i64 %20756 to i32
  %20758 = and i64 %20756, 4294967295
  store i64 %20758, i64* %RAX.i1758, align 8
  %20759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20759, align 1
  %20760 = and i32 %20757, 255
  %20761 = call i32 @llvm.ctpop.i32(i32 %20760)
  %20762 = trunc i32 %20761 to i8
  %20763 = and i8 %20762, 1
  %20764 = xor i8 %20763, 1
  %20765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20764, i8* %20765, align 1
  %20766 = icmp eq i32 %20757, 0
  %20767 = zext i1 %20766 to i8
  %20768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20767, i8* %20768, align 1
  %20769 = lshr i32 %20757, 31
  %20770 = trunc i32 %20769 to i8
  %20771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20770, i8* %20771, align 1
  %20772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20772, align 1
  %20773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20773, align 1
  store %struct.Memory* %loadMem_4ab7b6, %struct.Memory** %MEMORY
  %loadMem_4ab7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20775 = getelementptr inbounds %struct.GPR, %struct.GPR* %20774, i32 0, i32 33
  %20776 = getelementptr inbounds %struct.Reg, %struct.Reg* %20775, i32 0, i32 0
  %PC.i1754 = bitcast %union.anon* %20776 to i64*
  %20777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20778 = getelementptr inbounds %struct.GPR, %struct.GPR* %20777, i32 0, i32 5
  %20779 = getelementptr inbounds %struct.Reg, %struct.Reg* %20778, i32 0, i32 0
  %RCX.i1755 = bitcast %union.anon* %20779 to i64*
  %20780 = load i64, i64* %PC.i1754
  %20781 = add i64 %20780, 8
  store i64 %20781, i64* %PC.i1754
  %20782 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20782, i64* %RCX.i1755, align 8
  store %struct.Memory* %loadMem_4ab7b8, %struct.Memory** %MEMORY
  %loadMem_4ab7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20784 = getelementptr inbounds %struct.GPR, %struct.GPR* %20783, i32 0, i32 33
  %20785 = getelementptr inbounds %struct.Reg, %struct.Reg* %20784, i32 0, i32 0
  %PC.i1751 = bitcast %union.anon* %20785 to i64*
  %20786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20787 = getelementptr inbounds %struct.GPR, %struct.GPR* %20786, i32 0, i32 7
  %20788 = getelementptr inbounds %struct.Reg, %struct.Reg* %20787, i32 0, i32 0
  %RDX.i1752 = bitcast %union.anon* %20788 to i64*
  %20789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20790 = getelementptr inbounds %struct.GPR, %struct.GPR* %20789, i32 0, i32 15
  %20791 = getelementptr inbounds %struct.Reg, %struct.Reg* %20790, i32 0, i32 0
  %RBP.i1753 = bitcast %union.anon* %20791 to i64*
  %20792 = load i64, i64* %RBP.i1753
  %20793 = sub i64 %20792, 24
  %20794 = load i64, i64* %PC.i1751
  %20795 = add i64 %20794, 4
  store i64 %20795, i64* %PC.i1751
  %20796 = inttoptr i64 %20793 to i32*
  %20797 = load i32, i32* %20796
  %20798 = sext i32 %20797 to i64
  store i64 %20798, i64* %RDX.i1752, align 8
  store %struct.Memory* %loadMem_4ab7c0, %struct.Memory** %MEMORY
  %loadMem_4ab7c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20800 = getelementptr inbounds %struct.GPR, %struct.GPR* %20799, i32 0, i32 33
  %20801 = getelementptr inbounds %struct.Reg, %struct.Reg* %20800, i32 0, i32 0
  %PC.i1747 = bitcast %union.anon* %20801 to i64*
  %20802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20803 = getelementptr inbounds %struct.GPR, %struct.GPR* %20802, i32 0, i32 5
  %20804 = getelementptr inbounds %struct.Reg, %struct.Reg* %20803, i32 0, i32 0
  %RCX.i1748 = bitcast %union.anon* %20804 to i64*
  %20805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20806 = getelementptr inbounds %struct.GPR, %struct.GPR* %20805, i32 0, i32 7
  %20807 = getelementptr inbounds %struct.Reg, %struct.Reg* %20806, i32 0, i32 0
  %RDX.i1749 = bitcast %union.anon* %20807 to i64*
  %20808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20809 = getelementptr inbounds %struct.GPR, %struct.GPR* %20808, i32 0, i32 9
  %20810 = getelementptr inbounds %struct.Reg, %struct.Reg* %20809, i32 0, i32 0
  %RSI.i1750 = bitcast %union.anon* %20810 to i64*
  %20811 = load i64, i64* %RCX.i1748
  %20812 = load i64, i64* %RDX.i1749
  %20813 = mul i64 %20812, 4
  %20814 = add i64 %20811, 13112
  %20815 = add i64 %20814, %20813
  %20816 = load i64, i64* %PC.i1747
  %20817 = add i64 %20816, 7
  store i64 %20817, i64* %PC.i1747
  %20818 = inttoptr i64 %20815 to i32*
  %20819 = load i32, i32* %20818
  %20820 = zext i32 %20819 to i64
  store i64 %20820, i64* %RSI.i1750, align 8
  store %struct.Memory* %loadMem_4ab7c4, %struct.Memory** %MEMORY
  %loadMem_4ab7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %20821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20822 = getelementptr inbounds %struct.GPR, %struct.GPR* %20821, i32 0, i32 33
  %20823 = getelementptr inbounds %struct.Reg, %struct.Reg* %20822, i32 0, i32 0
  %PC.i1745 = bitcast %union.anon* %20823 to i64*
  %20824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20825 = getelementptr inbounds %struct.GPR, %struct.GPR* %20824, i32 0, i32 5
  %20826 = getelementptr inbounds %struct.Reg, %struct.Reg* %20825, i32 0, i32 0
  %RCX.i1746 = bitcast %union.anon* %20826 to i64*
  %20827 = load i64, i64* %PC.i1745
  %20828 = add i64 %20827, 8
  store i64 %20828, i64* %PC.i1745
  %20829 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20829, i64* %RCX.i1746, align 8
  store %struct.Memory* %loadMem_4ab7cb, %struct.Memory** %MEMORY
  %loadMem_4ab7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20831 = getelementptr inbounds %struct.GPR, %struct.GPR* %20830, i32 0, i32 33
  %20832 = getelementptr inbounds %struct.Reg, %struct.Reg* %20831, i32 0, i32 0
  %PC.i1742 = bitcast %union.anon* %20832 to i64*
  %20833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20834 = getelementptr inbounds %struct.GPR, %struct.GPR* %20833, i32 0, i32 7
  %20835 = getelementptr inbounds %struct.Reg, %struct.Reg* %20834, i32 0, i32 0
  %RDX.i1743 = bitcast %union.anon* %20835 to i64*
  %20836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20837 = getelementptr inbounds %struct.GPR, %struct.GPR* %20836, i32 0, i32 15
  %20838 = getelementptr inbounds %struct.Reg, %struct.Reg* %20837, i32 0, i32 0
  %RBP.i1744 = bitcast %union.anon* %20838 to i64*
  %20839 = load i64, i64* %RBP.i1744
  %20840 = sub i64 %20839, 24
  %20841 = load i64, i64* %PC.i1742
  %20842 = add i64 %20841, 4
  store i64 %20842, i64* %PC.i1742
  %20843 = inttoptr i64 %20840 to i32*
  %20844 = load i32, i32* %20843
  %20845 = sext i32 %20844 to i64
  store i64 %20845, i64* %RDX.i1743, align 8
  store %struct.Memory* %loadMem_4ab7d3, %struct.Memory** %MEMORY
  %loadMem_4ab7d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20847 = getelementptr inbounds %struct.GPR, %struct.GPR* %20846, i32 0, i32 33
  %20848 = getelementptr inbounds %struct.Reg, %struct.Reg* %20847, i32 0, i32 0
  %PC.i1738 = bitcast %union.anon* %20848 to i64*
  %20849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20850 = getelementptr inbounds %struct.GPR, %struct.GPR* %20849, i32 0, i32 5
  %20851 = getelementptr inbounds %struct.Reg, %struct.Reg* %20850, i32 0, i32 0
  %RCX.i1739 = bitcast %union.anon* %20851 to i64*
  %20852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20853 = getelementptr inbounds %struct.GPR, %struct.GPR* %20852, i32 0, i32 7
  %20854 = getelementptr inbounds %struct.Reg, %struct.Reg* %20853, i32 0, i32 0
  %RDX.i1740 = bitcast %union.anon* %20854 to i64*
  %20855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20856 = getelementptr inbounds %struct.GPR, %struct.GPR* %20855, i32 0, i32 9
  %20857 = getelementptr inbounds %struct.Reg, %struct.Reg* %20856, i32 0, i32 0
  %RSI.i1741 = bitcast %union.anon* %20857 to i64*
  %20858 = load i64, i64* %RSI.i1741
  %20859 = load i64, i64* %RCX.i1739
  %20860 = load i64, i64* %RDX.i1740
  %20861 = mul i64 %20860, 4
  %20862 = add i64 %20859, 13368
  %20863 = add i64 %20862, %20861
  %20864 = load i64, i64* %PC.i1738
  %20865 = add i64 %20864, 7
  store i64 %20865, i64* %PC.i1738
  %20866 = trunc i64 %20858 to i32
  %20867 = inttoptr i64 %20863 to i32*
  %20868 = load i32, i32* %20867
  %20869 = add i32 %20868, %20866
  %20870 = zext i32 %20869 to i64
  store i64 %20870, i64* %RSI.i1741, align 8
  %20871 = icmp ult i32 %20869, %20866
  %20872 = icmp ult i32 %20869, %20868
  %20873 = or i1 %20871, %20872
  %20874 = zext i1 %20873 to i8
  %20875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20874, i8* %20875, align 1
  %20876 = and i32 %20869, 255
  %20877 = call i32 @llvm.ctpop.i32(i32 %20876)
  %20878 = trunc i32 %20877 to i8
  %20879 = and i8 %20878, 1
  %20880 = xor i8 %20879, 1
  %20881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20880, i8* %20881, align 1
  %20882 = xor i32 %20868, %20866
  %20883 = xor i32 %20882, %20869
  %20884 = lshr i32 %20883, 4
  %20885 = trunc i32 %20884 to i8
  %20886 = and i8 %20885, 1
  %20887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20886, i8* %20887, align 1
  %20888 = icmp eq i32 %20869, 0
  %20889 = zext i1 %20888 to i8
  %20890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20889, i8* %20890, align 1
  %20891 = lshr i32 %20869, 31
  %20892 = trunc i32 %20891 to i8
  %20893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20892, i8* %20893, align 1
  %20894 = lshr i32 %20866, 31
  %20895 = lshr i32 %20868, 31
  %20896 = xor i32 %20891, %20894
  %20897 = xor i32 %20891, %20895
  %20898 = add i32 %20896, %20897
  %20899 = icmp eq i32 %20898, 2
  %20900 = zext i1 %20899 to i8
  %20901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20900, i8* %20901, align 1
  store %struct.Memory* %loadMem_4ab7d7, %struct.Memory** %MEMORY
  %loadMem_4ab7de = load %struct.Memory*, %struct.Memory** %MEMORY
  %20902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20903 = getelementptr inbounds %struct.GPR, %struct.GPR* %20902, i32 0, i32 33
  %20904 = getelementptr inbounds %struct.Reg, %struct.Reg* %20903, i32 0, i32 0
  %PC.i1735 = bitcast %union.anon* %20904 to i64*
  %20905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20906 = getelementptr inbounds %struct.GPR, %struct.GPR* %20905, i32 0, i32 9
  %20907 = getelementptr inbounds %struct.Reg, %struct.Reg* %20906, i32 0, i32 0
  %ESI.i1736 = bitcast %union.anon* %20907 to i32*
  %20908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20909 = getelementptr inbounds %struct.GPR, %struct.GPR* %20908, i32 0, i32 15
  %20910 = getelementptr inbounds %struct.Reg, %struct.Reg* %20909, i32 0, i32 0
  %RBP.i1737 = bitcast %union.anon* %20910 to i64*
  %20911 = load i64, i64* %RBP.i1737
  %20912 = sub i64 %20911, 576
  %20913 = load i32, i32* %ESI.i1736
  %20914 = zext i32 %20913 to i64
  %20915 = load i64, i64* %PC.i1735
  %20916 = add i64 %20915, 6
  store i64 %20916, i64* %PC.i1735
  %20917 = inttoptr i64 %20912 to i32*
  store i32 %20913, i32* %20917
  store %struct.Memory* %loadMem_4ab7de, %struct.Memory** %MEMORY
  %loadMem_4ab7e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20919 = getelementptr inbounds %struct.GPR, %struct.GPR* %20918, i32 0, i32 33
  %20920 = getelementptr inbounds %struct.Reg, %struct.Reg* %20919, i32 0, i32 0
  %PC.i1733 = bitcast %union.anon* %20920 to i64*
  %20921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20922 = getelementptr inbounds %struct.GPR, %struct.GPR* %20921, i32 0, i32 5
  %20923 = getelementptr inbounds %struct.Reg, %struct.Reg* %20922, i32 0, i32 0
  %RCX.i1734 = bitcast %union.anon* %20923 to i64*
  %20924 = load i64, i64* %PC.i1733
  %20925 = add i64 %20924, 8
  store i64 %20925, i64* %PC.i1733
  %20926 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20926, i64* %RCX.i1734, align 8
  store %struct.Memory* %loadMem_4ab7e4, %struct.Memory** %MEMORY
  %loadMem_4ab7ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %20927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20928 = getelementptr inbounds %struct.GPR, %struct.GPR* %20927, i32 0, i32 33
  %20929 = getelementptr inbounds %struct.Reg, %struct.Reg* %20928, i32 0, i32 0
  %PC.i1730 = bitcast %union.anon* %20929 to i64*
  %20930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20931 = getelementptr inbounds %struct.GPR, %struct.GPR* %20930, i32 0, i32 7
  %20932 = getelementptr inbounds %struct.Reg, %struct.Reg* %20931, i32 0, i32 0
  %RDX.i1731 = bitcast %union.anon* %20932 to i64*
  %20933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20934 = getelementptr inbounds %struct.GPR, %struct.GPR* %20933, i32 0, i32 15
  %20935 = getelementptr inbounds %struct.Reg, %struct.Reg* %20934, i32 0, i32 0
  %RBP.i1732 = bitcast %union.anon* %20935 to i64*
  %20936 = load i64, i64* %RBP.i1732
  %20937 = sub i64 %20936, 24
  %20938 = load i64, i64* %PC.i1730
  %20939 = add i64 %20938, 4
  store i64 %20939, i64* %PC.i1730
  %20940 = inttoptr i64 %20937 to i32*
  %20941 = load i32, i32* %20940
  %20942 = sext i32 %20941 to i64
  store i64 %20942, i64* %RDX.i1731, align 8
  store %struct.Memory* %loadMem_4ab7ec, %struct.Memory** %MEMORY
  %loadMem_4ab7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20944 = getelementptr inbounds %struct.GPR, %struct.GPR* %20943, i32 0, i32 33
  %20945 = getelementptr inbounds %struct.Reg, %struct.Reg* %20944, i32 0, i32 0
  %PC.i1726 = bitcast %union.anon* %20945 to i64*
  %20946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20947 = getelementptr inbounds %struct.GPR, %struct.GPR* %20946, i32 0, i32 5
  %20948 = getelementptr inbounds %struct.Reg, %struct.Reg* %20947, i32 0, i32 0
  %RCX.i1727 = bitcast %union.anon* %20948 to i64*
  %20949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20950 = getelementptr inbounds %struct.GPR, %struct.GPR* %20949, i32 0, i32 7
  %20951 = getelementptr inbounds %struct.Reg, %struct.Reg* %20950, i32 0, i32 0
  %RDX.i1728 = bitcast %union.anon* %20951 to i64*
  %20952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20953 = getelementptr inbounds %struct.GPR, %struct.GPR* %20952, i32 0, i32 9
  %20954 = getelementptr inbounds %struct.Reg, %struct.Reg* %20953, i32 0, i32 0
  %RSI.i1729 = bitcast %union.anon* %20954 to i64*
  %20955 = load i64, i64* %RCX.i1727
  %20956 = load i64, i64* %RDX.i1728
  %20957 = mul i64 %20956, 4
  %20958 = add i64 %20955, 13112
  %20959 = add i64 %20958, %20957
  %20960 = load i64, i64* %PC.i1726
  %20961 = add i64 %20960, 7
  store i64 %20961, i64* %PC.i1726
  %20962 = inttoptr i64 %20959 to i32*
  %20963 = load i32, i32* %20962
  %20964 = zext i32 %20963 to i64
  store i64 %20964, i64* %RSI.i1729, align 8
  store %struct.Memory* %loadMem_4ab7f0, %struct.Memory** %MEMORY
  %loadMem_4ab7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20966 = getelementptr inbounds %struct.GPR, %struct.GPR* %20965, i32 0, i32 33
  %20967 = getelementptr inbounds %struct.Reg, %struct.Reg* %20966, i32 0, i32 0
  %PC.i1724 = bitcast %union.anon* %20967 to i64*
  %20968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20969 = getelementptr inbounds %struct.GPR, %struct.GPR* %20968, i32 0, i32 5
  %20970 = getelementptr inbounds %struct.Reg, %struct.Reg* %20969, i32 0, i32 0
  %RCX.i1725 = bitcast %union.anon* %20970 to i64*
  %20971 = load i64, i64* %PC.i1724
  %20972 = add i64 %20971, 8
  store i64 %20972, i64* %PC.i1724
  %20973 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20973, i64* %RCX.i1725, align 8
  store %struct.Memory* %loadMem_4ab7f7, %struct.Memory** %MEMORY
  %loadMem_4ab7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %20974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20975 = getelementptr inbounds %struct.GPR, %struct.GPR* %20974, i32 0, i32 33
  %20976 = getelementptr inbounds %struct.Reg, %struct.Reg* %20975, i32 0, i32 0
  %PC.i1721 = bitcast %union.anon* %20976 to i64*
  %20977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20978 = getelementptr inbounds %struct.GPR, %struct.GPR* %20977, i32 0, i32 7
  %20979 = getelementptr inbounds %struct.Reg, %struct.Reg* %20978, i32 0, i32 0
  %RDX.i1722 = bitcast %union.anon* %20979 to i64*
  %20980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20981 = getelementptr inbounds %struct.GPR, %struct.GPR* %20980, i32 0, i32 15
  %20982 = getelementptr inbounds %struct.Reg, %struct.Reg* %20981, i32 0, i32 0
  %RBP.i1723 = bitcast %union.anon* %20982 to i64*
  %20983 = load i64, i64* %RBP.i1723
  %20984 = sub i64 %20983, 24
  %20985 = load i64, i64* %PC.i1721
  %20986 = add i64 %20985, 4
  store i64 %20986, i64* %PC.i1721
  %20987 = inttoptr i64 %20984 to i32*
  %20988 = load i32, i32* %20987
  %20989 = sext i32 %20988 to i64
  store i64 %20989, i64* %RDX.i1722, align 8
  store %struct.Memory* %loadMem_4ab7ff, %struct.Memory** %MEMORY
  %loadMem_4ab803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20991 = getelementptr inbounds %struct.GPR, %struct.GPR* %20990, i32 0, i32 33
  %20992 = getelementptr inbounds %struct.Reg, %struct.Reg* %20991, i32 0, i32 0
  %PC.i1717 = bitcast %union.anon* %20992 to i64*
  %20993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20994 = getelementptr inbounds %struct.GPR, %struct.GPR* %20993, i32 0, i32 5
  %20995 = getelementptr inbounds %struct.Reg, %struct.Reg* %20994, i32 0, i32 0
  %RCX.i1718 = bitcast %union.anon* %20995 to i64*
  %20996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20997 = getelementptr inbounds %struct.GPR, %struct.GPR* %20996, i32 0, i32 7
  %20998 = getelementptr inbounds %struct.Reg, %struct.Reg* %20997, i32 0, i32 0
  %RDX.i1719 = bitcast %union.anon* %20998 to i64*
  %20999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21000 = getelementptr inbounds %struct.GPR, %struct.GPR* %20999, i32 0, i32 9
  %21001 = getelementptr inbounds %struct.Reg, %struct.Reg* %21000, i32 0, i32 0
  %RSI.i1720 = bitcast %union.anon* %21001 to i64*
  %21002 = load i64, i64* %RSI.i1720
  %21003 = load i64, i64* %RCX.i1718
  %21004 = load i64, i64* %RDX.i1719
  %21005 = mul i64 %21004, 4
  %21006 = add i64 %21003, 13368
  %21007 = add i64 %21006, %21005
  %21008 = load i64, i64* %PC.i1717
  %21009 = add i64 %21008, 7
  store i64 %21009, i64* %PC.i1717
  %21010 = trunc i64 %21002 to i32
  %21011 = inttoptr i64 %21007 to i32*
  %21012 = load i32, i32* %21011
  %21013 = sub i32 %21010, %21012
  %21014 = zext i32 %21013 to i64
  store i64 %21014, i64* %RSI.i1720, align 8
  %21015 = icmp ult i32 %21010, %21012
  %21016 = zext i1 %21015 to i8
  %21017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21016, i8* %21017, align 1
  %21018 = and i32 %21013, 255
  %21019 = call i32 @llvm.ctpop.i32(i32 %21018)
  %21020 = trunc i32 %21019 to i8
  %21021 = and i8 %21020, 1
  %21022 = xor i8 %21021, 1
  %21023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21022, i8* %21023, align 1
  %21024 = xor i32 %21012, %21010
  %21025 = xor i32 %21024, %21013
  %21026 = lshr i32 %21025, 4
  %21027 = trunc i32 %21026 to i8
  %21028 = and i8 %21027, 1
  %21029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21028, i8* %21029, align 1
  %21030 = icmp eq i32 %21013, 0
  %21031 = zext i1 %21030 to i8
  %21032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21031, i8* %21032, align 1
  %21033 = lshr i32 %21013, 31
  %21034 = trunc i32 %21033 to i8
  %21035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21034, i8* %21035, align 1
  %21036 = lshr i32 %21010, 31
  %21037 = lshr i32 %21012, 31
  %21038 = xor i32 %21037, %21036
  %21039 = xor i32 %21033, %21036
  %21040 = add i32 %21039, %21038
  %21041 = icmp eq i32 %21040, 2
  %21042 = zext i1 %21041 to i8
  %21043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21042, i8* %21043, align 1
  store %struct.Memory* %loadMem_4ab803, %struct.Memory** %MEMORY
  %loadMem_4ab80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21045 = getelementptr inbounds %struct.GPR, %struct.GPR* %21044, i32 0, i32 33
  %21046 = getelementptr inbounds %struct.Reg, %struct.Reg* %21045, i32 0, i32 0
  %PC.i1714 = bitcast %union.anon* %21046 to i64*
  %21047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21048 = getelementptr inbounds %struct.GPR, %struct.GPR* %21047, i32 0, i32 9
  %21049 = getelementptr inbounds %struct.Reg, %struct.Reg* %21048, i32 0, i32 0
  %ESI.i1715 = bitcast %union.anon* %21049 to i32*
  %21050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21051 = getelementptr inbounds %struct.GPR, %struct.GPR* %21050, i32 0, i32 15
  %21052 = getelementptr inbounds %struct.Reg, %struct.Reg* %21051, i32 0, i32 0
  %RBP.i1716 = bitcast %union.anon* %21052 to i64*
  %21053 = load i64, i64* %RBP.i1716
  %21054 = sub i64 %21053, 560
  %21055 = load i32, i32* %ESI.i1715
  %21056 = zext i32 %21055 to i64
  %21057 = load i64, i64* %PC.i1714
  %21058 = add i64 %21057, 6
  store i64 %21058, i64* %PC.i1714
  %21059 = inttoptr i64 %21054 to i32*
  store i32 %21055, i32* %21059
  store %struct.Memory* %loadMem_4ab80a, %struct.Memory** %MEMORY
  %loadMem_4ab810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21061 = getelementptr inbounds %struct.GPR, %struct.GPR* %21060, i32 0, i32 33
  %21062 = getelementptr inbounds %struct.Reg, %struct.Reg* %21061, i32 0, i32 0
  %PC.i1712 = bitcast %union.anon* %21062 to i64*
  %21063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21064 = getelementptr inbounds %struct.GPR, %struct.GPR* %21063, i32 0, i32 5
  %21065 = getelementptr inbounds %struct.Reg, %struct.Reg* %21064, i32 0, i32 0
  %RCX.i1713 = bitcast %union.anon* %21065 to i64*
  %21066 = load i64, i64* %PC.i1712
  %21067 = add i64 %21066, 8
  store i64 %21067, i64* %PC.i1712
  %21068 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21068, i64* %RCX.i1713, align 8
  store %struct.Memory* %loadMem_4ab810, %struct.Memory** %MEMORY
  %loadMem_4ab818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21070 = getelementptr inbounds %struct.GPR, %struct.GPR* %21069, i32 0, i32 33
  %21071 = getelementptr inbounds %struct.Reg, %struct.Reg* %21070, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %21071 to i64*
  %21072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21073 = getelementptr inbounds %struct.GPR, %struct.GPR* %21072, i32 0, i32 7
  %21074 = getelementptr inbounds %struct.Reg, %struct.Reg* %21073, i32 0, i32 0
  %RDX.i1710 = bitcast %union.anon* %21074 to i64*
  %21075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21076 = getelementptr inbounds %struct.GPR, %struct.GPR* %21075, i32 0, i32 15
  %21077 = getelementptr inbounds %struct.Reg, %struct.Reg* %21076, i32 0, i32 0
  %RBP.i1711 = bitcast %union.anon* %21077 to i64*
  %21078 = load i64, i64* %RBP.i1711
  %21079 = sub i64 %21078, 24
  %21080 = load i64, i64* %PC.i1709
  %21081 = add i64 %21080, 4
  store i64 %21081, i64* %PC.i1709
  %21082 = inttoptr i64 %21079 to i32*
  %21083 = load i32, i32* %21082
  %21084 = sext i32 %21083 to i64
  store i64 %21084, i64* %RDX.i1710, align 8
  store %struct.Memory* %loadMem_4ab818, %struct.Memory** %MEMORY
  %loadMem_4ab81c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21086 = getelementptr inbounds %struct.GPR, %struct.GPR* %21085, i32 0, i32 33
  %21087 = getelementptr inbounds %struct.Reg, %struct.Reg* %21086, i32 0, i32 0
  %PC.i1705 = bitcast %union.anon* %21087 to i64*
  %21088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21089 = getelementptr inbounds %struct.GPR, %struct.GPR* %21088, i32 0, i32 5
  %21090 = getelementptr inbounds %struct.Reg, %struct.Reg* %21089, i32 0, i32 0
  %RCX.i1706 = bitcast %union.anon* %21090 to i64*
  %21091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21092 = getelementptr inbounds %struct.GPR, %struct.GPR* %21091, i32 0, i32 7
  %21093 = getelementptr inbounds %struct.Reg, %struct.Reg* %21092, i32 0, i32 0
  %RDX.i1707 = bitcast %union.anon* %21093 to i64*
  %21094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21095 = getelementptr inbounds %struct.GPR, %struct.GPR* %21094, i32 0, i32 9
  %21096 = getelementptr inbounds %struct.Reg, %struct.Reg* %21095, i32 0, i32 0
  %RSI.i1708 = bitcast %union.anon* %21096 to i64*
  %21097 = load i64, i64* %RCX.i1706
  %21098 = load i64, i64* %RDX.i1707
  %21099 = mul i64 %21098, 4
  %21100 = add i64 %21097, 13240
  %21101 = add i64 %21100, %21099
  %21102 = load i64, i64* %PC.i1705
  %21103 = add i64 %21102, 7
  store i64 %21103, i64* %PC.i1705
  %21104 = inttoptr i64 %21101 to i32*
  %21105 = load i32, i32* %21104
  %21106 = zext i32 %21105 to i64
  store i64 %21106, i64* %RSI.i1708, align 8
  store %struct.Memory* %loadMem_4ab81c, %struct.Memory** %MEMORY
  %loadMem_4ab823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21108 = getelementptr inbounds %struct.GPR, %struct.GPR* %21107, i32 0, i32 33
  %21109 = getelementptr inbounds %struct.Reg, %struct.Reg* %21108, i32 0, i32 0
  %PC.i1703 = bitcast %union.anon* %21109 to i64*
  %21110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21111 = getelementptr inbounds %struct.GPR, %struct.GPR* %21110, i32 0, i32 9
  %21112 = getelementptr inbounds %struct.Reg, %struct.Reg* %21111, i32 0, i32 0
  %RSI.i1704 = bitcast %union.anon* %21112 to i64*
  %21113 = load i64, i64* %RSI.i1704
  %21114 = load i64, i64* %PC.i1703
  %21115 = add i64 %21114, 2
  store i64 %21115, i64* %PC.i1703
  %21116 = shl i64 %21113, 32
  %21117 = ashr i64 %21116, 33
  %21118 = trunc i64 %21113 to i8
  %21119 = and i8 %21118, 1
  %21120 = trunc i64 %21117 to i32
  %21121 = and i64 %21117, 4294967295
  store i64 %21121, i64* %RSI.i1704, align 8
  %21122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21119, i8* %21122, align 1
  %21123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21124 = and i32 %21120, 255
  %21125 = call i32 @llvm.ctpop.i32(i32 %21124)
  %21126 = trunc i32 %21125 to i8
  %21127 = and i8 %21126, 1
  %21128 = xor i8 %21127, 1
  store i8 %21128, i8* %21123, align 1
  %21129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21129, align 1
  %21130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21131 = icmp eq i32 %21120, 0
  %21132 = zext i1 %21131 to i8
  store i8 %21132, i8* %21130, align 1
  %21133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21134 = lshr i32 %21120, 31
  %21135 = trunc i32 %21134 to i8
  store i8 %21135, i8* %21133, align 1
  %21136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21136, align 1
  store %struct.Memory* %loadMem_4ab823, %struct.Memory** %MEMORY
  %loadMem_4ab826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21138 = getelementptr inbounds %struct.GPR, %struct.GPR* %21137, i32 0, i32 33
  %21139 = getelementptr inbounds %struct.Reg, %struct.Reg* %21138, i32 0, i32 0
  %PC.i1701 = bitcast %union.anon* %21139 to i64*
  %21140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21141 = getelementptr inbounds %struct.GPR, %struct.GPR* %21140, i32 0, i32 5
  %21142 = getelementptr inbounds %struct.Reg, %struct.Reg* %21141, i32 0, i32 0
  %RCX.i1702 = bitcast %union.anon* %21142 to i64*
  %21143 = load i64, i64* %PC.i1701
  %21144 = add i64 %21143, 8
  store i64 %21144, i64* %PC.i1701
  %21145 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21145, i64* %RCX.i1702, align 8
  store %struct.Memory* %loadMem_4ab826, %struct.Memory** %MEMORY
  %loadMem_4ab82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21147 = getelementptr inbounds %struct.GPR, %struct.GPR* %21146, i32 0, i32 33
  %21148 = getelementptr inbounds %struct.Reg, %struct.Reg* %21147, i32 0, i32 0
  %PC.i1698 = bitcast %union.anon* %21148 to i64*
  %21149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21150 = getelementptr inbounds %struct.GPR, %struct.GPR* %21149, i32 0, i32 7
  %21151 = getelementptr inbounds %struct.Reg, %struct.Reg* %21150, i32 0, i32 0
  %RDX.i1699 = bitcast %union.anon* %21151 to i64*
  %21152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21153 = getelementptr inbounds %struct.GPR, %struct.GPR* %21152, i32 0, i32 15
  %21154 = getelementptr inbounds %struct.Reg, %struct.Reg* %21153, i32 0, i32 0
  %RBP.i1700 = bitcast %union.anon* %21154 to i64*
  %21155 = load i64, i64* %RBP.i1700
  %21156 = sub i64 %21155, 24
  %21157 = load i64, i64* %PC.i1698
  %21158 = add i64 %21157, 4
  store i64 %21158, i64* %PC.i1698
  %21159 = inttoptr i64 %21156 to i32*
  %21160 = load i32, i32* %21159
  %21161 = sext i32 %21160 to i64
  store i64 %21161, i64* %RDX.i1699, align 8
  store %struct.Memory* %loadMem_4ab82e, %struct.Memory** %MEMORY
  %loadMem_4ab832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21163 = getelementptr inbounds %struct.GPR, %struct.GPR* %21162, i32 0, i32 33
  %21164 = getelementptr inbounds %struct.Reg, %struct.Reg* %21163, i32 0, i32 0
  %PC.i1694 = bitcast %union.anon* %21164 to i64*
  %21165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21166 = getelementptr inbounds %struct.GPR, %struct.GPR* %21165, i32 0, i32 5
  %21167 = getelementptr inbounds %struct.Reg, %struct.Reg* %21166, i32 0, i32 0
  %RCX.i1695 = bitcast %union.anon* %21167 to i64*
  %21168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21169 = getelementptr inbounds %struct.GPR, %struct.GPR* %21168, i32 0, i32 7
  %21170 = getelementptr inbounds %struct.Reg, %struct.Reg* %21169, i32 0, i32 0
  %RDX.i1696 = bitcast %union.anon* %21170 to i64*
  %21171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21172 = getelementptr inbounds %struct.GPR, %struct.GPR* %21171, i32 0, i32 9
  %21173 = getelementptr inbounds %struct.Reg, %struct.Reg* %21172, i32 0, i32 0
  %RSI.i1697 = bitcast %union.anon* %21173 to i64*
  %21174 = load i64, i64* %RSI.i1697
  %21175 = load i64, i64* %RCX.i1695
  %21176 = load i64, i64* %RDX.i1696
  %21177 = mul i64 %21176, 4
  %21178 = add i64 %21175, 13496
  %21179 = add i64 %21178, %21177
  %21180 = load i64, i64* %PC.i1694
  %21181 = add i64 %21180, 7
  store i64 %21181, i64* %PC.i1694
  %21182 = trunc i64 %21174 to i32
  %21183 = inttoptr i64 %21179 to i32*
  %21184 = load i32, i32* %21183
  %21185 = sub i32 %21182, %21184
  %21186 = zext i32 %21185 to i64
  store i64 %21186, i64* %RSI.i1697, align 8
  %21187 = icmp ult i32 %21182, %21184
  %21188 = zext i1 %21187 to i8
  %21189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21188, i8* %21189, align 1
  %21190 = and i32 %21185, 255
  %21191 = call i32 @llvm.ctpop.i32(i32 %21190)
  %21192 = trunc i32 %21191 to i8
  %21193 = and i8 %21192, 1
  %21194 = xor i8 %21193, 1
  %21195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21194, i8* %21195, align 1
  %21196 = xor i32 %21184, %21182
  %21197 = xor i32 %21196, %21185
  %21198 = lshr i32 %21197, 4
  %21199 = trunc i32 %21198 to i8
  %21200 = and i8 %21199, 1
  %21201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21200, i8* %21201, align 1
  %21202 = icmp eq i32 %21185, 0
  %21203 = zext i1 %21202 to i8
  %21204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21203, i8* %21204, align 1
  %21205 = lshr i32 %21185, 31
  %21206 = trunc i32 %21205 to i8
  %21207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21206, i8* %21207, align 1
  %21208 = lshr i32 %21182, 31
  %21209 = lshr i32 %21184, 31
  %21210 = xor i32 %21209, %21208
  %21211 = xor i32 %21205, %21208
  %21212 = add i32 %21211, %21210
  %21213 = icmp eq i32 %21212, 2
  %21214 = zext i1 %21213 to i8
  %21215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21214, i8* %21215, align 1
  store %struct.Memory* %loadMem_4ab832, %struct.Memory** %MEMORY
  %loadMem_4ab839 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21217 = getelementptr inbounds %struct.GPR, %struct.GPR* %21216, i32 0, i32 33
  %21218 = getelementptr inbounds %struct.Reg, %struct.Reg* %21217, i32 0, i32 0
  %PC.i1691 = bitcast %union.anon* %21218 to i64*
  %21219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21220 = getelementptr inbounds %struct.GPR, %struct.GPR* %21219, i32 0, i32 9
  %21221 = getelementptr inbounds %struct.Reg, %struct.Reg* %21220, i32 0, i32 0
  %ESI.i1692 = bitcast %union.anon* %21221 to i32*
  %21222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21223 = getelementptr inbounds %struct.GPR, %struct.GPR* %21222, i32 0, i32 15
  %21224 = getelementptr inbounds %struct.Reg, %struct.Reg* %21223, i32 0, i32 0
  %RBP.i1693 = bitcast %union.anon* %21224 to i64*
  %21225 = load i64, i64* %RBP.i1693
  %21226 = sub i64 %21225, 568
  %21227 = load i32, i32* %ESI.i1692
  %21228 = zext i32 %21227 to i64
  %21229 = load i64, i64* %PC.i1691
  %21230 = add i64 %21229, 6
  store i64 %21230, i64* %PC.i1691
  %21231 = inttoptr i64 %21226 to i32*
  store i32 %21227, i32* %21231
  store %struct.Memory* %loadMem_4ab839, %struct.Memory** %MEMORY
  %loadMem_4ab83f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21233 = getelementptr inbounds %struct.GPR, %struct.GPR* %21232, i32 0, i32 33
  %21234 = getelementptr inbounds %struct.Reg, %struct.Reg* %21233, i32 0, i32 0
  %PC.i1689 = bitcast %union.anon* %21234 to i64*
  %21235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21236 = getelementptr inbounds %struct.GPR, %struct.GPR* %21235, i32 0, i32 5
  %21237 = getelementptr inbounds %struct.Reg, %struct.Reg* %21236, i32 0, i32 0
  %RCX.i1690 = bitcast %union.anon* %21237 to i64*
  %21238 = load i64, i64* %PC.i1689
  %21239 = add i64 %21238, 8
  store i64 %21239, i64* %PC.i1689
  %21240 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21240, i64* %RCX.i1690, align 8
  store %struct.Memory* %loadMem_4ab83f, %struct.Memory** %MEMORY
  %loadMem_4ab847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21242 = getelementptr inbounds %struct.GPR, %struct.GPR* %21241, i32 0, i32 33
  %21243 = getelementptr inbounds %struct.Reg, %struct.Reg* %21242, i32 0, i32 0
  %PC.i1686 = bitcast %union.anon* %21243 to i64*
  %21244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21245 = getelementptr inbounds %struct.GPR, %struct.GPR* %21244, i32 0, i32 7
  %21246 = getelementptr inbounds %struct.Reg, %struct.Reg* %21245, i32 0, i32 0
  %RDX.i1687 = bitcast %union.anon* %21246 to i64*
  %21247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21248 = getelementptr inbounds %struct.GPR, %struct.GPR* %21247, i32 0, i32 15
  %21249 = getelementptr inbounds %struct.Reg, %struct.Reg* %21248, i32 0, i32 0
  %RBP.i1688 = bitcast %union.anon* %21249 to i64*
  %21250 = load i64, i64* %RBP.i1688
  %21251 = sub i64 %21250, 24
  %21252 = load i64, i64* %PC.i1686
  %21253 = add i64 %21252, 4
  store i64 %21253, i64* %PC.i1686
  %21254 = inttoptr i64 %21251 to i32*
  %21255 = load i32, i32* %21254
  %21256 = sext i32 %21255 to i64
  store i64 %21256, i64* %RDX.i1687, align 8
  store %struct.Memory* %loadMem_4ab847, %struct.Memory** %MEMORY
  %loadMem_4ab84b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21258 = getelementptr inbounds %struct.GPR, %struct.GPR* %21257, i32 0, i32 33
  %21259 = getelementptr inbounds %struct.Reg, %struct.Reg* %21258, i32 0, i32 0
  %PC.i1682 = bitcast %union.anon* %21259 to i64*
  %21260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21261 = getelementptr inbounds %struct.GPR, %struct.GPR* %21260, i32 0, i32 5
  %21262 = getelementptr inbounds %struct.Reg, %struct.Reg* %21261, i32 0, i32 0
  %RCX.i1683 = bitcast %union.anon* %21262 to i64*
  %21263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21264 = getelementptr inbounds %struct.GPR, %struct.GPR* %21263, i32 0, i32 7
  %21265 = getelementptr inbounds %struct.Reg, %struct.Reg* %21264, i32 0, i32 0
  %RDX.i1684 = bitcast %union.anon* %21265 to i64*
  %21266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21267 = getelementptr inbounds %struct.GPR, %struct.GPR* %21266, i32 0, i32 9
  %21268 = getelementptr inbounds %struct.Reg, %struct.Reg* %21267, i32 0, i32 0
  %RSI.i1685 = bitcast %union.anon* %21268 to i64*
  %21269 = load i64, i64* %RCX.i1683
  %21270 = load i64, i64* %RDX.i1684
  %21271 = mul i64 %21270, 4
  %21272 = add i64 %21269, 13240
  %21273 = add i64 %21272, %21271
  %21274 = load i64, i64* %PC.i1682
  %21275 = add i64 %21274, 7
  store i64 %21275, i64* %PC.i1682
  %21276 = inttoptr i64 %21273 to i32*
  %21277 = load i32, i32* %21276
  %21278 = zext i32 %21277 to i64
  store i64 %21278, i64* %RSI.i1685, align 8
  store %struct.Memory* %loadMem_4ab84b, %struct.Memory** %MEMORY
  %loadMem_4ab852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21280 = getelementptr inbounds %struct.GPR, %struct.GPR* %21279, i32 0, i32 33
  %21281 = getelementptr inbounds %struct.Reg, %struct.Reg* %21280, i32 0, i32 0
  %PC.i1680 = bitcast %union.anon* %21281 to i64*
  %21282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21283 = getelementptr inbounds %struct.GPR, %struct.GPR* %21282, i32 0, i32 5
  %21284 = getelementptr inbounds %struct.Reg, %struct.Reg* %21283, i32 0, i32 0
  %RCX.i1681 = bitcast %union.anon* %21284 to i64*
  %21285 = load i64, i64* %PC.i1680
  %21286 = add i64 %21285, 8
  store i64 %21286, i64* %PC.i1680
  %21287 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21287, i64* %RCX.i1681, align 8
  store %struct.Memory* %loadMem_4ab852, %struct.Memory** %MEMORY
  %loadMem_4ab85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21289 = getelementptr inbounds %struct.GPR, %struct.GPR* %21288, i32 0, i32 33
  %21290 = getelementptr inbounds %struct.Reg, %struct.Reg* %21289, i32 0, i32 0
  %PC.i1677 = bitcast %union.anon* %21290 to i64*
  %21291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21292 = getelementptr inbounds %struct.GPR, %struct.GPR* %21291, i32 0, i32 7
  %21293 = getelementptr inbounds %struct.Reg, %struct.Reg* %21292, i32 0, i32 0
  %RDX.i1678 = bitcast %union.anon* %21293 to i64*
  %21294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21295 = getelementptr inbounds %struct.GPR, %struct.GPR* %21294, i32 0, i32 15
  %21296 = getelementptr inbounds %struct.Reg, %struct.Reg* %21295, i32 0, i32 0
  %RBP.i1679 = bitcast %union.anon* %21296 to i64*
  %21297 = load i64, i64* %RBP.i1679
  %21298 = sub i64 %21297, 24
  %21299 = load i64, i64* %PC.i1677
  %21300 = add i64 %21299, 4
  store i64 %21300, i64* %PC.i1677
  %21301 = inttoptr i64 %21298 to i32*
  %21302 = load i32, i32* %21301
  %21303 = sext i32 %21302 to i64
  store i64 %21303, i64* %RDX.i1678, align 8
  store %struct.Memory* %loadMem_4ab85a, %struct.Memory** %MEMORY
  %loadMem_4ab85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21305 = getelementptr inbounds %struct.GPR, %struct.GPR* %21304, i32 0, i32 33
  %21306 = getelementptr inbounds %struct.Reg, %struct.Reg* %21305, i32 0, i32 0
  %PC.i1673 = bitcast %union.anon* %21306 to i64*
  %21307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21308 = getelementptr inbounds %struct.GPR, %struct.GPR* %21307, i32 0, i32 5
  %21309 = getelementptr inbounds %struct.Reg, %struct.Reg* %21308, i32 0, i32 0
  %RCX.i1674 = bitcast %union.anon* %21309 to i64*
  %21310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21311 = getelementptr inbounds %struct.GPR, %struct.GPR* %21310, i32 0, i32 7
  %21312 = getelementptr inbounds %struct.Reg, %struct.Reg* %21311, i32 0, i32 0
  %RDX.i1675 = bitcast %union.anon* %21312 to i64*
  %21313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21314 = getelementptr inbounds %struct.GPR, %struct.GPR* %21313, i32 0, i32 11
  %21315 = getelementptr inbounds %struct.Reg, %struct.Reg* %21314, i32 0, i32 0
  %RDI.i1676 = bitcast %union.anon* %21315 to i64*
  %21316 = load i64, i64* %RCX.i1674
  %21317 = load i64, i64* %RDX.i1675
  %21318 = mul i64 %21317, 4
  %21319 = add i64 %21316, 13496
  %21320 = add i64 %21319, %21318
  %21321 = load i64, i64* %PC.i1673
  %21322 = add i64 %21321, 7
  store i64 %21322, i64* %PC.i1673
  %21323 = inttoptr i64 %21320 to i32*
  %21324 = load i32, i32* %21323
  %21325 = zext i32 %21324 to i64
  store i64 %21325, i64* %RDI.i1676, align 8
  store %struct.Memory* %loadMem_4ab85e, %struct.Memory** %MEMORY
  %loadMem_4ab865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21327 = getelementptr inbounds %struct.GPR, %struct.GPR* %21326, i32 0, i32 33
  %21328 = getelementptr inbounds %struct.Reg, %struct.Reg* %21327, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %21328 to i64*
  %21329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21330 = getelementptr inbounds %struct.GPR, %struct.GPR* %21329, i32 0, i32 11
  %21331 = getelementptr inbounds %struct.Reg, %struct.Reg* %21330, i32 0, i32 0
  %RDI.i1672 = bitcast %union.anon* %21331 to i64*
  %21332 = load i64, i64* %RDI.i1672
  %21333 = load i64, i64* %PC.i1671
  %21334 = add i64 %21333, 2
  store i64 %21334, i64* %PC.i1671
  %21335 = shl i64 %21332, 32
  %21336 = ashr i64 %21335, 33
  %21337 = trunc i64 %21332 to i8
  %21338 = and i8 %21337, 1
  %21339 = trunc i64 %21336 to i32
  %21340 = and i64 %21336, 4294967295
  store i64 %21340, i64* %RDI.i1672, align 8
  %21341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21338, i8* %21341, align 1
  %21342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21343 = and i32 %21339, 255
  %21344 = call i32 @llvm.ctpop.i32(i32 %21343)
  %21345 = trunc i32 %21344 to i8
  %21346 = and i8 %21345, 1
  %21347 = xor i8 %21346, 1
  store i8 %21347, i8* %21342, align 1
  %21348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21348, align 1
  %21349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21350 = icmp eq i32 %21339, 0
  %21351 = zext i1 %21350 to i8
  store i8 %21351, i8* %21349, align 1
  %21352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21353 = lshr i32 %21339, 31
  %21354 = trunc i32 %21353 to i8
  store i8 %21354, i8* %21352, align 1
  %21355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21355, align 1
  store %struct.Memory* %loadMem_4ab865, %struct.Memory** %MEMORY
  %loadMem_4ab868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21357 = getelementptr inbounds %struct.GPR, %struct.GPR* %21356, i32 0, i32 33
  %21358 = getelementptr inbounds %struct.Reg, %struct.Reg* %21357, i32 0, i32 0
  %PC.i1668 = bitcast %union.anon* %21358 to i64*
  %21359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21360 = getelementptr inbounds %struct.GPR, %struct.GPR* %21359, i32 0, i32 11
  %21361 = getelementptr inbounds %struct.Reg, %struct.Reg* %21360, i32 0, i32 0
  %EDI.i1669 = bitcast %union.anon* %21361 to i32*
  %21362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21363 = getelementptr inbounds %struct.GPR, %struct.GPR* %21362, i32 0, i32 9
  %21364 = getelementptr inbounds %struct.Reg, %struct.Reg* %21363, i32 0, i32 0
  %RSI.i1670 = bitcast %union.anon* %21364 to i64*
  %21365 = load i64, i64* %RSI.i1670
  %21366 = load i32, i32* %EDI.i1669
  %21367 = zext i32 %21366 to i64
  %21368 = load i64, i64* %PC.i1668
  %21369 = add i64 %21368, 2
  store i64 %21369, i64* %PC.i1668
  %21370 = trunc i64 %21365 to i32
  %21371 = add i32 %21366, %21370
  %21372 = zext i32 %21371 to i64
  store i64 %21372, i64* %RSI.i1670, align 8
  %21373 = icmp ult i32 %21371, %21370
  %21374 = icmp ult i32 %21371, %21366
  %21375 = or i1 %21373, %21374
  %21376 = zext i1 %21375 to i8
  %21377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21376, i8* %21377, align 1
  %21378 = and i32 %21371, 255
  %21379 = call i32 @llvm.ctpop.i32(i32 %21378)
  %21380 = trunc i32 %21379 to i8
  %21381 = and i8 %21380, 1
  %21382 = xor i8 %21381, 1
  %21383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21382, i8* %21383, align 1
  %21384 = xor i64 %21367, %21365
  %21385 = trunc i64 %21384 to i32
  %21386 = xor i32 %21385, %21371
  %21387 = lshr i32 %21386, 4
  %21388 = trunc i32 %21387 to i8
  %21389 = and i8 %21388, 1
  %21390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21389, i8* %21390, align 1
  %21391 = icmp eq i32 %21371, 0
  %21392 = zext i1 %21391 to i8
  %21393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21392, i8* %21393, align 1
  %21394 = lshr i32 %21371, 31
  %21395 = trunc i32 %21394 to i8
  %21396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21395, i8* %21396, align 1
  %21397 = lshr i32 %21370, 31
  %21398 = lshr i32 %21366, 31
  %21399 = xor i32 %21394, %21397
  %21400 = xor i32 %21394, %21398
  %21401 = add i32 %21399, %21400
  %21402 = icmp eq i32 %21401, 2
  %21403 = zext i1 %21402 to i8
  %21404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21403, i8* %21404, align 1
  store %struct.Memory* %loadMem_4ab868, %struct.Memory** %MEMORY
  %loadMem_4ab86a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21406 = getelementptr inbounds %struct.GPR, %struct.GPR* %21405, i32 0, i32 33
  %21407 = getelementptr inbounds %struct.Reg, %struct.Reg* %21406, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %21407 to i64*
  %21408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21409 = getelementptr inbounds %struct.GPR, %struct.GPR* %21408, i32 0, i32 9
  %21410 = getelementptr inbounds %struct.Reg, %struct.Reg* %21409, i32 0, i32 0
  %ESI.i1666 = bitcast %union.anon* %21410 to i32*
  %21411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21412 = getelementptr inbounds %struct.GPR, %struct.GPR* %21411, i32 0, i32 15
  %21413 = getelementptr inbounds %struct.Reg, %struct.Reg* %21412, i32 0, i32 0
  %RBP.i1667 = bitcast %union.anon* %21413 to i64*
  %21414 = load i64, i64* %RBP.i1667
  %21415 = sub i64 %21414, 552
  %21416 = load i32, i32* %ESI.i1666
  %21417 = zext i32 %21416 to i64
  %21418 = load i64, i64* %PC.i1665
  %21419 = add i64 %21418, 6
  store i64 %21419, i64* %PC.i1665
  %21420 = inttoptr i64 %21415 to i32*
  store i32 %21416, i32* %21420
  store %struct.Memory* %loadMem_4ab86a, %struct.Memory** %MEMORY
  %loadMem_4ab870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21422 = getelementptr inbounds %struct.GPR, %struct.GPR* %21421, i32 0, i32 33
  %21423 = getelementptr inbounds %struct.Reg, %struct.Reg* %21422, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %21423 to i64*
  %21424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21425 = getelementptr inbounds %struct.GPR, %struct.GPR* %21424, i32 0, i32 9
  %21426 = getelementptr inbounds %struct.Reg, %struct.Reg* %21425, i32 0, i32 0
  %RSI.i1663 = bitcast %union.anon* %21426 to i64*
  %21427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21428 = getelementptr inbounds %struct.GPR, %struct.GPR* %21427, i32 0, i32 15
  %21429 = getelementptr inbounds %struct.Reg, %struct.Reg* %21428, i32 0, i32 0
  %RBP.i1664 = bitcast %union.anon* %21429 to i64*
  %21430 = load i64, i64* %RBP.i1664
  %21431 = sub i64 %21430, 576
  %21432 = load i64, i64* %PC.i1662
  %21433 = add i64 %21432, 6
  store i64 %21433, i64* %PC.i1662
  %21434 = inttoptr i64 %21431 to i32*
  %21435 = load i32, i32* %21434
  %21436 = zext i32 %21435 to i64
  store i64 %21436, i64* %RSI.i1663, align 8
  store %struct.Memory* %loadMem_4ab870, %struct.Memory** %MEMORY
  %loadMem_4ab876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21438 = getelementptr inbounds %struct.GPR, %struct.GPR* %21437, i32 0, i32 33
  %21439 = getelementptr inbounds %struct.Reg, %struct.Reg* %21438, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %21439 to i64*
  %21440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21441 = getelementptr inbounds %struct.GPR, %struct.GPR* %21440, i32 0, i32 9
  %21442 = getelementptr inbounds %struct.Reg, %struct.Reg* %21441, i32 0, i32 0
  %RSI.i1660 = bitcast %union.anon* %21442 to i64*
  %21443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21444 = getelementptr inbounds %struct.GPR, %struct.GPR* %21443, i32 0, i32 15
  %21445 = getelementptr inbounds %struct.Reg, %struct.Reg* %21444, i32 0, i32 0
  %RBP.i1661 = bitcast %union.anon* %21445 to i64*
  %21446 = load i64, i64* %RSI.i1660
  %21447 = load i64, i64* %RBP.i1661
  %21448 = sub i64 %21447, 552
  %21449 = load i64, i64* %PC.i1659
  %21450 = add i64 %21449, 6
  store i64 %21450, i64* %PC.i1659
  %21451 = trunc i64 %21446 to i32
  %21452 = inttoptr i64 %21448 to i32*
  %21453 = load i32, i32* %21452
  %21454 = add i32 %21453, %21451
  %21455 = zext i32 %21454 to i64
  store i64 %21455, i64* %RSI.i1660, align 8
  %21456 = icmp ult i32 %21454, %21451
  %21457 = icmp ult i32 %21454, %21453
  %21458 = or i1 %21456, %21457
  %21459 = zext i1 %21458 to i8
  %21460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21459, i8* %21460, align 1
  %21461 = and i32 %21454, 255
  %21462 = call i32 @llvm.ctpop.i32(i32 %21461)
  %21463 = trunc i32 %21462 to i8
  %21464 = and i8 %21463, 1
  %21465 = xor i8 %21464, 1
  %21466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21465, i8* %21466, align 1
  %21467 = xor i32 %21453, %21451
  %21468 = xor i32 %21467, %21454
  %21469 = lshr i32 %21468, 4
  %21470 = trunc i32 %21469 to i8
  %21471 = and i8 %21470, 1
  %21472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21471, i8* %21472, align 1
  %21473 = icmp eq i32 %21454, 0
  %21474 = zext i1 %21473 to i8
  %21475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21474, i8* %21475, align 1
  %21476 = lshr i32 %21454, 31
  %21477 = trunc i32 %21476 to i8
  %21478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21477, i8* %21478, align 1
  %21479 = lshr i32 %21451, 31
  %21480 = lshr i32 %21453, 31
  %21481 = xor i32 %21476, %21479
  %21482 = xor i32 %21476, %21480
  %21483 = add i32 %21481, %21482
  %21484 = icmp eq i32 %21483, 2
  %21485 = zext i1 %21484 to i8
  %21486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21485, i8* %21486, align 1
  store %struct.Memory* %loadMem_4ab876, %struct.Memory** %MEMORY
  %loadMem_4ab87c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21488 = getelementptr inbounds %struct.GPR, %struct.GPR* %21487, i32 0, i32 33
  %21489 = getelementptr inbounds %struct.Reg, %struct.Reg* %21488, i32 0, i32 0
  %PC.i1656 = bitcast %union.anon* %21489 to i64*
  %21490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21491 = getelementptr inbounds %struct.GPR, %struct.GPR* %21490, i32 0, i32 9
  %21492 = getelementptr inbounds %struct.Reg, %struct.Reg* %21491, i32 0, i32 0
  %ESI.i1657 = bitcast %union.anon* %21492 to i32*
  %21493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21494 = getelementptr inbounds %struct.GPR, %struct.GPR* %21493, i32 0, i32 15
  %21495 = getelementptr inbounds %struct.Reg, %struct.Reg* %21494, i32 0, i32 0
  %RBP.i1658 = bitcast %union.anon* %21495 to i64*
  %21496 = load i64, i64* %RBP.i1658
  %21497 = sub i64 %21496, 608
  %21498 = load i32, i32* %ESI.i1657
  %21499 = zext i32 %21498 to i64
  %21500 = load i64, i64* %PC.i1656
  %21501 = add i64 %21500, 6
  store i64 %21501, i64* %PC.i1656
  %21502 = inttoptr i64 %21497 to i32*
  store i32 %21498, i32* %21502
  store %struct.Memory* %loadMem_4ab87c, %struct.Memory** %MEMORY
  %loadMem_4ab882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21504 = getelementptr inbounds %struct.GPR, %struct.GPR* %21503, i32 0, i32 33
  %21505 = getelementptr inbounds %struct.Reg, %struct.Reg* %21504, i32 0, i32 0
  %PC.i1653 = bitcast %union.anon* %21505 to i64*
  %21506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21507 = getelementptr inbounds %struct.GPR, %struct.GPR* %21506, i32 0, i32 9
  %21508 = getelementptr inbounds %struct.Reg, %struct.Reg* %21507, i32 0, i32 0
  %RSI.i1654 = bitcast %union.anon* %21508 to i64*
  %21509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21510 = getelementptr inbounds %struct.GPR, %struct.GPR* %21509, i32 0, i32 15
  %21511 = getelementptr inbounds %struct.Reg, %struct.Reg* %21510, i32 0, i32 0
  %RBP.i1655 = bitcast %union.anon* %21511 to i64*
  %21512 = load i64, i64* %RBP.i1655
  %21513 = sub i64 %21512, 560
  %21514 = load i64, i64* %PC.i1653
  %21515 = add i64 %21514, 6
  store i64 %21515, i64* %PC.i1653
  %21516 = inttoptr i64 %21513 to i32*
  %21517 = load i32, i32* %21516
  %21518 = zext i32 %21517 to i64
  store i64 %21518, i64* %RSI.i1654, align 8
  store %struct.Memory* %loadMem_4ab882, %struct.Memory** %MEMORY
  %loadMem_4ab888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21520 = getelementptr inbounds %struct.GPR, %struct.GPR* %21519, i32 0, i32 33
  %21521 = getelementptr inbounds %struct.Reg, %struct.Reg* %21520, i32 0, i32 0
  %PC.i1650 = bitcast %union.anon* %21521 to i64*
  %21522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21523 = getelementptr inbounds %struct.GPR, %struct.GPR* %21522, i32 0, i32 9
  %21524 = getelementptr inbounds %struct.Reg, %struct.Reg* %21523, i32 0, i32 0
  %RSI.i1651 = bitcast %union.anon* %21524 to i64*
  %21525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21526 = getelementptr inbounds %struct.GPR, %struct.GPR* %21525, i32 0, i32 15
  %21527 = getelementptr inbounds %struct.Reg, %struct.Reg* %21526, i32 0, i32 0
  %RBP.i1652 = bitcast %union.anon* %21527 to i64*
  %21528 = load i64, i64* %RSI.i1651
  %21529 = load i64, i64* %RBP.i1652
  %21530 = sub i64 %21529, 568
  %21531 = load i64, i64* %PC.i1650
  %21532 = add i64 %21531, 6
  store i64 %21532, i64* %PC.i1650
  %21533 = trunc i64 %21528 to i32
  %21534 = inttoptr i64 %21530 to i32*
  %21535 = load i32, i32* %21534
  %21536 = add i32 %21535, %21533
  %21537 = zext i32 %21536 to i64
  store i64 %21537, i64* %RSI.i1651, align 8
  %21538 = icmp ult i32 %21536, %21533
  %21539 = icmp ult i32 %21536, %21535
  %21540 = or i1 %21538, %21539
  %21541 = zext i1 %21540 to i8
  %21542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21541, i8* %21542, align 1
  %21543 = and i32 %21536, 255
  %21544 = call i32 @llvm.ctpop.i32(i32 %21543)
  %21545 = trunc i32 %21544 to i8
  %21546 = and i8 %21545, 1
  %21547 = xor i8 %21546, 1
  %21548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21547, i8* %21548, align 1
  %21549 = xor i32 %21535, %21533
  %21550 = xor i32 %21549, %21536
  %21551 = lshr i32 %21550, 4
  %21552 = trunc i32 %21551 to i8
  %21553 = and i8 %21552, 1
  %21554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21553, i8* %21554, align 1
  %21555 = icmp eq i32 %21536, 0
  %21556 = zext i1 %21555 to i8
  %21557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21556, i8* %21557, align 1
  %21558 = lshr i32 %21536, 31
  %21559 = trunc i32 %21558 to i8
  %21560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21559, i8* %21560, align 1
  %21561 = lshr i32 %21533, 31
  %21562 = lshr i32 %21535, 31
  %21563 = xor i32 %21558, %21561
  %21564 = xor i32 %21558, %21562
  %21565 = add i32 %21563, %21564
  %21566 = icmp eq i32 %21565, 2
  %21567 = zext i1 %21566 to i8
  %21568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21567, i8* %21568, align 1
  store %struct.Memory* %loadMem_4ab888, %struct.Memory** %MEMORY
  %loadMem_4ab88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21570 = getelementptr inbounds %struct.GPR, %struct.GPR* %21569, i32 0, i32 33
  %21571 = getelementptr inbounds %struct.Reg, %struct.Reg* %21570, i32 0, i32 0
  %PC.i1647 = bitcast %union.anon* %21571 to i64*
  %21572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21573 = getelementptr inbounds %struct.GPR, %struct.GPR* %21572, i32 0, i32 9
  %21574 = getelementptr inbounds %struct.Reg, %struct.Reg* %21573, i32 0, i32 0
  %ESI.i1648 = bitcast %union.anon* %21574 to i32*
  %21575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21576 = getelementptr inbounds %struct.GPR, %struct.GPR* %21575, i32 0, i32 15
  %21577 = getelementptr inbounds %struct.Reg, %struct.Reg* %21576, i32 0, i32 0
  %RBP.i1649 = bitcast %union.anon* %21577 to i64*
  %21578 = load i64, i64* %RBP.i1649
  %21579 = sub i64 %21578, 600
  %21580 = load i32, i32* %ESI.i1648
  %21581 = zext i32 %21580 to i64
  %21582 = load i64, i64* %PC.i1647
  %21583 = add i64 %21582, 6
  store i64 %21583, i64* %PC.i1647
  %21584 = inttoptr i64 %21579 to i32*
  store i32 %21580, i32* %21584
  store %struct.Memory* %loadMem_4ab88e, %struct.Memory** %MEMORY
  %loadMem_4ab894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21586 = getelementptr inbounds %struct.GPR, %struct.GPR* %21585, i32 0, i32 33
  %21587 = getelementptr inbounds %struct.Reg, %struct.Reg* %21586, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %21587 to i64*
  %21588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21589 = getelementptr inbounds %struct.GPR, %struct.GPR* %21588, i32 0, i32 9
  %21590 = getelementptr inbounds %struct.Reg, %struct.Reg* %21589, i32 0, i32 0
  %RSI.i1645 = bitcast %union.anon* %21590 to i64*
  %21591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21592 = getelementptr inbounds %struct.GPR, %struct.GPR* %21591, i32 0, i32 15
  %21593 = getelementptr inbounds %struct.Reg, %struct.Reg* %21592, i32 0, i32 0
  %RBP.i1646 = bitcast %union.anon* %21593 to i64*
  %21594 = load i64, i64* %RBP.i1646
  %21595 = sub i64 %21594, 560
  %21596 = load i64, i64* %PC.i1644
  %21597 = add i64 %21596, 6
  store i64 %21597, i64* %PC.i1644
  %21598 = inttoptr i64 %21595 to i32*
  %21599 = load i32, i32* %21598
  %21600 = zext i32 %21599 to i64
  store i64 %21600, i64* %RSI.i1645, align 8
  store %struct.Memory* %loadMem_4ab894, %struct.Memory** %MEMORY
  %loadMem_4ab89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21602 = getelementptr inbounds %struct.GPR, %struct.GPR* %21601, i32 0, i32 33
  %21603 = getelementptr inbounds %struct.Reg, %struct.Reg* %21602, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %21603 to i64*
  %21604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21605 = getelementptr inbounds %struct.GPR, %struct.GPR* %21604, i32 0, i32 9
  %21606 = getelementptr inbounds %struct.Reg, %struct.Reg* %21605, i32 0, i32 0
  %RSI.i1642 = bitcast %union.anon* %21606 to i64*
  %21607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21608 = getelementptr inbounds %struct.GPR, %struct.GPR* %21607, i32 0, i32 15
  %21609 = getelementptr inbounds %struct.Reg, %struct.Reg* %21608, i32 0, i32 0
  %RBP.i1643 = bitcast %union.anon* %21609 to i64*
  %21610 = load i64, i64* %RSI.i1642
  %21611 = load i64, i64* %RBP.i1643
  %21612 = sub i64 %21611, 568
  %21613 = load i64, i64* %PC.i1641
  %21614 = add i64 %21613, 6
  store i64 %21614, i64* %PC.i1641
  %21615 = trunc i64 %21610 to i32
  %21616 = inttoptr i64 %21612 to i32*
  %21617 = load i32, i32* %21616
  %21618 = sub i32 %21615, %21617
  %21619 = zext i32 %21618 to i64
  store i64 %21619, i64* %RSI.i1642, align 8
  %21620 = icmp ult i32 %21615, %21617
  %21621 = zext i1 %21620 to i8
  %21622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21621, i8* %21622, align 1
  %21623 = and i32 %21618, 255
  %21624 = call i32 @llvm.ctpop.i32(i32 %21623)
  %21625 = trunc i32 %21624 to i8
  %21626 = and i8 %21625, 1
  %21627 = xor i8 %21626, 1
  %21628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21627, i8* %21628, align 1
  %21629 = xor i32 %21617, %21615
  %21630 = xor i32 %21629, %21618
  %21631 = lshr i32 %21630, 4
  %21632 = trunc i32 %21631 to i8
  %21633 = and i8 %21632, 1
  %21634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21633, i8* %21634, align 1
  %21635 = icmp eq i32 %21618, 0
  %21636 = zext i1 %21635 to i8
  %21637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21636, i8* %21637, align 1
  %21638 = lshr i32 %21618, 31
  %21639 = trunc i32 %21638 to i8
  %21640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21639, i8* %21640, align 1
  %21641 = lshr i32 %21615, 31
  %21642 = lshr i32 %21617, 31
  %21643 = xor i32 %21642, %21641
  %21644 = xor i32 %21638, %21641
  %21645 = add i32 %21644, %21643
  %21646 = icmp eq i32 %21645, 2
  %21647 = zext i1 %21646 to i8
  %21648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21647, i8* %21648, align 1
  store %struct.Memory* %loadMem_4ab89a, %struct.Memory** %MEMORY
  %loadMem_4ab8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21650 = getelementptr inbounds %struct.GPR, %struct.GPR* %21649, i32 0, i32 33
  %21651 = getelementptr inbounds %struct.Reg, %struct.Reg* %21650, i32 0, i32 0
  %PC.i1638 = bitcast %union.anon* %21651 to i64*
  %21652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21653 = getelementptr inbounds %struct.GPR, %struct.GPR* %21652, i32 0, i32 9
  %21654 = getelementptr inbounds %struct.Reg, %struct.Reg* %21653, i32 0, i32 0
  %ESI.i1639 = bitcast %union.anon* %21654 to i32*
  %21655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21656 = getelementptr inbounds %struct.GPR, %struct.GPR* %21655, i32 0, i32 15
  %21657 = getelementptr inbounds %struct.Reg, %struct.Reg* %21656, i32 0, i32 0
  %RBP.i1640 = bitcast %union.anon* %21657 to i64*
  %21658 = load i64, i64* %RBP.i1640
  %21659 = sub i64 %21658, 592
  %21660 = load i32, i32* %ESI.i1639
  %21661 = zext i32 %21660 to i64
  %21662 = load i64, i64* %PC.i1638
  %21663 = add i64 %21662, 6
  store i64 %21663, i64* %PC.i1638
  %21664 = inttoptr i64 %21659 to i32*
  store i32 %21660, i32* %21664
  store %struct.Memory* %loadMem_4ab8a0, %struct.Memory** %MEMORY
  %loadMem_4ab8a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21666 = getelementptr inbounds %struct.GPR, %struct.GPR* %21665, i32 0, i32 33
  %21667 = getelementptr inbounds %struct.Reg, %struct.Reg* %21666, i32 0, i32 0
  %PC.i1635 = bitcast %union.anon* %21667 to i64*
  %21668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21669 = getelementptr inbounds %struct.GPR, %struct.GPR* %21668, i32 0, i32 9
  %21670 = getelementptr inbounds %struct.Reg, %struct.Reg* %21669, i32 0, i32 0
  %RSI.i1636 = bitcast %union.anon* %21670 to i64*
  %21671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21672 = getelementptr inbounds %struct.GPR, %struct.GPR* %21671, i32 0, i32 15
  %21673 = getelementptr inbounds %struct.Reg, %struct.Reg* %21672, i32 0, i32 0
  %RBP.i1637 = bitcast %union.anon* %21673 to i64*
  %21674 = load i64, i64* %RBP.i1637
  %21675 = sub i64 %21674, 576
  %21676 = load i64, i64* %PC.i1635
  %21677 = add i64 %21676, 6
  store i64 %21677, i64* %PC.i1635
  %21678 = inttoptr i64 %21675 to i32*
  %21679 = load i32, i32* %21678
  %21680 = zext i32 %21679 to i64
  store i64 %21680, i64* %RSI.i1636, align 8
  store %struct.Memory* %loadMem_4ab8a6, %struct.Memory** %MEMORY
  %loadMem_4ab8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %21681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21682 = getelementptr inbounds %struct.GPR, %struct.GPR* %21681, i32 0, i32 33
  %21683 = getelementptr inbounds %struct.Reg, %struct.Reg* %21682, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %21683 to i64*
  %21684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21685 = getelementptr inbounds %struct.GPR, %struct.GPR* %21684, i32 0, i32 9
  %21686 = getelementptr inbounds %struct.Reg, %struct.Reg* %21685, i32 0, i32 0
  %RSI.i1633 = bitcast %union.anon* %21686 to i64*
  %21687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21688 = getelementptr inbounds %struct.GPR, %struct.GPR* %21687, i32 0, i32 15
  %21689 = getelementptr inbounds %struct.Reg, %struct.Reg* %21688, i32 0, i32 0
  %RBP.i1634 = bitcast %union.anon* %21689 to i64*
  %21690 = load i64, i64* %RSI.i1633
  %21691 = load i64, i64* %RBP.i1634
  %21692 = sub i64 %21691, 552
  %21693 = load i64, i64* %PC.i1632
  %21694 = add i64 %21693, 6
  store i64 %21694, i64* %PC.i1632
  %21695 = trunc i64 %21690 to i32
  %21696 = inttoptr i64 %21692 to i32*
  %21697 = load i32, i32* %21696
  %21698 = sub i32 %21695, %21697
  %21699 = zext i32 %21698 to i64
  store i64 %21699, i64* %RSI.i1633, align 8
  %21700 = icmp ult i32 %21695, %21697
  %21701 = zext i1 %21700 to i8
  %21702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21701, i8* %21702, align 1
  %21703 = and i32 %21698, 255
  %21704 = call i32 @llvm.ctpop.i32(i32 %21703)
  %21705 = trunc i32 %21704 to i8
  %21706 = and i8 %21705, 1
  %21707 = xor i8 %21706, 1
  %21708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21707, i8* %21708, align 1
  %21709 = xor i32 %21697, %21695
  %21710 = xor i32 %21709, %21698
  %21711 = lshr i32 %21710, 4
  %21712 = trunc i32 %21711 to i8
  %21713 = and i8 %21712, 1
  %21714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21713, i8* %21714, align 1
  %21715 = icmp eq i32 %21698, 0
  %21716 = zext i1 %21715 to i8
  %21717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21716, i8* %21717, align 1
  %21718 = lshr i32 %21698, 31
  %21719 = trunc i32 %21718 to i8
  %21720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21719, i8* %21720, align 1
  %21721 = lshr i32 %21695, 31
  %21722 = lshr i32 %21697, 31
  %21723 = xor i32 %21722, %21721
  %21724 = xor i32 %21718, %21721
  %21725 = add i32 %21724, %21723
  %21726 = icmp eq i32 %21725, 2
  %21727 = zext i1 %21726 to i8
  %21728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21727, i8* %21728, align 1
  store %struct.Memory* %loadMem_4ab8ac, %struct.Memory** %MEMORY
  %loadMem_4ab8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21730 = getelementptr inbounds %struct.GPR, %struct.GPR* %21729, i32 0, i32 33
  %21731 = getelementptr inbounds %struct.Reg, %struct.Reg* %21730, i32 0, i32 0
  %PC.i1629 = bitcast %union.anon* %21731 to i64*
  %21732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21733 = getelementptr inbounds %struct.GPR, %struct.GPR* %21732, i32 0, i32 9
  %21734 = getelementptr inbounds %struct.Reg, %struct.Reg* %21733, i32 0, i32 0
  %ESI.i1630 = bitcast %union.anon* %21734 to i32*
  %21735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21736 = getelementptr inbounds %struct.GPR, %struct.GPR* %21735, i32 0, i32 15
  %21737 = getelementptr inbounds %struct.Reg, %struct.Reg* %21736, i32 0, i32 0
  %RBP.i1631 = bitcast %union.anon* %21737 to i64*
  %21738 = load i64, i64* %RBP.i1631
  %21739 = sub i64 %21738, 584
  %21740 = load i32, i32* %ESI.i1630
  %21741 = zext i32 %21740 to i64
  %21742 = load i64, i64* %PC.i1629
  %21743 = add i64 %21742, 6
  store i64 %21743, i64* %PC.i1629
  %21744 = inttoptr i64 %21739 to i32*
  store i32 %21740, i32* %21744
  store %struct.Memory* %loadMem_4ab8b2, %struct.Memory** %MEMORY
  %loadMem_4ab8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21746 = getelementptr inbounds %struct.GPR, %struct.GPR* %21745, i32 0, i32 33
  %21747 = getelementptr inbounds %struct.Reg, %struct.Reg* %21746, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %21747 to i64*
  %21748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21749 = getelementptr inbounds %struct.GPR, %struct.GPR* %21748, i32 0, i32 5
  %21750 = getelementptr inbounds %struct.Reg, %struct.Reg* %21749, i32 0, i32 0
  %RCX.i1628 = bitcast %union.anon* %21750 to i64*
  %21751 = load i64, i64* %PC.i1627
  %21752 = add i64 %21751, 8
  store i64 %21752, i64* %PC.i1627
  %21753 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21753, i64* %RCX.i1628, align 8
  store %struct.Memory* %loadMem_4ab8b8, %struct.Memory** %MEMORY
  %loadMem_4ab8c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21755 = getelementptr inbounds %struct.GPR, %struct.GPR* %21754, i32 0, i32 33
  %21756 = getelementptr inbounds %struct.Reg, %struct.Reg* %21755, i32 0, i32 0
  %PC.i1624 = bitcast %union.anon* %21756 to i64*
  %21757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21758 = getelementptr inbounds %struct.GPR, %struct.GPR* %21757, i32 0, i32 7
  %21759 = getelementptr inbounds %struct.Reg, %struct.Reg* %21758, i32 0, i32 0
  %RDX.i1625 = bitcast %union.anon* %21759 to i64*
  %21760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21761 = getelementptr inbounds %struct.GPR, %struct.GPR* %21760, i32 0, i32 15
  %21762 = getelementptr inbounds %struct.Reg, %struct.Reg* %21761, i32 0, i32 0
  %RBP.i1626 = bitcast %union.anon* %21762 to i64*
  %21763 = load i64, i64* %RBP.i1626
  %21764 = sub i64 %21763, 24
  %21765 = load i64, i64* %PC.i1624
  %21766 = add i64 %21765, 4
  store i64 %21766, i64* %PC.i1624
  %21767 = inttoptr i64 %21764 to i32*
  %21768 = load i32, i32* %21767
  %21769 = sext i32 %21768 to i64
  store i64 %21769, i64* %RDX.i1625, align 8
  store %struct.Memory* %loadMem_4ab8c0, %struct.Memory** %MEMORY
  %loadMem_4ab8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21771 = getelementptr inbounds %struct.GPR, %struct.GPR* %21770, i32 0, i32 33
  %21772 = getelementptr inbounds %struct.Reg, %struct.Reg* %21771, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %21772 to i64*
  %21773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21774 = getelementptr inbounds %struct.GPR, %struct.GPR* %21773, i32 0, i32 1
  %21775 = getelementptr inbounds %struct.Reg, %struct.Reg* %21774, i32 0, i32 0
  %EAX.i1622 = bitcast %union.anon* %21775 to i32*
  %21776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21777 = getelementptr inbounds %struct.GPR, %struct.GPR* %21776, i32 0, i32 9
  %21778 = getelementptr inbounds %struct.Reg, %struct.Reg* %21777, i32 0, i32 0
  %RSI.i1623 = bitcast %union.anon* %21778 to i64*
  %21779 = load i32, i32* %EAX.i1622
  %21780 = zext i32 %21779 to i64
  %21781 = load i64, i64* %PC.i1621
  %21782 = add i64 %21781, 2
  store i64 %21782, i64* %PC.i1621
  %21783 = and i64 %21780, 4294967295
  store i64 %21783, i64* %RSI.i1623, align 8
  store %struct.Memory* %loadMem_4ab8c4, %struct.Memory** %MEMORY
  %loadMem_4ab8c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21785 = getelementptr inbounds %struct.GPR, %struct.GPR* %21784, i32 0, i32 33
  %21786 = getelementptr inbounds %struct.Reg, %struct.Reg* %21785, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %21786 to i64*
  %21787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21788 = getelementptr inbounds %struct.GPR, %struct.GPR* %21787, i32 0, i32 5
  %21789 = getelementptr inbounds %struct.Reg, %struct.Reg* %21788, i32 0, i32 0
  %RCX.i1618 = bitcast %union.anon* %21789 to i64*
  %21790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21791 = getelementptr inbounds %struct.GPR, %struct.GPR* %21790, i32 0, i32 7
  %21792 = getelementptr inbounds %struct.Reg, %struct.Reg* %21791, i32 0, i32 0
  %RDX.i1619 = bitcast %union.anon* %21792 to i64*
  %21793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21794 = getelementptr inbounds %struct.GPR, %struct.GPR* %21793, i32 0, i32 9
  %21795 = getelementptr inbounds %struct.Reg, %struct.Reg* %21794, i32 0, i32 0
  %RSI.i1620 = bitcast %union.anon* %21795 to i64*
  %21796 = load i64, i64* %RSI.i1620
  %21797 = load i64, i64* %RCX.i1618
  %21798 = load i64, i64* %RDX.i1619
  %21799 = mul i64 %21798, 4
  %21800 = add i64 %21797, 13304
  %21801 = add i64 %21800, %21799
  %21802 = load i64, i64* %PC.i1617
  %21803 = add i64 %21802, 7
  store i64 %21803, i64* %PC.i1617
  %21804 = trunc i64 %21796 to i32
  %21805 = inttoptr i64 %21801 to i32*
  %21806 = load i32, i32* %21805
  %21807 = sub i32 %21804, %21806
  %21808 = zext i32 %21807 to i64
  store i64 %21808, i64* %RSI.i1620, align 8
  %21809 = icmp ult i32 %21804, %21806
  %21810 = zext i1 %21809 to i8
  %21811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21810, i8* %21811, align 1
  %21812 = and i32 %21807, 255
  %21813 = call i32 @llvm.ctpop.i32(i32 %21812)
  %21814 = trunc i32 %21813 to i8
  %21815 = and i8 %21814, 1
  %21816 = xor i8 %21815, 1
  %21817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21816, i8* %21817, align 1
  %21818 = xor i32 %21806, %21804
  %21819 = xor i32 %21818, %21807
  %21820 = lshr i32 %21819, 4
  %21821 = trunc i32 %21820 to i8
  %21822 = and i8 %21821, 1
  %21823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21822, i8* %21823, align 1
  %21824 = icmp eq i32 %21807, 0
  %21825 = zext i1 %21824 to i8
  %21826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21825, i8* %21826, align 1
  %21827 = lshr i32 %21807, 31
  %21828 = trunc i32 %21827 to i8
  %21829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21828, i8* %21829, align 1
  %21830 = lshr i32 %21804, 31
  %21831 = lshr i32 %21806, 31
  %21832 = xor i32 %21831, %21830
  %21833 = xor i32 %21827, %21830
  %21834 = add i32 %21833, %21832
  %21835 = icmp eq i32 %21834, 2
  %21836 = zext i1 %21835 to i8
  %21837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21836, i8* %21837, align 1
  store %struct.Memory* %loadMem_4ab8c6, %struct.Memory** %MEMORY
  %loadMem_4ab8cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %21838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21839 = getelementptr inbounds %struct.GPR, %struct.GPR* %21838, i32 0, i32 33
  %21840 = getelementptr inbounds %struct.Reg, %struct.Reg* %21839, i32 0, i32 0
  %PC.i1615 = bitcast %union.anon* %21840 to i64*
  %21841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21842 = getelementptr inbounds %struct.GPR, %struct.GPR* %21841, i32 0, i32 5
  %21843 = getelementptr inbounds %struct.Reg, %struct.Reg* %21842, i32 0, i32 0
  %RCX.i1616 = bitcast %union.anon* %21843 to i64*
  %21844 = load i64, i64* %PC.i1615
  %21845 = add i64 %21844, 8
  store i64 %21845, i64* %PC.i1615
  %21846 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21846, i64* %RCX.i1616, align 8
  store %struct.Memory* %loadMem_4ab8cd, %struct.Memory** %MEMORY
  %loadMem_4ab8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21848 = getelementptr inbounds %struct.GPR, %struct.GPR* %21847, i32 0, i32 33
  %21849 = getelementptr inbounds %struct.Reg, %struct.Reg* %21848, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %21849 to i64*
  %21850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21851 = getelementptr inbounds %struct.GPR, %struct.GPR* %21850, i32 0, i32 7
  %21852 = getelementptr inbounds %struct.Reg, %struct.Reg* %21851, i32 0, i32 0
  %RDX.i1613 = bitcast %union.anon* %21852 to i64*
  %21853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21854 = getelementptr inbounds %struct.GPR, %struct.GPR* %21853, i32 0, i32 15
  %21855 = getelementptr inbounds %struct.Reg, %struct.Reg* %21854, i32 0, i32 0
  %RBP.i1614 = bitcast %union.anon* %21855 to i64*
  %21856 = load i64, i64* %RBP.i1614
  %21857 = sub i64 %21856, 24
  %21858 = load i64, i64* %PC.i1612
  %21859 = add i64 %21858, 4
  store i64 %21859, i64* %PC.i1612
  %21860 = inttoptr i64 %21857 to i32*
  %21861 = load i32, i32* %21860
  %21862 = sext i32 %21861 to i64
  store i64 %21862, i64* %RDX.i1613, align 8
  store %struct.Memory* %loadMem_4ab8d5, %struct.Memory** %MEMORY
  %loadMem_4ab8d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21864 = getelementptr inbounds %struct.GPR, %struct.GPR* %21863, i32 0, i32 33
  %21865 = getelementptr inbounds %struct.Reg, %struct.Reg* %21864, i32 0, i32 0
  %PC.i1608 = bitcast %union.anon* %21865 to i64*
  %21866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21867 = getelementptr inbounds %struct.GPR, %struct.GPR* %21866, i32 0, i32 5
  %21868 = getelementptr inbounds %struct.Reg, %struct.Reg* %21867, i32 0, i32 0
  %RCX.i1609 = bitcast %union.anon* %21868 to i64*
  %21869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21870 = getelementptr inbounds %struct.GPR, %struct.GPR* %21869, i32 0, i32 7
  %21871 = getelementptr inbounds %struct.Reg, %struct.Reg* %21870, i32 0, i32 0
  %RDX.i1610 = bitcast %union.anon* %21871 to i64*
  %21872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21873 = getelementptr inbounds %struct.GPR, %struct.GPR* %21872, i32 0, i32 9
  %21874 = getelementptr inbounds %struct.Reg, %struct.Reg* %21873, i32 0, i32 0
  %RSI.i1611 = bitcast %union.anon* %21874 to i64*
  %21875 = load i64, i64* %RSI.i1611
  %21876 = load i64, i64* %RCX.i1609
  %21877 = load i64, i64* %RDX.i1610
  %21878 = mul i64 %21877, 4
  %21879 = add i64 %21876, 13432
  %21880 = add i64 %21879, %21878
  %21881 = load i64, i64* %PC.i1608
  %21882 = add i64 %21881, 7
  store i64 %21882, i64* %PC.i1608
  %21883 = trunc i64 %21875 to i32
  %21884 = inttoptr i64 %21880 to i32*
  %21885 = load i32, i32* %21884
  %21886 = add i32 %21885, %21883
  %21887 = zext i32 %21886 to i64
  store i64 %21887, i64* %RSI.i1611, align 8
  %21888 = icmp ult i32 %21886, %21883
  %21889 = icmp ult i32 %21886, %21885
  %21890 = or i1 %21888, %21889
  %21891 = zext i1 %21890 to i8
  %21892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21891, i8* %21892, align 1
  %21893 = and i32 %21886, 255
  %21894 = call i32 @llvm.ctpop.i32(i32 %21893)
  %21895 = trunc i32 %21894 to i8
  %21896 = and i8 %21895, 1
  %21897 = xor i8 %21896, 1
  %21898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21897, i8* %21898, align 1
  %21899 = xor i32 %21885, %21883
  %21900 = xor i32 %21899, %21886
  %21901 = lshr i32 %21900, 4
  %21902 = trunc i32 %21901 to i8
  %21903 = and i8 %21902, 1
  %21904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21903, i8* %21904, align 1
  %21905 = icmp eq i32 %21886, 0
  %21906 = zext i1 %21905 to i8
  %21907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21906, i8* %21907, align 1
  %21908 = lshr i32 %21886, 31
  %21909 = trunc i32 %21908 to i8
  %21910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21909, i8* %21910, align 1
  %21911 = lshr i32 %21883, 31
  %21912 = lshr i32 %21885, 31
  %21913 = xor i32 %21908, %21911
  %21914 = xor i32 %21908, %21912
  %21915 = add i32 %21913, %21914
  %21916 = icmp eq i32 %21915, 2
  %21917 = zext i1 %21916 to i8
  %21918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21917, i8* %21918, align 1
  store %struct.Memory* %loadMem_4ab8d9, %struct.Memory** %MEMORY
  %loadMem_4ab8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21920 = getelementptr inbounds %struct.GPR, %struct.GPR* %21919, i32 0, i32 33
  %21921 = getelementptr inbounds %struct.Reg, %struct.Reg* %21920, i32 0, i32 0
  %PC.i1606 = bitcast %union.anon* %21921 to i64*
  %21922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21923 = getelementptr inbounds %struct.GPR, %struct.GPR* %21922, i32 0, i32 5
  %21924 = getelementptr inbounds %struct.Reg, %struct.Reg* %21923, i32 0, i32 0
  %RCX.i1607 = bitcast %union.anon* %21924 to i64*
  %21925 = load i64, i64* %PC.i1606
  %21926 = add i64 %21925, 8
  store i64 %21926, i64* %PC.i1606
  %21927 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21927, i64* %RCX.i1607, align 8
  store %struct.Memory* %loadMem_4ab8e0, %struct.Memory** %MEMORY
  %loadMem_4ab8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21929 = getelementptr inbounds %struct.GPR, %struct.GPR* %21928, i32 0, i32 33
  %21930 = getelementptr inbounds %struct.Reg, %struct.Reg* %21929, i32 0, i32 0
  %PC.i1603 = bitcast %union.anon* %21930 to i64*
  %21931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21932 = getelementptr inbounds %struct.GPR, %struct.GPR* %21931, i32 0, i32 7
  %21933 = getelementptr inbounds %struct.Reg, %struct.Reg* %21932, i32 0, i32 0
  %RDX.i1604 = bitcast %union.anon* %21933 to i64*
  %21934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21935 = getelementptr inbounds %struct.GPR, %struct.GPR* %21934, i32 0, i32 15
  %21936 = getelementptr inbounds %struct.Reg, %struct.Reg* %21935, i32 0, i32 0
  %RBP.i1605 = bitcast %union.anon* %21936 to i64*
  %21937 = load i64, i64* %RBP.i1605
  %21938 = sub i64 %21937, 24
  %21939 = load i64, i64* %PC.i1603
  %21940 = add i64 %21939, 4
  store i64 %21940, i64* %PC.i1603
  %21941 = inttoptr i64 %21938 to i32*
  %21942 = load i32, i32* %21941
  %21943 = sext i32 %21942 to i64
  store i64 %21943, i64* %RDX.i1604, align 8
  store %struct.Memory* %loadMem_4ab8e8, %struct.Memory** %MEMORY
  %loadMem_4ab8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %21944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21945 = getelementptr inbounds %struct.GPR, %struct.GPR* %21944, i32 0, i32 33
  %21946 = getelementptr inbounds %struct.Reg, %struct.Reg* %21945, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %21946 to i64*
  %21947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21948 = getelementptr inbounds %struct.GPR, %struct.GPR* %21947, i32 0, i32 5
  %21949 = getelementptr inbounds %struct.Reg, %struct.Reg* %21948, i32 0, i32 0
  %RCX.i1600 = bitcast %union.anon* %21949 to i64*
  %21950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21951 = getelementptr inbounds %struct.GPR, %struct.GPR* %21950, i32 0, i32 7
  %21952 = getelementptr inbounds %struct.Reg, %struct.Reg* %21951, i32 0, i32 0
  %RDX.i1601 = bitcast %union.anon* %21952 to i64*
  %21953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21954 = getelementptr inbounds %struct.GPR, %struct.GPR* %21953, i32 0, i32 9
  %21955 = getelementptr inbounds %struct.Reg, %struct.Reg* %21954, i32 0, i32 0
  %RSI.i1602 = bitcast %union.anon* %21955 to i64*
  %21956 = load i64, i64* %RSI.i1602
  %21957 = load i64, i64* %RCX.i1600
  %21958 = load i64, i64* %RDX.i1601
  %21959 = mul i64 %21958, 4
  %21960 = add i64 %21957, 13560
  %21961 = add i64 %21960, %21959
  %21962 = load i64, i64* %PC.i1599
  %21963 = add i64 %21962, 7
  store i64 %21963, i64* %PC.i1599
  %21964 = trunc i64 %21956 to i32
  %21965 = inttoptr i64 %21961 to i32*
  %21966 = load i32, i32* %21965
  %21967 = sub i32 %21964, %21966
  %21968 = zext i32 %21967 to i64
  store i64 %21968, i64* %RSI.i1602, align 8
  %21969 = icmp ult i32 %21964, %21966
  %21970 = zext i1 %21969 to i8
  %21971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21970, i8* %21971, align 1
  %21972 = and i32 %21967, 255
  %21973 = call i32 @llvm.ctpop.i32(i32 %21972)
  %21974 = trunc i32 %21973 to i8
  %21975 = and i8 %21974, 1
  %21976 = xor i8 %21975, 1
  %21977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21976, i8* %21977, align 1
  %21978 = xor i32 %21966, %21964
  %21979 = xor i32 %21978, %21967
  %21980 = lshr i32 %21979, 4
  %21981 = trunc i32 %21980 to i8
  %21982 = and i8 %21981, 1
  %21983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21982, i8* %21983, align 1
  %21984 = icmp eq i32 %21967, 0
  %21985 = zext i1 %21984 to i8
  %21986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21985, i8* %21986, align 1
  %21987 = lshr i32 %21967, 31
  %21988 = trunc i32 %21987 to i8
  %21989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21988, i8* %21989, align 1
  %21990 = lshr i32 %21964, 31
  %21991 = lshr i32 %21966, 31
  %21992 = xor i32 %21991, %21990
  %21993 = xor i32 %21987, %21990
  %21994 = add i32 %21993, %21992
  %21995 = icmp eq i32 %21994, 2
  %21996 = zext i1 %21995 to i8
  %21997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21996, i8* %21997, align 1
  store %struct.Memory* %loadMem_4ab8ec, %struct.Memory** %MEMORY
  %loadMem_4ab8f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21999 = getelementptr inbounds %struct.GPR, %struct.GPR* %21998, i32 0, i32 33
  %22000 = getelementptr inbounds %struct.Reg, %struct.Reg* %21999, i32 0, i32 0
  %PC.i1597 = bitcast %union.anon* %22000 to i64*
  %22001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22002 = getelementptr inbounds %struct.GPR, %struct.GPR* %22001, i32 0, i32 5
  %22003 = getelementptr inbounds %struct.Reg, %struct.Reg* %22002, i32 0, i32 0
  %RCX.i1598 = bitcast %union.anon* %22003 to i64*
  %22004 = load i64, i64* %PC.i1597
  %22005 = add i64 %22004, 8
  store i64 %22005, i64* %PC.i1597
  %22006 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22006, i64* %RCX.i1598, align 8
  store %struct.Memory* %loadMem_4ab8f3, %struct.Memory** %MEMORY
  %loadMem_4ab8fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %22007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22008 = getelementptr inbounds %struct.GPR, %struct.GPR* %22007, i32 0, i32 33
  %22009 = getelementptr inbounds %struct.Reg, %struct.Reg* %22008, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %22009 to i64*
  %22010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22011 = getelementptr inbounds %struct.GPR, %struct.GPR* %22010, i32 0, i32 7
  %22012 = getelementptr inbounds %struct.Reg, %struct.Reg* %22011, i32 0, i32 0
  %RDX.i1595 = bitcast %union.anon* %22012 to i64*
  %22013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22014 = getelementptr inbounds %struct.GPR, %struct.GPR* %22013, i32 0, i32 15
  %22015 = getelementptr inbounds %struct.Reg, %struct.Reg* %22014, i32 0, i32 0
  %RBP.i1596 = bitcast %union.anon* %22015 to i64*
  %22016 = load i64, i64* %RBP.i1596
  %22017 = sub i64 %22016, 24
  %22018 = load i64, i64* %PC.i1594
  %22019 = add i64 %22018, 4
  store i64 %22019, i64* %PC.i1594
  %22020 = inttoptr i64 %22017 to i32*
  %22021 = load i32, i32* %22020
  %22022 = sext i32 %22021 to i64
  store i64 %22022, i64* %RDX.i1595, align 8
  store %struct.Memory* %loadMem_4ab8fb, %struct.Memory** %MEMORY
  %loadMem_4ab8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %22023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22024 = getelementptr inbounds %struct.GPR, %struct.GPR* %22023, i32 0, i32 33
  %22025 = getelementptr inbounds %struct.Reg, %struct.Reg* %22024, i32 0, i32 0
  %PC.i1590 = bitcast %union.anon* %22025 to i64*
  %22026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22027 = getelementptr inbounds %struct.GPR, %struct.GPR* %22026, i32 0, i32 5
  %22028 = getelementptr inbounds %struct.Reg, %struct.Reg* %22027, i32 0, i32 0
  %RCX.i1591 = bitcast %union.anon* %22028 to i64*
  %22029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22030 = getelementptr inbounds %struct.GPR, %struct.GPR* %22029, i32 0, i32 7
  %22031 = getelementptr inbounds %struct.Reg, %struct.Reg* %22030, i32 0, i32 0
  %RDX.i1592 = bitcast %union.anon* %22031 to i64*
  %22032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22033 = getelementptr inbounds %struct.GPR, %struct.GPR* %22032, i32 0, i32 11
  %22034 = getelementptr inbounds %struct.Reg, %struct.Reg* %22033, i32 0, i32 0
  %RDI.i1593 = bitcast %union.anon* %22034 to i64*
  %22035 = load i64, i64* %RCX.i1591
  %22036 = load i64, i64* %RDX.i1592
  %22037 = mul i64 %22036, 4
  %22038 = add i64 %22035, 13560
  %22039 = add i64 %22038, %22037
  %22040 = load i64, i64* %PC.i1590
  %22041 = add i64 %22040, 7
  store i64 %22041, i64* %PC.i1590
  %22042 = inttoptr i64 %22039 to i32*
  %22043 = load i32, i32* %22042
  %22044 = zext i32 %22043 to i64
  store i64 %22044, i64* %RDI.i1593, align 8
  store %struct.Memory* %loadMem_4ab8ff, %struct.Memory** %MEMORY
  %loadMem_4ab906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22046 = getelementptr inbounds %struct.GPR, %struct.GPR* %22045, i32 0, i32 33
  %22047 = getelementptr inbounds %struct.Reg, %struct.Reg* %22046, i32 0, i32 0
  %PC.i1588 = bitcast %union.anon* %22047 to i64*
  %22048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22049 = getelementptr inbounds %struct.GPR, %struct.GPR* %22048, i32 0, i32 11
  %22050 = getelementptr inbounds %struct.Reg, %struct.Reg* %22049, i32 0, i32 0
  %RDI.i1589 = bitcast %union.anon* %22050 to i64*
  %22051 = load i64, i64* %RDI.i1589
  %22052 = load i64, i64* %PC.i1588
  %22053 = add i64 %22052, 2
  store i64 %22053, i64* %PC.i1588
  %22054 = shl i64 %22051, 32
  %22055 = ashr i64 %22054, 33
  %22056 = trunc i64 %22051 to i8
  %22057 = and i8 %22056, 1
  %22058 = trunc i64 %22055 to i32
  %22059 = and i64 %22055, 4294967295
  store i64 %22059, i64* %RDI.i1589, align 8
  %22060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22057, i8* %22060, align 1
  %22061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22062 = and i32 %22058, 255
  %22063 = call i32 @llvm.ctpop.i32(i32 %22062)
  %22064 = trunc i32 %22063 to i8
  %22065 = and i8 %22064, 1
  %22066 = xor i8 %22065, 1
  store i8 %22066, i8* %22061, align 1
  %22067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22067, align 1
  %22068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22069 = icmp eq i32 %22058, 0
  %22070 = zext i1 %22069 to i8
  store i8 %22070, i8* %22068, align 1
  %22071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22072 = lshr i32 %22058, 31
  %22073 = trunc i32 %22072 to i8
  store i8 %22073, i8* %22071, align 1
  %22074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22074, align 1
  store %struct.Memory* %loadMem_4ab906, %struct.Memory** %MEMORY
  %loadMem_4ab909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22076 = getelementptr inbounds %struct.GPR, %struct.GPR* %22075, i32 0, i32 33
  %22077 = getelementptr inbounds %struct.Reg, %struct.Reg* %22076, i32 0, i32 0
  %PC.i1585 = bitcast %union.anon* %22077 to i64*
  %22078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22079 = getelementptr inbounds %struct.GPR, %struct.GPR* %22078, i32 0, i32 11
  %22080 = getelementptr inbounds %struct.Reg, %struct.Reg* %22079, i32 0, i32 0
  %EDI.i1586 = bitcast %union.anon* %22080 to i32*
  %22081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22082 = getelementptr inbounds %struct.GPR, %struct.GPR* %22081, i32 0, i32 9
  %22083 = getelementptr inbounds %struct.Reg, %struct.Reg* %22082, i32 0, i32 0
  %RSI.i1587 = bitcast %union.anon* %22083 to i64*
  %22084 = load i64, i64* %RSI.i1587
  %22085 = load i32, i32* %EDI.i1586
  %22086 = zext i32 %22085 to i64
  %22087 = load i64, i64* %PC.i1585
  %22088 = add i64 %22087, 2
  store i64 %22088, i64* %PC.i1585
  %22089 = trunc i64 %22084 to i32
  %22090 = sub i32 %22089, %22085
  %22091 = zext i32 %22090 to i64
  store i64 %22091, i64* %RSI.i1587, align 8
  %22092 = icmp ult i32 %22089, %22085
  %22093 = zext i1 %22092 to i8
  %22094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22093, i8* %22094, align 1
  %22095 = and i32 %22090, 255
  %22096 = call i32 @llvm.ctpop.i32(i32 %22095)
  %22097 = trunc i32 %22096 to i8
  %22098 = and i8 %22097, 1
  %22099 = xor i8 %22098, 1
  %22100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22099, i8* %22100, align 1
  %22101 = xor i64 %22086, %22084
  %22102 = trunc i64 %22101 to i32
  %22103 = xor i32 %22102, %22090
  %22104 = lshr i32 %22103, 4
  %22105 = trunc i32 %22104 to i8
  %22106 = and i8 %22105, 1
  %22107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22106, i8* %22107, align 1
  %22108 = icmp eq i32 %22090, 0
  %22109 = zext i1 %22108 to i8
  %22110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22109, i8* %22110, align 1
  %22111 = lshr i32 %22090, 31
  %22112 = trunc i32 %22111 to i8
  %22113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22112, i8* %22113, align 1
  %22114 = lshr i32 %22089, 31
  %22115 = lshr i32 %22085, 31
  %22116 = xor i32 %22115, %22114
  %22117 = xor i32 %22111, %22114
  %22118 = add i32 %22117, %22116
  %22119 = icmp eq i32 %22118, 2
  %22120 = zext i1 %22119 to i8
  %22121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22120, i8* %22121, align 1
  store %struct.Memory* %loadMem_4ab909, %struct.Memory** %MEMORY
  %loadMem_4ab90b = load %struct.Memory*, %struct.Memory** %MEMORY
  %22122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22123 = getelementptr inbounds %struct.GPR, %struct.GPR* %22122, i32 0, i32 33
  %22124 = getelementptr inbounds %struct.Reg, %struct.Reg* %22123, i32 0, i32 0
  %PC.i1582 = bitcast %union.anon* %22124 to i64*
  %22125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22126 = getelementptr inbounds %struct.GPR, %struct.GPR* %22125, i32 0, i32 9
  %22127 = getelementptr inbounds %struct.Reg, %struct.Reg* %22126, i32 0, i32 0
  %ESI.i1583 = bitcast %union.anon* %22127 to i32*
  %22128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22129 = getelementptr inbounds %struct.GPR, %struct.GPR* %22128, i32 0, i32 15
  %22130 = getelementptr inbounds %struct.Reg, %struct.Reg* %22129, i32 0, i32 0
  %RBP.i1584 = bitcast %union.anon* %22130 to i64*
  %22131 = load i64, i64* %RBP.i1584
  %22132 = sub i64 %22131, 572
  %22133 = load i32, i32* %ESI.i1583
  %22134 = zext i32 %22133 to i64
  %22135 = load i64, i64* %PC.i1582
  %22136 = add i64 %22135, 6
  store i64 %22136, i64* %PC.i1582
  %22137 = inttoptr i64 %22132 to i32*
  store i32 %22133, i32* %22137
  store %struct.Memory* %loadMem_4ab90b, %struct.Memory** %MEMORY
  %loadMem_4ab911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22139 = getelementptr inbounds %struct.GPR, %struct.GPR* %22138, i32 0, i32 33
  %22140 = getelementptr inbounds %struct.Reg, %struct.Reg* %22139, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %22140 to i64*
  %22141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22142 = getelementptr inbounds %struct.GPR, %struct.GPR* %22141, i32 0, i32 5
  %22143 = getelementptr inbounds %struct.Reg, %struct.Reg* %22142, i32 0, i32 0
  %RCX.i1581 = bitcast %union.anon* %22143 to i64*
  %22144 = load i64, i64* %PC.i1580
  %22145 = add i64 %22144, 8
  store i64 %22145, i64* %PC.i1580
  %22146 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22146, i64* %RCX.i1581, align 8
  store %struct.Memory* %loadMem_4ab911, %struct.Memory** %MEMORY
  %loadMem_4ab919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22148 = getelementptr inbounds %struct.GPR, %struct.GPR* %22147, i32 0, i32 33
  %22149 = getelementptr inbounds %struct.Reg, %struct.Reg* %22148, i32 0, i32 0
  %PC.i1577 = bitcast %union.anon* %22149 to i64*
  %22150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22151 = getelementptr inbounds %struct.GPR, %struct.GPR* %22150, i32 0, i32 7
  %22152 = getelementptr inbounds %struct.Reg, %struct.Reg* %22151, i32 0, i32 0
  %RDX.i1578 = bitcast %union.anon* %22152 to i64*
  %22153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22154 = getelementptr inbounds %struct.GPR, %struct.GPR* %22153, i32 0, i32 15
  %22155 = getelementptr inbounds %struct.Reg, %struct.Reg* %22154, i32 0, i32 0
  %RBP.i1579 = bitcast %union.anon* %22155 to i64*
  %22156 = load i64, i64* %RBP.i1579
  %22157 = sub i64 %22156, 24
  %22158 = load i64, i64* %PC.i1577
  %22159 = add i64 %22158, 4
  store i64 %22159, i64* %PC.i1577
  %22160 = inttoptr i64 %22157 to i32*
  %22161 = load i32, i32* %22160
  %22162 = sext i32 %22161 to i64
  store i64 %22162, i64* %RDX.i1578, align 8
  store %struct.Memory* %loadMem_4ab919, %struct.Memory** %MEMORY
  %loadMem_4ab91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22164 = getelementptr inbounds %struct.GPR, %struct.GPR* %22163, i32 0, i32 33
  %22165 = getelementptr inbounds %struct.Reg, %struct.Reg* %22164, i32 0, i32 0
  %PC.i1573 = bitcast %union.anon* %22165 to i64*
  %22166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22167 = getelementptr inbounds %struct.GPR, %struct.GPR* %22166, i32 0, i32 5
  %22168 = getelementptr inbounds %struct.Reg, %struct.Reg* %22167, i32 0, i32 0
  %RCX.i1574 = bitcast %union.anon* %22168 to i64*
  %22169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22170 = getelementptr inbounds %struct.GPR, %struct.GPR* %22169, i32 0, i32 7
  %22171 = getelementptr inbounds %struct.Reg, %struct.Reg* %22170, i32 0, i32 0
  %RDX.i1575 = bitcast %union.anon* %22171 to i64*
  %22172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22173 = getelementptr inbounds %struct.GPR, %struct.GPR* %22172, i32 0, i32 9
  %22174 = getelementptr inbounds %struct.Reg, %struct.Reg* %22173, i32 0, i32 0
  %RSI.i1576 = bitcast %union.anon* %22174 to i64*
  %22175 = load i64, i64* %RCX.i1574
  %22176 = load i64, i64* %RDX.i1575
  %22177 = mul i64 %22176, 4
  %22178 = add i64 %22175, 13176
  %22179 = add i64 %22178, %22177
  %22180 = load i64, i64* %PC.i1573
  %22181 = add i64 %22180, 7
  store i64 %22181, i64* %PC.i1573
  %22182 = inttoptr i64 %22179 to i32*
  %22183 = load i32, i32* %22182
  %22184 = zext i32 %22183 to i64
  store i64 %22184, i64* %RSI.i1576, align 8
  store %struct.Memory* %loadMem_4ab91d, %struct.Memory** %MEMORY
  %loadMem_4ab924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22186 = getelementptr inbounds %struct.GPR, %struct.GPR* %22185, i32 0, i32 33
  %22187 = getelementptr inbounds %struct.Reg, %struct.Reg* %22186, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %22187 to i64*
  %22188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22189 = getelementptr inbounds %struct.GPR, %struct.GPR* %22188, i32 0, i32 5
  %22190 = getelementptr inbounds %struct.Reg, %struct.Reg* %22189, i32 0, i32 0
  %RCX.i1572 = bitcast %union.anon* %22190 to i64*
  %22191 = load i64, i64* %PC.i1571
  %22192 = add i64 %22191, 8
  store i64 %22192, i64* %PC.i1571
  %22193 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22193, i64* %RCX.i1572, align 8
  store %struct.Memory* %loadMem_4ab924, %struct.Memory** %MEMORY
  %loadMem_4ab92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22195 = getelementptr inbounds %struct.GPR, %struct.GPR* %22194, i32 0, i32 33
  %22196 = getelementptr inbounds %struct.Reg, %struct.Reg* %22195, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %22196 to i64*
  %22197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22198 = getelementptr inbounds %struct.GPR, %struct.GPR* %22197, i32 0, i32 7
  %22199 = getelementptr inbounds %struct.Reg, %struct.Reg* %22198, i32 0, i32 0
  %RDX.i1569 = bitcast %union.anon* %22199 to i64*
  %22200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22201 = getelementptr inbounds %struct.GPR, %struct.GPR* %22200, i32 0, i32 15
  %22202 = getelementptr inbounds %struct.Reg, %struct.Reg* %22201, i32 0, i32 0
  %RBP.i1570 = bitcast %union.anon* %22202 to i64*
  %22203 = load i64, i64* %RBP.i1570
  %22204 = sub i64 %22203, 24
  %22205 = load i64, i64* %PC.i1568
  %22206 = add i64 %22205, 4
  store i64 %22206, i64* %PC.i1568
  %22207 = inttoptr i64 %22204 to i32*
  %22208 = load i32, i32* %22207
  %22209 = sext i32 %22208 to i64
  store i64 %22209, i64* %RDX.i1569, align 8
  store %struct.Memory* %loadMem_4ab92c, %struct.Memory** %MEMORY
  %loadMem_4ab930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22211 = getelementptr inbounds %struct.GPR, %struct.GPR* %22210, i32 0, i32 33
  %22212 = getelementptr inbounds %struct.Reg, %struct.Reg* %22211, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %22212 to i64*
  %22213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22214 = getelementptr inbounds %struct.GPR, %struct.GPR* %22213, i32 0, i32 5
  %22215 = getelementptr inbounds %struct.Reg, %struct.Reg* %22214, i32 0, i32 0
  %RCX.i1565 = bitcast %union.anon* %22215 to i64*
  %22216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22217 = getelementptr inbounds %struct.GPR, %struct.GPR* %22216, i32 0, i32 7
  %22218 = getelementptr inbounds %struct.Reg, %struct.Reg* %22217, i32 0, i32 0
  %RDX.i1566 = bitcast %union.anon* %22218 to i64*
  %22219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22220 = getelementptr inbounds %struct.GPR, %struct.GPR* %22219, i32 0, i32 9
  %22221 = getelementptr inbounds %struct.Reg, %struct.Reg* %22220, i32 0, i32 0
  %RSI.i1567 = bitcast %union.anon* %22221 to i64*
  %22222 = load i64, i64* %RSI.i1567
  %22223 = load i64, i64* %RCX.i1565
  %22224 = load i64, i64* %RDX.i1566
  %22225 = mul i64 %22224, 4
  %22226 = add i64 %22223, 13560
  %22227 = add i64 %22226, %22225
  %22228 = load i64, i64* %PC.i1564
  %22229 = add i64 %22228, 7
  store i64 %22229, i64* %PC.i1564
  %22230 = trunc i64 %22222 to i32
  %22231 = inttoptr i64 %22227 to i32*
  %22232 = load i32, i32* %22231
  %22233 = add i32 %22232, %22230
  %22234 = zext i32 %22233 to i64
  store i64 %22234, i64* %RSI.i1567, align 8
  %22235 = icmp ult i32 %22233, %22230
  %22236 = icmp ult i32 %22233, %22232
  %22237 = or i1 %22235, %22236
  %22238 = zext i1 %22237 to i8
  %22239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22238, i8* %22239, align 1
  %22240 = and i32 %22233, 255
  %22241 = call i32 @llvm.ctpop.i32(i32 %22240)
  %22242 = trunc i32 %22241 to i8
  %22243 = and i8 %22242, 1
  %22244 = xor i8 %22243, 1
  %22245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22244, i8* %22245, align 1
  %22246 = xor i32 %22232, %22230
  %22247 = xor i32 %22246, %22233
  %22248 = lshr i32 %22247, 4
  %22249 = trunc i32 %22248 to i8
  %22250 = and i8 %22249, 1
  %22251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22250, i8* %22251, align 1
  %22252 = icmp eq i32 %22233, 0
  %22253 = zext i1 %22252 to i8
  %22254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22253, i8* %22254, align 1
  %22255 = lshr i32 %22233, 31
  %22256 = trunc i32 %22255 to i8
  %22257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22256, i8* %22257, align 1
  %22258 = lshr i32 %22230, 31
  %22259 = lshr i32 %22232, 31
  %22260 = xor i32 %22255, %22258
  %22261 = xor i32 %22255, %22259
  %22262 = add i32 %22260, %22261
  %22263 = icmp eq i32 %22262, 2
  %22264 = zext i1 %22263 to i8
  %22265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22264, i8* %22265, align 1
  store %struct.Memory* %loadMem_4ab930, %struct.Memory** %MEMORY
  %loadMem_4ab937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22267 = getelementptr inbounds %struct.GPR, %struct.GPR* %22266, i32 0, i32 33
  %22268 = getelementptr inbounds %struct.Reg, %struct.Reg* %22267, i32 0, i32 0
  %PC.i1562 = bitcast %union.anon* %22268 to i64*
  %22269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22270 = getelementptr inbounds %struct.GPR, %struct.GPR* %22269, i32 0, i32 5
  %22271 = getelementptr inbounds %struct.Reg, %struct.Reg* %22270, i32 0, i32 0
  %RCX.i1563 = bitcast %union.anon* %22271 to i64*
  %22272 = load i64, i64* %PC.i1562
  %22273 = add i64 %22272, 8
  store i64 %22273, i64* %PC.i1562
  %22274 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22274, i64* %RCX.i1563, align 8
  store %struct.Memory* %loadMem_4ab937, %struct.Memory** %MEMORY
  %loadMem_4ab93f = load %struct.Memory*, %struct.Memory** %MEMORY
  %22275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22276 = getelementptr inbounds %struct.GPR, %struct.GPR* %22275, i32 0, i32 33
  %22277 = getelementptr inbounds %struct.Reg, %struct.Reg* %22276, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %22277 to i64*
  %22278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22279 = getelementptr inbounds %struct.GPR, %struct.GPR* %22278, i32 0, i32 7
  %22280 = getelementptr inbounds %struct.Reg, %struct.Reg* %22279, i32 0, i32 0
  %RDX.i1560 = bitcast %union.anon* %22280 to i64*
  %22281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22282 = getelementptr inbounds %struct.GPR, %struct.GPR* %22281, i32 0, i32 15
  %22283 = getelementptr inbounds %struct.Reg, %struct.Reg* %22282, i32 0, i32 0
  %RBP.i1561 = bitcast %union.anon* %22283 to i64*
  %22284 = load i64, i64* %RBP.i1561
  %22285 = sub i64 %22284, 24
  %22286 = load i64, i64* %PC.i1559
  %22287 = add i64 %22286, 4
  store i64 %22287, i64* %PC.i1559
  %22288 = inttoptr i64 %22285 to i32*
  %22289 = load i32, i32* %22288
  %22290 = sext i32 %22289 to i64
  store i64 %22290, i64* %RDX.i1560, align 8
  store %struct.Memory* %loadMem_4ab93f, %struct.Memory** %MEMORY
  %loadMem_4ab943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22292 = getelementptr inbounds %struct.GPR, %struct.GPR* %22291, i32 0, i32 33
  %22293 = getelementptr inbounds %struct.Reg, %struct.Reg* %22292, i32 0, i32 0
  %PC.i1555 = bitcast %union.anon* %22293 to i64*
  %22294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22295 = getelementptr inbounds %struct.GPR, %struct.GPR* %22294, i32 0, i32 5
  %22296 = getelementptr inbounds %struct.Reg, %struct.Reg* %22295, i32 0, i32 0
  %RCX.i1556 = bitcast %union.anon* %22296 to i64*
  %22297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22298 = getelementptr inbounds %struct.GPR, %struct.GPR* %22297, i32 0, i32 7
  %22299 = getelementptr inbounds %struct.Reg, %struct.Reg* %22298, i32 0, i32 0
  %RDX.i1557 = bitcast %union.anon* %22299 to i64*
  %22300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22301 = getelementptr inbounds %struct.GPR, %struct.GPR* %22300, i32 0, i32 9
  %22302 = getelementptr inbounds %struct.Reg, %struct.Reg* %22301, i32 0, i32 0
  %RSI.i1558 = bitcast %union.anon* %22302 to i64*
  %22303 = load i64, i64* %RSI.i1558
  %22304 = load i64, i64* %RCX.i1556
  %22305 = load i64, i64* %RDX.i1557
  %22306 = mul i64 %22305, 4
  %22307 = add i64 %22304, 13304
  %22308 = add i64 %22307, %22306
  %22309 = load i64, i64* %PC.i1555
  %22310 = add i64 %22309, 7
  store i64 %22310, i64* %PC.i1555
  %22311 = trunc i64 %22303 to i32
  %22312 = inttoptr i64 %22308 to i32*
  %22313 = load i32, i32* %22312
  %22314 = sub i32 %22311, %22313
  %22315 = zext i32 %22314 to i64
  store i64 %22315, i64* %RSI.i1558, align 8
  %22316 = icmp ult i32 %22311, %22313
  %22317 = zext i1 %22316 to i8
  %22318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22317, i8* %22318, align 1
  %22319 = and i32 %22314, 255
  %22320 = call i32 @llvm.ctpop.i32(i32 %22319)
  %22321 = trunc i32 %22320 to i8
  %22322 = and i8 %22321, 1
  %22323 = xor i8 %22322, 1
  %22324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22323, i8* %22324, align 1
  %22325 = xor i32 %22313, %22311
  %22326 = xor i32 %22325, %22314
  %22327 = lshr i32 %22326, 4
  %22328 = trunc i32 %22327 to i8
  %22329 = and i8 %22328, 1
  %22330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22329, i8* %22330, align 1
  %22331 = icmp eq i32 %22314, 0
  %22332 = zext i1 %22331 to i8
  %22333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22332, i8* %22333, align 1
  %22334 = lshr i32 %22314, 31
  %22335 = trunc i32 %22334 to i8
  %22336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22335, i8* %22336, align 1
  %22337 = lshr i32 %22311, 31
  %22338 = lshr i32 %22313, 31
  %22339 = xor i32 %22338, %22337
  %22340 = xor i32 %22334, %22337
  %22341 = add i32 %22340, %22339
  %22342 = icmp eq i32 %22341, 2
  %22343 = zext i1 %22342 to i8
  %22344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22343, i8* %22344, align 1
  store %struct.Memory* %loadMem_4ab943, %struct.Memory** %MEMORY
  %loadMem_4ab94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %22345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22346 = getelementptr inbounds %struct.GPR, %struct.GPR* %22345, i32 0, i32 33
  %22347 = getelementptr inbounds %struct.Reg, %struct.Reg* %22346, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %22347 to i64*
  %22348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22349 = getelementptr inbounds %struct.GPR, %struct.GPR* %22348, i32 0, i32 5
  %22350 = getelementptr inbounds %struct.Reg, %struct.Reg* %22349, i32 0, i32 0
  %RCX.i1554 = bitcast %union.anon* %22350 to i64*
  %22351 = load i64, i64* %PC.i1553
  %22352 = add i64 %22351, 8
  store i64 %22352, i64* %PC.i1553
  %22353 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22353, i64* %RCX.i1554, align 8
  store %struct.Memory* %loadMem_4ab94a, %struct.Memory** %MEMORY
  %loadMem_4ab952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22355 = getelementptr inbounds %struct.GPR, %struct.GPR* %22354, i32 0, i32 33
  %22356 = getelementptr inbounds %struct.Reg, %struct.Reg* %22355, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %22356 to i64*
  %22357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22358 = getelementptr inbounds %struct.GPR, %struct.GPR* %22357, i32 0, i32 7
  %22359 = getelementptr inbounds %struct.Reg, %struct.Reg* %22358, i32 0, i32 0
  %RDX.i1551 = bitcast %union.anon* %22359 to i64*
  %22360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22361 = getelementptr inbounds %struct.GPR, %struct.GPR* %22360, i32 0, i32 15
  %22362 = getelementptr inbounds %struct.Reg, %struct.Reg* %22361, i32 0, i32 0
  %RBP.i1552 = bitcast %union.anon* %22362 to i64*
  %22363 = load i64, i64* %RBP.i1552
  %22364 = sub i64 %22363, 24
  %22365 = load i64, i64* %PC.i1550
  %22366 = add i64 %22365, 4
  store i64 %22366, i64* %PC.i1550
  %22367 = inttoptr i64 %22364 to i32*
  %22368 = load i32, i32* %22367
  %22369 = sext i32 %22368 to i64
  store i64 %22369, i64* %RDX.i1551, align 8
  store %struct.Memory* %loadMem_4ab952, %struct.Memory** %MEMORY
  %loadMem_4ab956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22371 = getelementptr inbounds %struct.GPR, %struct.GPR* %22370, i32 0, i32 33
  %22372 = getelementptr inbounds %struct.Reg, %struct.Reg* %22371, i32 0, i32 0
  %PC.i1546 = bitcast %union.anon* %22372 to i64*
  %22373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22374 = getelementptr inbounds %struct.GPR, %struct.GPR* %22373, i32 0, i32 5
  %22375 = getelementptr inbounds %struct.Reg, %struct.Reg* %22374, i32 0, i32 0
  %RCX.i1547 = bitcast %union.anon* %22375 to i64*
  %22376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22377 = getelementptr inbounds %struct.GPR, %struct.GPR* %22376, i32 0, i32 7
  %22378 = getelementptr inbounds %struct.Reg, %struct.Reg* %22377, i32 0, i32 0
  %RDX.i1548 = bitcast %union.anon* %22378 to i64*
  %22379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22380 = getelementptr inbounds %struct.GPR, %struct.GPR* %22379, i32 0, i32 11
  %22381 = getelementptr inbounds %struct.Reg, %struct.Reg* %22380, i32 0, i32 0
  %RDI.i1549 = bitcast %union.anon* %22381 to i64*
  %22382 = load i64, i64* %RCX.i1547
  %22383 = load i64, i64* %RDX.i1548
  %22384 = mul i64 %22383, 4
  %22385 = add i64 %22382, 13304
  %22386 = add i64 %22385, %22384
  %22387 = load i64, i64* %PC.i1546
  %22388 = add i64 %22387, 7
  store i64 %22388, i64* %PC.i1546
  %22389 = inttoptr i64 %22386 to i32*
  %22390 = load i32, i32* %22389
  %22391 = zext i32 %22390 to i64
  store i64 %22391, i64* %RDI.i1549, align 8
  store %struct.Memory* %loadMem_4ab956, %struct.Memory** %MEMORY
  %loadMem_4ab95d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22393 = getelementptr inbounds %struct.GPR, %struct.GPR* %22392, i32 0, i32 33
  %22394 = getelementptr inbounds %struct.Reg, %struct.Reg* %22393, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %22394 to i64*
  %22395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22396 = getelementptr inbounds %struct.GPR, %struct.GPR* %22395, i32 0, i32 11
  %22397 = getelementptr inbounds %struct.Reg, %struct.Reg* %22396, i32 0, i32 0
  %RDI.i1545 = bitcast %union.anon* %22397 to i64*
  %22398 = load i64, i64* %RDI.i1545
  %22399 = load i64, i64* %PC.i1544
  %22400 = add i64 %22399, 2
  store i64 %22400, i64* %PC.i1544
  %22401 = shl i64 %22398, 32
  %22402 = ashr i64 %22401, 33
  %22403 = trunc i64 %22398 to i8
  %22404 = and i8 %22403, 1
  %22405 = trunc i64 %22402 to i32
  %22406 = and i64 %22402, 4294967295
  store i64 %22406, i64* %RDI.i1545, align 8
  %22407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22404, i8* %22407, align 1
  %22408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22409 = and i32 %22405, 255
  %22410 = call i32 @llvm.ctpop.i32(i32 %22409)
  %22411 = trunc i32 %22410 to i8
  %22412 = and i8 %22411, 1
  %22413 = xor i8 %22412, 1
  store i8 %22413, i8* %22408, align 1
  %22414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22414, align 1
  %22415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22416 = icmp eq i32 %22405, 0
  %22417 = zext i1 %22416 to i8
  store i8 %22417, i8* %22415, align 1
  %22418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22419 = lshr i32 %22405, 31
  %22420 = trunc i32 %22419 to i8
  store i8 %22420, i8* %22418, align 1
  %22421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22421, align 1
  store %struct.Memory* %loadMem_4ab95d, %struct.Memory** %MEMORY
  %loadMem_4ab960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22423 = getelementptr inbounds %struct.GPR, %struct.GPR* %22422, i32 0, i32 33
  %22424 = getelementptr inbounds %struct.Reg, %struct.Reg* %22423, i32 0, i32 0
  %PC.i1541 = bitcast %union.anon* %22424 to i64*
  %22425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22426 = getelementptr inbounds %struct.GPR, %struct.GPR* %22425, i32 0, i32 11
  %22427 = getelementptr inbounds %struct.Reg, %struct.Reg* %22426, i32 0, i32 0
  %EDI.i1542 = bitcast %union.anon* %22427 to i32*
  %22428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22429 = getelementptr inbounds %struct.GPR, %struct.GPR* %22428, i32 0, i32 9
  %22430 = getelementptr inbounds %struct.Reg, %struct.Reg* %22429, i32 0, i32 0
  %RSI.i1543 = bitcast %union.anon* %22430 to i64*
  %22431 = load i64, i64* %RSI.i1543
  %22432 = load i32, i32* %EDI.i1542
  %22433 = zext i32 %22432 to i64
  %22434 = load i64, i64* %PC.i1541
  %22435 = add i64 %22434, 2
  store i64 %22435, i64* %PC.i1541
  %22436 = trunc i64 %22431 to i32
  %22437 = sub i32 %22436, %22432
  %22438 = zext i32 %22437 to i64
  store i64 %22438, i64* %RSI.i1543, align 8
  %22439 = icmp ult i32 %22436, %22432
  %22440 = zext i1 %22439 to i8
  %22441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22440, i8* %22441, align 1
  %22442 = and i32 %22437, 255
  %22443 = call i32 @llvm.ctpop.i32(i32 %22442)
  %22444 = trunc i32 %22443 to i8
  %22445 = and i8 %22444, 1
  %22446 = xor i8 %22445, 1
  %22447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22446, i8* %22447, align 1
  %22448 = xor i64 %22433, %22431
  %22449 = trunc i64 %22448 to i32
  %22450 = xor i32 %22449, %22437
  %22451 = lshr i32 %22450, 4
  %22452 = trunc i32 %22451 to i8
  %22453 = and i8 %22452, 1
  %22454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22453, i8* %22454, align 1
  %22455 = icmp eq i32 %22437, 0
  %22456 = zext i1 %22455 to i8
  %22457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22456, i8* %22457, align 1
  %22458 = lshr i32 %22437, 31
  %22459 = trunc i32 %22458 to i8
  %22460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22459, i8* %22460, align 1
  %22461 = lshr i32 %22436, 31
  %22462 = lshr i32 %22432, 31
  %22463 = xor i32 %22462, %22461
  %22464 = xor i32 %22458, %22461
  %22465 = add i32 %22464, %22463
  %22466 = icmp eq i32 %22465, 2
  %22467 = zext i1 %22466 to i8
  %22468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22467, i8* %22468, align 1
  store %struct.Memory* %loadMem_4ab960, %struct.Memory** %MEMORY
  %loadMem_4ab962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22470 = getelementptr inbounds %struct.GPR, %struct.GPR* %22469, i32 0, i32 33
  %22471 = getelementptr inbounds %struct.Reg, %struct.Reg* %22470, i32 0, i32 0
  %PC.i1538 = bitcast %union.anon* %22471 to i64*
  %22472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22473 = getelementptr inbounds %struct.GPR, %struct.GPR* %22472, i32 0, i32 9
  %22474 = getelementptr inbounds %struct.Reg, %struct.Reg* %22473, i32 0, i32 0
  %ESI.i1539 = bitcast %union.anon* %22474 to i32*
  %22475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22476 = getelementptr inbounds %struct.GPR, %struct.GPR* %22475, i32 0, i32 15
  %22477 = getelementptr inbounds %struct.Reg, %struct.Reg* %22476, i32 0, i32 0
  %RBP.i1540 = bitcast %union.anon* %22477 to i64*
  %22478 = load i64, i64* %RBP.i1540
  %22479 = sub i64 %22478, 564
  %22480 = load i32, i32* %ESI.i1539
  %22481 = zext i32 %22480 to i64
  %22482 = load i64, i64* %PC.i1538
  %22483 = add i64 %22482, 6
  store i64 %22483, i64* %PC.i1538
  %22484 = inttoptr i64 %22479 to i32*
  store i32 %22480, i32* %22484
  store %struct.Memory* %loadMem_4ab962, %struct.Memory** %MEMORY
  %loadMem_4ab968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22486 = getelementptr inbounds %struct.GPR, %struct.GPR* %22485, i32 0, i32 33
  %22487 = getelementptr inbounds %struct.Reg, %struct.Reg* %22486, i32 0, i32 0
  %PC.i1536 = bitcast %union.anon* %22487 to i64*
  %22488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22489 = getelementptr inbounds %struct.GPR, %struct.GPR* %22488, i32 0, i32 5
  %22490 = getelementptr inbounds %struct.Reg, %struct.Reg* %22489, i32 0, i32 0
  %RCX.i1537 = bitcast %union.anon* %22490 to i64*
  %22491 = load i64, i64* %PC.i1536
  %22492 = add i64 %22491, 8
  store i64 %22492, i64* %PC.i1536
  %22493 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22493, i64* %RCX.i1537, align 8
  store %struct.Memory* %loadMem_4ab968, %struct.Memory** %MEMORY
  %loadMem_4ab970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22495 = getelementptr inbounds %struct.GPR, %struct.GPR* %22494, i32 0, i32 33
  %22496 = getelementptr inbounds %struct.Reg, %struct.Reg* %22495, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %22496 to i64*
  %22497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22498 = getelementptr inbounds %struct.GPR, %struct.GPR* %22497, i32 0, i32 7
  %22499 = getelementptr inbounds %struct.Reg, %struct.Reg* %22498, i32 0, i32 0
  %RDX.i1534 = bitcast %union.anon* %22499 to i64*
  %22500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22501 = getelementptr inbounds %struct.GPR, %struct.GPR* %22500, i32 0, i32 15
  %22502 = getelementptr inbounds %struct.Reg, %struct.Reg* %22501, i32 0, i32 0
  %RBP.i1535 = bitcast %union.anon* %22502 to i64*
  %22503 = load i64, i64* %RBP.i1535
  %22504 = sub i64 %22503, 24
  %22505 = load i64, i64* %PC.i1533
  %22506 = add i64 %22505, 4
  store i64 %22506, i64* %PC.i1533
  %22507 = inttoptr i64 %22504 to i32*
  %22508 = load i32, i32* %22507
  %22509 = sext i32 %22508 to i64
  store i64 %22509, i64* %RDX.i1534, align 8
  store %struct.Memory* %loadMem_4ab970, %struct.Memory** %MEMORY
  %loadMem_4ab974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22511 = getelementptr inbounds %struct.GPR, %struct.GPR* %22510, i32 0, i32 33
  %22512 = getelementptr inbounds %struct.Reg, %struct.Reg* %22511, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %22512 to i64*
  %22513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22514 = getelementptr inbounds %struct.GPR, %struct.GPR* %22513, i32 0, i32 1
  %22515 = getelementptr inbounds %struct.Reg, %struct.Reg* %22514, i32 0, i32 0
  %EAX.i1531 = bitcast %union.anon* %22515 to i32*
  %22516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22517 = getelementptr inbounds %struct.GPR, %struct.GPR* %22516, i32 0, i32 9
  %22518 = getelementptr inbounds %struct.Reg, %struct.Reg* %22517, i32 0, i32 0
  %RSI.i1532 = bitcast %union.anon* %22518 to i64*
  %22519 = load i32, i32* %EAX.i1531
  %22520 = zext i32 %22519 to i64
  %22521 = load i64, i64* %PC.i1530
  %22522 = add i64 %22521, 2
  store i64 %22522, i64* %PC.i1530
  %22523 = and i64 %22520, 4294967295
  store i64 %22523, i64* %RSI.i1532, align 8
  store %struct.Memory* %loadMem_4ab974, %struct.Memory** %MEMORY
  %loadMem_4ab976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22525 = getelementptr inbounds %struct.GPR, %struct.GPR* %22524, i32 0, i32 33
  %22526 = getelementptr inbounds %struct.Reg, %struct.Reg* %22525, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %22526 to i64*
  %22527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22528 = getelementptr inbounds %struct.GPR, %struct.GPR* %22527, i32 0, i32 5
  %22529 = getelementptr inbounds %struct.Reg, %struct.Reg* %22528, i32 0, i32 0
  %RCX.i1527 = bitcast %union.anon* %22529 to i64*
  %22530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22531 = getelementptr inbounds %struct.GPR, %struct.GPR* %22530, i32 0, i32 7
  %22532 = getelementptr inbounds %struct.Reg, %struct.Reg* %22531, i32 0, i32 0
  %RDX.i1528 = bitcast %union.anon* %22532 to i64*
  %22533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22534 = getelementptr inbounds %struct.GPR, %struct.GPR* %22533, i32 0, i32 9
  %22535 = getelementptr inbounds %struct.Reg, %struct.Reg* %22534, i32 0, i32 0
  %RSI.i1529 = bitcast %union.anon* %22535 to i64*
  %22536 = load i64, i64* %RSI.i1529
  %22537 = load i64, i64* %RCX.i1527
  %22538 = load i64, i64* %RDX.i1528
  %22539 = mul i64 %22538, 4
  %22540 = add i64 %22537, 13176
  %22541 = add i64 %22540, %22539
  %22542 = load i64, i64* %PC.i1526
  %22543 = add i64 %22542, 7
  store i64 %22543, i64* %PC.i1526
  %22544 = trunc i64 %22536 to i32
  %22545 = inttoptr i64 %22541 to i32*
  %22546 = load i32, i32* %22545
  %22547 = sub i32 %22544, %22546
  %22548 = zext i32 %22547 to i64
  store i64 %22548, i64* %RSI.i1529, align 8
  %22549 = icmp ult i32 %22544, %22546
  %22550 = zext i1 %22549 to i8
  %22551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22550, i8* %22551, align 1
  %22552 = and i32 %22547, 255
  %22553 = call i32 @llvm.ctpop.i32(i32 %22552)
  %22554 = trunc i32 %22553 to i8
  %22555 = and i8 %22554, 1
  %22556 = xor i8 %22555, 1
  %22557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22556, i8* %22557, align 1
  %22558 = xor i32 %22546, %22544
  %22559 = xor i32 %22558, %22547
  %22560 = lshr i32 %22559, 4
  %22561 = trunc i32 %22560 to i8
  %22562 = and i8 %22561, 1
  %22563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22562, i8* %22563, align 1
  %22564 = icmp eq i32 %22547, 0
  %22565 = zext i1 %22564 to i8
  %22566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22565, i8* %22566, align 1
  %22567 = lshr i32 %22547, 31
  %22568 = trunc i32 %22567 to i8
  %22569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22568, i8* %22569, align 1
  %22570 = lshr i32 %22544, 31
  %22571 = lshr i32 %22546, 31
  %22572 = xor i32 %22571, %22570
  %22573 = xor i32 %22567, %22570
  %22574 = add i32 %22573, %22572
  %22575 = icmp eq i32 %22574, 2
  %22576 = zext i1 %22575 to i8
  %22577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22576, i8* %22577, align 1
  store %struct.Memory* %loadMem_4ab976, %struct.Memory** %MEMORY
  %loadMem_4ab97d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22579 = getelementptr inbounds %struct.GPR, %struct.GPR* %22578, i32 0, i32 33
  %22580 = getelementptr inbounds %struct.Reg, %struct.Reg* %22579, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %22580 to i64*
  %22581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22582 = getelementptr inbounds %struct.GPR, %struct.GPR* %22581, i32 0, i32 5
  %22583 = getelementptr inbounds %struct.Reg, %struct.Reg* %22582, i32 0, i32 0
  %RCX.i1525 = bitcast %union.anon* %22583 to i64*
  %22584 = load i64, i64* %PC.i1524
  %22585 = add i64 %22584, 8
  store i64 %22585, i64* %PC.i1524
  %22586 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22586, i64* %RCX.i1525, align 8
  store %struct.Memory* %loadMem_4ab97d, %struct.Memory** %MEMORY
  %loadMem_4ab985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22588 = getelementptr inbounds %struct.GPR, %struct.GPR* %22587, i32 0, i32 33
  %22589 = getelementptr inbounds %struct.Reg, %struct.Reg* %22588, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %22589 to i64*
  %22590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22591 = getelementptr inbounds %struct.GPR, %struct.GPR* %22590, i32 0, i32 7
  %22592 = getelementptr inbounds %struct.Reg, %struct.Reg* %22591, i32 0, i32 0
  %RDX.i1522 = bitcast %union.anon* %22592 to i64*
  %22593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22594 = getelementptr inbounds %struct.GPR, %struct.GPR* %22593, i32 0, i32 15
  %22595 = getelementptr inbounds %struct.Reg, %struct.Reg* %22594, i32 0, i32 0
  %RBP.i1523 = bitcast %union.anon* %22595 to i64*
  %22596 = load i64, i64* %RBP.i1523
  %22597 = sub i64 %22596, 24
  %22598 = load i64, i64* %PC.i1521
  %22599 = add i64 %22598, 4
  store i64 %22599, i64* %PC.i1521
  %22600 = inttoptr i64 %22597 to i32*
  %22601 = load i32, i32* %22600
  %22602 = sext i32 %22601 to i64
  store i64 %22602, i64* %RDX.i1522, align 8
  store %struct.Memory* %loadMem_4ab985, %struct.Memory** %MEMORY
  %loadMem_4ab989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22604 = getelementptr inbounds %struct.GPR, %struct.GPR* %22603, i32 0, i32 33
  %22605 = getelementptr inbounds %struct.Reg, %struct.Reg* %22604, i32 0, i32 0
  %PC.i1517 = bitcast %union.anon* %22605 to i64*
  %22606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22607 = getelementptr inbounds %struct.GPR, %struct.GPR* %22606, i32 0, i32 5
  %22608 = getelementptr inbounds %struct.Reg, %struct.Reg* %22607, i32 0, i32 0
  %RCX.i1518 = bitcast %union.anon* %22608 to i64*
  %22609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22610 = getelementptr inbounds %struct.GPR, %struct.GPR* %22609, i32 0, i32 7
  %22611 = getelementptr inbounds %struct.Reg, %struct.Reg* %22610, i32 0, i32 0
  %RDX.i1519 = bitcast %union.anon* %22611 to i64*
  %22612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22613 = getelementptr inbounds %struct.GPR, %struct.GPR* %22612, i32 0, i32 9
  %22614 = getelementptr inbounds %struct.Reg, %struct.Reg* %22613, i32 0, i32 0
  %RSI.i1520 = bitcast %union.anon* %22614 to i64*
  %22615 = load i64, i64* %RSI.i1520
  %22616 = load i64, i64* %RCX.i1518
  %22617 = load i64, i64* %RDX.i1519
  %22618 = mul i64 %22617, 4
  %22619 = add i64 %22616, 13560
  %22620 = add i64 %22619, %22618
  %22621 = load i64, i64* %PC.i1517
  %22622 = add i64 %22621, 7
  store i64 %22622, i64* %PC.i1517
  %22623 = trunc i64 %22615 to i32
  %22624 = inttoptr i64 %22620 to i32*
  %22625 = load i32, i32* %22624
  %22626 = add i32 %22625, %22623
  %22627 = zext i32 %22626 to i64
  store i64 %22627, i64* %RSI.i1520, align 8
  %22628 = icmp ult i32 %22626, %22623
  %22629 = icmp ult i32 %22626, %22625
  %22630 = or i1 %22628, %22629
  %22631 = zext i1 %22630 to i8
  %22632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22631, i8* %22632, align 1
  %22633 = and i32 %22626, 255
  %22634 = call i32 @llvm.ctpop.i32(i32 %22633)
  %22635 = trunc i32 %22634 to i8
  %22636 = and i8 %22635, 1
  %22637 = xor i8 %22636, 1
  %22638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22637, i8* %22638, align 1
  %22639 = xor i32 %22625, %22623
  %22640 = xor i32 %22639, %22626
  %22641 = lshr i32 %22640, 4
  %22642 = trunc i32 %22641 to i8
  %22643 = and i8 %22642, 1
  %22644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22643, i8* %22644, align 1
  %22645 = icmp eq i32 %22626, 0
  %22646 = zext i1 %22645 to i8
  %22647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22646, i8* %22647, align 1
  %22648 = lshr i32 %22626, 31
  %22649 = trunc i32 %22648 to i8
  %22650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22649, i8* %22650, align 1
  %22651 = lshr i32 %22623, 31
  %22652 = lshr i32 %22625, 31
  %22653 = xor i32 %22648, %22651
  %22654 = xor i32 %22648, %22652
  %22655 = add i32 %22653, %22654
  %22656 = icmp eq i32 %22655, 2
  %22657 = zext i1 %22656 to i8
  %22658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22657, i8* %22658, align 1
  store %struct.Memory* %loadMem_4ab989, %struct.Memory** %MEMORY
  %loadMem_4ab990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22660 = getelementptr inbounds %struct.GPR, %struct.GPR* %22659, i32 0, i32 33
  %22661 = getelementptr inbounds %struct.Reg, %struct.Reg* %22660, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %22661 to i64*
  %22662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22663 = getelementptr inbounds %struct.GPR, %struct.GPR* %22662, i32 0, i32 5
  %22664 = getelementptr inbounds %struct.Reg, %struct.Reg* %22663, i32 0, i32 0
  %RCX.i1516 = bitcast %union.anon* %22664 to i64*
  %22665 = load i64, i64* %PC.i1515
  %22666 = add i64 %22665, 8
  store i64 %22666, i64* %PC.i1515
  %22667 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22667, i64* %RCX.i1516, align 8
  store %struct.Memory* %loadMem_4ab990, %struct.Memory** %MEMORY
  %loadMem_4ab998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22669 = getelementptr inbounds %struct.GPR, %struct.GPR* %22668, i32 0, i32 33
  %22670 = getelementptr inbounds %struct.Reg, %struct.Reg* %22669, i32 0, i32 0
  %PC.i1512 = bitcast %union.anon* %22670 to i64*
  %22671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22672 = getelementptr inbounds %struct.GPR, %struct.GPR* %22671, i32 0, i32 7
  %22673 = getelementptr inbounds %struct.Reg, %struct.Reg* %22672, i32 0, i32 0
  %RDX.i1513 = bitcast %union.anon* %22673 to i64*
  %22674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22675 = getelementptr inbounds %struct.GPR, %struct.GPR* %22674, i32 0, i32 15
  %22676 = getelementptr inbounds %struct.Reg, %struct.Reg* %22675, i32 0, i32 0
  %RBP.i1514 = bitcast %union.anon* %22676 to i64*
  %22677 = load i64, i64* %RBP.i1514
  %22678 = sub i64 %22677, 24
  %22679 = load i64, i64* %PC.i1512
  %22680 = add i64 %22679, 4
  store i64 %22680, i64* %PC.i1512
  %22681 = inttoptr i64 %22678 to i32*
  %22682 = load i32, i32* %22681
  %22683 = sext i32 %22682 to i64
  store i64 %22683, i64* %RDX.i1513, align 8
  store %struct.Memory* %loadMem_4ab998, %struct.Memory** %MEMORY
  %loadMem_4ab99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22685 = getelementptr inbounds %struct.GPR, %struct.GPR* %22684, i32 0, i32 33
  %22686 = getelementptr inbounds %struct.Reg, %struct.Reg* %22685, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %22686 to i64*
  %22687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22688 = getelementptr inbounds %struct.GPR, %struct.GPR* %22687, i32 0, i32 5
  %22689 = getelementptr inbounds %struct.Reg, %struct.Reg* %22688, i32 0, i32 0
  %RCX.i1509 = bitcast %union.anon* %22689 to i64*
  %22690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22691 = getelementptr inbounds %struct.GPR, %struct.GPR* %22690, i32 0, i32 7
  %22692 = getelementptr inbounds %struct.Reg, %struct.Reg* %22691, i32 0, i32 0
  %RDX.i1510 = bitcast %union.anon* %22692 to i64*
  %22693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22694 = getelementptr inbounds %struct.GPR, %struct.GPR* %22693, i32 0, i32 9
  %22695 = getelementptr inbounds %struct.Reg, %struct.Reg* %22694, i32 0, i32 0
  %RSI.i1511 = bitcast %union.anon* %22695 to i64*
  %22696 = load i64, i64* %RSI.i1511
  %22697 = load i64, i64* %RCX.i1509
  %22698 = load i64, i64* %RDX.i1510
  %22699 = mul i64 %22698, 4
  %22700 = add i64 %22697, 13432
  %22701 = add i64 %22700, %22699
  %22702 = load i64, i64* %PC.i1508
  %22703 = add i64 %22702, 7
  store i64 %22703, i64* %PC.i1508
  %22704 = trunc i64 %22696 to i32
  %22705 = inttoptr i64 %22701 to i32*
  %22706 = load i32, i32* %22705
  %22707 = add i32 %22706, %22704
  %22708 = zext i32 %22707 to i64
  store i64 %22708, i64* %RSI.i1511, align 8
  %22709 = icmp ult i32 %22707, %22704
  %22710 = icmp ult i32 %22707, %22706
  %22711 = or i1 %22709, %22710
  %22712 = zext i1 %22711 to i8
  %22713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22712, i8* %22713, align 1
  %22714 = and i32 %22707, 255
  %22715 = call i32 @llvm.ctpop.i32(i32 %22714)
  %22716 = trunc i32 %22715 to i8
  %22717 = and i8 %22716, 1
  %22718 = xor i8 %22717, 1
  %22719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22718, i8* %22719, align 1
  %22720 = xor i32 %22706, %22704
  %22721 = xor i32 %22720, %22707
  %22722 = lshr i32 %22721, 4
  %22723 = trunc i32 %22722 to i8
  %22724 = and i8 %22723, 1
  %22725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22724, i8* %22725, align 1
  %22726 = icmp eq i32 %22707, 0
  %22727 = zext i1 %22726 to i8
  %22728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22727, i8* %22728, align 1
  %22729 = lshr i32 %22707, 31
  %22730 = trunc i32 %22729 to i8
  %22731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22730, i8* %22731, align 1
  %22732 = lshr i32 %22704, 31
  %22733 = lshr i32 %22706, 31
  %22734 = xor i32 %22729, %22732
  %22735 = xor i32 %22729, %22733
  %22736 = add i32 %22734, %22735
  %22737 = icmp eq i32 %22736, 2
  %22738 = zext i1 %22737 to i8
  %22739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22738, i8* %22739, align 1
  store %struct.Memory* %loadMem_4ab99c, %struct.Memory** %MEMORY
  %loadMem_4ab9a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22741 = getelementptr inbounds %struct.GPR, %struct.GPR* %22740, i32 0, i32 33
  %22742 = getelementptr inbounds %struct.Reg, %struct.Reg* %22741, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %22742 to i64*
  %22743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22744 = getelementptr inbounds %struct.GPR, %struct.GPR* %22743, i32 0, i32 5
  %22745 = getelementptr inbounds %struct.Reg, %struct.Reg* %22744, i32 0, i32 0
  %RCX.i1507 = bitcast %union.anon* %22745 to i64*
  %22746 = load i64, i64* %PC.i1506
  %22747 = add i64 %22746, 8
  store i64 %22747, i64* %PC.i1506
  %22748 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22748, i64* %RCX.i1507, align 8
  store %struct.Memory* %loadMem_4ab9a3, %struct.Memory** %MEMORY
  %loadMem_4ab9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %22749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22750 = getelementptr inbounds %struct.GPR, %struct.GPR* %22749, i32 0, i32 33
  %22751 = getelementptr inbounds %struct.Reg, %struct.Reg* %22750, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %22751 to i64*
  %22752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22753 = getelementptr inbounds %struct.GPR, %struct.GPR* %22752, i32 0, i32 7
  %22754 = getelementptr inbounds %struct.Reg, %struct.Reg* %22753, i32 0, i32 0
  %RDX.i1504 = bitcast %union.anon* %22754 to i64*
  %22755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22756 = getelementptr inbounds %struct.GPR, %struct.GPR* %22755, i32 0, i32 15
  %22757 = getelementptr inbounds %struct.Reg, %struct.Reg* %22756, i32 0, i32 0
  %RBP.i1505 = bitcast %union.anon* %22757 to i64*
  %22758 = load i64, i64* %RBP.i1505
  %22759 = sub i64 %22758, 24
  %22760 = load i64, i64* %PC.i1503
  %22761 = add i64 %22760, 4
  store i64 %22761, i64* %PC.i1503
  %22762 = inttoptr i64 %22759 to i32*
  %22763 = load i32, i32* %22762
  %22764 = sext i32 %22763 to i64
  store i64 %22764, i64* %RDX.i1504, align 8
  store %struct.Memory* %loadMem_4ab9ab, %struct.Memory** %MEMORY
  %loadMem_4ab9af = load %struct.Memory*, %struct.Memory** %MEMORY
  %22765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22766 = getelementptr inbounds %struct.GPR, %struct.GPR* %22765, i32 0, i32 33
  %22767 = getelementptr inbounds %struct.Reg, %struct.Reg* %22766, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %22767 to i64*
  %22768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22769 = getelementptr inbounds %struct.GPR, %struct.GPR* %22768, i32 0, i32 5
  %22770 = getelementptr inbounds %struct.Reg, %struct.Reg* %22769, i32 0, i32 0
  %RCX.i1500 = bitcast %union.anon* %22770 to i64*
  %22771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22772 = getelementptr inbounds %struct.GPR, %struct.GPR* %22771, i32 0, i32 7
  %22773 = getelementptr inbounds %struct.Reg, %struct.Reg* %22772, i32 0, i32 0
  %RDX.i1501 = bitcast %union.anon* %22773 to i64*
  %22774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22775 = getelementptr inbounds %struct.GPR, %struct.GPR* %22774, i32 0, i32 11
  %22776 = getelementptr inbounds %struct.Reg, %struct.Reg* %22775, i32 0, i32 0
  %RDI.i1502 = bitcast %union.anon* %22776 to i64*
  %22777 = load i64, i64* %RCX.i1500
  %22778 = load i64, i64* %RDX.i1501
  %22779 = mul i64 %22778, 4
  %22780 = add i64 %22777, 13432
  %22781 = add i64 %22780, %22779
  %22782 = load i64, i64* %PC.i1499
  %22783 = add i64 %22782, 7
  store i64 %22783, i64* %PC.i1499
  %22784 = inttoptr i64 %22781 to i32*
  %22785 = load i32, i32* %22784
  %22786 = zext i32 %22785 to i64
  store i64 %22786, i64* %RDI.i1502, align 8
  store %struct.Memory* %loadMem_4ab9af, %struct.Memory** %MEMORY
  %loadMem_4ab9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22788 = getelementptr inbounds %struct.GPR, %struct.GPR* %22787, i32 0, i32 33
  %22789 = getelementptr inbounds %struct.Reg, %struct.Reg* %22788, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %22789 to i64*
  %22790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22791 = getelementptr inbounds %struct.GPR, %struct.GPR* %22790, i32 0, i32 11
  %22792 = getelementptr inbounds %struct.Reg, %struct.Reg* %22791, i32 0, i32 0
  %RDI.i1498 = bitcast %union.anon* %22792 to i64*
  %22793 = load i64, i64* %RDI.i1498
  %22794 = load i64, i64* %PC.i1497
  %22795 = add i64 %22794, 2
  store i64 %22795, i64* %PC.i1497
  %22796 = shl i64 %22793, 32
  %22797 = ashr i64 %22796, 33
  %22798 = trunc i64 %22793 to i8
  %22799 = and i8 %22798, 1
  %22800 = trunc i64 %22797 to i32
  %22801 = and i64 %22797, 4294967295
  store i64 %22801, i64* %RDI.i1498, align 8
  %22802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22799, i8* %22802, align 1
  %22803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22804 = and i32 %22800, 255
  %22805 = call i32 @llvm.ctpop.i32(i32 %22804)
  %22806 = trunc i32 %22805 to i8
  %22807 = and i8 %22806, 1
  %22808 = xor i8 %22807, 1
  store i8 %22808, i8* %22803, align 1
  %22809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22809, align 1
  %22810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22811 = icmp eq i32 %22800, 0
  %22812 = zext i1 %22811 to i8
  store i8 %22812, i8* %22810, align 1
  %22813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22814 = lshr i32 %22800, 31
  %22815 = trunc i32 %22814 to i8
  store i8 %22815, i8* %22813, align 1
  %22816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22816, align 1
  store %struct.Memory* %loadMem_4ab9b6, %struct.Memory** %MEMORY
  %loadMem_4ab9b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22818 = getelementptr inbounds %struct.GPR, %struct.GPR* %22817, i32 0, i32 33
  %22819 = getelementptr inbounds %struct.Reg, %struct.Reg* %22818, i32 0, i32 0
  %PC.i1494 = bitcast %union.anon* %22819 to i64*
  %22820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22821 = getelementptr inbounds %struct.GPR, %struct.GPR* %22820, i32 0, i32 11
  %22822 = getelementptr inbounds %struct.Reg, %struct.Reg* %22821, i32 0, i32 0
  %EDI.i1495 = bitcast %union.anon* %22822 to i32*
  %22823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22824 = getelementptr inbounds %struct.GPR, %struct.GPR* %22823, i32 0, i32 9
  %22825 = getelementptr inbounds %struct.Reg, %struct.Reg* %22824, i32 0, i32 0
  %RSI.i1496 = bitcast %union.anon* %22825 to i64*
  %22826 = load i64, i64* %RSI.i1496
  %22827 = load i32, i32* %EDI.i1495
  %22828 = zext i32 %22827 to i64
  %22829 = load i64, i64* %PC.i1494
  %22830 = add i64 %22829, 2
  store i64 %22830, i64* %PC.i1494
  %22831 = trunc i64 %22826 to i32
  %22832 = add i32 %22827, %22831
  %22833 = zext i32 %22832 to i64
  store i64 %22833, i64* %RSI.i1496, align 8
  %22834 = icmp ult i32 %22832, %22831
  %22835 = icmp ult i32 %22832, %22827
  %22836 = or i1 %22834, %22835
  %22837 = zext i1 %22836 to i8
  %22838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22837, i8* %22838, align 1
  %22839 = and i32 %22832, 255
  %22840 = call i32 @llvm.ctpop.i32(i32 %22839)
  %22841 = trunc i32 %22840 to i8
  %22842 = and i8 %22841, 1
  %22843 = xor i8 %22842, 1
  %22844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22843, i8* %22844, align 1
  %22845 = xor i64 %22828, %22826
  %22846 = trunc i64 %22845 to i32
  %22847 = xor i32 %22846, %22832
  %22848 = lshr i32 %22847, 4
  %22849 = trunc i32 %22848 to i8
  %22850 = and i8 %22849, 1
  %22851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22850, i8* %22851, align 1
  %22852 = icmp eq i32 %22832, 0
  %22853 = zext i1 %22852 to i8
  %22854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22853, i8* %22854, align 1
  %22855 = lshr i32 %22832, 31
  %22856 = trunc i32 %22855 to i8
  %22857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22856, i8* %22857, align 1
  %22858 = lshr i32 %22831, 31
  %22859 = lshr i32 %22827, 31
  %22860 = xor i32 %22855, %22858
  %22861 = xor i32 %22855, %22859
  %22862 = add i32 %22860, %22861
  %22863 = icmp eq i32 %22862, 2
  %22864 = zext i1 %22863 to i8
  %22865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22864, i8* %22865, align 1
  store %struct.Memory* %loadMem_4ab9b9, %struct.Memory** %MEMORY
  %loadMem_4ab9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %22866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22867 = getelementptr inbounds %struct.GPR, %struct.GPR* %22866, i32 0, i32 33
  %22868 = getelementptr inbounds %struct.Reg, %struct.Reg* %22867, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %22868 to i64*
  %22869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22870 = getelementptr inbounds %struct.GPR, %struct.GPR* %22869, i32 0, i32 9
  %22871 = getelementptr inbounds %struct.Reg, %struct.Reg* %22870, i32 0, i32 0
  %ESI.i1492 = bitcast %union.anon* %22871 to i32*
  %22872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22873 = getelementptr inbounds %struct.GPR, %struct.GPR* %22872, i32 0, i32 15
  %22874 = getelementptr inbounds %struct.Reg, %struct.Reg* %22873, i32 0, i32 0
  %RBP.i1493 = bitcast %union.anon* %22874 to i64*
  %22875 = load i64, i64* %RBP.i1493
  %22876 = sub i64 %22875, 556
  %22877 = load i32, i32* %ESI.i1492
  %22878 = zext i32 %22877 to i64
  %22879 = load i64, i64* %PC.i1491
  %22880 = add i64 %22879, 6
  store i64 %22880, i64* %PC.i1491
  %22881 = inttoptr i64 %22876 to i32*
  store i32 %22877, i32* %22881
  store %struct.Memory* %loadMem_4ab9bb, %struct.Memory** %MEMORY
  %loadMem_4ab9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22883 = getelementptr inbounds %struct.GPR, %struct.GPR* %22882, i32 0, i32 33
  %22884 = getelementptr inbounds %struct.Reg, %struct.Reg* %22883, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %22884 to i64*
  %22885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22886 = getelementptr inbounds %struct.GPR, %struct.GPR* %22885, i32 0, i32 5
  %22887 = getelementptr inbounds %struct.Reg, %struct.Reg* %22886, i32 0, i32 0
  %RCX.i1490 = bitcast %union.anon* %22887 to i64*
  %22888 = load i64, i64* %PC.i1489
  %22889 = add i64 %22888, 8
  store i64 %22889, i64* %PC.i1489
  %22890 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22890, i64* %RCX.i1490, align 8
  store %struct.Memory* %loadMem_4ab9c1, %struct.Memory** %MEMORY
  %loadMem_4ab9c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22892 = getelementptr inbounds %struct.GPR, %struct.GPR* %22891, i32 0, i32 33
  %22893 = getelementptr inbounds %struct.Reg, %struct.Reg* %22892, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %22893 to i64*
  %22894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22895 = getelementptr inbounds %struct.GPR, %struct.GPR* %22894, i32 0, i32 7
  %22896 = getelementptr inbounds %struct.Reg, %struct.Reg* %22895, i32 0, i32 0
  %RDX.i1487 = bitcast %union.anon* %22896 to i64*
  %22897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22898 = getelementptr inbounds %struct.GPR, %struct.GPR* %22897, i32 0, i32 15
  %22899 = getelementptr inbounds %struct.Reg, %struct.Reg* %22898, i32 0, i32 0
  %RBP.i1488 = bitcast %union.anon* %22899 to i64*
  %22900 = load i64, i64* %RBP.i1488
  %22901 = sub i64 %22900, 24
  %22902 = load i64, i64* %PC.i1486
  %22903 = add i64 %22902, 4
  store i64 %22903, i64* %PC.i1486
  %22904 = inttoptr i64 %22901 to i32*
  %22905 = load i32, i32* %22904
  %22906 = sext i32 %22905 to i64
  store i64 %22906, i64* %RDX.i1487, align 8
  store %struct.Memory* %loadMem_4ab9c9, %struct.Memory** %MEMORY
  %loadMem_4ab9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %22907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22908 = getelementptr inbounds %struct.GPR, %struct.GPR* %22907, i32 0, i32 33
  %22909 = getelementptr inbounds %struct.Reg, %struct.Reg* %22908, i32 0, i32 0
  %PC.i1482 = bitcast %union.anon* %22909 to i64*
  %22910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22911 = getelementptr inbounds %struct.GPR, %struct.GPR* %22910, i32 0, i32 5
  %22912 = getelementptr inbounds %struct.Reg, %struct.Reg* %22911, i32 0, i32 0
  %RCX.i1483 = bitcast %union.anon* %22912 to i64*
  %22913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22914 = getelementptr inbounds %struct.GPR, %struct.GPR* %22913, i32 0, i32 7
  %22915 = getelementptr inbounds %struct.Reg, %struct.Reg* %22914, i32 0, i32 0
  %RDX.i1484 = bitcast %union.anon* %22915 to i64*
  %22916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22917 = getelementptr inbounds %struct.GPR, %struct.GPR* %22916, i32 0, i32 9
  %22918 = getelementptr inbounds %struct.Reg, %struct.Reg* %22917, i32 0, i32 0
  %RSI.i1485 = bitcast %union.anon* %22918 to i64*
  %22919 = load i64, i64* %RCX.i1483
  %22920 = load i64, i64* %RDX.i1484
  %22921 = mul i64 %22920, 4
  %22922 = add i64 %22919, 13304
  %22923 = add i64 %22922, %22921
  %22924 = load i64, i64* %PC.i1482
  %22925 = add i64 %22924, 7
  store i64 %22925, i64* %PC.i1482
  %22926 = inttoptr i64 %22923 to i32*
  %22927 = load i32, i32* %22926
  %22928 = zext i32 %22927 to i64
  store i64 %22928, i64* %RSI.i1485, align 8
  store %struct.Memory* %loadMem_4ab9cd, %struct.Memory** %MEMORY
  %loadMem_4ab9d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22930 = getelementptr inbounds %struct.GPR, %struct.GPR* %22929, i32 0, i32 33
  %22931 = getelementptr inbounds %struct.Reg, %struct.Reg* %22930, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %22931 to i64*
  %22932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22933 = getelementptr inbounds %struct.GPR, %struct.GPR* %22932, i32 0, i32 5
  %22934 = getelementptr inbounds %struct.Reg, %struct.Reg* %22933, i32 0, i32 0
  %RCX.i1481 = bitcast %union.anon* %22934 to i64*
  %22935 = load i64, i64* %PC.i1480
  %22936 = add i64 %22935, 8
  store i64 %22936, i64* %PC.i1480
  %22937 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22937, i64* %RCX.i1481, align 8
  store %struct.Memory* %loadMem_4ab9d4, %struct.Memory** %MEMORY
  %loadMem_4ab9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %22938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22939 = getelementptr inbounds %struct.GPR, %struct.GPR* %22938, i32 0, i32 33
  %22940 = getelementptr inbounds %struct.Reg, %struct.Reg* %22939, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %22940 to i64*
  %22941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22942 = getelementptr inbounds %struct.GPR, %struct.GPR* %22941, i32 0, i32 7
  %22943 = getelementptr inbounds %struct.Reg, %struct.Reg* %22942, i32 0, i32 0
  %RDX.i1478 = bitcast %union.anon* %22943 to i64*
  %22944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22945 = getelementptr inbounds %struct.GPR, %struct.GPR* %22944, i32 0, i32 15
  %22946 = getelementptr inbounds %struct.Reg, %struct.Reg* %22945, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %22946 to i64*
  %22947 = load i64, i64* %RBP.i1479
  %22948 = sub i64 %22947, 24
  %22949 = load i64, i64* %PC.i1477
  %22950 = add i64 %22949, 4
  store i64 %22950, i64* %PC.i1477
  %22951 = inttoptr i64 %22948 to i32*
  %22952 = load i32, i32* %22951
  %22953 = sext i32 %22952 to i64
  store i64 %22953, i64* %RDX.i1478, align 8
  store %struct.Memory* %loadMem_4ab9dc, %struct.Memory** %MEMORY
  %loadMem_4ab9e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22955 = getelementptr inbounds %struct.GPR, %struct.GPR* %22954, i32 0, i32 33
  %22956 = getelementptr inbounds %struct.Reg, %struct.Reg* %22955, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %22956 to i64*
  %22957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22958 = getelementptr inbounds %struct.GPR, %struct.GPR* %22957, i32 0, i32 5
  %22959 = getelementptr inbounds %struct.Reg, %struct.Reg* %22958, i32 0, i32 0
  %RCX.i1474 = bitcast %union.anon* %22959 to i64*
  %22960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22961 = getelementptr inbounds %struct.GPR, %struct.GPR* %22960, i32 0, i32 7
  %22962 = getelementptr inbounds %struct.Reg, %struct.Reg* %22961, i32 0, i32 0
  %RDX.i1475 = bitcast %union.anon* %22962 to i64*
  %22963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22964 = getelementptr inbounds %struct.GPR, %struct.GPR* %22963, i32 0, i32 9
  %22965 = getelementptr inbounds %struct.Reg, %struct.Reg* %22964, i32 0, i32 0
  %RSI.i1476 = bitcast %union.anon* %22965 to i64*
  %22966 = load i64, i64* %RSI.i1476
  %22967 = load i64, i64* %RCX.i1474
  %22968 = load i64, i64* %RDX.i1475
  %22969 = mul i64 %22968, 4
  %22970 = add i64 %22967, 13432
  %22971 = add i64 %22970, %22969
  %22972 = load i64, i64* %PC.i1473
  %22973 = add i64 %22972, 7
  store i64 %22973, i64* %PC.i1473
  %22974 = trunc i64 %22966 to i32
  %22975 = inttoptr i64 %22971 to i32*
  %22976 = load i32, i32* %22975
  %22977 = add i32 %22976, %22974
  %22978 = zext i32 %22977 to i64
  store i64 %22978, i64* %RSI.i1476, align 8
  %22979 = icmp ult i32 %22977, %22974
  %22980 = icmp ult i32 %22977, %22976
  %22981 = or i1 %22979, %22980
  %22982 = zext i1 %22981 to i8
  %22983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22982, i8* %22983, align 1
  %22984 = and i32 %22977, 255
  %22985 = call i32 @llvm.ctpop.i32(i32 %22984)
  %22986 = trunc i32 %22985 to i8
  %22987 = and i8 %22986, 1
  %22988 = xor i8 %22987, 1
  %22989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22988, i8* %22989, align 1
  %22990 = xor i32 %22976, %22974
  %22991 = xor i32 %22990, %22977
  %22992 = lshr i32 %22991, 4
  %22993 = trunc i32 %22992 to i8
  %22994 = and i8 %22993, 1
  %22995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22994, i8* %22995, align 1
  %22996 = icmp eq i32 %22977, 0
  %22997 = zext i1 %22996 to i8
  %22998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22997, i8* %22998, align 1
  %22999 = lshr i32 %22977, 31
  %23000 = trunc i32 %22999 to i8
  %23001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23000, i8* %23001, align 1
  %23002 = lshr i32 %22974, 31
  %23003 = lshr i32 %22976, 31
  %23004 = xor i32 %22999, %23002
  %23005 = xor i32 %22999, %23003
  %23006 = add i32 %23004, %23005
  %23007 = icmp eq i32 %23006, 2
  %23008 = zext i1 %23007 to i8
  %23009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23008, i8* %23009, align 1
  store %struct.Memory* %loadMem_4ab9e0, %struct.Memory** %MEMORY
  %loadMem_4ab9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23011 = getelementptr inbounds %struct.GPR, %struct.GPR* %23010, i32 0, i32 33
  %23012 = getelementptr inbounds %struct.Reg, %struct.Reg* %23011, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %23012 to i64*
  %23013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23014 = getelementptr inbounds %struct.GPR, %struct.GPR* %23013, i32 0, i32 5
  %23015 = getelementptr inbounds %struct.Reg, %struct.Reg* %23014, i32 0, i32 0
  %RCX.i1472 = bitcast %union.anon* %23015 to i64*
  %23016 = load i64, i64* %PC.i1471
  %23017 = add i64 %23016, 8
  store i64 %23017, i64* %PC.i1471
  %23018 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %23018, i64* %RCX.i1472, align 8
  store %struct.Memory* %loadMem_4ab9e7, %struct.Memory** %MEMORY
  %loadMem_4ab9ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %23019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23020 = getelementptr inbounds %struct.GPR, %struct.GPR* %23019, i32 0, i32 33
  %23021 = getelementptr inbounds %struct.Reg, %struct.Reg* %23020, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %23021 to i64*
  %23022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23023 = getelementptr inbounds %struct.GPR, %struct.GPR* %23022, i32 0, i32 7
  %23024 = getelementptr inbounds %struct.Reg, %struct.Reg* %23023, i32 0, i32 0
  %RDX.i1469 = bitcast %union.anon* %23024 to i64*
  %23025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23026 = getelementptr inbounds %struct.GPR, %struct.GPR* %23025, i32 0, i32 15
  %23027 = getelementptr inbounds %struct.Reg, %struct.Reg* %23026, i32 0, i32 0
  %RBP.i1470 = bitcast %union.anon* %23027 to i64*
  %23028 = load i64, i64* %RBP.i1470
  %23029 = sub i64 %23028, 24
  %23030 = load i64, i64* %PC.i1468
  %23031 = add i64 %23030, 4
  store i64 %23031, i64* %PC.i1468
  %23032 = inttoptr i64 %23029 to i32*
  %23033 = load i32, i32* %23032
  %23034 = sext i32 %23033 to i64
  store i64 %23034, i64* %RDX.i1469, align 8
  store %struct.Memory* %loadMem_4ab9ef, %struct.Memory** %MEMORY
  %loadMem_4ab9f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23036 = getelementptr inbounds %struct.GPR, %struct.GPR* %23035, i32 0, i32 33
  %23037 = getelementptr inbounds %struct.Reg, %struct.Reg* %23036, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %23037 to i64*
  %23038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23039 = getelementptr inbounds %struct.GPR, %struct.GPR* %23038, i32 0, i32 5
  %23040 = getelementptr inbounds %struct.Reg, %struct.Reg* %23039, i32 0, i32 0
  %RCX.i1465 = bitcast %union.anon* %23040 to i64*
  %23041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23042 = getelementptr inbounds %struct.GPR, %struct.GPR* %23041, i32 0, i32 7
  %23043 = getelementptr inbounds %struct.Reg, %struct.Reg* %23042, i32 0, i32 0
  %RDX.i1466 = bitcast %union.anon* %23043 to i64*
  %23044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23045 = getelementptr inbounds %struct.GPR, %struct.GPR* %23044, i32 0, i32 9
  %23046 = getelementptr inbounds %struct.Reg, %struct.Reg* %23045, i32 0, i32 0
  %RSI.i1467 = bitcast %union.anon* %23046 to i64*
  %23047 = load i64, i64* %RSI.i1467
  %23048 = load i64, i64* %RCX.i1465
  %23049 = load i64, i64* %RDX.i1466
  %23050 = mul i64 %23049, 4
  %23051 = add i64 %23048, 13176
  %23052 = add i64 %23051, %23050
  %23053 = load i64, i64* %PC.i1464
  %23054 = add i64 %23053, 7
  store i64 %23054, i64* %PC.i1464
  %23055 = trunc i64 %23047 to i32
  %23056 = inttoptr i64 %23052 to i32*
  %23057 = load i32, i32* %23056
  %23058 = add i32 %23057, %23055
  %23059 = zext i32 %23058 to i64
  store i64 %23059, i64* %RSI.i1467, align 8
  %23060 = icmp ult i32 %23058, %23055
  %23061 = icmp ult i32 %23058, %23057
  %23062 = or i1 %23060, %23061
  %23063 = zext i1 %23062 to i8
  %23064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23063, i8* %23064, align 1
  %23065 = and i32 %23058, 255
  %23066 = call i32 @llvm.ctpop.i32(i32 %23065)
  %23067 = trunc i32 %23066 to i8
  %23068 = and i8 %23067, 1
  %23069 = xor i8 %23068, 1
  %23070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23069, i8* %23070, align 1
  %23071 = xor i32 %23057, %23055
  %23072 = xor i32 %23071, %23058
  %23073 = lshr i32 %23072, 4
  %23074 = trunc i32 %23073 to i8
  %23075 = and i8 %23074, 1
  %23076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23075, i8* %23076, align 1
  %23077 = icmp eq i32 %23058, 0
  %23078 = zext i1 %23077 to i8
  %23079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23078, i8* %23079, align 1
  %23080 = lshr i32 %23058, 31
  %23081 = trunc i32 %23080 to i8
  %23082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23081, i8* %23082, align 1
  %23083 = lshr i32 %23055, 31
  %23084 = lshr i32 %23057, 31
  %23085 = xor i32 %23080, %23083
  %23086 = xor i32 %23080, %23084
  %23087 = add i32 %23085, %23086
  %23088 = icmp eq i32 %23087, 2
  %23089 = zext i1 %23088 to i8
  %23090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23089, i8* %23090, align 1
  store %struct.Memory* %loadMem_4ab9f3, %struct.Memory** %MEMORY
  %loadMem_4ab9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %23091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23092 = getelementptr inbounds %struct.GPR, %struct.GPR* %23091, i32 0, i32 33
  %23093 = getelementptr inbounds %struct.Reg, %struct.Reg* %23092, i32 0, i32 0
  %PC.i1462 = bitcast %union.anon* %23093 to i64*
  %23094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23095 = getelementptr inbounds %struct.GPR, %struct.GPR* %23094, i32 0, i32 5
  %23096 = getelementptr inbounds %struct.Reg, %struct.Reg* %23095, i32 0, i32 0
  %RCX.i1463 = bitcast %union.anon* %23096 to i64*
  %23097 = load i64, i64* %PC.i1462
  %23098 = add i64 %23097, 8
  store i64 %23098, i64* %PC.i1462
  %23099 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %23099, i64* %RCX.i1463, align 8
  store %struct.Memory* %loadMem_4ab9fa, %struct.Memory** %MEMORY
  %loadMem_4aba02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23101 = getelementptr inbounds %struct.GPR, %struct.GPR* %23100, i32 0, i32 33
  %23102 = getelementptr inbounds %struct.Reg, %struct.Reg* %23101, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %23102 to i64*
  %23103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23104 = getelementptr inbounds %struct.GPR, %struct.GPR* %23103, i32 0, i32 7
  %23105 = getelementptr inbounds %struct.Reg, %struct.Reg* %23104, i32 0, i32 0
  %RDX.i1460 = bitcast %union.anon* %23105 to i64*
  %23106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23107 = getelementptr inbounds %struct.GPR, %struct.GPR* %23106, i32 0, i32 15
  %23108 = getelementptr inbounds %struct.Reg, %struct.Reg* %23107, i32 0, i32 0
  %RBP.i1461 = bitcast %union.anon* %23108 to i64*
  %23109 = load i64, i64* %RBP.i1461
  %23110 = sub i64 %23109, 24
  %23111 = load i64, i64* %PC.i1459
  %23112 = add i64 %23111, 4
  store i64 %23112, i64* %PC.i1459
  %23113 = inttoptr i64 %23110 to i32*
  %23114 = load i32, i32* %23113
  %23115 = sext i32 %23114 to i64
  store i64 %23115, i64* %RDX.i1460, align 8
  store %struct.Memory* %loadMem_4aba02, %struct.Memory** %MEMORY
  %loadMem_4aba06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23117 = getelementptr inbounds %struct.GPR, %struct.GPR* %23116, i32 0, i32 33
  %23118 = getelementptr inbounds %struct.Reg, %struct.Reg* %23117, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %23118 to i64*
  %23119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23120 = getelementptr inbounds %struct.GPR, %struct.GPR* %23119, i32 0, i32 5
  %23121 = getelementptr inbounds %struct.Reg, %struct.Reg* %23120, i32 0, i32 0
  %RCX.i1456 = bitcast %union.anon* %23121 to i64*
  %23122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23123 = getelementptr inbounds %struct.GPR, %struct.GPR* %23122, i32 0, i32 7
  %23124 = getelementptr inbounds %struct.Reg, %struct.Reg* %23123, i32 0, i32 0
  %RDX.i1457 = bitcast %union.anon* %23124 to i64*
  %23125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23126 = getelementptr inbounds %struct.GPR, %struct.GPR* %23125, i32 0, i32 11
  %23127 = getelementptr inbounds %struct.Reg, %struct.Reg* %23126, i32 0, i32 0
  %RDI.i1458 = bitcast %union.anon* %23127 to i64*
  %23128 = load i64, i64* %RCX.i1456
  %23129 = load i64, i64* %RDX.i1457
  %23130 = mul i64 %23129, 4
  %23131 = add i64 %23128, 13176
  %23132 = add i64 %23131, %23130
  %23133 = load i64, i64* %PC.i1455
  %23134 = add i64 %23133, 7
  store i64 %23134, i64* %PC.i1455
  %23135 = inttoptr i64 %23132 to i32*
  %23136 = load i32, i32* %23135
  %23137 = zext i32 %23136 to i64
  store i64 %23137, i64* %RDI.i1458, align 8
  store %struct.Memory* %loadMem_4aba06, %struct.Memory** %MEMORY
  %loadMem_4aba0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %23138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23139 = getelementptr inbounds %struct.GPR, %struct.GPR* %23138, i32 0, i32 33
  %23140 = getelementptr inbounds %struct.Reg, %struct.Reg* %23139, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %23140 to i64*
  %23141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23142 = getelementptr inbounds %struct.GPR, %struct.GPR* %23141, i32 0, i32 11
  %23143 = getelementptr inbounds %struct.Reg, %struct.Reg* %23142, i32 0, i32 0
  %RDI.i1454 = bitcast %union.anon* %23143 to i64*
  %23144 = load i64, i64* %RDI.i1454
  %23145 = load i64, i64* %PC.i1453
  %23146 = add i64 %23145, 2
  store i64 %23146, i64* %PC.i1453
  %23147 = shl i64 %23144, 32
  %23148 = ashr i64 %23147, 33
  %23149 = trunc i64 %23144 to i8
  %23150 = and i8 %23149, 1
  %23151 = trunc i64 %23148 to i32
  %23152 = and i64 %23148, 4294967295
  store i64 %23152, i64* %RDI.i1454, align 8
  %23153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23150, i8* %23153, align 1
  %23154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23155 = and i32 %23151, 255
  %23156 = call i32 @llvm.ctpop.i32(i32 %23155)
  %23157 = trunc i32 %23156 to i8
  %23158 = and i8 %23157, 1
  %23159 = xor i8 %23158, 1
  store i8 %23159, i8* %23154, align 1
  %23160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23160, align 1
  %23161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23162 = icmp eq i32 %23151, 0
  %23163 = zext i1 %23162 to i8
  store i8 %23163, i8* %23161, align 1
  %23164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23165 = lshr i32 %23151, 31
  %23166 = trunc i32 %23165 to i8
  store i8 %23166, i8* %23164, align 1
  %23167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23167, align 1
  store %struct.Memory* %loadMem_4aba0d, %struct.Memory** %MEMORY
  %loadMem_4aba10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23169 = getelementptr inbounds %struct.GPR, %struct.GPR* %23168, i32 0, i32 33
  %23170 = getelementptr inbounds %struct.Reg, %struct.Reg* %23169, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %23170 to i64*
  %23171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23172 = getelementptr inbounds %struct.GPR, %struct.GPR* %23171, i32 0, i32 11
  %23173 = getelementptr inbounds %struct.Reg, %struct.Reg* %23172, i32 0, i32 0
  %EDI.i1451 = bitcast %union.anon* %23173 to i32*
  %23174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23175 = getelementptr inbounds %struct.GPR, %struct.GPR* %23174, i32 0, i32 9
  %23176 = getelementptr inbounds %struct.Reg, %struct.Reg* %23175, i32 0, i32 0
  %RSI.i1452 = bitcast %union.anon* %23176 to i64*
  %23177 = load i64, i64* %RSI.i1452
  %23178 = load i32, i32* %EDI.i1451
  %23179 = zext i32 %23178 to i64
  %23180 = load i64, i64* %PC.i1450
  %23181 = add i64 %23180, 2
  store i64 %23181, i64* %PC.i1450
  %23182 = trunc i64 %23177 to i32
  %23183 = add i32 %23178, %23182
  %23184 = zext i32 %23183 to i64
  store i64 %23184, i64* %RSI.i1452, align 8
  %23185 = icmp ult i32 %23183, %23182
  %23186 = icmp ult i32 %23183, %23178
  %23187 = or i1 %23185, %23186
  %23188 = zext i1 %23187 to i8
  %23189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23188, i8* %23189, align 1
  %23190 = and i32 %23183, 255
  %23191 = call i32 @llvm.ctpop.i32(i32 %23190)
  %23192 = trunc i32 %23191 to i8
  %23193 = and i8 %23192, 1
  %23194 = xor i8 %23193, 1
  %23195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23194, i8* %23195, align 1
  %23196 = xor i64 %23179, %23177
  %23197 = trunc i64 %23196 to i32
  %23198 = xor i32 %23197, %23183
  %23199 = lshr i32 %23198, 4
  %23200 = trunc i32 %23199 to i8
  %23201 = and i8 %23200, 1
  %23202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23201, i8* %23202, align 1
  %23203 = icmp eq i32 %23183, 0
  %23204 = zext i1 %23203 to i8
  %23205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23204, i8* %23205, align 1
  %23206 = lshr i32 %23183, 31
  %23207 = trunc i32 %23206 to i8
  %23208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23207, i8* %23208, align 1
  %23209 = lshr i32 %23182, 31
  %23210 = lshr i32 %23178, 31
  %23211 = xor i32 %23206, %23209
  %23212 = xor i32 %23206, %23210
  %23213 = add i32 %23211, %23212
  %23214 = icmp eq i32 %23213, 2
  %23215 = zext i1 %23214 to i8
  %23216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23215, i8* %23216, align 1
  store %struct.Memory* %loadMem_4aba10, %struct.Memory** %MEMORY
  %loadMem_4aba12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23218 = getelementptr inbounds %struct.GPR, %struct.GPR* %23217, i32 0, i32 33
  %23219 = getelementptr inbounds %struct.Reg, %struct.Reg* %23218, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %23219 to i64*
  %23220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23221 = getelementptr inbounds %struct.GPR, %struct.GPR* %23220, i32 0, i32 9
  %23222 = getelementptr inbounds %struct.Reg, %struct.Reg* %23221, i32 0, i32 0
  %ESI.i1448 = bitcast %union.anon* %23222 to i32*
  %23223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23224 = getelementptr inbounds %struct.GPR, %struct.GPR* %23223, i32 0, i32 15
  %23225 = getelementptr inbounds %struct.Reg, %struct.Reg* %23224, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %23225 to i64*
  %23226 = load i64, i64* %RBP.i1449
  %23227 = sub i64 %23226, 548
  %23228 = load i32, i32* %ESI.i1448
  %23229 = zext i32 %23228 to i64
  %23230 = load i64, i64* %PC.i1447
  %23231 = add i64 %23230, 6
  store i64 %23231, i64* %PC.i1447
  %23232 = inttoptr i64 %23227 to i32*
  store i32 %23228, i32* %23232
  store %struct.Memory* %loadMem_4aba12, %struct.Memory** %MEMORY
  %loadMem_4aba18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23234 = getelementptr inbounds %struct.GPR, %struct.GPR* %23233, i32 0, i32 33
  %23235 = getelementptr inbounds %struct.Reg, %struct.Reg* %23234, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %23235 to i64*
  %23236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23237 = getelementptr inbounds %struct.GPR, %struct.GPR* %23236, i32 0, i32 9
  %23238 = getelementptr inbounds %struct.Reg, %struct.Reg* %23237, i32 0, i32 0
  %RSI.i1445 = bitcast %union.anon* %23238 to i64*
  %23239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23240 = getelementptr inbounds %struct.GPR, %struct.GPR* %23239, i32 0, i32 15
  %23241 = getelementptr inbounds %struct.Reg, %struct.Reg* %23240, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %23241 to i64*
  %23242 = load i64, i64* %RBP.i1446
  %23243 = sub i64 %23242, 572
  %23244 = load i64, i64* %PC.i1444
  %23245 = add i64 %23244, 6
  store i64 %23245, i64* %PC.i1444
  %23246 = inttoptr i64 %23243 to i32*
  %23247 = load i32, i32* %23246
  %23248 = zext i32 %23247 to i64
  store i64 %23248, i64* %RSI.i1445, align 8
  store %struct.Memory* %loadMem_4aba18, %struct.Memory** %MEMORY
  %loadMem_4aba1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23250 = getelementptr inbounds %struct.GPR, %struct.GPR* %23249, i32 0, i32 33
  %23251 = getelementptr inbounds %struct.Reg, %struct.Reg* %23250, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %23251 to i64*
  %23252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23253 = getelementptr inbounds %struct.GPR, %struct.GPR* %23252, i32 0, i32 11
  %23254 = getelementptr inbounds %struct.Reg, %struct.Reg* %23253, i32 0, i32 0
  %RDI.i1442 = bitcast %union.anon* %23254 to i64*
  %23255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23256 = getelementptr inbounds %struct.GPR, %struct.GPR* %23255, i32 0, i32 15
  %23257 = getelementptr inbounds %struct.Reg, %struct.Reg* %23256, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %23257 to i64*
  %23258 = load i64, i64* %RBP.i1443
  %23259 = sub i64 %23258, 548
  %23260 = load i64, i64* %PC.i1441
  %23261 = add i64 %23260, 6
  store i64 %23261, i64* %PC.i1441
  %23262 = inttoptr i64 %23259 to i32*
  %23263 = load i32, i32* %23262
  %23264 = zext i32 %23263 to i64
  store i64 %23264, i64* %RDI.i1442, align 8
  store %struct.Memory* %loadMem_4aba1e, %struct.Memory** %MEMORY
  %loadMem_4aba24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23266 = getelementptr inbounds %struct.GPR, %struct.GPR* %23265, i32 0, i32 33
  %23267 = getelementptr inbounds %struct.Reg, %struct.Reg* %23266, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %23267 to i64*
  %23268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23269 = getelementptr inbounds %struct.GPR, %struct.GPR* %23268, i32 0, i32 11
  %23270 = getelementptr inbounds %struct.Reg, %struct.Reg* %23269, i32 0, i32 0
  %RDI.i1440 = bitcast %union.anon* %23270 to i64*
  %23271 = load i64, i64* %RDI.i1440
  %23272 = load i64, i64* %PC.i1439
  %23273 = add i64 %23272, 3
  store i64 %23273, i64* %PC.i1439
  %23274 = shl i64 %23271, 32
  %23275 = ashr exact i64 %23274, 32
  %23276 = ashr i64 %23275, 1
  %23277 = lshr i64 %23276, 1
  %23278 = trunc i64 %23276 to i8
  %23279 = and i8 %23278, 1
  %23280 = trunc i64 %23277 to i32
  %23281 = and i64 %23277, 4294967295
  store i64 %23281, i64* %RDI.i1440, align 8
  %23282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23279, i8* %23282, align 1
  %23283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23284 = and i32 %23280, 255
  %23285 = call i32 @llvm.ctpop.i32(i32 %23284)
  %23286 = trunc i32 %23285 to i8
  %23287 = and i8 %23286, 1
  %23288 = xor i8 %23287, 1
  store i8 %23288, i8* %23283, align 1
  %23289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23289, align 1
  %23290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23291 = icmp eq i32 %23280, 0
  %23292 = zext i1 %23291 to i8
  store i8 %23292, i8* %23290, align 1
  %23293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23294 = lshr i32 %23280, 31
  %23295 = trunc i32 %23294 to i8
  store i8 %23295, i8* %23293, align 1
  %23296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23296, align 1
  store %struct.Memory* %loadMem_4aba24, %struct.Memory** %MEMORY
  %loadMem_4aba27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23298 = getelementptr inbounds %struct.GPR, %struct.GPR* %23297, i32 0, i32 33
  %23299 = getelementptr inbounds %struct.Reg, %struct.Reg* %23298, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %23299 to i64*
  %23300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23301 = getelementptr inbounds %struct.GPR, %struct.GPR* %23300, i32 0, i32 11
  %23302 = getelementptr inbounds %struct.Reg, %struct.Reg* %23301, i32 0, i32 0
  %EDI.i1437 = bitcast %union.anon* %23302 to i32*
  %23303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23304 = getelementptr inbounds %struct.GPR, %struct.GPR* %23303, i32 0, i32 9
  %23305 = getelementptr inbounds %struct.Reg, %struct.Reg* %23304, i32 0, i32 0
  %RSI.i1438 = bitcast %union.anon* %23305 to i64*
  %23306 = load i64, i64* %RSI.i1438
  %23307 = load i32, i32* %EDI.i1437
  %23308 = zext i32 %23307 to i64
  %23309 = load i64, i64* %PC.i1436
  %23310 = add i64 %23309, 2
  store i64 %23310, i64* %PC.i1436
  %23311 = trunc i64 %23306 to i32
  %23312 = add i32 %23307, %23311
  %23313 = zext i32 %23312 to i64
  store i64 %23313, i64* %RSI.i1438, align 8
  %23314 = icmp ult i32 %23312, %23311
  %23315 = icmp ult i32 %23312, %23307
  %23316 = or i1 %23314, %23315
  %23317 = zext i1 %23316 to i8
  %23318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23317, i8* %23318, align 1
  %23319 = and i32 %23312, 255
  %23320 = call i32 @llvm.ctpop.i32(i32 %23319)
  %23321 = trunc i32 %23320 to i8
  %23322 = and i8 %23321, 1
  %23323 = xor i8 %23322, 1
  %23324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23323, i8* %23324, align 1
  %23325 = xor i64 %23308, %23306
  %23326 = trunc i64 %23325 to i32
  %23327 = xor i32 %23326, %23312
  %23328 = lshr i32 %23327, 4
  %23329 = trunc i32 %23328 to i8
  %23330 = and i8 %23329, 1
  %23331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23330, i8* %23331, align 1
  %23332 = icmp eq i32 %23312, 0
  %23333 = zext i1 %23332 to i8
  %23334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23333, i8* %23334, align 1
  %23335 = lshr i32 %23312, 31
  %23336 = trunc i32 %23335 to i8
  %23337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23336, i8* %23337, align 1
  %23338 = lshr i32 %23311, 31
  %23339 = lshr i32 %23307, 31
  %23340 = xor i32 %23335, %23338
  %23341 = xor i32 %23335, %23339
  %23342 = add i32 %23340, %23341
  %23343 = icmp eq i32 %23342, 2
  %23344 = zext i1 %23343 to i8
  %23345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23344, i8* %23345, align 1
  store %struct.Memory* %loadMem_4aba27, %struct.Memory** %MEMORY
  %loadMem_4aba29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23347 = getelementptr inbounds %struct.GPR, %struct.GPR* %23346, i32 0, i32 33
  %23348 = getelementptr inbounds %struct.Reg, %struct.Reg* %23347, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %23348 to i64*
  %23349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23350 = getelementptr inbounds %struct.GPR, %struct.GPR* %23349, i32 0, i32 9
  %23351 = getelementptr inbounds %struct.Reg, %struct.Reg* %23350, i32 0, i32 0
  %ESI.i1434 = bitcast %union.anon* %23351 to i32*
  %23352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23353 = getelementptr inbounds %struct.GPR, %struct.GPR* %23352, i32 0, i32 15
  %23354 = getelementptr inbounds %struct.Reg, %struct.Reg* %23353, i32 0, i32 0
  %RBP.i1435 = bitcast %union.anon* %23354 to i64*
  %23355 = load i64, i64* %RBP.i1435
  %23356 = sub i64 %23355, 604
  %23357 = load i32, i32* %ESI.i1434
  %23358 = zext i32 %23357 to i64
  %23359 = load i64, i64* %PC.i1433
  %23360 = add i64 %23359, 6
  store i64 %23360, i64* %PC.i1433
  %23361 = inttoptr i64 %23356 to i32*
  store i32 %23357, i32* %23361
  store %struct.Memory* %loadMem_4aba29, %struct.Memory** %MEMORY
  %loadMem_4aba2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %23362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23363 = getelementptr inbounds %struct.GPR, %struct.GPR* %23362, i32 0, i32 33
  %23364 = getelementptr inbounds %struct.Reg, %struct.Reg* %23363, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %23364 to i64*
  %23365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23366 = getelementptr inbounds %struct.GPR, %struct.GPR* %23365, i32 0, i32 9
  %23367 = getelementptr inbounds %struct.Reg, %struct.Reg* %23366, i32 0, i32 0
  %RSI.i1431 = bitcast %union.anon* %23367 to i64*
  %23368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23369 = getelementptr inbounds %struct.GPR, %struct.GPR* %23368, i32 0, i32 15
  %23370 = getelementptr inbounds %struct.Reg, %struct.Reg* %23369, i32 0, i32 0
  %RBP.i1432 = bitcast %union.anon* %23370 to i64*
  %23371 = load i64, i64* %RBP.i1432
  %23372 = sub i64 %23371, 572
  %23373 = load i64, i64* %PC.i1430
  %23374 = add i64 %23373, 6
  store i64 %23374, i64* %PC.i1430
  %23375 = inttoptr i64 %23372 to i32*
  %23376 = load i32, i32* %23375
  %23377 = zext i32 %23376 to i64
  store i64 %23377, i64* %RSI.i1431, align 8
  store %struct.Memory* %loadMem_4aba2f, %struct.Memory** %MEMORY
  %loadMem_4aba35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23379 = getelementptr inbounds %struct.GPR, %struct.GPR* %23378, i32 0, i32 33
  %23380 = getelementptr inbounds %struct.Reg, %struct.Reg* %23379, i32 0, i32 0
  %PC.i1428 = bitcast %union.anon* %23380 to i64*
  %23381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23382 = getelementptr inbounds %struct.GPR, %struct.GPR* %23381, i32 0, i32 9
  %23383 = getelementptr inbounds %struct.Reg, %struct.Reg* %23382, i32 0, i32 0
  %RSI.i1429 = bitcast %union.anon* %23383 to i64*
  %23384 = load i64, i64* %RSI.i1429
  %23385 = load i64, i64* %PC.i1428
  %23386 = add i64 %23385, 3
  store i64 %23386, i64* %PC.i1428
  %23387 = shl i64 %23384, 32
  %23388 = ashr exact i64 %23387, 32
  %23389 = ashr i64 %23388, 1
  %23390 = lshr i64 %23389, 1
  %23391 = trunc i64 %23389 to i8
  %23392 = and i8 %23391, 1
  %23393 = trunc i64 %23390 to i32
  %23394 = and i64 %23390, 4294967295
  store i64 %23394, i64* %RSI.i1429, align 8
  %23395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23392, i8* %23395, align 1
  %23396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23397 = and i32 %23393, 255
  %23398 = call i32 @llvm.ctpop.i32(i32 %23397)
  %23399 = trunc i32 %23398 to i8
  %23400 = and i8 %23399, 1
  %23401 = xor i8 %23400, 1
  store i8 %23401, i8* %23396, align 1
  %23402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23402, align 1
  %23403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23404 = icmp eq i32 %23393, 0
  %23405 = zext i1 %23404 to i8
  store i8 %23405, i8* %23403, align 1
  %23406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23407 = lshr i32 %23393, 31
  %23408 = trunc i32 %23407 to i8
  store i8 %23408, i8* %23406, align 1
  %23409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23409, align 1
  store %struct.Memory* %loadMem_4aba35, %struct.Memory** %MEMORY
  %loadMem_4aba38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23411 = getelementptr inbounds %struct.GPR, %struct.GPR* %23410, i32 0, i32 33
  %23412 = getelementptr inbounds %struct.Reg, %struct.Reg* %23411, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %23412 to i64*
  %23413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23414 = getelementptr inbounds %struct.GPR, %struct.GPR* %23413, i32 0, i32 9
  %23415 = getelementptr inbounds %struct.Reg, %struct.Reg* %23414, i32 0, i32 0
  %ESI.i1426 = bitcast %union.anon* %23415 to i32*
  %23416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23417 = getelementptr inbounds %struct.GPR, %struct.GPR* %23416, i32 0, i32 1
  %23418 = getelementptr inbounds %struct.Reg, %struct.Reg* %23417, i32 0, i32 0
  %RAX.i1427 = bitcast %union.anon* %23418 to i64*
  %23419 = load i64, i64* %RAX.i1427
  %23420 = load i32, i32* %ESI.i1426
  %23421 = zext i32 %23420 to i64
  %23422 = load i64, i64* %PC.i1425
  %23423 = add i64 %23422, 2
  store i64 %23423, i64* %PC.i1425
  %23424 = trunc i64 %23419 to i32
  %23425 = sub i32 %23424, %23420
  %23426 = zext i32 %23425 to i64
  store i64 %23426, i64* %RAX.i1427, align 8
  %23427 = icmp ult i32 %23424, %23420
  %23428 = zext i1 %23427 to i8
  %23429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23428, i8* %23429, align 1
  %23430 = and i32 %23425, 255
  %23431 = call i32 @llvm.ctpop.i32(i32 %23430)
  %23432 = trunc i32 %23431 to i8
  %23433 = and i8 %23432, 1
  %23434 = xor i8 %23433, 1
  %23435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23434, i8* %23435, align 1
  %23436 = xor i64 %23421, %23419
  %23437 = trunc i64 %23436 to i32
  %23438 = xor i32 %23437, %23425
  %23439 = lshr i32 %23438, 4
  %23440 = trunc i32 %23439 to i8
  %23441 = and i8 %23440, 1
  %23442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23441, i8* %23442, align 1
  %23443 = icmp eq i32 %23425, 0
  %23444 = zext i1 %23443 to i8
  %23445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23444, i8* %23445, align 1
  %23446 = lshr i32 %23425, 31
  %23447 = trunc i32 %23446 to i8
  %23448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23447, i8* %23448, align 1
  %23449 = lshr i32 %23424, 31
  %23450 = lshr i32 %23420, 31
  %23451 = xor i32 %23450, %23449
  %23452 = xor i32 %23446, %23449
  %23453 = add i32 %23452, %23451
  %23454 = icmp eq i32 %23453, 2
  %23455 = zext i1 %23454 to i8
  %23456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23455, i8* %23456, align 1
  store %struct.Memory* %loadMem_4aba38, %struct.Memory** %MEMORY
  %loadMem_4aba3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %23457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23458 = getelementptr inbounds %struct.GPR, %struct.GPR* %23457, i32 0, i32 33
  %23459 = getelementptr inbounds %struct.Reg, %struct.Reg* %23458, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %23459 to i64*
  %23460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23461 = getelementptr inbounds %struct.GPR, %struct.GPR* %23460, i32 0, i32 1
  %23462 = getelementptr inbounds %struct.Reg, %struct.Reg* %23461, i32 0, i32 0
  %RAX.i1423 = bitcast %union.anon* %23462 to i64*
  %23463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23464 = getelementptr inbounds %struct.GPR, %struct.GPR* %23463, i32 0, i32 15
  %23465 = getelementptr inbounds %struct.Reg, %struct.Reg* %23464, i32 0, i32 0
  %RBP.i1424 = bitcast %union.anon* %23465 to i64*
  %23466 = load i64, i64* %RAX.i1423
  %23467 = load i64, i64* %RBP.i1424
  %23468 = sub i64 %23467, 548
  %23469 = load i64, i64* %PC.i1422
  %23470 = add i64 %23469, 6
  store i64 %23470, i64* %PC.i1422
  %23471 = trunc i64 %23466 to i32
  %23472 = inttoptr i64 %23468 to i32*
  %23473 = load i32, i32* %23472
  %23474 = add i32 %23473, %23471
  %23475 = zext i32 %23474 to i64
  store i64 %23475, i64* %RAX.i1423, align 8
  %23476 = icmp ult i32 %23474, %23471
  %23477 = icmp ult i32 %23474, %23473
  %23478 = or i1 %23476, %23477
  %23479 = zext i1 %23478 to i8
  %23480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23479, i8* %23480, align 1
  %23481 = and i32 %23474, 255
  %23482 = call i32 @llvm.ctpop.i32(i32 %23481)
  %23483 = trunc i32 %23482 to i8
  %23484 = and i8 %23483, 1
  %23485 = xor i8 %23484, 1
  %23486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23485, i8* %23486, align 1
  %23487 = xor i32 %23473, %23471
  %23488 = xor i32 %23487, %23474
  %23489 = lshr i32 %23488, 4
  %23490 = trunc i32 %23489 to i8
  %23491 = and i8 %23490, 1
  %23492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23491, i8* %23492, align 1
  %23493 = icmp eq i32 %23474, 0
  %23494 = zext i1 %23493 to i8
  %23495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23494, i8* %23495, align 1
  %23496 = lshr i32 %23474, 31
  %23497 = trunc i32 %23496 to i8
  %23498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23497, i8* %23498, align 1
  %23499 = lshr i32 %23471, 31
  %23500 = lshr i32 %23473, 31
  %23501 = xor i32 %23496, %23499
  %23502 = xor i32 %23496, %23500
  %23503 = add i32 %23501, %23502
  %23504 = icmp eq i32 %23503, 2
  %23505 = zext i1 %23504 to i8
  %23506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23505, i8* %23506, align 1
  store %struct.Memory* %loadMem_4aba3a, %struct.Memory** %MEMORY
  %loadMem_4aba40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23508 = getelementptr inbounds %struct.GPR, %struct.GPR* %23507, i32 0, i32 33
  %23509 = getelementptr inbounds %struct.Reg, %struct.Reg* %23508, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %23509 to i64*
  %23510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23511 = getelementptr inbounds %struct.GPR, %struct.GPR* %23510, i32 0, i32 1
  %23512 = getelementptr inbounds %struct.Reg, %struct.Reg* %23511, i32 0, i32 0
  %EAX.i1420 = bitcast %union.anon* %23512 to i32*
  %23513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23514 = getelementptr inbounds %struct.GPR, %struct.GPR* %23513, i32 0, i32 15
  %23515 = getelementptr inbounds %struct.Reg, %struct.Reg* %23514, i32 0, i32 0
  %RBP.i1421 = bitcast %union.anon* %23515 to i64*
  %23516 = load i64, i64* %RBP.i1421
  %23517 = sub i64 %23516, 580
  %23518 = load i32, i32* %EAX.i1420
  %23519 = zext i32 %23518 to i64
  %23520 = load i64, i64* %PC.i1419
  %23521 = add i64 %23520, 6
  store i64 %23521, i64* %PC.i1419
  %23522 = inttoptr i64 %23517 to i32*
  store i32 %23518, i32* %23522
  store %struct.Memory* %loadMem_4aba40, %struct.Memory** %MEMORY
  %loadMem_4aba46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23524 = getelementptr inbounds %struct.GPR, %struct.GPR* %23523, i32 0, i32 33
  %23525 = getelementptr inbounds %struct.Reg, %struct.Reg* %23524, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %23525 to i64*
  %23526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23527 = getelementptr inbounds %struct.GPR, %struct.GPR* %23526, i32 0, i32 1
  %23528 = getelementptr inbounds %struct.Reg, %struct.Reg* %23527, i32 0, i32 0
  %RAX.i1417 = bitcast %union.anon* %23528 to i64*
  %23529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23530 = getelementptr inbounds %struct.GPR, %struct.GPR* %23529, i32 0, i32 15
  %23531 = getelementptr inbounds %struct.Reg, %struct.Reg* %23530, i32 0, i32 0
  %RBP.i1418 = bitcast %union.anon* %23531 to i64*
  %23532 = load i64, i64* %RBP.i1418
  %23533 = sub i64 %23532, 564
  %23534 = load i64, i64* %PC.i1416
  %23535 = add i64 %23534, 6
  store i64 %23535, i64* %PC.i1416
  %23536 = inttoptr i64 %23533 to i32*
  %23537 = load i32, i32* %23536
  %23538 = zext i32 %23537 to i64
  store i64 %23538, i64* %RAX.i1417, align 8
  store %struct.Memory* %loadMem_4aba46, %struct.Memory** %MEMORY
  %loadMem_4aba4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %23539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23540 = getelementptr inbounds %struct.GPR, %struct.GPR* %23539, i32 0, i32 33
  %23541 = getelementptr inbounds %struct.Reg, %struct.Reg* %23540, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %23541 to i64*
  %23542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23543 = getelementptr inbounds %struct.GPR, %struct.GPR* %23542, i32 0, i32 9
  %23544 = getelementptr inbounds %struct.Reg, %struct.Reg* %23543, i32 0, i32 0
  %RSI.i1414 = bitcast %union.anon* %23544 to i64*
  %23545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23546 = getelementptr inbounds %struct.GPR, %struct.GPR* %23545, i32 0, i32 15
  %23547 = getelementptr inbounds %struct.Reg, %struct.Reg* %23546, i32 0, i32 0
  %RBP.i1415 = bitcast %union.anon* %23547 to i64*
  %23548 = load i64, i64* %RBP.i1415
  %23549 = sub i64 %23548, 556
  %23550 = load i64, i64* %PC.i1413
  %23551 = add i64 %23550, 6
  store i64 %23551, i64* %PC.i1413
  %23552 = inttoptr i64 %23549 to i32*
  %23553 = load i32, i32* %23552
  %23554 = zext i32 %23553 to i64
  store i64 %23554, i64* %RSI.i1414, align 8
  store %struct.Memory* %loadMem_4aba4c, %struct.Memory** %MEMORY
  %loadMem_4aba52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23556 = getelementptr inbounds %struct.GPR, %struct.GPR* %23555, i32 0, i32 33
  %23557 = getelementptr inbounds %struct.Reg, %struct.Reg* %23556, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %23557 to i64*
  %23558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23559 = getelementptr inbounds %struct.GPR, %struct.GPR* %23558, i32 0, i32 9
  %23560 = getelementptr inbounds %struct.Reg, %struct.Reg* %23559, i32 0, i32 0
  %RSI.i1412 = bitcast %union.anon* %23560 to i64*
  %23561 = load i64, i64* %RSI.i1412
  %23562 = load i64, i64* %PC.i1411
  %23563 = add i64 %23562, 3
  store i64 %23563, i64* %PC.i1411
  %23564 = shl i64 %23561, 32
  %23565 = ashr exact i64 %23564, 32
  %23566 = ashr i64 %23565, 1
  %23567 = lshr i64 %23566, 1
  %23568 = trunc i64 %23566 to i8
  %23569 = and i8 %23568, 1
  %23570 = trunc i64 %23567 to i32
  %23571 = and i64 %23567, 4294967295
  store i64 %23571, i64* %RSI.i1412, align 8
  %23572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23569, i8* %23572, align 1
  %23573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23574 = and i32 %23570, 255
  %23575 = call i32 @llvm.ctpop.i32(i32 %23574)
  %23576 = trunc i32 %23575 to i8
  %23577 = and i8 %23576, 1
  %23578 = xor i8 %23577, 1
  store i8 %23578, i8* %23573, align 1
  %23579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23579, align 1
  %23580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23581 = icmp eq i32 %23570, 0
  %23582 = zext i1 %23581 to i8
  store i8 %23582, i8* %23580, align 1
  %23583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23584 = lshr i32 %23570, 31
  %23585 = trunc i32 %23584 to i8
  store i8 %23585, i8* %23583, align 1
  %23586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23586, align 1
  store %struct.Memory* %loadMem_4aba52, %struct.Memory** %MEMORY
  %loadMem_4aba55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23588 = getelementptr inbounds %struct.GPR, %struct.GPR* %23587, i32 0, i32 33
  %23589 = getelementptr inbounds %struct.Reg, %struct.Reg* %23588, i32 0, i32 0
  %PC.i1408 = bitcast %union.anon* %23589 to i64*
  %23590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23591 = getelementptr inbounds %struct.GPR, %struct.GPR* %23590, i32 0, i32 9
  %23592 = getelementptr inbounds %struct.Reg, %struct.Reg* %23591, i32 0, i32 0
  %ESI.i1409 = bitcast %union.anon* %23592 to i32*
  %23593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23594 = getelementptr inbounds %struct.GPR, %struct.GPR* %23593, i32 0, i32 1
  %23595 = getelementptr inbounds %struct.Reg, %struct.Reg* %23594, i32 0, i32 0
  %RAX.i1410 = bitcast %union.anon* %23595 to i64*
  %23596 = load i64, i64* %RAX.i1410
  %23597 = load i32, i32* %ESI.i1409
  %23598 = zext i32 %23597 to i64
  %23599 = load i64, i64* %PC.i1408
  %23600 = add i64 %23599, 2
  store i64 %23600, i64* %PC.i1408
  %23601 = trunc i64 %23596 to i32
  %23602 = add i32 %23597, %23601
  %23603 = zext i32 %23602 to i64
  store i64 %23603, i64* %RAX.i1410, align 8
  %23604 = icmp ult i32 %23602, %23601
  %23605 = icmp ult i32 %23602, %23597
  %23606 = or i1 %23604, %23605
  %23607 = zext i1 %23606 to i8
  %23608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23607, i8* %23608, align 1
  %23609 = and i32 %23602, 255
  %23610 = call i32 @llvm.ctpop.i32(i32 %23609)
  %23611 = trunc i32 %23610 to i8
  %23612 = and i8 %23611, 1
  %23613 = xor i8 %23612, 1
  %23614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23613, i8* %23614, align 1
  %23615 = xor i64 %23598, %23596
  %23616 = trunc i64 %23615 to i32
  %23617 = xor i32 %23616, %23602
  %23618 = lshr i32 %23617, 4
  %23619 = trunc i32 %23618 to i8
  %23620 = and i8 %23619, 1
  %23621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23620, i8* %23621, align 1
  %23622 = icmp eq i32 %23602, 0
  %23623 = zext i1 %23622 to i8
  %23624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23623, i8* %23624, align 1
  %23625 = lshr i32 %23602, 31
  %23626 = trunc i32 %23625 to i8
  %23627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23626, i8* %23627, align 1
  %23628 = lshr i32 %23601, 31
  %23629 = lshr i32 %23597, 31
  %23630 = xor i32 %23625, %23628
  %23631 = xor i32 %23625, %23629
  %23632 = add i32 %23630, %23631
  %23633 = icmp eq i32 %23632, 2
  %23634 = zext i1 %23633 to i8
  %23635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23634, i8* %23635, align 1
  store %struct.Memory* %loadMem_4aba55, %struct.Memory** %MEMORY
  %loadMem_4aba57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23637 = getelementptr inbounds %struct.GPR, %struct.GPR* %23636, i32 0, i32 33
  %23638 = getelementptr inbounds %struct.Reg, %struct.Reg* %23637, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %23638 to i64*
  %23639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23640 = getelementptr inbounds %struct.GPR, %struct.GPR* %23639, i32 0, i32 1
  %23641 = getelementptr inbounds %struct.Reg, %struct.Reg* %23640, i32 0, i32 0
  %EAX.i1406 = bitcast %union.anon* %23641 to i32*
  %23642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23643 = getelementptr inbounds %struct.GPR, %struct.GPR* %23642, i32 0, i32 15
  %23644 = getelementptr inbounds %struct.Reg, %struct.Reg* %23643, i32 0, i32 0
  %RBP.i1407 = bitcast %union.anon* %23644 to i64*
  %23645 = load i64, i64* %RBP.i1407
  %23646 = sub i64 %23645, 596
  %23647 = load i32, i32* %EAX.i1406
  %23648 = zext i32 %23647 to i64
  %23649 = load i64, i64* %PC.i1405
  %23650 = add i64 %23649, 6
  store i64 %23650, i64* %PC.i1405
  %23651 = inttoptr i64 %23646 to i32*
  store i32 %23647, i32* %23651
  store %struct.Memory* %loadMem_4aba57, %struct.Memory** %MEMORY
  %loadMem_4aba5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %23652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23653 = getelementptr inbounds %struct.GPR, %struct.GPR* %23652, i32 0, i32 33
  %23654 = getelementptr inbounds %struct.Reg, %struct.Reg* %23653, i32 0, i32 0
  %PC.i1402 = bitcast %union.anon* %23654 to i64*
  %23655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23656 = getelementptr inbounds %struct.GPR, %struct.GPR* %23655, i32 0, i32 1
  %23657 = getelementptr inbounds %struct.Reg, %struct.Reg* %23656, i32 0, i32 0
  %RAX.i1403 = bitcast %union.anon* %23657 to i64*
  %23658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23659 = getelementptr inbounds %struct.GPR, %struct.GPR* %23658, i32 0, i32 15
  %23660 = getelementptr inbounds %struct.Reg, %struct.Reg* %23659, i32 0, i32 0
  %RBP.i1404 = bitcast %union.anon* %23660 to i64*
  %23661 = load i64, i64* %RBP.i1404
  %23662 = sub i64 %23661, 564
  %23663 = load i64, i64* %PC.i1402
  %23664 = add i64 %23663, 6
  store i64 %23664, i64* %PC.i1402
  %23665 = inttoptr i64 %23662 to i32*
  %23666 = load i32, i32* %23665
  %23667 = zext i32 %23666 to i64
  store i64 %23667, i64* %RAX.i1403, align 8
  store %struct.Memory* %loadMem_4aba5d, %struct.Memory** %MEMORY
  %loadMem_4aba63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23669 = getelementptr inbounds %struct.GPR, %struct.GPR* %23668, i32 0, i32 33
  %23670 = getelementptr inbounds %struct.Reg, %struct.Reg* %23669, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %23670 to i64*
  %23671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23672 = getelementptr inbounds %struct.GPR, %struct.GPR* %23671, i32 0, i32 1
  %23673 = getelementptr inbounds %struct.Reg, %struct.Reg* %23672, i32 0, i32 0
  %RAX.i1401 = bitcast %union.anon* %23673 to i64*
  %23674 = load i64, i64* %RAX.i1401
  %23675 = load i64, i64* %PC.i1400
  %23676 = add i64 %23675, 3
  store i64 %23676, i64* %PC.i1400
  %23677 = shl i64 %23674, 32
  %23678 = ashr exact i64 %23677, 32
  %23679 = ashr i64 %23678, 1
  %23680 = lshr i64 %23679, 1
  %23681 = trunc i64 %23679 to i8
  %23682 = and i8 %23681, 1
  %23683 = trunc i64 %23680 to i32
  %23684 = and i64 %23680, 4294967295
  store i64 %23684, i64* %RAX.i1401, align 8
  %23685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23682, i8* %23685, align 1
  %23686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23687 = and i32 %23683, 255
  %23688 = call i32 @llvm.ctpop.i32(i32 %23687)
  %23689 = trunc i32 %23688 to i8
  %23690 = and i8 %23689, 1
  %23691 = xor i8 %23690, 1
  store i8 %23691, i8* %23686, align 1
  %23692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23692, align 1
  %23693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23694 = icmp eq i32 %23683, 0
  %23695 = zext i1 %23694 to i8
  store i8 %23695, i8* %23693, align 1
  %23696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23697 = lshr i32 %23683, 31
  %23698 = trunc i32 %23697 to i8
  store i8 %23698, i8* %23696, align 1
  %23699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23699, align 1
  store %struct.Memory* %loadMem_4aba63, %struct.Memory** %MEMORY
  %loadMem_4aba66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23701 = getelementptr inbounds %struct.GPR, %struct.GPR* %23700, i32 0, i32 33
  %23702 = getelementptr inbounds %struct.Reg, %struct.Reg* %23701, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %23702 to i64*
  %23703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23704 = getelementptr inbounds %struct.GPR, %struct.GPR* %23703, i32 0, i32 1
  %23705 = getelementptr inbounds %struct.Reg, %struct.Reg* %23704, i32 0, i32 0
  %RAX.i1398 = bitcast %union.anon* %23705 to i64*
  %23706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23707 = getelementptr inbounds %struct.GPR, %struct.GPR* %23706, i32 0, i32 15
  %23708 = getelementptr inbounds %struct.Reg, %struct.Reg* %23707, i32 0, i32 0
  %RBP.i1399 = bitcast %union.anon* %23708 to i64*
  %23709 = load i64, i64* %RAX.i1398
  %23710 = load i64, i64* %RBP.i1399
  %23711 = sub i64 %23710, 556
  %23712 = load i64, i64* %PC.i1397
  %23713 = add i64 %23712, 6
  store i64 %23713, i64* %PC.i1397
  %23714 = trunc i64 %23709 to i32
  %23715 = inttoptr i64 %23711 to i32*
  %23716 = load i32, i32* %23715
  %23717 = sub i32 %23714, %23716
  %23718 = zext i32 %23717 to i64
  store i64 %23718, i64* %RAX.i1398, align 8
  %23719 = icmp ult i32 %23714, %23716
  %23720 = zext i1 %23719 to i8
  %23721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23720, i8* %23721, align 1
  %23722 = and i32 %23717, 255
  %23723 = call i32 @llvm.ctpop.i32(i32 %23722)
  %23724 = trunc i32 %23723 to i8
  %23725 = and i8 %23724, 1
  %23726 = xor i8 %23725, 1
  %23727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23726, i8* %23727, align 1
  %23728 = xor i32 %23716, %23714
  %23729 = xor i32 %23728, %23717
  %23730 = lshr i32 %23729, 4
  %23731 = trunc i32 %23730 to i8
  %23732 = and i8 %23731, 1
  %23733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23732, i8* %23733, align 1
  %23734 = icmp eq i32 %23717, 0
  %23735 = zext i1 %23734 to i8
  %23736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23735, i8* %23736, align 1
  %23737 = lshr i32 %23717, 31
  %23738 = trunc i32 %23737 to i8
  %23739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23738, i8* %23739, align 1
  %23740 = lshr i32 %23714, 31
  %23741 = lshr i32 %23716, 31
  %23742 = xor i32 %23741, %23740
  %23743 = xor i32 %23737, %23740
  %23744 = add i32 %23743, %23742
  %23745 = icmp eq i32 %23744, 2
  %23746 = zext i1 %23745 to i8
  %23747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23746, i8* %23747, align 1
  store %struct.Memory* %loadMem_4aba66, %struct.Memory** %MEMORY
  %loadMem_4aba6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %23748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23749 = getelementptr inbounds %struct.GPR, %struct.GPR* %23748, i32 0, i32 33
  %23750 = getelementptr inbounds %struct.Reg, %struct.Reg* %23749, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %23750 to i64*
  %23751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23752 = getelementptr inbounds %struct.GPR, %struct.GPR* %23751, i32 0, i32 1
  %23753 = getelementptr inbounds %struct.Reg, %struct.Reg* %23752, i32 0, i32 0
  %EAX.i1395 = bitcast %union.anon* %23753 to i32*
  %23754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23755 = getelementptr inbounds %struct.GPR, %struct.GPR* %23754, i32 0, i32 15
  %23756 = getelementptr inbounds %struct.Reg, %struct.Reg* %23755, i32 0, i32 0
  %RBP.i1396 = bitcast %union.anon* %23756 to i64*
  %23757 = load i64, i64* %RBP.i1396
  %23758 = sub i64 %23757, 588
  %23759 = load i32, i32* %EAX.i1395
  %23760 = zext i32 %23759 to i64
  %23761 = load i64, i64* %PC.i1394
  %23762 = add i64 %23761, 6
  store i64 %23762, i64* %PC.i1394
  %23763 = inttoptr i64 %23758 to i32*
  store i32 %23759, i32* %23763
  store %struct.Memory* %loadMem_4aba6c, %struct.Memory** %MEMORY
  %loadMem_4aba72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23765 = getelementptr inbounds %struct.GPR, %struct.GPR* %23764, i32 0, i32 33
  %23766 = getelementptr inbounds %struct.Reg, %struct.Reg* %23765, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %23766 to i64*
  %23767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23768 = getelementptr inbounds %struct.GPR, %struct.GPR* %23767, i32 0, i32 1
  %23769 = getelementptr inbounds %struct.Reg, %struct.Reg* %23768, i32 0, i32 0
  %RAX.i1392 = bitcast %union.anon* %23769 to i64*
  %23770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23771 = getelementptr inbounds %struct.GPR, %struct.GPR* %23770, i32 0, i32 15
  %23772 = getelementptr inbounds %struct.Reg, %struct.Reg* %23771, i32 0, i32 0
  %RBP.i1393 = bitcast %union.anon* %23772 to i64*
  %23773 = load i64, i64* %RBP.i1393
  %23774 = sub i64 %23773, 608
  %23775 = load i64, i64* %PC.i1391
  %23776 = add i64 %23775, 6
  store i64 %23776, i64* %PC.i1391
  %23777 = inttoptr i64 %23774 to i32*
  %23778 = load i32, i32* %23777
  %23779 = zext i32 %23778 to i64
  store i64 %23779, i64* %RAX.i1392, align 8
  store %struct.Memory* %loadMem_4aba72, %struct.Memory** %MEMORY
  %loadMem_4aba78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23781 = getelementptr inbounds %struct.GPR, %struct.GPR* %23780, i32 0, i32 33
  %23782 = getelementptr inbounds %struct.Reg, %struct.Reg* %23781, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %23782 to i64*
  %23783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23784 = getelementptr inbounds %struct.GPR, %struct.GPR* %23783, i32 0, i32 1
  %23785 = getelementptr inbounds %struct.Reg, %struct.Reg* %23784, i32 0, i32 0
  %RAX.i1389 = bitcast %union.anon* %23785 to i64*
  %23786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23787 = getelementptr inbounds %struct.GPR, %struct.GPR* %23786, i32 0, i32 15
  %23788 = getelementptr inbounds %struct.Reg, %struct.Reg* %23787, i32 0, i32 0
  %RBP.i1390 = bitcast %union.anon* %23788 to i64*
  %23789 = load i64, i64* %RAX.i1389
  %23790 = load i64, i64* %RBP.i1390
  %23791 = sub i64 %23790, 580
  %23792 = load i64, i64* %PC.i1388
  %23793 = add i64 %23792, 6
  store i64 %23793, i64* %PC.i1388
  %23794 = trunc i64 %23789 to i32
  %23795 = inttoptr i64 %23791 to i32*
  %23796 = load i32, i32* %23795
  %23797 = add i32 %23796, %23794
  %23798 = zext i32 %23797 to i64
  store i64 %23798, i64* %RAX.i1389, align 8
  %23799 = icmp ult i32 %23797, %23794
  %23800 = icmp ult i32 %23797, %23796
  %23801 = or i1 %23799, %23800
  %23802 = zext i1 %23801 to i8
  %23803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23802, i8* %23803, align 1
  %23804 = and i32 %23797, 255
  %23805 = call i32 @llvm.ctpop.i32(i32 %23804)
  %23806 = trunc i32 %23805 to i8
  %23807 = and i8 %23806, 1
  %23808 = xor i8 %23807, 1
  %23809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23808, i8* %23809, align 1
  %23810 = xor i32 %23796, %23794
  %23811 = xor i32 %23810, %23797
  %23812 = lshr i32 %23811, 4
  %23813 = trunc i32 %23812 to i8
  %23814 = and i8 %23813, 1
  %23815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23814, i8* %23815, align 1
  %23816 = icmp eq i32 %23797, 0
  %23817 = zext i1 %23816 to i8
  %23818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23817, i8* %23818, align 1
  %23819 = lshr i32 %23797, 31
  %23820 = trunc i32 %23819 to i8
  %23821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23820, i8* %23821, align 1
  %23822 = lshr i32 %23794, 31
  %23823 = lshr i32 %23796, 31
  %23824 = xor i32 %23819, %23822
  %23825 = xor i32 %23819, %23823
  %23826 = add i32 %23824, %23825
  %23827 = icmp eq i32 %23826, 2
  %23828 = zext i1 %23827 to i8
  %23829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23828, i8* %23829, align 1
  store %struct.Memory* %loadMem_4aba78, %struct.Memory** %MEMORY
  %loadMem_4aba7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23831 = getelementptr inbounds %struct.GPR, %struct.GPR* %23830, i32 0, i32 33
  %23832 = getelementptr inbounds %struct.Reg, %struct.Reg* %23831, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %23832 to i64*
  %23833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23834 = getelementptr inbounds %struct.GPR, %struct.GPR* %23833, i32 0, i32 5
  %23835 = getelementptr inbounds %struct.Reg, %struct.Reg* %23834, i32 0, i32 0
  %RCX.i1386 = bitcast %union.anon* %23835 to i64*
  %23836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23837 = getelementptr inbounds %struct.GPR, %struct.GPR* %23836, i32 0, i32 15
  %23838 = getelementptr inbounds %struct.Reg, %struct.Reg* %23837, i32 0, i32 0
  %RBP.i1387 = bitcast %union.anon* %23838 to i64*
  %23839 = load i64, i64* %RBP.i1387
  %23840 = sub i64 %23839, 24
  %23841 = load i64, i64* %PC.i1385
  %23842 = add i64 %23841, 4
  store i64 %23842, i64* %PC.i1385
  %23843 = inttoptr i64 %23840 to i32*
  %23844 = load i32, i32* %23843
  %23845 = sext i32 %23844 to i64
  store i64 %23845, i64* %RCX.i1386, align 8
  store %struct.Memory* %loadMem_4aba7e, %struct.Memory** %MEMORY
  %loadMem_4aba82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23847 = getelementptr inbounds %struct.GPR, %struct.GPR* %23846, i32 0, i32 33
  %23848 = getelementptr inbounds %struct.Reg, %struct.Reg* %23847, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %23848 to i64*
  %23849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23850 = getelementptr inbounds %struct.GPR, %struct.GPR* %23849, i32 0, i32 1
  %23851 = getelementptr inbounds %struct.Reg, %struct.Reg* %23850, i32 0, i32 0
  %EAX.i1382 = bitcast %union.anon* %23851 to i32*
  %23852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23853 = getelementptr inbounds %struct.GPR, %struct.GPR* %23852, i32 0, i32 5
  %23854 = getelementptr inbounds %struct.Reg, %struct.Reg* %23853, i32 0, i32 0
  %RCX.i1383 = bitcast %union.anon* %23854 to i64*
  %23855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23856 = getelementptr inbounds %struct.GPR, %struct.GPR* %23855, i32 0, i32 15
  %23857 = getelementptr inbounds %struct.Reg, %struct.Reg* %23856, i32 0, i32 0
  %RBP.i1384 = bitcast %union.anon* %23857 to i64*
  %23858 = load i64, i64* %RBP.i1384
  %23859 = load i64, i64* %RCX.i1383
  %23860 = mul i64 %23859, 4
  %23861 = add i64 %23858, -368
  %23862 = add i64 %23861, %23860
  %23863 = load i32, i32* %EAX.i1382
  %23864 = zext i32 %23863 to i64
  %23865 = load i64, i64* %PC.i1381
  %23866 = add i64 %23865, 7
  store i64 %23866, i64* %PC.i1381
  %23867 = inttoptr i64 %23862 to i32*
  store i32 %23863, i32* %23867
  store %struct.Memory* %loadMem_4aba82, %struct.Memory** %MEMORY
  %loadMem_4aba89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23869 = getelementptr inbounds %struct.GPR, %struct.GPR* %23868, i32 0, i32 33
  %23870 = getelementptr inbounds %struct.Reg, %struct.Reg* %23869, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %23870 to i64*
  %23871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23872 = getelementptr inbounds %struct.GPR, %struct.GPR* %23871, i32 0, i32 1
  %23873 = getelementptr inbounds %struct.Reg, %struct.Reg* %23872, i32 0, i32 0
  %RAX.i1379 = bitcast %union.anon* %23873 to i64*
  %23874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23875 = getelementptr inbounds %struct.GPR, %struct.GPR* %23874, i32 0, i32 15
  %23876 = getelementptr inbounds %struct.Reg, %struct.Reg* %23875, i32 0, i32 0
  %RBP.i1380 = bitcast %union.anon* %23876 to i64*
  %23877 = load i64, i64* %RBP.i1380
  %23878 = sub i64 %23877, 600
  %23879 = load i64, i64* %PC.i1378
  %23880 = add i64 %23879, 6
  store i64 %23880, i64* %PC.i1378
  %23881 = inttoptr i64 %23878 to i32*
  %23882 = load i32, i32* %23881
  %23883 = zext i32 %23882 to i64
  store i64 %23883, i64* %RAX.i1379, align 8
  store %struct.Memory* %loadMem_4aba89, %struct.Memory** %MEMORY
  %loadMem_4aba8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %23884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23885 = getelementptr inbounds %struct.GPR, %struct.GPR* %23884, i32 0, i32 33
  %23886 = getelementptr inbounds %struct.Reg, %struct.Reg* %23885, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %23886 to i64*
  %23887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23888 = getelementptr inbounds %struct.GPR, %struct.GPR* %23887, i32 0, i32 1
  %23889 = getelementptr inbounds %struct.Reg, %struct.Reg* %23888, i32 0, i32 0
  %RAX.i1376 = bitcast %union.anon* %23889 to i64*
  %23890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23891 = getelementptr inbounds %struct.GPR, %struct.GPR* %23890, i32 0, i32 15
  %23892 = getelementptr inbounds %struct.Reg, %struct.Reg* %23891, i32 0, i32 0
  %RBP.i1377 = bitcast %union.anon* %23892 to i64*
  %23893 = load i64, i64* %RAX.i1376
  %23894 = load i64, i64* %RBP.i1377
  %23895 = sub i64 %23894, 588
  %23896 = load i64, i64* %PC.i1375
  %23897 = add i64 %23896, 6
  store i64 %23897, i64* %PC.i1375
  %23898 = trunc i64 %23893 to i32
  %23899 = inttoptr i64 %23895 to i32*
  %23900 = load i32, i32* %23899
  %23901 = add i32 %23900, %23898
  %23902 = zext i32 %23901 to i64
  store i64 %23902, i64* %RAX.i1376, align 8
  %23903 = icmp ult i32 %23901, %23898
  %23904 = icmp ult i32 %23901, %23900
  %23905 = or i1 %23903, %23904
  %23906 = zext i1 %23905 to i8
  %23907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23906, i8* %23907, align 1
  %23908 = and i32 %23901, 255
  %23909 = call i32 @llvm.ctpop.i32(i32 %23908)
  %23910 = trunc i32 %23909 to i8
  %23911 = and i8 %23910, 1
  %23912 = xor i8 %23911, 1
  %23913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23912, i8* %23913, align 1
  %23914 = xor i32 %23900, %23898
  %23915 = xor i32 %23914, %23901
  %23916 = lshr i32 %23915, 4
  %23917 = trunc i32 %23916 to i8
  %23918 = and i8 %23917, 1
  %23919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23918, i8* %23919, align 1
  %23920 = icmp eq i32 %23901, 0
  %23921 = zext i1 %23920 to i8
  %23922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23921, i8* %23922, align 1
  %23923 = lshr i32 %23901, 31
  %23924 = trunc i32 %23923 to i8
  %23925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23924, i8* %23925, align 1
  %23926 = lshr i32 %23898, 31
  %23927 = lshr i32 %23900, 31
  %23928 = xor i32 %23923, %23926
  %23929 = xor i32 %23923, %23927
  %23930 = add i32 %23928, %23929
  %23931 = icmp eq i32 %23930, 2
  %23932 = zext i1 %23931 to i8
  %23933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23932, i8* %23933, align 1
  store %struct.Memory* %loadMem_4aba8f, %struct.Memory** %MEMORY
  %loadMem_4aba95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23935 = getelementptr inbounds %struct.GPR, %struct.GPR* %23934, i32 0, i32 33
  %23936 = getelementptr inbounds %struct.Reg, %struct.Reg* %23935, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %23936 to i64*
  %23937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23938 = getelementptr inbounds %struct.GPR, %struct.GPR* %23937, i32 0, i32 5
  %23939 = getelementptr inbounds %struct.Reg, %struct.Reg* %23938, i32 0, i32 0
  %RCX.i1373 = bitcast %union.anon* %23939 to i64*
  %23940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23941 = getelementptr inbounds %struct.GPR, %struct.GPR* %23940, i32 0, i32 15
  %23942 = getelementptr inbounds %struct.Reg, %struct.Reg* %23941, i32 0, i32 0
  %RBP.i1374 = bitcast %union.anon* %23942 to i64*
  %23943 = load i64, i64* %RBP.i1374
  %23944 = sub i64 %23943, 24
  %23945 = load i64, i64* %PC.i1372
  %23946 = add i64 %23945, 4
  store i64 %23946, i64* %PC.i1372
  %23947 = inttoptr i64 %23944 to i32*
  %23948 = load i32, i32* %23947
  %23949 = sext i32 %23948 to i64
  store i64 %23949, i64* %RCX.i1373, align 8
  store %struct.Memory* %loadMem_4aba95, %struct.Memory** %MEMORY
  %loadMem_4aba99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23951 = getelementptr inbounds %struct.GPR, %struct.GPR* %23950, i32 0, i32 33
  %23952 = getelementptr inbounds %struct.Reg, %struct.Reg* %23951, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %23952 to i64*
  %23953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23954 = getelementptr inbounds %struct.GPR, %struct.GPR* %23953, i32 0, i32 1
  %23955 = getelementptr inbounds %struct.Reg, %struct.Reg* %23954, i32 0, i32 0
  %EAX.i1369 = bitcast %union.anon* %23955 to i32*
  %23956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23957 = getelementptr inbounds %struct.GPR, %struct.GPR* %23956, i32 0, i32 5
  %23958 = getelementptr inbounds %struct.Reg, %struct.Reg* %23957, i32 0, i32 0
  %RCX.i1370 = bitcast %union.anon* %23958 to i64*
  %23959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23960 = getelementptr inbounds %struct.GPR, %struct.GPR* %23959, i32 0, i32 15
  %23961 = getelementptr inbounds %struct.Reg, %struct.Reg* %23960, i32 0, i32 0
  %RBP.i1371 = bitcast %union.anon* %23961 to i64*
  %23962 = load i64, i64* %RBP.i1371
  %23963 = load i64, i64* %RCX.i1370
  %23964 = mul i64 %23963, 4
  %23965 = add i64 %23962, -336
  %23966 = add i64 %23965, %23964
  %23967 = load i32, i32* %EAX.i1369
  %23968 = zext i32 %23967 to i64
  %23969 = load i64, i64* %PC.i1368
  %23970 = add i64 %23969, 7
  store i64 %23970, i64* %PC.i1368
  %23971 = inttoptr i64 %23966 to i32*
  store i32 %23967, i32* %23971
  store %struct.Memory* %loadMem_4aba99, %struct.Memory** %MEMORY
  %loadMem_4abaa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23973 = getelementptr inbounds %struct.GPR, %struct.GPR* %23972, i32 0, i32 33
  %23974 = getelementptr inbounds %struct.Reg, %struct.Reg* %23973, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %23974 to i64*
  %23975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23976 = getelementptr inbounds %struct.GPR, %struct.GPR* %23975, i32 0, i32 1
  %23977 = getelementptr inbounds %struct.Reg, %struct.Reg* %23976, i32 0, i32 0
  %RAX.i1366 = bitcast %union.anon* %23977 to i64*
  %23978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23979 = getelementptr inbounds %struct.GPR, %struct.GPR* %23978, i32 0, i32 15
  %23980 = getelementptr inbounds %struct.Reg, %struct.Reg* %23979, i32 0, i32 0
  %RBP.i1367 = bitcast %union.anon* %23980 to i64*
  %23981 = load i64, i64* %RBP.i1367
  %23982 = sub i64 %23981, 592
  %23983 = load i64, i64* %PC.i1365
  %23984 = add i64 %23983, 6
  store i64 %23984, i64* %PC.i1365
  %23985 = inttoptr i64 %23982 to i32*
  %23986 = load i32, i32* %23985
  %23987 = zext i32 %23986 to i64
  store i64 %23987, i64* %RAX.i1366, align 8
  store %struct.Memory* %loadMem_4abaa0, %struct.Memory** %MEMORY
  %loadMem_4abaa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23989 = getelementptr inbounds %struct.GPR, %struct.GPR* %23988, i32 0, i32 33
  %23990 = getelementptr inbounds %struct.Reg, %struct.Reg* %23989, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %23990 to i64*
  %23991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23992 = getelementptr inbounds %struct.GPR, %struct.GPR* %23991, i32 0, i32 1
  %23993 = getelementptr inbounds %struct.Reg, %struct.Reg* %23992, i32 0, i32 0
  %RAX.i1363 = bitcast %union.anon* %23993 to i64*
  %23994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23995 = getelementptr inbounds %struct.GPR, %struct.GPR* %23994, i32 0, i32 15
  %23996 = getelementptr inbounds %struct.Reg, %struct.Reg* %23995, i32 0, i32 0
  %RBP.i1364 = bitcast %union.anon* %23996 to i64*
  %23997 = load i64, i64* %RAX.i1363
  %23998 = load i64, i64* %RBP.i1364
  %23999 = sub i64 %23998, 596
  %24000 = load i64, i64* %PC.i1362
  %24001 = add i64 %24000, 6
  store i64 %24001, i64* %PC.i1362
  %24002 = trunc i64 %23997 to i32
  %24003 = inttoptr i64 %23999 to i32*
  %24004 = load i32, i32* %24003
  %24005 = add i32 %24004, %24002
  %24006 = zext i32 %24005 to i64
  store i64 %24006, i64* %RAX.i1363, align 8
  %24007 = icmp ult i32 %24005, %24002
  %24008 = icmp ult i32 %24005, %24004
  %24009 = or i1 %24007, %24008
  %24010 = zext i1 %24009 to i8
  %24011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24010, i8* %24011, align 1
  %24012 = and i32 %24005, 255
  %24013 = call i32 @llvm.ctpop.i32(i32 %24012)
  %24014 = trunc i32 %24013 to i8
  %24015 = and i8 %24014, 1
  %24016 = xor i8 %24015, 1
  %24017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24016, i8* %24017, align 1
  %24018 = xor i32 %24004, %24002
  %24019 = xor i32 %24018, %24005
  %24020 = lshr i32 %24019, 4
  %24021 = trunc i32 %24020 to i8
  %24022 = and i8 %24021, 1
  %24023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24022, i8* %24023, align 1
  %24024 = icmp eq i32 %24005, 0
  %24025 = zext i1 %24024 to i8
  %24026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24025, i8* %24026, align 1
  %24027 = lshr i32 %24005, 31
  %24028 = trunc i32 %24027 to i8
  %24029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24028, i8* %24029, align 1
  %24030 = lshr i32 %24002, 31
  %24031 = lshr i32 %24004, 31
  %24032 = xor i32 %24027, %24030
  %24033 = xor i32 %24027, %24031
  %24034 = add i32 %24032, %24033
  %24035 = icmp eq i32 %24034, 2
  %24036 = zext i1 %24035 to i8
  %24037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24036, i8* %24037, align 1
  store %struct.Memory* %loadMem_4abaa6, %struct.Memory** %MEMORY
  %loadMem_4abaac = load %struct.Memory*, %struct.Memory** %MEMORY
  %24038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24039 = getelementptr inbounds %struct.GPR, %struct.GPR* %24038, i32 0, i32 33
  %24040 = getelementptr inbounds %struct.Reg, %struct.Reg* %24039, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %24040 to i64*
  %24041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24042 = getelementptr inbounds %struct.GPR, %struct.GPR* %24041, i32 0, i32 5
  %24043 = getelementptr inbounds %struct.Reg, %struct.Reg* %24042, i32 0, i32 0
  %RCX.i1360 = bitcast %union.anon* %24043 to i64*
  %24044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24045 = getelementptr inbounds %struct.GPR, %struct.GPR* %24044, i32 0, i32 15
  %24046 = getelementptr inbounds %struct.Reg, %struct.Reg* %24045, i32 0, i32 0
  %RBP.i1361 = bitcast %union.anon* %24046 to i64*
  %24047 = load i64, i64* %RBP.i1361
  %24048 = sub i64 %24047, 24
  %24049 = load i64, i64* %PC.i1359
  %24050 = add i64 %24049, 4
  store i64 %24050, i64* %PC.i1359
  %24051 = inttoptr i64 %24048 to i32*
  %24052 = load i32, i32* %24051
  %24053 = sext i32 %24052 to i64
  store i64 %24053, i64* %RCX.i1360, align 8
  store %struct.Memory* %loadMem_4abaac, %struct.Memory** %MEMORY
  %loadMem_4abab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24055 = getelementptr inbounds %struct.GPR, %struct.GPR* %24054, i32 0, i32 33
  %24056 = getelementptr inbounds %struct.Reg, %struct.Reg* %24055, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %24056 to i64*
  %24057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24058 = getelementptr inbounds %struct.GPR, %struct.GPR* %24057, i32 0, i32 1
  %24059 = getelementptr inbounds %struct.Reg, %struct.Reg* %24058, i32 0, i32 0
  %EAX.i1356 = bitcast %union.anon* %24059 to i32*
  %24060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24061 = getelementptr inbounds %struct.GPR, %struct.GPR* %24060, i32 0, i32 5
  %24062 = getelementptr inbounds %struct.Reg, %struct.Reg* %24061, i32 0, i32 0
  %RCX.i1357 = bitcast %union.anon* %24062 to i64*
  %24063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24064 = getelementptr inbounds %struct.GPR, %struct.GPR* %24063, i32 0, i32 15
  %24065 = getelementptr inbounds %struct.Reg, %struct.Reg* %24064, i32 0, i32 0
  %RBP.i1358 = bitcast %union.anon* %24065 to i64*
  %24066 = load i64, i64* %RBP.i1358
  %24067 = load i64, i64* %RCX.i1357
  %24068 = mul i64 %24067, 4
  %24069 = add i64 %24066, -304
  %24070 = add i64 %24069, %24068
  %24071 = load i32, i32* %EAX.i1356
  %24072 = zext i32 %24071 to i64
  %24073 = load i64, i64* %PC.i1355
  %24074 = add i64 %24073, 7
  store i64 %24074, i64* %PC.i1355
  %24075 = inttoptr i64 %24070 to i32*
  store i32 %24071, i32* %24075
  store %struct.Memory* %loadMem_4abab0, %struct.Memory** %MEMORY
  %loadMem_4abab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24077 = getelementptr inbounds %struct.GPR, %struct.GPR* %24076, i32 0, i32 33
  %24078 = getelementptr inbounds %struct.Reg, %struct.Reg* %24077, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %24078 to i64*
  %24079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24080 = getelementptr inbounds %struct.GPR, %struct.GPR* %24079, i32 0, i32 1
  %24081 = getelementptr inbounds %struct.Reg, %struct.Reg* %24080, i32 0, i32 0
  %RAX.i1353 = bitcast %union.anon* %24081 to i64*
  %24082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24083 = getelementptr inbounds %struct.GPR, %struct.GPR* %24082, i32 0, i32 15
  %24084 = getelementptr inbounds %struct.Reg, %struct.Reg* %24083, i32 0, i32 0
  %RBP.i1354 = bitcast %union.anon* %24084 to i64*
  %24085 = load i64, i64* %RBP.i1354
  %24086 = sub i64 %24085, 584
  %24087 = load i64, i64* %PC.i1352
  %24088 = add i64 %24087, 6
  store i64 %24088, i64* %PC.i1352
  %24089 = inttoptr i64 %24086 to i32*
  %24090 = load i32, i32* %24089
  %24091 = zext i32 %24090 to i64
  store i64 %24091, i64* %RAX.i1353, align 8
  store %struct.Memory* %loadMem_4abab7, %struct.Memory** %MEMORY
  %loadMem_4ababd = load %struct.Memory*, %struct.Memory** %MEMORY
  %24092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24093 = getelementptr inbounds %struct.GPR, %struct.GPR* %24092, i32 0, i32 33
  %24094 = getelementptr inbounds %struct.Reg, %struct.Reg* %24093, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %24094 to i64*
  %24095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24096 = getelementptr inbounds %struct.GPR, %struct.GPR* %24095, i32 0, i32 1
  %24097 = getelementptr inbounds %struct.Reg, %struct.Reg* %24096, i32 0, i32 0
  %RAX.i1350 = bitcast %union.anon* %24097 to i64*
  %24098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24099 = getelementptr inbounds %struct.GPR, %struct.GPR* %24098, i32 0, i32 15
  %24100 = getelementptr inbounds %struct.Reg, %struct.Reg* %24099, i32 0, i32 0
  %RBP.i1351 = bitcast %union.anon* %24100 to i64*
  %24101 = load i64, i64* %RAX.i1350
  %24102 = load i64, i64* %RBP.i1351
  %24103 = sub i64 %24102, 604
  %24104 = load i64, i64* %PC.i1349
  %24105 = add i64 %24104, 6
  store i64 %24105, i64* %PC.i1349
  %24106 = trunc i64 %24101 to i32
  %24107 = inttoptr i64 %24103 to i32*
  %24108 = load i32, i32* %24107
  %24109 = add i32 %24108, %24106
  %24110 = zext i32 %24109 to i64
  store i64 %24110, i64* %RAX.i1350, align 8
  %24111 = icmp ult i32 %24109, %24106
  %24112 = icmp ult i32 %24109, %24108
  %24113 = or i1 %24111, %24112
  %24114 = zext i1 %24113 to i8
  %24115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24114, i8* %24115, align 1
  %24116 = and i32 %24109, 255
  %24117 = call i32 @llvm.ctpop.i32(i32 %24116)
  %24118 = trunc i32 %24117 to i8
  %24119 = and i8 %24118, 1
  %24120 = xor i8 %24119, 1
  %24121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24120, i8* %24121, align 1
  %24122 = xor i32 %24108, %24106
  %24123 = xor i32 %24122, %24109
  %24124 = lshr i32 %24123, 4
  %24125 = trunc i32 %24124 to i8
  %24126 = and i8 %24125, 1
  %24127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24126, i8* %24127, align 1
  %24128 = icmp eq i32 %24109, 0
  %24129 = zext i1 %24128 to i8
  %24130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24129, i8* %24130, align 1
  %24131 = lshr i32 %24109, 31
  %24132 = trunc i32 %24131 to i8
  %24133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24132, i8* %24133, align 1
  %24134 = lshr i32 %24106, 31
  %24135 = lshr i32 %24108, 31
  %24136 = xor i32 %24131, %24134
  %24137 = xor i32 %24131, %24135
  %24138 = add i32 %24136, %24137
  %24139 = icmp eq i32 %24138, 2
  %24140 = zext i1 %24139 to i8
  %24141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24140, i8* %24141, align 1
  store %struct.Memory* %loadMem_4ababd, %struct.Memory** %MEMORY
  %loadMem_4abac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24143 = getelementptr inbounds %struct.GPR, %struct.GPR* %24142, i32 0, i32 33
  %24144 = getelementptr inbounds %struct.Reg, %struct.Reg* %24143, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %24144 to i64*
  %24145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24146 = getelementptr inbounds %struct.GPR, %struct.GPR* %24145, i32 0, i32 5
  %24147 = getelementptr inbounds %struct.Reg, %struct.Reg* %24146, i32 0, i32 0
  %RCX.i1347 = bitcast %union.anon* %24147 to i64*
  %24148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24149 = getelementptr inbounds %struct.GPR, %struct.GPR* %24148, i32 0, i32 15
  %24150 = getelementptr inbounds %struct.Reg, %struct.Reg* %24149, i32 0, i32 0
  %RBP.i1348 = bitcast %union.anon* %24150 to i64*
  %24151 = load i64, i64* %RBP.i1348
  %24152 = sub i64 %24151, 24
  %24153 = load i64, i64* %PC.i1346
  %24154 = add i64 %24153, 4
  store i64 %24154, i64* %PC.i1346
  %24155 = inttoptr i64 %24152 to i32*
  %24156 = load i32, i32* %24155
  %24157 = sext i32 %24156 to i64
  store i64 %24157, i64* %RCX.i1347, align 8
  store %struct.Memory* %loadMem_4abac3, %struct.Memory** %MEMORY
  %loadMem_4abac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24159 = getelementptr inbounds %struct.GPR, %struct.GPR* %24158, i32 0, i32 33
  %24160 = getelementptr inbounds %struct.Reg, %struct.Reg* %24159, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %24160 to i64*
  %24161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24162 = getelementptr inbounds %struct.GPR, %struct.GPR* %24161, i32 0, i32 1
  %24163 = getelementptr inbounds %struct.Reg, %struct.Reg* %24162, i32 0, i32 0
  %EAX.i1343 = bitcast %union.anon* %24163 to i32*
  %24164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24165 = getelementptr inbounds %struct.GPR, %struct.GPR* %24164, i32 0, i32 5
  %24166 = getelementptr inbounds %struct.Reg, %struct.Reg* %24165, i32 0, i32 0
  %RCX.i1344 = bitcast %union.anon* %24166 to i64*
  %24167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24168 = getelementptr inbounds %struct.GPR, %struct.GPR* %24167, i32 0, i32 15
  %24169 = getelementptr inbounds %struct.Reg, %struct.Reg* %24168, i32 0, i32 0
  %RBP.i1345 = bitcast %union.anon* %24169 to i64*
  %24170 = load i64, i64* %RBP.i1345
  %24171 = load i64, i64* %RCX.i1344
  %24172 = mul i64 %24171, 4
  %24173 = add i64 %24170, -272
  %24174 = add i64 %24173, %24172
  %24175 = load i32, i32* %EAX.i1343
  %24176 = zext i32 %24175 to i64
  %24177 = load i64, i64* %PC.i1342
  %24178 = add i64 %24177, 7
  store i64 %24178, i64* %PC.i1342
  %24179 = inttoptr i64 %24174 to i32*
  store i32 %24175, i32* %24179
  store %struct.Memory* %loadMem_4abac7, %struct.Memory** %MEMORY
  %loadMem_4abace = load %struct.Memory*, %struct.Memory** %MEMORY
  %24180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24181 = getelementptr inbounds %struct.GPR, %struct.GPR* %24180, i32 0, i32 33
  %24182 = getelementptr inbounds %struct.Reg, %struct.Reg* %24181, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %24182 to i64*
  %24183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24184 = getelementptr inbounds %struct.GPR, %struct.GPR* %24183, i32 0, i32 1
  %24185 = getelementptr inbounds %struct.Reg, %struct.Reg* %24184, i32 0, i32 0
  %RAX.i1340 = bitcast %union.anon* %24185 to i64*
  %24186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24187 = getelementptr inbounds %struct.GPR, %struct.GPR* %24186, i32 0, i32 15
  %24188 = getelementptr inbounds %struct.Reg, %struct.Reg* %24187, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %24188 to i64*
  %24189 = load i64, i64* %RBP.i1341
  %24190 = sub i64 %24189, 584
  %24191 = load i64, i64* %PC.i1339
  %24192 = add i64 %24191, 6
  store i64 %24192, i64* %PC.i1339
  %24193 = inttoptr i64 %24190 to i32*
  %24194 = load i32, i32* %24193
  %24195 = zext i32 %24194 to i64
  store i64 %24195, i64* %RAX.i1340, align 8
  store %struct.Memory* %loadMem_4abace, %struct.Memory** %MEMORY
  %loadMem_4abad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24197 = getelementptr inbounds %struct.GPR, %struct.GPR* %24196, i32 0, i32 33
  %24198 = getelementptr inbounds %struct.Reg, %struct.Reg* %24197, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %24198 to i64*
  %24199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24200 = getelementptr inbounds %struct.GPR, %struct.GPR* %24199, i32 0, i32 1
  %24201 = getelementptr inbounds %struct.Reg, %struct.Reg* %24200, i32 0, i32 0
  %RAX.i1337 = bitcast %union.anon* %24201 to i64*
  %24202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24203 = getelementptr inbounds %struct.GPR, %struct.GPR* %24202, i32 0, i32 15
  %24204 = getelementptr inbounds %struct.Reg, %struct.Reg* %24203, i32 0, i32 0
  %RBP.i1338 = bitcast %union.anon* %24204 to i64*
  %24205 = load i64, i64* %RAX.i1337
  %24206 = load i64, i64* %RBP.i1338
  %24207 = sub i64 %24206, 604
  %24208 = load i64, i64* %PC.i1336
  %24209 = add i64 %24208, 6
  store i64 %24209, i64* %PC.i1336
  %24210 = trunc i64 %24205 to i32
  %24211 = inttoptr i64 %24207 to i32*
  %24212 = load i32, i32* %24211
  %24213 = sub i32 %24210, %24212
  %24214 = zext i32 %24213 to i64
  store i64 %24214, i64* %RAX.i1337, align 8
  %24215 = icmp ult i32 %24210, %24212
  %24216 = zext i1 %24215 to i8
  %24217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24216, i8* %24217, align 1
  %24218 = and i32 %24213, 255
  %24219 = call i32 @llvm.ctpop.i32(i32 %24218)
  %24220 = trunc i32 %24219 to i8
  %24221 = and i8 %24220, 1
  %24222 = xor i8 %24221, 1
  %24223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24222, i8* %24223, align 1
  %24224 = xor i32 %24212, %24210
  %24225 = xor i32 %24224, %24213
  %24226 = lshr i32 %24225, 4
  %24227 = trunc i32 %24226 to i8
  %24228 = and i8 %24227, 1
  %24229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24228, i8* %24229, align 1
  %24230 = icmp eq i32 %24213, 0
  %24231 = zext i1 %24230 to i8
  %24232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24231, i8* %24232, align 1
  %24233 = lshr i32 %24213, 31
  %24234 = trunc i32 %24233 to i8
  %24235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24234, i8* %24235, align 1
  %24236 = lshr i32 %24210, 31
  %24237 = lshr i32 %24212, 31
  %24238 = xor i32 %24237, %24236
  %24239 = xor i32 %24233, %24236
  %24240 = add i32 %24239, %24238
  %24241 = icmp eq i32 %24240, 2
  %24242 = zext i1 %24241 to i8
  %24243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24242, i8* %24243, align 1
  store %struct.Memory* %loadMem_4abad4, %struct.Memory** %MEMORY
  %loadMem_4abada = load %struct.Memory*, %struct.Memory** %MEMORY
  %24244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24245 = getelementptr inbounds %struct.GPR, %struct.GPR* %24244, i32 0, i32 33
  %24246 = getelementptr inbounds %struct.Reg, %struct.Reg* %24245, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %24246 to i64*
  %24247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24248 = getelementptr inbounds %struct.GPR, %struct.GPR* %24247, i32 0, i32 5
  %24249 = getelementptr inbounds %struct.Reg, %struct.Reg* %24248, i32 0, i32 0
  %RCX.i1334 = bitcast %union.anon* %24249 to i64*
  %24250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24251 = getelementptr inbounds %struct.GPR, %struct.GPR* %24250, i32 0, i32 15
  %24252 = getelementptr inbounds %struct.Reg, %struct.Reg* %24251, i32 0, i32 0
  %RBP.i1335 = bitcast %union.anon* %24252 to i64*
  %24253 = load i64, i64* %RBP.i1335
  %24254 = sub i64 %24253, 24
  %24255 = load i64, i64* %PC.i1333
  %24256 = add i64 %24255, 4
  store i64 %24256, i64* %PC.i1333
  %24257 = inttoptr i64 %24254 to i32*
  %24258 = load i32, i32* %24257
  %24259 = sext i32 %24258 to i64
  store i64 %24259, i64* %RCX.i1334, align 8
  store %struct.Memory* %loadMem_4abada, %struct.Memory** %MEMORY
  %loadMem_4abade = load %struct.Memory*, %struct.Memory** %MEMORY
  %24260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24261 = getelementptr inbounds %struct.GPR, %struct.GPR* %24260, i32 0, i32 33
  %24262 = getelementptr inbounds %struct.Reg, %struct.Reg* %24261, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %24262 to i64*
  %24263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24264 = getelementptr inbounds %struct.GPR, %struct.GPR* %24263, i32 0, i32 1
  %24265 = getelementptr inbounds %struct.Reg, %struct.Reg* %24264, i32 0, i32 0
  %EAX.i1330 = bitcast %union.anon* %24265 to i32*
  %24266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24267 = getelementptr inbounds %struct.GPR, %struct.GPR* %24266, i32 0, i32 5
  %24268 = getelementptr inbounds %struct.Reg, %struct.Reg* %24267, i32 0, i32 0
  %RCX.i1331 = bitcast %union.anon* %24268 to i64*
  %24269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24270 = getelementptr inbounds %struct.GPR, %struct.GPR* %24269, i32 0, i32 15
  %24271 = getelementptr inbounds %struct.Reg, %struct.Reg* %24270, i32 0, i32 0
  %RBP.i1332 = bitcast %union.anon* %24271 to i64*
  %24272 = load i64, i64* %RBP.i1332
  %24273 = load i64, i64* %RCX.i1331
  %24274 = mul i64 %24273, 4
  %24275 = add i64 %24272, -240
  %24276 = add i64 %24275, %24274
  %24277 = load i32, i32* %EAX.i1330
  %24278 = zext i32 %24277 to i64
  %24279 = load i64, i64* %PC.i1329
  %24280 = add i64 %24279, 7
  store i64 %24280, i64* %PC.i1329
  %24281 = inttoptr i64 %24276 to i32*
  store i32 %24277, i32* %24281
  store %struct.Memory* %loadMem_4abade, %struct.Memory** %MEMORY
  %loadMem_4abae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24283 = getelementptr inbounds %struct.GPR, %struct.GPR* %24282, i32 0, i32 33
  %24284 = getelementptr inbounds %struct.Reg, %struct.Reg* %24283, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %24284 to i64*
  %24285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24286 = getelementptr inbounds %struct.GPR, %struct.GPR* %24285, i32 0, i32 1
  %24287 = getelementptr inbounds %struct.Reg, %struct.Reg* %24286, i32 0, i32 0
  %RAX.i1327 = bitcast %union.anon* %24287 to i64*
  %24288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24289 = getelementptr inbounds %struct.GPR, %struct.GPR* %24288, i32 0, i32 15
  %24290 = getelementptr inbounds %struct.Reg, %struct.Reg* %24289, i32 0, i32 0
  %RBP.i1328 = bitcast %union.anon* %24290 to i64*
  %24291 = load i64, i64* %RBP.i1328
  %24292 = sub i64 %24291, 592
  %24293 = load i64, i64* %PC.i1326
  %24294 = add i64 %24293, 6
  store i64 %24294, i64* %PC.i1326
  %24295 = inttoptr i64 %24292 to i32*
  %24296 = load i32, i32* %24295
  %24297 = zext i32 %24296 to i64
  store i64 %24297, i64* %RAX.i1327, align 8
  store %struct.Memory* %loadMem_4abae5, %struct.Memory** %MEMORY
  %loadMem_4abaeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %24298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24299 = getelementptr inbounds %struct.GPR, %struct.GPR* %24298, i32 0, i32 33
  %24300 = getelementptr inbounds %struct.Reg, %struct.Reg* %24299, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %24300 to i64*
  %24301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24302 = getelementptr inbounds %struct.GPR, %struct.GPR* %24301, i32 0, i32 1
  %24303 = getelementptr inbounds %struct.Reg, %struct.Reg* %24302, i32 0, i32 0
  %RAX.i1324 = bitcast %union.anon* %24303 to i64*
  %24304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24305 = getelementptr inbounds %struct.GPR, %struct.GPR* %24304, i32 0, i32 15
  %24306 = getelementptr inbounds %struct.Reg, %struct.Reg* %24305, i32 0, i32 0
  %RBP.i1325 = bitcast %union.anon* %24306 to i64*
  %24307 = load i64, i64* %RAX.i1324
  %24308 = load i64, i64* %RBP.i1325
  %24309 = sub i64 %24308, 596
  %24310 = load i64, i64* %PC.i1323
  %24311 = add i64 %24310, 6
  store i64 %24311, i64* %PC.i1323
  %24312 = trunc i64 %24307 to i32
  %24313 = inttoptr i64 %24309 to i32*
  %24314 = load i32, i32* %24313
  %24315 = sub i32 %24312, %24314
  %24316 = zext i32 %24315 to i64
  store i64 %24316, i64* %RAX.i1324, align 8
  %24317 = icmp ult i32 %24312, %24314
  %24318 = zext i1 %24317 to i8
  %24319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24318, i8* %24319, align 1
  %24320 = and i32 %24315, 255
  %24321 = call i32 @llvm.ctpop.i32(i32 %24320)
  %24322 = trunc i32 %24321 to i8
  %24323 = and i8 %24322, 1
  %24324 = xor i8 %24323, 1
  %24325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24324, i8* %24325, align 1
  %24326 = xor i32 %24314, %24312
  %24327 = xor i32 %24326, %24315
  %24328 = lshr i32 %24327, 4
  %24329 = trunc i32 %24328 to i8
  %24330 = and i8 %24329, 1
  %24331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24330, i8* %24331, align 1
  %24332 = icmp eq i32 %24315, 0
  %24333 = zext i1 %24332 to i8
  %24334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24333, i8* %24334, align 1
  %24335 = lshr i32 %24315, 31
  %24336 = trunc i32 %24335 to i8
  %24337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24336, i8* %24337, align 1
  %24338 = lshr i32 %24312, 31
  %24339 = lshr i32 %24314, 31
  %24340 = xor i32 %24339, %24338
  %24341 = xor i32 %24335, %24338
  %24342 = add i32 %24341, %24340
  %24343 = icmp eq i32 %24342, 2
  %24344 = zext i1 %24343 to i8
  %24345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24344, i8* %24345, align 1
  store %struct.Memory* %loadMem_4abaeb, %struct.Memory** %MEMORY
  %loadMem_4abaf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24347 = getelementptr inbounds %struct.GPR, %struct.GPR* %24346, i32 0, i32 33
  %24348 = getelementptr inbounds %struct.Reg, %struct.Reg* %24347, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %24348 to i64*
  %24349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24350 = getelementptr inbounds %struct.GPR, %struct.GPR* %24349, i32 0, i32 5
  %24351 = getelementptr inbounds %struct.Reg, %struct.Reg* %24350, i32 0, i32 0
  %RCX.i1321 = bitcast %union.anon* %24351 to i64*
  %24352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24353 = getelementptr inbounds %struct.GPR, %struct.GPR* %24352, i32 0, i32 15
  %24354 = getelementptr inbounds %struct.Reg, %struct.Reg* %24353, i32 0, i32 0
  %RBP.i1322 = bitcast %union.anon* %24354 to i64*
  %24355 = load i64, i64* %RBP.i1322
  %24356 = sub i64 %24355, 24
  %24357 = load i64, i64* %PC.i1320
  %24358 = add i64 %24357, 4
  store i64 %24358, i64* %PC.i1320
  %24359 = inttoptr i64 %24356 to i32*
  %24360 = load i32, i32* %24359
  %24361 = sext i32 %24360 to i64
  store i64 %24361, i64* %RCX.i1321, align 8
  store %struct.Memory* %loadMem_4abaf1, %struct.Memory** %MEMORY
  %loadMem_4abaf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24363 = getelementptr inbounds %struct.GPR, %struct.GPR* %24362, i32 0, i32 33
  %24364 = getelementptr inbounds %struct.Reg, %struct.Reg* %24363, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %24364 to i64*
  %24365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24366 = getelementptr inbounds %struct.GPR, %struct.GPR* %24365, i32 0, i32 1
  %24367 = getelementptr inbounds %struct.Reg, %struct.Reg* %24366, i32 0, i32 0
  %EAX.i1317 = bitcast %union.anon* %24367 to i32*
  %24368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24369 = getelementptr inbounds %struct.GPR, %struct.GPR* %24368, i32 0, i32 5
  %24370 = getelementptr inbounds %struct.Reg, %struct.Reg* %24369, i32 0, i32 0
  %RCX.i1318 = bitcast %union.anon* %24370 to i64*
  %24371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24372 = getelementptr inbounds %struct.GPR, %struct.GPR* %24371, i32 0, i32 15
  %24373 = getelementptr inbounds %struct.Reg, %struct.Reg* %24372, i32 0, i32 0
  %RBP.i1319 = bitcast %union.anon* %24373 to i64*
  %24374 = load i64, i64* %RBP.i1319
  %24375 = load i64, i64* %RCX.i1318
  %24376 = mul i64 %24375, 4
  %24377 = add i64 %24374, -208
  %24378 = add i64 %24377, %24376
  %24379 = load i32, i32* %EAX.i1317
  %24380 = zext i32 %24379 to i64
  %24381 = load i64, i64* %PC.i1316
  %24382 = add i64 %24381, 7
  store i64 %24382, i64* %PC.i1316
  %24383 = inttoptr i64 %24378 to i32*
  store i32 %24379, i32* %24383
  store %struct.Memory* %loadMem_4abaf5, %struct.Memory** %MEMORY
  %loadMem_4abafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %24384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24385 = getelementptr inbounds %struct.GPR, %struct.GPR* %24384, i32 0, i32 33
  %24386 = getelementptr inbounds %struct.Reg, %struct.Reg* %24385, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %24386 to i64*
  %24387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24388 = getelementptr inbounds %struct.GPR, %struct.GPR* %24387, i32 0, i32 1
  %24389 = getelementptr inbounds %struct.Reg, %struct.Reg* %24388, i32 0, i32 0
  %RAX.i1314 = bitcast %union.anon* %24389 to i64*
  %24390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24391 = getelementptr inbounds %struct.GPR, %struct.GPR* %24390, i32 0, i32 15
  %24392 = getelementptr inbounds %struct.Reg, %struct.Reg* %24391, i32 0, i32 0
  %RBP.i1315 = bitcast %union.anon* %24392 to i64*
  %24393 = load i64, i64* %RBP.i1315
  %24394 = sub i64 %24393, 600
  %24395 = load i64, i64* %PC.i1313
  %24396 = add i64 %24395, 6
  store i64 %24396, i64* %PC.i1313
  %24397 = inttoptr i64 %24394 to i32*
  %24398 = load i32, i32* %24397
  %24399 = zext i32 %24398 to i64
  store i64 %24399, i64* %RAX.i1314, align 8
  store %struct.Memory* %loadMem_4abafc, %struct.Memory** %MEMORY
  %loadMem_4abb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24401 = getelementptr inbounds %struct.GPR, %struct.GPR* %24400, i32 0, i32 33
  %24402 = getelementptr inbounds %struct.Reg, %struct.Reg* %24401, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %24402 to i64*
  %24403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24404 = getelementptr inbounds %struct.GPR, %struct.GPR* %24403, i32 0, i32 1
  %24405 = getelementptr inbounds %struct.Reg, %struct.Reg* %24404, i32 0, i32 0
  %RAX.i1311 = bitcast %union.anon* %24405 to i64*
  %24406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24407 = getelementptr inbounds %struct.GPR, %struct.GPR* %24406, i32 0, i32 15
  %24408 = getelementptr inbounds %struct.Reg, %struct.Reg* %24407, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %24408 to i64*
  %24409 = load i64, i64* %RAX.i1311
  %24410 = load i64, i64* %RBP.i1312
  %24411 = sub i64 %24410, 588
  %24412 = load i64, i64* %PC.i1310
  %24413 = add i64 %24412, 6
  store i64 %24413, i64* %PC.i1310
  %24414 = trunc i64 %24409 to i32
  %24415 = inttoptr i64 %24411 to i32*
  %24416 = load i32, i32* %24415
  %24417 = sub i32 %24414, %24416
  %24418 = zext i32 %24417 to i64
  store i64 %24418, i64* %RAX.i1311, align 8
  %24419 = icmp ult i32 %24414, %24416
  %24420 = zext i1 %24419 to i8
  %24421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24420, i8* %24421, align 1
  %24422 = and i32 %24417, 255
  %24423 = call i32 @llvm.ctpop.i32(i32 %24422)
  %24424 = trunc i32 %24423 to i8
  %24425 = and i8 %24424, 1
  %24426 = xor i8 %24425, 1
  %24427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24426, i8* %24427, align 1
  %24428 = xor i32 %24416, %24414
  %24429 = xor i32 %24428, %24417
  %24430 = lshr i32 %24429, 4
  %24431 = trunc i32 %24430 to i8
  %24432 = and i8 %24431, 1
  %24433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24432, i8* %24433, align 1
  %24434 = icmp eq i32 %24417, 0
  %24435 = zext i1 %24434 to i8
  %24436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24435, i8* %24436, align 1
  %24437 = lshr i32 %24417, 31
  %24438 = trunc i32 %24437 to i8
  %24439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24438, i8* %24439, align 1
  %24440 = lshr i32 %24414, 31
  %24441 = lshr i32 %24416, 31
  %24442 = xor i32 %24441, %24440
  %24443 = xor i32 %24437, %24440
  %24444 = add i32 %24443, %24442
  %24445 = icmp eq i32 %24444, 2
  %24446 = zext i1 %24445 to i8
  %24447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24446, i8* %24447, align 1
  store %struct.Memory* %loadMem_4abb02, %struct.Memory** %MEMORY
  %loadMem_4abb08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24449 = getelementptr inbounds %struct.GPR, %struct.GPR* %24448, i32 0, i32 33
  %24450 = getelementptr inbounds %struct.Reg, %struct.Reg* %24449, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %24450 to i64*
  %24451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24452 = getelementptr inbounds %struct.GPR, %struct.GPR* %24451, i32 0, i32 5
  %24453 = getelementptr inbounds %struct.Reg, %struct.Reg* %24452, i32 0, i32 0
  %RCX.i1308 = bitcast %union.anon* %24453 to i64*
  %24454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24455 = getelementptr inbounds %struct.GPR, %struct.GPR* %24454, i32 0, i32 15
  %24456 = getelementptr inbounds %struct.Reg, %struct.Reg* %24455, i32 0, i32 0
  %RBP.i1309 = bitcast %union.anon* %24456 to i64*
  %24457 = load i64, i64* %RBP.i1309
  %24458 = sub i64 %24457, 24
  %24459 = load i64, i64* %PC.i1307
  %24460 = add i64 %24459, 4
  store i64 %24460, i64* %PC.i1307
  %24461 = inttoptr i64 %24458 to i32*
  %24462 = load i32, i32* %24461
  %24463 = sext i32 %24462 to i64
  store i64 %24463, i64* %RCX.i1308, align 8
  store %struct.Memory* %loadMem_4abb08, %struct.Memory** %MEMORY
  %loadMem_4abb0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24465 = getelementptr inbounds %struct.GPR, %struct.GPR* %24464, i32 0, i32 33
  %24466 = getelementptr inbounds %struct.Reg, %struct.Reg* %24465, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %24466 to i64*
  %24467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24468 = getelementptr inbounds %struct.GPR, %struct.GPR* %24467, i32 0, i32 1
  %24469 = getelementptr inbounds %struct.Reg, %struct.Reg* %24468, i32 0, i32 0
  %EAX.i1304 = bitcast %union.anon* %24469 to i32*
  %24470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24471 = getelementptr inbounds %struct.GPR, %struct.GPR* %24470, i32 0, i32 5
  %24472 = getelementptr inbounds %struct.Reg, %struct.Reg* %24471, i32 0, i32 0
  %RCX.i1305 = bitcast %union.anon* %24472 to i64*
  %24473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24474 = getelementptr inbounds %struct.GPR, %struct.GPR* %24473, i32 0, i32 15
  %24475 = getelementptr inbounds %struct.Reg, %struct.Reg* %24474, i32 0, i32 0
  %RBP.i1306 = bitcast %union.anon* %24475 to i64*
  %24476 = load i64, i64* %RBP.i1306
  %24477 = load i64, i64* %RCX.i1305
  %24478 = mul i64 %24477, 4
  %24479 = add i64 %24476, -176
  %24480 = add i64 %24479, %24478
  %24481 = load i32, i32* %EAX.i1304
  %24482 = zext i32 %24481 to i64
  %24483 = load i64, i64* %PC.i1303
  %24484 = add i64 %24483, 7
  store i64 %24484, i64* %PC.i1303
  %24485 = inttoptr i64 %24480 to i32*
  store i32 %24481, i32* %24485
  store %struct.Memory* %loadMem_4abb0c, %struct.Memory** %MEMORY
  %loadMem_4abb13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24487 = getelementptr inbounds %struct.GPR, %struct.GPR* %24486, i32 0, i32 33
  %24488 = getelementptr inbounds %struct.Reg, %struct.Reg* %24487, i32 0, i32 0
  %PC.i1300 = bitcast %union.anon* %24488 to i64*
  %24489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24490 = getelementptr inbounds %struct.GPR, %struct.GPR* %24489, i32 0, i32 1
  %24491 = getelementptr inbounds %struct.Reg, %struct.Reg* %24490, i32 0, i32 0
  %RAX.i1301 = bitcast %union.anon* %24491 to i64*
  %24492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24493 = getelementptr inbounds %struct.GPR, %struct.GPR* %24492, i32 0, i32 15
  %24494 = getelementptr inbounds %struct.Reg, %struct.Reg* %24493, i32 0, i32 0
  %RBP.i1302 = bitcast %union.anon* %24494 to i64*
  %24495 = load i64, i64* %RBP.i1302
  %24496 = sub i64 %24495, 608
  %24497 = load i64, i64* %PC.i1300
  %24498 = add i64 %24497, 6
  store i64 %24498, i64* %PC.i1300
  %24499 = inttoptr i64 %24496 to i32*
  %24500 = load i32, i32* %24499
  %24501 = zext i32 %24500 to i64
  store i64 %24501, i64* %RAX.i1301, align 8
  store %struct.Memory* %loadMem_4abb13, %struct.Memory** %MEMORY
  %loadMem_4abb19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24503 = getelementptr inbounds %struct.GPR, %struct.GPR* %24502, i32 0, i32 33
  %24504 = getelementptr inbounds %struct.Reg, %struct.Reg* %24503, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %24504 to i64*
  %24505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24506 = getelementptr inbounds %struct.GPR, %struct.GPR* %24505, i32 0, i32 1
  %24507 = getelementptr inbounds %struct.Reg, %struct.Reg* %24506, i32 0, i32 0
  %RAX.i1298 = bitcast %union.anon* %24507 to i64*
  %24508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24509 = getelementptr inbounds %struct.GPR, %struct.GPR* %24508, i32 0, i32 15
  %24510 = getelementptr inbounds %struct.Reg, %struct.Reg* %24509, i32 0, i32 0
  %RBP.i1299 = bitcast %union.anon* %24510 to i64*
  %24511 = load i64, i64* %RAX.i1298
  %24512 = load i64, i64* %RBP.i1299
  %24513 = sub i64 %24512, 580
  %24514 = load i64, i64* %PC.i1297
  %24515 = add i64 %24514, 6
  store i64 %24515, i64* %PC.i1297
  %24516 = trunc i64 %24511 to i32
  %24517 = inttoptr i64 %24513 to i32*
  %24518 = load i32, i32* %24517
  %24519 = sub i32 %24516, %24518
  %24520 = zext i32 %24519 to i64
  store i64 %24520, i64* %RAX.i1298, align 8
  %24521 = icmp ult i32 %24516, %24518
  %24522 = zext i1 %24521 to i8
  %24523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24522, i8* %24523, align 1
  %24524 = and i32 %24519, 255
  %24525 = call i32 @llvm.ctpop.i32(i32 %24524)
  %24526 = trunc i32 %24525 to i8
  %24527 = and i8 %24526, 1
  %24528 = xor i8 %24527, 1
  %24529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24528, i8* %24529, align 1
  %24530 = xor i32 %24518, %24516
  %24531 = xor i32 %24530, %24519
  %24532 = lshr i32 %24531, 4
  %24533 = trunc i32 %24532 to i8
  %24534 = and i8 %24533, 1
  %24535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24534, i8* %24535, align 1
  %24536 = icmp eq i32 %24519, 0
  %24537 = zext i1 %24536 to i8
  %24538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24537, i8* %24538, align 1
  %24539 = lshr i32 %24519, 31
  %24540 = trunc i32 %24539 to i8
  %24541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24540, i8* %24541, align 1
  %24542 = lshr i32 %24516, 31
  %24543 = lshr i32 %24518, 31
  %24544 = xor i32 %24543, %24542
  %24545 = xor i32 %24539, %24542
  %24546 = add i32 %24545, %24544
  %24547 = icmp eq i32 %24546, 2
  %24548 = zext i1 %24547 to i8
  %24549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24548, i8* %24549, align 1
  store %struct.Memory* %loadMem_4abb19, %struct.Memory** %MEMORY
  %loadMem_4abb1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24551 = getelementptr inbounds %struct.GPR, %struct.GPR* %24550, i32 0, i32 33
  %24552 = getelementptr inbounds %struct.Reg, %struct.Reg* %24551, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %24552 to i64*
  %24553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24554 = getelementptr inbounds %struct.GPR, %struct.GPR* %24553, i32 0, i32 5
  %24555 = getelementptr inbounds %struct.Reg, %struct.Reg* %24554, i32 0, i32 0
  %RCX.i1295 = bitcast %union.anon* %24555 to i64*
  %24556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24557 = getelementptr inbounds %struct.GPR, %struct.GPR* %24556, i32 0, i32 15
  %24558 = getelementptr inbounds %struct.Reg, %struct.Reg* %24557, i32 0, i32 0
  %RBP.i1296 = bitcast %union.anon* %24558 to i64*
  %24559 = load i64, i64* %RBP.i1296
  %24560 = sub i64 %24559, 24
  %24561 = load i64, i64* %PC.i1294
  %24562 = add i64 %24561, 4
  store i64 %24562, i64* %PC.i1294
  %24563 = inttoptr i64 %24560 to i32*
  %24564 = load i32, i32* %24563
  %24565 = sext i32 %24564 to i64
  store i64 %24565, i64* %RCX.i1295, align 8
  store %struct.Memory* %loadMem_4abb1f, %struct.Memory** %MEMORY
  %loadMem_4abb23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24567 = getelementptr inbounds %struct.GPR, %struct.GPR* %24566, i32 0, i32 33
  %24568 = getelementptr inbounds %struct.Reg, %struct.Reg* %24567, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %24568 to i64*
  %24569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24570 = getelementptr inbounds %struct.GPR, %struct.GPR* %24569, i32 0, i32 1
  %24571 = getelementptr inbounds %struct.Reg, %struct.Reg* %24570, i32 0, i32 0
  %EAX.i1291 = bitcast %union.anon* %24571 to i32*
  %24572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24573 = getelementptr inbounds %struct.GPR, %struct.GPR* %24572, i32 0, i32 5
  %24574 = getelementptr inbounds %struct.Reg, %struct.Reg* %24573, i32 0, i32 0
  %RCX.i1292 = bitcast %union.anon* %24574 to i64*
  %24575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24576 = getelementptr inbounds %struct.GPR, %struct.GPR* %24575, i32 0, i32 15
  %24577 = getelementptr inbounds %struct.Reg, %struct.Reg* %24576, i32 0, i32 0
  %RBP.i1293 = bitcast %union.anon* %24577 to i64*
  %24578 = load i64, i64* %RBP.i1293
  %24579 = load i64, i64* %RCX.i1292
  %24580 = mul i64 %24579, 4
  %24581 = add i64 %24578, -144
  %24582 = add i64 %24581, %24580
  %24583 = load i32, i32* %EAX.i1291
  %24584 = zext i32 %24583 to i64
  %24585 = load i64, i64* %PC.i1290
  %24586 = add i64 %24585, 7
  store i64 %24586, i64* %PC.i1290
  %24587 = inttoptr i64 %24582 to i32*
  store i32 %24583, i32* %24587
  store %struct.Memory* %loadMem_4abb23, %struct.Memory** %MEMORY
  %loadMem_4abb2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24589 = getelementptr inbounds %struct.GPR, %struct.GPR* %24588, i32 0, i32 33
  %24590 = getelementptr inbounds %struct.Reg, %struct.Reg* %24589, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %24590 to i64*
  %24591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24592 = getelementptr inbounds %struct.GPR, %struct.GPR* %24591, i32 0, i32 1
  %24593 = getelementptr inbounds %struct.Reg, %struct.Reg* %24592, i32 0, i32 0
  %RAX.i1288 = bitcast %union.anon* %24593 to i64*
  %24594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24595 = getelementptr inbounds %struct.GPR, %struct.GPR* %24594, i32 0, i32 15
  %24596 = getelementptr inbounds %struct.Reg, %struct.Reg* %24595, i32 0, i32 0
  %RBP.i1289 = bitcast %union.anon* %24596 to i64*
  %24597 = load i64, i64* %RBP.i1289
  %24598 = sub i64 %24597, 24
  %24599 = load i64, i64* %PC.i1287
  %24600 = add i64 %24599, 3
  store i64 %24600, i64* %PC.i1287
  %24601 = inttoptr i64 %24598 to i32*
  %24602 = load i32, i32* %24601
  %24603 = zext i32 %24602 to i64
  store i64 %24603, i64* %RAX.i1288, align 8
  store %struct.Memory* %loadMem_4abb2a, %struct.Memory** %MEMORY
  %loadMem_4abb2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24605 = getelementptr inbounds %struct.GPR, %struct.GPR* %24604, i32 0, i32 33
  %24606 = getelementptr inbounds %struct.Reg, %struct.Reg* %24605, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %24606 to i64*
  %24607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24608 = getelementptr inbounds %struct.GPR, %struct.GPR* %24607, i32 0, i32 1
  %24609 = getelementptr inbounds %struct.Reg, %struct.Reg* %24608, i32 0, i32 0
  %RAX.i1286 = bitcast %union.anon* %24609 to i64*
  %24610 = load i64, i64* %RAX.i1286
  %24611 = load i64, i64* %PC.i1285
  %24612 = add i64 %24611, 3
  store i64 %24612, i64* %PC.i1285
  %24613 = trunc i64 %24610 to i32
  %24614 = add i32 1, %24613
  %24615 = zext i32 %24614 to i64
  store i64 %24615, i64* %RAX.i1286, align 8
  %24616 = icmp ult i32 %24614, %24613
  %24617 = icmp ult i32 %24614, 1
  %24618 = or i1 %24616, %24617
  %24619 = zext i1 %24618 to i8
  %24620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24619, i8* %24620, align 1
  %24621 = and i32 %24614, 255
  %24622 = call i32 @llvm.ctpop.i32(i32 %24621)
  %24623 = trunc i32 %24622 to i8
  %24624 = and i8 %24623, 1
  %24625 = xor i8 %24624, 1
  %24626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24625, i8* %24626, align 1
  %24627 = xor i64 1, %24610
  %24628 = trunc i64 %24627 to i32
  %24629 = xor i32 %24628, %24614
  %24630 = lshr i32 %24629, 4
  %24631 = trunc i32 %24630 to i8
  %24632 = and i8 %24631, 1
  %24633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24632, i8* %24633, align 1
  %24634 = icmp eq i32 %24614, 0
  %24635 = zext i1 %24634 to i8
  %24636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24635, i8* %24636, align 1
  %24637 = lshr i32 %24614, 31
  %24638 = trunc i32 %24637 to i8
  %24639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24638, i8* %24639, align 1
  %24640 = lshr i32 %24613, 31
  %24641 = xor i32 %24637, %24640
  %24642 = add i32 %24641, %24637
  %24643 = icmp eq i32 %24642, 2
  %24644 = zext i1 %24643 to i8
  %24645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24644, i8* %24645, align 1
  store %struct.Memory* %loadMem_4abb2d, %struct.Memory** %MEMORY
  %loadMem_4abb30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24647 = getelementptr inbounds %struct.GPR, %struct.GPR* %24646, i32 0, i32 33
  %24648 = getelementptr inbounds %struct.Reg, %struct.Reg* %24647, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %24648 to i64*
  %24649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24650 = getelementptr inbounds %struct.GPR, %struct.GPR* %24649, i32 0, i32 1
  %24651 = getelementptr inbounds %struct.Reg, %struct.Reg* %24650, i32 0, i32 0
  %EAX.i1283 = bitcast %union.anon* %24651 to i32*
  %24652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24653 = getelementptr inbounds %struct.GPR, %struct.GPR* %24652, i32 0, i32 15
  %24654 = getelementptr inbounds %struct.Reg, %struct.Reg* %24653, i32 0, i32 0
  %RBP.i1284 = bitcast %union.anon* %24654 to i64*
  %24655 = load i64, i64* %RBP.i1284
  %24656 = sub i64 %24655, 24
  %24657 = load i32, i32* %EAX.i1283
  %24658 = zext i32 %24657 to i64
  %24659 = load i64, i64* %PC.i1282
  %24660 = add i64 %24659, 3
  store i64 %24660, i64* %PC.i1282
  %24661 = inttoptr i64 %24656 to i32*
  store i32 %24657, i32* %24661
  store %struct.Memory* %loadMem_4abb30, %struct.Memory** %MEMORY
  %loadMem_4abb33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24663 = getelementptr inbounds %struct.GPR, %struct.GPR* %24662, i32 0, i32 33
  %24664 = getelementptr inbounds %struct.Reg, %struct.Reg* %24663, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %24664 to i64*
  %24665 = load i64, i64* %PC.i1281
  %24666 = add i64 %24665, -950
  %24667 = load i64, i64* %PC.i1281
  %24668 = add i64 %24667, 5
  store i64 %24668, i64* %PC.i1281
  %24669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24666, i64* %24669, align 8
  store %struct.Memory* %loadMem_4abb33, %struct.Memory** %MEMORY
  br label %block_.L_4ab77d

block_.L_4abb38:                                  ; preds = %block_4ab7b1
  %loadMem_4abb38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24671 = getelementptr inbounds %struct.GPR, %struct.GPR* %24670, i32 0, i32 33
  %24672 = getelementptr inbounds %struct.Reg, %struct.Reg* %24671, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %24672 to i64*
  %24673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24674 = getelementptr inbounds %struct.GPR, %struct.GPR* %24673, i32 0, i32 15
  %24675 = getelementptr inbounds %struct.Reg, %struct.Reg* %24674, i32 0, i32 0
  %RBP.i1280 = bitcast %union.anon* %24675 to i64*
  %24676 = load i64, i64* %RBP.i1280
  %24677 = sub i64 %24676, 24
  %24678 = load i64, i64* %PC.i1279
  %24679 = add i64 %24678, 7
  store i64 %24679, i64* %PC.i1279
  %24680 = inttoptr i64 %24677 to i32*
  store i32 0, i32* %24680
  store %struct.Memory* %loadMem_4abb38, %struct.Memory** %MEMORY
  br label %block_.L_4abb3f

block_.L_4abb3f:                                  ; preds = %block_.L_4abb78, %block_.L_4abb38
  %loadMem_4abb3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24682 = getelementptr inbounds %struct.GPR, %struct.GPR* %24681, i32 0, i32 33
  %24683 = getelementptr inbounds %struct.Reg, %struct.Reg* %24682, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %24683 to i64*
  %24684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24685 = getelementptr inbounds %struct.GPR, %struct.GPR* %24684, i32 0, i32 1
  %24686 = getelementptr inbounds %struct.Reg, %struct.Reg* %24685, i32 0, i32 0
  %EAX.i1277 = bitcast %union.anon* %24686 to i32*
  %24687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24688 = getelementptr inbounds %struct.GPR, %struct.GPR* %24687, i32 0, i32 1
  %24689 = getelementptr inbounds %struct.Reg, %struct.Reg* %24688, i32 0, i32 0
  %RAX.i1278 = bitcast %union.anon* %24689 to i64*
  %24690 = load i64, i64* %RAX.i1278
  %24691 = load i32, i32* %EAX.i1277
  %24692 = zext i32 %24691 to i64
  %24693 = load i64, i64* %PC.i1276
  %24694 = add i64 %24693, 2
  store i64 %24694, i64* %PC.i1276
  %24695 = xor i64 %24692, %24690
  %24696 = trunc i64 %24695 to i32
  %24697 = and i64 %24695, 4294967295
  store i64 %24697, i64* %RAX.i1278, align 8
  %24698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24698, align 1
  %24699 = and i32 %24696, 255
  %24700 = call i32 @llvm.ctpop.i32(i32 %24699)
  %24701 = trunc i32 %24700 to i8
  %24702 = and i8 %24701, 1
  %24703 = xor i8 %24702, 1
  %24704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24703, i8* %24704, align 1
  %24705 = icmp eq i32 %24696, 0
  %24706 = zext i1 %24705 to i8
  %24707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24706, i8* %24707, align 1
  %24708 = lshr i32 %24696, 31
  %24709 = trunc i32 %24708 to i8
  %24710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24709, i8* %24710, align 1
  %24711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24711, align 1
  %24712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24712, align 1
  store %struct.Memory* %loadMem_4abb3f, %struct.Memory** %MEMORY
  %loadMem_4abb41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24714 = getelementptr inbounds %struct.GPR, %struct.GPR* %24713, i32 0, i32 33
  %24715 = getelementptr inbounds %struct.Reg, %struct.Reg* %24714, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %24715 to i64*
  %24716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24717 = getelementptr inbounds %struct.GPR, %struct.GPR* %24716, i32 0, i32 1
  %24718 = getelementptr inbounds %struct.Reg, %struct.Reg* %24717, i32 0, i32 0
  %24719 = bitcast %union.anon* %24718 to %struct.anon.2*
  %AL.i1274 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24719, i32 0, i32 0
  %24720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24721 = getelementptr inbounds %struct.GPR, %struct.GPR* %24720, i32 0, i32 5
  %24722 = getelementptr inbounds %struct.Reg, %struct.Reg* %24721, i32 0, i32 0
  %24723 = bitcast %union.anon* %24722 to %struct.anon.2*
  %CL.i1275 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24723, i32 0, i32 0
  %24724 = load i8, i8* %AL.i1274
  %24725 = zext i8 %24724 to i64
  %24726 = load i64, i64* %PC.i1273
  %24727 = add i64 %24726, 2
  store i64 %24727, i64* %PC.i1273
  store i8 %24724, i8* %CL.i1275, align 1
  store %struct.Memory* %loadMem_4abb41, %struct.Memory** %MEMORY
  %loadMem_4abb43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24729 = getelementptr inbounds %struct.GPR, %struct.GPR* %24728, i32 0, i32 33
  %24730 = getelementptr inbounds %struct.Reg, %struct.Reg* %24729, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %24730 to i64*
  %24731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24732 = getelementptr inbounds %struct.GPR, %struct.GPR* %24731, i32 0, i32 15
  %24733 = getelementptr inbounds %struct.Reg, %struct.Reg* %24732, i32 0, i32 0
  %RBP.i1272 = bitcast %union.anon* %24733 to i64*
  %24734 = load i64, i64* %RBP.i1272
  %24735 = sub i64 %24734, 24
  %24736 = load i64, i64* %PC.i1271
  %24737 = add i64 %24736, 4
  store i64 %24737, i64* %PC.i1271
  %24738 = inttoptr i64 %24735 to i32*
  %24739 = load i32, i32* %24738
  %24740 = sub i32 %24739, 8
  %24741 = icmp ult i32 %24739, 8
  %24742 = zext i1 %24741 to i8
  %24743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24742, i8* %24743, align 1
  %24744 = and i32 %24740, 255
  %24745 = call i32 @llvm.ctpop.i32(i32 %24744)
  %24746 = trunc i32 %24745 to i8
  %24747 = and i8 %24746, 1
  %24748 = xor i8 %24747, 1
  %24749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24748, i8* %24749, align 1
  %24750 = xor i32 %24739, 8
  %24751 = xor i32 %24750, %24740
  %24752 = lshr i32 %24751, 4
  %24753 = trunc i32 %24752 to i8
  %24754 = and i8 %24753, 1
  %24755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24754, i8* %24755, align 1
  %24756 = icmp eq i32 %24740, 0
  %24757 = zext i1 %24756 to i8
  %24758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24757, i8* %24758, align 1
  %24759 = lshr i32 %24740, 31
  %24760 = trunc i32 %24759 to i8
  %24761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24760, i8* %24761, align 1
  %24762 = lshr i32 %24739, 31
  %24763 = xor i32 %24759, %24762
  %24764 = add i32 %24763, %24762
  %24765 = icmp eq i32 %24764, 2
  %24766 = zext i1 %24765 to i8
  %24767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24766, i8* %24767, align 1
  store %struct.Memory* %loadMem_4abb43, %struct.Memory** %MEMORY
  %loadMem_4abb47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24769 = getelementptr inbounds %struct.GPR, %struct.GPR* %24768, i32 0, i32 33
  %24770 = getelementptr inbounds %struct.Reg, %struct.Reg* %24769, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %24770 to i64*
  %24771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24772 = getelementptr inbounds %struct.GPR, %struct.GPR* %24771, i32 0, i32 5
  %24773 = getelementptr inbounds %struct.Reg, %struct.Reg* %24772, i32 0, i32 0
  %24774 = bitcast %union.anon* %24773 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24774, i32 0, i32 0
  %24775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24776 = getelementptr inbounds %struct.GPR, %struct.GPR* %24775, i32 0, i32 15
  %24777 = getelementptr inbounds %struct.Reg, %struct.Reg* %24776, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %24777 to i64*
  %24778 = load i64, i64* %RBP.i1270
  %24779 = sub i64 %24778, 718
  %24780 = load i8, i8* %CL.i
  %24781 = zext i8 %24780 to i64
  %24782 = load i64, i64* %PC.i1269
  %24783 = add i64 %24782, 6
  store i64 %24783, i64* %PC.i1269
  %24784 = inttoptr i64 %24779 to i8*
  store i8 %24780, i8* %24784
  store %struct.Memory* %loadMem_4abb47, %struct.Memory** %MEMORY
  %loadMem_4abb4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24786 = getelementptr inbounds %struct.GPR, %struct.GPR* %24785, i32 0, i32 33
  %24787 = getelementptr inbounds %struct.Reg, %struct.Reg* %24786, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %24787 to i64*
  %24788 = load i64, i64* %PC.i1268
  %24789 = add i64 %24788, 24
  %24790 = load i64, i64* %PC.i1268
  %24791 = add i64 %24790, 6
  %24792 = load i64, i64* %PC.i1268
  %24793 = add i64 %24792, 6
  store i64 %24793, i64* %PC.i1268
  %24794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24795 = load i8, i8* %24794, align 1
  %24796 = icmp ne i8 %24795, 0
  %24797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %24798 = load i8, i8* %24797, align 1
  %24799 = icmp ne i8 %24798, 0
  %24800 = xor i1 %24796, %24799
  %24801 = xor i1 %24800, true
  %24802 = zext i1 %24801 to i8
  store i8 %24802, i8* %BRANCH_TAKEN, align 1
  %24803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24804 = select i1 %24800, i64 %24791, i64 %24789
  store i64 %24804, i64* %24803, align 8
  store %struct.Memory* %loadMem_4abb4d, %struct.Memory** %MEMORY
  %loadBr_4abb4d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4abb4d = icmp eq i8 %loadBr_4abb4d, 1
  br i1 %cmpBr_4abb4d, label %block_.L_4abb65, label %block_4abb53

block_4abb53:                                     ; preds = %block_.L_4abb3f
  %loadMem_4abb53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24806 = getelementptr inbounds %struct.GPR, %struct.GPR* %24805, i32 0, i32 33
  %24807 = getelementptr inbounds %struct.Reg, %struct.Reg* %24806, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %24807 to i64*
  %24808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24809 = getelementptr inbounds %struct.GPR, %struct.GPR* %24808, i32 0, i32 15
  %24810 = getelementptr inbounds %struct.Reg, %struct.Reg* %24809, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %24810 to i64*
  %24811 = load i64, i64* %RBP.i1267
  %24812 = sub i64 %24811, 412
  %24813 = load i64, i64* %PC.i1266
  %24814 = add i64 %24813, 7
  store i64 %24814, i64* %PC.i1266
  %24815 = inttoptr i64 %24812 to i32*
  %24816 = load i32, i32* %24815
  %24817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24817, align 1
  %24818 = and i32 %24816, 255
  %24819 = call i32 @llvm.ctpop.i32(i32 %24818)
  %24820 = trunc i32 %24819 to i8
  %24821 = and i8 %24820, 1
  %24822 = xor i8 %24821, 1
  %24823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24822, i8* %24823, align 1
  %24824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24824, align 1
  %24825 = icmp eq i32 %24816, 0
  %24826 = zext i1 %24825 to i8
  %24827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24826, i8* %24827, align 1
  %24828 = lshr i32 %24816, 31
  %24829 = trunc i32 %24828 to i8
  %24830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24829, i8* %24830, align 1
  %24831 = lshr i32 %24816, 31
  %24832 = xor i32 %24828, %24831
  %24833 = add i32 %24832, %24831
  %24834 = icmp eq i32 %24833, 2
  %24835 = zext i1 %24834 to i8
  %24836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24835, i8* %24836, align 1
  store %struct.Memory* %loadMem_4abb53, %struct.Memory** %MEMORY
  %loadMem_4abb5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24838 = getelementptr inbounds %struct.GPR, %struct.GPR* %24837, i32 0, i32 33
  %24839 = getelementptr inbounds %struct.Reg, %struct.Reg* %24838, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %24839 to i64*
  %24840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24841 = getelementptr inbounds %struct.GPR, %struct.GPR* %24840, i32 0, i32 1
  %24842 = getelementptr inbounds %struct.Reg, %struct.Reg* %24841, i32 0, i32 0
  %24843 = bitcast %union.anon* %24842 to %struct.anon.2*
  %AL.i1265 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24843, i32 0, i32 0
  %24844 = load i64, i64* %PC.i1264
  %24845 = add i64 %24844, 3
  store i64 %24845, i64* %PC.i1264
  %24846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24847 = load i8, i8* %24846, align 1
  %24848 = icmp eq i8 %24847, 0
  %24849 = zext i1 %24848 to i8
  store i8 %24849, i8* %AL.i1265, align 1
  store %struct.Memory* %loadMem_4abb5a, %struct.Memory** %MEMORY
  %loadMem_4abb5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24851 = getelementptr inbounds %struct.GPR, %struct.GPR* %24850, i32 0, i32 33
  %24852 = getelementptr inbounds %struct.Reg, %struct.Reg* %24851, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %24852 to i64*
  %24853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24854 = getelementptr inbounds %struct.GPR, %struct.GPR* %24853, i32 0, i32 1
  %24855 = getelementptr inbounds %struct.Reg, %struct.Reg* %24854, i32 0, i32 0
  %24856 = bitcast %union.anon* %24855 to %struct.anon.2*
  %AL.i1263 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24856, i32 0, i32 0
  %24857 = load i8, i8* %AL.i1263
  %24858 = zext i8 %24857 to i64
  %24859 = load i64, i64* %PC.i1262
  %24860 = add i64 %24859, 2
  store i64 %24860, i64* %PC.i1262
  %24861 = xor i64 255, %24858
  %24862 = trunc i64 %24861 to i8
  store i8 %24862, i8* %AL.i1263, align 1
  %24863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24863, align 1
  %24864 = trunc i64 %24861 to i32
  %24865 = and i32 %24864, 255
  %24866 = call i32 @llvm.ctpop.i32(i32 %24865)
  %24867 = trunc i32 %24866 to i8
  %24868 = and i8 %24867, 1
  %24869 = xor i8 %24868, 1
  %24870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24869, i8* %24870, align 1
  %24871 = icmp eq i8 %24862, 0
  %24872 = zext i1 %24871 to i8
  %24873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24872, i8* %24873, align 1
  %24874 = lshr i8 %24862, 7
  %24875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24874, i8* %24875, align 1
  %24876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24876, align 1
  %24877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24877, align 1
  store %struct.Memory* %loadMem_4abb5d, %struct.Memory** %MEMORY
  %loadMem_4abb5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24879 = getelementptr inbounds %struct.GPR, %struct.GPR* %24878, i32 0, i32 33
  %24880 = getelementptr inbounds %struct.Reg, %struct.Reg* %24879, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %24880 to i64*
  %24881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24882 = getelementptr inbounds %struct.GPR, %struct.GPR* %24881, i32 0, i32 1
  %24883 = getelementptr inbounds %struct.Reg, %struct.Reg* %24882, i32 0, i32 0
  %24884 = bitcast %union.anon* %24883 to %struct.anon.2*
  %AL.i1260 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24884, i32 0, i32 0
  %24885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24886 = getelementptr inbounds %struct.GPR, %struct.GPR* %24885, i32 0, i32 15
  %24887 = getelementptr inbounds %struct.Reg, %struct.Reg* %24886, i32 0, i32 0
  %RBP.i1261 = bitcast %union.anon* %24887 to i64*
  %24888 = load i64, i64* %RBP.i1261
  %24889 = sub i64 %24888, 718
  %24890 = load i8, i8* %AL.i1260
  %24891 = zext i8 %24890 to i64
  %24892 = load i64, i64* %PC.i1259
  %24893 = add i64 %24892, 6
  store i64 %24893, i64* %PC.i1259
  %24894 = inttoptr i64 %24889 to i8*
  store i8 %24890, i8* %24894
  store %struct.Memory* %loadMem_4abb5f, %struct.Memory** %MEMORY
  br label %block_.L_4abb65

block_.L_4abb65:                                  ; preds = %block_4abb53, %block_.L_4abb3f
  %loadMem_4abb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24896 = getelementptr inbounds %struct.GPR, %struct.GPR* %24895, i32 0, i32 33
  %24897 = getelementptr inbounds %struct.Reg, %struct.Reg* %24896, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %24897 to i64*
  %24898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24899 = getelementptr inbounds %struct.GPR, %struct.GPR* %24898, i32 0, i32 1
  %24900 = getelementptr inbounds %struct.Reg, %struct.Reg* %24899, i32 0, i32 0
  %24901 = bitcast %union.anon* %24900 to %struct.anon.2*
  %AL.i1257 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24901, i32 0, i32 0
  %24902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24903 = getelementptr inbounds %struct.GPR, %struct.GPR* %24902, i32 0, i32 15
  %24904 = getelementptr inbounds %struct.Reg, %struct.Reg* %24903, i32 0, i32 0
  %RBP.i1258 = bitcast %union.anon* %24904 to i64*
  %24905 = load i64, i64* %RBP.i1258
  %24906 = sub i64 %24905, 718
  %24907 = load i64, i64* %PC.i1256
  %24908 = add i64 %24907, 6
  store i64 %24908, i64* %PC.i1256
  %24909 = inttoptr i64 %24906 to i8*
  %24910 = load i8, i8* %24909
  store i8 %24910, i8* %AL.i1257, align 1
  store %struct.Memory* %loadMem_4abb65, %struct.Memory** %MEMORY
  %loadMem_4abb6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %24911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24912 = getelementptr inbounds %struct.GPR, %struct.GPR* %24911, i32 0, i32 33
  %24913 = getelementptr inbounds %struct.Reg, %struct.Reg* %24912, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %24913 to i64*
  %24914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24915 = getelementptr inbounds %struct.GPR, %struct.GPR* %24914, i32 0, i32 1
  %24916 = getelementptr inbounds %struct.Reg, %struct.Reg* %24915, i32 0, i32 0
  %24917 = bitcast %union.anon* %24916 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24917, i32 0, i32 0
  %24918 = load i8, i8* %AL.i
  %24919 = zext i8 %24918 to i64
  %24920 = load i64, i64* %PC.i1255
  %24921 = add i64 %24920, 2
  store i64 %24921, i64* %PC.i1255
  %24922 = and i64 1, %24919
  %24923 = trunc i64 %24922 to i8
  %24924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24924, align 1
  %24925 = trunc i64 %24922 to i32
  %24926 = and i32 %24925, 255
  %24927 = call i32 @llvm.ctpop.i32(i32 %24926)
  %24928 = trunc i32 %24927 to i8
  %24929 = and i8 %24928, 1
  %24930 = xor i8 %24929, 1
  %24931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24930, i8* %24931, align 1
  %24932 = icmp eq i8 %24923, 0
  %24933 = zext i1 %24932 to i8
  %24934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24933, i8* %24934, align 1
  %24935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24935, align 1
  %24936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24936, align 1
  %24937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24937, align 1
  store %struct.Memory* %loadMem_4abb6b, %struct.Memory** %MEMORY
  %loadMem_4abb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24939 = getelementptr inbounds %struct.GPR, %struct.GPR* %24938, i32 0, i32 33
  %24940 = getelementptr inbounds %struct.Reg, %struct.Reg* %24939, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %24940 to i64*
  %24941 = load i64, i64* %PC.i1254
  %24942 = add i64 %24941, 11
  %24943 = load i64, i64* %PC.i1254
  %24944 = add i64 %24943, 6
  %24945 = load i64, i64* %PC.i1254
  %24946 = add i64 %24945, 6
  store i64 %24946, i64* %PC.i1254
  %24947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24948 = load i8, i8* %24947, align 1
  %24949 = icmp eq i8 %24948, 0
  %24950 = zext i1 %24949 to i8
  store i8 %24950, i8* %BRANCH_TAKEN, align 1
  %24951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24952 = select i1 %24949, i64 %24942, i64 %24944
  store i64 %24952, i64* %24951, align 8
  store %struct.Memory* %loadMem_4abb6d, %struct.Memory** %MEMORY
  %loadBr_4abb6d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4abb6d = icmp eq i8 %loadBr_4abb6d, 1
  br i1 %cmpBr_4abb6d, label %block_.L_4abb78, label %block_4abb73

block_4abb73:                                     ; preds = %block_.L_4abb65
  %loadMem_4abb73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24954 = getelementptr inbounds %struct.GPR, %struct.GPR* %24953, i32 0, i32 33
  %24955 = getelementptr inbounds %struct.Reg, %struct.Reg* %24954, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %24955 to i64*
  %24956 = load i64, i64* %PC.i1253
  %24957 = add i64 %24956, 1018
  %24958 = load i64, i64* %PC.i1253
  %24959 = add i64 %24958, 5
  store i64 %24959, i64* %PC.i1253
  %24960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24957, i64* %24960, align 8
  store %struct.Memory* %loadMem_4abb73, %struct.Memory** %MEMORY
  br label %block_.L_4abf6d

block_.L_4abb78:                                  ; preds = %block_.L_4abb65
  %loadMem_4abb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24962 = getelementptr inbounds %struct.GPR, %struct.GPR* %24961, i32 0, i32 33
  %24963 = getelementptr inbounds %struct.Reg, %struct.Reg* %24962, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %24963 to i64*
  %24964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24965 = getelementptr inbounds %struct.GPR, %struct.GPR* %24964, i32 0, i32 1
  %24966 = getelementptr inbounds %struct.Reg, %struct.Reg* %24965, i32 0, i32 0
  %EAX.i1251 = bitcast %union.anon* %24966 to i32*
  %24967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24968 = getelementptr inbounds %struct.GPR, %struct.GPR* %24967, i32 0, i32 1
  %24969 = getelementptr inbounds %struct.Reg, %struct.Reg* %24968, i32 0, i32 0
  %RAX.i1252 = bitcast %union.anon* %24969 to i64*
  %24970 = load i64, i64* %RAX.i1252
  %24971 = load i32, i32* %EAX.i1251
  %24972 = zext i32 %24971 to i64
  %24973 = load i64, i64* %PC.i1250
  %24974 = add i64 %24973, 2
  store i64 %24974, i64* %PC.i1250
  %24975 = xor i64 %24972, %24970
  %24976 = trunc i64 %24975 to i32
  %24977 = and i64 %24975, 4294967295
  store i64 %24977, i64* %RAX.i1252, align 8
  %24978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24978, align 1
  %24979 = and i32 %24976, 255
  %24980 = call i32 @llvm.ctpop.i32(i32 %24979)
  %24981 = trunc i32 %24980 to i8
  %24982 = and i8 %24981, 1
  %24983 = xor i8 %24982, 1
  %24984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24983, i8* %24984, align 1
  %24985 = icmp eq i32 %24976, 0
  %24986 = zext i1 %24985 to i8
  %24987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24986, i8* %24987, align 1
  %24988 = lshr i32 %24976, 31
  %24989 = trunc i32 %24988 to i8
  %24990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24989, i8* %24990, align 1
  %24991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24991, align 1
  %24992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24992, align 1
  store %struct.Memory* %loadMem_4abb78, %struct.Memory** %MEMORY
  %loadMem_4abb7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24994 = getelementptr inbounds %struct.GPR, %struct.GPR* %24993, i32 0, i32 33
  %24995 = getelementptr inbounds %struct.Reg, %struct.Reg* %24994, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %24995 to i64*
  %24996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24997 = getelementptr inbounds %struct.GPR, %struct.GPR* %24996, i32 0, i32 5
  %24998 = getelementptr inbounds %struct.Reg, %struct.Reg* %24997, i32 0, i32 0
  %RCX.i1248 = bitcast %union.anon* %24998 to i64*
  %24999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25000 = getelementptr inbounds %struct.GPR, %struct.GPR* %24999, i32 0, i32 15
  %25001 = getelementptr inbounds %struct.Reg, %struct.Reg* %25000, i32 0, i32 0
  %RBP.i1249 = bitcast %union.anon* %25001 to i64*
  %25002 = load i64, i64* %RBP.i1249
  %25003 = sub i64 %25002, 368
  %25004 = load i64, i64* %PC.i1247
  %25005 = add i64 %25004, 7
  store i64 %25005, i64* %PC.i1247
  store i64 %25003, i64* %RCX.i1248, align 8
  store %struct.Memory* %loadMem_4abb7a, %struct.Memory** %MEMORY
  %loadMem_4abb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25007 = getelementptr inbounds %struct.GPR, %struct.GPR* %25006, i32 0, i32 33
  %25008 = getelementptr inbounds %struct.Reg, %struct.Reg* %25007, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %25008 to i64*
  %25009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25010 = getelementptr inbounds %struct.GPR, %struct.GPR* %25009, i32 0, i32 7
  %25011 = getelementptr inbounds %struct.Reg, %struct.Reg* %25010, i32 0, i32 0
  %RDX.i1245 = bitcast %union.anon* %25011 to i64*
  %25012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25013 = getelementptr inbounds %struct.GPR, %struct.GPR* %25012, i32 0, i32 15
  %25014 = getelementptr inbounds %struct.Reg, %struct.Reg* %25013, i32 0, i32 0
  %RBP.i1246 = bitcast %union.anon* %25014 to i64*
  %25015 = load i64, i64* %RBP.i1246
  %25016 = sub i64 %25015, 24
  %25017 = load i64, i64* %PC.i1244
  %25018 = add i64 %25017, 4
  store i64 %25018, i64* %PC.i1244
  %25019 = inttoptr i64 %25016 to i32*
  %25020 = load i32, i32* %25019
  %25021 = sext i32 %25020 to i64
  store i64 %25021, i64* %RDX.i1245, align 8
  store %struct.Memory* %loadMem_4abb81, %struct.Memory** %MEMORY
  %loadMem_4abb85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25023 = getelementptr inbounds %struct.GPR, %struct.GPR* %25022, i32 0, i32 33
  %25024 = getelementptr inbounds %struct.Reg, %struct.Reg* %25023, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %25024 to i64*
  %25025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25026 = getelementptr inbounds %struct.GPR, %struct.GPR* %25025, i32 0, i32 7
  %25027 = getelementptr inbounds %struct.Reg, %struct.Reg* %25026, i32 0, i32 0
  %RDX.i1243 = bitcast %union.anon* %25027 to i64*
  %25028 = load i64, i64* %RDX.i1243
  %25029 = load i64, i64* %PC.i1242
  %25030 = add i64 %25029, 4
  store i64 %25030, i64* %PC.i1242
  %25031 = shl i64 %25028, 4
  %25032 = icmp slt i64 %25031, 0
  %25033 = shl i64 %25031, 1
  store i64 %25033, i64* %RDX.i1243, align 8
  %25034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25035 = zext i1 %25032 to i8
  store i8 %25035, i8* %25034, align 1
  %25036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25037 = trunc i64 %25033 to i32
  %25038 = and i32 %25037, 254
  %25039 = call i32 @llvm.ctpop.i32(i32 %25038)
  %25040 = trunc i32 %25039 to i8
  %25041 = and i8 %25040, 1
  %25042 = xor i8 %25041, 1
  store i8 %25042, i8* %25036, align 1
  %25043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25043, align 1
  %25044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25045 = icmp eq i64 %25033, 0
  %25046 = zext i1 %25045 to i8
  store i8 %25046, i8* %25044, align 1
  %25047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25048 = lshr i64 %25033, 63
  %25049 = trunc i64 %25048 to i8
  store i8 %25049, i8* %25047, align 1
  %25050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25050, align 1
  store %struct.Memory* %loadMem_4abb85, %struct.Memory** %MEMORY
  %loadMem_4abb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25052 = getelementptr inbounds %struct.GPR, %struct.GPR* %25051, i32 0, i32 33
  %25053 = getelementptr inbounds %struct.Reg, %struct.Reg* %25052, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %25053 to i64*
  %25054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25055 = getelementptr inbounds %struct.GPR, %struct.GPR* %25054, i32 0, i32 5
  %25056 = getelementptr inbounds %struct.Reg, %struct.Reg* %25055, i32 0, i32 0
  %RCX.i1240 = bitcast %union.anon* %25056 to i64*
  %25057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25058 = getelementptr inbounds %struct.GPR, %struct.GPR* %25057, i32 0, i32 9
  %25059 = getelementptr inbounds %struct.Reg, %struct.Reg* %25058, i32 0, i32 0
  %RSI.i1241 = bitcast %union.anon* %25059 to i64*
  %25060 = load i64, i64* %RCX.i1240
  %25061 = load i64, i64* %PC.i1239
  %25062 = add i64 %25061, 3
  store i64 %25062, i64* %PC.i1239
  store i64 %25060, i64* %RSI.i1241, align 8
  store %struct.Memory* %loadMem_4abb89, %struct.Memory** %MEMORY
  %loadMem_4abb8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %25063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25064 = getelementptr inbounds %struct.GPR, %struct.GPR* %25063, i32 0, i32 33
  %25065 = getelementptr inbounds %struct.Reg, %struct.Reg* %25064, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %25065 to i64*
  %25066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25067 = getelementptr inbounds %struct.GPR, %struct.GPR* %25066, i32 0, i32 7
  %25068 = getelementptr inbounds %struct.Reg, %struct.Reg* %25067, i32 0, i32 0
  %RDX.i1237 = bitcast %union.anon* %25068 to i64*
  %25069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25070 = getelementptr inbounds %struct.GPR, %struct.GPR* %25069, i32 0, i32 9
  %25071 = getelementptr inbounds %struct.Reg, %struct.Reg* %25070, i32 0, i32 0
  %RSI.i1238 = bitcast %union.anon* %25071 to i64*
  %25072 = load i64, i64* %RSI.i1238
  %25073 = load i64, i64* %RDX.i1237
  %25074 = load i64, i64* %PC.i1236
  %25075 = add i64 %25074, 3
  store i64 %25075, i64* %PC.i1236
  %25076 = add i64 %25073, %25072
  store i64 %25076, i64* %RSI.i1238, align 8
  %25077 = icmp ult i64 %25076, %25072
  %25078 = icmp ult i64 %25076, %25073
  %25079 = or i1 %25077, %25078
  %25080 = zext i1 %25079 to i8
  %25081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25080, i8* %25081, align 1
  %25082 = trunc i64 %25076 to i32
  %25083 = and i32 %25082, 255
  %25084 = call i32 @llvm.ctpop.i32(i32 %25083)
  %25085 = trunc i32 %25084 to i8
  %25086 = and i8 %25085, 1
  %25087 = xor i8 %25086, 1
  %25088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25087, i8* %25088, align 1
  %25089 = xor i64 %25073, %25072
  %25090 = xor i64 %25089, %25076
  %25091 = lshr i64 %25090, 4
  %25092 = trunc i64 %25091 to i8
  %25093 = and i8 %25092, 1
  %25094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25093, i8* %25094, align 1
  %25095 = icmp eq i64 %25076, 0
  %25096 = zext i1 %25095 to i8
  %25097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25096, i8* %25097, align 1
  %25098 = lshr i64 %25076, 63
  %25099 = trunc i64 %25098 to i8
  %25100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25099, i8* %25100, align 1
  %25101 = lshr i64 %25072, 63
  %25102 = lshr i64 %25073, 63
  %25103 = xor i64 %25098, %25101
  %25104 = xor i64 %25098, %25102
  %25105 = add i64 %25103, %25104
  %25106 = icmp eq i64 %25105, 2
  %25107 = zext i1 %25106 to i8
  %25108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25107, i8* %25108, align 1
  store %struct.Memory* %loadMem_4abb8c, %struct.Memory** %MEMORY
  %loadMem_4abb8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %25109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25110 = getelementptr inbounds %struct.GPR, %struct.GPR* %25109, i32 0, i32 33
  %25111 = getelementptr inbounds %struct.Reg, %struct.Reg* %25110, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %25111 to i64*
  %25112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25113 = getelementptr inbounds %struct.GPR, %struct.GPR* %25112, i32 0, i32 9
  %25114 = getelementptr inbounds %struct.Reg, %struct.Reg* %25113, i32 0, i32 0
  %RSI.i1234 = bitcast %union.anon* %25114 to i64*
  %25115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25116 = getelementptr inbounds %struct.GPR, %struct.GPR* %25115, i32 0, i32 11
  %25117 = getelementptr inbounds %struct.Reg, %struct.Reg* %25116, i32 0, i32 0
  %RDI.i1235 = bitcast %union.anon* %25117 to i64*
  %25118 = load i64, i64* %RSI.i1234
  %25119 = load i64, i64* %PC.i1233
  %25120 = add i64 %25119, 2
  store i64 %25120, i64* %PC.i1233
  %25121 = inttoptr i64 %25118 to i32*
  %25122 = load i32, i32* %25121
  %25123 = zext i32 %25122 to i64
  store i64 %25123, i64* %RDI.i1235, align 8
  store %struct.Memory* %loadMem_4abb8f, %struct.Memory** %MEMORY
  %loadMem_4abb91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25125 = getelementptr inbounds %struct.GPR, %struct.GPR* %25124, i32 0, i32 33
  %25126 = getelementptr inbounds %struct.Reg, %struct.Reg* %25125, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %25126 to i64*
  %25127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25128 = getelementptr inbounds %struct.GPR, %struct.GPR* %25127, i32 0, i32 7
  %25129 = getelementptr inbounds %struct.Reg, %struct.Reg* %25128, i32 0, i32 0
  %RDX.i1231 = bitcast %union.anon* %25129 to i64*
  %25130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25131 = getelementptr inbounds %struct.GPR, %struct.GPR* %25130, i32 0, i32 15
  %25132 = getelementptr inbounds %struct.Reg, %struct.Reg* %25131, i32 0, i32 0
  %RBP.i1232 = bitcast %union.anon* %25132 to i64*
  %25133 = load i64, i64* %RBP.i1232
  %25134 = sub i64 %25133, 24
  %25135 = load i64, i64* %PC.i1230
  %25136 = add i64 %25135, 4
  store i64 %25136, i64* %PC.i1230
  %25137 = inttoptr i64 %25134 to i32*
  %25138 = load i32, i32* %25137
  %25139 = sext i32 %25138 to i64
  store i64 %25139, i64* %RDX.i1231, align 8
  store %struct.Memory* %loadMem_4abb91, %struct.Memory** %MEMORY
  %loadMem_4abb95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25141 = getelementptr inbounds %struct.GPR, %struct.GPR* %25140, i32 0, i32 33
  %25142 = getelementptr inbounds %struct.Reg, %struct.Reg* %25141, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %25142 to i64*
  %25143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25144 = getelementptr inbounds %struct.GPR, %struct.GPR* %25143, i32 0, i32 7
  %25145 = getelementptr inbounds %struct.Reg, %struct.Reg* %25144, i32 0, i32 0
  %RDX.i1229 = bitcast %union.anon* %25145 to i64*
  %25146 = load i64, i64* %RDX.i1229
  %25147 = load i64, i64* %PC.i1228
  %25148 = add i64 %25147, 4
  store i64 %25148, i64* %PC.i1228
  %25149 = shl i64 %25146, 4
  %25150 = icmp slt i64 %25149, 0
  %25151 = shl i64 %25149, 1
  store i64 %25151, i64* %RDX.i1229, align 8
  %25152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25153 = zext i1 %25150 to i8
  store i8 %25153, i8* %25152, align 1
  %25154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25155 = trunc i64 %25151 to i32
  %25156 = and i32 %25155, 254
  %25157 = call i32 @llvm.ctpop.i32(i32 %25156)
  %25158 = trunc i32 %25157 to i8
  %25159 = and i8 %25158, 1
  %25160 = xor i8 %25159, 1
  store i8 %25160, i8* %25154, align 1
  %25161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25161, align 1
  %25162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25163 = icmp eq i64 %25151, 0
  %25164 = zext i1 %25163 to i8
  store i8 %25164, i8* %25162, align 1
  %25165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25166 = lshr i64 %25151, 63
  %25167 = trunc i64 %25166 to i8
  store i8 %25167, i8* %25165, align 1
  %25168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25168, align 1
  store %struct.Memory* %loadMem_4abb95, %struct.Memory** %MEMORY
  %loadMem_4abb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25170 = getelementptr inbounds %struct.GPR, %struct.GPR* %25169, i32 0, i32 33
  %25171 = getelementptr inbounds %struct.Reg, %struct.Reg* %25170, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %25171 to i64*
  %25172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25173 = getelementptr inbounds %struct.GPR, %struct.GPR* %25172, i32 0, i32 5
  %25174 = getelementptr inbounds %struct.Reg, %struct.Reg* %25173, i32 0, i32 0
  %RCX.i1226 = bitcast %union.anon* %25174 to i64*
  %25175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25176 = getelementptr inbounds %struct.GPR, %struct.GPR* %25175, i32 0, i32 9
  %25177 = getelementptr inbounds %struct.Reg, %struct.Reg* %25176, i32 0, i32 0
  %RSI.i1227 = bitcast %union.anon* %25177 to i64*
  %25178 = load i64, i64* %RCX.i1226
  %25179 = load i64, i64* %PC.i1225
  %25180 = add i64 %25179, 3
  store i64 %25180, i64* %PC.i1225
  store i64 %25178, i64* %RSI.i1227, align 8
  store %struct.Memory* %loadMem_4abb99, %struct.Memory** %MEMORY
  %loadMem_4abb9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %25181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25182 = getelementptr inbounds %struct.GPR, %struct.GPR* %25181, i32 0, i32 33
  %25183 = getelementptr inbounds %struct.Reg, %struct.Reg* %25182, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %25183 to i64*
  %25184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25185 = getelementptr inbounds %struct.GPR, %struct.GPR* %25184, i32 0, i32 7
  %25186 = getelementptr inbounds %struct.Reg, %struct.Reg* %25185, i32 0, i32 0
  %RDX.i1223 = bitcast %union.anon* %25186 to i64*
  %25187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25188 = getelementptr inbounds %struct.GPR, %struct.GPR* %25187, i32 0, i32 9
  %25189 = getelementptr inbounds %struct.Reg, %struct.Reg* %25188, i32 0, i32 0
  %RSI.i1224 = bitcast %union.anon* %25189 to i64*
  %25190 = load i64, i64* %RSI.i1224
  %25191 = load i64, i64* %RDX.i1223
  %25192 = load i64, i64* %PC.i1222
  %25193 = add i64 %25192, 3
  store i64 %25193, i64* %PC.i1222
  %25194 = add i64 %25191, %25190
  store i64 %25194, i64* %RSI.i1224, align 8
  %25195 = icmp ult i64 %25194, %25190
  %25196 = icmp ult i64 %25194, %25191
  %25197 = or i1 %25195, %25196
  %25198 = zext i1 %25197 to i8
  %25199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25198, i8* %25199, align 1
  %25200 = trunc i64 %25194 to i32
  %25201 = and i32 %25200, 255
  %25202 = call i32 @llvm.ctpop.i32(i32 %25201)
  %25203 = trunc i32 %25202 to i8
  %25204 = and i8 %25203, 1
  %25205 = xor i8 %25204, 1
  %25206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25205, i8* %25206, align 1
  %25207 = xor i64 %25191, %25190
  %25208 = xor i64 %25207, %25194
  %25209 = lshr i64 %25208, 4
  %25210 = trunc i64 %25209 to i8
  %25211 = and i8 %25210, 1
  %25212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25211, i8* %25212, align 1
  %25213 = icmp eq i64 %25194, 0
  %25214 = zext i1 %25213 to i8
  %25215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25214, i8* %25215, align 1
  %25216 = lshr i64 %25194, 63
  %25217 = trunc i64 %25216 to i8
  %25218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25217, i8* %25218, align 1
  %25219 = lshr i64 %25190, 63
  %25220 = lshr i64 %25191, 63
  %25221 = xor i64 %25216, %25219
  %25222 = xor i64 %25216, %25220
  %25223 = add i64 %25221, %25222
  %25224 = icmp eq i64 %25223, 2
  %25225 = zext i1 %25224 to i8
  %25226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25225, i8* %25226, align 1
  store %struct.Memory* %loadMem_4abb9c, %struct.Memory** %MEMORY
  %loadMem_4abb9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %25227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25228 = getelementptr inbounds %struct.GPR, %struct.GPR* %25227, i32 0, i32 33
  %25229 = getelementptr inbounds %struct.Reg, %struct.Reg* %25228, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %25229 to i64*
  %25230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25231 = getelementptr inbounds %struct.GPR, %struct.GPR* %25230, i32 0, i32 9
  %25232 = getelementptr inbounds %struct.Reg, %struct.Reg* %25231, i32 0, i32 0
  %RSI.i1220 = bitcast %union.anon* %25232 to i64*
  %25233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25234 = getelementptr inbounds %struct.GPR, %struct.GPR* %25233, i32 0, i32 11
  %25235 = getelementptr inbounds %struct.Reg, %struct.Reg* %25234, i32 0, i32 0
  %RDI.i1221 = bitcast %union.anon* %25235 to i64*
  %25236 = load i64, i64* %RDI.i1221
  %25237 = load i64, i64* %RSI.i1220
  %25238 = add i64 %25237, 16
  %25239 = load i64, i64* %PC.i1219
  %25240 = add i64 %25239, 3
  store i64 %25240, i64* %PC.i1219
  %25241 = trunc i64 %25236 to i32
  %25242 = inttoptr i64 %25238 to i32*
  %25243 = load i32, i32* %25242
  %25244 = add i32 %25243, %25241
  %25245 = zext i32 %25244 to i64
  store i64 %25245, i64* %RDI.i1221, align 8
  %25246 = icmp ult i32 %25244, %25241
  %25247 = icmp ult i32 %25244, %25243
  %25248 = or i1 %25246, %25247
  %25249 = zext i1 %25248 to i8
  %25250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25249, i8* %25250, align 1
  %25251 = and i32 %25244, 255
  %25252 = call i32 @llvm.ctpop.i32(i32 %25251)
  %25253 = trunc i32 %25252 to i8
  %25254 = and i8 %25253, 1
  %25255 = xor i8 %25254, 1
  %25256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25255, i8* %25256, align 1
  %25257 = xor i32 %25243, %25241
  %25258 = xor i32 %25257, %25244
  %25259 = lshr i32 %25258, 4
  %25260 = trunc i32 %25259 to i8
  %25261 = and i8 %25260, 1
  %25262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25261, i8* %25262, align 1
  %25263 = icmp eq i32 %25244, 0
  %25264 = zext i1 %25263 to i8
  %25265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25264, i8* %25265, align 1
  %25266 = lshr i32 %25244, 31
  %25267 = trunc i32 %25266 to i8
  %25268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25267, i8* %25268, align 1
  %25269 = lshr i32 %25241, 31
  %25270 = lshr i32 %25243, 31
  %25271 = xor i32 %25266, %25269
  %25272 = xor i32 %25266, %25270
  %25273 = add i32 %25271, %25272
  %25274 = icmp eq i32 %25273, 2
  %25275 = zext i1 %25274 to i8
  %25276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25275, i8* %25276, align 1
  store %struct.Memory* %loadMem_4abb9f, %struct.Memory** %MEMORY
  %loadMem_4abba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25278 = getelementptr inbounds %struct.GPR, %struct.GPR* %25277, i32 0, i32 33
  %25279 = getelementptr inbounds %struct.Reg, %struct.Reg* %25278, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %25279 to i64*
  %25280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25281 = getelementptr inbounds %struct.GPR, %struct.GPR* %25280, i32 0, i32 11
  %25282 = getelementptr inbounds %struct.Reg, %struct.Reg* %25281, i32 0, i32 0
  %EDI.i1217 = bitcast %union.anon* %25282 to i32*
  %25283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25284 = getelementptr inbounds %struct.GPR, %struct.GPR* %25283, i32 0, i32 15
  %25285 = getelementptr inbounds %struct.Reg, %struct.Reg* %25284, i32 0, i32 0
  %RBP.i1218 = bitcast %union.anon* %25285 to i64*
  %25286 = load i64, i64* %RBP.i1218
  %25287 = sub i64 %25286, 640
  %25288 = load i32, i32* %EDI.i1217
  %25289 = zext i32 %25288 to i64
  %25290 = load i64, i64* %PC.i1216
  %25291 = add i64 %25290, 6
  store i64 %25291, i64* %PC.i1216
  %25292 = inttoptr i64 %25287 to i32*
  store i32 %25288, i32* %25292
  store %struct.Memory* %loadMem_4abba2, %struct.Memory** %MEMORY
  %loadMem_4abba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25294 = getelementptr inbounds %struct.GPR, %struct.GPR* %25293, i32 0, i32 33
  %25295 = getelementptr inbounds %struct.Reg, %struct.Reg* %25294, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %25295 to i64*
  %25296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25297 = getelementptr inbounds %struct.GPR, %struct.GPR* %25296, i32 0, i32 7
  %25298 = getelementptr inbounds %struct.Reg, %struct.Reg* %25297, i32 0, i32 0
  %RDX.i1214 = bitcast %union.anon* %25298 to i64*
  %25299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25300 = getelementptr inbounds %struct.GPR, %struct.GPR* %25299, i32 0, i32 15
  %25301 = getelementptr inbounds %struct.Reg, %struct.Reg* %25300, i32 0, i32 0
  %RBP.i1215 = bitcast %union.anon* %25301 to i64*
  %25302 = load i64, i64* %RBP.i1215
  %25303 = sub i64 %25302, 24
  %25304 = load i64, i64* %PC.i1213
  %25305 = add i64 %25304, 4
  store i64 %25305, i64* %PC.i1213
  %25306 = inttoptr i64 %25303 to i32*
  %25307 = load i32, i32* %25306
  %25308 = sext i32 %25307 to i64
  store i64 %25308, i64* %RDX.i1214, align 8
  store %struct.Memory* %loadMem_4abba8, %struct.Memory** %MEMORY
  %loadMem_4abbac = load %struct.Memory*, %struct.Memory** %MEMORY
  %25309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25310 = getelementptr inbounds %struct.GPR, %struct.GPR* %25309, i32 0, i32 33
  %25311 = getelementptr inbounds %struct.Reg, %struct.Reg* %25310, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %25311 to i64*
  %25312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25313 = getelementptr inbounds %struct.GPR, %struct.GPR* %25312, i32 0, i32 7
  %25314 = getelementptr inbounds %struct.Reg, %struct.Reg* %25313, i32 0, i32 0
  %RDX.i1212 = bitcast %union.anon* %25314 to i64*
  %25315 = load i64, i64* %RDX.i1212
  %25316 = load i64, i64* %PC.i1211
  %25317 = add i64 %25316, 4
  store i64 %25317, i64* %PC.i1211
  %25318 = shl i64 %25315, 4
  %25319 = icmp slt i64 %25318, 0
  %25320 = shl i64 %25318, 1
  store i64 %25320, i64* %RDX.i1212, align 8
  %25321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25322 = zext i1 %25319 to i8
  store i8 %25322, i8* %25321, align 1
  %25323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25324 = trunc i64 %25320 to i32
  %25325 = and i32 %25324, 254
  %25326 = call i32 @llvm.ctpop.i32(i32 %25325)
  %25327 = trunc i32 %25326 to i8
  %25328 = and i8 %25327, 1
  %25329 = xor i8 %25328, 1
  store i8 %25329, i8* %25323, align 1
  %25330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25330, align 1
  %25331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25332 = icmp eq i64 %25320, 0
  %25333 = zext i1 %25332 to i8
  store i8 %25333, i8* %25331, align 1
  %25334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25335 = lshr i64 %25320, 63
  %25336 = trunc i64 %25335 to i8
  store i8 %25336, i8* %25334, align 1
  %25337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25337, align 1
  store %struct.Memory* %loadMem_4abbac, %struct.Memory** %MEMORY
  %loadMem_4abbb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25339 = getelementptr inbounds %struct.GPR, %struct.GPR* %25338, i32 0, i32 33
  %25340 = getelementptr inbounds %struct.Reg, %struct.Reg* %25339, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %25340 to i64*
  %25341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25342 = getelementptr inbounds %struct.GPR, %struct.GPR* %25341, i32 0, i32 5
  %25343 = getelementptr inbounds %struct.Reg, %struct.Reg* %25342, i32 0, i32 0
  %RCX.i1209 = bitcast %union.anon* %25343 to i64*
  %25344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25345 = getelementptr inbounds %struct.GPR, %struct.GPR* %25344, i32 0, i32 9
  %25346 = getelementptr inbounds %struct.Reg, %struct.Reg* %25345, i32 0, i32 0
  %RSI.i1210 = bitcast %union.anon* %25346 to i64*
  %25347 = load i64, i64* %RCX.i1209
  %25348 = load i64, i64* %PC.i1208
  %25349 = add i64 %25348, 3
  store i64 %25349, i64* %PC.i1208
  store i64 %25347, i64* %RSI.i1210, align 8
  store %struct.Memory* %loadMem_4abbb0, %struct.Memory** %MEMORY
  %loadMem_4abbb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25351 = getelementptr inbounds %struct.GPR, %struct.GPR* %25350, i32 0, i32 33
  %25352 = getelementptr inbounds %struct.Reg, %struct.Reg* %25351, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %25352 to i64*
  %25353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25354 = getelementptr inbounds %struct.GPR, %struct.GPR* %25353, i32 0, i32 7
  %25355 = getelementptr inbounds %struct.Reg, %struct.Reg* %25354, i32 0, i32 0
  %RDX.i1206 = bitcast %union.anon* %25355 to i64*
  %25356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25357 = getelementptr inbounds %struct.GPR, %struct.GPR* %25356, i32 0, i32 9
  %25358 = getelementptr inbounds %struct.Reg, %struct.Reg* %25357, i32 0, i32 0
  %RSI.i1207 = bitcast %union.anon* %25358 to i64*
  %25359 = load i64, i64* %RSI.i1207
  %25360 = load i64, i64* %RDX.i1206
  %25361 = load i64, i64* %PC.i1205
  %25362 = add i64 %25361, 3
  store i64 %25362, i64* %PC.i1205
  %25363 = add i64 %25360, %25359
  store i64 %25363, i64* %RSI.i1207, align 8
  %25364 = icmp ult i64 %25363, %25359
  %25365 = icmp ult i64 %25363, %25360
  %25366 = or i1 %25364, %25365
  %25367 = zext i1 %25366 to i8
  %25368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25367, i8* %25368, align 1
  %25369 = trunc i64 %25363 to i32
  %25370 = and i32 %25369, 255
  %25371 = call i32 @llvm.ctpop.i32(i32 %25370)
  %25372 = trunc i32 %25371 to i8
  %25373 = and i8 %25372, 1
  %25374 = xor i8 %25373, 1
  %25375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25374, i8* %25375, align 1
  %25376 = xor i64 %25360, %25359
  %25377 = xor i64 %25376, %25363
  %25378 = lshr i64 %25377, 4
  %25379 = trunc i64 %25378 to i8
  %25380 = and i8 %25379, 1
  %25381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25380, i8* %25381, align 1
  %25382 = icmp eq i64 %25363, 0
  %25383 = zext i1 %25382 to i8
  %25384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25383, i8* %25384, align 1
  %25385 = lshr i64 %25363, 63
  %25386 = trunc i64 %25385 to i8
  %25387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25386, i8* %25387, align 1
  %25388 = lshr i64 %25359, 63
  %25389 = lshr i64 %25360, 63
  %25390 = xor i64 %25385, %25388
  %25391 = xor i64 %25385, %25389
  %25392 = add i64 %25390, %25391
  %25393 = icmp eq i64 %25392, 2
  %25394 = zext i1 %25393 to i8
  %25395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25394, i8* %25395, align 1
  store %struct.Memory* %loadMem_4abbb3, %struct.Memory** %MEMORY
  %loadMem_4abbb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25397 = getelementptr inbounds %struct.GPR, %struct.GPR* %25396, i32 0, i32 33
  %25398 = getelementptr inbounds %struct.Reg, %struct.Reg* %25397, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %25398 to i64*
  %25399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25400 = getelementptr inbounds %struct.GPR, %struct.GPR* %25399, i32 0, i32 9
  %25401 = getelementptr inbounds %struct.Reg, %struct.Reg* %25400, i32 0, i32 0
  %RSI.i1203 = bitcast %union.anon* %25401 to i64*
  %25402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25403 = getelementptr inbounds %struct.GPR, %struct.GPR* %25402, i32 0, i32 11
  %25404 = getelementptr inbounds %struct.Reg, %struct.Reg* %25403, i32 0, i32 0
  %RDI.i1204 = bitcast %union.anon* %25404 to i64*
  %25405 = load i64, i64* %RSI.i1203
  %25406 = load i64, i64* %PC.i1202
  %25407 = add i64 %25406, 2
  store i64 %25407, i64* %PC.i1202
  %25408 = inttoptr i64 %25405 to i32*
  %25409 = load i32, i32* %25408
  %25410 = zext i32 %25409 to i64
  store i64 %25410, i64* %RDI.i1204, align 8
  store %struct.Memory* %loadMem_4abbb6, %struct.Memory** %MEMORY
  %loadMem_4abbb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25412 = getelementptr inbounds %struct.GPR, %struct.GPR* %25411, i32 0, i32 33
  %25413 = getelementptr inbounds %struct.Reg, %struct.Reg* %25412, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %25413 to i64*
  %25414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25415 = getelementptr inbounds %struct.GPR, %struct.GPR* %25414, i32 0, i32 7
  %25416 = getelementptr inbounds %struct.Reg, %struct.Reg* %25415, i32 0, i32 0
  %RDX.i1200 = bitcast %union.anon* %25416 to i64*
  %25417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25418 = getelementptr inbounds %struct.GPR, %struct.GPR* %25417, i32 0, i32 15
  %25419 = getelementptr inbounds %struct.Reg, %struct.Reg* %25418, i32 0, i32 0
  %RBP.i1201 = bitcast %union.anon* %25419 to i64*
  %25420 = load i64, i64* %RBP.i1201
  %25421 = sub i64 %25420, 24
  %25422 = load i64, i64* %PC.i1199
  %25423 = add i64 %25422, 4
  store i64 %25423, i64* %PC.i1199
  %25424 = inttoptr i64 %25421 to i32*
  %25425 = load i32, i32* %25424
  %25426 = sext i32 %25425 to i64
  store i64 %25426, i64* %RDX.i1200, align 8
  store %struct.Memory* %loadMem_4abbb8, %struct.Memory** %MEMORY
  %loadMem_4abbbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %25427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25428 = getelementptr inbounds %struct.GPR, %struct.GPR* %25427, i32 0, i32 33
  %25429 = getelementptr inbounds %struct.Reg, %struct.Reg* %25428, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %25429 to i64*
  %25430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25431 = getelementptr inbounds %struct.GPR, %struct.GPR* %25430, i32 0, i32 7
  %25432 = getelementptr inbounds %struct.Reg, %struct.Reg* %25431, i32 0, i32 0
  %RDX.i1198 = bitcast %union.anon* %25432 to i64*
  %25433 = load i64, i64* %RDX.i1198
  %25434 = load i64, i64* %PC.i1197
  %25435 = add i64 %25434, 4
  store i64 %25435, i64* %PC.i1197
  %25436 = shl i64 %25433, 4
  %25437 = icmp slt i64 %25436, 0
  %25438 = shl i64 %25436, 1
  store i64 %25438, i64* %RDX.i1198, align 8
  %25439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25440 = zext i1 %25437 to i8
  store i8 %25440, i8* %25439, align 1
  %25441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25442 = trunc i64 %25438 to i32
  %25443 = and i32 %25442, 254
  %25444 = call i32 @llvm.ctpop.i32(i32 %25443)
  %25445 = trunc i32 %25444 to i8
  %25446 = and i8 %25445, 1
  %25447 = xor i8 %25446, 1
  store i8 %25447, i8* %25441, align 1
  %25448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25448, align 1
  %25449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25450 = icmp eq i64 %25438, 0
  %25451 = zext i1 %25450 to i8
  store i8 %25451, i8* %25449, align 1
  %25452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25453 = lshr i64 %25438, 63
  %25454 = trunc i64 %25453 to i8
  store i8 %25454, i8* %25452, align 1
  %25455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25455, align 1
  store %struct.Memory* %loadMem_4abbbc, %struct.Memory** %MEMORY
  %loadMem_4abbc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25457 = getelementptr inbounds %struct.GPR, %struct.GPR* %25456, i32 0, i32 33
  %25458 = getelementptr inbounds %struct.Reg, %struct.Reg* %25457, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %25458 to i64*
  %25459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25460 = getelementptr inbounds %struct.GPR, %struct.GPR* %25459, i32 0, i32 5
  %25461 = getelementptr inbounds %struct.Reg, %struct.Reg* %25460, i32 0, i32 0
  %RCX.i1195 = bitcast %union.anon* %25461 to i64*
  %25462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25463 = getelementptr inbounds %struct.GPR, %struct.GPR* %25462, i32 0, i32 9
  %25464 = getelementptr inbounds %struct.Reg, %struct.Reg* %25463, i32 0, i32 0
  %RSI.i1196 = bitcast %union.anon* %25464 to i64*
  %25465 = load i64, i64* %RCX.i1195
  %25466 = load i64, i64* %PC.i1194
  %25467 = add i64 %25466, 3
  store i64 %25467, i64* %PC.i1194
  store i64 %25465, i64* %RSI.i1196, align 8
  store %struct.Memory* %loadMem_4abbc0, %struct.Memory** %MEMORY
  %loadMem_4abbc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25469 = getelementptr inbounds %struct.GPR, %struct.GPR* %25468, i32 0, i32 33
  %25470 = getelementptr inbounds %struct.Reg, %struct.Reg* %25469, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %25470 to i64*
  %25471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25472 = getelementptr inbounds %struct.GPR, %struct.GPR* %25471, i32 0, i32 7
  %25473 = getelementptr inbounds %struct.Reg, %struct.Reg* %25472, i32 0, i32 0
  %RDX.i1192 = bitcast %union.anon* %25473 to i64*
  %25474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25475 = getelementptr inbounds %struct.GPR, %struct.GPR* %25474, i32 0, i32 9
  %25476 = getelementptr inbounds %struct.Reg, %struct.Reg* %25475, i32 0, i32 0
  %RSI.i1193 = bitcast %union.anon* %25476 to i64*
  %25477 = load i64, i64* %RSI.i1193
  %25478 = load i64, i64* %RDX.i1192
  %25479 = load i64, i64* %PC.i1191
  %25480 = add i64 %25479, 3
  store i64 %25480, i64* %PC.i1191
  %25481 = add i64 %25478, %25477
  store i64 %25481, i64* %RSI.i1193, align 8
  %25482 = icmp ult i64 %25481, %25477
  %25483 = icmp ult i64 %25481, %25478
  %25484 = or i1 %25482, %25483
  %25485 = zext i1 %25484 to i8
  %25486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25485, i8* %25486, align 1
  %25487 = trunc i64 %25481 to i32
  %25488 = and i32 %25487, 255
  %25489 = call i32 @llvm.ctpop.i32(i32 %25488)
  %25490 = trunc i32 %25489 to i8
  %25491 = and i8 %25490, 1
  %25492 = xor i8 %25491, 1
  %25493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25492, i8* %25493, align 1
  %25494 = xor i64 %25478, %25477
  %25495 = xor i64 %25494, %25481
  %25496 = lshr i64 %25495, 4
  %25497 = trunc i64 %25496 to i8
  %25498 = and i8 %25497, 1
  %25499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25498, i8* %25499, align 1
  %25500 = icmp eq i64 %25481, 0
  %25501 = zext i1 %25500 to i8
  %25502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25501, i8* %25502, align 1
  %25503 = lshr i64 %25481, 63
  %25504 = trunc i64 %25503 to i8
  %25505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25504, i8* %25505, align 1
  %25506 = lshr i64 %25477, 63
  %25507 = lshr i64 %25478, 63
  %25508 = xor i64 %25503, %25506
  %25509 = xor i64 %25503, %25507
  %25510 = add i64 %25508, %25509
  %25511 = icmp eq i64 %25510, 2
  %25512 = zext i1 %25511 to i8
  %25513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25512, i8* %25513, align 1
  store %struct.Memory* %loadMem_4abbc3, %struct.Memory** %MEMORY
  %loadMem_4abbc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25515 = getelementptr inbounds %struct.GPR, %struct.GPR* %25514, i32 0, i32 33
  %25516 = getelementptr inbounds %struct.Reg, %struct.Reg* %25515, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %25516 to i64*
  %25517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25518 = getelementptr inbounds %struct.GPR, %struct.GPR* %25517, i32 0, i32 9
  %25519 = getelementptr inbounds %struct.Reg, %struct.Reg* %25518, i32 0, i32 0
  %RSI.i1189 = bitcast %union.anon* %25519 to i64*
  %25520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25521 = getelementptr inbounds %struct.GPR, %struct.GPR* %25520, i32 0, i32 11
  %25522 = getelementptr inbounds %struct.Reg, %struct.Reg* %25521, i32 0, i32 0
  %RDI.i1190 = bitcast %union.anon* %25522 to i64*
  %25523 = load i64, i64* %RDI.i1190
  %25524 = load i64, i64* %RSI.i1189
  %25525 = add i64 %25524, 16
  %25526 = load i64, i64* %PC.i1188
  %25527 = add i64 %25526, 3
  store i64 %25527, i64* %PC.i1188
  %25528 = trunc i64 %25523 to i32
  %25529 = inttoptr i64 %25525 to i32*
  %25530 = load i32, i32* %25529
  %25531 = sub i32 %25528, %25530
  %25532 = zext i32 %25531 to i64
  store i64 %25532, i64* %RDI.i1190, align 8
  %25533 = icmp ult i32 %25528, %25530
  %25534 = zext i1 %25533 to i8
  %25535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25534, i8* %25535, align 1
  %25536 = and i32 %25531, 255
  %25537 = call i32 @llvm.ctpop.i32(i32 %25536)
  %25538 = trunc i32 %25537 to i8
  %25539 = and i8 %25538, 1
  %25540 = xor i8 %25539, 1
  %25541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25540, i8* %25541, align 1
  %25542 = xor i32 %25530, %25528
  %25543 = xor i32 %25542, %25531
  %25544 = lshr i32 %25543, 4
  %25545 = trunc i32 %25544 to i8
  %25546 = and i8 %25545, 1
  %25547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25546, i8* %25547, align 1
  %25548 = icmp eq i32 %25531, 0
  %25549 = zext i1 %25548 to i8
  %25550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25549, i8* %25550, align 1
  %25551 = lshr i32 %25531, 31
  %25552 = trunc i32 %25551 to i8
  %25553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25552, i8* %25553, align 1
  %25554 = lshr i32 %25528, 31
  %25555 = lshr i32 %25530, 31
  %25556 = xor i32 %25555, %25554
  %25557 = xor i32 %25551, %25554
  %25558 = add i32 %25557, %25556
  %25559 = icmp eq i32 %25558, 2
  %25560 = zext i1 %25559 to i8
  %25561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25560, i8* %25561, align 1
  store %struct.Memory* %loadMem_4abbc6, %struct.Memory** %MEMORY
  %loadMem_4abbc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25563 = getelementptr inbounds %struct.GPR, %struct.GPR* %25562, i32 0, i32 33
  %25564 = getelementptr inbounds %struct.Reg, %struct.Reg* %25563, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %25564 to i64*
  %25565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25566 = getelementptr inbounds %struct.GPR, %struct.GPR* %25565, i32 0, i32 11
  %25567 = getelementptr inbounds %struct.Reg, %struct.Reg* %25566, i32 0, i32 0
  %EDI.i1186 = bitcast %union.anon* %25567 to i32*
  %25568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25569 = getelementptr inbounds %struct.GPR, %struct.GPR* %25568, i32 0, i32 15
  %25570 = getelementptr inbounds %struct.Reg, %struct.Reg* %25569, i32 0, i32 0
  %RBP.i1187 = bitcast %union.anon* %25570 to i64*
  %25571 = load i64, i64* %RBP.i1187
  %25572 = sub i64 %25571, 624
  %25573 = load i32, i32* %EDI.i1186
  %25574 = zext i32 %25573 to i64
  %25575 = load i64, i64* %PC.i1185
  %25576 = add i64 %25575, 6
  store i64 %25576, i64* %PC.i1185
  %25577 = inttoptr i64 %25572 to i32*
  store i32 %25573, i32* %25577
  store %struct.Memory* %loadMem_4abbc9, %struct.Memory** %MEMORY
  %loadMem_4abbcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %25578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25579 = getelementptr inbounds %struct.GPR, %struct.GPR* %25578, i32 0, i32 33
  %25580 = getelementptr inbounds %struct.Reg, %struct.Reg* %25579, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %25580 to i64*
  %25581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25582 = getelementptr inbounds %struct.GPR, %struct.GPR* %25581, i32 0, i32 7
  %25583 = getelementptr inbounds %struct.Reg, %struct.Reg* %25582, i32 0, i32 0
  %RDX.i1183 = bitcast %union.anon* %25583 to i64*
  %25584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25585 = getelementptr inbounds %struct.GPR, %struct.GPR* %25584, i32 0, i32 15
  %25586 = getelementptr inbounds %struct.Reg, %struct.Reg* %25585, i32 0, i32 0
  %RBP.i1184 = bitcast %union.anon* %25586 to i64*
  %25587 = load i64, i64* %RBP.i1184
  %25588 = sub i64 %25587, 24
  %25589 = load i64, i64* %PC.i1182
  %25590 = add i64 %25589, 4
  store i64 %25590, i64* %PC.i1182
  %25591 = inttoptr i64 %25588 to i32*
  %25592 = load i32, i32* %25591
  %25593 = sext i32 %25592 to i64
  store i64 %25593, i64* %RDX.i1183, align 8
  store %struct.Memory* %loadMem_4abbcf, %struct.Memory** %MEMORY
  %loadMem_4abbd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25595 = getelementptr inbounds %struct.GPR, %struct.GPR* %25594, i32 0, i32 33
  %25596 = getelementptr inbounds %struct.Reg, %struct.Reg* %25595, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %25596 to i64*
  %25597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25598 = getelementptr inbounds %struct.GPR, %struct.GPR* %25597, i32 0, i32 7
  %25599 = getelementptr inbounds %struct.Reg, %struct.Reg* %25598, i32 0, i32 0
  %RDX.i1181 = bitcast %union.anon* %25599 to i64*
  %25600 = load i64, i64* %RDX.i1181
  %25601 = load i64, i64* %PC.i1180
  %25602 = add i64 %25601, 4
  store i64 %25602, i64* %PC.i1180
  %25603 = shl i64 %25600, 4
  %25604 = icmp slt i64 %25603, 0
  %25605 = shl i64 %25603, 1
  store i64 %25605, i64* %RDX.i1181, align 8
  %25606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25607 = zext i1 %25604 to i8
  store i8 %25607, i8* %25606, align 1
  %25608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25609 = trunc i64 %25605 to i32
  %25610 = and i32 %25609, 254
  %25611 = call i32 @llvm.ctpop.i32(i32 %25610)
  %25612 = trunc i32 %25611 to i8
  %25613 = and i8 %25612, 1
  %25614 = xor i8 %25613, 1
  store i8 %25614, i8* %25608, align 1
  %25615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25615, align 1
  %25616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25617 = icmp eq i64 %25605, 0
  %25618 = zext i1 %25617 to i8
  store i8 %25618, i8* %25616, align 1
  %25619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25620 = lshr i64 %25605, 63
  %25621 = trunc i64 %25620 to i8
  store i8 %25621, i8* %25619, align 1
  %25622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25622, align 1
  store %struct.Memory* %loadMem_4abbd3, %struct.Memory** %MEMORY
  %loadMem_4abbd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25624 = getelementptr inbounds %struct.GPR, %struct.GPR* %25623, i32 0, i32 33
  %25625 = getelementptr inbounds %struct.Reg, %struct.Reg* %25624, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %25625 to i64*
  %25626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25627 = getelementptr inbounds %struct.GPR, %struct.GPR* %25626, i32 0, i32 5
  %25628 = getelementptr inbounds %struct.Reg, %struct.Reg* %25627, i32 0, i32 0
  %RCX.i1178 = bitcast %union.anon* %25628 to i64*
  %25629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25630 = getelementptr inbounds %struct.GPR, %struct.GPR* %25629, i32 0, i32 9
  %25631 = getelementptr inbounds %struct.Reg, %struct.Reg* %25630, i32 0, i32 0
  %RSI.i1179 = bitcast %union.anon* %25631 to i64*
  %25632 = load i64, i64* %RCX.i1178
  %25633 = load i64, i64* %PC.i1177
  %25634 = add i64 %25633, 3
  store i64 %25634, i64* %PC.i1177
  store i64 %25632, i64* %RSI.i1179, align 8
  store %struct.Memory* %loadMem_4abbd7, %struct.Memory** %MEMORY
  %loadMem_4abbda = load %struct.Memory*, %struct.Memory** %MEMORY
  %25635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25636 = getelementptr inbounds %struct.GPR, %struct.GPR* %25635, i32 0, i32 33
  %25637 = getelementptr inbounds %struct.Reg, %struct.Reg* %25636, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %25637 to i64*
  %25638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25639 = getelementptr inbounds %struct.GPR, %struct.GPR* %25638, i32 0, i32 7
  %25640 = getelementptr inbounds %struct.Reg, %struct.Reg* %25639, i32 0, i32 0
  %RDX.i1175 = bitcast %union.anon* %25640 to i64*
  %25641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25642 = getelementptr inbounds %struct.GPR, %struct.GPR* %25641, i32 0, i32 9
  %25643 = getelementptr inbounds %struct.Reg, %struct.Reg* %25642, i32 0, i32 0
  %RSI.i1176 = bitcast %union.anon* %25643 to i64*
  %25644 = load i64, i64* %RSI.i1176
  %25645 = load i64, i64* %RDX.i1175
  %25646 = load i64, i64* %PC.i1174
  %25647 = add i64 %25646, 3
  store i64 %25647, i64* %PC.i1174
  %25648 = add i64 %25645, %25644
  store i64 %25648, i64* %RSI.i1176, align 8
  %25649 = icmp ult i64 %25648, %25644
  %25650 = icmp ult i64 %25648, %25645
  %25651 = or i1 %25649, %25650
  %25652 = zext i1 %25651 to i8
  %25653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25652, i8* %25653, align 1
  %25654 = trunc i64 %25648 to i32
  %25655 = and i32 %25654, 255
  %25656 = call i32 @llvm.ctpop.i32(i32 %25655)
  %25657 = trunc i32 %25656 to i8
  %25658 = and i8 %25657, 1
  %25659 = xor i8 %25658, 1
  %25660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25659, i8* %25660, align 1
  %25661 = xor i64 %25645, %25644
  %25662 = xor i64 %25661, %25648
  %25663 = lshr i64 %25662, 4
  %25664 = trunc i64 %25663 to i8
  %25665 = and i8 %25664, 1
  %25666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25665, i8* %25666, align 1
  %25667 = icmp eq i64 %25648, 0
  %25668 = zext i1 %25667 to i8
  %25669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25668, i8* %25669, align 1
  %25670 = lshr i64 %25648, 63
  %25671 = trunc i64 %25670 to i8
  %25672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25671, i8* %25672, align 1
  %25673 = lshr i64 %25644, 63
  %25674 = lshr i64 %25645, 63
  %25675 = xor i64 %25670, %25673
  %25676 = xor i64 %25670, %25674
  %25677 = add i64 %25675, %25676
  %25678 = icmp eq i64 %25677, 2
  %25679 = zext i1 %25678 to i8
  %25680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25679, i8* %25680, align 1
  store %struct.Memory* %loadMem_4abbda, %struct.Memory** %MEMORY
  %loadMem_4abbdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %25681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25682 = getelementptr inbounds %struct.GPR, %struct.GPR* %25681, i32 0, i32 33
  %25683 = getelementptr inbounds %struct.Reg, %struct.Reg* %25682, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %25683 to i64*
  %25684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25685 = getelementptr inbounds %struct.GPR, %struct.GPR* %25684, i32 0, i32 9
  %25686 = getelementptr inbounds %struct.Reg, %struct.Reg* %25685, i32 0, i32 0
  %RSI.i1172 = bitcast %union.anon* %25686 to i64*
  %25687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25688 = getelementptr inbounds %struct.GPR, %struct.GPR* %25687, i32 0, i32 11
  %25689 = getelementptr inbounds %struct.Reg, %struct.Reg* %25688, i32 0, i32 0
  %RDI.i1173 = bitcast %union.anon* %25689 to i64*
  %25690 = load i64, i64* %RSI.i1172
  %25691 = add i64 %25690, 8
  %25692 = load i64, i64* %PC.i1171
  %25693 = add i64 %25692, 3
  store i64 %25693, i64* %PC.i1171
  %25694 = inttoptr i64 %25691 to i32*
  %25695 = load i32, i32* %25694
  %25696 = zext i32 %25695 to i64
  store i64 %25696, i64* %RDI.i1173, align 8
  store %struct.Memory* %loadMem_4abbdd, %struct.Memory** %MEMORY
  %loadMem_4abbe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25698 = getelementptr inbounds %struct.GPR, %struct.GPR* %25697, i32 0, i32 33
  %25699 = getelementptr inbounds %struct.Reg, %struct.Reg* %25698, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %25699 to i64*
  %25700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25701 = getelementptr inbounds %struct.GPR, %struct.GPR* %25700, i32 0, i32 11
  %25702 = getelementptr inbounds %struct.Reg, %struct.Reg* %25701, i32 0, i32 0
  %RDI.i1170 = bitcast %union.anon* %25702 to i64*
  %25703 = load i64, i64* %RDI.i1170
  %25704 = load i64, i64* %PC.i1169
  %25705 = add i64 %25704, 2
  store i64 %25705, i64* %PC.i1169
  %25706 = shl i64 %25703, 32
  %25707 = ashr i64 %25706, 33
  %25708 = trunc i64 %25703 to i8
  %25709 = and i8 %25708, 1
  %25710 = trunc i64 %25707 to i32
  %25711 = and i64 %25707, 4294967295
  store i64 %25711, i64* %RDI.i1170, align 8
  %25712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25709, i8* %25712, align 1
  %25713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25714 = and i32 %25710, 255
  %25715 = call i32 @llvm.ctpop.i32(i32 %25714)
  %25716 = trunc i32 %25715 to i8
  %25717 = and i8 %25716, 1
  %25718 = xor i8 %25717, 1
  store i8 %25718, i8* %25713, align 1
  %25719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25719, align 1
  %25720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25721 = icmp eq i32 %25710, 0
  %25722 = zext i1 %25721 to i8
  store i8 %25722, i8* %25720, align 1
  %25723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25724 = lshr i32 %25710, 31
  %25725 = trunc i32 %25724 to i8
  store i8 %25725, i8* %25723, align 1
  %25726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25726, align 1
  store %struct.Memory* %loadMem_4abbe0, %struct.Memory** %MEMORY
  %loadMem_4abbe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25728 = getelementptr inbounds %struct.GPR, %struct.GPR* %25727, i32 0, i32 33
  %25729 = getelementptr inbounds %struct.Reg, %struct.Reg* %25728, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %25729 to i64*
  %25730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25731 = getelementptr inbounds %struct.GPR, %struct.GPR* %25730, i32 0, i32 7
  %25732 = getelementptr inbounds %struct.Reg, %struct.Reg* %25731, i32 0, i32 0
  %RDX.i1167 = bitcast %union.anon* %25732 to i64*
  %25733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25734 = getelementptr inbounds %struct.GPR, %struct.GPR* %25733, i32 0, i32 15
  %25735 = getelementptr inbounds %struct.Reg, %struct.Reg* %25734, i32 0, i32 0
  %RBP.i1168 = bitcast %union.anon* %25735 to i64*
  %25736 = load i64, i64* %RBP.i1168
  %25737 = sub i64 %25736, 24
  %25738 = load i64, i64* %PC.i1166
  %25739 = add i64 %25738, 4
  store i64 %25739, i64* %PC.i1166
  %25740 = inttoptr i64 %25737 to i32*
  %25741 = load i32, i32* %25740
  %25742 = sext i32 %25741 to i64
  store i64 %25742, i64* %RDX.i1167, align 8
  store %struct.Memory* %loadMem_4abbe3, %struct.Memory** %MEMORY
  %loadMem_4abbe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25744 = getelementptr inbounds %struct.GPR, %struct.GPR* %25743, i32 0, i32 33
  %25745 = getelementptr inbounds %struct.Reg, %struct.Reg* %25744, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %25745 to i64*
  %25746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25747 = getelementptr inbounds %struct.GPR, %struct.GPR* %25746, i32 0, i32 7
  %25748 = getelementptr inbounds %struct.Reg, %struct.Reg* %25747, i32 0, i32 0
  %RDX.i1165 = bitcast %union.anon* %25748 to i64*
  %25749 = load i64, i64* %RDX.i1165
  %25750 = load i64, i64* %PC.i1164
  %25751 = add i64 %25750, 4
  store i64 %25751, i64* %PC.i1164
  %25752 = shl i64 %25749, 4
  %25753 = icmp slt i64 %25752, 0
  %25754 = shl i64 %25752, 1
  store i64 %25754, i64* %RDX.i1165, align 8
  %25755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25756 = zext i1 %25753 to i8
  store i8 %25756, i8* %25755, align 1
  %25757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25758 = trunc i64 %25754 to i32
  %25759 = and i32 %25758, 254
  %25760 = call i32 @llvm.ctpop.i32(i32 %25759)
  %25761 = trunc i32 %25760 to i8
  %25762 = and i8 %25761, 1
  %25763 = xor i8 %25762, 1
  store i8 %25763, i8* %25757, align 1
  %25764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25764, align 1
  %25765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25766 = icmp eq i64 %25754, 0
  %25767 = zext i1 %25766 to i8
  store i8 %25767, i8* %25765, align 1
  %25768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25769 = lshr i64 %25754, 63
  %25770 = trunc i64 %25769 to i8
  store i8 %25770, i8* %25768, align 1
  %25771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25771, align 1
  store %struct.Memory* %loadMem_4abbe7, %struct.Memory** %MEMORY
  %loadMem_4abbeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %25772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25773 = getelementptr inbounds %struct.GPR, %struct.GPR* %25772, i32 0, i32 33
  %25774 = getelementptr inbounds %struct.Reg, %struct.Reg* %25773, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %25774 to i64*
  %25775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25776 = getelementptr inbounds %struct.GPR, %struct.GPR* %25775, i32 0, i32 5
  %25777 = getelementptr inbounds %struct.Reg, %struct.Reg* %25776, i32 0, i32 0
  %RCX.i1162 = bitcast %union.anon* %25777 to i64*
  %25778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25779 = getelementptr inbounds %struct.GPR, %struct.GPR* %25778, i32 0, i32 9
  %25780 = getelementptr inbounds %struct.Reg, %struct.Reg* %25779, i32 0, i32 0
  %RSI.i1163 = bitcast %union.anon* %25780 to i64*
  %25781 = load i64, i64* %RCX.i1162
  %25782 = load i64, i64* %PC.i1161
  %25783 = add i64 %25782, 3
  store i64 %25783, i64* %PC.i1161
  store i64 %25781, i64* %RSI.i1163, align 8
  store %struct.Memory* %loadMem_4abbeb, %struct.Memory** %MEMORY
  %loadMem_4abbee = load %struct.Memory*, %struct.Memory** %MEMORY
  %25784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25785 = getelementptr inbounds %struct.GPR, %struct.GPR* %25784, i32 0, i32 33
  %25786 = getelementptr inbounds %struct.Reg, %struct.Reg* %25785, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %25786 to i64*
  %25787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25788 = getelementptr inbounds %struct.GPR, %struct.GPR* %25787, i32 0, i32 7
  %25789 = getelementptr inbounds %struct.Reg, %struct.Reg* %25788, i32 0, i32 0
  %RDX.i1159 = bitcast %union.anon* %25789 to i64*
  %25790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25791 = getelementptr inbounds %struct.GPR, %struct.GPR* %25790, i32 0, i32 9
  %25792 = getelementptr inbounds %struct.Reg, %struct.Reg* %25791, i32 0, i32 0
  %RSI.i1160 = bitcast %union.anon* %25792 to i64*
  %25793 = load i64, i64* %RSI.i1160
  %25794 = load i64, i64* %RDX.i1159
  %25795 = load i64, i64* %PC.i1158
  %25796 = add i64 %25795, 3
  store i64 %25796, i64* %PC.i1158
  %25797 = add i64 %25794, %25793
  store i64 %25797, i64* %RSI.i1160, align 8
  %25798 = icmp ult i64 %25797, %25793
  %25799 = icmp ult i64 %25797, %25794
  %25800 = or i1 %25798, %25799
  %25801 = zext i1 %25800 to i8
  %25802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25801, i8* %25802, align 1
  %25803 = trunc i64 %25797 to i32
  %25804 = and i32 %25803, 255
  %25805 = call i32 @llvm.ctpop.i32(i32 %25804)
  %25806 = trunc i32 %25805 to i8
  %25807 = and i8 %25806, 1
  %25808 = xor i8 %25807, 1
  %25809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25808, i8* %25809, align 1
  %25810 = xor i64 %25794, %25793
  %25811 = xor i64 %25810, %25797
  %25812 = lshr i64 %25811, 4
  %25813 = trunc i64 %25812 to i8
  %25814 = and i8 %25813, 1
  %25815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25814, i8* %25815, align 1
  %25816 = icmp eq i64 %25797, 0
  %25817 = zext i1 %25816 to i8
  %25818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25817, i8* %25818, align 1
  %25819 = lshr i64 %25797, 63
  %25820 = trunc i64 %25819 to i8
  %25821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25820, i8* %25821, align 1
  %25822 = lshr i64 %25793, 63
  %25823 = lshr i64 %25794, 63
  %25824 = xor i64 %25819, %25822
  %25825 = xor i64 %25819, %25823
  %25826 = add i64 %25824, %25825
  %25827 = icmp eq i64 %25826, 2
  %25828 = zext i1 %25827 to i8
  %25829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25828, i8* %25829, align 1
  store %struct.Memory* %loadMem_4abbee, %struct.Memory** %MEMORY
  %loadMem_4abbf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25831 = getelementptr inbounds %struct.GPR, %struct.GPR* %25830, i32 0, i32 33
  %25832 = getelementptr inbounds %struct.Reg, %struct.Reg* %25831, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %25832 to i64*
  %25833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25834 = getelementptr inbounds %struct.GPR, %struct.GPR* %25833, i32 0, i32 9
  %25835 = getelementptr inbounds %struct.Reg, %struct.Reg* %25834, i32 0, i32 0
  %RSI.i1156 = bitcast %union.anon* %25835 to i64*
  %25836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25837 = getelementptr inbounds %struct.GPR, %struct.GPR* %25836, i32 0, i32 11
  %25838 = getelementptr inbounds %struct.Reg, %struct.Reg* %25837, i32 0, i32 0
  %RDI.i1157 = bitcast %union.anon* %25838 to i64*
  %25839 = load i64, i64* %RDI.i1157
  %25840 = load i64, i64* %RSI.i1156
  %25841 = add i64 %25840, 24
  %25842 = load i64, i64* %PC.i1155
  %25843 = add i64 %25842, 3
  store i64 %25843, i64* %PC.i1155
  %25844 = trunc i64 %25839 to i32
  %25845 = inttoptr i64 %25841 to i32*
  %25846 = load i32, i32* %25845
  %25847 = sub i32 %25844, %25846
  %25848 = zext i32 %25847 to i64
  store i64 %25848, i64* %RDI.i1157, align 8
  %25849 = icmp ult i32 %25844, %25846
  %25850 = zext i1 %25849 to i8
  %25851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25850, i8* %25851, align 1
  %25852 = and i32 %25847, 255
  %25853 = call i32 @llvm.ctpop.i32(i32 %25852)
  %25854 = trunc i32 %25853 to i8
  %25855 = and i8 %25854, 1
  %25856 = xor i8 %25855, 1
  %25857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25856, i8* %25857, align 1
  %25858 = xor i32 %25846, %25844
  %25859 = xor i32 %25858, %25847
  %25860 = lshr i32 %25859, 4
  %25861 = trunc i32 %25860 to i8
  %25862 = and i8 %25861, 1
  %25863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25862, i8* %25863, align 1
  %25864 = icmp eq i32 %25847, 0
  %25865 = zext i1 %25864 to i8
  %25866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25865, i8* %25866, align 1
  %25867 = lshr i32 %25847, 31
  %25868 = trunc i32 %25867 to i8
  %25869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25868, i8* %25869, align 1
  %25870 = lshr i32 %25844, 31
  %25871 = lshr i32 %25846, 31
  %25872 = xor i32 %25871, %25870
  %25873 = xor i32 %25867, %25870
  %25874 = add i32 %25873, %25872
  %25875 = icmp eq i32 %25874, 2
  %25876 = zext i1 %25875 to i8
  %25877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25876, i8* %25877, align 1
  store %struct.Memory* %loadMem_4abbf1, %struct.Memory** %MEMORY
  %loadMem_4abbf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25879 = getelementptr inbounds %struct.GPR, %struct.GPR* %25878, i32 0, i32 33
  %25880 = getelementptr inbounds %struct.Reg, %struct.Reg* %25879, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %25880 to i64*
  %25881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25882 = getelementptr inbounds %struct.GPR, %struct.GPR* %25881, i32 0, i32 11
  %25883 = getelementptr inbounds %struct.Reg, %struct.Reg* %25882, i32 0, i32 0
  %EDI.i1153 = bitcast %union.anon* %25883 to i32*
  %25884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25885 = getelementptr inbounds %struct.GPR, %struct.GPR* %25884, i32 0, i32 15
  %25886 = getelementptr inbounds %struct.Reg, %struct.Reg* %25885, i32 0, i32 0
  %RBP.i1154 = bitcast %union.anon* %25886 to i64*
  %25887 = load i64, i64* %RBP.i1154
  %25888 = sub i64 %25887, 632
  %25889 = load i32, i32* %EDI.i1153
  %25890 = zext i32 %25889 to i64
  %25891 = load i64, i64* %PC.i1152
  %25892 = add i64 %25891, 6
  store i64 %25892, i64* %PC.i1152
  %25893 = inttoptr i64 %25888 to i32*
  store i32 %25889, i32* %25893
  store %struct.Memory* %loadMem_4abbf4, %struct.Memory** %MEMORY
  %loadMem_4abbfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %25894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25895 = getelementptr inbounds %struct.GPR, %struct.GPR* %25894, i32 0, i32 33
  %25896 = getelementptr inbounds %struct.Reg, %struct.Reg* %25895, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %25896 to i64*
  %25897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25898 = getelementptr inbounds %struct.GPR, %struct.GPR* %25897, i32 0, i32 7
  %25899 = getelementptr inbounds %struct.Reg, %struct.Reg* %25898, i32 0, i32 0
  %RDX.i1150 = bitcast %union.anon* %25899 to i64*
  %25900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25901 = getelementptr inbounds %struct.GPR, %struct.GPR* %25900, i32 0, i32 15
  %25902 = getelementptr inbounds %struct.Reg, %struct.Reg* %25901, i32 0, i32 0
  %RBP.i1151 = bitcast %union.anon* %25902 to i64*
  %25903 = load i64, i64* %RBP.i1151
  %25904 = sub i64 %25903, 24
  %25905 = load i64, i64* %PC.i1149
  %25906 = add i64 %25905, 4
  store i64 %25906, i64* %PC.i1149
  %25907 = inttoptr i64 %25904 to i32*
  %25908 = load i32, i32* %25907
  %25909 = sext i32 %25908 to i64
  store i64 %25909, i64* %RDX.i1150, align 8
  store %struct.Memory* %loadMem_4abbfa, %struct.Memory** %MEMORY
  %loadMem_4abbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %25910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25911 = getelementptr inbounds %struct.GPR, %struct.GPR* %25910, i32 0, i32 33
  %25912 = getelementptr inbounds %struct.Reg, %struct.Reg* %25911, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %25912 to i64*
  %25913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25914 = getelementptr inbounds %struct.GPR, %struct.GPR* %25913, i32 0, i32 7
  %25915 = getelementptr inbounds %struct.Reg, %struct.Reg* %25914, i32 0, i32 0
  %RDX.i1148 = bitcast %union.anon* %25915 to i64*
  %25916 = load i64, i64* %RDX.i1148
  %25917 = load i64, i64* %PC.i1147
  %25918 = add i64 %25917, 4
  store i64 %25918, i64* %PC.i1147
  %25919 = shl i64 %25916, 4
  %25920 = icmp slt i64 %25919, 0
  %25921 = shl i64 %25919, 1
  store i64 %25921, i64* %RDX.i1148, align 8
  %25922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25923 = zext i1 %25920 to i8
  store i8 %25923, i8* %25922, align 1
  %25924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25925 = trunc i64 %25921 to i32
  %25926 = and i32 %25925, 254
  %25927 = call i32 @llvm.ctpop.i32(i32 %25926)
  %25928 = trunc i32 %25927 to i8
  %25929 = and i8 %25928, 1
  %25930 = xor i8 %25929, 1
  store i8 %25930, i8* %25924, align 1
  %25931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25931, align 1
  %25932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25933 = icmp eq i64 %25921, 0
  %25934 = zext i1 %25933 to i8
  store i8 %25934, i8* %25932, align 1
  %25935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25936 = lshr i64 %25921, 63
  %25937 = trunc i64 %25936 to i8
  store i8 %25937, i8* %25935, align 1
  %25938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25938, align 1
  store %struct.Memory* %loadMem_4abbfe, %struct.Memory** %MEMORY
  %loadMem_4abc02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25940 = getelementptr inbounds %struct.GPR, %struct.GPR* %25939, i32 0, i32 33
  %25941 = getelementptr inbounds %struct.Reg, %struct.Reg* %25940, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %25941 to i64*
  %25942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25943 = getelementptr inbounds %struct.GPR, %struct.GPR* %25942, i32 0, i32 5
  %25944 = getelementptr inbounds %struct.Reg, %struct.Reg* %25943, i32 0, i32 0
  %RCX.i1145 = bitcast %union.anon* %25944 to i64*
  %25945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25946 = getelementptr inbounds %struct.GPR, %struct.GPR* %25945, i32 0, i32 9
  %25947 = getelementptr inbounds %struct.Reg, %struct.Reg* %25946, i32 0, i32 0
  %RSI.i1146 = bitcast %union.anon* %25947 to i64*
  %25948 = load i64, i64* %RCX.i1145
  %25949 = load i64, i64* %PC.i1144
  %25950 = add i64 %25949, 3
  store i64 %25950, i64* %PC.i1144
  store i64 %25948, i64* %RSI.i1146, align 8
  store %struct.Memory* %loadMem_4abc02, %struct.Memory** %MEMORY
  %loadMem_4abc05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25952 = getelementptr inbounds %struct.GPR, %struct.GPR* %25951, i32 0, i32 33
  %25953 = getelementptr inbounds %struct.Reg, %struct.Reg* %25952, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %25953 to i64*
  %25954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25955 = getelementptr inbounds %struct.GPR, %struct.GPR* %25954, i32 0, i32 7
  %25956 = getelementptr inbounds %struct.Reg, %struct.Reg* %25955, i32 0, i32 0
  %RDX.i1142 = bitcast %union.anon* %25956 to i64*
  %25957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25958 = getelementptr inbounds %struct.GPR, %struct.GPR* %25957, i32 0, i32 9
  %25959 = getelementptr inbounds %struct.Reg, %struct.Reg* %25958, i32 0, i32 0
  %RSI.i1143 = bitcast %union.anon* %25959 to i64*
  %25960 = load i64, i64* %RSI.i1143
  %25961 = load i64, i64* %RDX.i1142
  %25962 = load i64, i64* %PC.i1141
  %25963 = add i64 %25962, 3
  store i64 %25963, i64* %PC.i1141
  %25964 = add i64 %25961, %25960
  store i64 %25964, i64* %RSI.i1143, align 8
  %25965 = icmp ult i64 %25964, %25960
  %25966 = icmp ult i64 %25964, %25961
  %25967 = or i1 %25965, %25966
  %25968 = zext i1 %25967 to i8
  %25969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25968, i8* %25969, align 1
  %25970 = trunc i64 %25964 to i32
  %25971 = and i32 %25970, 255
  %25972 = call i32 @llvm.ctpop.i32(i32 %25971)
  %25973 = trunc i32 %25972 to i8
  %25974 = and i8 %25973, 1
  %25975 = xor i8 %25974, 1
  %25976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25975, i8* %25976, align 1
  %25977 = xor i64 %25961, %25960
  %25978 = xor i64 %25977, %25964
  %25979 = lshr i64 %25978, 4
  %25980 = trunc i64 %25979 to i8
  %25981 = and i8 %25980, 1
  %25982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25981, i8* %25982, align 1
  %25983 = icmp eq i64 %25964, 0
  %25984 = zext i1 %25983 to i8
  %25985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25984, i8* %25985, align 1
  %25986 = lshr i64 %25964, 63
  %25987 = trunc i64 %25986 to i8
  %25988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25987, i8* %25988, align 1
  %25989 = lshr i64 %25960, 63
  %25990 = lshr i64 %25961, 63
  %25991 = xor i64 %25986, %25989
  %25992 = xor i64 %25986, %25990
  %25993 = add i64 %25991, %25992
  %25994 = icmp eq i64 %25993, 2
  %25995 = zext i1 %25994 to i8
  %25996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25995, i8* %25996, align 1
  store %struct.Memory* %loadMem_4abc05, %struct.Memory** %MEMORY
  %loadMem_4abc08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25998 = getelementptr inbounds %struct.GPR, %struct.GPR* %25997, i32 0, i32 33
  %25999 = getelementptr inbounds %struct.Reg, %struct.Reg* %25998, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %25999 to i64*
  %26000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26001 = getelementptr inbounds %struct.GPR, %struct.GPR* %26000, i32 0, i32 9
  %26002 = getelementptr inbounds %struct.Reg, %struct.Reg* %26001, i32 0, i32 0
  %RSI.i1139 = bitcast %union.anon* %26002 to i64*
  %26003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26004 = getelementptr inbounds %struct.GPR, %struct.GPR* %26003, i32 0, i32 11
  %26005 = getelementptr inbounds %struct.Reg, %struct.Reg* %26004, i32 0, i32 0
  %RDI.i1140 = bitcast %union.anon* %26005 to i64*
  %26006 = load i64, i64* %RSI.i1139
  %26007 = add i64 %26006, 8
  %26008 = load i64, i64* %PC.i1138
  %26009 = add i64 %26008, 3
  store i64 %26009, i64* %PC.i1138
  %26010 = inttoptr i64 %26007 to i32*
  %26011 = load i32, i32* %26010
  %26012 = zext i32 %26011 to i64
  store i64 %26012, i64* %RDI.i1140, align 8
  store %struct.Memory* %loadMem_4abc08, %struct.Memory** %MEMORY
  %loadMem_4abc0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %26013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26014 = getelementptr inbounds %struct.GPR, %struct.GPR* %26013, i32 0, i32 33
  %26015 = getelementptr inbounds %struct.Reg, %struct.Reg* %26014, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %26015 to i64*
  %26016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26017 = getelementptr inbounds %struct.GPR, %struct.GPR* %26016, i32 0, i32 7
  %26018 = getelementptr inbounds %struct.Reg, %struct.Reg* %26017, i32 0, i32 0
  %RDX.i1136 = bitcast %union.anon* %26018 to i64*
  %26019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26020 = getelementptr inbounds %struct.GPR, %struct.GPR* %26019, i32 0, i32 15
  %26021 = getelementptr inbounds %struct.Reg, %struct.Reg* %26020, i32 0, i32 0
  %RBP.i1137 = bitcast %union.anon* %26021 to i64*
  %26022 = load i64, i64* %RBP.i1137
  %26023 = sub i64 %26022, 24
  %26024 = load i64, i64* %PC.i1135
  %26025 = add i64 %26024, 4
  store i64 %26025, i64* %PC.i1135
  %26026 = inttoptr i64 %26023 to i32*
  %26027 = load i32, i32* %26026
  %26028 = sext i32 %26027 to i64
  store i64 %26028, i64* %RDX.i1136, align 8
  store %struct.Memory* %loadMem_4abc0b, %struct.Memory** %MEMORY
  %loadMem_4abc0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %26029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26030 = getelementptr inbounds %struct.GPR, %struct.GPR* %26029, i32 0, i32 33
  %26031 = getelementptr inbounds %struct.Reg, %struct.Reg* %26030, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %26031 to i64*
  %26032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26033 = getelementptr inbounds %struct.GPR, %struct.GPR* %26032, i32 0, i32 7
  %26034 = getelementptr inbounds %struct.Reg, %struct.Reg* %26033, i32 0, i32 0
  %RDX.i1134 = bitcast %union.anon* %26034 to i64*
  %26035 = load i64, i64* %RDX.i1134
  %26036 = load i64, i64* %PC.i1133
  %26037 = add i64 %26036, 4
  store i64 %26037, i64* %PC.i1133
  %26038 = shl i64 %26035, 4
  %26039 = icmp slt i64 %26038, 0
  %26040 = shl i64 %26038, 1
  store i64 %26040, i64* %RDX.i1134, align 8
  %26041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %26042 = zext i1 %26039 to i8
  store i8 %26042, i8* %26041, align 1
  %26043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %26044 = trunc i64 %26040 to i32
  %26045 = and i32 %26044, 254
  %26046 = call i32 @llvm.ctpop.i32(i32 %26045)
  %26047 = trunc i32 %26046 to i8
  %26048 = and i8 %26047, 1
  %26049 = xor i8 %26048, 1
  store i8 %26049, i8* %26043, align 1
  %26050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26050, align 1
  %26051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26052 = icmp eq i64 %26040, 0
  %26053 = zext i1 %26052 to i8
  store i8 %26053, i8* %26051, align 1
  %26054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26055 = lshr i64 %26040, 63
  %26056 = trunc i64 %26055 to i8
  store i8 %26056, i8* %26054, align 1
  %26057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26057, align 1
  store %struct.Memory* %loadMem_4abc0f, %struct.Memory** %MEMORY
  %loadMem_4abc13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26059 = getelementptr inbounds %struct.GPR, %struct.GPR* %26058, i32 0, i32 33
  %26060 = getelementptr inbounds %struct.Reg, %struct.Reg* %26059, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %26060 to i64*
  %26061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26062 = getelementptr inbounds %struct.GPR, %struct.GPR* %26061, i32 0, i32 5
  %26063 = getelementptr inbounds %struct.Reg, %struct.Reg* %26062, i32 0, i32 0
  %RCX.i1131 = bitcast %union.anon* %26063 to i64*
  %26064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26065 = getelementptr inbounds %struct.GPR, %struct.GPR* %26064, i32 0, i32 9
  %26066 = getelementptr inbounds %struct.Reg, %struct.Reg* %26065, i32 0, i32 0
  %RSI.i1132 = bitcast %union.anon* %26066 to i64*
  %26067 = load i64, i64* %RCX.i1131
  %26068 = load i64, i64* %PC.i1130
  %26069 = add i64 %26068, 3
  store i64 %26069, i64* %PC.i1130
  store i64 %26067, i64* %RSI.i1132, align 8
  store %struct.Memory* %loadMem_4abc13, %struct.Memory** %MEMORY
  %loadMem_4abc16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26071 = getelementptr inbounds %struct.GPR, %struct.GPR* %26070, i32 0, i32 33
  %26072 = getelementptr inbounds %struct.Reg, %struct.Reg* %26071, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %26072 to i64*
  %26073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26074 = getelementptr inbounds %struct.GPR, %struct.GPR* %26073, i32 0, i32 7
  %26075 = getelementptr inbounds %struct.Reg, %struct.Reg* %26074, i32 0, i32 0
  %RDX.i1128 = bitcast %union.anon* %26075 to i64*
  %26076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26077 = getelementptr inbounds %struct.GPR, %struct.GPR* %26076, i32 0, i32 9
  %26078 = getelementptr inbounds %struct.Reg, %struct.Reg* %26077, i32 0, i32 0
  %RSI.i1129 = bitcast %union.anon* %26078 to i64*
  %26079 = load i64, i64* %RSI.i1129
  %26080 = load i64, i64* %RDX.i1128
  %26081 = load i64, i64* %PC.i1127
  %26082 = add i64 %26081, 3
  store i64 %26082, i64* %PC.i1127
  %26083 = add i64 %26080, %26079
  store i64 %26083, i64* %RSI.i1129, align 8
  %26084 = icmp ult i64 %26083, %26079
  %26085 = icmp ult i64 %26083, %26080
  %26086 = or i1 %26084, %26085
  %26087 = zext i1 %26086 to i8
  %26088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26087, i8* %26088, align 1
  %26089 = trunc i64 %26083 to i32
  %26090 = and i32 %26089, 255
  %26091 = call i32 @llvm.ctpop.i32(i32 %26090)
  %26092 = trunc i32 %26091 to i8
  %26093 = and i8 %26092, 1
  %26094 = xor i8 %26093, 1
  %26095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26094, i8* %26095, align 1
  %26096 = xor i64 %26080, %26079
  %26097 = xor i64 %26096, %26083
  %26098 = lshr i64 %26097, 4
  %26099 = trunc i64 %26098 to i8
  %26100 = and i8 %26099, 1
  %26101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26100, i8* %26101, align 1
  %26102 = icmp eq i64 %26083, 0
  %26103 = zext i1 %26102 to i8
  %26104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26103, i8* %26104, align 1
  %26105 = lshr i64 %26083, 63
  %26106 = trunc i64 %26105 to i8
  %26107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26106, i8* %26107, align 1
  %26108 = lshr i64 %26079, 63
  %26109 = lshr i64 %26080, 63
  %26110 = xor i64 %26105, %26108
  %26111 = xor i64 %26105, %26109
  %26112 = add i64 %26110, %26111
  %26113 = icmp eq i64 %26112, 2
  %26114 = zext i1 %26113 to i8
  %26115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26114, i8* %26115, align 1
  store %struct.Memory* %loadMem_4abc16, %struct.Memory** %MEMORY
  %loadMem_4abc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26117 = getelementptr inbounds %struct.GPR, %struct.GPR* %26116, i32 0, i32 33
  %26118 = getelementptr inbounds %struct.Reg, %struct.Reg* %26117, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %26118 to i64*
  %26119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26120 = getelementptr inbounds %struct.GPR, %struct.GPR* %26119, i32 0, i32 17
  %26121 = getelementptr inbounds %struct.Reg, %struct.Reg* %26120, i32 0, i32 0
  %R8D.i1125 = bitcast %union.anon* %26121 to i32*
  %26122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26123 = getelementptr inbounds %struct.GPR, %struct.GPR* %26122, i32 0, i32 9
  %26124 = getelementptr inbounds %struct.Reg, %struct.Reg* %26123, i32 0, i32 0
  %RSI.i1126 = bitcast %union.anon* %26124 to i64*
  %26125 = bitcast i32* %R8D.i1125 to i64*
  %26126 = load i64, i64* %RSI.i1126
  %26127 = add i64 %26126, 24
  %26128 = load i64, i64* %PC.i1124
  %26129 = add i64 %26128, 4
  store i64 %26129, i64* %PC.i1124
  %26130 = inttoptr i64 %26127 to i32*
  %26131 = load i32, i32* %26130
  %26132 = zext i32 %26131 to i64
  store i64 %26132, i64* %26125, align 8
  store %struct.Memory* %loadMem_4abc19, %struct.Memory** %MEMORY
  %loadMem_4abc1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %26133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26134 = getelementptr inbounds %struct.GPR, %struct.GPR* %26133, i32 0, i32 33
  %26135 = getelementptr inbounds %struct.Reg, %struct.Reg* %26134, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %26135 to i64*
  %26136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26137 = getelementptr inbounds %struct.GPR, %struct.GPR* %26136, i32 0, i32 17
  %26138 = getelementptr inbounds %struct.Reg, %struct.Reg* %26137, i32 0, i32 0
  %R8D.i1123 = bitcast %union.anon* %26138 to i32*
  %26139 = bitcast i32* %R8D.i1123 to i64*
  %26140 = load i32, i32* %R8D.i1123
  %26141 = zext i32 %26140 to i64
  %26142 = load i64, i64* %PC.i1122
  %26143 = add i64 %26142, 3
  store i64 %26143, i64* %PC.i1122
  %26144 = shl i64 %26141, 32
  %26145 = ashr i64 %26144, 33
  %26146 = trunc i64 %26141 to i8
  %26147 = and i8 %26146, 1
  %26148 = trunc i64 %26145 to i32
  %26149 = and i64 %26145, 4294967295
  store i64 %26149, i64* %26139, align 8
  %26150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26147, i8* %26150, align 1
  %26151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %26152 = and i32 %26148, 255
  %26153 = call i32 @llvm.ctpop.i32(i32 %26152)
  %26154 = trunc i32 %26153 to i8
  %26155 = and i8 %26154, 1
  %26156 = xor i8 %26155, 1
  store i8 %26156, i8* %26151, align 1
  %26157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26157, align 1
  %26158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26159 = icmp eq i32 %26148, 0
  %26160 = zext i1 %26159 to i8
  store i8 %26160, i8* %26158, align 1
  %26161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26162 = lshr i32 %26148, 31
  %26163 = trunc i32 %26162 to i8
  store i8 %26163, i8* %26161, align 1
  %26164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26164, align 1
  store %struct.Memory* %loadMem_4abc1d, %struct.Memory** %MEMORY
  %loadMem_4abc21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26166 = getelementptr inbounds %struct.GPR, %struct.GPR* %26165, i32 0, i32 33
  %26167 = getelementptr inbounds %struct.Reg, %struct.Reg* %26166, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %26167 to i64*
  %26168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26169 = getelementptr inbounds %struct.GPR, %struct.GPR* %26168, i32 0, i32 17
  %26170 = getelementptr inbounds %struct.Reg, %struct.Reg* %26169, i32 0, i32 0
  %R8D.i1120 = bitcast %union.anon* %26170 to i32*
  %26171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26172 = getelementptr inbounds %struct.GPR, %struct.GPR* %26171, i32 0, i32 11
  %26173 = getelementptr inbounds %struct.Reg, %struct.Reg* %26172, i32 0, i32 0
  %RDI.i1121 = bitcast %union.anon* %26173 to i64*
  %26174 = load i64, i64* %RDI.i1121
  %26175 = load i32, i32* %R8D.i1120
  %26176 = zext i32 %26175 to i64
  %26177 = load i64, i64* %PC.i1119
  %26178 = add i64 %26177, 3
  store i64 %26178, i64* %PC.i1119
  %26179 = trunc i64 %26174 to i32
  %26180 = add i32 %26175, %26179
  %26181 = zext i32 %26180 to i64
  store i64 %26181, i64* %RDI.i1121, align 8
  %26182 = icmp ult i32 %26180, %26179
  %26183 = icmp ult i32 %26180, %26175
  %26184 = or i1 %26182, %26183
  %26185 = zext i1 %26184 to i8
  %26186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26185, i8* %26186, align 1
  %26187 = and i32 %26180, 255
  %26188 = call i32 @llvm.ctpop.i32(i32 %26187)
  %26189 = trunc i32 %26188 to i8
  %26190 = and i8 %26189, 1
  %26191 = xor i8 %26190, 1
  %26192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26191, i8* %26192, align 1
  %26193 = xor i64 %26176, %26174
  %26194 = trunc i64 %26193 to i32
  %26195 = xor i32 %26194, %26180
  %26196 = lshr i32 %26195, 4
  %26197 = trunc i32 %26196 to i8
  %26198 = and i8 %26197, 1
  %26199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26198, i8* %26199, align 1
  %26200 = icmp eq i32 %26180, 0
  %26201 = zext i1 %26200 to i8
  %26202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26201, i8* %26202, align 1
  %26203 = lshr i32 %26180, 31
  %26204 = trunc i32 %26203 to i8
  %26205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26204, i8* %26205, align 1
  %26206 = lshr i32 %26179, 31
  %26207 = lshr i32 %26175, 31
  %26208 = xor i32 %26203, %26206
  %26209 = xor i32 %26203, %26207
  %26210 = add i32 %26208, %26209
  %26211 = icmp eq i32 %26210, 2
  %26212 = zext i1 %26211 to i8
  %26213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26212, i8* %26213, align 1
  store %struct.Memory* %loadMem_4abc21, %struct.Memory** %MEMORY
  %loadMem_4abc24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26215 = getelementptr inbounds %struct.GPR, %struct.GPR* %26214, i32 0, i32 33
  %26216 = getelementptr inbounds %struct.Reg, %struct.Reg* %26215, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %26216 to i64*
  %26217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26218 = getelementptr inbounds %struct.GPR, %struct.GPR* %26217, i32 0, i32 11
  %26219 = getelementptr inbounds %struct.Reg, %struct.Reg* %26218, i32 0, i32 0
  %EDI.i1117 = bitcast %union.anon* %26219 to i32*
  %26220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26221 = getelementptr inbounds %struct.GPR, %struct.GPR* %26220, i32 0, i32 15
  %26222 = getelementptr inbounds %struct.Reg, %struct.Reg* %26221, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %26222 to i64*
  %26223 = load i64, i64* %RBP.i1118
  %26224 = sub i64 %26223, 616
  %26225 = load i32, i32* %EDI.i1117
  %26226 = zext i32 %26225 to i64
  %26227 = load i64, i64* %PC.i1116
  %26228 = add i64 %26227, 6
  store i64 %26228, i64* %PC.i1116
  %26229 = inttoptr i64 %26224 to i32*
  store i32 %26225, i32* %26229
  store %struct.Memory* %loadMem_4abc24, %struct.Memory** %MEMORY
  %loadMem_4abc2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %26230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26231 = getelementptr inbounds %struct.GPR, %struct.GPR* %26230, i32 0, i32 33
  %26232 = getelementptr inbounds %struct.Reg, %struct.Reg* %26231, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %26232 to i64*
  %26233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26234 = getelementptr inbounds %struct.GPR, %struct.GPR* %26233, i32 0, i32 11
  %26235 = getelementptr inbounds %struct.Reg, %struct.Reg* %26234, i32 0, i32 0
  %RDI.i1114 = bitcast %union.anon* %26235 to i64*
  %26236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26237 = getelementptr inbounds %struct.GPR, %struct.GPR* %26236, i32 0, i32 15
  %26238 = getelementptr inbounds %struct.Reg, %struct.Reg* %26237, i32 0, i32 0
  %RBP.i1115 = bitcast %union.anon* %26238 to i64*
  %26239 = load i64, i64* %RBP.i1115
  %26240 = sub i64 %26239, 640
  %26241 = load i64, i64* %PC.i1113
  %26242 = add i64 %26241, 6
  store i64 %26242, i64* %PC.i1113
  %26243 = inttoptr i64 %26240 to i32*
  %26244 = load i32, i32* %26243
  %26245 = zext i32 %26244 to i64
  store i64 %26245, i64* %RDI.i1114, align 8
  store %struct.Memory* %loadMem_4abc2a, %struct.Memory** %MEMORY
  %loadMem_4abc30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26247 = getelementptr inbounds %struct.GPR, %struct.GPR* %26246, i32 0, i32 33
  %26248 = getelementptr inbounds %struct.Reg, %struct.Reg* %26247, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %26248 to i64*
  %26249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26250 = getelementptr inbounds %struct.GPR, %struct.GPR* %26249, i32 0, i32 11
  %26251 = getelementptr inbounds %struct.Reg, %struct.Reg* %26250, i32 0, i32 0
  %RDI.i1111 = bitcast %union.anon* %26251 to i64*
  %26252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26253 = getelementptr inbounds %struct.GPR, %struct.GPR* %26252, i32 0, i32 15
  %26254 = getelementptr inbounds %struct.Reg, %struct.Reg* %26253, i32 0, i32 0
  %RBP.i1112 = bitcast %union.anon* %26254 to i64*
  %26255 = load i64, i64* %RDI.i1111
  %26256 = load i64, i64* %RBP.i1112
  %26257 = sub i64 %26256, 616
  %26258 = load i64, i64* %PC.i1110
  %26259 = add i64 %26258, 6
  store i64 %26259, i64* %PC.i1110
  %26260 = trunc i64 %26255 to i32
  %26261 = inttoptr i64 %26257 to i32*
  %26262 = load i32, i32* %26261
  %26263 = add i32 %26262, %26260
  %26264 = zext i32 %26263 to i64
  store i64 %26264, i64* %RDI.i1111, align 8
  %26265 = icmp ult i32 %26263, %26260
  %26266 = icmp ult i32 %26263, %26262
  %26267 = or i1 %26265, %26266
  %26268 = zext i1 %26267 to i8
  %26269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26268, i8* %26269, align 1
  %26270 = and i32 %26263, 255
  %26271 = call i32 @llvm.ctpop.i32(i32 %26270)
  %26272 = trunc i32 %26271 to i8
  %26273 = and i8 %26272, 1
  %26274 = xor i8 %26273, 1
  %26275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26274, i8* %26275, align 1
  %26276 = xor i32 %26262, %26260
  %26277 = xor i32 %26276, %26263
  %26278 = lshr i32 %26277, 4
  %26279 = trunc i32 %26278 to i8
  %26280 = and i8 %26279, 1
  %26281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26280, i8* %26281, align 1
  %26282 = icmp eq i32 %26263, 0
  %26283 = zext i1 %26282 to i8
  %26284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26283, i8* %26284, align 1
  %26285 = lshr i32 %26263, 31
  %26286 = trunc i32 %26285 to i8
  %26287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26286, i8* %26287, align 1
  %26288 = lshr i32 %26260, 31
  %26289 = lshr i32 %26262, 31
  %26290 = xor i32 %26285, %26288
  %26291 = xor i32 %26285, %26289
  %26292 = add i32 %26290, %26291
  %26293 = icmp eq i32 %26292, 2
  %26294 = zext i1 %26293 to i8
  %26295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26294, i8* %26295, align 1
  store %struct.Memory* %loadMem_4abc30, %struct.Memory** %MEMORY
  %loadMem_4abc36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26297 = getelementptr inbounds %struct.GPR, %struct.GPR* %26296, i32 0, i32 33
  %26298 = getelementptr inbounds %struct.Reg, %struct.Reg* %26297, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %26298 to i64*
  %26299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26300 = getelementptr inbounds %struct.GPR, %struct.GPR* %26299, i32 0, i32 11
  %26301 = getelementptr inbounds %struct.Reg, %struct.Reg* %26300, i32 0, i32 0
  %EDI.i1108 = bitcast %union.anon* %26301 to i32*
  %26302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26303 = getelementptr inbounds %struct.GPR, %struct.GPR* %26302, i32 0, i32 15
  %26304 = getelementptr inbounds %struct.Reg, %struct.Reg* %26303, i32 0, i32 0
  %RBP.i1109 = bitcast %union.anon* %26304 to i64*
  %26305 = load i64, i64* %RBP.i1109
  %26306 = sub i64 %26305, 672
  %26307 = load i32, i32* %EDI.i1108
  %26308 = zext i32 %26307 to i64
  %26309 = load i64, i64* %PC.i1107
  %26310 = add i64 %26309, 6
  store i64 %26310, i64* %PC.i1107
  %26311 = inttoptr i64 %26306 to i32*
  store i32 %26307, i32* %26311
  store %struct.Memory* %loadMem_4abc36, %struct.Memory** %MEMORY
  %loadMem_4abc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %26312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26313 = getelementptr inbounds %struct.GPR, %struct.GPR* %26312, i32 0, i32 33
  %26314 = getelementptr inbounds %struct.Reg, %struct.Reg* %26313, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %26314 to i64*
  %26315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26316 = getelementptr inbounds %struct.GPR, %struct.GPR* %26315, i32 0, i32 11
  %26317 = getelementptr inbounds %struct.Reg, %struct.Reg* %26316, i32 0, i32 0
  %RDI.i1105 = bitcast %union.anon* %26317 to i64*
  %26318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26319 = getelementptr inbounds %struct.GPR, %struct.GPR* %26318, i32 0, i32 15
  %26320 = getelementptr inbounds %struct.Reg, %struct.Reg* %26319, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %26320 to i64*
  %26321 = load i64, i64* %RBP.i1106
  %26322 = sub i64 %26321, 624
  %26323 = load i64, i64* %PC.i1104
  %26324 = add i64 %26323, 6
  store i64 %26324, i64* %PC.i1104
  %26325 = inttoptr i64 %26322 to i32*
  %26326 = load i32, i32* %26325
  %26327 = zext i32 %26326 to i64
  store i64 %26327, i64* %RDI.i1105, align 8
  store %struct.Memory* %loadMem_4abc3c, %struct.Memory** %MEMORY
  %loadMem_4abc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26329 = getelementptr inbounds %struct.GPR, %struct.GPR* %26328, i32 0, i32 33
  %26330 = getelementptr inbounds %struct.Reg, %struct.Reg* %26329, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %26330 to i64*
  %26331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26332 = getelementptr inbounds %struct.GPR, %struct.GPR* %26331, i32 0, i32 11
  %26333 = getelementptr inbounds %struct.Reg, %struct.Reg* %26332, i32 0, i32 0
  %RDI.i1102 = bitcast %union.anon* %26333 to i64*
  %26334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26335 = getelementptr inbounds %struct.GPR, %struct.GPR* %26334, i32 0, i32 15
  %26336 = getelementptr inbounds %struct.Reg, %struct.Reg* %26335, i32 0, i32 0
  %RBP.i1103 = bitcast %union.anon* %26336 to i64*
  %26337 = load i64, i64* %RDI.i1102
  %26338 = load i64, i64* %RBP.i1103
  %26339 = sub i64 %26338, 632
  %26340 = load i64, i64* %PC.i1101
  %26341 = add i64 %26340, 6
  store i64 %26341, i64* %PC.i1101
  %26342 = trunc i64 %26337 to i32
  %26343 = inttoptr i64 %26339 to i32*
  %26344 = load i32, i32* %26343
  %26345 = add i32 %26344, %26342
  %26346 = zext i32 %26345 to i64
  store i64 %26346, i64* %RDI.i1102, align 8
  %26347 = icmp ult i32 %26345, %26342
  %26348 = icmp ult i32 %26345, %26344
  %26349 = or i1 %26347, %26348
  %26350 = zext i1 %26349 to i8
  %26351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26350, i8* %26351, align 1
  %26352 = and i32 %26345, 255
  %26353 = call i32 @llvm.ctpop.i32(i32 %26352)
  %26354 = trunc i32 %26353 to i8
  %26355 = and i8 %26354, 1
  %26356 = xor i8 %26355, 1
  %26357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26356, i8* %26357, align 1
  %26358 = xor i32 %26344, %26342
  %26359 = xor i32 %26358, %26345
  %26360 = lshr i32 %26359, 4
  %26361 = trunc i32 %26360 to i8
  %26362 = and i8 %26361, 1
  %26363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26362, i8* %26363, align 1
  %26364 = icmp eq i32 %26345, 0
  %26365 = zext i1 %26364 to i8
  %26366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26365, i8* %26366, align 1
  %26367 = lshr i32 %26345, 31
  %26368 = trunc i32 %26367 to i8
  %26369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26368, i8* %26369, align 1
  %26370 = lshr i32 %26342, 31
  %26371 = lshr i32 %26344, 31
  %26372 = xor i32 %26367, %26370
  %26373 = xor i32 %26367, %26371
  %26374 = add i32 %26372, %26373
  %26375 = icmp eq i32 %26374, 2
  %26376 = zext i1 %26375 to i8
  %26377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26376, i8* %26377, align 1
  store %struct.Memory* %loadMem_4abc42, %struct.Memory** %MEMORY
  %loadMem_4abc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26379 = getelementptr inbounds %struct.GPR, %struct.GPR* %26378, i32 0, i32 33
  %26380 = getelementptr inbounds %struct.Reg, %struct.Reg* %26379, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %26380 to i64*
  %26381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26382 = getelementptr inbounds %struct.GPR, %struct.GPR* %26381, i32 0, i32 11
  %26383 = getelementptr inbounds %struct.Reg, %struct.Reg* %26382, i32 0, i32 0
  %EDI.i1099 = bitcast %union.anon* %26383 to i32*
  %26384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26385 = getelementptr inbounds %struct.GPR, %struct.GPR* %26384, i32 0, i32 15
  %26386 = getelementptr inbounds %struct.Reg, %struct.Reg* %26385, i32 0, i32 0
  %RBP.i1100 = bitcast %union.anon* %26386 to i64*
  %26387 = load i64, i64* %RBP.i1100
  %26388 = sub i64 %26387, 664
  %26389 = load i32, i32* %EDI.i1099
  %26390 = zext i32 %26389 to i64
  %26391 = load i64, i64* %PC.i1098
  %26392 = add i64 %26391, 6
  store i64 %26392, i64* %PC.i1098
  %26393 = inttoptr i64 %26388 to i32*
  store i32 %26389, i32* %26393
  store %struct.Memory* %loadMem_4abc48, %struct.Memory** %MEMORY
  %loadMem_4abc4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %26394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26395 = getelementptr inbounds %struct.GPR, %struct.GPR* %26394, i32 0, i32 33
  %26396 = getelementptr inbounds %struct.Reg, %struct.Reg* %26395, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %26396 to i64*
  %26397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26398 = getelementptr inbounds %struct.GPR, %struct.GPR* %26397, i32 0, i32 11
  %26399 = getelementptr inbounds %struct.Reg, %struct.Reg* %26398, i32 0, i32 0
  %RDI.i1096 = bitcast %union.anon* %26399 to i64*
  %26400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26401 = getelementptr inbounds %struct.GPR, %struct.GPR* %26400, i32 0, i32 15
  %26402 = getelementptr inbounds %struct.Reg, %struct.Reg* %26401, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %26402 to i64*
  %26403 = load i64, i64* %RBP.i1097
  %26404 = sub i64 %26403, 624
  %26405 = load i64, i64* %PC.i1095
  %26406 = add i64 %26405, 6
  store i64 %26406, i64* %PC.i1095
  %26407 = inttoptr i64 %26404 to i32*
  %26408 = load i32, i32* %26407
  %26409 = zext i32 %26408 to i64
  store i64 %26409, i64* %RDI.i1096, align 8
  store %struct.Memory* %loadMem_4abc4e, %struct.Memory** %MEMORY
  %loadMem_4abc54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26411 = getelementptr inbounds %struct.GPR, %struct.GPR* %26410, i32 0, i32 33
  %26412 = getelementptr inbounds %struct.Reg, %struct.Reg* %26411, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %26412 to i64*
  %26413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26414 = getelementptr inbounds %struct.GPR, %struct.GPR* %26413, i32 0, i32 11
  %26415 = getelementptr inbounds %struct.Reg, %struct.Reg* %26414, i32 0, i32 0
  %RDI.i1093 = bitcast %union.anon* %26415 to i64*
  %26416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26417 = getelementptr inbounds %struct.GPR, %struct.GPR* %26416, i32 0, i32 15
  %26418 = getelementptr inbounds %struct.Reg, %struct.Reg* %26417, i32 0, i32 0
  %RBP.i1094 = bitcast %union.anon* %26418 to i64*
  %26419 = load i64, i64* %RDI.i1093
  %26420 = load i64, i64* %RBP.i1094
  %26421 = sub i64 %26420, 632
  %26422 = load i64, i64* %PC.i1092
  %26423 = add i64 %26422, 6
  store i64 %26423, i64* %PC.i1092
  %26424 = trunc i64 %26419 to i32
  %26425 = inttoptr i64 %26421 to i32*
  %26426 = load i32, i32* %26425
  %26427 = sub i32 %26424, %26426
  %26428 = zext i32 %26427 to i64
  store i64 %26428, i64* %RDI.i1093, align 8
  %26429 = icmp ult i32 %26424, %26426
  %26430 = zext i1 %26429 to i8
  %26431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26430, i8* %26431, align 1
  %26432 = and i32 %26427, 255
  %26433 = call i32 @llvm.ctpop.i32(i32 %26432)
  %26434 = trunc i32 %26433 to i8
  %26435 = and i8 %26434, 1
  %26436 = xor i8 %26435, 1
  %26437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26436, i8* %26437, align 1
  %26438 = xor i32 %26426, %26424
  %26439 = xor i32 %26438, %26427
  %26440 = lshr i32 %26439, 4
  %26441 = trunc i32 %26440 to i8
  %26442 = and i8 %26441, 1
  %26443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26442, i8* %26443, align 1
  %26444 = icmp eq i32 %26427, 0
  %26445 = zext i1 %26444 to i8
  %26446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26445, i8* %26446, align 1
  %26447 = lshr i32 %26427, 31
  %26448 = trunc i32 %26447 to i8
  %26449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26448, i8* %26449, align 1
  %26450 = lshr i32 %26424, 31
  %26451 = lshr i32 %26426, 31
  %26452 = xor i32 %26451, %26450
  %26453 = xor i32 %26447, %26450
  %26454 = add i32 %26453, %26452
  %26455 = icmp eq i32 %26454, 2
  %26456 = zext i1 %26455 to i8
  %26457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26456, i8* %26457, align 1
  store %struct.Memory* %loadMem_4abc54, %struct.Memory** %MEMORY
  %loadMem_4abc5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %26458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26459 = getelementptr inbounds %struct.GPR, %struct.GPR* %26458, i32 0, i32 33
  %26460 = getelementptr inbounds %struct.Reg, %struct.Reg* %26459, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %26460 to i64*
  %26461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26462 = getelementptr inbounds %struct.GPR, %struct.GPR* %26461, i32 0, i32 11
  %26463 = getelementptr inbounds %struct.Reg, %struct.Reg* %26462, i32 0, i32 0
  %EDI.i1090 = bitcast %union.anon* %26463 to i32*
  %26464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26465 = getelementptr inbounds %struct.GPR, %struct.GPR* %26464, i32 0, i32 15
  %26466 = getelementptr inbounds %struct.Reg, %struct.Reg* %26465, i32 0, i32 0
  %RBP.i1091 = bitcast %union.anon* %26466 to i64*
  %26467 = load i64, i64* %RBP.i1091
  %26468 = sub i64 %26467, 656
  %26469 = load i32, i32* %EDI.i1090
  %26470 = zext i32 %26469 to i64
  %26471 = load i64, i64* %PC.i1089
  %26472 = add i64 %26471, 6
  store i64 %26472, i64* %PC.i1089
  %26473 = inttoptr i64 %26468 to i32*
  store i32 %26469, i32* %26473
  store %struct.Memory* %loadMem_4abc5a, %struct.Memory** %MEMORY
  %loadMem_4abc60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26475 = getelementptr inbounds %struct.GPR, %struct.GPR* %26474, i32 0, i32 33
  %26476 = getelementptr inbounds %struct.Reg, %struct.Reg* %26475, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %26476 to i64*
  %26477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26478 = getelementptr inbounds %struct.GPR, %struct.GPR* %26477, i32 0, i32 11
  %26479 = getelementptr inbounds %struct.Reg, %struct.Reg* %26478, i32 0, i32 0
  %RDI.i1087 = bitcast %union.anon* %26479 to i64*
  %26480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26481 = getelementptr inbounds %struct.GPR, %struct.GPR* %26480, i32 0, i32 15
  %26482 = getelementptr inbounds %struct.Reg, %struct.Reg* %26481, i32 0, i32 0
  %RBP.i1088 = bitcast %union.anon* %26482 to i64*
  %26483 = load i64, i64* %RBP.i1088
  %26484 = sub i64 %26483, 640
  %26485 = load i64, i64* %PC.i1086
  %26486 = add i64 %26485, 6
  store i64 %26486, i64* %PC.i1086
  %26487 = inttoptr i64 %26484 to i32*
  %26488 = load i32, i32* %26487
  %26489 = zext i32 %26488 to i64
  store i64 %26489, i64* %RDI.i1087, align 8
  store %struct.Memory* %loadMem_4abc60, %struct.Memory** %MEMORY
  %loadMem_4abc66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26491 = getelementptr inbounds %struct.GPR, %struct.GPR* %26490, i32 0, i32 33
  %26492 = getelementptr inbounds %struct.Reg, %struct.Reg* %26491, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %26492 to i64*
  %26493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26494 = getelementptr inbounds %struct.GPR, %struct.GPR* %26493, i32 0, i32 11
  %26495 = getelementptr inbounds %struct.Reg, %struct.Reg* %26494, i32 0, i32 0
  %RDI.i1084 = bitcast %union.anon* %26495 to i64*
  %26496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26497 = getelementptr inbounds %struct.GPR, %struct.GPR* %26496, i32 0, i32 15
  %26498 = getelementptr inbounds %struct.Reg, %struct.Reg* %26497, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %26498 to i64*
  %26499 = load i64, i64* %RDI.i1084
  %26500 = load i64, i64* %RBP.i1085
  %26501 = sub i64 %26500, 616
  %26502 = load i64, i64* %PC.i1083
  %26503 = add i64 %26502, 6
  store i64 %26503, i64* %PC.i1083
  %26504 = trunc i64 %26499 to i32
  %26505 = inttoptr i64 %26501 to i32*
  %26506 = load i32, i32* %26505
  %26507 = sub i32 %26504, %26506
  %26508 = zext i32 %26507 to i64
  store i64 %26508, i64* %RDI.i1084, align 8
  %26509 = icmp ult i32 %26504, %26506
  %26510 = zext i1 %26509 to i8
  %26511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26510, i8* %26511, align 1
  %26512 = and i32 %26507, 255
  %26513 = call i32 @llvm.ctpop.i32(i32 %26512)
  %26514 = trunc i32 %26513 to i8
  %26515 = and i8 %26514, 1
  %26516 = xor i8 %26515, 1
  %26517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26516, i8* %26517, align 1
  %26518 = xor i32 %26506, %26504
  %26519 = xor i32 %26518, %26507
  %26520 = lshr i32 %26519, 4
  %26521 = trunc i32 %26520 to i8
  %26522 = and i8 %26521, 1
  %26523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26522, i8* %26523, align 1
  %26524 = icmp eq i32 %26507, 0
  %26525 = zext i1 %26524 to i8
  %26526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26525, i8* %26526, align 1
  %26527 = lshr i32 %26507, 31
  %26528 = trunc i32 %26527 to i8
  %26529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26528, i8* %26529, align 1
  %26530 = lshr i32 %26504, 31
  %26531 = lshr i32 %26506, 31
  %26532 = xor i32 %26531, %26530
  %26533 = xor i32 %26527, %26530
  %26534 = add i32 %26533, %26532
  %26535 = icmp eq i32 %26534, 2
  %26536 = zext i1 %26535 to i8
  %26537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26536, i8* %26537, align 1
  store %struct.Memory* %loadMem_4abc66, %struct.Memory** %MEMORY
  %loadMem_4abc6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %26538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26539 = getelementptr inbounds %struct.GPR, %struct.GPR* %26538, i32 0, i32 33
  %26540 = getelementptr inbounds %struct.Reg, %struct.Reg* %26539, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %26540 to i64*
  %26541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26542 = getelementptr inbounds %struct.GPR, %struct.GPR* %26541, i32 0, i32 11
  %26543 = getelementptr inbounds %struct.Reg, %struct.Reg* %26542, i32 0, i32 0
  %EDI.i1081 = bitcast %union.anon* %26543 to i32*
  %26544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26545 = getelementptr inbounds %struct.GPR, %struct.GPR* %26544, i32 0, i32 15
  %26546 = getelementptr inbounds %struct.Reg, %struct.Reg* %26545, i32 0, i32 0
  %RBP.i1082 = bitcast %union.anon* %26546 to i64*
  %26547 = load i64, i64* %RBP.i1082
  %26548 = sub i64 %26547, 648
  %26549 = load i32, i32* %EDI.i1081
  %26550 = zext i32 %26549 to i64
  %26551 = load i64, i64* %PC.i1080
  %26552 = add i64 %26551, 6
  store i64 %26552, i64* %PC.i1080
  %26553 = inttoptr i64 %26548 to i32*
  store i32 %26549, i32* %26553
  store %struct.Memory* %loadMem_4abc6c, %struct.Memory** %MEMORY
  %loadMem_4abc72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26555 = getelementptr inbounds %struct.GPR, %struct.GPR* %26554, i32 0, i32 33
  %26556 = getelementptr inbounds %struct.Reg, %struct.Reg* %26555, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %26556 to i64*
  %26557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26558 = getelementptr inbounds %struct.GPR, %struct.GPR* %26557, i32 0, i32 7
  %26559 = getelementptr inbounds %struct.Reg, %struct.Reg* %26558, i32 0, i32 0
  %RDX.i1078 = bitcast %union.anon* %26559 to i64*
  %26560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26561 = getelementptr inbounds %struct.GPR, %struct.GPR* %26560, i32 0, i32 15
  %26562 = getelementptr inbounds %struct.Reg, %struct.Reg* %26561, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %26562 to i64*
  %26563 = load i64, i64* %RBP.i1079
  %26564 = sub i64 %26563, 24
  %26565 = load i64, i64* %PC.i1077
  %26566 = add i64 %26565, 4
  store i64 %26566, i64* %PC.i1077
  %26567 = inttoptr i64 %26564 to i32*
  %26568 = load i32, i32* %26567
  %26569 = sext i32 %26568 to i64
  store i64 %26569, i64* %RDX.i1078, align 8
  store %struct.Memory* %loadMem_4abc72, %struct.Memory** %MEMORY
  %loadMem_4abc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26571 = getelementptr inbounds %struct.GPR, %struct.GPR* %26570, i32 0, i32 33
  %26572 = getelementptr inbounds %struct.Reg, %struct.Reg* %26571, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %26572 to i64*
  %26573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26574 = getelementptr inbounds %struct.GPR, %struct.GPR* %26573, i32 0, i32 7
  %26575 = getelementptr inbounds %struct.Reg, %struct.Reg* %26574, i32 0, i32 0
  %RDX.i1076 = bitcast %union.anon* %26575 to i64*
  %26576 = load i64, i64* %RDX.i1076
  %26577 = load i64, i64* %PC.i1075
  %26578 = add i64 %26577, 4
  store i64 %26578, i64* %PC.i1075
  %26579 = shl i64 %26576, 4
  %26580 = icmp slt i64 %26579, 0
  %26581 = shl i64 %26579, 1
  store i64 %26581, i64* %RDX.i1076, align 8
  %26582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %26583 = zext i1 %26580 to i8
  store i8 %26583, i8* %26582, align 1
  %26584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %26585 = trunc i64 %26581 to i32
  %26586 = and i32 %26585, 254
  %26587 = call i32 @llvm.ctpop.i32(i32 %26586)
  %26588 = trunc i32 %26587 to i8
  %26589 = and i8 %26588, 1
  %26590 = xor i8 %26589, 1
  store i8 %26590, i8* %26584, align 1
  %26591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26591, align 1
  %26592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26593 = icmp eq i64 %26581, 0
  %26594 = zext i1 %26593 to i8
  store i8 %26594, i8* %26592, align 1
  %26595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26596 = lshr i64 %26581, 63
  %26597 = trunc i64 %26596 to i8
  store i8 %26597, i8* %26595, align 1
  %26598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26598, align 1
  store %struct.Memory* %loadMem_4abc76, %struct.Memory** %MEMORY
  %loadMem_4abc7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %26599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26600 = getelementptr inbounds %struct.GPR, %struct.GPR* %26599, i32 0, i32 33
  %26601 = getelementptr inbounds %struct.Reg, %struct.Reg* %26600, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %26601 to i64*
  %26602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26603 = getelementptr inbounds %struct.GPR, %struct.GPR* %26602, i32 0, i32 5
  %26604 = getelementptr inbounds %struct.Reg, %struct.Reg* %26603, i32 0, i32 0
  %RCX.i1073 = bitcast %union.anon* %26604 to i64*
  %26605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26606 = getelementptr inbounds %struct.GPR, %struct.GPR* %26605, i32 0, i32 9
  %26607 = getelementptr inbounds %struct.Reg, %struct.Reg* %26606, i32 0, i32 0
  %RSI.i1074 = bitcast %union.anon* %26607 to i64*
  %26608 = load i64, i64* %RCX.i1073
  %26609 = load i64, i64* %PC.i1072
  %26610 = add i64 %26609, 3
  store i64 %26610, i64* %PC.i1072
  store i64 %26608, i64* %RSI.i1074, align 8
  store %struct.Memory* %loadMem_4abc7a, %struct.Memory** %MEMORY
  %loadMem_4abc7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %26611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26612 = getelementptr inbounds %struct.GPR, %struct.GPR* %26611, i32 0, i32 33
  %26613 = getelementptr inbounds %struct.Reg, %struct.Reg* %26612, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %26613 to i64*
  %26614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26615 = getelementptr inbounds %struct.GPR, %struct.GPR* %26614, i32 0, i32 7
  %26616 = getelementptr inbounds %struct.Reg, %struct.Reg* %26615, i32 0, i32 0
  %RDX.i1070 = bitcast %union.anon* %26616 to i64*
  %26617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26618 = getelementptr inbounds %struct.GPR, %struct.GPR* %26617, i32 0, i32 9
  %26619 = getelementptr inbounds %struct.Reg, %struct.Reg* %26618, i32 0, i32 0
  %RSI.i1071 = bitcast %union.anon* %26619 to i64*
  %26620 = load i64, i64* %RSI.i1071
  %26621 = load i64, i64* %RDX.i1070
  %26622 = load i64, i64* %PC.i1069
  %26623 = add i64 %26622, 3
  store i64 %26623, i64* %PC.i1069
  %26624 = add i64 %26621, %26620
  store i64 %26624, i64* %RSI.i1071, align 8
  %26625 = icmp ult i64 %26624, %26620
  %26626 = icmp ult i64 %26624, %26621
  %26627 = or i1 %26625, %26626
  %26628 = zext i1 %26627 to i8
  %26629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26628, i8* %26629, align 1
  %26630 = trunc i64 %26624 to i32
  %26631 = and i32 %26630, 255
  %26632 = call i32 @llvm.ctpop.i32(i32 %26631)
  %26633 = trunc i32 %26632 to i8
  %26634 = and i8 %26633, 1
  %26635 = xor i8 %26634, 1
  %26636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26635, i8* %26636, align 1
  %26637 = xor i64 %26621, %26620
  %26638 = xor i64 %26637, %26624
  %26639 = lshr i64 %26638, 4
  %26640 = trunc i64 %26639 to i8
  %26641 = and i8 %26640, 1
  %26642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26641, i8* %26642, align 1
  %26643 = icmp eq i64 %26624, 0
  %26644 = zext i1 %26643 to i8
  %26645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26644, i8* %26645, align 1
  %26646 = lshr i64 %26624, 63
  %26647 = trunc i64 %26646 to i8
  %26648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26647, i8* %26648, align 1
  %26649 = lshr i64 %26620, 63
  %26650 = lshr i64 %26621, 63
  %26651 = xor i64 %26646, %26649
  %26652 = xor i64 %26646, %26650
  %26653 = add i64 %26651, %26652
  %26654 = icmp eq i64 %26653, 2
  %26655 = zext i1 %26654 to i8
  %26656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26655, i8* %26656, align 1
  store %struct.Memory* %loadMem_4abc7d, %struct.Memory** %MEMORY
  %loadMem_4abc80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26658 = getelementptr inbounds %struct.GPR, %struct.GPR* %26657, i32 0, i32 33
  %26659 = getelementptr inbounds %struct.Reg, %struct.Reg* %26658, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %26659 to i64*
  %26660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26661 = getelementptr inbounds %struct.GPR, %struct.GPR* %26660, i32 0, i32 1
  %26662 = getelementptr inbounds %struct.Reg, %struct.Reg* %26661, i32 0, i32 0
  %EAX.i1067 = bitcast %union.anon* %26662 to i32*
  %26663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26664 = getelementptr inbounds %struct.GPR, %struct.GPR* %26663, i32 0, i32 11
  %26665 = getelementptr inbounds %struct.Reg, %struct.Reg* %26664, i32 0, i32 0
  %RDI.i1068 = bitcast %union.anon* %26665 to i64*
  %26666 = load i32, i32* %EAX.i1067
  %26667 = zext i32 %26666 to i64
  %26668 = load i64, i64* %PC.i1066
  %26669 = add i64 %26668, 2
  store i64 %26669, i64* %PC.i1066
  %26670 = and i64 %26667, 4294967295
  store i64 %26670, i64* %RDI.i1068, align 8
  store %struct.Memory* %loadMem_4abc80, %struct.Memory** %MEMORY
  %loadMem_4abc82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26672 = getelementptr inbounds %struct.GPR, %struct.GPR* %26671, i32 0, i32 33
  %26673 = getelementptr inbounds %struct.Reg, %struct.Reg* %26672, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %26673 to i64*
  %26674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26675 = getelementptr inbounds %struct.GPR, %struct.GPR* %26674, i32 0, i32 9
  %26676 = getelementptr inbounds %struct.Reg, %struct.Reg* %26675, i32 0, i32 0
  %RSI.i1064 = bitcast %union.anon* %26676 to i64*
  %26677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26678 = getelementptr inbounds %struct.GPR, %struct.GPR* %26677, i32 0, i32 11
  %26679 = getelementptr inbounds %struct.Reg, %struct.Reg* %26678, i32 0, i32 0
  %RDI.i1065 = bitcast %union.anon* %26679 to i64*
  %26680 = load i64, i64* %RDI.i1065
  %26681 = load i64, i64* %RSI.i1064
  %26682 = add i64 %26681, 12
  %26683 = load i64, i64* %PC.i1063
  %26684 = add i64 %26683, 3
  store i64 %26684, i64* %PC.i1063
  %26685 = trunc i64 %26680 to i32
  %26686 = inttoptr i64 %26682 to i32*
  %26687 = load i32, i32* %26686
  %26688 = sub i32 %26685, %26687
  %26689 = zext i32 %26688 to i64
  store i64 %26689, i64* %RDI.i1065, align 8
  %26690 = icmp ult i32 %26685, %26687
  %26691 = zext i1 %26690 to i8
  %26692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26691, i8* %26692, align 1
  %26693 = and i32 %26688, 255
  %26694 = call i32 @llvm.ctpop.i32(i32 %26693)
  %26695 = trunc i32 %26694 to i8
  %26696 = and i8 %26695, 1
  %26697 = xor i8 %26696, 1
  %26698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26697, i8* %26698, align 1
  %26699 = xor i32 %26687, %26685
  %26700 = xor i32 %26699, %26688
  %26701 = lshr i32 %26700, 4
  %26702 = trunc i32 %26701 to i8
  %26703 = and i8 %26702, 1
  %26704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26703, i8* %26704, align 1
  %26705 = icmp eq i32 %26688, 0
  %26706 = zext i1 %26705 to i8
  %26707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26706, i8* %26707, align 1
  %26708 = lshr i32 %26688, 31
  %26709 = trunc i32 %26708 to i8
  %26710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26709, i8* %26710, align 1
  %26711 = lshr i32 %26685, 31
  %26712 = lshr i32 %26687, 31
  %26713 = xor i32 %26712, %26711
  %26714 = xor i32 %26708, %26711
  %26715 = add i32 %26714, %26713
  %26716 = icmp eq i32 %26715, 2
  %26717 = zext i1 %26716 to i8
  %26718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26717, i8* %26718, align 1
  store %struct.Memory* %loadMem_4abc82, %struct.Memory** %MEMORY
  %loadMem_4abc85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26720 = getelementptr inbounds %struct.GPR, %struct.GPR* %26719, i32 0, i32 33
  %26721 = getelementptr inbounds %struct.Reg, %struct.Reg* %26720, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %26721 to i64*
  %26722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26723 = getelementptr inbounds %struct.GPR, %struct.GPR* %26722, i32 0, i32 7
  %26724 = getelementptr inbounds %struct.Reg, %struct.Reg* %26723, i32 0, i32 0
  %RDX.i1061 = bitcast %union.anon* %26724 to i64*
  %26725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26726 = getelementptr inbounds %struct.GPR, %struct.GPR* %26725, i32 0, i32 15
  %26727 = getelementptr inbounds %struct.Reg, %struct.Reg* %26726, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %26727 to i64*
  %26728 = load i64, i64* %RBP.i1062
  %26729 = sub i64 %26728, 24
  %26730 = load i64, i64* %PC.i1060
  %26731 = add i64 %26730, 4
  store i64 %26731, i64* %PC.i1060
  %26732 = inttoptr i64 %26729 to i32*
  %26733 = load i32, i32* %26732
  %26734 = sext i32 %26733 to i64
  store i64 %26734, i64* %RDX.i1061, align 8
  store %struct.Memory* %loadMem_4abc85, %struct.Memory** %MEMORY
  %loadMem_4abc89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26736 = getelementptr inbounds %struct.GPR, %struct.GPR* %26735, i32 0, i32 33
  %26737 = getelementptr inbounds %struct.Reg, %struct.Reg* %26736, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %26737 to i64*
  %26738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26739 = getelementptr inbounds %struct.GPR, %struct.GPR* %26738, i32 0, i32 7
  %26740 = getelementptr inbounds %struct.Reg, %struct.Reg* %26739, i32 0, i32 0
  %RDX.i1059 = bitcast %union.anon* %26740 to i64*
  %26741 = load i64, i64* %RDX.i1059
  %26742 = load i64, i64* %PC.i1058
  %26743 = add i64 %26742, 4
  store i64 %26743, i64* %PC.i1058
  %26744 = shl i64 %26741, 4
  %26745 = icmp slt i64 %26744, 0
  %26746 = shl i64 %26744, 1
  store i64 %26746, i64* %RDX.i1059, align 8
  %26747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %26748 = zext i1 %26745 to i8
  store i8 %26748, i8* %26747, align 1
  %26749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %26750 = trunc i64 %26746 to i32
  %26751 = and i32 %26750, 254
  %26752 = call i32 @llvm.ctpop.i32(i32 %26751)
  %26753 = trunc i32 %26752 to i8
  %26754 = and i8 %26753, 1
  %26755 = xor i8 %26754, 1
  store i8 %26755, i8* %26749, align 1
  %26756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26756, align 1
  %26757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26758 = icmp eq i64 %26746, 0
  %26759 = zext i1 %26758 to i8
  store i8 %26759, i8* %26757, align 1
  %26760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26761 = lshr i64 %26746, 63
  %26762 = trunc i64 %26761 to i8
  store i8 %26762, i8* %26760, align 1
  %26763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26763, align 1
  store %struct.Memory* %loadMem_4abc89, %struct.Memory** %MEMORY
  %loadMem_4abc8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %26764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26765 = getelementptr inbounds %struct.GPR, %struct.GPR* %26764, i32 0, i32 33
  %26766 = getelementptr inbounds %struct.Reg, %struct.Reg* %26765, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %26766 to i64*
  %26767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26768 = getelementptr inbounds %struct.GPR, %struct.GPR* %26767, i32 0, i32 5
  %26769 = getelementptr inbounds %struct.Reg, %struct.Reg* %26768, i32 0, i32 0
  %RCX.i1056 = bitcast %union.anon* %26769 to i64*
  %26770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26771 = getelementptr inbounds %struct.GPR, %struct.GPR* %26770, i32 0, i32 9
  %26772 = getelementptr inbounds %struct.Reg, %struct.Reg* %26771, i32 0, i32 0
  %RSI.i1057 = bitcast %union.anon* %26772 to i64*
  %26773 = load i64, i64* %RCX.i1056
  %26774 = load i64, i64* %PC.i1055
  %26775 = add i64 %26774, 3
  store i64 %26775, i64* %PC.i1055
  store i64 %26773, i64* %RSI.i1057, align 8
  store %struct.Memory* %loadMem_4abc8d, %struct.Memory** %MEMORY
  %loadMem_4abc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26777 = getelementptr inbounds %struct.GPR, %struct.GPR* %26776, i32 0, i32 33
  %26778 = getelementptr inbounds %struct.Reg, %struct.Reg* %26777, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %26778 to i64*
  %26779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26780 = getelementptr inbounds %struct.GPR, %struct.GPR* %26779, i32 0, i32 7
  %26781 = getelementptr inbounds %struct.Reg, %struct.Reg* %26780, i32 0, i32 0
  %RDX.i1053 = bitcast %union.anon* %26781 to i64*
  %26782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26783 = getelementptr inbounds %struct.GPR, %struct.GPR* %26782, i32 0, i32 9
  %26784 = getelementptr inbounds %struct.Reg, %struct.Reg* %26783, i32 0, i32 0
  %RSI.i1054 = bitcast %union.anon* %26784 to i64*
  %26785 = load i64, i64* %RSI.i1054
  %26786 = load i64, i64* %RDX.i1053
  %26787 = load i64, i64* %PC.i1052
  %26788 = add i64 %26787, 3
  store i64 %26788, i64* %PC.i1052
  %26789 = add i64 %26786, %26785
  store i64 %26789, i64* %RSI.i1054, align 8
  %26790 = icmp ult i64 %26789, %26785
  %26791 = icmp ult i64 %26789, %26786
  %26792 = or i1 %26790, %26791
  %26793 = zext i1 %26792 to i8
  %26794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26793, i8* %26794, align 1
  %26795 = trunc i64 %26789 to i32
  %26796 = and i32 %26795, 255
  %26797 = call i32 @llvm.ctpop.i32(i32 %26796)
  %26798 = trunc i32 %26797 to i8
  %26799 = and i8 %26798, 1
  %26800 = xor i8 %26799, 1
  %26801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26800, i8* %26801, align 1
  %26802 = xor i64 %26786, %26785
  %26803 = xor i64 %26802, %26789
  %26804 = lshr i64 %26803, 4
  %26805 = trunc i64 %26804 to i8
  %26806 = and i8 %26805, 1
  %26807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26806, i8* %26807, align 1
  %26808 = icmp eq i64 %26789, 0
  %26809 = zext i1 %26808 to i8
  %26810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26809, i8* %26810, align 1
  %26811 = lshr i64 %26789, 63
  %26812 = trunc i64 %26811 to i8
  %26813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26812, i8* %26813, align 1
  %26814 = lshr i64 %26785, 63
  %26815 = lshr i64 %26786, 63
  %26816 = xor i64 %26811, %26814
  %26817 = xor i64 %26811, %26815
  %26818 = add i64 %26816, %26817
  %26819 = icmp eq i64 %26818, 2
  %26820 = zext i1 %26819 to i8
  %26821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26820, i8* %26821, align 1
  store %struct.Memory* %loadMem_4abc90, %struct.Memory** %MEMORY
  %loadMem_4abc93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26823 = getelementptr inbounds %struct.GPR, %struct.GPR* %26822, i32 0, i32 33
  %26824 = getelementptr inbounds %struct.Reg, %struct.Reg* %26823, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %26824 to i64*
  %26825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26826 = getelementptr inbounds %struct.GPR, %struct.GPR* %26825, i32 0, i32 9
  %26827 = getelementptr inbounds %struct.Reg, %struct.Reg* %26826, i32 0, i32 0
  %RSI.i1050 = bitcast %union.anon* %26827 to i64*
  %26828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26829 = getelementptr inbounds %struct.GPR, %struct.GPR* %26828, i32 0, i32 11
  %26830 = getelementptr inbounds %struct.Reg, %struct.Reg* %26829, i32 0, i32 0
  %RDI.i1051 = bitcast %union.anon* %26830 to i64*
  %26831 = load i64, i64* %RDI.i1051
  %26832 = load i64, i64* %RSI.i1050
  %26833 = add i64 %26832, 20
  %26834 = load i64, i64* %PC.i1049
  %26835 = add i64 %26834, 3
  store i64 %26835, i64* %PC.i1049
  %26836 = trunc i64 %26831 to i32
  %26837 = inttoptr i64 %26833 to i32*
  %26838 = load i32, i32* %26837
  %26839 = add i32 %26838, %26836
  %26840 = zext i32 %26839 to i64
  store i64 %26840, i64* %RDI.i1051, align 8
  %26841 = icmp ult i32 %26839, %26836
  %26842 = icmp ult i32 %26839, %26838
  %26843 = or i1 %26841, %26842
  %26844 = zext i1 %26843 to i8
  %26845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26844, i8* %26845, align 1
  %26846 = and i32 %26839, 255
  %26847 = call i32 @llvm.ctpop.i32(i32 %26846)
  %26848 = trunc i32 %26847 to i8
  %26849 = and i8 %26848, 1
  %26850 = xor i8 %26849, 1
  %26851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26850, i8* %26851, align 1
  %26852 = xor i32 %26838, %26836
  %26853 = xor i32 %26852, %26839
  %26854 = lshr i32 %26853, 4
  %26855 = trunc i32 %26854 to i8
  %26856 = and i8 %26855, 1
  %26857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26856, i8* %26857, align 1
  %26858 = icmp eq i32 %26839, 0
  %26859 = zext i1 %26858 to i8
  %26860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26859, i8* %26860, align 1
  %26861 = lshr i32 %26839, 31
  %26862 = trunc i32 %26861 to i8
  %26863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26862, i8* %26863, align 1
  %26864 = lshr i32 %26836, 31
  %26865 = lshr i32 %26838, 31
  %26866 = xor i32 %26861, %26864
  %26867 = xor i32 %26861, %26865
  %26868 = add i32 %26866, %26867
  %26869 = icmp eq i32 %26868, 2
  %26870 = zext i1 %26869 to i8
  %26871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26870, i8* %26871, align 1
  store %struct.Memory* %loadMem_4abc93, %struct.Memory** %MEMORY
  %loadMem_4abc96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26873 = getelementptr inbounds %struct.GPR, %struct.GPR* %26872, i32 0, i32 33
  %26874 = getelementptr inbounds %struct.Reg, %struct.Reg* %26873, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %26874 to i64*
  %26875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26876 = getelementptr inbounds %struct.GPR, %struct.GPR* %26875, i32 0, i32 7
  %26877 = getelementptr inbounds %struct.Reg, %struct.Reg* %26876, i32 0, i32 0
  %RDX.i1047 = bitcast %union.anon* %26877 to i64*
  %26878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26879 = getelementptr inbounds %struct.GPR, %struct.GPR* %26878, i32 0, i32 15
  %26880 = getelementptr inbounds %struct.Reg, %struct.Reg* %26879, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %26880 to i64*
  %26881 = load i64, i64* %RBP.i1048
  %26882 = sub i64 %26881, 24
  %26883 = load i64, i64* %PC.i1046
  %26884 = add i64 %26883, 4
  store i64 %26884, i64* %PC.i1046
  %26885 = inttoptr i64 %26882 to i32*
  %26886 = load i32, i32* %26885
  %26887 = sext i32 %26886 to i64
  store i64 %26887, i64* %RDX.i1047, align 8
  store %struct.Memory* %loadMem_4abc96, %struct.Memory** %MEMORY
  %loadMem_4abc9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %26888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26889 = getelementptr inbounds %struct.GPR, %struct.GPR* %26888, i32 0, i32 33
  %26890 = getelementptr inbounds %struct.Reg, %struct.Reg* %26889, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %26890 to i64*
  %26891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26892 = getelementptr inbounds %struct.GPR, %struct.GPR* %26891, i32 0, i32 7
  %26893 = getelementptr inbounds %struct.Reg, %struct.Reg* %26892, i32 0, i32 0
  %RDX.i1045 = bitcast %union.anon* %26893 to i64*
  %26894 = load i64, i64* %RDX.i1045
  %26895 = load i64, i64* %PC.i1044
  %26896 = add i64 %26895, 4
  store i64 %26896, i64* %PC.i1044
  %26897 = shl i64 %26894, 4
  %26898 = icmp slt i64 %26897, 0
  %26899 = shl i64 %26897, 1
  store i64 %26899, i64* %RDX.i1045, align 8
  %26900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %26901 = zext i1 %26898 to i8
  store i8 %26901, i8* %26900, align 1
  %26902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %26903 = trunc i64 %26899 to i32
  %26904 = and i32 %26903, 254
  %26905 = call i32 @llvm.ctpop.i32(i32 %26904)
  %26906 = trunc i32 %26905 to i8
  %26907 = and i8 %26906, 1
  %26908 = xor i8 %26907, 1
  store i8 %26908, i8* %26902, align 1
  %26909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26909, align 1
  %26910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26911 = icmp eq i64 %26899, 0
  %26912 = zext i1 %26911 to i8
  store i8 %26912, i8* %26910, align 1
  %26913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26914 = lshr i64 %26899, 63
  %26915 = trunc i64 %26914 to i8
  store i8 %26915, i8* %26913, align 1
  %26916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26916, align 1
  store %struct.Memory* %loadMem_4abc9a, %struct.Memory** %MEMORY
  %loadMem_4abc9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %26917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26918 = getelementptr inbounds %struct.GPR, %struct.GPR* %26917, i32 0, i32 33
  %26919 = getelementptr inbounds %struct.Reg, %struct.Reg* %26918, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %26919 to i64*
  %26920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26921 = getelementptr inbounds %struct.GPR, %struct.GPR* %26920, i32 0, i32 5
  %26922 = getelementptr inbounds %struct.Reg, %struct.Reg* %26921, i32 0, i32 0
  %RCX.i1042 = bitcast %union.anon* %26922 to i64*
  %26923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26924 = getelementptr inbounds %struct.GPR, %struct.GPR* %26923, i32 0, i32 9
  %26925 = getelementptr inbounds %struct.Reg, %struct.Reg* %26924, i32 0, i32 0
  %RSI.i1043 = bitcast %union.anon* %26925 to i64*
  %26926 = load i64, i64* %RCX.i1042
  %26927 = load i64, i64* %PC.i1041
  %26928 = add i64 %26927, 3
  store i64 %26928, i64* %PC.i1041
  store i64 %26926, i64* %RSI.i1043, align 8
  store %struct.Memory* %loadMem_4abc9e, %struct.Memory** %MEMORY
  %loadMem_4abca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26930 = getelementptr inbounds %struct.GPR, %struct.GPR* %26929, i32 0, i32 33
  %26931 = getelementptr inbounds %struct.Reg, %struct.Reg* %26930, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %26931 to i64*
  %26932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26933 = getelementptr inbounds %struct.GPR, %struct.GPR* %26932, i32 0, i32 7
  %26934 = getelementptr inbounds %struct.Reg, %struct.Reg* %26933, i32 0, i32 0
  %RDX.i1039 = bitcast %union.anon* %26934 to i64*
  %26935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26936 = getelementptr inbounds %struct.GPR, %struct.GPR* %26935, i32 0, i32 9
  %26937 = getelementptr inbounds %struct.Reg, %struct.Reg* %26936, i32 0, i32 0
  %RSI.i1040 = bitcast %union.anon* %26937 to i64*
  %26938 = load i64, i64* %RSI.i1040
  %26939 = load i64, i64* %RDX.i1039
  %26940 = load i64, i64* %PC.i1038
  %26941 = add i64 %26940, 3
  store i64 %26941, i64* %PC.i1038
  %26942 = add i64 %26939, %26938
  store i64 %26942, i64* %RSI.i1040, align 8
  %26943 = icmp ult i64 %26942, %26938
  %26944 = icmp ult i64 %26942, %26939
  %26945 = or i1 %26943, %26944
  %26946 = zext i1 %26945 to i8
  %26947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26946, i8* %26947, align 1
  %26948 = trunc i64 %26942 to i32
  %26949 = and i32 %26948, 255
  %26950 = call i32 @llvm.ctpop.i32(i32 %26949)
  %26951 = trunc i32 %26950 to i8
  %26952 = and i8 %26951, 1
  %26953 = xor i8 %26952, 1
  %26954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26953, i8* %26954, align 1
  %26955 = xor i64 %26939, %26938
  %26956 = xor i64 %26955, %26942
  %26957 = lshr i64 %26956, 4
  %26958 = trunc i64 %26957 to i8
  %26959 = and i8 %26958, 1
  %26960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26959, i8* %26960, align 1
  %26961 = icmp eq i64 %26942, 0
  %26962 = zext i1 %26961 to i8
  %26963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26962, i8* %26963, align 1
  %26964 = lshr i64 %26942, 63
  %26965 = trunc i64 %26964 to i8
  %26966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26965, i8* %26966, align 1
  %26967 = lshr i64 %26938, 63
  %26968 = lshr i64 %26939, 63
  %26969 = xor i64 %26964, %26967
  %26970 = xor i64 %26964, %26968
  %26971 = add i64 %26969, %26970
  %26972 = icmp eq i64 %26971, 2
  %26973 = zext i1 %26972 to i8
  %26974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26973, i8* %26974, align 1
  store %struct.Memory* %loadMem_4abca1, %struct.Memory** %MEMORY
  %loadMem_4abca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26976 = getelementptr inbounds %struct.GPR, %struct.GPR* %26975, i32 0, i32 33
  %26977 = getelementptr inbounds %struct.Reg, %struct.Reg* %26976, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %26977 to i64*
  %26978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26979 = getelementptr inbounds %struct.GPR, %struct.GPR* %26978, i32 0, i32 9
  %26980 = getelementptr inbounds %struct.Reg, %struct.Reg* %26979, i32 0, i32 0
  %RSI.i1036 = bitcast %union.anon* %26980 to i64*
  %26981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26982 = getelementptr inbounds %struct.GPR, %struct.GPR* %26981, i32 0, i32 11
  %26983 = getelementptr inbounds %struct.Reg, %struct.Reg* %26982, i32 0, i32 0
  %RDI.i1037 = bitcast %union.anon* %26983 to i64*
  %26984 = load i64, i64* %RDI.i1037
  %26985 = load i64, i64* %RSI.i1036
  %26986 = add i64 %26985, 28
  %26987 = load i64, i64* %PC.i1035
  %26988 = add i64 %26987, 3
  store i64 %26988, i64* %PC.i1035
  %26989 = trunc i64 %26984 to i32
  %26990 = inttoptr i64 %26986 to i32*
  %26991 = load i32, i32* %26990
  %26992 = sub i32 %26989, %26991
  %26993 = zext i32 %26992 to i64
  store i64 %26993, i64* %RDI.i1037, align 8
  %26994 = icmp ult i32 %26989, %26991
  %26995 = zext i1 %26994 to i8
  %26996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26995, i8* %26996, align 1
  %26997 = and i32 %26992, 255
  %26998 = call i32 @llvm.ctpop.i32(i32 %26997)
  %26999 = trunc i32 %26998 to i8
  %27000 = and i8 %26999, 1
  %27001 = xor i8 %27000, 1
  %27002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27001, i8* %27002, align 1
  %27003 = xor i32 %26991, %26989
  %27004 = xor i32 %27003, %26992
  %27005 = lshr i32 %27004, 4
  %27006 = trunc i32 %27005 to i8
  %27007 = and i8 %27006, 1
  %27008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27007, i8* %27008, align 1
  %27009 = icmp eq i32 %26992, 0
  %27010 = zext i1 %27009 to i8
  %27011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27010, i8* %27011, align 1
  %27012 = lshr i32 %26992, 31
  %27013 = trunc i32 %27012 to i8
  %27014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27013, i8* %27014, align 1
  %27015 = lshr i32 %26989, 31
  %27016 = lshr i32 %26991, 31
  %27017 = xor i32 %27016, %27015
  %27018 = xor i32 %27012, %27015
  %27019 = add i32 %27018, %27017
  %27020 = icmp eq i32 %27019, 2
  %27021 = zext i1 %27020 to i8
  %27022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27021, i8* %27022, align 1
  store %struct.Memory* %loadMem_4abca4, %struct.Memory** %MEMORY
  %loadMem_4abca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27024 = getelementptr inbounds %struct.GPR, %struct.GPR* %27023, i32 0, i32 33
  %27025 = getelementptr inbounds %struct.Reg, %struct.Reg* %27024, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %27025 to i64*
  %27026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27027 = getelementptr inbounds %struct.GPR, %struct.GPR* %27026, i32 0, i32 7
  %27028 = getelementptr inbounds %struct.Reg, %struct.Reg* %27027, i32 0, i32 0
  %RDX.i1033 = bitcast %union.anon* %27028 to i64*
  %27029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27030 = getelementptr inbounds %struct.GPR, %struct.GPR* %27029, i32 0, i32 15
  %27031 = getelementptr inbounds %struct.Reg, %struct.Reg* %27030, i32 0, i32 0
  %RBP.i1034 = bitcast %union.anon* %27031 to i64*
  %27032 = load i64, i64* %RBP.i1034
  %27033 = sub i64 %27032, 24
  %27034 = load i64, i64* %PC.i1032
  %27035 = add i64 %27034, 4
  store i64 %27035, i64* %PC.i1032
  %27036 = inttoptr i64 %27033 to i32*
  %27037 = load i32, i32* %27036
  %27038 = sext i32 %27037 to i64
  store i64 %27038, i64* %RDX.i1033, align 8
  store %struct.Memory* %loadMem_4abca7, %struct.Memory** %MEMORY
  %loadMem_4abcab = load %struct.Memory*, %struct.Memory** %MEMORY
  %27039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27040 = getelementptr inbounds %struct.GPR, %struct.GPR* %27039, i32 0, i32 33
  %27041 = getelementptr inbounds %struct.Reg, %struct.Reg* %27040, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %27041 to i64*
  %27042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27043 = getelementptr inbounds %struct.GPR, %struct.GPR* %27042, i32 0, i32 7
  %27044 = getelementptr inbounds %struct.Reg, %struct.Reg* %27043, i32 0, i32 0
  %RDX.i1031 = bitcast %union.anon* %27044 to i64*
  %27045 = load i64, i64* %RDX.i1031
  %27046 = load i64, i64* %PC.i1030
  %27047 = add i64 %27046, 4
  store i64 %27047, i64* %PC.i1030
  %27048 = shl i64 %27045, 4
  %27049 = icmp slt i64 %27048, 0
  %27050 = shl i64 %27048, 1
  store i64 %27050, i64* %RDX.i1031, align 8
  %27051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %27052 = zext i1 %27049 to i8
  store i8 %27052, i8* %27051, align 1
  %27053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27054 = trunc i64 %27050 to i32
  %27055 = and i32 %27054, 254
  %27056 = call i32 @llvm.ctpop.i32(i32 %27055)
  %27057 = trunc i32 %27056 to i8
  %27058 = and i8 %27057, 1
  %27059 = xor i8 %27058, 1
  store i8 %27059, i8* %27053, align 1
  %27060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27060, align 1
  %27061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27062 = icmp eq i64 %27050, 0
  %27063 = zext i1 %27062 to i8
  store i8 %27063, i8* %27061, align 1
  %27064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27065 = lshr i64 %27050, 63
  %27066 = trunc i64 %27065 to i8
  store i8 %27066, i8* %27064, align 1
  %27067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27067, align 1
  store %struct.Memory* %loadMem_4abcab, %struct.Memory** %MEMORY
  %loadMem_4abcaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %27068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27069 = getelementptr inbounds %struct.GPR, %struct.GPR* %27068, i32 0, i32 33
  %27070 = getelementptr inbounds %struct.Reg, %struct.Reg* %27069, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %27070 to i64*
  %27071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27072 = getelementptr inbounds %struct.GPR, %struct.GPR* %27071, i32 0, i32 5
  %27073 = getelementptr inbounds %struct.Reg, %struct.Reg* %27072, i32 0, i32 0
  %RCX.i1028 = bitcast %union.anon* %27073 to i64*
  %27074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27075 = getelementptr inbounds %struct.GPR, %struct.GPR* %27074, i32 0, i32 9
  %27076 = getelementptr inbounds %struct.Reg, %struct.Reg* %27075, i32 0, i32 0
  %RSI.i1029 = bitcast %union.anon* %27076 to i64*
  %27077 = load i64, i64* %RCX.i1028
  %27078 = load i64, i64* %PC.i1027
  %27079 = add i64 %27078, 3
  store i64 %27079, i64* %PC.i1027
  store i64 %27077, i64* %RSI.i1029, align 8
  store %struct.Memory* %loadMem_4abcaf, %struct.Memory** %MEMORY
  %loadMem_4abcb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27081 = getelementptr inbounds %struct.GPR, %struct.GPR* %27080, i32 0, i32 33
  %27082 = getelementptr inbounds %struct.Reg, %struct.Reg* %27081, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %27082 to i64*
  %27083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27084 = getelementptr inbounds %struct.GPR, %struct.GPR* %27083, i32 0, i32 7
  %27085 = getelementptr inbounds %struct.Reg, %struct.Reg* %27084, i32 0, i32 0
  %RDX.i1025 = bitcast %union.anon* %27085 to i64*
  %27086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27087 = getelementptr inbounds %struct.GPR, %struct.GPR* %27086, i32 0, i32 9
  %27088 = getelementptr inbounds %struct.Reg, %struct.Reg* %27087, i32 0, i32 0
  %RSI.i1026 = bitcast %union.anon* %27088 to i64*
  %27089 = load i64, i64* %RSI.i1026
  %27090 = load i64, i64* %RDX.i1025
  %27091 = load i64, i64* %PC.i1024
  %27092 = add i64 %27091, 3
  store i64 %27092, i64* %PC.i1024
  %27093 = add i64 %27090, %27089
  store i64 %27093, i64* %RSI.i1026, align 8
  %27094 = icmp ult i64 %27093, %27089
  %27095 = icmp ult i64 %27093, %27090
  %27096 = or i1 %27094, %27095
  %27097 = zext i1 %27096 to i8
  %27098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27097, i8* %27098, align 1
  %27099 = trunc i64 %27093 to i32
  %27100 = and i32 %27099, 255
  %27101 = call i32 @llvm.ctpop.i32(i32 %27100)
  %27102 = trunc i32 %27101 to i8
  %27103 = and i8 %27102, 1
  %27104 = xor i8 %27103, 1
  %27105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27104, i8* %27105, align 1
  %27106 = xor i64 %27090, %27089
  %27107 = xor i64 %27106, %27093
  %27108 = lshr i64 %27107, 4
  %27109 = trunc i64 %27108 to i8
  %27110 = and i8 %27109, 1
  %27111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27110, i8* %27111, align 1
  %27112 = icmp eq i64 %27093, 0
  %27113 = zext i1 %27112 to i8
  %27114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27113, i8* %27114, align 1
  %27115 = lshr i64 %27093, 63
  %27116 = trunc i64 %27115 to i8
  %27117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27116, i8* %27117, align 1
  %27118 = lshr i64 %27089, 63
  %27119 = lshr i64 %27090, 63
  %27120 = xor i64 %27115, %27118
  %27121 = xor i64 %27115, %27119
  %27122 = add i64 %27120, %27121
  %27123 = icmp eq i64 %27122, 2
  %27124 = zext i1 %27123 to i8
  %27125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27124, i8* %27125, align 1
  store %struct.Memory* %loadMem_4abcb2, %struct.Memory** %MEMORY
  %loadMem_4abcb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27127 = getelementptr inbounds %struct.GPR, %struct.GPR* %27126, i32 0, i32 33
  %27128 = getelementptr inbounds %struct.Reg, %struct.Reg* %27127, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %27128 to i64*
  %27129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27130 = getelementptr inbounds %struct.GPR, %struct.GPR* %27129, i32 0, i32 17
  %27131 = getelementptr inbounds %struct.Reg, %struct.Reg* %27130, i32 0, i32 0
  %R8D.i1022 = bitcast %union.anon* %27131 to i32*
  %27132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27133 = getelementptr inbounds %struct.GPR, %struct.GPR* %27132, i32 0, i32 9
  %27134 = getelementptr inbounds %struct.Reg, %struct.Reg* %27133, i32 0, i32 0
  %RSI.i1023 = bitcast %union.anon* %27134 to i64*
  %27135 = bitcast i32* %R8D.i1022 to i64*
  %27136 = load i64, i64* %RSI.i1023
  %27137 = add i64 %27136, 28
  %27138 = load i64, i64* %PC.i1021
  %27139 = add i64 %27138, 4
  store i64 %27139, i64* %PC.i1021
  %27140 = inttoptr i64 %27137 to i32*
  %27141 = load i32, i32* %27140
  %27142 = zext i32 %27141 to i64
  store i64 %27142, i64* %27135, align 8
  store %struct.Memory* %loadMem_4abcb5, %struct.Memory** %MEMORY
  %loadMem_4abcb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27144 = getelementptr inbounds %struct.GPR, %struct.GPR* %27143, i32 0, i32 33
  %27145 = getelementptr inbounds %struct.Reg, %struct.Reg* %27144, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %27145 to i64*
  %27146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27147 = getelementptr inbounds %struct.GPR, %struct.GPR* %27146, i32 0, i32 17
  %27148 = getelementptr inbounds %struct.Reg, %struct.Reg* %27147, i32 0, i32 0
  %R8D.i1020 = bitcast %union.anon* %27148 to i32*
  %27149 = bitcast i32* %R8D.i1020 to i64*
  %27150 = load i32, i32* %R8D.i1020
  %27151 = zext i32 %27150 to i64
  %27152 = load i64, i64* %PC.i1019
  %27153 = add i64 %27152, 3
  store i64 %27153, i64* %PC.i1019
  %27154 = shl i64 %27151, 32
  %27155 = ashr i64 %27154, 33
  %27156 = trunc i64 %27151 to i8
  %27157 = and i8 %27156, 1
  %27158 = trunc i64 %27155 to i32
  %27159 = and i64 %27155, 4294967295
  store i64 %27159, i64* %27149, align 8
  %27160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27157, i8* %27160, align 1
  %27161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27162 = and i32 %27158, 255
  %27163 = call i32 @llvm.ctpop.i32(i32 %27162)
  %27164 = trunc i32 %27163 to i8
  %27165 = and i8 %27164, 1
  %27166 = xor i8 %27165, 1
  store i8 %27166, i8* %27161, align 1
  %27167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27167, align 1
  %27168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27169 = icmp eq i32 %27158, 0
  %27170 = zext i1 %27169 to i8
  store i8 %27170, i8* %27168, align 1
  %27171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27172 = lshr i32 %27158, 31
  %27173 = trunc i32 %27172 to i8
  store i8 %27173, i8* %27171, align 1
  %27174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27174, align 1
  store %struct.Memory* %loadMem_4abcb9, %struct.Memory** %MEMORY
  %loadMem_4abcbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %27175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27176 = getelementptr inbounds %struct.GPR, %struct.GPR* %27175, i32 0, i32 33
  %27177 = getelementptr inbounds %struct.Reg, %struct.Reg* %27176, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %27177 to i64*
  %27178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27179 = getelementptr inbounds %struct.GPR, %struct.GPR* %27178, i32 0, i32 17
  %27180 = getelementptr inbounds %struct.Reg, %struct.Reg* %27179, i32 0, i32 0
  %R8D.i1017 = bitcast %union.anon* %27180 to i32*
  %27181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27182 = getelementptr inbounds %struct.GPR, %struct.GPR* %27181, i32 0, i32 11
  %27183 = getelementptr inbounds %struct.Reg, %struct.Reg* %27182, i32 0, i32 0
  %RDI.i1018 = bitcast %union.anon* %27183 to i64*
  %27184 = load i64, i64* %RDI.i1018
  %27185 = load i32, i32* %R8D.i1017
  %27186 = zext i32 %27185 to i64
  %27187 = load i64, i64* %PC.i1016
  %27188 = add i64 %27187, 3
  store i64 %27188, i64* %PC.i1016
  %27189 = trunc i64 %27184 to i32
  %27190 = sub i32 %27189, %27185
  %27191 = zext i32 %27190 to i64
  store i64 %27191, i64* %RDI.i1018, align 8
  %27192 = icmp ult i32 %27189, %27185
  %27193 = zext i1 %27192 to i8
  %27194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27193, i8* %27194, align 1
  %27195 = and i32 %27190, 255
  %27196 = call i32 @llvm.ctpop.i32(i32 %27195)
  %27197 = trunc i32 %27196 to i8
  %27198 = and i8 %27197, 1
  %27199 = xor i8 %27198, 1
  %27200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27199, i8* %27200, align 1
  %27201 = xor i64 %27186, %27184
  %27202 = trunc i64 %27201 to i32
  %27203 = xor i32 %27202, %27190
  %27204 = lshr i32 %27203, 4
  %27205 = trunc i32 %27204 to i8
  %27206 = and i8 %27205, 1
  %27207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27206, i8* %27207, align 1
  %27208 = icmp eq i32 %27190, 0
  %27209 = zext i1 %27208 to i8
  %27210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27209, i8* %27210, align 1
  %27211 = lshr i32 %27190, 31
  %27212 = trunc i32 %27211 to i8
  %27213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27212, i8* %27213, align 1
  %27214 = lshr i32 %27189, 31
  %27215 = lshr i32 %27185, 31
  %27216 = xor i32 %27215, %27214
  %27217 = xor i32 %27211, %27214
  %27218 = add i32 %27217, %27216
  %27219 = icmp eq i32 %27218, 2
  %27220 = zext i1 %27219 to i8
  %27221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27220, i8* %27221, align 1
  store %struct.Memory* %loadMem_4abcbd, %struct.Memory** %MEMORY
  %loadMem_4abcc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27223 = getelementptr inbounds %struct.GPR, %struct.GPR* %27222, i32 0, i32 33
  %27224 = getelementptr inbounds %struct.Reg, %struct.Reg* %27223, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %27224 to i64*
  %27225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27226 = getelementptr inbounds %struct.GPR, %struct.GPR* %27225, i32 0, i32 11
  %27227 = getelementptr inbounds %struct.Reg, %struct.Reg* %27226, i32 0, i32 0
  %EDI.i1014 = bitcast %union.anon* %27227 to i32*
  %27228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27229 = getelementptr inbounds %struct.GPR, %struct.GPR* %27228, i32 0, i32 15
  %27230 = getelementptr inbounds %struct.Reg, %struct.Reg* %27229, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %27230 to i64*
  %27231 = load i64, i64* %RBP.i1015
  %27232 = sub i64 %27231, 636
  %27233 = load i32, i32* %EDI.i1014
  %27234 = zext i32 %27233 to i64
  %27235 = load i64, i64* %PC.i1013
  %27236 = add i64 %27235, 6
  store i64 %27236, i64* %PC.i1013
  %27237 = inttoptr i64 %27232 to i32*
  store i32 %27233, i32* %27237
  store %struct.Memory* %loadMem_4abcc0, %struct.Memory** %MEMORY
  %loadMem_4abcc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27239 = getelementptr inbounds %struct.GPR, %struct.GPR* %27238, i32 0, i32 33
  %27240 = getelementptr inbounds %struct.Reg, %struct.Reg* %27239, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %27240 to i64*
  %27241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27242 = getelementptr inbounds %struct.GPR, %struct.GPR* %27241, i32 0, i32 7
  %27243 = getelementptr inbounds %struct.Reg, %struct.Reg* %27242, i32 0, i32 0
  %RDX.i1011 = bitcast %union.anon* %27243 to i64*
  %27244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27245 = getelementptr inbounds %struct.GPR, %struct.GPR* %27244, i32 0, i32 15
  %27246 = getelementptr inbounds %struct.Reg, %struct.Reg* %27245, i32 0, i32 0
  %RBP.i1012 = bitcast %union.anon* %27246 to i64*
  %27247 = load i64, i64* %RBP.i1012
  %27248 = sub i64 %27247, 24
  %27249 = load i64, i64* %PC.i1010
  %27250 = add i64 %27249, 4
  store i64 %27250, i64* %PC.i1010
  %27251 = inttoptr i64 %27248 to i32*
  %27252 = load i32, i32* %27251
  %27253 = sext i32 %27252 to i64
  store i64 %27253, i64* %RDX.i1011, align 8
  store %struct.Memory* %loadMem_4abcc6, %struct.Memory** %MEMORY
  %loadMem_4abcca = load %struct.Memory*, %struct.Memory** %MEMORY
  %27254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27255 = getelementptr inbounds %struct.GPR, %struct.GPR* %27254, i32 0, i32 33
  %27256 = getelementptr inbounds %struct.Reg, %struct.Reg* %27255, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %27256 to i64*
  %27257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27258 = getelementptr inbounds %struct.GPR, %struct.GPR* %27257, i32 0, i32 7
  %27259 = getelementptr inbounds %struct.Reg, %struct.Reg* %27258, i32 0, i32 0
  %RDX.i1009 = bitcast %union.anon* %27259 to i64*
  %27260 = load i64, i64* %RDX.i1009
  %27261 = load i64, i64* %PC.i1008
  %27262 = add i64 %27261, 4
  store i64 %27262, i64* %PC.i1008
  %27263 = shl i64 %27260, 4
  %27264 = icmp slt i64 %27263, 0
  %27265 = shl i64 %27263, 1
  store i64 %27265, i64* %RDX.i1009, align 8
  %27266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %27267 = zext i1 %27264 to i8
  store i8 %27267, i8* %27266, align 1
  %27268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27269 = trunc i64 %27265 to i32
  %27270 = and i32 %27269, 254
  %27271 = call i32 @llvm.ctpop.i32(i32 %27270)
  %27272 = trunc i32 %27271 to i8
  %27273 = and i8 %27272, 1
  %27274 = xor i8 %27273, 1
  store i8 %27274, i8* %27268, align 1
  %27275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27275, align 1
  %27276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27277 = icmp eq i64 %27265, 0
  %27278 = zext i1 %27277 to i8
  store i8 %27278, i8* %27276, align 1
  %27279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27280 = lshr i64 %27265, 63
  %27281 = trunc i64 %27280 to i8
  store i8 %27281, i8* %27279, align 1
  %27282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27282, align 1
  store %struct.Memory* %loadMem_4abcca, %struct.Memory** %MEMORY
  %loadMem_4abcce = load %struct.Memory*, %struct.Memory** %MEMORY
  %27283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27284 = getelementptr inbounds %struct.GPR, %struct.GPR* %27283, i32 0, i32 33
  %27285 = getelementptr inbounds %struct.Reg, %struct.Reg* %27284, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %27285 to i64*
  %27286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27287 = getelementptr inbounds %struct.GPR, %struct.GPR* %27286, i32 0, i32 5
  %27288 = getelementptr inbounds %struct.Reg, %struct.Reg* %27287, i32 0, i32 0
  %RCX.i1006 = bitcast %union.anon* %27288 to i64*
  %27289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27290 = getelementptr inbounds %struct.GPR, %struct.GPR* %27289, i32 0, i32 9
  %27291 = getelementptr inbounds %struct.Reg, %struct.Reg* %27290, i32 0, i32 0
  %RSI.i1007 = bitcast %union.anon* %27291 to i64*
  %27292 = load i64, i64* %RCX.i1006
  %27293 = load i64, i64* %PC.i1005
  %27294 = add i64 %27293, 3
  store i64 %27294, i64* %PC.i1005
  store i64 %27292, i64* %RSI.i1007, align 8
  store %struct.Memory* %loadMem_4abcce, %struct.Memory** %MEMORY
  %loadMem_4abcd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27296 = getelementptr inbounds %struct.GPR, %struct.GPR* %27295, i32 0, i32 33
  %27297 = getelementptr inbounds %struct.Reg, %struct.Reg* %27296, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %27297 to i64*
  %27298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27299 = getelementptr inbounds %struct.GPR, %struct.GPR* %27298, i32 0, i32 7
  %27300 = getelementptr inbounds %struct.Reg, %struct.Reg* %27299, i32 0, i32 0
  %RDX.i1003 = bitcast %union.anon* %27300 to i64*
  %27301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27302 = getelementptr inbounds %struct.GPR, %struct.GPR* %27301, i32 0, i32 9
  %27303 = getelementptr inbounds %struct.Reg, %struct.Reg* %27302, i32 0, i32 0
  %RSI.i1004 = bitcast %union.anon* %27303 to i64*
  %27304 = load i64, i64* %RSI.i1004
  %27305 = load i64, i64* %RDX.i1003
  %27306 = load i64, i64* %PC.i1002
  %27307 = add i64 %27306, 3
  store i64 %27307, i64* %PC.i1002
  %27308 = add i64 %27305, %27304
  store i64 %27308, i64* %RSI.i1004, align 8
  %27309 = icmp ult i64 %27308, %27304
  %27310 = icmp ult i64 %27308, %27305
  %27311 = or i1 %27309, %27310
  %27312 = zext i1 %27311 to i8
  %27313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27312, i8* %27313, align 1
  %27314 = trunc i64 %27308 to i32
  %27315 = and i32 %27314, 255
  %27316 = call i32 @llvm.ctpop.i32(i32 %27315)
  %27317 = trunc i32 %27316 to i8
  %27318 = and i8 %27317, 1
  %27319 = xor i8 %27318, 1
  %27320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27319, i8* %27320, align 1
  %27321 = xor i64 %27305, %27304
  %27322 = xor i64 %27321, %27308
  %27323 = lshr i64 %27322, 4
  %27324 = trunc i64 %27323 to i8
  %27325 = and i8 %27324, 1
  %27326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27325, i8* %27326, align 1
  %27327 = icmp eq i64 %27308, 0
  %27328 = zext i1 %27327 to i8
  %27329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27328, i8* %27329, align 1
  %27330 = lshr i64 %27308, 63
  %27331 = trunc i64 %27330 to i8
  %27332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27331, i8* %27332, align 1
  %27333 = lshr i64 %27304, 63
  %27334 = lshr i64 %27305, 63
  %27335 = xor i64 %27330, %27333
  %27336 = xor i64 %27330, %27334
  %27337 = add i64 %27335, %27336
  %27338 = icmp eq i64 %27337, 2
  %27339 = zext i1 %27338 to i8
  %27340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27339, i8* %27340, align 1
  store %struct.Memory* %loadMem_4abcd1, %struct.Memory** %MEMORY
  %loadMem_4abcd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27342 = getelementptr inbounds %struct.GPR, %struct.GPR* %27341, i32 0, i32 33
  %27343 = getelementptr inbounds %struct.Reg, %struct.Reg* %27342, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %27343 to i64*
  %27344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27345 = getelementptr inbounds %struct.GPR, %struct.GPR* %27344, i32 0, i32 9
  %27346 = getelementptr inbounds %struct.Reg, %struct.Reg* %27345, i32 0, i32 0
  %RSI.i1000 = bitcast %union.anon* %27346 to i64*
  %27347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27348 = getelementptr inbounds %struct.GPR, %struct.GPR* %27347, i32 0, i32 11
  %27349 = getelementptr inbounds %struct.Reg, %struct.Reg* %27348, i32 0, i32 0
  %RDI.i1001 = bitcast %union.anon* %27349 to i64*
  %27350 = load i64, i64* %RSI.i1000
  %27351 = add i64 %27350, 4
  %27352 = load i64, i64* %PC.i999
  %27353 = add i64 %27352, 3
  store i64 %27353, i64* %PC.i999
  %27354 = inttoptr i64 %27351 to i32*
  %27355 = load i32, i32* %27354
  %27356 = zext i32 %27355 to i64
  store i64 %27356, i64* %RDI.i1001, align 8
  store %struct.Memory* %loadMem_4abcd4, %struct.Memory** %MEMORY
  %loadMem_4abcd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27358 = getelementptr inbounds %struct.GPR, %struct.GPR* %27357, i32 0, i32 33
  %27359 = getelementptr inbounds %struct.Reg, %struct.Reg* %27358, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %27359 to i64*
  %27360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27361 = getelementptr inbounds %struct.GPR, %struct.GPR* %27360, i32 0, i32 7
  %27362 = getelementptr inbounds %struct.Reg, %struct.Reg* %27361, i32 0, i32 0
  %RDX.i997 = bitcast %union.anon* %27362 to i64*
  %27363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27364 = getelementptr inbounds %struct.GPR, %struct.GPR* %27363, i32 0, i32 15
  %27365 = getelementptr inbounds %struct.Reg, %struct.Reg* %27364, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %27365 to i64*
  %27366 = load i64, i64* %RBP.i998
  %27367 = sub i64 %27366, 24
  %27368 = load i64, i64* %PC.i996
  %27369 = add i64 %27368, 4
  store i64 %27369, i64* %PC.i996
  %27370 = inttoptr i64 %27367 to i32*
  %27371 = load i32, i32* %27370
  %27372 = sext i32 %27371 to i64
  store i64 %27372, i64* %RDX.i997, align 8
  store %struct.Memory* %loadMem_4abcd7, %struct.Memory** %MEMORY
  %loadMem_4abcdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %27373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27374 = getelementptr inbounds %struct.GPR, %struct.GPR* %27373, i32 0, i32 33
  %27375 = getelementptr inbounds %struct.Reg, %struct.Reg* %27374, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %27375 to i64*
  %27376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27377 = getelementptr inbounds %struct.GPR, %struct.GPR* %27376, i32 0, i32 7
  %27378 = getelementptr inbounds %struct.Reg, %struct.Reg* %27377, i32 0, i32 0
  %RDX.i995 = bitcast %union.anon* %27378 to i64*
  %27379 = load i64, i64* %RDX.i995
  %27380 = load i64, i64* %PC.i994
  %27381 = add i64 %27380, 4
  store i64 %27381, i64* %PC.i994
  %27382 = shl i64 %27379, 4
  %27383 = icmp slt i64 %27382, 0
  %27384 = shl i64 %27382, 1
  store i64 %27384, i64* %RDX.i995, align 8
  %27385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %27386 = zext i1 %27383 to i8
  store i8 %27386, i8* %27385, align 1
  %27387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27388 = trunc i64 %27384 to i32
  %27389 = and i32 %27388, 254
  %27390 = call i32 @llvm.ctpop.i32(i32 %27389)
  %27391 = trunc i32 %27390 to i8
  %27392 = and i8 %27391, 1
  %27393 = xor i8 %27392, 1
  store i8 %27393, i8* %27387, align 1
  %27394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27394, align 1
  %27395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27396 = icmp eq i64 %27384, 0
  %27397 = zext i1 %27396 to i8
  store i8 %27397, i8* %27395, align 1
  %27398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27399 = lshr i64 %27384, 63
  %27400 = trunc i64 %27399 to i8
  store i8 %27400, i8* %27398, align 1
  %27401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27401, align 1
  store %struct.Memory* %loadMem_4abcdb, %struct.Memory** %MEMORY
  %loadMem_4abcdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %27402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27403 = getelementptr inbounds %struct.GPR, %struct.GPR* %27402, i32 0, i32 33
  %27404 = getelementptr inbounds %struct.Reg, %struct.Reg* %27403, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %27404 to i64*
  %27405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27406 = getelementptr inbounds %struct.GPR, %struct.GPR* %27405, i32 0, i32 5
  %27407 = getelementptr inbounds %struct.Reg, %struct.Reg* %27406, i32 0, i32 0
  %RCX.i992 = bitcast %union.anon* %27407 to i64*
  %27408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27409 = getelementptr inbounds %struct.GPR, %struct.GPR* %27408, i32 0, i32 9
  %27410 = getelementptr inbounds %struct.Reg, %struct.Reg* %27409, i32 0, i32 0
  %RSI.i993 = bitcast %union.anon* %27410 to i64*
  %27411 = load i64, i64* %RCX.i992
  %27412 = load i64, i64* %PC.i991
  %27413 = add i64 %27412, 3
  store i64 %27413, i64* %PC.i991
  store i64 %27411, i64* %RSI.i993, align 8
  store %struct.Memory* %loadMem_4abcdf, %struct.Memory** %MEMORY
  %loadMem_4abce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27415 = getelementptr inbounds %struct.GPR, %struct.GPR* %27414, i32 0, i32 33
  %27416 = getelementptr inbounds %struct.Reg, %struct.Reg* %27415, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %27416 to i64*
  %27417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27418 = getelementptr inbounds %struct.GPR, %struct.GPR* %27417, i32 0, i32 7
  %27419 = getelementptr inbounds %struct.Reg, %struct.Reg* %27418, i32 0, i32 0
  %RDX.i989 = bitcast %union.anon* %27419 to i64*
  %27420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27421 = getelementptr inbounds %struct.GPR, %struct.GPR* %27420, i32 0, i32 9
  %27422 = getelementptr inbounds %struct.Reg, %struct.Reg* %27421, i32 0, i32 0
  %RSI.i990 = bitcast %union.anon* %27422 to i64*
  %27423 = load i64, i64* %RSI.i990
  %27424 = load i64, i64* %RDX.i989
  %27425 = load i64, i64* %PC.i988
  %27426 = add i64 %27425, 3
  store i64 %27426, i64* %PC.i988
  %27427 = add i64 %27424, %27423
  store i64 %27427, i64* %RSI.i990, align 8
  %27428 = icmp ult i64 %27427, %27423
  %27429 = icmp ult i64 %27427, %27424
  %27430 = or i1 %27428, %27429
  %27431 = zext i1 %27430 to i8
  %27432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27431, i8* %27432, align 1
  %27433 = trunc i64 %27427 to i32
  %27434 = and i32 %27433, 255
  %27435 = call i32 @llvm.ctpop.i32(i32 %27434)
  %27436 = trunc i32 %27435 to i8
  %27437 = and i8 %27436, 1
  %27438 = xor i8 %27437, 1
  %27439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27438, i8* %27439, align 1
  %27440 = xor i64 %27424, %27423
  %27441 = xor i64 %27440, %27427
  %27442 = lshr i64 %27441, 4
  %27443 = trunc i64 %27442 to i8
  %27444 = and i8 %27443, 1
  %27445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27444, i8* %27445, align 1
  %27446 = icmp eq i64 %27427, 0
  %27447 = zext i1 %27446 to i8
  %27448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27447, i8* %27448, align 1
  %27449 = lshr i64 %27427, 63
  %27450 = trunc i64 %27449 to i8
  %27451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27450, i8* %27451, align 1
  %27452 = lshr i64 %27423, 63
  %27453 = lshr i64 %27424, 63
  %27454 = xor i64 %27449, %27452
  %27455 = xor i64 %27449, %27453
  %27456 = add i64 %27454, %27455
  %27457 = icmp eq i64 %27456, 2
  %27458 = zext i1 %27457 to i8
  %27459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27458, i8* %27459, align 1
  store %struct.Memory* %loadMem_4abce2, %struct.Memory** %MEMORY
  %loadMem_4abce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27461 = getelementptr inbounds %struct.GPR, %struct.GPR* %27460, i32 0, i32 33
  %27462 = getelementptr inbounds %struct.Reg, %struct.Reg* %27461, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %27462 to i64*
  %27463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27464 = getelementptr inbounds %struct.GPR, %struct.GPR* %27463, i32 0, i32 9
  %27465 = getelementptr inbounds %struct.Reg, %struct.Reg* %27464, i32 0, i32 0
  %RSI.i986 = bitcast %union.anon* %27465 to i64*
  %27466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27467 = getelementptr inbounds %struct.GPR, %struct.GPR* %27466, i32 0, i32 11
  %27468 = getelementptr inbounds %struct.Reg, %struct.Reg* %27467, i32 0, i32 0
  %RDI.i987 = bitcast %union.anon* %27468 to i64*
  %27469 = load i64, i64* %RDI.i987
  %27470 = load i64, i64* %RSI.i986
  %27471 = add i64 %27470, 28
  %27472 = load i64, i64* %PC.i985
  %27473 = add i64 %27472, 3
  store i64 %27473, i64* %PC.i985
  %27474 = trunc i64 %27469 to i32
  %27475 = inttoptr i64 %27471 to i32*
  %27476 = load i32, i32* %27475
  %27477 = add i32 %27476, %27474
  %27478 = zext i32 %27477 to i64
  store i64 %27478, i64* %RDI.i987, align 8
  %27479 = icmp ult i32 %27477, %27474
  %27480 = icmp ult i32 %27477, %27476
  %27481 = or i1 %27479, %27480
  %27482 = zext i1 %27481 to i8
  %27483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27482, i8* %27483, align 1
  %27484 = and i32 %27477, 255
  %27485 = call i32 @llvm.ctpop.i32(i32 %27484)
  %27486 = trunc i32 %27485 to i8
  %27487 = and i8 %27486, 1
  %27488 = xor i8 %27487, 1
  %27489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27488, i8* %27489, align 1
  %27490 = xor i32 %27476, %27474
  %27491 = xor i32 %27490, %27477
  %27492 = lshr i32 %27491, 4
  %27493 = trunc i32 %27492 to i8
  %27494 = and i8 %27493, 1
  %27495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27494, i8* %27495, align 1
  %27496 = icmp eq i32 %27477, 0
  %27497 = zext i1 %27496 to i8
  %27498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27497, i8* %27498, align 1
  %27499 = lshr i32 %27477, 31
  %27500 = trunc i32 %27499 to i8
  %27501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27500, i8* %27501, align 1
  %27502 = lshr i32 %27474, 31
  %27503 = lshr i32 %27476, 31
  %27504 = xor i32 %27499, %27502
  %27505 = xor i32 %27499, %27503
  %27506 = add i32 %27504, %27505
  %27507 = icmp eq i32 %27506, 2
  %27508 = zext i1 %27507 to i8
  %27509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27508, i8* %27509, align 1
  store %struct.Memory* %loadMem_4abce5, %struct.Memory** %MEMORY
  %loadMem_4abce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27511 = getelementptr inbounds %struct.GPR, %struct.GPR* %27510, i32 0, i32 33
  %27512 = getelementptr inbounds %struct.Reg, %struct.Reg* %27511, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %27512 to i64*
  %27513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27514 = getelementptr inbounds %struct.GPR, %struct.GPR* %27513, i32 0, i32 7
  %27515 = getelementptr inbounds %struct.Reg, %struct.Reg* %27514, i32 0, i32 0
  %RDX.i983 = bitcast %union.anon* %27515 to i64*
  %27516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27517 = getelementptr inbounds %struct.GPR, %struct.GPR* %27516, i32 0, i32 15
  %27518 = getelementptr inbounds %struct.Reg, %struct.Reg* %27517, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %27518 to i64*
  %27519 = load i64, i64* %RBP.i984
  %27520 = sub i64 %27519, 24
  %27521 = load i64, i64* %PC.i982
  %27522 = add i64 %27521, 4
  store i64 %27522, i64* %PC.i982
  %27523 = inttoptr i64 %27520 to i32*
  %27524 = load i32, i32* %27523
  %27525 = sext i32 %27524 to i64
  store i64 %27525, i64* %RDX.i983, align 8
  store %struct.Memory* %loadMem_4abce8, %struct.Memory** %MEMORY
  %loadMem_4abcec = load %struct.Memory*, %struct.Memory** %MEMORY
  %27526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27527 = getelementptr inbounds %struct.GPR, %struct.GPR* %27526, i32 0, i32 33
  %27528 = getelementptr inbounds %struct.Reg, %struct.Reg* %27527, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %27528 to i64*
  %27529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27530 = getelementptr inbounds %struct.GPR, %struct.GPR* %27529, i32 0, i32 7
  %27531 = getelementptr inbounds %struct.Reg, %struct.Reg* %27530, i32 0, i32 0
  %RDX.i981 = bitcast %union.anon* %27531 to i64*
  %27532 = load i64, i64* %RDX.i981
  %27533 = load i64, i64* %PC.i980
  %27534 = add i64 %27533, 4
  store i64 %27534, i64* %PC.i980
  %27535 = shl i64 %27532, 4
  %27536 = icmp slt i64 %27535, 0
  %27537 = shl i64 %27535, 1
  store i64 %27537, i64* %RDX.i981, align 8
  %27538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %27539 = zext i1 %27536 to i8
  store i8 %27539, i8* %27538, align 1
  %27540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27541 = trunc i64 %27537 to i32
  %27542 = and i32 %27541, 254
  %27543 = call i32 @llvm.ctpop.i32(i32 %27542)
  %27544 = trunc i32 %27543 to i8
  %27545 = and i8 %27544, 1
  %27546 = xor i8 %27545, 1
  store i8 %27546, i8* %27540, align 1
  %27547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27547, align 1
  %27548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27549 = icmp eq i64 %27537, 0
  %27550 = zext i1 %27549 to i8
  store i8 %27550, i8* %27548, align 1
  %27551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27552 = lshr i64 %27537, 63
  %27553 = trunc i64 %27552 to i8
  store i8 %27553, i8* %27551, align 1
  %27554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27554, align 1
  store %struct.Memory* %loadMem_4abcec, %struct.Memory** %MEMORY
  %loadMem_4abcf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27556 = getelementptr inbounds %struct.GPR, %struct.GPR* %27555, i32 0, i32 33
  %27557 = getelementptr inbounds %struct.Reg, %struct.Reg* %27556, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %27557 to i64*
  %27558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27559 = getelementptr inbounds %struct.GPR, %struct.GPR* %27558, i32 0, i32 5
  %27560 = getelementptr inbounds %struct.Reg, %struct.Reg* %27559, i32 0, i32 0
  %RCX.i978 = bitcast %union.anon* %27560 to i64*
  %27561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27562 = getelementptr inbounds %struct.GPR, %struct.GPR* %27561, i32 0, i32 9
  %27563 = getelementptr inbounds %struct.Reg, %struct.Reg* %27562, i32 0, i32 0
  %RSI.i979 = bitcast %union.anon* %27563 to i64*
  %27564 = load i64, i64* %RCX.i978
  %27565 = load i64, i64* %PC.i977
  %27566 = add i64 %27565, 3
  store i64 %27566, i64* %PC.i977
  store i64 %27564, i64* %RSI.i979, align 8
  store %struct.Memory* %loadMem_4abcf0, %struct.Memory** %MEMORY
  %loadMem_4abcf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27568 = getelementptr inbounds %struct.GPR, %struct.GPR* %27567, i32 0, i32 33
  %27569 = getelementptr inbounds %struct.Reg, %struct.Reg* %27568, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %27569 to i64*
  %27570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27571 = getelementptr inbounds %struct.GPR, %struct.GPR* %27570, i32 0, i32 7
  %27572 = getelementptr inbounds %struct.Reg, %struct.Reg* %27571, i32 0, i32 0
  %RDX.i975 = bitcast %union.anon* %27572 to i64*
  %27573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27574 = getelementptr inbounds %struct.GPR, %struct.GPR* %27573, i32 0, i32 9
  %27575 = getelementptr inbounds %struct.Reg, %struct.Reg* %27574, i32 0, i32 0
  %RSI.i976 = bitcast %union.anon* %27575 to i64*
  %27576 = load i64, i64* %RSI.i976
  %27577 = load i64, i64* %RDX.i975
  %27578 = load i64, i64* %PC.i974
  %27579 = add i64 %27578, 3
  store i64 %27579, i64* %PC.i974
  %27580 = add i64 %27577, %27576
  store i64 %27580, i64* %RSI.i976, align 8
  %27581 = icmp ult i64 %27580, %27576
  %27582 = icmp ult i64 %27580, %27577
  %27583 = or i1 %27581, %27582
  %27584 = zext i1 %27583 to i8
  %27585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27584, i8* %27585, align 1
  %27586 = trunc i64 %27580 to i32
  %27587 = and i32 %27586, 255
  %27588 = call i32 @llvm.ctpop.i32(i32 %27587)
  %27589 = trunc i32 %27588 to i8
  %27590 = and i8 %27589, 1
  %27591 = xor i8 %27590, 1
  %27592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27591, i8* %27592, align 1
  %27593 = xor i64 %27577, %27576
  %27594 = xor i64 %27593, %27580
  %27595 = lshr i64 %27594, 4
  %27596 = trunc i64 %27595 to i8
  %27597 = and i8 %27596, 1
  %27598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27597, i8* %27598, align 1
  %27599 = icmp eq i64 %27580, 0
  %27600 = zext i1 %27599 to i8
  %27601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27600, i8* %27601, align 1
  %27602 = lshr i64 %27580, 63
  %27603 = trunc i64 %27602 to i8
  %27604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27603, i8* %27604, align 1
  %27605 = lshr i64 %27576, 63
  %27606 = lshr i64 %27577, 63
  %27607 = xor i64 %27602, %27605
  %27608 = xor i64 %27602, %27606
  %27609 = add i64 %27607, %27608
  %27610 = icmp eq i64 %27609, 2
  %27611 = zext i1 %27610 to i8
  %27612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27611, i8* %27612, align 1
  store %struct.Memory* %loadMem_4abcf3, %struct.Memory** %MEMORY
  %loadMem_4abcf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27614 = getelementptr inbounds %struct.GPR, %struct.GPR* %27613, i32 0, i32 33
  %27615 = getelementptr inbounds %struct.Reg, %struct.Reg* %27614, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %27615 to i64*
  %27616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27617 = getelementptr inbounds %struct.GPR, %struct.GPR* %27616, i32 0, i32 9
  %27618 = getelementptr inbounds %struct.Reg, %struct.Reg* %27617, i32 0, i32 0
  %RSI.i972 = bitcast %union.anon* %27618 to i64*
  %27619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27620 = getelementptr inbounds %struct.GPR, %struct.GPR* %27619, i32 0, i32 11
  %27621 = getelementptr inbounds %struct.Reg, %struct.Reg* %27620, i32 0, i32 0
  %RDI.i973 = bitcast %union.anon* %27621 to i64*
  %27622 = load i64, i64* %RDI.i973
  %27623 = load i64, i64* %RSI.i972
  %27624 = add i64 %27623, 12
  %27625 = load i64, i64* %PC.i971
  %27626 = add i64 %27625, 3
  store i64 %27626, i64* %PC.i971
  %27627 = trunc i64 %27622 to i32
  %27628 = inttoptr i64 %27624 to i32*
  %27629 = load i32, i32* %27628
  %27630 = sub i32 %27627, %27629
  %27631 = zext i32 %27630 to i64
  store i64 %27631, i64* %RDI.i973, align 8
  %27632 = icmp ult i32 %27627, %27629
  %27633 = zext i1 %27632 to i8
  %27634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27633, i8* %27634, align 1
  %27635 = and i32 %27630, 255
  %27636 = call i32 @llvm.ctpop.i32(i32 %27635)
  %27637 = trunc i32 %27636 to i8
  %27638 = and i8 %27637, 1
  %27639 = xor i8 %27638, 1
  %27640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27639, i8* %27640, align 1
  %27641 = xor i32 %27629, %27627
  %27642 = xor i32 %27641, %27630
  %27643 = lshr i32 %27642, 4
  %27644 = trunc i32 %27643 to i8
  %27645 = and i8 %27644, 1
  %27646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27645, i8* %27646, align 1
  %27647 = icmp eq i32 %27630, 0
  %27648 = zext i1 %27647 to i8
  %27649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27648, i8* %27649, align 1
  %27650 = lshr i32 %27630, 31
  %27651 = trunc i32 %27650 to i8
  %27652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27651, i8* %27652, align 1
  %27653 = lshr i32 %27627, 31
  %27654 = lshr i32 %27629, 31
  %27655 = xor i32 %27654, %27653
  %27656 = xor i32 %27650, %27653
  %27657 = add i32 %27656, %27655
  %27658 = icmp eq i32 %27657, 2
  %27659 = zext i1 %27658 to i8
  %27660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27659, i8* %27660, align 1
  store %struct.Memory* %loadMem_4abcf6, %struct.Memory** %MEMORY
  %loadMem_4abcf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27662 = getelementptr inbounds %struct.GPR, %struct.GPR* %27661, i32 0, i32 33
  %27663 = getelementptr inbounds %struct.Reg, %struct.Reg* %27662, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %27663 to i64*
  %27664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27665 = getelementptr inbounds %struct.GPR, %struct.GPR* %27664, i32 0, i32 7
  %27666 = getelementptr inbounds %struct.Reg, %struct.Reg* %27665, i32 0, i32 0
  %RDX.i969 = bitcast %union.anon* %27666 to i64*
  %27667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27668 = getelementptr inbounds %struct.GPR, %struct.GPR* %27667, i32 0, i32 15
  %27669 = getelementptr inbounds %struct.Reg, %struct.Reg* %27668, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %27669 to i64*
  %27670 = load i64, i64* %RBP.i970
  %27671 = sub i64 %27670, 24
  %27672 = load i64, i64* %PC.i968
  %27673 = add i64 %27672, 4
  store i64 %27673, i64* %PC.i968
  %27674 = inttoptr i64 %27671 to i32*
  %27675 = load i32, i32* %27674
  %27676 = sext i32 %27675 to i64
  store i64 %27676, i64* %RDX.i969, align 8
  store %struct.Memory* %loadMem_4abcf9, %struct.Memory** %MEMORY
  %loadMem_4abcfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %27677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27678 = getelementptr inbounds %struct.GPR, %struct.GPR* %27677, i32 0, i32 33
  %27679 = getelementptr inbounds %struct.Reg, %struct.Reg* %27678, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %27679 to i64*
  %27680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27681 = getelementptr inbounds %struct.GPR, %struct.GPR* %27680, i32 0, i32 7
  %27682 = getelementptr inbounds %struct.Reg, %struct.Reg* %27681, i32 0, i32 0
  %RDX.i967 = bitcast %union.anon* %27682 to i64*
  %27683 = load i64, i64* %RDX.i967
  %27684 = load i64, i64* %PC.i966
  %27685 = add i64 %27684, 4
  store i64 %27685, i64* %PC.i966
  %27686 = shl i64 %27683, 4
  %27687 = icmp slt i64 %27686, 0
  %27688 = shl i64 %27686, 1
  store i64 %27688, i64* %RDX.i967, align 8
  %27689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %27690 = zext i1 %27687 to i8
  store i8 %27690, i8* %27689, align 1
  %27691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27692 = trunc i64 %27688 to i32
  %27693 = and i32 %27692, 254
  %27694 = call i32 @llvm.ctpop.i32(i32 %27693)
  %27695 = trunc i32 %27694 to i8
  %27696 = and i8 %27695, 1
  %27697 = xor i8 %27696, 1
  store i8 %27697, i8* %27691, align 1
  %27698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27698, align 1
  %27699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27700 = icmp eq i64 %27688, 0
  %27701 = zext i1 %27700 to i8
  store i8 %27701, i8* %27699, align 1
  %27702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27703 = lshr i64 %27688, 63
  %27704 = trunc i64 %27703 to i8
  store i8 %27704, i8* %27702, align 1
  %27705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27705, align 1
  store %struct.Memory* %loadMem_4abcfd, %struct.Memory** %MEMORY
  %loadMem_4abd01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27707 = getelementptr inbounds %struct.GPR, %struct.GPR* %27706, i32 0, i32 33
  %27708 = getelementptr inbounds %struct.Reg, %struct.Reg* %27707, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %27708 to i64*
  %27709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27710 = getelementptr inbounds %struct.GPR, %struct.GPR* %27709, i32 0, i32 5
  %27711 = getelementptr inbounds %struct.Reg, %struct.Reg* %27710, i32 0, i32 0
  %RCX.i964 = bitcast %union.anon* %27711 to i64*
  %27712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27713 = getelementptr inbounds %struct.GPR, %struct.GPR* %27712, i32 0, i32 9
  %27714 = getelementptr inbounds %struct.Reg, %struct.Reg* %27713, i32 0, i32 0
  %RSI.i965 = bitcast %union.anon* %27714 to i64*
  %27715 = load i64, i64* %RCX.i964
  %27716 = load i64, i64* %PC.i963
  %27717 = add i64 %27716, 3
  store i64 %27717, i64* %PC.i963
  store i64 %27715, i64* %RSI.i965, align 8
  store %struct.Memory* %loadMem_4abd01, %struct.Memory** %MEMORY
  %loadMem_4abd04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27719 = getelementptr inbounds %struct.GPR, %struct.GPR* %27718, i32 0, i32 33
  %27720 = getelementptr inbounds %struct.Reg, %struct.Reg* %27719, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %27720 to i64*
  %27721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27722 = getelementptr inbounds %struct.GPR, %struct.GPR* %27721, i32 0, i32 7
  %27723 = getelementptr inbounds %struct.Reg, %struct.Reg* %27722, i32 0, i32 0
  %RDX.i961 = bitcast %union.anon* %27723 to i64*
  %27724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27725 = getelementptr inbounds %struct.GPR, %struct.GPR* %27724, i32 0, i32 9
  %27726 = getelementptr inbounds %struct.Reg, %struct.Reg* %27725, i32 0, i32 0
  %RSI.i962 = bitcast %union.anon* %27726 to i64*
  %27727 = load i64, i64* %RSI.i962
  %27728 = load i64, i64* %RDX.i961
  %27729 = load i64, i64* %PC.i960
  %27730 = add i64 %27729, 3
  store i64 %27730, i64* %PC.i960
  %27731 = add i64 %27728, %27727
  store i64 %27731, i64* %RSI.i962, align 8
  %27732 = icmp ult i64 %27731, %27727
  %27733 = icmp ult i64 %27731, %27728
  %27734 = or i1 %27732, %27733
  %27735 = zext i1 %27734 to i8
  %27736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27735, i8* %27736, align 1
  %27737 = trunc i64 %27731 to i32
  %27738 = and i32 %27737, 255
  %27739 = call i32 @llvm.ctpop.i32(i32 %27738)
  %27740 = trunc i32 %27739 to i8
  %27741 = and i8 %27740, 1
  %27742 = xor i8 %27741, 1
  %27743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27742, i8* %27743, align 1
  %27744 = xor i64 %27728, %27727
  %27745 = xor i64 %27744, %27731
  %27746 = lshr i64 %27745, 4
  %27747 = trunc i64 %27746 to i8
  %27748 = and i8 %27747, 1
  %27749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27748, i8* %27749, align 1
  %27750 = icmp eq i64 %27731, 0
  %27751 = zext i1 %27750 to i8
  %27752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27751, i8* %27752, align 1
  %27753 = lshr i64 %27731, 63
  %27754 = trunc i64 %27753 to i8
  %27755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27754, i8* %27755, align 1
  %27756 = lshr i64 %27727, 63
  %27757 = lshr i64 %27728, 63
  %27758 = xor i64 %27753, %27756
  %27759 = xor i64 %27753, %27757
  %27760 = add i64 %27758, %27759
  %27761 = icmp eq i64 %27760, 2
  %27762 = zext i1 %27761 to i8
  %27763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27762, i8* %27763, align 1
  store %struct.Memory* %loadMem_4abd04, %struct.Memory** %MEMORY
  %loadMem_4abd07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27765 = getelementptr inbounds %struct.GPR, %struct.GPR* %27764, i32 0, i32 33
  %27766 = getelementptr inbounds %struct.Reg, %struct.Reg* %27765, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %27766 to i64*
  %27767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27768 = getelementptr inbounds %struct.GPR, %struct.GPR* %27767, i32 0, i32 17
  %27769 = getelementptr inbounds %struct.Reg, %struct.Reg* %27768, i32 0, i32 0
  %R8D.i958 = bitcast %union.anon* %27769 to i32*
  %27770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27771 = getelementptr inbounds %struct.GPR, %struct.GPR* %27770, i32 0, i32 9
  %27772 = getelementptr inbounds %struct.Reg, %struct.Reg* %27771, i32 0, i32 0
  %RSI.i959 = bitcast %union.anon* %27772 to i64*
  %27773 = bitcast i32* %R8D.i958 to i64*
  %27774 = load i64, i64* %RSI.i959
  %27775 = add i64 %27774, 12
  %27776 = load i64, i64* %PC.i957
  %27777 = add i64 %27776, 4
  store i64 %27777, i64* %PC.i957
  %27778 = inttoptr i64 %27775 to i32*
  %27779 = load i32, i32* %27778
  %27780 = zext i32 %27779 to i64
  store i64 %27780, i64* %27773, align 8
  store %struct.Memory* %loadMem_4abd07, %struct.Memory** %MEMORY
  %loadMem_4abd0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %27781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27782 = getelementptr inbounds %struct.GPR, %struct.GPR* %27781, i32 0, i32 33
  %27783 = getelementptr inbounds %struct.Reg, %struct.Reg* %27782, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %27783 to i64*
  %27784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27785 = getelementptr inbounds %struct.GPR, %struct.GPR* %27784, i32 0, i32 17
  %27786 = getelementptr inbounds %struct.Reg, %struct.Reg* %27785, i32 0, i32 0
  %R8D.i956 = bitcast %union.anon* %27786 to i32*
  %27787 = bitcast i32* %R8D.i956 to i64*
  %27788 = load i32, i32* %R8D.i956
  %27789 = zext i32 %27788 to i64
  %27790 = load i64, i64* %PC.i955
  %27791 = add i64 %27790, 3
  store i64 %27791, i64* %PC.i955
  %27792 = shl i64 %27789, 32
  %27793 = ashr i64 %27792, 33
  %27794 = trunc i64 %27789 to i8
  %27795 = and i8 %27794, 1
  %27796 = trunc i64 %27793 to i32
  %27797 = and i64 %27793, 4294967295
  store i64 %27797, i64* %27787, align 8
  %27798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27795, i8* %27798, align 1
  %27799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27800 = and i32 %27796, 255
  %27801 = call i32 @llvm.ctpop.i32(i32 %27800)
  %27802 = trunc i32 %27801 to i8
  %27803 = and i8 %27802, 1
  %27804 = xor i8 %27803, 1
  store i8 %27804, i8* %27799, align 1
  %27805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27805, align 1
  %27806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27807 = icmp eq i32 %27796, 0
  %27808 = zext i1 %27807 to i8
  store i8 %27808, i8* %27806, align 1
  %27809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27810 = lshr i32 %27796, 31
  %27811 = trunc i32 %27810 to i8
  store i8 %27811, i8* %27809, align 1
  %27812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27812, align 1
  store %struct.Memory* %loadMem_4abd0b, %struct.Memory** %MEMORY
  %loadMem_4abd0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %27813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27814 = getelementptr inbounds %struct.GPR, %struct.GPR* %27813, i32 0, i32 33
  %27815 = getelementptr inbounds %struct.Reg, %struct.Reg* %27814, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %27815 to i64*
  %27816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27817 = getelementptr inbounds %struct.GPR, %struct.GPR* %27816, i32 0, i32 17
  %27818 = getelementptr inbounds %struct.Reg, %struct.Reg* %27817, i32 0, i32 0
  %R8D.i953 = bitcast %union.anon* %27818 to i32*
  %27819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27820 = getelementptr inbounds %struct.GPR, %struct.GPR* %27819, i32 0, i32 11
  %27821 = getelementptr inbounds %struct.Reg, %struct.Reg* %27820, i32 0, i32 0
  %RDI.i954 = bitcast %union.anon* %27821 to i64*
  %27822 = load i64, i64* %RDI.i954
  %27823 = load i32, i32* %R8D.i953
  %27824 = zext i32 %27823 to i64
  %27825 = load i64, i64* %PC.i952
  %27826 = add i64 %27825, 3
  store i64 %27826, i64* %PC.i952
  %27827 = trunc i64 %27822 to i32
  %27828 = sub i32 %27827, %27823
  %27829 = zext i32 %27828 to i64
  store i64 %27829, i64* %RDI.i954, align 8
  %27830 = icmp ult i32 %27827, %27823
  %27831 = zext i1 %27830 to i8
  %27832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27831, i8* %27832, align 1
  %27833 = and i32 %27828, 255
  %27834 = call i32 @llvm.ctpop.i32(i32 %27833)
  %27835 = trunc i32 %27834 to i8
  %27836 = and i8 %27835, 1
  %27837 = xor i8 %27836, 1
  %27838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27837, i8* %27838, align 1
  %27839 = xor i64 %27824, %27822
  %27840 = trunc i64 %27839 to i32
  %27841 = xor i32 %27840, %27828
  %27842 = lshr i32 %27841, 4
  %27843 = trunc i32 %27842 to i8
  %27844 = and i8 %27843, 1
  %27845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27844, i8* %27845, align 1
  %27846 = icmp eq i32 %27828, 0
  %27847 = zext i1 %27846 to i8
  %27848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27847, i8* %27848, align 1
  %27849 = lshr i32 %27828, 31
  %27850 = trunc i32 %27849 to i8
  %27851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27850, i8* %27851, align 1
  %27852 = lshr i32 %27827, 31
  %27853 = lshr i32 %27823, 31
  %27854 = xor i32 %27853, %27852
  %27855 = xor i32 %27849, %27852
  %27856 = add i32 %27855, %27854
  %27857 = icmp eq i32 %27856, 2
  %27858 = zext i1 %27857 to i8
  %27859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27858, i8* %27859, align 1
  store %struct.Memory* %loadMem_4abd0f, %struct.Memory** %MEMORY
  %loadMem_4abd12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27861 = getelementptr inbounds %struct.GPR, %struct.GPR* %27860, i32 0, i32 33
  %27862 = getelementptr inbounds %struct.Reg, %struct.Reg* %27861, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %27862 to i64*
  %27863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27864 = getelementptr inbounds %struct.GPR, %struct.GPR* %27863, i32 0, i32 11
  %27865 = getelementptr inbounds %struct.Reg, %struct.Reg* %27864, i32 0, i32 0
  %EDI.i950 = bitcast %union.anon* %27865 to i32*
  %27866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27867 = getelementptr inbounds %struct.GPR, %struct.GPR* %27866, i32 0, i32 15
  %27868 = getelementptr inbounds %struct.Reg, %struct.Reg* %27867, i32 0, i32 0
  %RBP.i951 = bitcast %union.anon* %27868 to i64*
  %27869 = load i64, i64* %RBP.i951
  %27870 = sub i64 %27869, 628
  %27871 = load i32, i32* %EDI.i950
  %27872 = zext i32 %27871 to i64
  %27873 = load i64, i64* %PC.i949
  %27874 = add i64 %27873, 6
  store i64 %27874, i64* %PC.i949
  %27875 = inttoptr i64 %27870 to i32*
  store i32 %27871, i32* %27875
  store %struct.Memory* %loadMem_4abd12, %struct.Memory** %MEMORY
  %loadMem_4abd18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27877 = getelementptr inbounds %struct.GPR, %struct.GPR* %27876, i32 0, i32 33
  %27878 = getelementptr inbounds %struct.Reg, %struct.Reg* %27877, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %27878 to i64*
  %27879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27880 = getelementptr inbounds %struct.GPR, %struct.GPR* %27879, i32 0, i32 7
  %27881 = getelementptr inbounds %struct.Reg, %struct.Reg* %27880, i32 0, i32 0
  %RDX.i947 = bitcast %union.anon* %27881 to i64*
  %27882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27883 = getelementptr inbounds %struct.GPR, %struct.GPR* %27882, i32 0, i32 15
  %27884 = getelementptr inbounds %struct.Reg, %struct.Reg* %27883, i32 0, i32 0
  %RBP.i948 = bitcast %union.anon* %27884 to i64*
  %27885 = load i64, i64* %RBP.i948
  %27886 = sub i64 %27885, 24
  %27887 = load i64, i64* %PC.i946
  %27888 = add i64 %27887, 4
  store i64 %27888, i64* %PC.i946
  %27889 = inttoptr i64 %27886 to i32*
  %27890 = load i32, i32* %27889
  %27891 = sext i32 %27890 to i64
  store i64 %27891, i64* %RDX.i947, align 8
  store %struct.Memory* %loadMem_4abd18, %struct.Memory** %MEMORY
  %loadMem_4abd1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %27892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27893 = getelementptr inbounds %struct.GPR, %struct.GPR* %27892, i32 0, i32 33
  %27894 = getelementptr inbounds %struct.Reg, %struct.Reg* %27893, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %27894 to i64*
  %27895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27896 = getelementptr inbounds %struct.GPR, %struct.GPR* %27895, i32 0, i32 7
  %27897 = getelementptr inbounds %struct.Reg, %struct.Reg* %27896, i32 0, i32 0
  %RDX.i945 = bitcast %union.anon* %27897 to i64*
  %27898 = load i64, i64* %RDX.i945
  %27899 = load i64, i64* %PC.i944
  %27900 = add i64 %27899, 4
  store i64 %27900, i64* %PC.i944
  %27901 = shl i64 %27898, 4
  %27902 = icmp slt i64 %27901, 0
  %27903 = shl i64 %27901, 1
  store i64 %27903, i64* %RDX.i945, align 8
  %27904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %27905 = zext i1 %27902 to i8
  store i8 %27905, i8* %27904, align 1
  %27906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27907 = trunc i64 %27903 to i32
  %27908 = and i32 %27907, 254
  %27909 = call i32 @llvm.ctpop.i32(i32 %27908)
  %27910 = trunc i32 %27909 to i8
  %27911 = and i8 %27910, 1
  %27912 = xor i8 %27911, 1
  store i8 %27912, i8* %27906, align 1
  %27913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27913, align 1
  %27914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27915 = icmp eq i64 %27903, 0
  %27916 = zext i1 %27915 to i8
  store i8 %27916, i8* %27914, align 1
  %27917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27918 = lshr i64 %27903, 63
  %27919 = trunc i64 %27918 to i8
  store i8 %27919, i8* %27917, align 1
  %27920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27920, align 1
  store %struct.Memory* %loadMem_4abd1c, %struct.Memory** %MEMORY
  %loadMem_4abd20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27922 = getelementptr inbounds %struct.GPR, %struct.GPR* %27921, i32 0, i32 33
  %27923 = getelementptr inbounds %struct.Reg, %struct.Reg* %27922, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %27923 to i64*
  %27924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27925 = getelementptr inbounds %struct.GPR, %struct.GPR* %27924, i32 0, i32 5
  %27926 = getelementptr inbounds %struct.Reg, %struct.Reg* %27925, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %27926 to i64*
  %27927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27928 = getelementptr inbounds %struct.GPR, %struct.GPR* %27927, i32 0, i32 9
  %27929 = getelementptr inbounds %struct.Reg, %struct.Reg* %27928, i32 0, i32 0
  %RSI.i943 = bitcast %union.anon* %27929 to i64*
  %27930 = load i64, i64* %RCX.i942
  %27931 = load i64, i64* %PC.i941
  %27932 = add i64 %27931, 3
  store i64 %27932, i64* %PC.i941
  store i64 %27930, i64* %RSI.i943, align 8
  store %struct.Memory* %loadMem_4abd20, %struct.Memory** %MEMORY
  %loadMem_4abd23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27934 = getelementptr inbounds %struct.GPR, %struct.GPR* %27933, i32 0, i32 33
  %27935 = getelementptr inbounds %struct.Reg, %struct.Reg* %27934, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %27935 to i64*
  %27936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27937 = getelementptr inbounds %struct.GPR, %struct.GPR* %27936, i32 0, i32 7
  %27938 = getelementptr inbounds %struct.Reg, %struct.Reg* %27937, i32 0, i32 0
  %RDX.i939 = bitcast %union.anon* %27938 to i64*
  %27939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27940 = getelementptr inbounds %struct.GPR, %struct.GPR* %27939, i32 0, i32 9
  %27941 = getelementptr inbounds %struct.Reg, %struct.Reg* %27940, i32 0, i32 0
  %RSI.i940 = bitcast %union.anon* %27941 to i64*
  %27942 = load i64, i64* %RSI.i940
  %27943 = load i64, i64* %RDX.i939
  %27944 = load i64, i64* %PC.i938
  %27945 = add i64 %27944, 3
  store i64 %27945, i64* %PC.i938
  %27946 = add i64 %27943, %27942
  store i64 %27946, i64* %RSI.i940, align 8
  %27947 = icmp ult i64 %27946, %27942
  %27948 = icmp ult i64 %27946, %27943
  %27949 = or i1 %27947, %27948
  %27950 = zext i1 %27949 to i8
  %27951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27950, i8* %27951, align 1
  %27952 = trunc i64 %27946 to i32
  %27953 = and i32 %27952, 255
  %27954 = call i32 @llvm.ctpop.i32(i32 %27953)
  %27955 = trunc i32 %27954 to i8
  %27956 = and i8 %27955, 1
  %27957 = xor i8 %27956, 1
  %27958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27957, i8* %27958, align 1
  %27959 = xor i64 %27943, %27942
  %27960 = xor i64 %27959, %27946
  %27961 = lshr i64 %27960, 4
  %27962 = trunc i64 %27961 to i8
  %27963 = and i8 %27962, 1
  %27964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27963, i8* %27964, align 1
  %27965 = icmp eq i64 %27946, 0
  %27966 = zext i1 %27965 to i8
  %27967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27966, i8* %27967, align 1
  %27968 = lshr i64 %27946, 63
  %27969 = trunc i64 %27968 to i8
  %27970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27969, i8* %27970, align 1
  %27971 = lshr i64 %27942, 63
  %27972 = lshr i64 %27943, 63
  %27973 = xor i64 %27968, %27971
  %27974 = xor i64 %27968, %27972
  %27975 = add i64 %27973, %27974
  %27976 = icmp eq i64 %27975, 2
  %27977 = zext i1 %27976 to i8
  %27978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27977, i8* %27978, align 1
  store %struct.Memory* %loadMem_4abd23, %struct.Memory** %MEMORY
  %loadMem_4abd26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27980 = getelementptr inbounds %struct.GPR, %struct.GPR* %27979, i32 0, i32 33
  %27981 = getelementptr inbounds %struct.Reg, %struct.Reg* %27980, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %27981 to i64*
  %27982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27983 = getelementptr inbounds %struct.GPR, %struct.GPR* %27982, i32 0, i32 1
  %27984 = getelementptr inbounds %struct.Reg, %struct.Reg* %27983, i32 0, i32 0
  %EAX.i936 = bitcast %union.anon* %27984 to i32*
  %27985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27986 = getelementptr inbounds %struct.GPR, %struct.GPR* %27985, i32 0, i32 11
  %27987 = getelementptr inbounds %struct.Reg, %struct.Reg* %27986, i32 0, i32 0
  %RDI.i937 = bitcast %union.anon* %27987 to i64*
  %27988 = load i32, i32* %EAX.i936
  %27989 = zext i32 %27988 to i64
  %27990 = load i64, i64* %PC.i935
  %27991 = add i64 %27990, 2
  store i64 %27991, i64* %PC.i935
  %27992 = and i64 %27989, 4294967295
  store i64 %27992, i64* %RDI.i937, align 8
  store %struct.Memory* %loadMem_4abd26, %struct.Memory** %MEMORY
  %loadMem_4abd28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27994 = getelementptr inbounds %struct.GPR, %struct.GPR* %27993, i32 0, i32 33
  %27995 = getelementptr inbounds %struct.Reg, %struct.Reg* %27994, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %27995 to i64*
  %27996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27997 = getelementptr inbounds %struct.GPR, %struct.GPR* %27996, i32 0, i32 9
  %27998 = getelementptr inbounds %struct.Reg, %struct.Reg* %27997, i32 0, i32 0
  %RSI.i933 = bitcast %union.anon* %27998 to i64*
  %27999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28000 = getelementptr inbounds %struct.GPR, %struct.GPR* %27999, i32 0, i32 11
  %28001 = getelementptr inbounds %struct.Reg, %struct.Reg* %28000, i32 0, i32 0
  %RDI.i934 = bitcast %union.anon* %28001 to i64*
  %28002 = load i64, i64* %RDI.i934
  %28003 = load i64, i64* %RSI.i933
  %28004 = add i64 %28003, 4
  %28005 = load i64, i64* %PC.i932
  %28006 = add i64 %28005, 3
  store i64 %28006, i64* %PC.i932
  %28007 = trunc i64 %28002 to i32
  %28008 = inttoptr i64 %28004 to i32*
  %28009 = load i32, i32* %28008
  %28010 = sub i32 %28007, %28009
  %28011 = zext i32 %28010 to i64
  store i64 %28011, i64* %RDI.i934, align 8
  %28012 = icmp ult i32 %28007, %28009
  %28013 = zext i1 %28012 to i8
  %28014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28013, i8* %28014, align 1
  %28015 = and i32 %28010, 255
  %28016 = call i32 @llvm.ctpop.i32(i32 %28015)
  %28017 = trunc i32 %28016 to i8
  %28018 = and i8 %28017, 1
  %28019 = xor i8 %28018, 1
  %28020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28019, i8* %28020, align 1
  %28021 = xor i32 %28009, %28007
  %28022 = xor i32 %28021, %28010
  %28023 = lshr i32 %28022, 4
  %28024 = trunc i32 %28023 to i8
  %28025 = and i8 %28024, 1
  %28026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28025, i8* %28026, align 1
  %28027 = icmp eq i32 %28010, 0
  %28028 = zext i1 %28027 to i8
  %28029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28028, i8* %28029, align 1
  %28030 = lshr i32 %28010, 31
  %28031 = trunc i32 %28030 to i8
  %28032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28031, i8* %28032, align 1
  %28033 = lshr i32 %28007, 31
  %28034 = lshr i32 %28009, 31
  %28035 = xor i32 %28034, %28033
  %28036 = xor i32 %28030, %28033
  %28037 = add i32 %28036, %28035
  %28038 = icmp eq i32 %28037, 2
  %28039 = zext i1 %28038 to i8
  %28040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28039, i8* %28040, align 1
  store %struct.Memory* %loadMem_4abd28, %struct.Memory** %MEMORY
  %loadMem_4abd2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %28041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28042 = getelementptr inbounds %struct.GPR, %struct.GPR* %28041, i32 0, i32 33
  %28043 = getelementptr inbounds %struct.Reg, %struct.Reg* %28042, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %28043 to i64*
  %28044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28045 = getelementptr inbounds %struct.GPR, %struct.GPR* %28044, i32 0, i32 7
  %28046 = getelementptr inbounds %struct.Reg, %struct.Reg* %28045, i32 0, i32 0
  %RDX.i930 = bitcast %union.anon* %28046 to i64*
  %28047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28048 = getelementptr inbounds %struct.GPR, %struct.GPR* %28047, i32 0, i32 15
  %28049 = getelementptr inbounds %struct.Reg, %struct.Reg* %28048, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %28049 to i64*
  %28050 = load i64, i64* %RBP.i931
  %28051 = sub i64 %28050, 24
  %28052 = load i64, i64* %PC.i929
  %28053 = add i64 %28052, 4
  store i64 %28053, i64* %PC.i929
  %28054 = inttoptr i64 %28051 to i32*
  %28055 = load i32, i32* %28054
  %28056 = sext i32 %28055 to i64
  store i64 %28056, i64* %RDX.i930, align 8
  store %struct.Memory* %loadMem_4abd2b, %struct.Memory** %MEMORY
  %loadMem_4abd2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %28057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28058 = getelementptr inbounds %struct.GPR, %struct.GPR* %28057, i32 0, i32 33
  %28059 = getelementptr inbounds %struct.Reg, %struct.Reg* %28058, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %28059 to i64*
  %28060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28061 = getelementptr inbounds %struct.GPR, %struct.GPR* %28060, i32 0, i32 7
  %28062 = getelementptr inbounds %struct.Reg, %struct.Reg* %28061, i32 0, i32 0
  %RDX.i928 = bitcast %union.anon* %28062 to i64*
  %28063 = load i64, i64* %RDX.i928
  %28064 = load i64, i64* %PC.i927
  %28065 = add i64 %28064, 4
  store i64 %28065, i64* %PC.i927
  %28066 = shl i64 %28063, 4
  %28067 = icmp slt i64 %28066, 0
  %28068 = shl i64 %28066, 1
  store i64 %28068, i64* %RDX.i928, align 8
  %28069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %28070 = zext i1 %28067 to i8
  store i8 %28070, i8* %28069, align 1
  %28071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %28072 = trunc i64 %28068 to i32
  %28073 = and i32 %28072, 254
  %28074 = call i32 @llvm.ctpop.i32(i32 %28073)
  %28075 = trunc i32 %28074 to i8
  %28076 = and i8 %28075, 1
  %28077 = xor i8 %28076, 1
  store i8 %28077, i8* %28071, align 1
  %28078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28078, align 1
  %28079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28080 = icmp eq i64 %28068, 0
  %28081 = zext i1 %28080 to i8
  store i8 %28081, i8* %28079, align 1
  %28082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %28083 = lshr i64 %28068, 63
  %28084 = trunc i64 %28083 to i8
  store i8 %28084, i8* %28082, align 1
  %28085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28085, align 1
  store %struct.Memory* %loadMem_4abd2f, %struct.Memory** %MEMORY
  %loadMem_4abd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28087 = getelementptr inbounds %struct.GPR, %struct.GPR* %28086, i32 0, i32 33
  %28088 = getelementptr inbounds %struct.Reg, %struct.Reg* %28087, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %28088 to i64*
  %28089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28090 = getelementptr inbounds %struct.GPR, %struct.GPR* %28089, i32 0, i32 5
  %28091 = getelementptr inbounds %struct.Reg, %struct.Reg* %28090, i32 0, i32 0
  %RCX.i925 = bitcast %union.anon* %28091 to i64*
  %28092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28093 = getelementptr inbounds %struct.GPR, %struct.GPR* %28092, i32 0, i32 9
  %28094 = getelementptr inbounds %struct.Reg, %struct.Reg* %28093, i32 0, i32 0
  %RSI.i926 = bitcast %union.anon* %28094 to i64*
  %28095 = load i64, i64* %RCX.i925
  %28096 = load i64, i64* %PC.i924
  %28097 = add i64 %28096, 3
  store i64 %28097, i64* %PC.i924
  store i64 %28095, i64* %RSI.i926, align 8
  store %struct.Memory* %loadMem_4abd33, %struct.Memory** %MEMORY
  %loadMem_4abd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28099 = getelementptr inbounds %struct.GPR, %struct.GPR* %28098, i32 0, i32 33
  %28100 = getelementptr inbounds %struct.Reg, %struct.Reg* %28099, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %28100 to i64*
  %28101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28102 = getelementptr inbounds %struct.GPR, %struct.GPR* %28101, i32 0, i32 7
  %28103 = getelementptr inbounds %struct.Reg, %struct.Reg* %28102, i32 0, i32 0
  %RDX.i922 = bitcast %union.anon* %28103 to i64*
  %28104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28105 = getelementptr inbounds %struct.GPR, %struct.GPR* %28104, i32 0, i32 9
  %28106 = getelementptr inbounds %struct.Reg, %struct.Reg* %28105, i32 0, i32 0
  %RSI.i923 = bitcast %union.anon* %28106 to i64*
  %28107 = load i64, i64* %RSI.i923
  %28108 = load i64, i64* %RDX.i922
  %28109 = load i64, i64* %PC.i921
  %28110 = add i64 %28109, 3
  store i64 %28110, i64* %PC.i921
  %28111 = add i64 %28108, %28107
  store i64 %28111, i64* %RSI.i923, align 8
  %28112 = icmp ult i64 %28111, %28107
  %28113 = icmp ult i64 %28111, %28108
  %28114 = or i1 %28112, %28113
  %28115 = zext i1 %28114 to i8
  %28116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28115, i8* %28116, align 1
  %28117 = trunc i64 %28111 to i32
  %28118 = and i32 %28117, 255
  %28119 = call i32 @llvm.ctpop.i32(i32 %28118)
  %28120 = trunc i32 %28119 to i8
  %28121 = and i8 %28120, 1
  %28122 = xor i8 %28121, 1
  %28123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28122, i8* %28123, align 1
  %28124 = xor i64 %28108, %28107
  %28125 = xor i64 %28124, %28111
  %28126 = lshr i64 %28125, 4
  %28127 = trunc i64 %28126 to i8
  %28128 = and i8 %28127, 1
  %28129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28128, i8* %28129, align 1
  %28130 = icmp eq i64 %28111, 0
  %28131 = zext i1 %28130 to i8
  %28132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28131, i8* %28132, align 1
  %28133 = lshr i64 %28111, 63
  %28134 = trunc i64 %28133 to i8
  %28135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28134, i8* %28135, align 1
  %28136 = lshr i64 %28107, 63
  %28137 = lshr i64 %28108, 63
  %28138 = xor i64 %28133, %28136
  %28139 = xor i64 %28133, %28137
  %28140 = add i64 %28138, %28139
  %28141 = icmp eq i64 %28140, 2
  %28142 = zext i1 %28141 to i8
  %28143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28142, i8* %28143, align 1
  store %struct.Memory* %loadMem_4abd36, %struct.Memory** %MEMORY
  %loadMem_4abd39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28145 = getelementptr inbounds %struct.GPR, %struct.GPR* %28144, i32 0, i32 33
  %28146 = getelementptr inbounds %struct.Reg, %struct.Reg* %28145, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %28146 to i64*
  %28147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28148 = getelementptr inbounds %struct.GPR, %struct.GPR* %28147, i32 0, i32 9
  %28149 = getelementptr inbounds %struct.Reg, %struct.Reg* %28148, i32 0, i32 0
  %RSI.i919 = bitcast %union.anon* %28149 to i64*
  %28150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28151 = getelementptr inbounds %struct.GPR, %struct.GPR* %28150, i32 0, i32 11
  %28152 = getelementptr inbounds %struct.Reg, %struct.Reg* %28151, i32 0, i32 0
  %RDI.i920 = bitcast %union.anon* %28152 to i64*
  %28153 = load i64, i64* %RDI.i920
  %28154 = load i64, i64* %RSI.i919
  %28155 = add i64 %28154, 28
  %28156 = load i64, i64* %PC.i918
  %28157 = add i64 %28156, 3
  store i64 %28157, i64* %PC.i918
  %28158 = trunc i64 %28153 to i32
  %28159 = inttoptr i64 %28155 to i32*
  %28160 = load i32, i32* %28159
  %28161 = add i32 %28160, %28158
  %28162 = zext i32 %28161 to i64
  store i64 %28162, i64* %RDI.i920, align 8
  %28163 = icmp ult i32 %28161, %28158
  %28164 = icmp ult i32 %28161, %28160
  %28165 = or i1 %28163, %28164
  %28166 = zext i1 %28165 to i8
  %28167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28166, i8* %28167, align 1
  %28168 = and i32 %28161, 255
  %28169 = call i32 @llvm.ctpop.i32(i32 %28168)
  %28170 = trunc i32 %28169 to i8
  %28171 = and i8 %28170, 1
  %28172 = xor i8 %28171, 1
  %28173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28172, i8* %28173, align 1
  %28174 = xor i32 %28160, %28158
  %28175 = xor i32 %28174, %28161
  %28176 = lshr i32 %28175, 4
  %28177 = trunc i32 %28176 to i8
  %28178 = and i8 %28177, 1
  %28179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28178, i8* %28179, align 1
  %28180 = icmp eq i32 %28161, 0
  %28181 = zext i1 %28180 to i8
  %28182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28181, i8* %28182, align 1
  %28183 = lshr i32 %28161, 31
  %28184 = trunc i32 %28183 to i8
  %28185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28184, i8* %28185, align 1
  %28186 = lshr i32 %28158, 31
  %28187 = lshr i32 %28160, 31
  %28188 = xor i32 %28183, %28186
  %28189 = xor i32 %28183, %28187
  %28190 = add i32 %28188, %28189
  %28191 = icmp eq i32 %28190, 2
  %28192 = zext i1 %28191 to i8
  %28193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28192, i8* %28193, align 1
  store %struct.Memory* %loadMem_4abd39, %struct.Memory** %MEMORY
  %loadMem_4abd3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %28194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28195 = getelementptr inbounds %struct.GPR, %struct.GPR* %28194, i32 0, i32 33
  %28196 = getelementptr inbounds %struct.Reg, %struct.Reg* %28195, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %28196 to i64*
  %28197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28198 = getelementptr inbounds %struct.GPR, %struct.GPR* %28197, i32 0, i32 7
  %28199 = getelementptr inbounds %struct.Reg, %struct.Reg* %28198, i32 0, i32 0
  %RDX.i916 = bitcast %union.anon* %28199 to i64*
  %28200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28201 = getelementptr inbounds %struct.GPR, %struct.GPR* %28200, i32 0, i32 15
  %28202 = getelementptr inbounds %struct.Reg, %struct.Reg* %28201, i32 0, i32 0
  %RBP.i917 = bitcast %union.anon* %28202 to i64*
  %28203 = load i64, i64* %RBP.i917
  %28204 = sub i64 %28203, 24
  %28205 = load i64, i64* %PC.i915
  %28206 = add i64 %28205, 4
  store i64 %28206, i64* %PC.i915
  %28207 = inttoptr i64 %28204 to i32*
  %28208 = load i32, i32* %28207
  %28209 = sext i32 %28208 to i64
  store i64 %28209, i64* %RDX.i916, align 8
  store %struct.Memory* %loadMem_4abd3c, %struct.Memory** %MEMORY
  %loadMem_4abd40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28211 = getelementptr inbounds %struct.GPR, %struct.GPR* %28210, i32 0, i32 33
  %28212 = getelementptr inbounds %struct.Reg, %struct.Reg* %28211, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %28212 to i64*
  %28213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28214 = getelementptr inbounds %struct.GPR, %struct.GPR* %28213, i32 0, i32 7
  %28215 = getelementptr inbounds %struct.Reg, %struct.Reg* %28214, i32 0, i32 0
  %RDX.i914 = bitcast %union.anon* %28215 to i64*
  %28216 = load i64, i64* %RDX.i914
  %28217 = load i64, i64* %PC.i913
  %28218 = add i64 %28217, 4
  store i64 %28218, i64* %PC.i913
  %28219 = shl i64 %28216, 4
  %28220 = icmp slt i64 %28219, 0
  %28221 = shl i64 %28219, 1
  store i64 %28221, i64* %RDX.i914, align 8
  %28222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %28223 = zext i1 %28220 to i8
  store i8 %28223, i8* %28222, align 1
  %28224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %28225 = trunc i64 %28221 to i32
  %28226 = and i32 %28225, 254
  %28227 = call i32 @llvm.ctpop.i32(i32 %28226)
  %28228 = trunc i32 %28227 to i8
  %28229 = and i8 %28228, 1
  %28230 = xor i8 %28229, 1
  store i8 %28230, i8* %28224, align 1
  %28231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28231, align 1
  %28232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28233 = icmp eq i64 %28221, 0
  %28234 = zext i1 %28233 to i8
  store i8 %28234, i8* %28232, align 1
  %28235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %28236 = lshr i64 %28221, 63
  %28237 = trunc i64 %28236 to i8
  store i8 %28237, i8* %28235, align 1
  %28238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28238, align 1
  store %struct.Memory* %loadMem_4abd40, %struct.Memory** %MEMORY
  %loadMem_4abd44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28240 = getelementptr inbounds %struct.GPR, %struct.GPR* %28239, i32 0, i32 33
  %28241 = getelementptr inbounds %struct.Reg, %struct.Reg* %28240, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %28241 to i64*
  %28242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28243 = getelementptr inbounds %struct.GPR, %struct.GPR* %28242, i32 0, i32 5
  %28244 = getelementptr inbounds %struct.Reg, %struct.Reg* %28243, i32 0, i32 0
  %RCX.i911 = bitcast %union.anon* %28244 to i64*
  %28245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28246 = getelementptr inbounds %struct.GPR, %struct.GPR* %28245, i32 0, i32 9
  %28247 = getelementptr inbounds %struct.Reg, %struct.Reg* %28246, i32 0, i32 0
  %RSI.i912 = bitcast %union.anon* %28247 to i64*
  %28248 = load i64, i64* %RCX.i911
  %28249 = load i64, i64* %PC.i910
  %28250 = add i64 %28249, 3
  store i64 %28250, i64* %PC.i910
  store i64 %28248, i64* %RSI.i912, align 8
  store %struct.Memory* %loadMem_4abd44, %struct.Memory** %MEMORY
  %loadMem_4abd47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28252 = getelementptr inbounds %struct.GPR, %struct.GPR* %28251, i32 0, i32 33
  %28253 = getelementptr inbounds %struct.Reg, %struct.Reg* %28252, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %28253 to i64*
  %28254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28255 = getelementptr inbounds %struct.GPR, %struct.GPR* %28254, i32 0, i32 7
  %28256 = getelementptr inbounds %struct.Reg, %struct.Reg* %28255, i32 0, i32 0
  %RDX.i908 = bitcast %union.anon* %28256 to i64*
  %28257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28258 = getelementptr inbounds %struct.GPR, %struct.GPR* %28257, i32 0, i32 9
  %28259 = getelementptr inbounds %struct.Reg, %struct.Reg* %28258, i32 0, i32 0
  %RSI.i909 = bitcast %union.anon* %28259 to i64*
  %28260 = load i64, i64* %RSI.i909
  %28261 = load i64, i64* %RDX.i908
  %28262 = load i64, i64* %PC.i907
  %28263 = add i64 %28262, 3
  store i64 %28263, i64* %PC.i907
  %28264 = add i64 %28261, %28260
  store i64 %28264, i64* %RSI.i909, align 8
  %28265 = icmp ult i64 %28264, %28260
  %28266 = icmp ult i64 %28264, %28261
  %28267 = or i1 %28265, %28266
  %28268 = zext i1 %28267 to i8
  %28269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28268, i8* %28269, align 1
  %28270 = trunc i64 %28264 to i32
  %28271 = and i32 %28270, 255
  %28272 = call i32 @llvm.ctpop.i32(i32 %28271)
  %28273 = trunc i32 %28272 to i8
  %28274 = and i8 %28273, 1
  %28275 = xor i8 %28274, 1
  %28276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28275, i8* %28276, align 1
  %28277 = xor i64 %28261, %28260
  %28278 = xor i64 %28277, %28264
  %28279 = lshr i64 %28278, 4
  %28280 = trunc i64 %28279 to i8
  %28281 = and i8 %28280, 1
  %28282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28281, i8* %28282, align 1
  %28283 = icmp eq i64 %28264, 0
  %28284 = zext i1 %28283 to i8
  %28285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28284, i8* %28285, align 1
  %28286 = lshr i64 %28264, 63
  %28287 = trunc i64 %28286 to i8
  %28288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28287, i8* %28288, align 1
  %28289 = lshr i64 %28260, 63
  %28290 = lshr i64 %28261, 63
  %28291 = xor i64 %28286, %28289
  %28292 = xor i64 %28286, %28290
  %28293 = add i64 %28291, %28292
  %28294 = icmp eq i64 %28293, 2
  %28295 = zext i1 %28294 to i8
  %28296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28295, i8* %28296, align 1
  store %struct.Memory* %loadMem_4abd47, %struct.Memory** %MEMORY
  %loadMem_4abd4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %28297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28298 = getelementptr inbounds %struct.GPR, %struct.GPR* %28297, i32 0, i32 33
  %28299 = getelementptr inbounds %struct.Reg, %struct.Reg* %28298, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %28299 to i64*
  %28300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28301 = getelementptr inbounds %struct.GPR, %struct.GPR* %28300, i32 0, i32 9
  %28302 = getelementptr inbounds %struct.Reg, %struct.Reg* %28301, i32 0, i32 0
  %RSI.i905 = bitcast %union.anon* %28302 to i64*
  %28303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28304 = getelementptr inbounds %struct.GPR, %struct.GPR* %28303, i32 0, i32 11
  %28305 = getelementptr inbounds %struct.Reg, %struct.Reg* %28304, i32 0, i32 0
  %RDI.i906 = bitcast %union.anon* %28305 to i64*
  %28306 = load i64, i64* %RDI.i906
  %28307 = load i64, i64* %RSI.i905
  %28308 = add i64 %28307, 20
  %28309 = load i64, i64* %PC.i904
  %28310 = add i64 %28309, 3
  store i64 %28310, i64* %PC.i904
  %28311 = trunc i64 %28306 to i32
  %28312 = inttoptr i64 %28308 to i32*
  %28313 = load i32, i32* %28312
  %28314 = add i32 %28313, %28311
  %28315 = zext i32 %28314 to i64
  store i64 %28315, i64* %RDI.i906, align 8
  %28316 = icmp ult i32 %28314, %28311
  %28317 = icmp ult i32 %28314, %28313
  %28318 = or i1 %28316, %28317
  %28319 = zext i1 %28318 to i8
  %28320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28319, i8* %28320, align 1
  %28321 = and i32 %28314, 255
  %28322 = call i32 @llvm.ctpop.i32(i32 %28321)
  %28323 = trunc i32 %28322 to i8
  %28324 = and i8 %28323, 1
  %28325 = xor i8 %28324, 1
  %28326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28325, i8* %28326, align 1
  %28327 = xor i32 %28313, %28311
  %28328 = xor i32 %28327, %28314
  %28329 = lshr i32 %28328, 4
  %28330 = trunc i32 %28329 to i8
  %28331 = and i8 %28330, 1
  %28332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28331, i8* %28332, align 1
  %28333 = icmp eq i32 %28314, 0
  %28334 = zext i1 %28333 to i8
  %28335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28334, i8* %28335, align 1
  %28336 = lshr i32 %28314, 31
  %28337 = trunc i32 %28336 to i8
  %28338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28337, i8* %28338, align 1
  %28339 = lshr i32 %28311, 31
  %28340 = lshr i32 %28313, 31
  %28341 = xor i32 %28336, %28339
  %28342 = xor i32 %28336, %28340
  %28343 = add i32 %28341, %28342
  %28344 = icmp eq i32 %28343, 2
  %28345 = zext i1 %28344 to i8
  %28346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28345, i8* %28346, align 1
  store %struct.Memory* %loadMem_4abd4a, %struct.Memory** %MEMORY
  %loadMem_4abd4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %28347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28348 = getelementptr inbounds %struct.GPR, %struct.GPR* %28347, i32 0, i32 33
  %28349 = getelementptr inbounds %struct.Reg, %struct.Reg* %28348, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %28349 to i64*
  %28350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28351 = getelementptr inbounds %struct.GPR, %struct.GPR* %28350, i32 0, i32 7
  %28352 = getelementptr inbounds %struct.Reg, %struct.Reg* %28351, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %28352 to i64*
  %28353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28354 = getelementptr inbounds %struct.GPR, %struct.GPR* %28353, i32 0, i32 15
  %28355 = getelementptr inbounds %struct.Reg, %struct.Reg* %28354, i32 0, i32 0
  %RBP.i903 = bitcast %union.anon* %28355 to i64*
  %28356 = load i64, i64* %RBP.i903
  %28357 = sub i64 %28356, 24
  %28358 = load i64, i64* %PC.i901
  %28359 = add i64 %28358, 4
  store i64 %28359, i64* %PC.i901
  %28360 = inttoptr i64 %28357 to i32*
  %28361 = load i32, i32* %28360
  %28362 = sext i32 %28361 to i64
  store i64 %28362, i64* %RDX.i902, align 8
  store %struct.Memory* %loadMem_4abd4d, %struct.Memory** %MEMORY
  %loadMem_4abd51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28364 = getelementptr inbounds %struct.GPR, %struct.GPR* %28363, i32 0, i32 33
  %28365 = getelementptr inbounds %struct.Reg, %struct.Reg* %28364, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %28365 to i64*
  %28366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28367 = getelementptr inbounds %struct.GPR, %struct.GPR* %28366, i32 0, i32 7
  %28368 = getelementptr inbounds %struct.Reg, %struct.Reg* %28367, i32 0, i32 0
  %RDX.i900 = bitcast %union.anon* %28368 to i64*
  %28369 = load i64, i64* %RDX.i900
  %28370 = load i64, i64* %PC.i899
  %28371 = add i64 %28370, 4
  store i64 %28371, i64* %PC.i899
  %28372 = shl i64 %28369, 4
  %28373 = icmp slt i64 %28372, 0
  %28374 = shl i64 %28372, 1
  store i64 %28374, i64* %RDX.i900, align 8
  %28375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %28376 = zext i1 %28373 to i8
  store i8 %28376, i8* %28375, align 1
  %28377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %28378 = trunc i64 %28374 to i32
  %28379 = and i32 %28378, 254
  %28380 = call i32 @llvm.ctpop.i32(i32 %28379)
  %28381 = trunc i32 %28380 to i8
  %28382 = and i8 %28381, 1
  %28383 = xor i8 %28382, 1
  store i8 %28383, i8* %28377, align 1
  %28384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28384, align 1
  %28385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28386 = icmp eq i64 %28374, 0
  %28387 = zext i1 %28386 to i8
  store i8 %28387, i8* %28385, align 1
  %28388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %28389 = lshr i64 %28374, 63
  %28390 = trunc i64 %28389 to i8
  store i8 %28390, i8* %28388, align 1
  %28391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28391, align 1
  store %struct.Memory* %loadMem_4abd51, %struct.Memory** %MEMORY
  %loadMem_4abd55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28393 = getelementptr inbounds %struct.GPR, %struct.GPR* %28392, i32 0, i32 33
  %28394 = getelementptr inbounds %struct.Reg, %struct.Reg* %28393, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %28394 to i64*
  %28395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28396 = getelementptr inbounds %struct.GPR, %struct.GPR* %28395, i32 0, i32 5
  %28397 = getelementptr inbounds %struct.Reg, %struct.Reg* %28396, i32 0, i32 0
  %RCX.i897 = bitcast %union.anon* %28397 to i64*
  %28398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28399 = getelementptr inbounds %struct.GPR, %struct.GPR* %28398, i32 0, i32 9
  %28400 = getelementptr inbounds %struct.Reg, %struct.Reg* %28399, i32 0, i32 0
  %RSI.i898 = bitcast %union.anon* %28400 to i64*
  %28401 = load i64, i64* %RCX.i897
  %28402 = load i64, i64* %PC.i896
  %28403 = add i64 %28402, 3
  store i64 %28403, i64* %PC.i896
  store i64 %28401, i64* %RSI.i898, align 8
  store %struct.Memory* %loadMem_4abd55, %struct.Memory** %MEMORY
  %loadMem_4abd58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28405 = getelementptr inbounds %struct.GPR, %struct.GPR* %28404, i32 0, i32 33
  %28406 = getelementptr inbounds %struct.Reg, %struct.Reg* %28405, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %28406 to i64*
  %28407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28408 = getelementptr inbounds %struct.GPR, %struct.GPR* %28407, i32 0, i32 7
  %28409 = getelementptr inbounds %struct.Reg, %struct.Reg* %28408, i32 0, i32 0
  %RDX.i894 = bitcast %union.anon* %28409 to i64*
  %28410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28411 = getelementptr inbounds %struct.GPR, %struct.GPR* %28410, i32 0, i32 9
  %28412 = getelementptr inbounds %struct.Reg, %struct.Reg* %28411, i32 0, i32 0
  %RSI.i895 = bitcast %union.anon* %28412 to i64*
  %28413 = load i64, i64* %RSI.i895
  %28414 = load i64, i64* %RDX.i894
  %28415 = load i64, i64* %PC.i893
  %28416 = add i64 %28415, 3
  store i64 %28416, i64* %PC.i893
  %28417 = add i64 %28414, %28413
  store i64 %28417, i64* %RSI.i895, align 8
  %28418 = icmp ult i64 %28417, %28413
  %28419 = icmp ult i64 %28417, %28414
  %28420 = or i1 %28418, %28419
  %28421 = zext i1 %28420 to i8
  %28422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28421, i8* %28422, align 1
  %28423 = trunc i64 %28417 to i32
  %28424 = and i32 %28423, 255
  %28425 = call i32 @llvm.ctpop.i32(i32 %28424)
  %28426 = trunc i32 %28425 to i8
  %28427 = and i8 %28426, 1
  %28428 = xor i8 %28427, 1
  %28429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28428, i8* %28429, align 1
  %28430 = xor i64 %28414, %28413
  %28431 = xor i64 %28430, %28417
  %28432 = lshr i64 %28431, 4
  %28433 = trunc i64 %28432 to i8
  %28434 = and i8 %28433, 1
  %28435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28434, i8* %28435, align 1
  %28436 = icmp eq i64 %28417, 0
  %28437 = zext i1 %28436 to i8
  %28438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28437, i8* %28438, align 1
  %28439 = lshr i64 %28417, 63
  %28440 = trunc i64 %28439 to i8
  %28441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28440, i8* %28441, align 1
  %28442 = lshr i64 %28413, 63
  %28443 = lshr i64 %28414, 63
  %28444 = xor i64 %28439, %28442
  %28445 = xor i64 %28439, %28443
  %28446 = add i64 %28444, %28445
  %28447 = icmp eq i64 %28446, 2
  %28448 = zext i1 %28447 to i8
  %28449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28448, i8* %28449, align 1
  store %struct.Memory* %loadMem_4abd58, %struct.Memory** %MEMORY
  %loadMem_4abd5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %28450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28451 = getelementptr inbounds %struct.GPR, %struct.GPR* %28450, i32 0, i32 33
  %28452 = getelementptr inbounds %struct.Reg, %struct.Reg* %28451, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %28452 to i64*
  %28453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28454 = getelementptr inbounds %struct.GPR, %struct.GPR* %28453, i32 0, i32 17
  %28455 = getelementptr inbounds %struct.Reg, %struct.Reg* %28454, i32 0, i32 0
  %R8D.i891 = bitcast %union.anon* %28455 to i32*
  %28456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28457 = getelementptr inbounds %struct.GPR, %struct.GPR* %28456, i32 0, i32 9
  %28458 = getelementptr inbounds %struct.Reg, %struct.Reg* %28457, i32 0, i32 0
  %RSI.i892 = bitcast %union.anon* %28458 to i64*
  %28459 = bitcast i32* %R8D.i891 to i64*
  %28460 = load i64, i64* %RSI.i892
  %28461 = add i64 %28460, 20
  %28462 = load i64, i64* %PC.i890
  %28463 = add i64 %28462, 4
  store i64 %28463, i64* %PC.i890
  %28464 = inttoptr i64 %28461 to i32*
  %28465 = load i32, i32* %28464
  %28466 = zext i32 %28465 to i64
  store i64 %28466, i64* %28459, align 8
  store %struct.Memory* %loadMem_4abd5b, %struct.Memory** %MEMORY
  %loadMem_4abd5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %28467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28468 = getelementptr inbounds %struct.GPR, %struct.GPR* %28467, i32 0, i32 33
  %28469 = getelementptr inbounds %struct.Reg, %struct.Reg* %28468, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %28469 to i64*
  %28470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28471 = getelementptr inbounds %struct.GPR, %struct.GPR* %28470, i32 0, i32 17
  %28472 = getelementptr inbounds %struct.Reg, %struct.Reg* %28471, i32 0, i32 0
  %R8D.i889 = bitcast %union.anon* %28472 to i32*
  %28473 = bitcast i32* %R8D.i889 to i64*
  %28474 = load i32, i32* %R8D.i889
  %28475 = zext i32 %28474 to i64
  %28476 = load i64, i64* %PC.i888
  %28477 = add i64 %28476, 3
  store i64 %28477, i64* %PC.i888
  %28478 = shl i64 %28475, 32
  %28479 = ashr i64 %28478, 33
  %28480 = trunc i64 %28475 to i8
  %28481 = and i8 %28480, 1
  %28482 = trunc i64 %28479 to i32
  %28483 = and i64 %28479, 4294967295
  store i64 %28483, i64* %28473, align 8
  %28484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28481, i8* %28484, align 1
  %28485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %28486 = and i32 %28482, 255
  %28487 = call i32 @llvm.ctpop.i32(i32 %28486)
  %28488 = trunc i32 %28487 to i8
  %28489 = and i8 %28488, 1
  %28490 = xor i8 %28489, 1
  store i8 %28490, i8* %28485, align 1
  %28491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28491, align 1
  %28492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28493 = icmp eq i32 %28482, 0
  %28494 = zext i1 %28493 to i8
  store i8 %28494, i8* %28492, align 1
  %28495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %28496 = lshr i32 %28482, 31
  %28497 = trunc i32 %28496 to i8
  store i8 %28497, i8* %28495, align 1
  %28498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28498, align 1
  store %struct.Memory* %loadMem_4abd5f, %struct.Memory** %MEMORY
  %loadMem_4abd63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28500 = getelementptr inbounds %struct.GPR, %struct.GPR* %28499, i32 0, i32 33
  %28501 = getelementptr inbounds %struct.Reg, %struct.Reg* %28500, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %28501 to i64*
  %28502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28503 = getelementptr inbounds %struct.GPR, %struct.GPR* %28502, i32 0, i32 17
  %28504 = getelementptr inbounds %struct.Reg, %struct.Reg* %28503, i32 0, i32 0
  %R8D.i886 = bitcast %union.anon* %28504 to i32*
  %28505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28506 = getelementptr inbounds %struct.GPR, %struct.GPR* %28505, i32 0, i32 11
  %28507 = getelementptr inbounds %struct.Reg, %struct.Reg* %28506, i32 0, i32 0
  %RDI.i887 = bitcast %union.anon* %28507 to i64*
  %28508 = load i64, i64* %RDI.i887
  %28509 = load i32, i32* %R8D.i886
  %28510 = zext i32 %28509 to i64
  %28511 = load i64, i64* %PC.i885
  %28512 = add i64 %28511, 3
  store i64 %28512, i64* %PC.i885
  %28513 = trunc i64 %28508 to i32
  %28514 = add i32 %28509, %28513
  %28515 = zext i32 %28514 to i64
  store i64 %28515, i64* %RDI.i887, align 8
  %28516 = icmp ult i32 %28514, %28513
  %28517 = icmp ult i32 %28514, %28509
  %28518 = or i1 %28516, %28517
  %28519 = zext i1 %28518 to i8
  %28520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28519, i8* %28520, align 1
  %28521 = and i32 %28514, 255
  %28522 = call i32 @llvm.ctpop.i32(i32 %28521)
  %28523 = trunc i32 %28522 to i8
  %28524 = and i8 %28523, 1
  %28525 = xor i8 %28524, 1
  %28526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28525, i8* %28526, align 1
  %28527 = xor i64 %28510, %28508
  %28528 = trunc i64 %28527 to i32
  %28529 = xor i32 %28528, %28514
  %28530 = lshr i32 %28529, 4
  %28531 = trunc i32 %28530 to i8
  %28532 = and i8 %28531, 1
  %28533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28532, i8* %28533, align 1
  %28534 = icmp eq i32 %28514, 0
  %28535 = zext i1 %28534 to i8
  %28536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28535, i8* %28536, align 1
  %28537 = lshr i32 %28514, 31
  %28538 = trunc i32 %28537 to i8
  %28539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28538, i8* %28539, align 1
  %28540 = lshr i32 %28513, 31
  %28541 = lshr i32 %28509, 31
  %28542 = xor i32 %28537, %28540
  %28543 = xor i32 %28537, %28541
  %28544 = add i32 %28542, %28543
  %28545 = icmp eq i32 %28544, 2
  %28546 = zext i1 %28545 to i8
  %28547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28546, i8* %28547, align 1
  store %struct.Memory* %loadMem_4abd63, %struct.Memory** %MEMORY
  %loadMem_4abd66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28549 = getelementptr inbounds %struct.GPR, %struct.GPR* %28548, i32 0, i32 33
  %28550 = getelementptr inbounds %struct.Reg, %struct.Reg* %28549, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %28550 to i64*
  %28551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28552 = getelementptr inbounds %struct.GPR, %struct.GPR* %28551, i32 0, i32 11
  %28553 = getelementptr inbounds %struct.Reg, %struct.Reg* %28552, i32 0, i32 0
  %EDI.i883 = bitcast %union.anon* %28553 to i32*
  %28554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28555 = getelementptr inbounds %struct.GPR, %struct.GPR* %28554, i32 0, i32 15
  %28556 = getelementptr inbounds %struct.Reg, %struct.Reg* %28555, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %28556 to i64*
  %28557 = load i64, i64* %RBP.i884
  %28558 = sub i64 %28557, 620
  %28559 = load i32, i32* %EDI.i883
  %28560 = zext i32 %28559 to i64
  %28561 = load i64, i64* %PC.i882
  %28562 = add i64 %28561, 6
  store i64 %28562, i64* %PC.i882
  %28563 = inttoptr i64 %28558 to i32*
  store i32 %28559, i32* %28563
  store %struct.Memory* %loadMem_4abd66, %struct.Memory** %MEMORY
  %loadMem_4abd6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %28564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28565 = getelementptr inbounds %struct.GPR, %struct.GPR* %28564, i32 0, i32 33
  %28566 = getelementptr inbounds %struct.Reg, %struct.Reg* %28565, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %28566 to i64*
  %28567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28568 = getelementptr inbounds %struct.GPR, %struct.GPR* %28567, i32 0, i32 7
  %28569 = getelementptr inbounds %struct.Reg, %struct.Reg* %28568, i32 0, i32 0
  %RDX.i880 = bitcast %union.anon* %28569 to i64*
  %28570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28571 = getelementptr inbounds %struct.GPR, %struct.GPR* %28570, i32 0, i32 15
  %28572 = getelementptr inbounds %struct.Reg, %struct.Reg* %28571, i32 0, i32 0
  %RBP.i881 = bitcast %union.anon* %28572 to i64*
  %28573 = load i64, i64* %RBP.i881
  %28574 = sub i64 %28573, 24
  %28575 = load i64, i64* %PC.i879
  %28576 = add i64 %28575, 4
  store i64 %28576, i64* %PC.i879
  %28577 = inttoptr i64 %28574 to i32*
  %28578 = load i32, i32* %28577
  %28579 = sext i32 %28578 to i64
  store i64 %28579, i64* %RDX.i880, align 8
  store %struct.Memory* %loadMem_4abd6c, %struct.Memory** %MEMORY
  %loadMem_4abd70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28581 = getelementptr inbounds %struct.GPR, %struct.GPR* %28580, i32 0, i32 33
  %28582 = getelementptr inbounds %struct.Reg, %struct.Reg* %28581, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %28582 to i64*
  %28583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28584 = getelementptr inbounds %struct.GPR, %struct.GPR* %28583, i32 0, i32 7
  %28585 = getelementptr inbounds %struct.Reg, %struct.Reg* %28584, i32 0, i32 0
  %RDX.i878 = bitcast %union.anon* %28585 to i64*
  %28586 = load i64, i64* %RDX.i878
  %28587 = load i64, i64* %PC.i877
  %28588 = add i64 %28587, 4
  store i64 %28588, i64* %PC.i877
  %28589 = shl i64 %28586, 4
  %28590 = icmp slt i64 %28589, 0
  %28591 = shl i64 %28589, 1
  store i64 %28591, i64* %RDX.i878, align 8
  %28592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %28593 = zext i1 %28590 to i8
  store i8 %28593, i8* %28592, align 1
  %28594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %28595 = trunc i64 %28591 to i32
  %28596 = and i32 %28595, 254
  %28597 = call i32 @llvm.ctpop.i32(i32 %28596)
  %28598 = trunc i32 %28597 to i8
  %28599 = and i8 %28598, 1
  %28600 = xor i8 %28599, 1
  store i8 %28600, i8* %28594, align 1
  %28601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28601, align 1
  %28602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28603 = icmp eq i64 %28591, 0
  %28604 = zext i1 %28603 to i8
  store i8 %28604, i8* %28602, align 1
  %28605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %28606 = lshr i64 %28591, 63
  %28607 = trunc i64 %28606 to i8
  store i8 %28607, i8* %28605, align 1
  %28608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28608, align 1
  store %struct.Memory* %loadMem_4abd70, %struct.Memory** %MEMORY
  %loadMem_4abd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28610 = getelementptr inbounds %struct.GPR, %struct.GPR* %28609, i32 0, i32 33
  %28611 = getelementptr inbounds %struct.Reg, %struct.Reg* %28610, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %28611 to i64*
  %28612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28613 = getelementptr inbounds %struct.GPR, %struct.GPR* %28612, i32 0, i32 5
  %28614 = getelementptr inbounds %struct.Reg, %struct.Reg* %28613, i32 0, i32 0
  %RCX.i875 = bitcast %union.anon* %28614 to i64*
  %28615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28616 = getelementptr inbounds %struct.GPR, %struct.GPR* %28615, i32 0, i32 9
  %28617 = getelementptr inbounds %struct.Reg, %struct.Reg* %28616, i32 0, i32 0
  %RSI.i876 = bitcast %union.anon* %28617 to i64*
  %28618 = load i64, i64* %RCX.i875
  %28619 = load i64, i64* %PC.i874
  %28620 = add i64 %28619, 3
  store i64 %28620, i64* %PC.i874
  store i64 %28618, i64* %RSI.i876, align 8
  store %struct.Memory* %loadMem_4abd74, %struct.Memory** %MEMORY
  %loadMem_4abd77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28622 = getelementptr inbounds %struct.GPR, %struct.GPR* %28621, i32 0, i32 33
  %28623 = getelementptr inbounds %struct.Reg, %struct.Reg* %28622, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %28623 to i64*
  %28624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28625 = getelementptr inbounds %struct.GPR, %struct.GPR* %28624, i32 0, i32 7
  %28626 = getelementptr inbounds %struct.Reg, %struct.Reg* %28625, i32 0, i32 0
  %RDX.i872 = bitcast %union.anon* %28626 to i64*
  %28627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28628 = getelementptr inbounds %struct.GPR, %struct.GPR* %28627, i32 0, i32 9
  %28629 = getelementptr inbounds %struct.Reg, %struct.Reg* %28628, i32 0, i32 0
  %RSI.i873 = bitcast %union.anon* %28629 to i64*
  %28630 = load i64, i64* %RSI.i873
  %28631 = load i64, i64* %RDX.i872
  %28632 = load i64, i64* %PC.i871
  %28633 = add i64 %28632, 3
  store i64 %28633, i64* %PC.i871
  %28634 = add i64 %28631, %28630
  store i64 %28634, i64* %RSI.i873, align 8
  %28635 = icmp ult i64 %28634, %28630
  %28636 = icmp ult i64 %28634, %28631
  %28637 = or i1 %28635, %28636
  %28638 = zext i1 %28637 to i8
  %28639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28638, i8* %28639, align 1
  %28640 = trunc i64 %28634 to i32
  %28641 = and i32 %28640, 255
  %28642 = call i32 @llvm.ctpop.i32(i32 %28641)
  %28643 = trunc i32 %28642 to i8
  %28644 = and i8 %28643, 1
  %28645 = xor i8 %28644, 1
  %28646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28645, i8* %28646, align 1
  %28647 = xor i64 %28631, %28630
  %28648 = xor i64 %28647, %28634
  %28649 = lshr i64 %28648, 4
  %28650 = trunc i64 %28649 to i8
  %28651 = and i8 %28650, 1
  %28652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28651, i8* %28652, align 1
  %28653 = icmp eq i64 %28634, 0
  %28654 = zext i1 %28653 to i8
  %28655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28654, i8* %28655, align 1
  %28656 = lshr i64 %28634, 63
  %28657 = trunc i64 %28656 to i8
  %28658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28657, i8* %28658, align 1
  %28659 = lshr i64 %28630, 63
  %28660 = lshr i64 %28631, 63
  %28661 = xor i64 %28656, %28659
  %28662 = xor i64 %28656, %28660
  %28663 = add i64 %28661, %28662
  %28664 = icmp eq i64 %28663, 2
  %28665 = zext i1 %28664 to i8
  %28666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28665, i8* %28666, align 1
  store %struct.Memory* %loadMem_4abd77, %struct.Memory** %MEMORY
  %loadMem_4abd7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %28667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28668 = getelementptr inbounds %struct.GPR, %struct.GPR* %28667, i32 0, i32 33
  %28669 = getelementptr inbounds %struct.Reg, %struct.Reg* %28668, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %28669 to i64*
  %28670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28671 = getelementptr inbounds %struct.GPR, %struct.GPR* %28670, i32 0, i32 9
  %28672 = getelementptr inbounds %struct.Reg, %struct.Reg* %28671, i32 0, i32 0
  %RSI.i869 = bitcast %union.anon* %28672 to i64*
  %28673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28674 = getelementptr inbounds %struct.GPR, %struct.GPR* %28673, i32 0, i32 11
  %28675 = getelementptr inbounds %struct.Reg, %struct.Reg* %28674, i32 0, i32 0
  %RDI.i870 = bitcast %union.anon* %28675 to i64*
  %28676 = load i64, i64* %RSI.i869
  %28677 = add i64 %28676, 12
  %28678 = load i64, i64* %PC.i868
  %28679 = add i64 %28678, 3
  store i64 %28679, i64* %PC.i868
  %28680 = inttoptr i64 %28677 to i32*
  %28681 = load i32, i32* %28680
  %28682 = zext i32 %28681 to i64
  store i64 %28682, i64* %RDI.i870, align 8
  store %struct.Memory* %loadMem_4abd7a, %struct.Memory** %MEMORY
  %loadMem_4abd7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %28683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28684 = getelementptr inbounds %struct.GPR, %struct.GPR* %28683, i32 0, i32 33
  %28685 = getelementptr inbounds %struct.Reg, %struct.Reg* %28684, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %28685 to i64*
  %28686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28687 = getelementptr inbounds %struct.GPR, %struct.GPR* %28686, i32 0, i32 7
  %28688 = getelementptr inbounds %struct.Reg, %struct.Reg* %28687, i32 0, i32 0
  %RDX.i866 = bitcast %union.anon* %28688 to i64*
  %28689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28690 = getelementptr inbounds %struct.GPR, %struct.GPR* %28689, i32 0, i32 15
  %28691 = getelementptr inbounds %struct.Reg, %struct.Reg* %28690, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %28691 to i64*
  %28692 = load i64, i64* %RBP.i867
  %28693 = sub i64 %28692, 24
  %28694 = load i64, i64* %PC.i865
  %28695 = add i64 %28694, 4
  store i64 %28695, i64* %PC.i865
  %28696 = inttoptr i64 %28693 to i32*
  %28697 = load i32, i32* %28696
  %28698 = sext i32 %28697 to i64
  store i64 %28698, i64* %RDX.i866, align 8
  store %struct.Memory* %loadMem_4abd7d, %struct.Memory** %MEMORY
  %loadMem_4abd81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28700 = getelementptr inbounds %struct.GPR, %struct.GPR* %28699, i32 0, i32 33
  %28701 = getelementptr inbounds %struct.Reg, %struct.Reg* %28700, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %28701 to i64*
  %28702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28703 = getelementptr inbounds %struct.GPR, %struct.GPR* %28702, i32 0, i32 7
  %28704 = getelementptr inbounds %struct.Reg, %struct.Reg* %28703, i32 0, i32 0
  %RDX.i864 = bitcast %union.anon* %28704 to i64*
  %28705 = load i64, i64* %RDX.i864
  %28706 = load i64, i64* %PC.i863
  %28707 = add i64 %28706, 4
  store i64 %28707, i64* %PC.i863
  %28708 = shl i64 %28705, 4
  %28709 = icmp slt i64 %28708, 0
  %28710 = shl i64 %28708, 1
  store i64 %28710, i64* %RDX.i864, align 8
  %28711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %28712 = zext i1 %28709 to i8
  store i8 %28712, i8* %28711, align 1
  %28713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %28714 = trunc i64 %28710 to i32
  %28715 = and i32 %28714, 254
  %28716 = call i32 @llvm.ctpop.i32(i32 %28715)
  %28717 = trunc i32 %28716 to i8
  %28718 = and i8 %28717, 1
  %28719 = xor i8 %28718, 1
  store i8 %28719, i8* %28713, align 1
  %28720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28720, align 1
  %28721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28722 = icmp eq i64 %28710, 0
  %28723 = zext i1 %28722 to i8
  store i8 %28723, i8* %28721, align 1
  %28724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %28725 = lshr i64 %28710, 63
  %28726 = trunc i64 %28725 to i8
  store i8 %28726, i8* %28724, align 1
  %28727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28727, align 1
  store %struct.Memory* %loadMem_4abd81, %struct.Memory** %MEMORY
  %loadMem_4abd85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28729 = getelementptr inbounds %struct.GPR, %struct.GPR* %28728, i32 0, i32 33
  %28730 = getelementptr inbounds %struct.Reg, %struct.Reg* %28729, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %28730 to i64*
  %28731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28732 = getelementptr inbounds %struct.GPR, %struct.GPR* %28731, i32 0, i32 5
  %28733 = getelementptr inbounds %struct.Reg, %struct.Reg* %28732, i32 0, i32 0
  %RCX.i861 = bitcast %union.anon* %28733 to i64*
  %28734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28735 = getelementptr inbounds %struct.GPR, %struct.GPR* %28734, i32 0, i32 9
  %28736 = getelementptr inbounds %struct.Reg, %struct.Reg* %28735, i32 0, i32 0
  %RSI.i862 = bitcast %union.anon* %28736 to i64*
  %28737 = load i64, i64* %RCX.i861
  %28738 = load i64, i64* %PC.i860
  %28739 = add i64 %28738, 3
  store i64 %28739, i64* %PC.i860
  store i64 %28737, i64* %RSI.i862, align 8
  store %struct.Memory* %loadMem_4abd85, %struct.Memory** %MEMORY
  %loadMem_4abd88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28741 = getelementptr inbounds %struct.GPR, %struct.GPR* %28740, i32 0, i32 33
  %28742 = getelementptr inbounds %struct.Reg, %struct.Reg* %28741, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %28742 to i64*
  %28743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28744 = getelementptr inbounds %struct.GPR, %struct.GPR* %28743, i32 0, i32 7
  %28745 = getelementptr inbounds %struct.Reg, %struct.Reg* %28744, i32 0, i32 0
  %RDX.i858 = bitcast %union.anon* %28745 to i64*
  %28746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28747 = getelementptr inbounds %struct.GPR, %struct.GPR* %28746, i32 0, i32 9
  %28748 = getelementptr inbounds %struct.Reg, %struct.Reg* %28747, i32 0, i32 0
  %RSI.i859 = bitcast %union.anon* %28748 to i64*
  %28749 = load i64, i64* %RSI.i859
  %28750 = load i64, i64* %RDX.i858
  %28751 = load i64, i64* %PC.i857
  %28752 = add i64 %28751, 3
  store i64 %28752, i64* %PC.i857
  %28753 = add i64 %28750, %28749
  store i64 %28753, i64* %RSI.i859, align 8
  %28754 = icmp ult i64 %28753, %28749
  %28755 = icmp ult i64 %28753, %28750
  %28756 = or i1 %28754, %28755
  %28757 = zext i1 %28756 to i8
  %28758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28757, i8* %28758, align 1
  %28759 = trunc i64 %28753 to i32
  %28760 = and i32 %28759, 255
  %28761 = call i32 @llvm.ctpop.i32(i32 %28760)
  %28762 = trunc i32 %28761 to i8
  %28763 = and i8 %28762, 1
  %28764 = xor i8 %28763, 1
  %28765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28764, i8* %28765, align 1
  %28766 = xor i64 %28750, %28749
  %28767 = xor i64 %28766, %28753
  %28768 = lshr i64 %28767, 4
  %28769 = trunc i64 %28768 to i8
  %28770 = and i8 %28769, 1
  %28771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28770, i8* %28771, align 1
  %28772 = icmp eq i64 %28753, 0
  %28773 = zext i1 %28772 to i8
  %28774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28773, i8* %28774, align 1
  %28775 = lshr i64 %28753, 63
  %28776 = trunc i64 %28775 to i8
  %28777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28776, i8* %28777, align 1
  %28778 = lshr i64 %28749, 63
  %28779 = lshr i64 %28750, 63
  %28780 = xor i64 %28775, %28778
  %28781 = xor i64 %28775, %28779
  %28782 = add i64 %28780, %28781
  %28783 = icmp eq i64 %28782, 2
  %28784 = zext i1 %28783 to i8
  %28785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28784, i8* %28785, align 1
  store %struct.Memory* %loadMem_4abd88, %struct.Memory** %MEMORY
  %loadMem_4abd8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %28786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28787 = getelementptr inbounds %struct.GPR, %struct.GPR* %28786, i32 0, i32 33
  %28788 = getelementptr inbounds %struct.Reg, %struct.Reg* %28787, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %28788 to i64*
  %28789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28790 = getelementptr inbounds %struct.GPR, %struct.GPR* %28789, i32 0, i32 9
  %28791 = getelementptr inbounds %struct.Reg, %struct.Reg* %28790, i32 0, i32 0
  %RSI.i855 = bitcast %union.anon* %28791 to i64*
  %28792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28793 = getelementptr inbounds %struct.GPR, %struct.GPR* %28792, i32 0, i32 11
  %28794 = getelementptr inbounds %struct.Reg, %struct.Reg* %28793, i32 0, i32 0
  %RDI.i856 = bitcast %union.anon* %28794 to i64*
  %28795 = load i64, i64* %RDI.i856
  %28796 = load i64, i64* %RSI.i855
  %28797 = add i64 %28796, 20
  %28798 = load i64, i64* %PC.i854
  %28799 = add i64 %28798, 3
  store i64 %28799, i64* %PC.i854
  %28800 = trunc i64 %28795 to i32
  %28801 = inttoptr i64 %28797 to i32*
  %28802 = load i32, i32* %28801
  %28803 = add i32 %28802, %28800
  %28804 = zext i32 %28803 to i64
  store i64 %28804, i64* %RDI.i856, align 8
  %28805 = icmp ult i32 %28803, %28800
  %28806 = icmp ult i32 %28803, %28802
  %28807 = or i1 %28805, %28806
  %28808 = zext i1 %28807 to i8
  %28809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28808, i8* %28809, align 1
  %28810 = and i32 %28803, 255
  %28811 = call i32 @llvm.ctpop.i32(i32 %28810)
  %28812 = trunc i32 %28811 to i8
  %28813 = and i8 %28812, 1
  %28814 = xor i8 %28813, 1
  %28815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28814, i8* %28815, align 1
  %28816 = xor i32 %28802, %28800
  %28817 = xor i32 %28816, %28803
  %28818 = lshr i32 %28817, 4
  %28819 = trunc i32 %28818 to i8
  %28820 = and i8 %28819, 1
  %28821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28820, i8* %28821, align 1
  %28822 = icmp eq i32 %28803, 0
  %28823 = zext i1 %28822 to i8
  %28824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28823, i8* %28824, align 1
  %28825 = lshr i32 %28803, 31
  %28826 = trunc i32 %28825 to i8
  %28827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28826, i8* %28827, align 1
  %28828 = lshr i32 %28800, 31
  %28829 = lshr i32 %28802, 31
  %28830 = xor i32 %28825, %28828
  %28831 = xor i32 %28825, %28829
  %28832 = add i32 %28830, %28831
  %28833 = icmp eq i32 %28832, 2
  %28834 = zext i1 %28833 to i8
  %28835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28834, i8* %28835, align 1
  store %struct.Memory* %loadMem_4abd8b, %struct.Memory** %MEMORY
  %loadMem_4abd8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %28836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28837 = getelementptr inbounds %struct.GPR, %struct.GPR* %28836, i32 0, i32 33
  %28838 = getelementptr inbounds %struct.Reg, %struct.Reg* %28837, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %28838 to i64*
  %28839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28840 = getelementptr inbounds %struct.GPR, %struct.GPR* %28839, i32 0, i32 7
  %28841 = getelementptr inbounds %struct.Reg, %struct.Reg* %28840, i32 0, i32 0
  %RDX.i852 = bitcast %union.anon* %28841 to i64*
  %28842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28843 = getelementptr inbounds %struct.GPR, %struct.GPR* %28842, i32 0, i32 15
  %28844 = getelementptr inbounds %struct.Reg, %struct.Reg* %28843, i32 0, i32 0
  %RBP.i853 = bitcast %union.anon* %28844 to i64*
  %28845 = load i64, i64* %RBP.i853
  %28846 = sub i64 %28845, 24
  %28847 = load i64, i64* %PC.i851
  %28848 = add i64 %28847, 4
  store i64 %28848, i64* %PC.i851
  %28849 = inttoptr i64 %28846 to i32*
  %28850 = load i32, i32* %28849
  %28851 = sext i32 %28850 to i64
  store i64 %28851, i64* %RDX.i852, align 8
  store %struct.Memory* %loadMem_4abd8e, %struct.Memory** %MEMORY
  %loadMem_4abd92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28853 = getelementptr inbounds %struct.GPR, %struct.GPR* %28852, i32 0, i32 33
  %28854 = getelementptr inbounds %struct.Reg, %struct.Reg* %28853, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %28854 to i64*
  %28855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28856 = getelementptr inbounds %struct.GPR, %struct.GPR* %28855, i32 0, i32 7
  %28857 = getelementptr inbounds %struct.Reg, %struct.Reg* %28856, i32 0, i32 0
  %RDX.i850 = bitcast %union.anon* %28857 to i64*
  %28858 = load i64, i64* %RDX.i850
  %28859 = load i64, i64* %PC.i849
  %28860 = add i64 %28859, 4
  store i64 %28860, i64* %PC.i849
  %28861 = shl i64 %28858, 4
  %28862 = icmp slt i64 %28861, 0
  %28863 = shl i64 %28861, 1
  store i64 %28863, i64* %RDX.i850, align 8
  %28864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %28865 = zext i1 %28862 to i8
  store i8 %28865, i8* %28864, align 1
  %28866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %28867 = trunc i64 %28863 to i32
  %28868 = and i32 %28867, 254
  %28869 = call i32 @llvm.ctpop.i32(i32 %28868)
  %28870 = trunc i32 %28869 to i8
  %28871 = and i8 %28870, 1
  %28872 = xor i8 %28871, 1
  store i8 %28872, i8* %28866, align 1
  %28873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28873, align 1
  %28874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28875 = icmp eq i64 %28863, 0
  %28876 = zext i1 %28875 to i8
  store i8 %28876, i8* %28874, align 1
  %28877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %28878 = lshr i64 %28863, 63
  %28879 = trunc i64 %28878 to i8
  store i8 %28879, i8* %28877, align 1
  %28880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28880, align 1
  store %struct.Memory* %loadMem_4abd92, %struct.Memory** %MEMORY
  %loadMem_4abd96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28882 = getelementptr inbounds %struct.GPR, %struct.GPR* %28881, i32 0, i32 33
  %28883 = getelementptr inbounds %struct.Reg, %struct.Reg* %28882, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %28883 to i64*
  %28884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28885 = getelementptr inbounds %struct.GPR, %struct.GPR* %28884, i32 0, i32 5
  %28886 = getelementptr inbounds %struct.Reg, %struct.Reg* %28885, i32 0, i32 0
  %RCX.i847 = bitcast %union.anon* %28886 to i64*
  %28887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28888 = getelementptr inbounds %struct.GPR, %struct.GPR* %28887, i32 0, i32 9
  %28889 = getelementptr inbounds %struct.Reg, %struct.Reg* %28888, i32 0, i32 0
  %RSI.i848 = bitcast %union.anon* %28889 to i64*
  %28890 = load i64, i64* %RCX.i847
  %28891 = load i64, i64* %PC.i846
  %28892 = add i64 %28891, 3
  store i64 %28892, i64* %PC.i846
  store i64 %28890, i64* %RSI.i848, align 8
  store %struct.Memory* %loadMem_4abd96, %struct.Memory** %MEMORY
  %loadMem_4abd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28894 = getelementptr inbounds %struct.GPR, %struct.GPR* %28893, i32 0, i32 33
  %28895 = getelementptr inbounds %struct.Reg, %struct.Reg* %28894, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %28895 to i64*
  %28896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28897 = getelementptr inbounds %struct.GPR, %struct.GPR* %28896, i32 0, i32 7
  %28898 = getelementptr inbounds %struct.Reg, %struct.Reg* %28897, i32 0, i32 0
  %RDX.i844 = bitcast %union.anon* %28898 to i64*
  %28899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28900 = getelementptr inbounds %struct.GPR, %struct.GPR* %28899, i32 0, i32 9
  %28901 = getelementptr inbounds %struct.Reg, %struct.Reg* %28900, i32 0, i32 0
  %RSI.i845 = bitcast %union.anon* %28901 to i64*
  %28902 = load i64, i64* %RSI.i845
  %28903 = load i64, i64* %RDX.i844
  %28904 = load i64, i64* %PC.i843
  %28905 = add i64 %28904, 3
  store i64 %28905, i64* %PC.i843
  %28906 = add i64 %28903, %28902
  store i64 %28906, i64* %RSI.i845, align 8
  %28907 = icmp ult i64 %28906, %28902
  %28908 = icmp ult i64 %28906, %28903
  %28909 = or i1 %28907, %28908
  %28910 = zext i1 %28909 to i8
  %28911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28910, i8* %28911, align 1
  %28912 = trunc i64 %28906 to i32
  %28913 = and i32 %28912, 255
  %28914 = call i32 @llvm.ctpop.i32(i32 %28913)
  %28915 = trunc i32 %28914 to i8
  %28916 = and i8 %28915, 1
  %28917 = xor i8 %28916, 1
  %28918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28917, i8* %28918, align 1
  %28919 = xor i64 %28903, %28902
  %28920 = xor i64 %28919, %28906
  %28921 = lshr i64 %28920, 4
  %28922 = trunc i64 %28921 to i8
  %28923 = and i8 %28922, 1
  %28924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28923, i8* %28924, align 1
  %28925 = icmp eq i64 %28906, 0
  %28926 = zext i1 %28925 to i8
  %28927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28926, i8* %28927, align 1
  %28928 = lshr i64 %28906, 63
  %28929 = trunc i64 %28928 to i8
  %28930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28929, i8* %28930, align 1
  %28931 = lshr i64 %28902, 63
  %28932 = lshr i64 %28903, 63
  %28933 = xor i64 %28928, %28931
  %28934 = xor i64 %28928, %28932
  %28935 = add i64 %28933, %28934
  %28936 = icmp eq i64 %28935, 2
  %28937 = zext i1 %28936 to i8
  %28938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28937, i8* %28938, align 1
  store %struct.Memory* %loadMem_4abd99, %struct.Memory** %MEMORY
  %loadMem_4abd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %28939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28940 = getelementptr inbounds %struct.GPR, %struct.GPR* %28939, i32 0, i32 33
  %28941 = getelementptr inbounds %struct.Reg, %struct.Reg* %28940, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %28941 to i64*
  %28942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28943 = getelementptr inbounds %struct.GPR, %struct.GPR* %28942, i32 0, i32 9
  %28944 = getelementptr inbounds %struct.Reg, %struct.Reg* %28943, i32 0, i32 0
  %RSI.i841 = bitcast %union.anon* %28944 to i64*
  %28945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28946 = getelementptr inbounds %struct.GPR, %struct.GPR* %28945, i32 0, i32 11
  %28947 = getelementptr inbounds %struct.Reg, %struct.Reg* %28946, i32 0, i32 0
  %RDI.i842 = bitcast %union.anon* %28947 to i64*
  %28948 = load i64, i64* %RDI.i842
  %28949 = load i64, i64* %RSI.i841
  %28950 = add i64 %28949, 4
  %28951 = load i64, i64* %PC.i840
  %28952 = add i64 %28951, 3
  store i64 %28952, i64* %PC.i840
  %28953 = trunc i64 %28948 to i32
  %28954 = inttoptr i64 %28950 to i32*
  %28955 = load i32, i32* %28954
  %28956 = add i32 %28955, %28953
  %28957 = zext i32 %28956 to i64
  store i64 %28957, i64* %RDI.i842, align 8
  %28958 = icmp ult i32 %28956, %28953
  %28959 = icmp ult i32 %28956, %28955
  %28960 = or i1 %28958, %28959
  %28961 = zext i1 %28960 to i8
  %28962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28961, i8* %28962, align 1
  %28963 = and i32 %28956, 255
  %28964 = call i32 @llvm.ctpop.i32(i32 %28963)
  %28965 = trunc i32 %28964 to i8
  %28966 = and i8 %28965, 1
  %28967 = xor i8 %28966, 1
  %28968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28967, i8* %28968, align 1
  %28969 = xor i32 %28955, %28953
  %28970 = xor i32 %28969, %28956
  %28971 = lshr i32 %28970, 4
  %28972 = trunc i32 %28971 to i8
  %28973 = and i8 %28972, 1
  %28974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28973, i8* %28974, align 1
  %28975 = icmp eq i32 %28956, 0
  %28976 = zext i1 %28975 to i8
  %28977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28976, i8* %28977, align 1
  %28978 = lshr i32 %28956, 31
  %28979 = trunc i32 %28978 to i8
  %28980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28979, i8* %28980, align 1
  %28981 = lshr i32 %28953, 31
  %28982 = lshr i32 %28955, 31
  %28983 = xor i32 %28978, %28981
  %28984 = xor i32 %28978, %28982
  %28985 = add i32 %28983, %28984
  %28986 = icmp eq i32 %28985, 2
  %28987 = zext i1 %28986 to i8
  %28988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28987, i8* %28988, align 1
  store %struct.Memory* %loadMem_4abd9c, %struct.Memory** %MEMORY
  %loadMem_4abd9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %28989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28990 = getelementptr inbounds %struct.GPR, %struct.GPR* %28989, i32 0, i32 33
  %28991 = getelementptr inbounds %struct.Reg, %struct.Reg* %28990, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %28991 to i64*
  %28992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28993 = getelementptr inbounds %struct.GPR, %struct.GPR* %28992, i32 0, i32 7
  %28994 = getelementptr inbounds %struct.Reg, %struct.Reg* %28993, i32 0, i32 0
  %RDX.i838 = bitcast %union.anon* %28994 to i64*
  %28995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28996 = getelementptr inbounds %struct.GPR, %struct.GPR* %28995, i32 0, i32 15
  %28997 = getelementptr inbounds %struct.Reg, %struct.Reg* %28996, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %28997 to i64*
  %28998 = load i64, i64* %RBP.i839
  %28999 = sub i64 %28998, 24
  %29000 = load i64, i64* %PC.i837
  %29001 = add i64 %29000, 4
  store i64 %29001, i64* %PC.i837
  %29002 = inttoptr i64 %28999 to i32*
  %29003 = load i32, i32* %29002
  %29004 = sext i32 %29003 to i64
  store i64 %29004, i64* %RDX.i838, align 8
  store %struct.Memory* %loadMem_4abd9f, %struct.Memory** %MEMORY
  %loadMem_4abda3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29006 = getelementptr inbounds %struct.GPR, %struct.GPR* %29005, i32 0, i32 33
  %29007 = getelementptr inbounds %struct.Reg, %struct.Reg* %29006, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %29007 to i64*
  %29008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29009 = getelementptr inbounds %struct.GPR, %struct.GPR* %29008, i32 0, i32 7
  %29010 = getelementptr inbounds %struct.Reg, %struct.Reg* %29009, i32 0, i32 0
  %RDX.i836 = bitcast %union.anon* %29010 to i64*
  %29011 = load i64, i64* %RDX.i836
  %29012 = load i64, i64* %PC.i835
  %29013 = add i64 %29012, 4
  store i64 %29013, i64* %PC.i835
  %29014 = shl i64 %29011, 4
  %29015 = icmp slt i64 %29014, 0
  %29016 = shl i64 %29014, 1
  store i64 %29016, i64* %RDX.i836, align 8
  %29017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %29018 = zext i1 %29015 to i8
  store i8 %29018, i8* %29017, align 1
  %29019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %29020 = trunc i64 %29016 to i32
  %29021 = and i32 %29020, 254
  %29022 = call i32 @llvm.ctpop.i32(i32 %29021)
  %29023 = trunc i32 %29022 to i8
  %29024 = and i8 %29023, 1
  %29025 = xor i8 %29024, 1
  store i8 %29025, i8* %29019, align 1
  %29026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29026, align 1
  %29027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29028 = icmp eq i64 %29016, 0
  %29029 = zext i1 %29028 to i8
  store i8 %29029, i8* %29027, align 1
  %29030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29031 = lshr i64 %29016, 63
  %29032 = trunc i64 %29031 to i8
  store i8 %29032, i8* %29030, align 1
  %29033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29033, align 1
  store %struct.Memory* %loadMem_4abda3, %struct.Memory** %MEMORY
  %loadMem_4abda7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29035 = getelementptr inbounds %struct.GPR, %struct.GPR* %29034, i32 0, i32 33
  %29036 = getelementptr inbounds %struct.Reg, %struct.Reg* %29035, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %29036 to i64*
  %29037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29038 = getelementptr inbounds %struct.GPR, %struct.GPR* %29037, i32 0, i32 5
  %29039 = getelementptr inbounds %struct.Reg, %struct.Reg* %29038, i32 0, i32 0
  %RCX.i833 = bitcast %union.anon* %29039 to i64*
  %29040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29041 = getelementptr inbounds %struct.GPR, %struct.GPR* %29040, i32 0, i32 7
  %29042 = getelementptr inbounds %struct.Reg, %struct.Reg* %29041, i32 0, i32 0
  %RDX.i834 = bitcast %union.anon* %29042 to i64*
  %29043 = load i64, i64* %RCX.i833
  %29044 = load i64, i64* %RDX.i834
  %29045 = load i64, i64* %PC.i832
  %29046 = add i64 %29045, 3
  store i64 %29046, i64* %PC.i832
  %29047 = add i64 %29044, %29043
  store i64 %29047, i64* %RCX.i833, align 8
  %29048 = icmp ult i64 %29047, %29043
  %29049 = icmp ult i64 %29047, %29044
  %29050 = or i1 %29048, %29049
  %29051 = zext i1 %29050 to i8
  %29052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29051, i8* %29052, align 1
  %29053 = trunc i64 %29047 to i32
  %29054 = and i32 %29053, 255
  %29055 = call i32 @llvm.ctpop.i32(i32 %29054)
  %29056 = trunc i32 %29055 to i8
  %29057 = and i8 %29056, 1
  %29058 = xor i8 %29057, 1
  %29059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29058, i8* %29059, align 1
  %29060 = xor i64 %29044, %29043
  %29061 = xor i64 %29060, %29047
  %29062 = lshr i64 %29061, 4
  %29063 = trunc i64 %29062 to i8
  %29064 = and i8 %29063, 1
  %29065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29064, i8* %29065, align 1
  %29066 = icmp eq i64 %29047, 0
  %29067 = zext i1 %29066 to i8
  %29068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29067, i8* %29068, align 1
  %29069 = lshr i64 %29047, 63
  %29070 = trunc i64 %29069 to i8
  %29071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29070, i8* %29071, align 1
  %29072 = lshr i64 %29043, 63
  %29073 = lshr i64 %29044, 63
  %29074 = xor i64 %29069, %29072
  %29075 = xor i64 %29069, %29073
  %29076 = add i64 %29074, %29075
  %29077 = icmp eq i64 %29076, 2
  %29078 = zext i1 %29077 to i8
  %29079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29078, i8* %29079, align 1
  store %struct.Memory* %loadMem_4abda7, %struct.Memory** %MEMORY
  %loadMem_4abdaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %29080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29081 = getelementptr inbounds %struct.GPR, %struct.GPR* %29080, i32 0, i32 33
  %29082 = getelementptr inbounds %struct.Reg, %struct.Reg* %29081, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %29082 to i64*
  %29083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29084 = getelementptr inbounds %struct.GPR, %struct.GPR* %29083, i32 0, i32 17
  %29085 = getelementptr inbounds %struct.Reg, %struct.Reg* %29084, i32 0, i32 0
  %R8D.i830 = bitcast %union.anon* %29085 to i32*
  %29086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29087 = getelementptr inbounds %struct.GPR, %struct.GPR* %29086, i32 0, i32 5
  %29088 = getelementptr inbounds %struct.Reg, %struct.Reg* %29087, i32 0, i32 0
  %RCX.i831 = bitcast %union.anon* %29088 to i64*
  %29089 = bitcast i32* %R8D.i830 to i64*
  %29090 = load i64, i64* %RCX.i831
  %29091 = add i64 %29090, 4
  %29092 = load i64, i64* %PC.i829
  %29093 = add i64 %29092, 4
  store i64 %29093, i64* %PC.i829
  %29094 = inttoptr i64 %29091 to i32*
  %29095 = load i32, i32* %29094
  %29096 = zext i32 %29095 to i64
  store i64 %29096, i64* %29089, align 8
  store %struct.Memory* %loadMem_4abdaa, %struct.Memory** %MEMORY
  %loadMem_4abdae = load %struct.Memory*, %struct.Memory** %MEMORY
  %29097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29098 = getelementptr inbounds %struct.GPR, %struct.GPR* %29097, i32 0, i32 33
  %29099 = getelementptr inbounds %struct.Reg, %struct.Reg* %29098, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %29099 to i64*
  %29100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29101 = getelementptr inbounds %struct.GPR, %struct.GPR* %29100, i32 0, i32 17
  %29102 = getelementptr inbounds %struct.Reg, %struct.Reg* %29101, i32 0, i32 0
  %R8D.i828 = bitcast %union.anon* %29102 to i32*
  %29103 = bitcast i32* %R8D.i828 to i64*
  %29104 = load i32, i32* %R8D.i828
  %29105 = zext i32 %29104 to i64
  %29106 = load i64, i64* %PC.i827
  %29107 = add i64 %29106, 3
  store i64 %29107, i64* %PC.i827
  %29108 = shl i64 %29105, 32
  %29109 = ashr i64 %29108, 33
  %29110 = trunc i64 %29105 to i8
  %29111 = and i8 %29110, 1
  %29112 = trunc i64 %29109 to i32
  %29113 = and i64 %29109, 4294967295
  store i64 %29113, i64* %29103, align 8
  %29114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29111, i8* %29114, align 1
  %29115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %29116 = and i32 %29112, 255
  %29117 = call i32 @llvm.ctpop.i32(i32 %29116)
  %29118 = trunc i32 %29117 to i8
  %29119 = and i8 %29118, 1
  %29120 = xor i8 %29119, 1
  store i8 %29120, i8* %29115, align 1
  %29121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29121, align 1
  %29122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29123 = icmp eq i32 %29112, 0
  %29124 = zext i1 %29123 to i8
  store i8 %29124, i8* %29122, align 1
  %29125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29126 = lshr i32 %29112, 31
  %29127 = trunc i32 %29126 to i8
  store i8 %29127, i8* %29125, align 1
  %29128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29128, align 1
  store %struct.Memory* %loadMem_4abdae, %struct.Memory** %MEMORY
  %loadMem_4abdb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29130 = getelementptr inbounds %struct.GPR, %struct.GPR* %29129, i32 0, i32 33
  %29131 = getelementptr inbounds %struct.Reg, %struct.Reg* %29130, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %29131 to i64*
  %29132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29133 = getelementptr inbounds %struct.GPR, %struct.GPR* %29132, i32 0, i32 17
  %29134 = getelementptr inbounds %struct.Reg, %struct.Reg* %29133, i32 0, i32 0
  %R8D.i825 = bitcast %union.anon* %29134 to i32*
  %29135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29136 = getelementptr inbounds %struct.GPR, %struct.GPR* %29135, i32 0, i32 11
  %29137 = getelementptr inbounds %struct.Reg, %struct.Reg* %29136, i32 0, i32 0
  %RDI.i826 = bitcast %union.anon* %29137 to i64*
  %29138 = load i64, i64* %RDI.i826
  %29139 = load i32, i32* %R8D.i825
  %29140 = zext i32 %29139 to i64
  %29141 = load i64, i64* %PC.i824
  %29142 = add i64 %29141, 3
  store i64 %29142, i64* %PC.i824
  %29143 = trunc i64 %29138 to i32
  %29144 = add i32 %29139, %29143
  %29145 = zext i32 %29144 to i64
  store i64 %29145, i64* %RDI.i826, align 8
  %29146 = icmp ult i32 %29144, %29143
  %29147 = icmp ult i32 %29144, %29139
  %29148 = or i1 %29146, %29147
  %29149 = zext i1 %29148 to i8
  %29150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29149, i8* %29150, align 1
  %29151 = and i32 %29144, 255
  %29152 = call i32 @llvm.ctpop.i32(i32 %29151)
  %29153 = trunc i32 %29152 to i8
  %29154 = and i8 %29153, 1
  %29155 = xor i8 %29154, 1
  %29156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29155, i8* %29156, align 1
  %29157 = xor i64 %29140, %29138
  %29158 = trunc i64 %29157 to i32
  %29159 = xor i32 %29158, %29144
  %29160 = lshr i32 %29159, 4
  %29161 = trunc i32 %29160 to i8
  %29162 = and i8 %29161, 1
  %29163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29162, i8* %29163, align 1
  %29164 = icmp eq i32 %29144, 0
  %29165 = zext i1 %29164 to i8
  %29166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29165, i8* %29166, align 1
  %29167 = lshr i32 %29144, 31
  %29168 = trunc i32 %29167 to i8
  %29169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29168, i8* %29169, align 1
  %29170 = lshr i32 %29143, 31
  %29171 = lshr i32 %29139, 31
  %29172 = xor i32 %29167, %29170
  %29173 = xor i32 %29167, %29171
  %29174 = add i32 %29172, %29173
  %29175 = icmp eq i32 %29174, 2
  %29176 = zext i1 %29175 to i8
  %29177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29176, i8* %29177, align 1
  store %struct.Memory* %loadMem_4abdb2, %struct.Memory** %MEMORY
  %loadMem_4abdb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29179 = getelementptr inbounds %struct.GPR, %struct.GPR* %29178, i32 0, i32 33
  %29180 = getelementptr inbounds %struct.Reg, %struct.Reg* %29179, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %29180 to i64*
  %29181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29182 = getelementptr inbounds %struct.GPR, %struct.GPR* %29181, i32 0, i32 11
  %29183 = getelementptr inbounds %struct.Reg, %struct.Reg* %29182, i32 0, i32 0
  %EDI.i822 = bitcast %union.anon* %29183 to i32*
  %29184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29185 = getelementptr inbounds %struct.GPR, %struct.GPR* %29184, i32 0, i32 15
  %29186 = getelementptr inbounds %struct.Reg, %struct.Reg* %29185, i32 0, i32 0
  %RBP.i823 = bitcast %union.anon* %29186 to i64*
  %29187 = load i64, i64* %RBP.i823
  %29188 = sub i64 %29187, 612
  %29189 = load i32, i32* %EDI.i822
  %29190 = zext i32 %29189 to i64
  %29191 = load i64, i64* %PC.i821
  %29192 = add i64 %29191, 6
  store i64 %29192, i64* %PC.i821
  %29193 = inttoptr i64 %29188 to i32*
  store i32 %29189, i32* %29193
  store %struct.Memory* %loadMem_4abdb5, %struct.Memory** %MEMORY
  %loadMem_4abdbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %29194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29195 = getelementptr inbounds %struct.GPR, %struct.GPR* %29194, i32 0, i32 33
  %29196 = getelementptr inbounds %struct.Reg, %struct.Reg* %29195, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %29196 to i64*
  %29197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29198 = getelementptr inbounds %struct.GPR, %struct.GPR* %29197, i32 0, i32 11
  %29199 = getelementptr inbounds %struct.Reg, %struct.Reg* %29198, i32 0, i32 0
  %RDI.i819 = bitcast %union.anon* %29199 to i64*
  %29200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29201 = getelementptr inbounds %struct.GPR, %struct.GPR* %29200, i32 0, i32 15
  %29202 = getelementptr inbounds %struct.Reg, %struct.Reg* %29201, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %29202 to i64*
  %29203 = load i64, i64* %RBP.i820
  %29204 = sub i64 %29203, 636
  %29205 = load i64, i64* %PC.i818
  %29206 = add i64 %29205, 6
  store i64 %29206, i64* %PC.i818
  %29207 = inttoptr i64 %29204 to i32*
  %29208 = load i32, i32* %29207
  %29209 = zext i32 %29208 to i64
  store i64 %29209, i64* %RDI.i819, align 8
  store %struct.Memory* %loadMem_4abdbb, %struct.Memory** %MEMORY
  %loadMem_4abdc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29211 = getelementptr inbounds %struct.GPR, %struct.GPR* %29210, i32 0, i32 33
  %29212 = getelementptr inbounds %struct.Reg, %struct.Reg* %29211, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %29212 to i64*
  %29213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29214 = getelementptr inbounds %struct.GPR, %struct.GPR* %29213, i32 0, i32 17
  %29215 = getelementptr inbounds %struct.Reg, %struct.Reg* %29214, i32 0, i32 0
  %R8D.i816 = bitcast %union.anon* %29215 to i32*
  %29216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29217 = getelementptr inbounds %struct.GPR, %struct.GPR* %29216, i32 0, i32 15
  %29218 = getelementptr inbounds %struct.Reg, %struct.Reg* %29217, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %29218 to i64*
  %29219 = bitcast i32* %R8D.i816 to i64*
  %29220 = load i64, i64* %RBP.i817
  %29221 = sub i64 %29220, 612
  %29222 = load i64, i64* %PC.i815
  %29223 = add i64 %29222, 7
  store i64 %29223, i64* %PC.i815
  %29224 = inttoptr i64 %29221 to i32*
  %29225 = load i32, i32* %29224
  %29226 = zext i32 %29225 to i64
  store i64 %29226, i64* %29219, align 8
  store %struct.Memory* %loadMem_4abdc1, %struct.Memory** %MEMORY
  %loadMem_4abdc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29228 = getelementptr inbounds %struct.GPR, %struct.GPR* %29227, i32 0, i32 33
  %29229 = getelementptr inbounds %struct.Reg, %struct.Reg* %29228, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %29229 to i64*
  %29230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29231 = getelementptr inbounds %struct.GPR, %struct.GPR* %29230, i32 0, i32 17
  %29232 = getelementptr inbounds %struct.Reg, %struct.Reg* %29231, i32 0, i32 0
  %R8D.i814 = bitcast %union.anon* %29232 to i32*
  %29233 = bitcast i32* %R8D.i814 to i64*
  %29234 = load i32, i32* %R8D.i814
  %29235 = zext i32 %29234 to i64
  %29236 = load i64, i64* %PC.i813
  %29237 = add i64 %29236, 4
  store i64 %29237, i64* %PC.i813
  %29238 = shl i64 %29235, 32
  %29239 = ashr exact i64 %29238, 32
  %29240 = ashr i64 %29239, 1
  %29241 = lshr i64 %29240, 1
  %29242 = trunc i64 %29240 to i8
  %29243 = and i8 %29242, 1
  %29244 = trunc i64 %29241 to i32
  %29245 = and i64 %29241, 4294967295
  store i64 %29245, i64* %29233, align 8
  %29246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29243, i8* %29246, align 1
  %29247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %29248 = and i32 %29244, 255
  %29249 = call i32 @llvm.ctpop.i32(i32 %29248)
  %29250 = trunc i32 %29249 to i8
  %29251 = and i8 %29250, 1
  %29252 = xor i8 %29251, 1
  store i8 %29252, i8* %29247, align 1
  %29253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29253, align 1
  %29254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29255 = icmp eq i32 %29244, 0
  %29256 = zext i1 %29255 to i8
  store i8 %29256, i8* %29254, align 1
  %29257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29258 = lshr i32 %29244, 31
  %29259 = trunc i32 %29258 to i8
  store i8 %29259, i8* %29257, align 1
  %29260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29260, align 1
  store %struct.Memory* %loadMem_4abdc8, %struct.Memory** %MEMORY
  %loadMem_4abdcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %29261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29262 = getelementptr inbounds %struct.GPR, %struct.GPR* %29261, i32 0, i32 33
  %29263 = getelementptr inbounds %struct.Reg, %struct.Reg* %29262, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %29263 to i64*
  %29264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29265 = getelementptr inbounds %struct.GPR, %struct.GPR* %29264, i32 0, i32 17
  %29266 = getelementptr inbounds %struct.Reg, %struct.Reg* %29265, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %29266 to i32*
  %29267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29268 = getelementptr inbounds %struct.GPR, %struct.GPR* %29267, i32 0, i32 11
  %29269 = getelementptr inbounds %struct.Reg, %struct.Reg* %29268, i32 0, i32 0
  %RDI.i812 = bitcast %union.anon* %29269 to i64*
  %29270 = load i64, i64* %RDI.i812
  %29271 = load i32, i32* %R8D.i
  %29272 = zext i32 %29271 to i64
  %29273 = load i64, i64* %PC.i811
  %29274 = add i64 %29273, 3
  store i64 %29274, i64* %PC.i811
  %29275 = trunc i64 %29270 to i32
  %29276 = add i32 %29271, %29275
  %29277 = zext i32 %29276 to i64
  store i64 %29277, i64* %RDI.i812, align 8
  %29278 = icmp ult i32 %29276, %29275
  %29279 = icmp ult i32 %29276, %29271
  %29280 = or i1 %29278, %29279
  %29281 = zext i1 %29280 to i8
  %29282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29281, i8* %29282, align 1
  %29283 = and i32 %29276, 255
  %29284 = call i32 @llvm.ctpop.i32(i32 %29283)
  %29285 = trunc i32 %29284 to i8
  %29286 = and i8 %29285, 1
  %29287 = xor i8 %29286, 1
  %29288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29287, i8* %29288, align 1
  %29289 = xor i64 %29272, %29270
  %29290 = trunc i64 %29289 to i32
  %29291 = xor i32 %29290, %29276
  %29292 = lshr i32 %29291, 4
  %29293 = trunc i32 %29292 to i8
  %29294 = and i8 %29293, 1
  %29295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29294, i8* %29295, align 1
  %29296 = icmp eq i32 %29276, 0
  %29297 = zext i1 %29296 to i8
  %29298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29297, i8* %29298, align 1
  %29299 = lshr i32 %29276, 31
  %29300 = trunc i32 %29299 to i8
  %29301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29300, i8* %29301, align 1
  %29302 = lshr i32 %29275, 31
  %29303 = lshr i32 %29271, 31
  %29304 = xor i32 %29299, %29302
  %29305 = xor i32 %29299, %29303
  %29306 = add i32 %29304, %29305
  %29307 = icmp eq i32 %29306, 2
  %29308 = zext i1 %29307 to i8
  %29309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29308, i8* %29309, align 1
  store %struct.Memory* %loadMem_4abdcc, %struct.Memory** %MEMORY
  %loadMem_4abdcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %29310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29311 = getelementptr inbounds %struct.GPR, %struct.GPR* %29310, i32 0, i32 33
  %29312 = getelementptr inbounds %struct.Reg, %struct.Reg* %29311, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %29312 to i64*
  %29313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29314 = getelementptr inbounds %struct.GPR, %struct.GPR* %29313, i32 0, i32 11
  %29315 = getelementptr inbounds %struct.Reg, %struct.Reg* %29314, i32 0, i32 0
  %EDI.i809 = bitcast %union.anon* %29315 to i32*
  %29316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29317 = getelementptr inbounds %struct.GPR, %struct.GPR* %29316, i32 0, i32 15
  %29318 = getelementptr inbounds %struct.Reg, %struct.Reg* %29317, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %29318 to i64*
  %29319 = load i64, i64* %RBP.i810
  %29320 = sub i64 %29319, 668
  %29321 = load i32, i32* %EDI.i809
  %29322 = zext i32 %29321 to i64
  %29323 = load i64, i64* %PC.i808
  %29324 = add i64 %29323, 6
  store i64 %29324, i64* %PC.i808
  %29325 = inttoptr i64 %29320 to i32*
  store i32 %29321, i32* %29325
  store %struct.Memory* %loadMem_4abdcf, %struct.Memory** %MEMORY
  %loadMem_4abdd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29327 = getelementptr inbounds %struct.GPR, %struct.GPR* %29326, i32 0, i32 33
  %29328 = getelementptr inbounds %struct.Reg, %struct.Reg* %29327, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %29328 to i64*
  %29329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29330 = getelementptr inbounds %struct.GPR, %struct.GPR* %29329, i32 0, i32 11
  %29331 = getelementptr inbounds %struct.Reg, %struct.Reg* %29330, i32 0, i32 0
  %RDI.i806 = bitcast %union.anon* %29331 to i64*
  %29332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29333 = getelementptr inbounds %struct.GPR, %struct.GPR* %29332, i32 0, i32 15
  %29334 = getelementptr inbounds %struct.Reg, %struct.Reg* %29333, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %29334 to i64*
  %29335 = load i64, i64* %RBP.i807
  %29336 = sub i64 %29335, 636
  %29337 = load i64, i64* %PC.i805
  %29338 = add i64 %29337, 6
  store i64 %29338, i64* %PC.i805
  %29339 = inttoptr i64 %29336 to i32*
  %29340 = load i32, i32* %29339
  %29341 = zext i32 %29340 to i64
  store i64 %29341, i64* %RDI.i806, align 8
  store %struct.Memory* %loadMem_4abdd5, %struct.Memory** %MEMORY
  %loadMem_4abddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %29342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29343 = getelementptr inbounds %struct.GPR, %struct.GPR* %29342, i32 0, i32 33
  %29344 = getelementptr inbounds %struct.Reg, %struct.Reg* %29343, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %29344 to i64*
  %29345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29346 = getelementptr inbounds %struct.GPR, %struct.GPR* %29345, i32 0, i32 11
  %29347 = getelementptr inbounds %struct.Reg, %struct.Reg* %29346, i32 0, i32 0
  %RDI.i804 = bitcast %union.anon* %29347 to i64*
  %29348 = load i64, i64* %RDI.i804
  %29349 = load i64, i64* %PC.i803
  %29350 = add i64 %29349, 3
  store i64 %29350, i64* %PC.i803
  %29351 = shl i64 %29348, 32
  %29352 = ashr exact i64 %29351, 32
  %29353 = ashr i64 %29352, 1
  %29354 = lshr i64 %29353, 1
  %29355 = trunc i64 %29353 to i8
  %29356 = and i8 %29355, 1
  %29357 = trunc i64 %29354 to i32
  %29358 = and i64 %29354, 4294967295
  store i64 %29358, i64* %RDI.i804, align 8
  %29359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29356, i8* %29359, align 1
  %29360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %29361 = and i32 %29357, 255
  %29362 = call i32 @llvm.ctpop.i32(i32 %29361)
  %29363 = trunc i32 %29362 to i8
  %29364 = and i8 %29363, 1
  %29365 = xor i8 %29364, 1
  store i8 %29365, i8* %29360, align 1
  %29366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29366, align 1
  %29367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29368 = icmp eq i32 %29357, 0
  %29369 = zext i1 %29368 to i8
  store i8 %29369, i8* %29367, align 1
  %29370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29371 = lshr i32 %29357, 31
  %29372 = trunc i32 %29371 to i8
  store i8 %29372, i8* %29370, align 1
  %29373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29373, align 1
  store %struct.Memory* %loadMem_4abddb, %struct.Memory** %MEMORY
  %loadMem_4abdde = load %struct.Memory*, %struct.Memory** %MEMORY
  %29374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29375 = getelementptr inbounds %struct.GPR, %struct.GPR* %29374, i32 0, i32 33
  %29376 = getelementptr inbounds %struct.Reg, %struct.Reg* %29375, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %29376 to i64*
  %29377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29378 = getelementptr inbounds %struct.GPR, %struct.GPR* %29377, i32 0, i32 11
  %29379 = getelementptr inbounds %struct.Reg, %struct.Reg* %29378, i32 0, i32 0
  %EDI.i801 = bitcast %union.anon* %29379 to i32*
  %29380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29381 = getelementptr inbounds %struct.GPR, %struct.GPR* %29380, i32 0, i32 1
  %29382 = getelementptr inbounds %struct.Reg, %struct.Reg* %29381, i32 0, i32 0
  %RAX.i802 = bitcast %union.anon* %29382 to i64*
  %29383 = load i64, i64* %RAX.i802
  %29384 = load i32, i32* %EDI.i801
  %29385 = zext i32 %29384 to i64
  %29386 = load i64, i64* %PC.i800
  %29387 = add i64 %29386, 2
  store i64 %29387, i64* %PC.i800
  %29388 = trunc i64 %29383 to i32
  %29389 = sub i32 %29388, %29384
  %29390 = zext i32 %29389 to i64
  store i64 %29390, i64* %RAX.i802, align 8
  %29391 = icmp ult i32 %29388, %29384
  %29392 = zext i1 %29391 to i8
  %29393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29392, i8* %29393, align 1
  %29394 = and i32 %29389, 255
  %29395 = call i32 @llvm.ctpop.i32(i32 %29394)
  %29396 = trunc i32 %29395 to i8
  %29397 = and i8 %29396, 1
  %29398 = xor i8 %29397, 1
  %29399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29398, i8* %29399, align 1
  %29400 = xor i64 %29385, %29383
  %29401 = trunc i64 %29400 to i32
  %29402 = xor i32 %29401, %29389
  %29403 = lshr i32 %29402, 4
  %29404 = trunc i32 %29403 to i8
  %29405 = and i8 %29404, 1
  %29406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29405, i8* %29406, align 1
  %29407 = icmp eq i32 %29389, 0
  %29408 = zext i1 %29407 to i8
  %29409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29408, i8* %29409, align 1
  %29410 = lshr i32 %29389, 31
  %29411 = trunc i32 %29410 to i8
  %29412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29411, i8* %29412, align 1
  %29413 = lshr i32 %29388, 31
  %29414 = lshr i32 %29384, 31
  %29415 = xor i32 %29414, %29413
  %29416 = xor i32 %29410, %29413
  %29417 = add i32 %29416, %29415
  %29418 = icmp eq i32 %29417, 2
  %29419 = zext i1 %29418 to i8
  %29420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29419, i8* %29420, align 1
  store %struct.Memory* %loadMem_4abdde, %struct.Memory** %MEMORY
  %loadMem_4abde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29422 = getelementptr inbounds %struct.GPR, %struct.GPR* %29421, i32 0, i32 33
  %29423 = getelementptr inbounds %struct.Reg, %struct.Reg* %29422, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %29423 to i64*
  %29424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29425 = getelementptr inbounds %struct.GPR, %struct.GPR* %29424, i32 0, i32 1
  %29426 = getelementptr inbounds %struct.Reg, %struct.Reg* %29425, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %29426 to i64*
  %29427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29428 = getelementptr inbounds %struct.GPR, %struct.GPR* %29427, i32 0, i32 15
  %29429 = getelementptr inbounds %struct.Reg, %struct.Reg* %29428, i32 0, i32 0
  %RBP.i799 = bitcast %union.anon* %29429 to i64*
  %29430 = load i64, i64* %RAX.i798
  %29431 = load i64, i64* %RBP.i799
  %29432 = sub i64 %29431, 612
  %29433 = load i64, i64* %PC.i797
  %29434 = add i64 %29433, 6
  store i64 %29434, i64* %PC.i797
  %29435 = trunc i64 %29430 to i32
  %29436 = inttoptr i64 %29432 to i32*
  %29437 = load i32, i32* %29436
  %29438 = add i32 %29437, %29435
  %29439 = zext i32 %29438 to i64
  store i64 %29439, i64* %RAX.i798, align 8
  %29440 = icmp ult i32 %29438, %29435
  %29441 = icmp ult i32 %29438, %29437
  %29442 = or i1 %29440, %29441
  %29443 = zext i1 %29442 to i8
  %29444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29443, i8* %29444, align 1
  %29445 = and i32 %29438, 255
  %29446 = call i32 @llvm.ctpop.i32(i32 %29445)
  %29447 = trunc i32 %29446 to i8
  %29448 = and i8 %29447, 1
  %29449 = xor i8 %29448, 1
  %29450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29449, i8* %29450, align 1
  %29451 = xor i32 %29437, %29435
  %29452 = xor i32 %29451, %29438
  %29453 = lshr i32 %29452, 4
  %29454 = trunc i32 %29453 to i8
  %29455 = and i8 %29454, 1
  %29456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29455, i8* %29456, align 1
  %29457 = icmp eq i32 %29438, 0
  %29458 = zext i1 %29457 to i8
  %29459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29458, i8* %29459, align 1
  %29460 = lshr i32 %29438, 31
  %29461 = trunc i32 %29460 to i8
  %29462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29461, i8* %29462, align 1
  %29463 = lshr i32 %29435, 31
  %29464 = lshr i32 %29437, 31
  %29465 = xor i32 %29460, %29463
  %29466 = xor i32 %29460, %29464
  %29467 = add i32 %29465, %29466
  %29468 = icmp eq i32 %29467, 2
  %29469 = zext i1 %29468 to i8
  %29470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29469, i8* %29470, align 1
  store %struct.Memory* %loadMem_4abde0, %struct.Memory** %MEMORY
  %loadMem_4abde6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29472 = getelementptr inbounds %struct.GPR, %struct.GPR* %29471, i32 0, i32 33
  %29473 = getelementptr inbounds %struct.Reg, %struct.Reg* %29472, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %29473 to i64*
  %29474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29475 = getelementptr inbounds %struct.GPR, %struct.GPR* %29474, i32 0, i32 1
  %29476 = getelementptr inbounds %struct.Reg, %struct.Reg* %29475, i32 0, i32 0
  %EAX.i795 = bitcast %union.anon* %29476 to i32*
  %29477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29478 = getelementptr inbounds %struct.GPR, %struct.GPR* %29477, i32 0, i32 15
  %29479 = getelementptr inbounds %struct.Reg, %struct.Reg* %29478, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %29479 to i64*
  %29480 = load i64, i64* %RBP.i796
  %29481 = sub i64 %29480, 644
  %29482 = load i32, i32* %EAX.i795
  %29483 = zext i32 %29482 to i64
  %29484 = load i64, i64* %PC.i794
  %29485 = add i64 %29484, 6
  store i64 %29485, i64* %PC.i794
  %29486 = inttoptr i64 %29481 to i32*
  store i32 %29482, i32* %29486
  store %struct.Memory* %loadMem_4abde6, %struct.Memory** %MEMORY
  %loadMem_4abdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %29487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29488 = getelementptr inbounds %struct.GPR, %struct.GPR* %29487, i32 0, i32 33
  %29489 = getelementptr inbounds %struct.Reg, %struct.Reg* %29488, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %29489 to i64*
  %29490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29491 = getelementptr inbounds %struct.GPR, %struct.GPR* %29490, i32 0, i32 1
  %29492 = getelementptr inbounds %struct.Reg, %struct.Reg* %29491, i32 0, i32 0
  %RAX.i792 = bitcast %union.anon* %29492 to i64*
  %29493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29494 = getelementptr inbounds %struct.GPR, %struct.GPR* %29493, i32 0, i32 15
  %29495 = getelementptr inbounds %struct.Reg, %struct.Reg* %29494, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %29495 to i64*
  %29496 = load i64, i64* %RBP.i793
  %29497 = sub i64 %29496, 628
  %29498 = load i64, i64* %PC.i791
  %29499 = add i64 %29498, 6
  store i64 %29499, i64* %PC.i791
  %29500 = inttoptr i64 %29497 to i32*
  %29501 = load i32, i32* %29500
  %29502 = zext i32 %29501 to i64
  store i64 %29502, i64* %RAX.i792, align 8
  store %struct.Memory* %loadMem_4abdec, %struct.Memory** %MEMORY
  %loadMem_4abdf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29504 = getelementptr inbounds %struct.GPR, %struct.GPR* %29503, i32 0, i32 33
  %29505 = getelementptr inbounds %struct.Reg, %struct.Reg* %29504, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %29505 to i64*
  %29506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29507 = getelementptr inbounds %struct.GPR, %struct.GPR* %29506, i32 0, i32 11
  %29508 = getelementptr inbounds %struct.Reg, %struct.Reg* %29507, i32 0, i32 0
  %RDI.i789 = bitcast %union.anon* %29508 to i64*
  %29509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29510 = getelementptr inbounds %struct.GPR, %struct.GPR* %29509, i32 0, i32 15
  %29511 = getelementptr inbounds %struct.Reg, %struct.Reg* %29510, i32 0, i32 0
  %RBP.i790 = bitcast %union.anon* %29511 to i64*
  %29512 = load i64, i64* %RBP.i790
  %29513 = sub i64 %29512, 620
  %29514 = load i64, i64* %PC.i788
  %29515 = add i64 %29514, 6
  store i64 %29515, i64* %PC.i788
  %29516 = inttoptr i64 %29513 to i32*
  %29517 = load i32, i32* %29516
  %29518 = zext i32 %29517 to i64
  store i64 %29518, i64* %RDI.i789, align 8
  store %struct.Memory* %loadMem_4abdf2, %struct.Memory** %MEMORY
  %loadMem_4abdf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29520 = getelementptr inbounds %struct.GPR, %struct.GPR* %29519, i32 0, i32 33
  %29521 = getelementptr inbounds %struct.Reg, %struct.Reg* %29520, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %29521 to i64*
  %29522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29523 = getelementptr inbounds %struct.GPR, %struct.GPR* %29522, i32 0, i32 11
  %29524 = getelementptr inbounds %struct.Reg, %struct.Reg* %29523, i32 0, i32 0
  %RDI.i787 = bitcast %union.anon* %29524 to i64*
  %29525 = load i64, i64* %RDI.i787
  %29526 = load i64, i64* %PC.i786
  %29527 = add i64 %29526, 3
  store i64 %29527, i64* %PC.i786
  %29528 = shl i64 %29525, 32
  %29529 = ashr exact i64 %29528, 32
  %29530 = ashr i64 %29529, 1
  %29531 = lshr i64 %29530, 1
  %29532 = trunc i64 %29530 to i8
  %29533 = and i8 %29532, 1
  %29534 = trunc i64 %29531 to i32
  %29535 = and i64 %29531, 4294967295
  store i64 %29535, i64* %RDI.i787, align 8
  %29536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29533, i8* %29536, align 1
  %29537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %29538 = and i32 %29534, 255
  %29539 = call i32 @llvm.ctpop.i32(i32 %29538)
  %29540 = trunc i32 %29539 to i8
  %29541 = and i8 %29540, 1
  %29542 = xor i8 %29541, 1
  store i8 %29542, i8* %29537, align 1
  %29543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29543, align 1
  %29544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29545 = icmp eq i32 %29534, 0
  %29546 = zext i1 %29545 to i8
  store i8 %29546, i8* %29544, align 1
  %29547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29548 = lshr i32 %29534, 31
  %29549 = trunc i32 %29548 to i8
  store i8 %29549, i8* %29547, align 1
  %29550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29550, align 1
  store %struct.Memory* %loadMem_4abdf8, %struct.Memory** %MEMORY
  %loadMem_4abdfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %29551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29552 = getelementptr inbounds %struct.GPR, %struct.GPR* %29551, i32 0, i32 33
  %29553 = getelementptr inbounds %struct.Reg, %struct.Reg* %29552, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %29553 to i64*
  %29554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29555 = getelementptr inbounds %struct.GPR, %struct.GPR* %29554, i32 0, i32 11
  %29556 = getelementptr inbounds %struct.Reg, %struct.Reg* %29555, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %29556 to i32*
  %29557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29558 = getelementptr inbounds %struct.GPR, %struct.GPR* %29557, i32 0, i32 1
  %29559 = getelementptr inbounds %struct.Reg, %struct.Reg* %29558, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %29559 to i64*
  %29560 = load i64, i64* %RAX.i785
  %29561 = load i32, i32* %EDI.i
  %29562 = zext i32 %29561 to i64
  %29563 = load i64, i64* %PC.i784
  %29564 = add i64 %29563, 2
  store i64 %29564, i64* %PC.i784
  %29565 = trunc i64 %29560 to i32
  %29566 = add i32 %29561, %29565
  %29567 = zext i32 %29566 to i64
  store i64 %29567, i64* %RAX.i785, align 8
  %29568 = icmp ult i32 %29566, %29565
  %29569 = icmp ult i32 %29566, %29561
  %29570 = or i1 %29568, %29569
  %29571 = zext i1 %29570 to i8
  %29572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29571, i8* %29572, align 1
  %29573 = and i32 %29566, 255
  %29574 = call i32 @llvm.ctpop.i32(i32 %29573)
  %29575 = trunc i32 %29574 to i8
  %29576 = and i8 %29575, 1
  %29577 = xor i8 %29576, 1
  %29578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29577, i8* %29578, align 1
  %29579 = xor i64 %29562, %29560
  %29580 = trunc i64 %29579 to i32
  %29581 = xor i32 %29580, %29566
  %29582 = lshr i32 %29581, 4
  %29583 = trunc i32 %29582 to i8
  %29584 = and i8 %29583, 1
  %29585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29584, i8* %29585, align 1
  %29586 = icmp eq i32 %29566, 0
  %29587 = zext i1 %29586 to i8
  %29588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29587, i8* %29588, align 1
  %29589 = lshr i32 %29566, 31
  %29590 = trunc i32 %29589 to i8
  %29591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29590, i8* %29591, align 1
  %29592 = lshr i32 %29565, 31
  %29593 = lshr i32 %29561, 31
  %29594 = xor i32 %29589, %29592
  %29595 = xor i32 %29589, %29593
  %29596 = add i32 %29594, %29595
  %29597 = icmp eq i32 %29596, 2
  %29598 = zext i1 %29597 to i8
  %29599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29598, i8* %29599, align 1
  store %struct.Memory* %loadMem_4abdfb, %struct.Memory** %MEMORY
  %loadMem_4abdfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %29600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29601 = getelementptr inbounds %struct.GPR, %struct.GPR* %29600, i32 0, i32 33
  %29602 = getelementptr inbounds %struct.Reg, %struct.Reg* %29601, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %29602 to i64*
  %29603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29604 = getelementptr inbounds %struct.GPR, %struct.GPR* %29603, i32 0, i32 1
  %29605 = getelementptr inbounds %struct.Reg, %struct.Reg* %29604, i32 0, i32 0
  %EAX.i782 = bitcast %union.anon* %29605 to i32*
  %29606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29607 = getelementptr inbounds %struct.GPR, %struct.GPR* %29606, i32 0, i32 15
  %29608 = getelementptr inbounds %struct.Reg, %struct.Reg* %29607, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %29608 to i64*
  %29609 = load i64, i64* %RBP.i783
  %29610 = sub i64 %29609, 660
  %29611 = load i32, i32* %EAX.i782
  %29612 = zext i32 %29611 to i64
  %29613 = load i64, i64* %PC.i781
  %29614 = add i64 %29613, 6
  store i64 %29614, i64* %PC.i781
  %29615 = inttoptr i64 %29610 to i32*
  store i32 %29611, i32* %29615
  store %struct.Memory* %loadMem_4abdfd, %struct.Memory** %MEMORY
  %loadMem_4abe03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29617 = getelementptr inbounds %struct.GPR, %struct.GPR* %29616, i32 0, i32 33
  %29618 = getelementptr inbounds %struct.Reg, %struct.Reg* %29617, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %29618 to i64*
  %29619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29620 = getelementptr inbounds %struct.GPR, %struct.GPR* %29619, i32 0, i32 1
  %29621 = getelementptr inbounds %struct.Reg, %struct.Reg* %29620, i32 0, i32 0
  %RAX.i779 = bitcast %union.anon* %29621 to i64*
  %29622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29623 = getelementptr inbounds %struct.GPR, %struct.GPR* %29622, i32 0, i32 15
  %29624 = getelementptr inbounds %struct.Reg, %struct.Reg* %29623, i32 0, i32 0
  %RBP.i780 = bitcast %union.anon* %29624 to i64*
  %29625 = load i64, i64* %RBP.i780
  %29626 = sub i64 %29625, 628
  %29627 = load i64, i64* %PC.i778
  %29628 = add i64 %29627, 6
  store i64 %29628, i64* %PC.i778
  %29629 = inttoptr i64 %29626 to i32*
  %29630 = load i32, i32* %29629
  %29631 = zext i32 %29630 to i64
  store i64 %29631, i64* %RAX.i779, align 8
  store %struct.Memory* %loadMem_4abe03, %struct.Memory** %MEMORY
  %loadMem_4abe09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29633 = getelementptr inbounds %struct.GPR, %struct.GPR* %29632, i32 0, i32 33
  %29634 = getelementptr inbounds %struct.Reg, %struct.Reg* %29633, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %29634 to i64*
  %29635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29636 = getelementptr inbounds %struct.GPR, %struct.GPR* %29635, i32 0, i32 1
  %29637 = getelementptr inbounds %struct.Reg, %struct.Reg* %29636, i32 0, i32 0
  %RAX.i777 = bitcast %union.anon* %29637 to i64*
  %29638 = load i64, i64* %RAX.i777
  %29639 = load i64, i64* %PC.i776
  %29640 = add i64 %29639, 3
  store i64 %29640, i64* %PC.i776
  %29641 = shl i64 %29638, 32
  %29642 = ashr exact i64 %29641, 32
  %29643 = ashr i64 %29642, 1
  %29644 = lshr i64 %29643, 1
  %29645 = trunc i64 %29643 to i8
  %29646 = and i8 %29645, 1
  %29647 = trunc i64 %29644 to i32
  %29648 = and i64 %29644, 4294967295
  store i64 %29648, i64* %RAX.i777, align 8
  %29649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29646, i8* %29649, align 1
  %29650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %29651 = and i32 %29647, 255
  %29652 = call i32 @llvm.ctpop.i32(i32 %29651)
  %29653 = trunc i32 %29652 to i8
  %29654 = and i8 %29653, 1
  %29655 = xor i8 %29654, 1
  store i8 %29655, i8* %29650, align 1
  %29656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29656, align 1
  %29657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29658 = icmp eq i32 %29647, 0
  %29659 = zext i1 %29658 to i8
  store i8 %29659, i8* %29657, align 1
  %29660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29661 = lshr i32 %29647, 31
  %29662 = trunc i32 %29661 to i8
  store i8 %29662, i8* %29660, align 1
  %29663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29663, align 1
  store %struct.Memory* %loadMem_4abe09, %struct.Memory** %MEMORY
  %loadMem_4abe0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %29664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29665 = getelementptr inbounds %struct.GPR, %struct.GPR* %29664, i32 0, i32 33
  %29666 = getelementptr inbounds %struct.Reg, %struct.Reg* %29665, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %29666 to i64*
  %29667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29668 = getelementptr inbounds %struct.GPR, %struct.GPR* %29667, i32 0, i32 1
  %29669 = getelementptr inbounds %struct.Reg, %struct.Reg* %29668, i32 0, i32 0
  %RAX.i774 = bitcast %union.anon* %29669 to i64*
  %29670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29671 = getelementptr inbounds %struct.GPR, %struct.GPR* %29670, i32 0, i32 15
  %29672 = getelementptr inbounds %struct.Reg, %struct.Reg* %29671, i32 0, i32 0
  %RBP.i775 = bitcast %union.anon* %29672 to i64*
  %29673 = load i64, i64* %RAX.i774
  %29674 = load i64, i64* %RBP.i775
  %29675 = sub i64 %29674, 620
  %29676 = load i64, i64* %PC.i773
  %29677 = add i64 %29676, 6
  store i64 %29677, i64* %PC.i773
  %29678 = trunc i64 %29673 to i32
  %29679 = inttoptr i64 %29675 to i32*
  %29680 = load i32, i32* %29679
  %29681 = sub i32 %29678, %29680
  %29682 = zext i32 %29681 to i64
  store i64 %29682, i64* %RAX.i774, align 8
  %29683 = icmp ult i32 %29678, %29680
  %29684 = zext i1 %29683 to i8
  %29685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29684, i8* %29685, align 1
  %29686 = and i32 %29681, 255
  %29687 = call i32 @llvm.ctpop.i32(i32 %29686)
  %29688 = trunc i32 %29687 to i8
  %29689 = and i8 %29688, 1
  %29690 = xor i8 %29689, 1
  %29691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29690, i8* %29691, align 1
  %29692 = xor i32 %29680, %29678
  %29693 = xor i32 %29692, %29681
  %29694 = lshr i32 %29693, 4
  %29695 = trunc i32 %29694 to i8
  %29696 = and i8 %29695, 1
  %29697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29696, i8* %29697, align 1
  %29698 = icmp eq i32 %29681, 0
  %29699 = zext i1 %29698 to i8
  %29700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29699, i8* %29700, align 1
  %29701 = lshr i32 %29681, 31
  %29702 = trunc i32 %29701 to i8
  %29703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29702, i8* %29703, align 1
  %29704 = lshr i32 %29678, 31
  %29705 = lshr i32 %29680, 31
  %29706 = xor i32 %29705, %29704
  %29707 = xor i32 %29701, %29704
  %29708 = add i32 %29707, %29706
  %29709 = icmp eq i32 %29708, 2
  %29710 = zext i1 %29709 to i8
  %29711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29710, i8* %29711, align 1
  store %struct.Memory* %loadMem_4abe0c, %struct.Memory** %MEMORY
  %loadMem_4abe12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29713 = getelementptr inbounds %struct.GPR, %struct.GPR* %29712, i32 0, i32 33
  %29714 = getelementptr inbounds %struct.Reg, %struct.Reg* %29713, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %29714 to i64*
  %29715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29716 = getelementptr inbounds %struct.GPR, %struct.GPR* %29715, i32 0, i32 1
  %29717 = getelementptr inbounds %struct.Reg, %struct.Reg* %29716, i32 0, i32 0
  %EAX.i771 = bitcast %union.anon* %29717 to i32*
  %29718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29719 = getelementptr inbounds %struct.GPR, %struct.GPR* %29718, i32 0, i32 15
  %29720 = getelementptr inbounds %struct.Reg, %struct.Reg* %29719, i32 0, i32 0
  %RBP.i772 = bitcast %union.anon* %29720 to i64*
  %29721 = load i64, i64* %RBP.i772
  %29722 = sub i64 %29721, 652
  %29723 = load i32, i32* %EAX.i771
  %29724 = zext i32 %29723 to i64
  %29725 = load i64, i64* %PC.i770
  %29726 = add i64 %29725, 6
  store i64 %29726, i64* %PC.i770
  %29727 = inttoptr i64 %29722 to i32*
  store i32 %29723, i32* %29727
  store %struct.Memory* %loadMem_4abe12, %struct.Memory** %MEMORY
  %loadMem_4abe18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29729 = getelementptr inbounds %struct.GPR, %struct.GPR* %29728, i32 0, i32 33
  %29730 = getelementptr inbounds %struct.Reg, %struct.Reg* %29729, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %29730 to i64*
  %29731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29732 = getelementptr inbounds %struct.GPR, %struct.GPR* %29731, i32 0, i32 1
  %29733 = getelementptr inbounds %struct.Reg, %struct.Reg* %29732, i32 0, i32 0
  %RAX.i768 = bitcast %union.anon* %29733 to i64*
  %29734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29735 = getelementptr inbounds %struct.GPR, %struct.GPR* %29734, i32 0, i32 15
  %29736 = getelementptr inbounds %struct.Reg, %struct.Reg* %29735, i32 0, i32 0
  %RBP.i769 = bitcast %union.anon* %29736 to i64*
  %29737 = load i64, i64* %RBP.i769
  %29738 = sub i64 %29737, 672
  %29739 = load i64, i64* %PC.i767
  %29740 = add i64 %29739, 6
  store i64 %29740, i64* %PC.i767
  %29741 = inttoptr i64 %29738 to i32*
  %29742 = load i32, i32* %29741
  %29743 = zext i32 %29742 to i64
  store i64 %29743, i64* %RAX.i768, align 8
  store %struct.Memory* %loadMem_4abe18, %struct.Memory** %MEMORY
  %loadMem_4abe1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %29744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29745 = getelementptr inbounds %struct.GPR, %struct.GPR* %29744, i32 0, i32 33
  %29746 = getelementptr inbounds %struct.Reg, %struct.Reg* %29745, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %29746 to i64*
  %29747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29748 = getelementptr inbounds %struct.GPR, %struct.GPR* %29747, i32 0, i32 1
  %29749 = getelementptr inbounds %struct.Reg, %struct.Reg* %29748, i32 0, i32 0
  %RAX.i765 = bitcast %union.anon* %29749 to i64*
  %29750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29751 = getelementptr inbounds %struct.GPR, %struct.GPR* %29750, i32 0, i32 15
  %29752 = getelementptr inbounds %struct.Reg, %struct.Reg* %29751, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %29752 to i64*
  %29753 = load i64, i64* %RAX.i765
  %29754 = load i64, i64* %RBP.i766
  %29755 = sub i64 %29754, 644
  %29756 = load i64, i64* %PC.i764
  %29757 = add i64 %29756, 6
  store i64 %29757, i64* %PC.i764
  %29758 = trunc i64 %29753 to i32
  %29759 = inttoptr i64 %29755 to i32*
  %29760 = load i32, i32* %29759
  %29761 = add i32 %29760, %29758
  %29762 = zext i32 %29761 to i64
  store i64 %29762, i64* %RAX.i765, align 8
  %29763 = icmp ult i32 %29761, %29758
  %29764 = icmp ult i32 %29761, %29760
  %29765 = or i1 %29763, %29764
  %29766 = zext i1 %29765 to i8
  %29767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29766, i8* %29767, align 1
  %29768 = and i32 %29761, 255
  %29769 = call i32 @llvm.ctpop.i32(i32 %29768)
  %29770 = trunc i32 %29769 to i8
  %29771 = and i8 %29770, 1
  %29772 = xor i8 %29771, 1
  %29773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29772, i8* %29773, align 1
  %29774 = xor i32 %29760, %29758
  %29775 = xor i32 %29774, %29761
  %29776 = lshr i32 %29775, 4
  %29777 = trunc i32 %29776 to i8
  %29778 = and i8 %29777, 1
  %29779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29778, i8* %29779, align 1
  %29780 = icmp eq i32 %29761, 0
  %29781 = zext i1 %29780 to i8
  %29782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29781, i8* %29782, align 1
  %29783 = lshr i32 %29761, 31
  %29784 = trunc i32 %29783 to i8
  %29785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29784, i8* %29785, align 1
  %29786 = lshr i32 %29758, 31
  %29787 = lshr i32 %29760, 31
  %29788 = xor i32 %29783, %29786
  %29789 = xor i32 %29783, %29787
  %29790 = add i32 %29788, %29789
  %29791 = icmp eq i32 %29790, 2
  %29792 = zext i1 %29791 to i8
  %29793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29792, i8* %29793, align 1
  store %struct.Memory* %loadMem_4abe1e, %struct.Memory** %MEMORY
  %loadMem_4abe24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29795 = getelementptr inbounds %struct.GPR, %struct.GPR* %29794, i32 0, i32 33
  %29796 = getelementptr inbounds %struct.Reg, %struct.Reg* %29795, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %29796 to i64*
  %29797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29798 = getelementptr inbounds %struct.GPR, %struct.GPR* %29797, i32 0, i32 5
  %29799 = getelementptr inbounds %struct.Reg, %struct.Reg* %29798, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %29799 to i64*
  %29800 = load i64, i64* %PC.i762
  %29801 = add i64 %29800, 8
  store i64 %29801, i64* %PC.i762
  %29802 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %29802, i64* %RCX.i763, align 8
  store %struct.Memory* %loadMem_4abe24, %struct.Memory** %MEMORY
  %loadMem_4abe2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %29803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29804 = getelementptr inbounds %struct.GPR, %struct.GPR* %29803, i32 0, i32 33
  %29805 = getelementptr inbounds %struct.Reg, %struct.Reg* %29804, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %29805 to i64*
  %29806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29807 = getelementptr inbounds %struct.GPR, %struct.GPR* %29806, i32 0, i32 5
  %29808 = getelementptr inbounds %struct.Reg, %struct.Reg* %29807, i32 0, i32 0
  %RCX.i761 = bitcast %union.anon* %29808 to i64*
  %29809 = load i64, i64* %RCX.i761
  %29810 = load i64, i64* %PC.i760
  %29811 = add i64 %29810, 7
  store i64 %29811, i64* %PC.i760
  %29812 = add i64 13112, %29809
  store i64 %29812, i64* %RCX.i761, align 8
  %29813 = icmp ult i64 %29812, %29809
  %29814 = icmp ult i64 %29812, 13112
  %29815 = or i1 %29813, %29814
  %29816 = zext i1 %29815 to i8
  %29817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29816, i8* %29817, align 1
  %29818 = trunc i64 %29812 to i32
  %29819 = and i32 %29818, 255
  %29820 = call i32 @llvm.ctpop.i32(i32 %29819)
  %29821 = trunc i32 %29820 to i8
  %29822 = and i8 %29821, 1
  %29823 = xor i8 %29822, 1
  %29824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29823, i8* %29824, align 1
  %29825 = xor i64 13112, %29809
  %29826 = xor i64 %29825, %29812
  %29827 = lshr i64 %29826, 4
  %29828 = trunc i64 %29827 to i8
  %29829 = and i8 %29828, 1
  %29830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29829, i8* %29830, align 1
  %29831 = icmp eq i64 %29812, 0
  %29832 = zext i1 %29831 to i8
  %29833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29832, i8* %29833, align 1
  %29834 = lshr i64 %29812, 63
  %29835 = trunc i64 %29834 to i8
  %29836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29835, i8* %29836, align 1
  %29837 = lshr i64 %29809, 63
  %29838 = xor i64 %29834, %29837
  %29839 = add i64 %29838, %29834
  %29840 = icmp eq i64 %29839, 2
  %29841 = zext i1 %29840 to i8
  %29842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29841, i8* %29842, align 1
  store %struct.Memory* %loadMem_4abe2c, %struct.Memory** %MEMORY
  %loadMem_4abe33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29844 = getelementptr inbounds %struct.GPR, %struct.GPR* %29843, i32 0, i32 33
  %29845 = getelementptr inbounds %struct.Reg, %struct.Reg* %29844, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %29845 to i64*
  %29846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29847 = getelementptr inbounds %struct.GPR, %struct.GPR* %29846, i32 0, i32 7
  %29848 = getelementptr inbounds %struct.Reg, %struct.Reg* %29847, i32 0, i32 0
  %RDX.i758 = bitcast %union.anon* %29848 to i64*
  %29849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29850 = getelementptr inbounds %struct.GPR, %struct.GPR* %29849, i32 0, i32 15
  %29851 = getelementptr inbounds %struct.Reg, %struct.Reg* %29850, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %29851 to i64*
  %29852 = load i64, i64* %RBP.i759
  %29853 = sub i64 %29852, 24
  %29854 = load i64, i64* %PC.i757
  %29855 = add i64 %29854, 4
  store i64 %29855, i64* %PC.i757
  %29856 = inttoptr i64 %29853 to i32*
  %29857 = load i32, i32* %29856
  %29858 = sext i32 %29857 to i64
  store i64 %29858, i64* %RDX.i758, align 8
  store %struct.Memory* %loadMem_4abe33, %struct.Memory** %MEMORY
  %loadMem_4abe37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29860 = getelementptr inbounds %struct.GPR, %struct.GPR* %29859, i32 0, i32 33
  %29861 = getelementptr inbounds %struct.Reg, %struct.Reg* %29860, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %29861 to i64*
  %29862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29863 = getelementptr inbounds %struct.GPR, %struct.GPR* %29862, i32 0, i32 7
  %29864 = getelementptr inbounds %struct.Reg, %struct.Reg* %29863, i32 0, i32 0
  %RDX.i756 = bitcast %union.anon* %29864 to i64*
  %29865 = load i64, i64* %RDX.i756
  %29866 = load i64, i64* %PC.i755
  %29867 = add i64 %29866, 4
  store i64 %29867, i64* %PC.i755
  %29868 = shl i64 %29865, 5
  %29869 = icmp slt i64 %29868, 0
  %29870 = shl i64 %29868, 1
  store i64 %29870, i64* %RDX.i756, align 8
  %29871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %29872 = zext i1 %29869 to i8
  store i8 %29872, i8* %29871, align 1
  %29873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %29874 = trunc i64 %29870 to i32
  %29875 = and i32 %29874, 254
  %29876 = call i32 @llvm.ctpop.i32(i32 %29875)
  %29877 = trunc i32 %29876 to i8
  %29878 = and i8 %29877, 1
  %29879 = xor i8 %29878, 1
  store i8 %29879, i8* %29873, align 1
  %29880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29880, align 1
  %29881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29882 = icmp eq i64 %29870, 0
  %29883 = zext i1 %29882 to i8
  store i8 %29883, i8* %29881, align 1
  %29884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29885 = lshr i64 %29870, 63
  %29886 = trunc i64 %29885 to i8
  store i8 %29886, i8* %29884, align 1
  %29887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29887, align 1
  store %struct.Memory* %loadMem_4abe37, %struct.Memory** %MEMORY
  %loadMem_4abe3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %29888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29889 = getelementptr inbounds %struct.GPR, %struct.GPR* %29888, i32 0, i32 33
  %29890 = getelementptr inbounds %struct.Reg, %struct.Reg* %29889, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %29890 to i64*
  %29891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29892 = getelementptr inbounds %struct.GPR, %struct.GPR* %29891, i32 0, i32 5
  %29893 = getelementptr inbounds %struct.Reg, %struct.Reg* %29892, i32 0, i32 0
  %RCX.i753 = bitcast %union.anon* %29893 to i64*
  %29894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29895 = getelementptr inbounds %struct.GPR, %struct.GPR* %29894, i32 0, i32 7
  %29896 = getelementptr inbounds %struct.Reg, %struct.Reg* %29895, i32 0, i32 0
  %RDX.i754 = bitcast %union.anon* %29896 to i64*
  %29897 = load i64, i64* %RCX.i753
  %29898 = load i64, i64* %RDX.i754
  %29899 = load i64, i64* %PC.i752
  %29900 = add i64 %29899, 3
  store i64 %29900, i64* %PC.i752
  %29901 = add i64 %29898, %29897
  store i64 %29901, i64* %RCX.i753, align 8
  %29902 = icmp ult i64 %29901, %29897
  %29903 = icmp ult i64 %29901, %29898
  %29904 = or i1 %29902, %29903
  %29905 = zext i1 %29904 to i8
  %29906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29905, i8* %29906, align 1
  %29907 = trunc i64 %29901 to i32
  %29908 = and i32 %29907, 255
  %29909 = call i32 @llvm.ctpop.i32(i32 %29908)
  %29910 = trunc i32 %29909 to i8
  %29911 = and i8 %29910, 1
  %29912 = xor i8 %29911, 1
  %29913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29912, i8* %29913, align 1
  %29914 = xor i64 %29898, %29897
  %29915 = xor i64 %29914, %29901
  %29916 = lshr i64 %29915, 4
  %29917 = trunc i64 %29916 to i8
  %29918 = and i8 %29917, 1
  %29919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29918, i8* %29919, align 1
  %29920 = icmp eq i64 %29901, 0
  %29921 = zext i1 %29920 to i8
  %29922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29921, i8* %29922, align 1
  %29923 = lshr i64 %29901, 63
  %29924 = trunc i64 %29923 to i8
  %29925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29924, i8* %29925, align 1
  %29926 = lshr i64 %29897, 63
  %29927 = lshr i64 %29898, 63
  %29928 = xor i64 %29923, %29926
  %29929 = xor i64 %29923, %29927
  %29930 = add i64 %29928, %29929
  %29931 = icmp eq i64 %29930, 2
  %29932 = zext i1 %29931 to i8
  %29933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29932, i8* %29933, align 1
  store %struct.Memory* %loadMem_4abe3b, %struct.Memory** %MEMORY
  %loadMem_4abe3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %29934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29935 = getelementptr inbounds %struct.GPR, %struct.GPR* %29934, i32 0, i32 33
  %29936 = getelementptr inbounds %struct.Reg, %struct.Reg* %29935, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %29936 to i64*
  %29937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29938 = getelementptr inbounds %struct.GPR, %struct.GPR* %29937, i32 0, i32 1
  %29939 = getelementptr inbounds %struct.Reg, %struct.Reg* %29938, i32 0, i32 0
  %EAX.i750 = bitcast %union.anon* %29939 to i32*
  %29940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29941 = getelementptr inbounds %struct.GPR, %struct.GPR* %29940, i32 0, i32 5
  %29942 = getelementptr inbounds %struct.Reg, %struct.Reg* %29941, i32 0, i32 0
  %RCX.i751 = bitcast %union.anon* %29942 to i64*
  %29943 = load i64, i64* %RCX.i751
  %29944 = load i32, i32* %EAX.i750
  %29945 = zext i32 %29944 to i64
  %29946 = load i64, i64* %PC.i749
  %29947 = add i64 %29946, 2
  store i64 %29947, i64* %PC.i749
  %29948 = inttoptr i64 %29943 to i32*
  store i32 %29944, i32* %29948
  store %struct.Memory* %loadMem_4abe3e, %struct.Memory** %MEMORY
  %loadMem_4abe40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29950 = getelementptr inbounds %struct.GPR, %struct.GPR* %29949, i32 0, i32 33
  %29951 = getelementptr inbounds %struct.Reg, %struct.Reg* %29950, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %29951 to i64*
  %29952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29953 = getelementptr inbounds %struct.GPR, %struct.GPR* %29952, i32 0, i32 1
  %29954 = getelementptr inbounds %struct.Reg, %struct.Reg* %29953, i32 0, i32 0
  %RAX.i747 = bitcast %union.anon* %29954 to i64*
  %29955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29956 = getelementptr inbounds %struct.GPR, %struct.GPR* %29955, i32 0, i32 15
  %29957 = getelementptr inbounds %struct.Reg, %struct.Reg* %29956, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %29957 to i64*
  %29958 = load i64, i64* %RBP.i748
  %29959 = sub i64 %29958, 664
  %29960 = load i64, i64* %PC.i746
  %29961 = add i64 %29960, 6
  store i64 %29961, i64* %PC.i746
  %29962 = inttoptr i64 %29959 to i32*
  %29963 = load i32, i32* %29962
  %29964 = zext i32 %29963 to i64
  store i64 %29964, i64* %RAX.i747, align 8
  store %struct.Memory* %loadMem_4abe40, %struct.Memory** %MEMORY
  %loadMem_4abe46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29966 = getelementptr inbounds %struct.GPR, %struct.GPR* %29965, i32 0, i32 33
  %29967 = getelementptr inbounds %struct.Reg, %struct.Reg* %29966, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %29967 to i64*
  %29968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29969 = getelementptr inbounds %struct.GPR, %struct.GPR* %29968, i32 0, i32 1
  %29970 = getelementptr inbounds %struct.Reg, %struct.Reg* %29969, i32 0, i32 0
  %RAX.i744 = bitcast %union.anon* %29970 to i64*
  %29971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29972 = getelementptr inbounds %struct.GPR, %struct.GPR* %29971, i32 0, i32 15
  %29973 = getelementptr inbounds %struct.Reg, %struct.Reg* %29972, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %29973 to i64*
  %29974 = load i64, i64* %RAX.i744
  %29975 = load i64, i64* %RBP.i745
  %29976 = sub i64 %29975, 652
  %29977 = load i64, i64* %PC.i743
  %29978 = add i64 %29977, 6
  store i64 %29978, i64* %PC.i743
  %29979 = trunc i64 %29974 to i32
  %29980 = inttoptr i64 %29976 to i32*
  %29981 = load i32, i32* %29980
  %29982 = add i32 %29981, %29979
  %29983 = zext i32 %29982 to i64
  store i64 %29983, i64* %RAX.i744, align 8
  %29984 = icmp ult i32 %29982, %29979
  %29985 = icmp ult i32 %29982, %29981
  %29986 = or i1 %29984, %29985
  %29987 = zext i1 %29986 to i8
  %29988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29987, i8* %29988, align 1
  %29989 = and i32 %29982, 255
  %29990 = call i32 @llvm.ctpop.i32(i32 %29989)
  %29991 = trunc i32 %29990 to i8
  %29992 = and i8 %29991, 1
  %29993 = xor i8 %29992, 1
  %29994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29993, i8* %29994, align 1
  %29995 = xor i32 %29981, %29979
  %29996 = xor i32 %29995, %29982
  %29997 = lshr i32 %29996, 4
  %29998 = trunc i32 %29997 to i8
  %29999 = and i8 %29998, 1
  %30000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29999, i8* %30000, align 1
  %30001 = icmp eq i32 %29982, 0
  %30002 = zext i1 %30001 to i8
  %30003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30002, i8* %30003, align 1
  %30004 = lshr i32 %29982, 31
  %30005 = trunc i32 %30004 to i8
  %30006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30005, i8* %30006, align 1
  %30007 = lshr i32 %29979, 31
  %30008 = lshr i32 %29981, 31
  %30009 = xor i32 %30004, %30007
  %30010 = xor i32 %30004, %30008
  %30011 = add i32 %30009, %30010
  %30012 = icmp eq i32 %30011, 2
  %30013 = zext i1 %30012 to i8
  %30014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30013, i8* %30014, align 1
  store %struct.Memory* %loadMem_4abe46, %struct.Memory** %MEMORY
  %loadMem_4abe4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %30015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30016 = getelementptr inbounds %struct.GPR, %struct.GPR* %30015, i32 0, i32 33
  %30017 = getelementptr inbounds %struct.Reg, %struct.Reg* %30016, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %30017 to i64*
  %30018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30019 = getelementptr inbounds %struct.GPR, %struct.GPR* %30018, i32 0, i32 5
  %30020 = getelementptr inbounds %struct.Reg, %struct.Reg* %30019, i32 0, i32 0
  %RCX.i742 = bitcast %union.anon* %30020 to i64*
  %30021 = load i64, i64* %PC.i741
  %30022 = add i64 %30021, 8
  store i64 %30022, i64* %PC.i741
  %30023 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %30023, i64* %RCX.i742, align 8
  store %struct.Memory* %loadMem_4abe4c, %struct.Memory** %MEMORY
  %loadMem_4abe54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30025 = getelementptr inbounds %struct.GPR, %struct.GPR* %30024, i32 0, i32 33
  %30026 = getelementptr inbounds %struct.Reg, %struct.Reg* %30025, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %30026 to i64*
  %30027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30028 = getelementptr inbounds %struct.GPR, %struct.GPR* %30027, i32 0, i32 5
  %30029 = getelementptr inbounds %struct.Reg, %struct.Reg* %30028, i32 0, i32 0
  %RCX.i740 = bitcast %union.anon* %30029 to i64*
  %30030 = load i64, i64* %RCX.i740
  %30031 = load i64, i64* %PC.i739
  %30032 = add i64 %30031, 7
  store i64 %30032, i64* %PC.i739
  %30033 = add i64 13112, %30030
  store i64 %30033, i64* %RCX.i740, align 8
  %30034 = icmp ult i64 %30033, %30030
  %30035 = icmp ult i64 %30033, 13112
  %30036 = or i1 %30034, %30035
  %30037 = zext i1 %30036 to i8
  %30038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30037, i8* %30038, align 1
  %30039 = trunc i64 %30033 to i32
  %30040 = and i32 %30039, 255
  %30041 = call i32 @llvm.ctpop.i32(i32 %30040)
  %30042 = trunc i32 %30041 to i8
  %30043 = and i8 %30042, 1
  %30044 = xor i8 %30043, 1
  %30045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30044, i8* %30045, align 1
  %30046 = xor i64 13112, %30030
  %30047 = xor i64 %30046, %30033
  %30048 = lshr i64 %30047, 4
  %30049 = trunc i64 %30048 to i8
  %30050 = and i8 %30049, 1
  %30051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30050, i8* %30051, align 1
  %30052 = icmp eq i64 %30033, 0
  %30053 = zext i1 %30052 to i8
  %30054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30053, i8* %30054, align 1
  %30055 = lshr i64 %30033, 63
  %30056 = trunc i64 %30055 to i8
  %30057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30056, i8* %30057, align 1
  %30058 = lshr i64 %30030, 63
  %30059 = xor i64 %30055, %30058
  %30060 = add i64 %30059, %30055
  %30061 = icmp eq i64 %30060, 2
  %30062 = zext i1 %30061 to i8
  %30063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30062, i8* %30063, align 1
  store %struct.Memory* %loadMem_4abe54, %struct.Memory** %MEMORY
  %loadMem_4abe5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %30064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30065 = getelementptr inbounds %struct.GPR, %struct.GPR* %30064, i32 0, i32 33
  %30066 = getelementptr inbounds %struct.Reg, %struct.Reg* %30065, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %30066 to i64*
  %30067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30068 = getelementptr inbounds %struct.GPR, %struct.GPR* %30067, i32 0, i32 7
  %30069 = getelementptr inbounds %struct.Reg, %struct.Reg* %30068, i32 0, i32 0
  %RDX.i737 = bitcast %union.anon* %30069 to i64*
  %30070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30071 = getelementptr inbounds %struct.GPR, %struct.GPR* %30070, i32 0, i32 15
  %30072 = getelementptr inbounds %struct.Reg, %struct.Reg* %30071, i32 0, i32 0
  %RBP.i738 = bitcast %union.anon* %30072 to i64*
  %30073 = load i64, i64* %RBP.i738
  %30074 = sub i64 %30073, 24
  %30075 = load i64, i64* %PC.i736
  %30076 = add i64 %30075, 4
  store i64 %30076, i64* %PC.i736
  %30077 = inttoptr i64 %30074 to i32*
  %30078 = load i32, i32* %30077
  %30079 = sext i32 %30078 to i64
  store i64 %30079, i64* %RDX.i737, align 8
  store %struct.Memory* %loadMem_4abe5b, %struct.Memory** %MEMORY
  %loadMem_4abe5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %30080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30081 = getelementptr inbounds %struct.GPR, %struct.GPR* %30080, i32 0, i32 33
  %30082 = getelementptr inbounds %struct.Reg, %struct.Reg* %30081, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %30082 to i64*
  %30083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30084 = getelementptr inbounds %struct.GPR, %struct.GPR* %30083, i32 0, i32 7
  %30085 = getelementptr inbounds %struct.Reg, %struct.Reg* %30084, i32 0, i32 0
  %RDX.i735 = bitcast %union.anon* %30085 to i64*
  %30086 = load i64, i64* %RDX.i735
  %30087 = load i64, i64* %PC.i734
  %30088 = add i64 %30087, 4
  store i64 %30088, i64* %PC.i734
  %30089 = shl i64 %30086, 5
  %30090 = icmp slt i64 %30089, 0
  %30091 = shl i64 %30089, 1
  store i64 %30091, i64* %RDX.i735, align 8
  %30092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %30093 = zext i1 %30090 to i8
  store i8 %30093, i8* %30092, align 1
  %30094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %30095 = trunc i64 %30091 to i32
  %30096 = and i32 %30095, 254
  %30097 = call i32 @llvm.ctpop.i32(i32 %30096)
  %30098 = trunc i32 %30097 to i8
  %30099 = and i8 %30098, 1
  %30100 = xor i8 %30099, 1
  store i8 %30100, i8* %30094, align 1
  %30101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30101, align 1
  %30102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %30103 = icmp eq i64 %30091, 0
  %30104 = zext i1 %30103 to i8
  store i8 %30104, i8* %30102, align 1
  %30105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30106 = lshr i64 %30091, 63
  %30107 = trunc i64 %30106 to i8
  store i8 %30107, i8* %30105, align 1
  %30108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %30108, align 1
  store %struct.Memory* %loadMem_4abe5f, %struct.Memory** %MEMORY
  %loadMem_4abe63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30110 = getelementptr inbounds %struct.GPR, %struct.GPR* %30109, i32 0, i32 33
  %30111 = getelementptr inbounds %struct.Reg, %struct.Reg* %30110, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %30111 to i64*
  %30112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30113 = getelementptr inbounds %struct.GPR, %struct.GPR* %30112, i32 0, i32 5
  %30114 = getelementptr inbounds %struct.Reg, %struct.Reg* %30113, i32 0, i32 0
  %RCX.i732 = bitcast %union.anon* %30114 to i64*
  %30115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30116 = getelementptr inbounds %struct.GPR, %struct.GPR* %30115, i32 0, i32 7
  %30117 = getelementptr inbounds %struct.Reg, %struct.Reg* %30116, i32 0, i32 0
  %RDX.i733 = bitcast %union.anon* %30117 to i64*
  %30118 = load i64, i64* %RCX.i732
  %30119 = load i64, i64* %RDX.i733
  %30120 = load i64, i64* %PC.i731
  %30121 = add i64 %30120, 3
  store i64 %30121, i64* %PC.i731
  %30122 = add i64 %30119, %30118
  store i64 %30122, i64* %RCX.i732, align 8
  %30123 = icmp ult i64 %30122, %30118
  %30124 = icmp ult i64 %30122, %30119
  %30125 = or i1 %30123, %30124
  %30126 = zext i1 %30125 to i8
  %30127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30126, i8* %30127, align 1
  %30128 = trunc i64 %30122 to i32
  %30129 = and i32 %30128, 255
  %30130 = call i32 @llvm.ctpop.i32(i32 %30129)
  %30131 = trunc i32 %30130 to i8
  %30132 = and i8 %30131, 1
  %30133 = xor i8 %30132, 1
  %30134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30133, i8* %30134, align 1
  %30135 = xor i64 %30119, %30118
  %30136 = xor i64 %30135, %30122
  %30137 = lshr i64 %30136, 4
  %30138 = trunc i64 %30137 to i8
  %30139 = and i8 %30138, 1
  %30140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30139, i8* %30140, align 1
  %30141 = icmp eq i64 %30122, 0
  %30142 = zext i1 %30141 to i8
  %30143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30142, i8* %30143, align 1
  %30144 = lshr i64 %30122, 63
  %30145 = trunc i64 %30144 to i8
  %30146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30145, i8* %30146, align 1
  %30147 = lshr i64 %30118, 63
  %30148 = lshr i64 %30119, 63
  %30149 = xor i64 %30144, %30147
  %30150 = xor i64 %30144, %30148
  %30151 = add i64 %30149, %30150
  %30152 = icmp eq i64 %30151, 2
  %30153 = zext i1 %30152 to i8
  %30154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30153, i8* %30154, align 1
  store %struct.Memory* %loadMem_4abe63, %struct.Memory** %MEMORY
  %loadMem_4abe66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30156 = getelementptr inbounds %struct.GPR, %struct.GPR* %30155, i32 0, i32 33
  %30157 = getelementptr inbounds %struct.Reg, %struct.Reg* %30156, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %30157 to i64*
  %30158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30159 = getelementptr inbounds %struct.GPR, %struct.GPR* %30158, i32 0, i32 1
  %30160 = getelementptr inbounds %struct.Reg, %struct.Reg* %30159, i32 0, i32 0
  %EAX.i729 = bitcast %union.anon* %30160 to i32*
  %30161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30162 = getelementptr inbounds %struct.GPR, %struct.GPR* %30161, i32 0, i32 5
  %30163 = getelementptr inbounds %struct.Reg, %struct.Reg* %30162, i32 0, i32 0
  %RCX.i730 = bitcast %union.anon* %30163 to i64*
  %30164 = load i64, i64* %RCX.i730
  %30165 = add i64 %30164, 4
  %30166 = load i32, i32* %EAX.i729
  %30167 = zext i32 %30166 to i64
  %30168 = load i64, i64* %PC.i728
  %30169 = add i64 %30168, 3
  store i64 %30169, i64* %PC.i728
  %30170 = inttoptr i64 %30165 to i32*
  store i32 %30166, i32* %30170
  store %struct.Memory* %loadMem_4abe66, %struct.Memory** %MEMORY
  %loadMem_4abe69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30172 = getelementptr inbounds %struct.GPR, %struct.GPR* %30171, i32 0, i32 33
  %30173 = getelementptr inbounds %struct.Reg, %struct.Reg* %30172, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %30173 to i64*
  %30174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30175 = getelementptr inbounds %struct.GPR, %struct.GPR* %30174, i32 0, i32 1
  %30176 = getelementptr inbounds %struct.Reg, %struct.Reg* %30175, i32 0, i32 0
  %RAX.i726 = bitcast %union.anon* %30176 to i64*
  %30177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30178 = getelementptr inbounds %struct.GPR, %struct.GPR* %30177, i32 0, i32 15
  %30179 = getelementptr inbounds %struct.Reg, %struct.Reg* %30178, i32 0, i32 0
  %RBP.i727 = bitcast %union.anon* %30179 to i64*
  %30180 = load i64, i64* %RBP.i727
  %30181 = sub i64 %30180, 656
  %30182 = load i64, i64* %PC.i725
  %30183 = add i64 %30182, 6
  store i64 %30183, i64* %PC.i725
  %30184 = inttoptr i64 %30181 to i32*
  %30185 = load i32, i32* %30184
  %30186 = zext i32 %30185 to i64
  store i64 %30186, i64* %RAX.i726, align 8
  store %struct.Memory* %loadMem_4abe69, %struct.Memory** %MEMORY
  %loadMem_4abe6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %30187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30188 = getelementptr inbounds %struct.GPR, %struct.GPR* %30187, i32 0, i32 33
  %30189 = getelementptr inbounds %struct.Reg, %struct.Reg* %30188, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %30189 to i64*
  %30190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30191 = getelementptr inbounds %struct.GPR, %struct.GPR* %30190, i32 0, i32 1
  %30192 = getelementptr inbounds %struct.Reg, %struct.Reg* %30191, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %30192 to i64*
  %30193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30194 = getelementptr inbounds %struct.GPR, %struct.GPR* %30193, i32 0, i32 15
  %30195 = getelementptr inbounds %struct.Reg, %struct.Reg* %30194, i32 0, i32 0
  %RBP.i724 = bitcast %union.anon* %30195 to i64*
  %30196 = load i64, i64* %RAX.i723
  %30197 = load i64, i64* %RBP.i724
  %30198 = sub i64 %30197, 660
  %30199 = load i64, i64* %PC.i722
  %30200 = add i64 %30199, 6
  store i64 %30200, i64* %PC.i722
  %30201 = trunc i64 %30196 to i32
  %30202 = inttoptr i64 %30198 to i32*
  %30203 = load i32, i32* %30202
  %30204 = add i32 %30203, %30201
  %30205 = zext i32 %30204 to i64
  store i64 %30205, i64* %RAX.i723, align 8
  %30206 = icmp ult i32 %30204, %30201
  %30207 = icmp ult i32 %30204, %30203
  %30208 = or i1 %30206, %30207
  %30209 = zext i1 %30208 to i8
  %30210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30209, i8* %30210, align 1
  %30211 = and i32 %30204, 255
  %30212 = call i32 @llvm.ctpop.i32(i32 %30211)
  %30213 = trunc i32 %30212 to i8
  %30214 = and i8 %30213, 1
  %30215 = xor i8 %30214, 1
  %30216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30215, i8* %30216, align 1
  %30217 = xor i32 %30203, %30201
  %30218 = xor i32 %30217, %30204
  %30219 = lshr i32 %30218, 4
  %30220 = trunc i32 %30219 to i8
  %30221 = and i8 %30220, 1
  %30222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30221, i8* %30222, align 1
  %30223 = icmp eq i32 %30204, 0
  %30224 = zext i1 %30223 to i8
  %30225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30224, i8* %30225, align 1
  %30226 = lshr i32 %30204, 31
  %30227 = trunc i32 %30226 to i8
  %30228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30227, i8* %30228, align 1
  %30229 = lshr i32 %30201, 31
  %30230 = lshr i32 %30203, 31
  %30231 = xor i32 %30226, %30229
  %30232 = xor i32 %30226, %30230
  %30233 = add i32 %30231, %30232
  %30234 = icmp eq i32 %30233, 2
  %30235 = zext i1 %30234 to i8
  %30236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30235, i8* %30236, align 1
  store %struct.Memory* %loadMem_4abe6f, %struct.Memory** %MEMORY
  %loadMem_4abe75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30238 = getelementptr inbounds %struct.GPR, %struct.GPR* %30237, i32 0, i32 33
  %30239 = getelementptr inbounds %struct.Reg, %struct.Reg* %30238, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %30239 to i64*
  %30240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30241 = getelementptr inbounds %struct.GPR, %struct.GPR* %30240, i32 0, i32 5
  %30242 = getelementptr inbounds %struct.Reg, %struct.Reg* %30241, i32 0, i32 0
  %RCX.i721 = bitcast %union.anon* %30242 to i64*
  %30243 = load i64, i64* %PC.i720
  %30244 = add i64 %30243, 8
  store i64 %30244, i64* %PC.i720
  %30245 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %30245, i64* %RCX.i721, align 8
  store %struct.Memory* %loadMem_4abe75, %struct.Memory** %MEMORY
  %loadMem_4abe7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %30246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30247 = getelementptr inbounds %struct.GPR, %struct.GPR* %30246, i32 0, i32 33
  %30248 = getelementptr inbounds %struct.Reg, %struct.Reg* %30247, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %30248 to i64*
  %30249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30250 = getelementptr inbounds %struct.GPR, %struct.GPR* %30249, i32 0, i32 5
  %30251 = getelementptr inbounds %struct.Reg, %struct.Reg* %30250, i32 0, i32 0
  %RCX.i719 = bitcast %union.anon* %30251 to i64*
  %30252 = load i64, i64* %RCX.i719
  %30253 = load i64, i64* %PC.i718
  %30254 = add i64 %30253, 7
  store i64 %30254, i64* %PC.i718
  %30255 = add i64 13112, %30252
  store i64 %30255, i64* %RCX.i719, align 8
  %30256 = icmp ult i64 %30255, %30252
  %30257 = icmp ult i64 %30255, 13112
  %30258 = or i1 %30256, %30257
  %30259 = zext i1 %30258 to i8
  %30260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30259, i8* %30260, align 1
  %30261 = trunc i64 %30255 to i32
  %30262 = and i32 %30261, 255
  %30263 = call i32 @llvm.ctpop.i32(i32 %30262)
  %30264 = trunc i32 %30263 to i8
  %30265 = and i8 %30264, 1
  %30266 = xor i8 %30265, 1
  %30267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30266, i8* %30267, align 1
  %30268 = xor i64 13112, %30252
  %30269 = xor i64 %30268, %30255
  %30270 = lshr i64 %30269, 4
  %30271 = trunc i64 %30270 to i8
  %30272 = and i8 %30271, 1
  %30273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30272, i8* %30273, align 1
  %30274 = icmp eq i64 %30255, 0
  %30275 = zext i1 %30274 to i8
  %30276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30275, i8* %30276, align 1
  %30277 = lshr i64 %30255, 63
  %30278 = trunc i64 %30277 to i8
  %30279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30278, i8* %30279, align 1
  %30280 = lshr i64 %30252, 63
  %30281 = xor i64 %30277, %30280
  %30282 = add i64 %30281, %30277
  %30283 = icmp eq i64 %30282, 2
  %30284 = zext i1 %30283 to i8
  %30285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30284, i8* %30285, align 1
  store %struct.Memory* %loadMem_4abe7d, %struct.Memory** %MEMORY
  %loadMem_4abe84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30287 = getelementptr inbounds %struct.GPR, %struct.GPR* %30286, i32 0, i32 33
  %30288 = getelementptr inbounds %struct.Reg, %struct.Reg* %30287, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %30288 to i64*
  %30289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30290 = getelementptr inbounds %struct.GPR, %struct.GPR* %30289, i32 0, i32 7
  %30291 = getelementptr inbounds %struct.Reg, %struct.Reg* %30290, i32 0, i32 0
  %RDX.i716 = bitcast %union.anon* %30291 to i64*
  %30292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30293 = getelementptr inbounds %struct.GPR, %struct.GPR* %30292, i32 0, i32 15
  %30294 = getelementptr inbounds %struct.Reg, %struct.Reg* %30293, i32 0, i32 0
  %RBP.i717 = bitcast %union.anon* %30294 to i64*
  %30295 = load i64, i64* %RBP.i717
  %30296 = sub i64 %30295, 24
  %30297 = load i64, i64* %PC.i715
  %30298 = add i64 %30297, 4
  store i64 %30298, i64* %PC.i715
  %30299 = inttoptr i64 %30296 to i32*
  %30300 = load i32, i32* %30299
  %30301 = sext i32 %30300 to i64
  store i64 %30301, i64* %RDX.i716, align 8
  store %struct.Memory* %loadMem_4abe84, %struct.Memory** %MEMORY
  %loadMem_4abe88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30303 = getelementptr inbounds %struct.GPR, %struct.GPR* %30302, i32 0, i32 33
  %30304 = getelementptr inbounds %struct.Reg, %struct.Reg* %30303, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %30304 to i64*
  %30305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30306 = getelementptr inbounds %struct.GPR, %struct.GPR* %30305, i32 0, i32 7
  %30307 = getelementptr inbounds %struct.Reg, %struct.Reg* %30306, i32 0, i32 0
  %RDX.i714 = bitcast %union.anon* %30307 to i64*
  %30308 = load i64, i64* %RDX.i714
  %30309 = load i64, i64* %PC.i713
  %30310 = add i64 %30309, 4
  store i64 %30310, i64* %PC.i713
  %30311 = shl i64 %30308, 5
  %30312 = icmp slt i64 %30311, 0
  %30313 = shl i64 %30311, 1
  store i64 %30313, i64* %RDX.i714, align 8
  %30314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %30315 = zext i1 %30312 to i8
  store i8 %30315, i8* %30314, align 1
  %30316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %30317 = trunc i64 %30313 to i32
  %30318 = and i32 %30317, 254
  %30319 = call i32 @llvm.ctpop.i32(i32 %30318)
  %30320 = trunc i32 %30319 to i8
  %30321 = and i8 %30320, 1
  %30322 = xor i8 %30321, 1
  store i8 %30322, i8* %30316, align 1
  %30323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30323, align 1
  %30324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %30325 = icmp eq i64 %30313, 0
  %30326 = zext i1 %30325 to i8
  store i8 %30326, i8* %30324, align 1
  %30327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30328 = lshr i64 %30313, 63
  %30329 = trunc i64 %30328 to i8
  store i8 %30329, i8* %30327, align 1
  %30330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %30330, align 1
  store %struct.Memory* %loadMem_4abe88, %struct.Memory** %MEMORY
  %loadMem_4abe8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %30331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30332 = getelementptr inbounds %struct.GPR, %struct.GPR* %30331, i32 0, i32 33
  %30333 = getelementptr inbounds %struct.Reg, %struct.Reg* %30332, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %30333 to i64*
  %30334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30335 = getelementptr inbounds %struct.GPR, %struct.GPR* %30334, i32 0, i32 5
  %30336 = getelementptr inbounds %struct.Reg, %struct.Reg* %30335, i32 0, i32 0
  %RCX.i711 = bitcast %union.anon* %30336 to i64*
  %30337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30338 = getelementptr inbounds %struct.GPR, %struct.GPR* %30337, i32 0, i32 7
  %30339 = getelementptr inbounds %struct.Reg, %struct.Reg* %30338, i32 0, i32 0
  %RDX.i712 = bitcast %union.anon* %30339 to i64*
  %30340 = load i64, i64* %RCX.i711
  %30341 = load i64, i64* %RDX.i712
  %30342 = load i64, i64* %PC.i710
  %30343 = add i64 %30342, 3
  store i64 %30343, i64* %PC.i710
  %30344 = add i64 %30341, %30340
  store i64 %30344, i64* %RCX.i711, align 8
  %30345 = icmp ult i64 %30344, %30340
  %30346 = icmp ult i64 %30344, %30341
  %30347 = or i1 %30345, %30346
  %30348 = zext i1 %30347 to i8
  %30349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30348, i8* %30349, align 1
  %30350 = trunc i64 %30344 to i32
  %30351 = and i32 %30350, 255
  %30352 = call i32 @llvm.ctpop.i32(i32 %30351)
  %30353 = trunc i32 %30352 to i8
  %30354 = and i8 %30353, 1
  %30355 = xor i8 %30354, 1
  %30356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30355, i8* %30356, align 1
  %30357 = xor i64 %30341, %30340
  %30358 = xor i64 %30357, %30344
  %30359 = lshr i64 %30358, 4
  %30360 = trunc i64 %30359 to i8
  %30361 = and i8 %30360, 1
  %30362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30361, i8* %30362, align 1
  %30363 = icmp eq i64 %30344, 0
  %30364 = zext i1 %30363 to i8
  %30365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30364, i8* %30365, align 1
  %30366 = lshr i64 %30344, 63
  %30367 = trunc i64 %30366 to i8
  %30368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30367, i8* %30368, align 1
  %30369 = lshr i64 %30340, 63
  %30370 = lshr i64 %30341, 63
  %30371 = xor i64 %30366, %30369
  %30372 = xor i64 %30366, %30370
  %30373 = add i64 %30371, %30372
  %30374 = icmp eq i64 %30373, 2
  %30375 = zext i1 %30374 to i8
  %30376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30375, i8* %30376, align 1
  store %struct.Memory* %loadMem_4abe8c, %struct.Memory** %MEMORY
  %loadMem_4abe8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %30377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30378 = getelementptr inbounds %struct.GPR, %struct.GPR* %30377, i32 0, i32 33
  %30379 = getelementptr inbounds %struct.Reg, %struct.Reg* %30378, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %30379 to i64*
  %30380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30381 = getelementptr inbounds %struct.GPR, %struct.GPR* %30380, i32 0, i32 1
  %30382 = getelementptr inbounds %struct.Reg, %struct.Reg* %30381, i32 0, i32 0
  %EAX.i708 = bitcast %union.anon* %30382 to i32*
  %30383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30384 = getelementptr inbounds %struct.GPR, %struct.GPR* %30383, i32 0, i32 5
  %30385 = getelementptr inbounds %struct.Reg, %struct.Reg* %30384, i32 0, i32 0
  %RCX.i709 = bitcast %union.anon* %30385 to i64*
  %30386 = load i64, i64* %RCX.i709
  %30387 = add i64 %30386, 8
  %30388 = load i32, i32* %EAX.i708
  %30389 = zext i32 %30388 to i64
  %30390 = load i64, i64* %PC.i707
  %30391 = add i64 %30390, 3
  store i64 %30391, i64* %PC.i707
  %30392 = inttoptr i64 %30387 to i32*
  store i32 %30388, i32* %30392
  store %struct.Memory* %loadMem_4abe8f, %struct.Memory** %MEMORY
  %loadMem_4abe92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30394 = getelementptr inbounds %struct.GPR, %struct.GPR* %30393, i32 0, i32 33
  %30395 = getelementptr inbounds %struct.Reg, %struct.Reg* %30394, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %30395 to i64*
  %30396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30397 = getelementptr inbounds %struct.GPR, %struct.GPR* %30396, i32 0, i32 1
  %30398 = getelementptr inbounds %struct.Reg, %struct.Reg* %30397, i32 0, i32 0
  %RAX.i705 = bitcast %union.anon* %30398 to i64*
  %30399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30400 = getelementptr inbounds %struct.GPR, %struct.GPR* %30399, i32 0, i32 15
  %30401 = getelementptr inbounds %struct.Reg, %struct.Reg* %30400, i32 0, i32 0
  %RBP.i706 = bitcast %union.anon* %30401 to i64*
  %30402 = load i64, i64* %RBP.i706
  %30403 = sub i64 %30402, 648
  %30404 = load i64, i64* %PC.i704
  %30405 = add i64 %30404, 6
  store i64 %30405, i64* %PC.i704
  %30406 = inttoptr i64 %30403 to i32*
  %30407 = load i32, i32* %30406
  %30408 = zext i32 %30407 to i64
  store i64 %30408, i64* %RAX.i705, align 8
  store %struct.Memory* %loadMem_4abe92, %struct.Memory** %MEMORY
  %loadMem_4abe98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30410 = getelementptr inbounds %struct.GPR, %struct.GPR* %30409, i32 0, i32 33
  %30411 = getelementptr inbounds %struct.Reg, %struct.Reg* %30410, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %30411 to i64*
  %30412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30413 = getelementptr inbounds %struct.GPR, %struct.GPR* %30412, i32 0, i32 1
  %30414 = getelementptr inbounds %struct.Reg, %struct.Reg* %30413, i32 0, i32 0
  %RAX.i702 = bitcast %union.anon* %30414 to i64*
  %30415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30416 = getelementptr inbounds %struct.GPR, %struct.GPR* %30415, i32 0, i32 15
  %30417 = getelementptr inbounds %struct.Reg, %struct.Reg* %30416, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %30417 to i64*
  %30418 = load i64, i64* %RAX.i702
  %30419 = load i64, i64* %RBP.i703
  %30420 = sub i64 %30419, 668
  %30421 = load i64, i64* %PC.i701
  %30422 = add i64 %30421, 6
  store i64 %30422, i64* %PC.i701
  %30423 = trunc i64 %30418 to i32
  %30424 = inttoptr i64 %30420 to i32*
  %30425 = load i32, i32* %30424
  %30426 = add i32 %30425, %30423
  %30427 = zext i32 %30426 to i64
  store i64 %30427, i64* %RAX.i702, align 8
  %30428 = icmp ult i32 %30426, %30423
  %30429 = icmp ult i32 %30426, %30425
  %30430 = or i1 %30428, %30429
  %30431 = zext i1 %30430 to i8
  %30432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30431, i8* %30432, align 1
  %30433 = and i32 %30426, 255
  %30434 = call i32 @llvm.ctpop.i32(i32 %30433)
  %30435 = trunc i32 %30434 to i8
  %30436 = and i8 %30435, 1
  %30437 = xor i8 %30436, 1
  %30438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30437, i8* %30438, align 1
  %30439 = xor i32 %30425, %30423
  %30440 = xor i32 %30439, %30426
  %30441 = lshr i32 %30440, 4
  %30442 = trunc i32 %30441 to i8
  %30443 = and i8 %30442, 1
  %30444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30443, i8* %30444, align 1
  %30445 = icmp eq i32 %30426, 0
  %30446 = zext i1 %30445 to i8
  %30447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30446, i8* %30447, align 1
  %30448 = lshr i32 %30426, 31
  %30449 = trunc i32 %30448 to i8
  %30450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30449, i8* %30450, align 1
  %30451 = lshr i32 %30423, 31
  %30452 = lshr i32 %30425, 31
  %30453 = xor i32 %30448, %30451
  %30454 = xor i32 %30448, %30452
  %30455 = add i32 %30453, %30454
  %30456 = icmp eq i32 %30455, 2
  %30457 = zext i1 %30456 to i8
  %30458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30457, i8* %30458, align 1
  store %struct.Memory* %loadMem_4abe98, %struct.Memory** %MEMORY
  %loadMem_4abe9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %30459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30460 = getelementptr inbounds %struct.GPR, %struct.GPR* %30459, i32 0, i32 33
  %30461 = getelementptr inbounds %struct.Reg, %struct.Reg* %30460, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %30461 to i64*
  %30462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30463 = getelementptr inbounds %struct.GPR, %struct.GPR* %30462, i32 0, i32 5
  %30464 = getelementptr inbounds %struct.Reg, %struct.Reg* %30463, i32 0, i32 0
  %RCX.i700 = bitcast %union.anon* %30464 to i64*
  %30465 = load i64, i64* %PC.i699
  %30466 = add i64 %30465, 8
  store i64 %30466, i64* %PC.i699
  %30467 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %30467, i64* %RCX.i700, align 8
  store %struct.Memory* %loadMem_4abe9e, %struct.Memory** %MEMORY
  %loadMem_4abea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30469 = getelementptr inbounds %struct.GPR, %struct.GPR* %30468, i32 0, i32 33
  %30470 = getelementptr inbounds %struct.Reg, %struct.Reg* %30469, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %30470 to i64*
  %30471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30472 = getelementptr inbounds %struct.GPR, %struct.GPR* %30471, i32 0, i32 5
  %30473 = getelementptr inbounds %struct.Reg, %struct.Reg* %30472, i32 0, i32 0
  %RCX.i698 = bitcast %union.anon* %30473 to i64*
  %30474 = load i64, i64* %RCX.i698
  %30475 = load i64, i64* %PC.i697
  %30476 = add i64 %30475, 7
  store i64 %30476, i64* %PC.i697
  %30477 = add i64 13112, %30474
  store i64 %30477, i64* %RCX.i698, align 8
  %30478 = icmp ult i64 %30477, %30474
  %30479 = icmp ult i64 %30477, 13112
  %30480 = or i1 %30478, %30479
  %30481 = zext i1 %30480 to i8
  %30482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30481, i8* %30482, align 1
  %30483 = trunc i64 %30477 to i32
  %30484 = and i32 %30483, 255
  %30485 = call i32 @llvm.ctpop.i32(i32 %30484)
  %30486 = trunc i32 %30485 to i8
  %30487 = and i8 %30486, 1
  %30488 = xor i8 %30487, 1
  %30489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30488, i8* %30489, align 1
  %30490 = xor i64 13112, %30474
  %30491 = xor i64 %30490, %30477
  %30492 = lshr i64 %30491, 4
  %30493 = trunc i64 %30492 to i8
  %30494 = and i8 %30493, 1
  %30495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30494, i8* %30495, align 1
  %30496 = icmp eq i64 %30477, 0
  %30497 = zext i1 %30496 to i8
  %30498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30497, i8* %30498, align 1
  %30499 = lshr i64 %30477, 63
  %30500 = trunc i64 %30499 to i8
  %30501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30500, i8* %30501, align 1
  %30502 = lshr i64 %30474, 63
  %30503 = xor i64 %30499, %30502
  %30504 = add i64 %30503, %30499
  %30505 = icmp eq i64 %30504, 2
  %30506 = zext i1 %30505 to i8
  %30507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30506, i8* %30507, align 1
  store %struct.Memory* %loadMem_4abea6, %struct.Memory** %MEMORY
  %loadMem_4abead = load %struct.Memory*, %struct.Memory** %MEMORY
  %30508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30509 = getelementptr inbounds %struct.GPR, %struct.GPR* %30508, i32 0, i32 33
  %30510 = getelementptr inbounds %struct.Reg, %struct.Reg* %30509, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %30510 to i64*
  %30511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30512 = getelementptr inbounds %struct.GPR, %struct.GPR* %30511, i32 0, i32 7
  %30513 = getelementptr inbounds %struct.Reg, %struct.Reg* %30512, i32 0, i32 0
  %RDX.i695 = bitcast %union.anon* %30513 to i64*
  %30514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30515 = getelementptr inbounds %struct.GPR, %struct.GPR* %30514, i32 0, i32 15
  %30516 = getelementptr inbounds %struct.Reg, %struct.Reg* %30515, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %30516 to i64*
  %30517 = load i64, i64* %RBP.i696
  %30518 = sub i64 %30517, 24
  %30519 = load i64, i64* %PC.i694
  %30520 = add i64 %30519, 4
  store i64 %30520, i64* %PC.i694
  %30521 = inttoptr i64 %30518 to i32*
  %30522 = load i32, i32* %30521
  %30523 = sext i32 %30522 to i64
  store i64 %30523, i64* %RDX.i695, align 8
  store %struct.Memory* %loadMem_4abead, %struct.Memory** %MEMORY
  %loadMem_4abeb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30525 = getelementptr inbounds %struct.GPR, %struct.GPR* %30524, i32 0, i32 33
  %30526 = getelementptr inbounds %struct.Reg, %struct.Reg* %30525, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %30526 to i64*
  %30527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30528 = getelementptr inbounds %struct.GPR, %struct.GPR* %30527, i32 0, i32 7
  %30529 = getelementptr inbounds %struct.Reg, %struct.Reg* %30528, i32 0, i32 0
  %RDX.i693 = bitcast %union.anon* %30529 to i64*
  %30530 = load i64, i64* %RDX.i693
  %30531 = load i64, i64* %PC.i692
  %30532 = add i64 %30531, 4
  store i64 %30532, i64* %PC.i692
  %30533 = shl i64 %30530, 5
  %30534 = icmp slt i64 %30533, 0
  %30535 = shl i64 %30533, 1
  store i64 %30535, i64* %RDX.i693, align 8
  %30536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %30537 = zext i1 %30534 to i8
  store i8 %30537, i8* %30536, align 1
  %30538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %30539 = trunc i64 %30535 to i32
  %30540 = and i32 %30539, 254
  %30541 = call i32 @llvm.ctpop.i32(i32 %30540)
  %30542 = trunc i32 %30541 to i8
  %30543 = and i8 %30542, 1
  %30544 = xor i8 %30543, 1
  store i8 %30544, i8* %30538, align 1
  %30545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30545, align 1
  %30546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %30547 = icmp eq i64 %30535, 0
  %30548 = zext i1 %30547 to i8
  store i8 %30548, i8* %30546, align 1
  %30549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30550 = lshr i64 %30535, 63
  %30551 = trunc i64 %30550 to i8
  store i8 %30551, i8* %30549, align 1
  %30552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %30552, align 1
  store %struct.Memory* %loadMem_4abeb1, %struct.Memory** %MEMORY
  %loadMem_4abeb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30554 = getelementptr inbounds %struct.GPR, %struct.GPR* %30553, i32 0, i32 33
  %30555 = getelementptr inbounds %struct.Reg, %struct.Reg* %30554, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %30555 to i64*
  %30556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30557 = getelementptr inbounds %struct.GPR, %struct.GPR* %30556, i32 0, i32 5
  %30558 = getelementptr inbounds %struct.Reg, %struct.Reg* %30557, i32 0, i32 0
  %RCX.i690 = bitcast %union.anon* %30558 to i64*
  %30559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30560 = getelementptr inbounds %struct.GPR, %struct.GPR* %30559, i32 0, i32 7
  %30561 = getelementptr inbounds %struct.Reg, %struct.Reg* %30560, i32 0, i32 0
  %RDX.i691 = bitcast %union.anon* %30561 to i64*
  %30562 = load i64, i64* %RCX.i690
  %30563 = load i64, i64* %RDX.i691
  %30564 = load i64, i64* %PC.i689
  %30565 = add i64 %30564, 3
  store i64 %30565, i64* %PC.i689
  %30566 = add i64 %30563, %30562
  store i64 %30566, i64* %RCX.i690, align 8
  %30567 = icmp ult i64 %30566, %30562
  %30568 = icmp ult i64 %30566, %30563
  %30569 = or i1 %30567, %30568
  %30570 = zext i1 %30569 to i8
  %30571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30570, i8* %30571, align 1
  %30572 = trunc i64 %30566 to i32
  %30573 = and i32 %30572, 255
  %30574 = call i32 @llvm.ctpop.i32(i32 %30573)
  %30575 = trunc i32 %30574 to i8
  %30576 = and i8 %30575, 1
  %30577 = xor i8 %30576, 1
  %30578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30577, i8* %30578, align 1
  %30579 = xor i64 %30563, %30562
  %30580 = xor i64 %30579, %30566
  %30581 = lshr i64 %30580, 4
  %30582 = trunc i64 %30581 to i8
  %30583 = and i8 %30582, 1
  %30584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30583, i8* %30584, align 1
  %30585 = icmp eq i64 %30566, 0
  %30586 = zext i1 %30585 to i8
  %30587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30586, i8* %30587, align 1
  %30588 = lshr i64 %30566, 63
  %30589 = trunc i64 %30588 to i8
  %30590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30589, i8* %30590, align 1
  %30591 = lshr i64 %30562, 63
  %30592 = lshr i64 %30563, 63
  %30593 = xor i64 %30588, %30591
  %30594 = xor i64 %30588, %30592
  %30595 = add i64 %30593, %30594
  %30596 = icmp eq i64 %30595, 2
  %30597 = zext i1 %30596 to i8
  %30598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30597, i8* %30598, align 1
  store %struct.Memory* %loadMem_4abeb5, %struct.Memory** %MEMORY
  %loadMem_4abeb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30600 = getelementptr inbounds %struct.GPR, %struct.GPR* %30599, i32 0, i32 33
  %30601 = getelementptr inbounds %struct.Reg, %struct.Reg* %30600, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %30601 to i64*
  %30602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30603 = getelementptr inbounds %struct.GPR, %struct.GPR* %30602, i32 0, i32 1
  %30604 = getelementptr inbounds %struct.Reg, %struct.Reg* %30603, i32 0, i32 0
  %EAX.i687 = bitcast %union.anon* %30604 to i32*
  %30605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30606 = getelementptr inbounds %struct.GPR, %struct.GPR* %30605, i32 0, i32 5
  %30607 = getelementptr inbounds %struct.Reg, %struct.Reg* %30606, i32 0, i32 0
  %RCX.i688 = bitcast %union.anon* %30607 to i64*
  %30608 = load i64, i64* %RCX.i688
  %30609 = add i64 %30608, 12
  %30610 = load i32, i32* %EAX.i687
  %30611 = zext i32 %30610 to i64
  %30612 = load i64, i64* %PC.i686
  %30613 = add i64 %30612, 3
  store i64 %30613, i64* %PC.i686
  %30614 = inttoptr i64 %30609 to i32*
  store i32 %30610, i32* %30614
  store %struct.Memory* %loadMem_4abeb8, %struct.Memory** %MEMORY
  %loadMem_4abebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %30615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30616 = getelementptr inbounds %struct.GPR, %struct.GPR* %30615, i32 0, i32 33
  %30617 = getelementptr inbounds %struct.Reg, %struct.Reg* %30616, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %30617 to i64*
  %30618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30619 = getelementptr inbounds %struct.GPR, %struct.GPR* %30618, i32 0, i32 1
  %30620 = getelementptr inbounds %struct.Reg, %struct.Reg* %30619, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %30620 to i64*
  %30621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30622 = getelementptr inbounds %struct.GPR, %struct.GPR* %30621, i32 0, i32 15
  %30623 = getelementptr inbounds %struct.Reg, %struct.Reg* %30622, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %30623 to i64*
  %30624 = load i64, i64* %RBP.i685
  %30625 = sub i64 %30624, 648
  %30626 = load i64, i64* %PC.i683
  %30627 = add i64 %30626, 6
  store i64 %30627, i64* %PC.i683
  %30628 = inttoptr i64 %30625 to i32*
  %30629 = load i32, i32* %30628
  %30630 = zext i32 %30629 to i64
  store i64 %30630, i64* %RAX.i684, align 8
  store %struct.Memory* %loadMem_4abebb, %struct.Memory** %MEMORY
  %loadMem_4abec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30632 = getelementptr inbounds %struct.GPR, %struct.GPR* %30631, i32 0, i32 33
  %30633 = getelementptr inbounds %struct.Reg, %struct.Reg* %30632, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %30633 to i64*
  %30634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30635 = getelementptr inbounds %struct.GPR, %struct.GPR* %30634, i32 0, i32 1
  %30636 = getelementptr inbounds %struct.Reg, %struct.Reg* %30635, i32 0, i32 0
  %RAX.i681 = bitcast %union.anon* %30636 to i64*
  %30637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30638 = getelementptr inbounds %struct.GPR, %struct.GPR* %30637, i32 0, i32 15
  %30639 = getelementptr inbounds %struct.Reg, %struct.Reg* %30638, i32 0, i32 0
  %RBP.i682 = bitcast %union.anon* %30639 to i64*
  %30640 = load i64, i64* %RAX.i681
  %30641 = load i64, i64* %RBP.i682
  %30642 = sub i64 %30641, 668
  %30643 = load i64, i64* %PC.i680
  %30644 = add i64 %30643, 6
  store i64 %30644, i64* %PC.i680
  %30645 = trunc i64 %30640 to i32
  %30646 = inttoptr i64 %30642 to i32*
  %30647 = load i32, i32* %30646
  %30648 = sub i32 %30645, %30647
  %30649 = zext i32 %30648 to i64
  store i64 %30649, i64* %RAX.i681, align 8
  %30650 = icmp ult i32 %30645, %30647
  %30651 = zext i1 %30650 to i8
  %30652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30651, i8* %30652, align 1
  %30653 = and i32 %30648, 255
  %30654 = call i32 @llvm.ctpop.i32(i32 %30653)
  %30655 = trunc i32 %30654 to i8
  %30656 = and i8 %30655, 1
  %30657 = xor i8 %30656, 1
  %30658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30657, i8* %30658, align 1
  %30659 = xor i32 %30647, %30645
  %30660 = xor i32 %30659, %30648
  %30661 = lshr i32 %30660, 4
  %30662 = trunc i32 %30661 to i8
  %30663 = and i8 %30662, 1
  %30664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30663, i8* %30664, align 1
  %30665 = icmp eq i32 %30648, 0
  %30666 = zext i1 %30665 to i8
  %30667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30666, i8* %30667, align 1
  %30668 = lshr i32 %30648, 31
  %30669 = trunc i32 %30668 to i8
  %30670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30669, i8* %30670, align 1
  %30671 = lshr i32 %30645, 31
  %30672 = lshr i32 %30647, 31
  %30673 = xor i32 %30672, %30671
  %30674 = xor i32 %30668, %30671
  %30675 = add i32 %30674, %30673
  %30676 = icmp eq i32 %30675, 2
  %30677 = zext i1 %30676 to i8
  %30678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30677, i8* %30678, align 1
  store %struct.Memory* %loadMem_4abec1, %struct.Memory** %MEMORY
  %loadMem_4abec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30680 = getelementptr inbounds %struct.GPR, %struct.GPR* %30679, i32 0, i32 33
  %30681 = getelementptr inbounds %struct.Reg, %struct.Reg* %30680, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %30681 to i64*
  %30682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30683 = getelementptr inbounds %struct.GPR, %struct.GPR* %30682, i32 0, i32 5
  %30684 = getelementptr inbounds %struct.Reg, %struct.Reg* %30683, i32 0, i32 0
  %RCX.i679 = bitcast %union.anon* %30684 to i64*
  %30685 = load i64, i64* %PC.i678
  %30686 = add i64 %30685, 8
  store i64 %30686, i64* %PC.i678
  %30687 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %30687, i64* %RCX.i679, align 8
  store %struct.Memory* %loadMem_4abec7, %struct.Memory** %MEMORY
  %loadMem_4abecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %30688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30689 = getelementptr inbounds %struct.GPR, %struct.GPR* %30688, i32 0, i32 33
  %30690 = getelementptr inbounds %struct.Reg, %struct.Reg* %30689, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %30690 to i64*
  %30691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30692 = getelementptr inbounds %struct.GPR, %struct.GPR* %30691, i32 0, i32 5
  %30693 = getelementptr inbounds %struct.Reg, %struct.Reg* %30692, i32 0, i32 0
  %RCX.i677 = bitcast %union.anon* %30693 to i64*
  %30694 = load i64, i64* %RCX.i677
  %30695 = load i64, i64* %PC.i676
  %30696 = add i64 %30695, 7
  store i64 %30696, i64* %PC.i676
  %30697 = add i64 13112, %30694
  store i64 %30697, i64* %RCX.i677, align 8
  %30698 = icmp ult i64 %30697, %30694
  %30699 = icmp ult i64 %30697, 13112
  %30700 = or i1 %30698, %30699
  %30701 = zext i1 %30700 to i8
  %30702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30701, i8* %30702, align 1
  %30703 = trunc i64 %30697 to i32
  %30704 = and i32 %30703, 255
  %30705 = call i32 @llvm.ctpop.i32(i32 %30704)
  %30706 = trunc i32 %30705 to i8
  %30707 = and i8 %30706, 1
  %30708 = xor i8 %30707, 1
  %30709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30708, i8* %30709, align 1
  %30710 = xor i64 13112, %30694
  %30711 = xor i64 %30710, %30697
  %30712 = lshr i64 %30711, 4
  %30713 = trunc i64 %30712 to i8
  %30714 = and i8 %30713, 1
  %30715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30714, i8* %30715, align 1
  %30716 = icmp eq i64 %30697, 0
  %30717 = zext i1 %30716 to i8
  %30718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30717, i8* %30718, align 1
  %30719 = lshr i64 %30697, 63
  %30720 = trunc i64 %30719 to i8
  %30721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30720, i8* %30721, align 1
  %30722 = lshr i64 %30694, 63
  %30723 = xor i64 %30719, %30722
  %30724 = add i64 %30723, %30719
  %30725 = icmp eq i64 %30724, 2
  %30726 = zext i1 %30725 to i8
  %30727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30726, i8* %30727, align 1
  store %struct.Memory* %loadMem_4abecf, %struct.Memory** %MEMORY
  %loadMem_4abed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30729 = getelementptr inbounds %struct.GPR, %struct.GPR* %30728, i32 0, i32 33
  %30730 = getelementptr inbounds %struct.Reg, %struct.Reg* %30729, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %30730 to i64*
  %30731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30732 = getelementptr inbounds %struct.GPR, %struct.GPR* %30731, i32 0, i32 7
  %30733 = getelementptr inbounds %struct.Reg, %struct.Reg* %30732, i32 0, i32 0
  %RDX.i674 = bitcast %union.anon* %30733 to i64*
  %30734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30735 = getelementptr inbounds %struct.GPR, %struct.GPR* %30734, i32 0, i32 15
  %30736 = getelementptr inbounds %struct.Reg, %struct.Reg* %30735, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %30736 to i64*
  %30737 = load i64, i64* %RBP.i675
  %30738 = sub i64 %30737, 24
  %30739 = load i64, i64* %PC.i673
  %30740 = add i64 %30739, 4
  store i64 %30740, i64* %PC.i673
  %30741 = inttoptr i64 %30738 to i32*
  %30742 = load i32, i32* %30741
  %30743 = sext i32 %30742 to i64
  store i64 %30743, i64* %RDX.i674, align 8
  store %struct.Memory* %loadMem_4abed6, %struct.Memory** %MEMORY
  %loadMem_4abeda = load %struct.Memory*, %struct.Memory** %MEMORY
  %30744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30745 = getelementptr inbounds %struct.GPR, %struct.GPR* %30744, i32 0, i32 33
  %30746 = getelementptr inbounds %struct.Reg, %struct.Reg* %30745, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %30746 to i64*
  %30747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30748 = getelementptr inbounds %struct.GPR, %struct.GPR* %30747, i32 0, i32 7
  %30749 = getelementptr inbounds %struct.Reg, %struct.Reg* %30748, i32 0, i32 0
  %RDX.i672 = bitcast %union.anon* %30749 to i64*
  %30750 = load i64, i64* %RDX.i672
  %30751 = load i64, i64* %PC.i671
  %30752 = add i64 %30751, 4
  store i64 %30752, i64* %PC.i671
  %30753 = shl i64 %30750, 5
  %30754 = icmp slt i64 %30753, 0
  %30755 = shl i64 %30753, 1
  store i64 %30755, i64* %RDX.i672, align 8
  %30756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %30757 = zext i1 %30754 to i8
  store i8 %30757, i8* %30756, align 1
  %30758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %30759 = trunc i64 %30755 to i32
  %30760 = and i32 %30759, 254
  %30761 = call i32 @llvm.ctpop.i32(i32 %30760)
  %30762 = trunc i32 %30761 to i8
  %30763 = and i8 %30762, 1
  %30764 = xor i8 %30763, 1
  store i8 %30764, i8* %30758, align 1
  %30765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30765, align 1
  %30766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %30767 = icmp eq i64 %30755, 0
  %30768 = zext i1 %30767 to i8
  store i8 %30768, i8* %30766, align 1
  %30769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30770 = lshr i64 %30755, 63
  %30771 = trunc i64 %30770 to i8
  store i8 %30771, i8* %30769, align 1
  %30772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %30772, align 1
  store %struct.Memory* %loadMem_4abeda, %struct.Memory** %MEMORY
  %loadMem_4abede = load %struct.Memory*, %struct.Memory** %MEMORY
  %30773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30774 = getelementptr inbounds %struct.GPR, %struct.GPR* %30773, i32 0, i32 33
  %30775 = getelementptr inbounds %struct.Reg, %struct.Reg* %30774, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %30775 to i64*
  %30776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30777 = getelementptr inbounds %struct.GPR, %struct.GPR* %30776, i32 0, i32 5
  %30778 = getelementptr inbounds %struct.Reg, %struct.Reg* %30777, i32 0, i32 0
  %RCX.i669 = bitcast %union.anon* %30778 to i64*
  %30779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30780 = getelementptr inbounds %struct.GPR, %struct.GPR* %30779, i32 0, i32 7
  %30781 = getelementptr inbounds %struct.Reg, %struct.Reg* %30780, i32 0, i32 0
  %RDX.i670 = bitcast %union.anon* %30781 to i64*
  %30782 = load i64, i64* %RCX.i669
  %30783 = load i64, i64* %RDX.i670
  %30784 = load i64, i64* %PC.i668
  %30785 = add i64 %30784, 3
  store i64 %30785, i64* %PC.i668
  %30786 = add i64 %30783, %30782
  store i64 %30786, i64* %RCX.i669, align 8
  %30787 = icmp ult i64 %30786, %30782
  %30788 = icmp ult i64 %30786, %30783
  %30789 = or i1 %30787, %30788
  %30790 = zext i1 %30789 to i8
  %30791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30790, i8* %30791, align 1
  %30792 = trunc i64 %30786 to i32
  %30793 = and i32 %30792, 255
  %30794 = call i32 @llvm.ctpop.i32(i32 %30793)
  %30795 = trunc i32 %30794 to i8
  %30796 = and i8 %30795, 1
  %30797 = xor i8 %30796, 1
  %30798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30797, i8* %30798, align 1
  %30799 = xor i64 %30783, %30782
  %30800 = xor i64 %30799, %30786
  %30801 = lshr i64 %30800, 4
  %30802 = trunc i64 %30801 to i8
  %30803 = and i8 %30802, 1
  %30804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30803, i8* %30804, align 1
  %30805 = icmp eq i64 %30786, 0
  %30806 = zext i1 %30805 to i8
  %30807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30806, i8* %30807, align 1
  %30808 = lshr i64 %30786, 63
  %30809 = trunc i64 %30808 to i8
  %30810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30809, i8* %30810, align 1
  %30811 = lshr i64 %30782, 63
  %30812 = lshr i64 %30783, 63
  %30813 = xor i64 %30808, %30811
  %30814 = xor i64 %30808, %30812
  %30815 = add i64 %30813, %30814
  %30816 = icmp eq i64 %30815, 2
  %30817 = zext i1 %30816 to i8
  %30818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30817, i8* %30818, align 1
  store %struct.Memory* %loadMem_4abede, %struct.Memory** %MEMORY
  %loadMem_4abee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30820 = getelementptr inbounds %struct.GPR, %struct.GPR* %30819, i32 0, i32 33
  %30821 = getelementptr inbounds %struct.Reg, %struct.Reg* %30820, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %30821 to i64*
  %30822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30823 = getelementptr inbounds %struct.GPR, %struct.GPR* %30822, i32 0, i32 1
  %30824 = getelementptr inbounds %struct.Reg, %struct.Reg* %30823, i32 0, i32 0
  %EAX.i666 = bitcast %union.anon* %30824 to i32*
  %30825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30826 = getelementptr inbounds %struct.GPR, %struct.GPR* %30825, i32 0, i32 5
  %30827 = getelementptr inbounds %struct.Reg, %struct.Reg* %30826, i32 0, i32 0
  %RCX.i667 = bitcast %union.anon* %30827 to i64*
  %30828 = load i64, i64* %RCX.i667
  %30829 = add i64 %30828, 16
  %30830 = load i32, i32* %EAX.i666
  %30831 = zext i32 %30830 to i64
  %30832 = load i64, i64* %PC.i665
  %30833 = add i64 %30832, 3
  store i64 %30833, i64* %PC.i665
  %30834 = inttoptr i64 %30829 to i32*
  store i32 %30830, i32* %30834
  store %struct.Memory* %loadMem_4abee1, %struct.Memory** %MEMORY
  %loadMem_4abee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30836 = getelementptr inbounds %struct.GPR, %struct.GPR* %30835, i32 0, i32 33
  %30837 = getelementptr inbounds %struct.Reg, %struct.Reg* %30836, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %30837 to i64*
  %30838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30839 = getelementptr inbounds %struct.GPR, %struct.GPR* %30838, i32 0, i32 1
  %30840 = getelementptr inbounds %struct.Reg, %struct.Reg* %30839, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %30840 to i64*
  %30841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30842 = getelementptr inbounds %struct.GPR, %struct.GPR* %30841, i32 0, i32 15
  %30843 = getelementptr inbounds %struct.Reg, %struct.Reg* %30842, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %30843 to i64*
  %30844 = load i64, i64* %RBP.i664
  %30845 = sub i64 %30844, 656
  %30846 = load i64, i64* %PC.i662
  %30847 = add i64 %30846, 6
  store i64 %30847, i64* %PC.i662
  %30848 = inttoptr i64 %30845 to i32*
  %30849 = load i32, i32* %30848
  %30850 = zext i32 %30849 to i64
  store i64 %30850, i64* %RAX.i663, align 8
  store %struct.Memory* %loadMem_4abee4, %struct.Memory** %MEMORY
  %loadMem_4abeea = load %struct.Memory*, %struct.Memory** %MEMORY
  %30851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30852 = getelementptr inbounds %struct.GPR, %struct.GPR* %30851, i32 0, i32 33
  %30853 = getelementptr inbounds %struct.Reg, %struct.Reg* %30852, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %30853 to i64*
  %30854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30855 = getelementptr inbounds %struct.GPR, %struct.GPR* %30854, i32 0, i32 1
  %30856 = getelementptr inbounds %struct.Reg, %struct.Reg* %30855, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %30856 to i64*
  %30857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30858 = getelementptr inbounds %struct.GPR, %struct.GPR* %30857, i32 0, i32 15
  %30859 = getelementptr inbounds %struct.Reg, %struct.Reg* %30858, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %30859 to i64*
  %30860 = load i64, i64* %RAX.i660
  %30861 = load i64, i64* %RBP.i661
  %30862 = sub i64 %30861, 660
  %30863 = load i64, i64* %PC.i659
  %30864 = add i64 %30863, 6
  store i64 %30864, i64* %PC.i659
  %30865 = trunc i64 %30860 to i32
  %30866 = inttoptr i64 %30862 to i32*
  %30867 = load i32, i32* %30866
  %30868 = sub i32 %30865, %30867
  %30869 = zext i32 %30868 to i64
  store i64 %30869, i64* %RAX.i660, align 8
  %30870 = icmp ult i32 %30865, %30867
  %30871 = zext i1 %30870 to i8
  %30872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30871, i8* %30872, align 1
  %30873 = and i32 %30868, 255
  %30874 = call i32 @llvm.ctpop.i32(i32 %30873)
  %30875 = trunc i32 %30874 to i8
  %30876 = and i8 %30875, 1
  %30877 = xor i8 %30876, 1
  %30878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30877, i8* %30878, align 1
  %30879 = xor i32 %30867, %30865
  %30880 = xor i32 %30879, %30868
  %30881 = lshr i32 %30880, 4
  %30882 = trunc i32 %30881 to i8
  %30883 = and i8 %30882, 1
  %30884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30883, i8* %30884, align 1
  %30885 = icmp eq i32 %30868, 0
  %30886 = zext i1 %30885 to i8
  %30887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30886, i8* %30887, align 1
  %30888 = lshr i32 %30868, 31
  %30889 = trunc i32 %30888 to i8
  %30890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30889, i8* %30890, align 1
  %30891 = lshr i32 %30865, 31
  %30892 = lshr i32 %30867, 31
  %30893 = xor i32 %30892, %30891
  %30894 = xor i32 %30888, %30891
  %30895 = add i32 %30894, %30893
  %30896 = icmp eq i32 %30895, 2
  %30897 = zext i1 %30896 to i8
  %30898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30897, i8* %30898, align 1
  store %struct.Memory* %loadMem_4abeea, %struct.Memory** %MEMORY
  %loadMem_4abef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30900 = getelementptr inbounds %struct.GPR, %struct.GPR* %30899, i32 0, i32 33
  %30901 = getelementptr inbounds %struct.Reg, %struct.Reg* %30900, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %30901 to i64*
  %30902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30903 = getelementptr inbounds %struct.GPR, %struct.GPR* %30902, i32 0, i32 5
  %30904 = getelementptr inbounds %struct.Reg, %struct.Reg* %30903, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %30904 to i64*
  %30905 = load i64, i64* %PC.i657
  %30906 = add i64 %30905, 8
  store i64 %30906, i64* %PC.i657
  %30907 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %30907, i64* %RCX.i658, align 8
  store %struct.Memory* %loadMem_4abef0, %struct.Memory** %MEMORY
  %loadMem_4abef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30909 = getelementptr inbounds %struct.GPR, %struct.GPR* %30908, i32 0, i32 33
  %30910 = getelementptr inbounds %struct.Reg, %struct.Reg* %30909, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %30910 to i64*
  %30911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30912 = getelementptr inbounds %struct.GPR, %struct.GPR* %30911, i32 0, i32 5
  %30913 = getelementptr inbounds %struct.Reg, %struct.Reg* %30912, i32 0, i32 0
  %RCX.i656 = bitcast %union.anon* %30913 to i64*
  %30914 = load i64, i64* %RCX.i656
  %30915 = load i64, i64* %PC.i655
  %30916 = add i64 %30915, 7
  store i64 %30916, i64* %PC.i655
  %30917 = add i64 13112, %30914
  store i64 %30917, i64* %RCX.i656, align 8
  %30918 = icmp ult i64 %30917, %30914
  %30919 = icmp ult i64 %30917, 13112
  %30920 = or i1 %30918, %30919
  %30921 = zext i1 %30920 to i8
  %30922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30921, i8* %30922, align 1
  %30923 = trunc i64 %30917 to i32
  %30924 = and i32 %30923, 255
  %30925 = call i32 @llvm.ctpop.i32(i32 %30924)
  %30926 = trunc i32 %30925 to i8
  %30927 = and i8 %30926, 1
  %30928 = xor i8 %30927, 1
  %30929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30928, i8* %30929, align 1
  %30930 = xor i64 13112, %30914
  %30931 = xor i64 %30930, %30917
  %30932 = lshr i64 %30931, 4
  %30933 = trunc i64 %30932 to i8
  %30934 = and i8 %30933, 1
  %30935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30934, i8* %30935, align 1
  %30936 = icmp eq i64 %30917, 0
  %30937 = zext i1 %30936 to i8
  %30938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30937, i8* %30938, align 1
  %30939 = lshr i64 %30917, 63
  %30940 = trunc i64 %30939 to i8
  %30941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30940, i8* %30941, align 1
  %30942 = lshr i64 %30914, 63
  %30943 = xor i64 %30939, %30942
  %30944 = add i64 %30943, %30939
  %30945 = icmp eq i64 %30944, 2
  %30946 = zext i1 %30945 to i8
  %30947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30946, i8* %30947, align 1
  store %struct.Memory* %loadMem_4abef8, %struct.Memory** %MEMORY
  %loadMem_4abeff = load %struct.Memory*, %struct.Memory** %MEMORY
  %30948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30949 = getelementptr inbounds %struct.GPR, %struct.GPR* %30948, i32 0, i32 33
  %30950 = getelementptr inbounds %struct.Reg, %struct.Reg* %30949, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %30950 to i64*
  %30951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30952 = getelementptr inbounds %struct.GPR, %struct.GPR* %30951, i32 0, i32 7
  %30953 = getelementptr inbounds %struct.Reg, %struct.Reg* %30952, i32 0, i32 0
  %RDX.i653 = bitcast %union.anon* %30953 to i64*
  %30954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30955 = getelementptr inbounds %struct.GPR, %struct.GPR* %30954, i32 0, i32 15
  %30956 = getelementptr inbounds %struct.Reg, %struct.Reg* %30955, i32 0, i32 0
  %RBP.i654 = bitcast %union.anon* %30956 to i64*
  %30957 = load i64, i64* %RBP.i654
  %30958 = sub i64 %30957, 24
  %30959 = load i64, i64* %PC.i652
  %30960 = add i64 %30959, 4
  store i64 %30960, i64* %PC.i652
  %30961 = inttoptr i64 %30958 to i32*
  %30962 = load i32, i32* %30961
  %30963 = sext i32 %30962 to i64
  store i64 %30963, i64* %RDX.i653, align 8
  store %struct.Memory* %loadMem_4abeff, %struct.Memory** %MEMORY
  %loadMem_4abf03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30965 = getelementptr inbounds %struct.GPR, %struct.GPR* %30964, i32 0, i32 33
  %30966 = getelementptr inbounds %struct.Reg, %struct.Reg* %30965, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %30966 to i64*
  %30967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30968 = getelementptr inbounds %struct.GPR, %struct.GPR* %30967, i32 0, i32 7
  %30969 = getelementptr inbounds %struct.Reg, %struct.Reg* %30968, i32 0, i32 0
  %RDX.i651 = bitcast %union.anon* %30969 to i64*
  %30970 = load i64, i64* %RDX.i651
  %30971 = load i64, i64* %PC.i650
  %30972 = add i64 %30971, 4
  store i64 %30972, i64* %PC.i650
  %30973 = shl i64 %30970, 5
  %30974 = icmp slt i64 %30973, 0
  %30975 = shl i64 %30973, 1
  store i64 %30975, i64* %RDX.i651, align 8
  %30976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %30977 = zext i1 %30974 to i8
  store i8 %30977, i8* %30976, align 1
  %30978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %30979 = trunc i64 %30975 to i32
  %30980 = and i32 %30979, 254
  %30981 = call i32 @llvm.ctpop.i32(i32 %30980)
  %30982 = trunc i32 %30981 to i8
  %30983 = and i8 %30982, 1
  %30984 = xor i8 %30983, 1
  store i8 %30984, i8* %30978, align 1
  %30985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30985, align 1
  %30986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %30987 = icmp eq i64 %30975, 0
  %30988 = zext i1 %30987 to i8
  store i8 %30988, i8* %30986, align 1
  %30989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30990 = lshr i64 %30975, 63
  %30991 = trunc i64 %30990 to i8
  store i8 %30991, i8* %30989, align 1
  %30992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %30992, align 1
  store %struct.Memory* %loadMem_4abf03, %struct.Memory** %MEMORY
  %loadMem_4abf07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %30993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30994 = getelementptr inbounds %struct.GPR, %struct.GPR* %30993, i32 0, i32 33
  %30995 = getelementptr inbounds %struct.Reg, %struct.Reg* %30994, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %30995 to i64*
  %30996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30997 = getelementptr inbounds %struct.GPR, %struct.GPR* %30996, i32 0, i32 5
  %30998 = getelementptr inbounds %struct.Reg, %struct.Reg* %30997, i32 0, i32 0
  %RCX.i648 = bitcast %union.anon* %30998 to i64*
  %30999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31000 = getelementptr inbounds %struct.GPR, %struct.GPR* %30999, i32 0, i32 7
  %31001 = getelementptr inbounds %struct.Reg, %struct.Reg* %31000, i32 0, i32 0
  %RDX.i649 = bitcast %union.anon* %31001 to i64*
  %31002 = load i64, i64* %RCX.i648
  %31003 = load i64, i64* %RDX.i649
  %31004 = load i64, i64* %PC.i647
  %31005 = add i64 %31004, 3
  store i64 %31005, i64* %PC.i647
  %31006 = add i64 %31003, %31002
  store i64 %31006, i64* %RCX.i648, align 8
  %31007 = icmp ult i64 %31006, %31002
  %31008 = icmp ult i64 %31006, %31003
  %31009 = or i1 %31007, %31008
  %31010 = zext i1 %31009 to i8
  %31011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31010, i8* %31011, align 1
  %31012 = trunc i64 %31006 to i32
  %31013 = and i32 %31012, 255
  %31014 = call i32 @llvm.ctpop.i32(i32 %31013)
  %31015 = trunc i32 %31014 to i8
  %31016 = and i8 %31015, 1
  %31017 = xor i8 %31016, 1
  %31018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31017, i8* %31018, align 1
  %31019 = xor i64 %31003, %31002
  %31020 = xor i64 %31019, %31006
  %31021 = lshr i64 %31020, 4
  %31022 = trunc i64 %31021 to i8
  %31023 = and i8 %31022, 1
  %31024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31023, i8* %31024, align 1
  %31025 = icmp eq i64 %31006, 0
  %31026 = zext i1 %31025 to i8
  %31027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31026, i8* %31027, align 1
  %31028 = lshr i64 %31006, 63
  %31029 = trunc i64 %31028 to i8
  %31030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31029, i8* %31030, align 1
  %31031 = lshr i64 %31002, 63
  %31032 = lshr i64 %31003, 63
  %31033 = xor i64 %31028, %31031
  %31034 = xor i64 %31028, %31032
  %31035 = add i64 %31033, %31034
  %31036 = icmp eq i64 %31035, 2
  %31037 = zext i1 %31036 to i8
  %31038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31037, i8* %31038, align 1
  store %struct.Memory* %loadMem_4abf07, %struct.Memory** %MEMORY
  %loadMem_4abf0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %31039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31040 = getelementptr inbounds %struct.GPR, %struct.GPR* %31039, i32 0, i32 33
  %31041 = getelementptr inbounds %struct.Reg, %struct.Reg* %31040, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %31041 to i64*
  %31042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31043 = getelementptr inbounds %struct.GPR, %struct.GPR* %31042, i32 0, i32 1
  %31044 = getelementptr inbounds %struct.Reg, %struct.Reg* %31043, i32 0, i32 0
  %EAX.i645 = bitcast %union.anon* %31044 to i32*
  %31045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31046 = getelementptr inbounds %struct.GPR, %struct.GPR* %31045, i32 0, i32 5
  %31047 = getelementptr inbounds %struct.Reg, %struct.Reg* %31046, i32 0, i32 0
  %RCX.i646 = bitcast %union.anon* %31047 to i64*
  %31048 = load i64, i64* %RCX.i646
  %31049 = add i64 %31048, 20
  %31050 = load i32, i32* %EAX.i645
  %31051 = zext i32 %31050 to i64
  %31052 = load i64, i64* %PC.i644
  %31053 = add i64 %31052, 3
  store i64 %31053, i64* %PC.i644
  %31054 = inttoptr i64 %31049 to i32*
  store i32 %31050, i32* %31054
  store %struct.Memory* %loadMem_4abf0a, %struct.Memory** %MEMORY
  %loadMem_4abf0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %31055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31056 = getelementptr inbounds %struct.GPR, %struct.GPR* %31055, i32 0, i32 33
  %31057 = getelementptr inbounds %struct.Reg, %struct.Reg* %31056, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %31057 to i64*
  %31058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31059 = getelementptr inbounds %struct.GPR, %struct.GPR* %31058, i32 0, i32 1
  %31060 = getelementptr inbounds %struct.Reg, %struct.Reg* %31059, i32 0, i32 0
  %RAX.i642 = bitcast %union.anon* %31060 to i64*
  %31061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31062 = getelementptr inbounds %struct.GPR, %struct.GPR* %31061, i32 0, i32 15
  %31063 = getelementptr inbounds %struct.Reg, %struct.Reg* %31062, i32 0, i32 0
  %RBP.i643 = bitcast %union.anon* %31063 to i64*
  %31064 = load i64, i64* %RBP.i643
  %31065 = sub i64 %31064, 664
  %31066 = load i64, i64* %PC.i641
  %31067 = add i64 %31066, 6
  store i64 %31067, i64* %PC.i641
  %31068 = inttoptr i64 %31065 to i32*
  %31069 = load i32, i32* %31068
  %31070 = zext i32 %31069 to i64
  store i64 %31070, i64* %RAX.i642, align 8
  store %struct.Memory* %loadMem_4abf0d, %struct.Memory** %MEMORY
  %loadMem_4abf13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31072 = getelementptr inbounds %struct.GPR, %struct.GPR* %31071, i32 0, i32 33
  %31073 = getelementptr inbounds %struct.Reg, %struct.Reg* %31072, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %31073 to i64*
  %31074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31075 = getelementptr inbounds %struct.GPR, %struct.GPR* %31074, i32 0, i32 1
  %31076 = getelementptr inbounds %struct.Reg, %struct.Reg* %31075, i32 0, i32 0
  %RAX.i639 = bitcast %union.anon* %31076 to i64*
  %31077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31078 = getelementptr inbounds %struct.GPR, %struct.GPR* %31077, i32 0, i32 15
  %31079 = getelementptr inbounds %struct.Reg, %struct.Reg* %31078, i32 0, i32 0
  %RBP.i640 = bitcast %union.anon* %31079 to i64*
  %31080 = load i64, i64* %RAX.i639
  %31081 = load i64, i64* %RBP.i640
  %31082 = sub i64 %31081, 652
  %31083 = load i64, i64* %PC.i638
  %31084 = add i64 %31083, 6
  store i64 %31084, i64* %PC.i638
  %31085 = trunc i64 %31080 to i32
  %31086 = inttoptr i64 %31082 to i32*
  %31087 = load i32, i32* %31086
  %31088 = sub i32 %31085, %31087
  %31089 = zext i32 %31088 to i64
  store i64 %31089, i64* %RAX.i639, align 8
  %31090 = icmp ult i32 %31085, %31087
  %31091 = zext i1 %31090 to i8
  %31092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31091, i8* %31092, align 1
  %31093 = and i32 %31088, 255
  %31094 = call i32 @llvm.ctpop.i32(i32 %31093)
  %31095 = trunc i32 %31094 to i8
  %31096 = and i8 %31095, 1
  %31097 = xor i8 %31096, 1
  %31098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31097, i8* %31098, align 1
  %31099 = xor i32 %31087, %31085
  %31100 = xor i32 %31099, %31088
  %31101 = lshr i32 %31100, 4
  %31102 = trunc i32 %31101 to i8
  %31103 = and i8 %31102, 1
  %31104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31103, i8* %31104, align 1
  %31105 = icmp eq i32 %31088, 0
  %31106 = zext i1 %31105 to i8
  %31107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31106, i8* %31107, align 1
  %31108 = lshr i32 %31088, 31
  %31109 = trunc i32 %31108 to i8
  %31110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31109, i8* %31110, align 1
  %31111 = lshr i32 %31085, 31
  %31112 = lshr i32 %31087, 31
  %31113 = xor i32 %31112, %31111
  %31114 = xor i32 %31108, %31111
  %31115 = add i32 %31114, %31113
  %31116 = icmp eq i32 %31115, 2
  %31117 = zext i1 %31116 to i8
  %31118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31117, i8* %31118, align 1
  store %struct.Memory* %loadMem_4abf13, %struct.Memory** %MEMORY
  %loadMem_4abf19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31120 = getelementptr inbounds %struct.GPR, %struct.GPR* %31119, i32 0, i32 33
  %31121 = getelementptr inbounds %struct.Reg, %struct.Reg* %31120, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %31121 to i64*
  %31122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31123 = getelementptr inbounds %struct.GPR, %struct.GPR* %31122, i32 0, i32 5
  %31124 = getelementptr inbounds %struct.Reg, %struct.Reg* %31123, i32 0, i32 0
  %RCX.i637 = bitcast %union.anon* %31124 to i64*
  %31125 = load i64, i64* %PC.i636
  %31126 = add i64 %31125, 8
  store i64 %31126, i64* %PC.i636
  %31127 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %31127, i64* %RCX.i637, align 8
  store %struct.Memory* %loadMem_4abf19, %struct.Memory** %MEMORY
  %loadMem_4abf21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31129 = getelementptr inbounds %struct.GPR, %struct.GPR* %31128, i32 0, i32 33
  %31130 = getelementptr inbounds %struct.Reg, %struct.Reg* %31129, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %31130 to i64*
  %31131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31132 = getelementptr inbounds %struct.GPR, %struct.GPR* %31131, i32 0, i32 5
  %31133 = getelementptr inbounds %struct.Reg, %struct.Reg* %31132, i32 0, i32 0
  %RCX.i635 = bitcast %union.anon* %31133 to i64*
  %31134 = load i64, i64* %RCX.i635
  %31135 = load i64, i64* %PC.i634
  %31136 = add i64 %31135, 7
  store i64 %31136, i64* %PC.i634
  %31137 = add i64 13112, %31134
  store i64 %31137, i64* %RCX.i635, align 8
  %31138 = icmp ult i64 %31137, %31134
  %31139 = icmp ult i64 %31137, 13112
  %31140 = or i1 %31138, %31139
  %31141 = zext i1 %31140 to i8
  %31142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31141, i8* %31142, align 1
  %31143 = trunc i64 %31137 to i32
  %31144 = and i32 %31143, 255
  %31145 = call i32 @llvm.ctpop.i32(i32 %31144)
  %31146 = trunc i32 %31145 to i8
  %31147 = and i8 %31146, 1
  %31148 = xor i8 %31147, 1
  %31149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31148, i8* %31149, align 1
  %31150 = xor i64 13112, %31134
  %31151 = xor i64 %31150, %31137
  %31152 = lshr i64 %31151, 4
  %31153 = trunc i64 %31152 to i8
  %31154 = and i8 %31153, 1
  %31155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31154, i8* %31155, align 1
  %31156 = icmp eq i64 %31137, 0
  %31157 = zext i1 %31156 to i8
  %31158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31157, i8* %31158, align 1
  %31159 = lshr i64 %31137, 63
  %31160 = trunc i64 %31159 to i8
  %31161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31160, i8* %31161, align 1
  %31162 = lshr i64 %31134, 63
  %31163 = xor i64 %31159, %31162
  %31164 = add i64 %31163, %31159
  %31165 = icmp eq i64 %31164, 2
  %31166 = zext i1 %31165 to i8
  %31167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31166, i8* %31167, align 1
  store %struct.Memory* %loadMem_4abf21, %struct.Memory** %MEMORY
  %loadMem_4abf28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31169 = getelementptr inbounds %struct.GPR, %struct.GPR* %31168, i32 0, i32 33
  %31170 = getelementptr inbounds %struct.Reg, %struct.Reg* %31169, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %31170 to i64*
  %31171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31172 = getelementptr inbounds %struct.GPR, %struct.GPR* %31171, i32 0, i32 7
  %31173 = getelementptr inbounds %struct.Reg, %struct.Reg* %31172, i32 0, i32 0
  %RDX.i632 = bitcast %union.anon* %31173 to i64*
  %31174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31175 = getelementptr inbounds %struct.GPR, %struct.GPR* %31174, i32 0, i32 15
  %31176 = getelementptr inbounds %struct.Reg, %struct.Reg* %31175, i32 0, i32 0
  %RBP.i633 = bitcast %union.anon* %31176 to i64*
  %31177 = load i64, i64* %RBP.i633
  %31178 = sub i64 %31177, 24
  %31179 = load i64, i64* %PC.i631
  %31180 = add i64 %31179, 4
  store i64 %31180, i64* %PC.i631
  %31181 = inttoptr i64 %31178 to i32*
  %31182 = load i32, i32* %31181
  %31183 = sext i32 %31182 to i64
  store i64 %31183, i64* %RDX.i632, align 8
  store %struct.Memory* %loadMem_4abf28, %struct.Memory** %MEMORY
  %loadMem_4abf2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %31184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31185 = getelementptr inbounds %struct.GPR, %struct.GPR* %31184, i32 0, i32 33
  %31186 = getelementptr inbounds %struct.Reg, %struct.Reg* %31185, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %31186 to i64*
  %31187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31188 = getelementptr inbounds %struct.GPR, %struct.GPR* %31187, i32 0, i32 7
  %31189 = getelementptr inbounds %struct.Reg, %struct.Reg* %31188, i32 0, i32 0
  %RDX.i630 = bitcast %union.anon* %31189 to i64*
  %31190 = load i64, i64* %RDX.i630
  %31191 = load i64, i64* %PC.i629
  %31192 = add i64 %31191, 4
  store i64 %31192, i64* %PC.i629
  %31193 = shl i64 %31190, 5
  %31194 = icmp slt i64 %31193, 0
  %31195 = shl i64 %31193, 1
  store i64 %31195, i64* %RDX.i630, align 8
  %31196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %31197 = zext i1 %31194 to i8
  store i8 %31197, i8* %31196, align 1
  %31198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %31199 = trunc i64 %31195 to i32
  %31200 = and i32 %31199, 254
  %31201 = call i32 @llvm.ctpop.i32(i32 %31200)
  %31202 = trunc i32 %31201 to i8
  %31203 = and i8 %31202, 1
  %31204 = xor i8 %31203, 1
  store i8 %31204, i8* %31198, align 1
  %31205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %31205, align 1
  %31206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %31207 = icmp eq i64 %31195, 0
  %31208 = zext i1 %31207 to i8
  store i8 %31208, i8* %31206, align 1
  %31209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31210 = lshr i64 %31195, 63
  %31211 = trunc i64 %31210 to i8
  store i8 %31211, i8* %31209, align 1
  %31212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31212, align 1
  store %struct.Memory* %loadMem_4abf2c, %struct.Memory** %MEMORY
  %loadMem_4abf30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31214 = getelementptr inbounds %struct.GPR, %struct.GPR* %31213, i32 0, i32 33
  %31215 = getelementptr inbounds %struct.Reg, %struct.Reg* %31214, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %31215 to i64*
  %31216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31217 = getelementptr inbounds %struct.GPR, %struct.GPR* %31216, i32 0, i32 5
  %31218 = getelementptr inbounds %struct.Reg, %struct.Reg* %31217, i32 0, i32 0
  %RCX.i627 = bitcast %union.anon* %31218 to i64*
  %31219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31220 = getelementptr inbounds %struct.GPR, %struct.GPR* %31219, i32 0, i32 7
  %31221 = getelementptr inbounds %struct.Reg, %struct.Reg* %31220, i32 0, i32 0
  %RDX.i628 = bitcast %union.anon* %31221 to i64*
  %31222 = load i64, i64* %RCX.i627
  %31223 = load i64, i64* %RDX.i628
  %31224 = load i64, i64* %PC.i626
  %31225 = add i64 %31224, 3
  store i64 %31225, i64* %PC.i626
  %31226 = add i64 %31223, %31222
  store i64 %31226, i64* %RCX.i627, align 8
  %31227 = icmp ult i64 %31226, %31222
  %31228 = icmp ult i64 %31226, %31223
  %31229 = or i1 %31227, %31228
  %31230 = zext i1 %31229 to i8
  %31231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31230, i8* %31231, align 1
  %31232 = trunc i64 %31226 to i32
  %31233 = and i32 %31232, 255
  %31234 = call i32 @llvm.ctpop.i32(i32 %31233)
  %31235 = trunc i32 %31234 to i8
  %31236 = and i8 %31235, 1
  %31237 = xor i8 %31236, 1
  %31238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31237, i8* %31238, align 1
  %31239 = xor i64 %31223, %31222
  %31240 = xor i64 %31239, %31226
  %31241 = lshr i64 %31240, 4
  %31242 = trunc i64 %31241 to i8
  %31243 = and i8 %31242, 1
  %31244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31243, i8* %31244, align 1
  %31245 = icmp eq i64 %31226, 0
  %31246 = zext i1 %31245 to i8
  %31247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31246, i8* %31247, align 1
  %31248 = lshr i64 %31226, 63
  %31249 = trunc i64 %31248 to i8
  %31250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31249, i8* %31250, align 1
  %31251 = lshr i64 %31222, 63
  %31252 = lshr i64 %31223, 63
  %31253 = xor i64 %31248, %31251
  %31254 = xor i64 %31248, %31252
  %31255 = add i64 %31253, %31254
  %31256 = icmp eq i64 %31255, 2
  %31257 = zext i1 %31256 to i8
  %31258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31257, i8* %31258, align 1
  store %struct.Memory* %loadMem_4abf30, %struct.Memory** %MEMORY
  %loadMem_4abf33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31260 = getelementptr inbounds %struct.GPR, %struct.GPR* %31259, i32 0, i32 33
  %31261 = getelementptr inbounds %struct.Reg, %struct.Reg* %31260, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %31261 to i64*
  %31262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31263 = getelementptr inbounds %struct.GPR, %struct.GPR* %31262, i32 0, i32 1
  %31264 = getelementptr inbounds %struct.Reg, %struct.Reg* %31263, i32 0, i32 0
  %EAX.i624 = bitcast %union.anon* %31264 to i32*
  %31265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31266 = getelementptr inbounds %struct.GPR, %struct.GPR* %31265, i32 0, i32 5
  %31267 = getelementptr inbounds %struct.Reg, %struct.Reg* %31266, i32 0, i32 0
  %RCX.i625 = bitcast %union.anon* %31267 to i64*
  %31268 = load i64, i64* %RCX.i625
  %31269 = add i64 %31268, 24
  %31270 = load i32, i32* %EAX.i624
  %31271 = zext i32 %31270 to i64
  %31272 = load i64, i64* %PC.i623
  %31273 = add i64 %31272, 3
  store i64 %31273, i64* %PC.i623
  %31274 = inttoptr i64 %31269 to i32*
  store i32 %31270, i32* %31274
  store %struct.Memory* %loadMem_4abf33, %struct.Memory** %MEMORY
  %loadMem_4abf36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31276 = getelementptr inbounds %struct.GPR, %struct.GPR* %31275, i32 0, i32 33
  %31277 = getelementptr inbounds %struct.Reg, %struct.Reg* %31276, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %31277 to i64*
  %31278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31279 = getelementptr inbounds %struct.GPR, %struct.GPR* %31278, i32 0, i32 1
  %31280 = getelementptr inbounds %struct.Reg, %struct.Reg* %31279, i32 0, i32 0
  %RAX.i621 = bitcast %union.anon* %31280 to i64*
  %31281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31282 = getelementptr inbounds %struct.GPR, %struct.GPR* %31281, i32 0, i32 15
  %31283 = getelementptr inbounds %struct.Reg, %struct.Reg* %31282, i32 0, i32 0
  %RBP.i622 = bitcast %union.anon* %31283 to i64*
  %31284 = load i64, i64* %RBP.i622
  %31285 = sub i64 %31284, 672
  %31286 = load i64, i64* %PC.i620
  %31287 = add i64 %31286, 6
  store i64 %31287, i64* %PC.i620
  %31288 = inttoptr i64 %31285 to i32*
  %31289 = load i32, i32* %31288
  %31290 = zext i32 %31289 to i64
  store i64 %31290, i64* %RAX.i621, align 8
  store %struct.Memory* %loadMem_4abf36, %struct.Memory** %MEMORY
  %loadMem_4abf3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %31291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31292 = getelementptr inbounds %struct.GPR, %struct.GPR* %31291, i32 0, i32 33
  %31293 = getelementptr inbounds %struct.Reg, %struct.Reg* %31292, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %31293 to i64*
  %31294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31295 = getelementptr inbounds %struct.GPR, %struct.GPR* %31294, i32 0, i32 1
  %31296 = getelementptr inbounds %struct.Reg, %struct.Reg* %31295, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %31296 to i64*
  %31297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31298 = getelementptr inbounds %struct.GPR, %struct.GPR* %31297, i32 0, i32 15
  %31299 = getelementptr inbounds %struct.Reg, %struct.Reg* %31298, i32 0, i32 0
  %RBP.i619 = bitcast %union.anon* %31299 to i64*
  %31300 = load i64, i64* %RAX.i618
  %31301 = load i64, i64* %RBP.i619
  %31302 = sub i64 %31301, 644
  %31303 = load i64, i64* %PC.i617
  %31304 = add i64 %31303, 6
  store i64 %31304, i64* %PC.i617
  %31305 = trunc i64 %31300 to i32
  %31306 = inttoptr i64 %31302 to i32*
  %31307 = load i32, i32* %31306
  %31308 = sub i32 %31305, %31307
  %31309 = zext i32 %31308 to i64
  store i64 %31309, i64* %RAX.i618, align 8
  %31310 = icmp ult i32 %31305, %31307
  %31311 = zext i1 %31310 to i8
  %31312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31311, i8* %31312, align 1
  %31313 = and i32 %31308, 255
  %31314 = call i32 @llvm.ctpop.i32(i32 %31313)
  %31315 = trunc i32 %31314 to i8
  %31316 = and i8 %31315, 1
  %31317 = xor i8 %31316, 1
  %31318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31317, i8* %31318, align 1
  %31319 = xor i32 %31307, %31305
  %31320 = xor i32 %31319, %31308
  %31321 = lshr i32 %31320, 4
  %31322 = trunc i32 %31321 to i8
  %31323 = and i8 %31322, 1
  %31324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31323, i8* %31324, align 1
  %31325 = icmp eq i32 %31308, 0
  %31326 = zext i1 %31325 to i8
  %31327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31326, i8* %31327, align 1
  %31328 = lshr i32 %31308, 31
  %31329 = trunc i32 %31328 to i8
  %31330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31329, i8* %31330, align 1
  %31331 = lshr i32 %31305, 31
  %31332 = lshr i32 %31307, 31
  %31333 = xor i32 %31332, %31331
  %31334 = xor i32 %31328, %31331
  %31335 = add i32 %31334, %31333
  %31336 = icmp eq i32 %31335, 2
  %31337 = zext i1 %31336 to i8
  %31338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31337, i8* %31338, align 1
  store %struct.Memory* %loadMem_4abf3c, %struct.Memory** %MEMORY
  %loadMem_4abf42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31340 = getelementptr inbounds %struct.GPR, %struct.GPR* %31339, i32 0, i32 33
  %31341 = getelementptr inbounds %struct.Reg, %struct.Reg* %31340, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %31341 to i64*
  %31342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31343 = getelementptr inbounds %struct.GPR, %struct.GPR* %31342, i32 0, i32 5
  %31344 = getelementptr inbounds %struct.Reg, %struct.Reg* %31343, i32 0, i32 0
  %RCX.i616 = bitcast %union.anon* %31344 to i64*
  %31345 = load i64, i64* %PC.i615
  %31346 = add i64 %31345, 8
  store i64 %31346, i64* %PC.i615
  %31347 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %31347, i64* %RCX.i616, align 8
  store %struct.Memory* %loadMem_4abf42, %struct.Memory** %MEMORY
  %loadMem_4abf4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %31348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31349 = getelementptr inbounds %struct.GPR, %struct.GPR* %31348, i32 0, i32 33
  %31350 = getelementptr inbounds %struct.Reg, %struct.Reg* %31349, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %31350 to i64*
  %31351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31352 = getelementptr inbounds %struct.GPR, %struct.GPR* %31351, i32 0, i32 5
  %31353 = getelementptr inbounds %struct.Reg, %struct.Reg* %31352, i32 0, i32 0
  %RCX.i614 = bitcast %union.anon* %31353 to i64*
  %31354 = load i64, i64* %RCX.i614
  %31355 = load i64, i64* %PC.i613
  %31356 = add i64 %31355, 7
  store i64 %31356, i64* %PC.i613
  %31357 = add i64 13112, %31354
  store i64 %31357, i64* %RCX.i614, align 8
  %31358 = icmp ult i64 %31357, %31354
  %31359 = icmp ult i64 %31357, 13112
  %31360 = or i1 %31358, %31359
  %31361 = zext i1 %31360 to i8
  %31362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31361, i8* %31362, align 1
  %31363 = trunc i64 %31357 to i32
  %31364 = and i32 %31363, 255
  %31365 = call i32 @llvm.ctpop.i32(i32 %31364)
  %31366 = trunc i32 %31365 to i8
  %31367 = and i8 %31366, 1
  %31368 = xor i8 %31367, 1
  %31369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31368, i8* %31369, align 1
  %31370 = xor i64 13112, %31354
  %31371 = xor i64 %31370, %31357
  %31372 = lshr i64 %31371, 4
  %31373 = trunc i64 %31372 to i8
  %31374 = and i8 %31373, 1
  %31375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31374, i8* %31375, align 1
  %31376 = icmp eq i64 %31357, 0
  %31377 = zext i1 %31376 to i8
  %31378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31377, i8* %31378, align 1
  %31379 = lshr i64 %31357, 63
  %31380 = trunc i64 %31379 to i8
  %31381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31380, i8* %31381, align 1
  %31382 = lshr i64 %31354, 63
  %31383 = xor i64 %31379, %31382
  %31384 = add i64 %31383, %31379
  %31385 = icmp eq i64 %31384, 2
  %31386 = zext i1 %31385 to i8
  %31387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31386, i8* %31387, align 1
  store %struct.Memory* %loadMem_4abf4a, %struct.Memory** %MEMORY
  %loadMem_4abf51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31389 = getelementptr inbounds %struct.GPR, %struct.GPR* %31388, i32 0, i32 33
  %31390 = getelementptr inbounds %struct.Reg, %struct.Reg* %31389, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %31390 to i64*
  %31391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31392 = getelementptr inbounds %struct.GPR, %struct.GPR* %31391, i32 0, i32 7
  %31393 = getelementptr inbounds %struct.Reg, %struct.Reg* %31392, i32 0, i32 0
  %RDX.i611 = bitcast %union.anon* %31393 to i64*
  %31394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31395 = getelementptr inbounds %struct.GPR, %struct.GPR* %31394, i32 0, i32 15
  %31396 = getelementptr inbounds %struct.Reg, %struct.Reg* %31395, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %31396 to i64*
  %31397 = load i64, i64* %RBP.i612
  %31398 = sub i64 %31397, 24
  %31399 = load i64, i64* %PC.i610
  %31400 = add i64 %31399, 4
  store i64 %31400, i64* %PC.i610
  %31401 = inttoptr i64 %31398 to i32*
  %31402 = load i32, i32* %31401
  %31403 = sext i32 %31402 to i64
  store i64 %31403, i64* %RDX.i611, align 8
  store %struct.Memory* %loadMem_4abf51, %struct.Memory** %MEMORY
  %loadMem_4abf55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31405 = getelementptr inbounds %struct.GPR, %struct.GPR* %31404, i32 0, i32 33
  %31406 = getelementptr inbounds %struct.Reg, %struct.Reg* %31405, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %31406 to i64*
  %31407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31408 = getelementptr inbounds %struct.GPR, %struct.GPR* %31407, i32 0, i32 7
  %31409 = getelementptr inbounds %struct.Reg, %struct.Reg* %31408, i32 0, i32 0
  %RDX.i609 = bitcast %union.anon* %31409 to i64*
  %31410 = load i64, i64* %RDX.i609
  %31411 = load i64, i64* %PC.i608
  %31412 = add i64 %31411, 4
  store i64 %31412, i64* %PC.i608
  %31413 = shl i64 %31410, 5
  %31414 = icmp slt i64 %31413, 0
  %31415 = shl i64 %31413, 1
  store i64 %31415, i64* %RDX.i609, align 8
  %31416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %31417 = zext i1 %31414 to i8
  store i8 %31417, i8* %31416, align 1
  %31418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %31419 = trunc i64 %31415 to i32
  %31420 = and i32 %31419, 254
  %31421 = call i32 @llvm.ctpop.i32(i32 %31420)
  %31422 = trunc i32 %31421 to i8
  %31423 = and i8 %31422, 1
  %31424 = xor i8 %31423, 1
  store i8 %31424, i8* %31418, align 1
  %31425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %31425, align 1
  %31426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %31427 = icmp eq i64 %31415, 0
  %31428 = zext i1 %31427 to i8
  store i8 %31428, i8* %31426, align 1
  %31429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31430 = lshr i64 %31415, 63
  %31431 = trunc i64 %31430 to i8
  store i8 %31431, i8* %31429, align 1
  %31432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31432, align 1
  store %struct.Memory* %loadMem_4abf55, %struct.Memory** %MEMORY
  %loadMem_4abf59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31434 = getelementptr inbounds %struct.GPR, %struct.GPR* %31433, i32 0, i32 33
  %31435 = getelementptr inbounds %struct.Reg, %struct.Reg* %31434, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %31435 to i64*
  %31436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31437 = getelementptr inbounds %struct.GPR, %struct.GPR* %31436, i32 0, i32 5
  %31438 = getelementptr inbounds %struct.Reg, %struct.Reg* %31437, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %31438 to i64*
  %31439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31440 = getelementptr inbounds %struct.GPR, %struct.GPR* %31439, i32 0, i32 7
  %31441 = getelementptr inbounds %struct.Reg, %struct.Reg* %31440, i32 0, i32 0
  %RDX.i607 = bitcast %union.anon* %31441 to i64*
  %31442 = load i64, i64* %RCX.i606
  %31443 = load i64, i64* %RDX.i607
  %31444 = load i64, i64* %PC.i605
  %31445 = add i64 %31444, 3
  store i64 %31445, i64* %PC.i605
  %31446 = add i64 %31443, %31442
  store i64 %31446, i64* %RCX.i606, align 8
  %31447 = icmp ult i64 %31446, %31442
  %31448 = icmp ult i64 %31446, %31443
  %31449 = or i1 %31447, %31448
  %31450 = zext i1 %31449 to i8
  %31451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31450, i8* %31451, align 1
  %31452 = trunc i64 %31446 to i32
  %31453 = and i32 %31452, 255
  %31454 = call i32 @llvm.ctpop.i32(i32 %31453)
  %31455 = trunc i32 %31454 to i8
  %31456 = and i8 %31455, 1
  %31457 = xor i8 %31456, 1
  %31458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31457, i8* %31458, align 1
  %31459 = xor i64 %31443, %31442
  %31460 = xor i64 %31459, %31446
  %31461 = lshr i64 %31460, 4
  %31462 = trunc i64 %31461 to i8
  %31463 = and i8 %31462, 1
  %31464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31463, i8* %31464, align 1
  %31465 = icmp eq i64 %31446, 0
  %31466 = zext i1 %31465 to i8
  %31467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31466, i8* %31467, align 1
  %31468 = lshr i64 %31446, 63
  %31469 = trunc i64 %31468 to i8
  %31470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31469, i8* %31470, align 1
  %31471 = lshr i64 %31442, 63
  %31472 = lshr i64 %31443, 63
  %31473 = xor i64 %31468, %31471
  %31474 = xor i64 %31468, %31472
  %31475 = add i64 %31473, %31474
  %31476 = icmp eq i64 %31475, 2
  %31477 = zext i1 %31476 to i8
  %31478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31477, i8* %31478, align 1
  store %struct.Memory* %loadMem_4abf59, %struct.Memory** %MEMORY
  %loadMem_4abf5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %31479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31480 = getelementptr inbounds %struct.GPR, %struct.GPR* %31479, i32 0, i32 33
  %31481 = getelementptr inbounds %struct.Reg, %struct.Reg* %31480, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %31481 to i64*
  %31482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31483 = getelementptr inbounds %struct.GPR, %struct.GPR* %31482, i32 0, i32 1
  %31484 = getelementptr inbounds %struct.Reg, %struct.Reg* %31483, i32 0, i32 0
  %EAX.i603 = bitcast %union.anon* %31484 to i32*
  %31485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31486 = getelementptr inbounds %struct.GPR, %struct.GPR* %31485, i32 0, i32 5
  %31487 = getelementptr inbounds %struct.Reg, %struct.Reg* %31486, i32 0, i32 0
  %RCX.i604 = bitcast %union.anon* %31487 to i64*
  %31488 = load i64, i64* %RCX.i604
  %31489 = add i64 %31488, 28
  %31490 = load i32, i32* %EAX.i603
  %31491 = zext i32 %31490 to i64
  %31492 = load i64, i64* %PC.i602
  %31493 = add i64 %31492, 3
  store i64 %31493, i64* %PC.i602
  %31494 = inttoptr i64 %31489 to i32*
  store i32 %31490, i32* %31494
  store %struct.Memory* %loadMem_4abf5c, %struct.Memory** %MEMORY
  %loadMem_4abf5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %31495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31496 = getelementptr inbounds %struct.GPR, %struct.GPR* %31495, i32 0, i32 33
  %31497 = getelementptr inbounds %struct.Reg, %struct.Reg* %31496, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %31497 to i64*
  %31498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31499 = getelementptr inbounds %struct.GPR, %struct.GPR* %31498, i32 0, i32 1
  %31500 = getelementptr inbounds %struct.Reg, %struct.Reg* %31499, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %31500 to i64*
  %31501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31502 = getelementptr inbounds %struct.GPR, %struct.GPR* %31501, i32 0, i32 15
  %31503 = getelementptr inbounds %struct.Reg, %struct.Reg* %31502, i32 0, i32 0
  %RBP.i601 = bitcast %union.anon* %31503 to i64*
  %31504 = load i64, i64* %RBP.i601
  %31505 = sub i64 %31504, 24
  %31506 = load i64, i64* %PC.i599
  %31507 = add i64 %31506, 3
  store i64 %31507, i64* %PC.i599
  %31508 = inttoptr i64 %31505 to i32*
  %31509 = load i32, i32* %31508
  %31510 = zext i32 %31509 to i64
  store i64 %31510, i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_4abf5f, %struct.Memory** %MEMORY
  %loadMem_4abf62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31512 = getelementptr inbounds %struct.GPR, %struct.GPR* %31511, i32 0, i32 33
  %31513 = getelementptr inbounds %struct.Reg, %struct.Reg* %31512, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %31513 to i64*
  %31514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31515 = getelementptr inbounds %struct.GPR, %struct.GPR* %31514, i32 0, i32 1
  %31516 = getelementptr inbounds %struct.Reg, %struct.Reg* %31515, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %31516 to i64*
  %31517 = load i64, i64* %RAX.i598
  %31518 = load i64, i64* %PC.i597
  %31519 = add i64 %31518, 3
  store i64 %31519, i64* %PC.i597
  %31520 = trunc i64 %31517 to i32
  %31521 = add i32 1, %31520
  %31522 = zext i32 %31521 to i64
  store i64 %31522, i64* %RAX.i598, align 8
  %31523 = icmp ult i32 %31521, %31520
  %31524 = icmp ult i32 %31521, 1
  %31525 = or i1 %31523, %31524
  %31526 = zext i1 %31525 to i8
  %31527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31526, i8* %31527, align 1
  %31528 = and i32 %31521, 255
  %31529 = call i32 @llvm.ctpop.i32(i32 %31528)
  %31530 = trunc i32 %31529 to i8
  %31531 = and i8 %31530, 1
  %31532 = xor i8 %31531, 1
  %31533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31532, i8* %31533, align 1
  %31534 = xor i64 1, %31517
  %31535 = trunc i64 %31534 to i32
  %31536 = xor i32 %31535, %31521
  %31537 = lshr i32 %31536, 4
  %31538 = trunc i32 %31537 to i8
  %31539 = and i8 %31538, 1
  %31540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31539, i8* %31540, align 1
  %31541 = icmp eq i32 %31521, 0
  %31542 = zext i1 %31541 to i8
  %31543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31542, i8* %31543, align 1
  %31544 = lshr i32 %31521, 31
  %31545 = trunc i32 %31544 to i8
  %31546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31545, i8* %31546, align 1
  %31547 = lshr i32 %31520, 31
  %31548 = xor i32 %31544, %31547
  %31549 = add i32 %31548, %31544
  %31550 = icmp eq i32 %31549, 2
  %31551 = zext i1 %31550 to i8
  %31552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31551, i8* %31552, align 1
  store %struct.Memory* %loadMem_4abf62, %struct.Memory** %MEMORY
  %loadMem_4abf65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31554 = getelementptr inbounds %struct.GPR, %struct.GPR* %31553, i32 0, i32 33
  %31555 = getelementptr inbounds %struct.Reg, %struct.Reg* %31554, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %31555 to i64*
  %31556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31557 = getelementptr inbounds %struct.GPR, %struct.GPR* %31556, i32 0, i32 1
  %31558 = getelementptr inbounds %struct.Reg, %struct.Reg* %31557, i32 0, i32 0
  %EAX.i595 = bitcast %union.anon* %31558 to i32*
  %31559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31560 = getelementptr inbounds %struct.GPR, %struct.GPR* %31559, i32 0, i32 15
  %31561 = getelementptr inbounds %struct.Reg, %struct.Reg* %31560, i32 0, i32 0
  %RBP.i596 = bitcast %union.anon* %31561 to i64*
  %31562 = load i64, i64* %RBP.i596
  %31563 = sub i64 %31562, 24
  %31564 = load i32, i32* %EAX.i595
  %31565 = zext i32 %31564 to i64
  %31566 = load i64, i64* %PC.i594
  %31567 = add i64 %31566, 3
  store i64 %31567, i64* %PC.i594
  %31568 = inttoptr i64 %31563 to i32*
  store i32 %31564, i32* %31568
  store %struct.Memory* %loadMem_4abf65, %struct.Memory** %MEMORY
  %loadMem_4abf68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31570 = getelementptr inbounds %struct.GPR, %struct.GPR* %31569, i32 0, i32 33
  %31571 = getelementptr inbounds %struct.Reg, %struct.Reg* %31570, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %31571 to i64*
  %31572 = load i64, i64* %PC.i593
  %31573 = add i64 %31572, -1065
  %31574 = load i64, i64* %PC.i593
  %31575 = add i64 %31574, 5
  store i64 %31575, i64* %PC.i593
  %31576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %31573, i64* %31576, align 8
  store %struct.Memory* %loadMem_4abf68, %struct.Memory** %MEMORY
  br label %block_.L_4abb3f

block_.L_4abf6d:                                  ; preds = %block_4abb73
  %loadMem_4abf6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %31577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31578 = getelementptr inbounds %struct.GPR, %struct.GPR* %31577, i32 0, i32 33
  %31579 = getelementptr inbounds %struct.Reg, %struct.Reg* %31578, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %31579 to i64*
  %31580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31581 = getelementptr inbounds %struct.GPR, %struct.GPR* %31580, i32 0, i32 15
  %31582 = getelementptr inbounds %struct.Reg, %struct.Reg* %31581, i32 0, i32 0
  %RBP.i592 = bitcast %union.anon* %31582 to i64*
  %31583 = load i64, i64* %RBP.i592
  %31584 = sub i64 %31583, 24
  %31585 = load i64, i64* %PC.i591
  %31586 = add i64 %31585, 7
  store i64 %31586, i64* %PC.i591
  %31587 = inttoptr i64 %31584 to i32*
  store i32 0, i32* %31587
  store %struct.Memory* %loadMem_4abf6d, %struct.Memory** %MEMORY
  br label %block_.L_4abf74

block_.L_4abf74:                                  ; preds = %block_.L_4ac2cd, %block_.L_4abf6d
  %loadMem_4abf74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31589 = getelementptr inbounds %struct.GPR, %struct.GPR* %31588, i32 0, i32 33
  %31590 = getelementptr inbounds %struct.Reg, %struct.Reg* %31589, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %31590 to i64*
  %31591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31592 = getelementptr inbounds %struct.GPR, %struct.GPR* %31591, i32 0, i32 15
  %31593 = getelementptr inbounds %struct.Reg, %struct.Reg* %31592, i32 0, i32 0
  %RBP.i590 = bitcast %union.anon* %31593 to i64*
  %31594 = load i64, i64* %RBP.i590
  %31595 = sub i64 %31594, 24
  %31596 = load i64, i64* %PC.i589
  %31597 = add i64 %31596, 4
  store i64 %31597, i64* %PC.i589
  %31598 = inttoptr i64 %31595 to i32*
  %31599 = load i32, i32* %31598
  %31600 = sub i32 %31599, 8
  %31601 = icmp ult i32 %31599, 8
  %31602 = zext i1 %31601 to i8
  %31603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31602, i8* %31603, align 1
  %31604 = and i32 %31600, 255
  %31605 = call i32 @llvm.ctpop.i32(i32 %31604)
  %31606 = trunc i32 %31605 to i8
  %31607 = and i8 %31606, 1
  %31608 = xor i8 %31607, 1
  %31609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31608, i8* %31609, align 1
  %31610 = xor i32 %31599, 8
  %31611 = xor i32 %31610, %31600
  %31612 = lshr i32 %31611, 4
  %31613 = trunc i32 %31612 to i8
  %31614 = and i8 %31613, 1
  %31615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31614, i8* %31615, align 1
  %31616 = icmp eq i32 %31600, 0
  %31617 = zext i1 %31616 to i8
  %31618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31617, i8* %31618, align 1
  %31619 = lshr i32 %31600, 31
  %31620 = trunc i32 %31619 to i8
  %31621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31620, i8* %31621, align 1
  %31622 = lshr i32 %31599, 31
  %31623 = xor i32 %31619, %31622
  %31624 = add i32 %31623, %31622
  %31625 = icmp eq i32 %31624, 2
  %31626 = zext i1 %31625 to i8
  %31627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31626, i8* %31627, align 1
  store %struct.Memory* %loadMem_4abf74, %struct.Memory** %MEMORY
  %loadMem_4abf78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31629 = getelementptr inbounds %struct.GPR, %struct.GPR* %31628, i32 0, i32 33
  %31630 = getelementptr inbounds %struct.Reg, %struct.Reg* %31629, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %31630 to i64*
  %31631 = load i64, i64* %PC.i588
  %31632 = add i64 %31631, 867
  %31633 = load i64, i64* %PC.i588
  %31634 = add i64 %31633, 6
  %31635 = load i64, i64* %PC.i588
  %31636 = add i64 %31635, 6
  store i64 %31636, i64* %PC.i588
  %31637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31638 = load i8, i8* %31637, align 1
  %31639 = icmp ne i8 %31638, 0
  %31640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %31641 = load i8, i8* %31640, align 1
  %31642 = icmp ne i8 %31641, 0
  %31643 = xor i1 %31639, %31642
  %31644 = xor i1 %31643, true
  %31645 = zext i1 %31644 to i8
  store i8 %31645, i8* %BRANCH_TAKEN, align 1
  %31646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31647 = select i1 %31643, i64 %31634, i64 %31632
  store i64 %31647, i64* %31646, align 8
  store %struct.Memory* %loadMem_4abf78, %struct.Memory** %MEMORY
  %loadBr_4abf78 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4abf78 = icmp eq i8 %loadBr_4abf78, 1
  br i1 %cmpBr_4abf78, label %block_.L_4ac2db, label %block_4abf7e

block_4abf7e:                                     ; preds = %block_.L_4abf74
  %loadMem_4abf7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %31648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31649 = getelementptr inbounds %struct.GPR, %struct.GPR* %31648, i32 0, i32 33
  %31650 = getelementptr inbounds %struct.Reg, %struct.Reg* %31649, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %31650 to i64*
  %31651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31652 = getelementptr inbounds %struct.GPR, %struct.GPR* %31651, i32 0, i32 15
  %31653 = getelementptr inbounds %struct.Reg, %struct.Reg* %31652, i32 0, i32 0
  %RBP.i587 = bitcast %union.anon* %31653 to i64*
  %31654 = load i64, i64* %RBP.i587
  %31655 = sub i64 %31654, 28
  %31656 = load i64, i64* %PC.i586
  %31657 = add i64 %31656, 7
  store i64 %31657, i64* %PC.i586
  %31658 = inttoptr i64 %31655 to i32*
  store i32 0, i32* %31658
  store %struct.Memory* %loadMem_4abf7e, %struct.Memory** %MEMORY
  br label %block_.L_4abf85

block_.L_4abf85:                                  ; preds = %block_.L_4ac2ba, %block_4abf7e
  %loadMem_4abf85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31660 = getelementptr inbounds %struct.GPR, %struct.GPR* %31659, i32 0, i32 33
  %31661 = getelementptr inbounds %struct.Reg, %struct.Reg* %31660, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %31661 to i64*
  %31662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31663 = getelementptr inbounds %struct.GPR, %struct.GPR* %31662, i32 0, i32 15
  %31664 = getelementptr inbounds %struct.Reg, %struct.Reg* %31663, i32 0, i32 0
  %RBP.i585 = bitcast %union.anon* %31664 to i64*
  %31665 = load i64, i64* %RBP.i585
  %31666 = sub i64 %31665, 28
  %31667 = load i64, i64* %PC.i584
  %31668 = add i64 %31667, 4
  store i64 %31668, i64* %PC.i584
  %31669 = inttoptr i64 %31666 to i32*
  %31670 = load i32, i32* %31669
  %31671 = sub i32 %31670, 8
  %31672 = icmp ult i32 %31670, 8
  %31673 = zext i1 %31672 to i8
  %31674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31673, i8* %31674, align 1
  %31675 = and i32 %31671, 255
  %31676 = call i32 @llvm.ctpop.i32(i32 %31675)
  %31677 = trunc i32 %31676 to i8
  %31678 = and i8 %31677, 1
  %31679 = xor i8 %31678, 1
  %31680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31679, i8* %31680, align 1
  %31681 = xor i32 %31670, 8
  %31682 = xor i32 %31681, %31671
  %31683 = lshr i32 %31682, 4
  %31684 = trunc i32 %31683 to i8
  %31685 = and i8 %31684, 1
  %31686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31685, i8* %31686, align 1
  %31687 = icmp eq i32 %31671, 0
  %31688 = zext i1 %31687 to i8
  %31689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31688, i8* %31689, align 1
  %31690 = lshr i32 %31671, 31
  %31691 = trunc i32 %31690 to i8
  %31692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31691, i8* %31692, align 1
  %31693 = lshr i32 %31670, 31
  %31694 = xor i32 %31690, %31693
  %31695 = add i32 %31694, %31693
  %31696 = icmp eq i32 %31695, 2
  %31697 = zext i1 %31696 to i8
  %31698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31697, i8* %31698, align 1
  store %struct.Memory* %loadMem_4abf85, %struct.Memory** %MEMORY
  %loadMem_4abf89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31700 = getelementptr inbounds %struct.GPR, %struct.GPR* %31699, i32 0, i32 33
  %31701 = getelementptr inbounds %struct.Reg, %struct.Reg* %31700, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %31701 to i64*
  %31702 = load i64, i64* %PC.i583
  %31703 = add i64 %31702, 831
  %31704 = load i64, i64* %PC.i583
  %31705 = add i64 %31704, 6
  %31706 = load i64, i64* %PC.i583
  %31707 = add i64 %31706, 6
  store i64 %31707, i64* %PC.i583
  %31708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31709 = load i8, i8* %31708, align 1
  %31710 = icmp ne i8 %31709, 0
  %31711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %31712 = load i8, i8* %31711, align 1
  %31713 = icmp ne i8 %31712, 0
  %31714 = xor i1 %31710, %31713
  %31715 = xor i1 %31714, true
  %31716 = zext i1 %31715 to i8
  store i8 %31716, i8* %BRANCH_TAKEN, align 1
  %31717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31718 = select i1 %31714, i64 %31705, i64 %31703
  store i64 %31718, i64* %31717, align 8
  store %struct.Memory* %loadMem_4abf89, %struct.Memory** %MEMORY
  %loadBr_4abf89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4abf89 = icmp eq i8 %loadBr_4abf89, 1
  br i1 %cmpBr_4abf89, label %block_.L_4ac2c8, label %block_4abf8f

block_4abf8f:                                     ; preds = %block_.L_4abf85
  %loadMem_4abf8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %31719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31720 = getelementptr inbounds %struct.GPR, %struct.GPR* %31719, i32 0, i32 33
  %31721 = getelementptr inbounds %struct.Reg, %struct.Reg* %31720, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %31721 to i64*
  %31722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31723 = getelementptr inbounds %struct.GPR, %struct.GPR* %31722, i32 0, i32 15
  %31724 = getelementptr inbounds %struct.Reg, %struct.Reg* %31723, i32 0, i32 0
  %RBP.i582 = bitcast %union.anon* %31724 to i64*
  %31725 = load i64, i64* %RBP.i582
  %31726 = sub i64 %31725, 412
  %31727 = load i64, i64* %PC.i581
  %31728 = add i64 %31727, 7
  store i64 %31728, i64* %PC.i581
  %31729 = inttoptr i64 %31726 to i32*
  %31730 = load i32, i32* %31729
  %31731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %31731, align 1
  %31732 = and i32 %31730, 255
  %31733 = call i32 @llvm.ctpop.i32(i32 %31732)
  %31734 = trunc i32 %31733 to i8
  %31735 = and i8 %31734, 1
  %31736 = xor i8 %31735, 1
  %31737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31736, i8* %31737, align 1
  %31738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %31738, align 1
  %31739 = icmp eq i32 %31730, 0
  %31740 = zext i1 %31739 to i8
  %31741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31740, i8* %31741, align 1
  %31742 = lshr i32 %31730, 31
  %31743 = trunc i32 %31742 to i8
  %31744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31743, i8* %31744, align 1
  %31745 = lshr i32 %31730, 31
  %31746 = xor i32 %31742, %31745
  %31747 = add i32 %31746, %31745
  %31748 = icmp eq i32 %31747, 2
  %31749 = zext i1 %31748 to i8
  %31750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31749, i8* %31750, align 1
  store %struct.Memory* %loadMem_4abf8f, %struct.Memory** %MEMORY
  %loadMem_4abf96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31752 = getelementptr inbounds %struct.GPR, %struct.GPR* %31751, i32 0, i32 33
  %31753 = getelementptr inbounds %struct.Reg, %struct.Reg* %31752, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %31753 to i64*
  %31754 = load i64, i64* %PC.i580
  %31755 = add i64 %31754, 120
  %31756 = load i64, i64* %PC.i580
  %31757 = add i64 %31756, 6
  %31758 = load i64, i64* %PC.i580
  %31759 = add i64 %31758, 6
  store i64 %31759, i64* %PC.i580
  %31760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %31761 = load i8, i8* %31760, align 1
  store i8 %31761, i8* %BRANCH_TAKEN, align 1
  %31762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31763 = icmp ne i8 %31761, 0
  %31764 = select i1 %31763, i64 %31755, i64 %31757
  store i64 %31764, i64* %31762, align 8
  store %struct.Memory* %loadMem_4abf96, %struct.Memory** %MEMORY
  %loadBr_4abf96 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4abf96 = icmp eq i8 %loadBr_4abf96, 1
  br i1 %cmpBr_4abf96, label %block_.L_4ac00e, label %block_4abf9c

block_4abf9c:                                     ; preds = %block_4abf8f
  %loadMem_4abf9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %31765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31766 = getelementptr inbounds %struct.GPR, %struct.GPR* %31765, i32 0, i32 33
  %31767 = getelementptr inbounds %struct.Reg, %struct.Reg* %31766, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %31767 to i64*
  %31768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31769 = getelementptr inbounds %struct.GPR, %struct.GPR* %31768, i32 0, i32 1
  %31770 = getelementptr inbounds %struct.Reg, %struct.Reg* %31769, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %31770 to i64*
  %31771 = load i64, i64* %PC.i578
  %31772 = add i64 %31771, 8
  store i64 %31772, i64* %PC.i578
  %31773 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %31773, i64* %RAX.i579, align 8
  store %struct.Memory* %loadMem_4abf9c, %struct.Memory** %MEMORY
  %loadMem_4abfa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31775 = getelementptr inbounds %struct.GPR, %struct.GPR* %31774, i32 0, i32 33
  %31776 = getelementptr inbounds %struct.Reg, %struct.Reg* %31775, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %31776 to i64*
  %31777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31778 = getelementptr inbounds %struct.GPR, %struct.GPR* %31777, i32 0, i32 1
  %31779 = getelementptr inbounds %struct.Reg, %struct.Reg* %31778, i32 0, i32 0
  %RAX.i577 = bitcast %union.anon* %31779 to i64*
  %31780 = load i64, i64* %RAX.i577
  %31781 = load i64, i64* %PC.i576
  %31782 = add i64 %31781, 6
  store i64 %31782, i64* %PC.i576
  %31783 = add i64 13112, %31780
  store i64 %31783, i64* %RAX.i577, align 8
  %31784 = icmp ult i64 %31783, %31780
  %31785 = icmp ult i64 %31783, 13112
  %31786 = or i1 %31784, %31785
  %31787 = zext i1 %31786 to i8
  %31788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31787, i8* %31788, align 1
  %31789 = trunc i64 %31783 to i32
  %31790 = and i32 %31789, 255
  %31791 = call i32 @llvm.ctpop.i32(i32 %31790)
  %31792 = trunc i32 %31791 to i8
  %31793 = and i8 %31792, 1
  %31794 = xor i8 %31793, 1
  %31795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31794, i8* %31795, align 1
  %31796 = xor i64 13112, %31780
  %31797 = xor i64 %31796, %31783
  %31798 = lshr i64 %31797, 4
  %31799 = trunc i64 %31798 to i8
  %31800 = and i8 %31799, 1
  %31801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31800, i8* %31801, align 1
  %31802 = icmp eq i64 %31783, 0
  %31803 = zext i1 %31802 to i8
  %31804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31803, i8* %31804, align 1
  %31805 = lshr i64 %31783, 63
  %31806 = trunc i64 %31805 to i8
  %31807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31806, i8* %31807, align 1
  %31808 = lshr i64 %31780, 63
  %31809 = xor i64 %31805, %31808
  %31810 = add i64 %31809, %31805
  %31811 = icmp eq i64 %31810, 2
  %31812 = zext i1 %31811 to i8
  %31813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31812, i8* %31813, align 1
  store %struct.Memory* %loadMem_4abfa4, %struct.Memory** %MEMORY
  %loadMem_4abfaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %31814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31815 = getelementptr inbounds %struct.GPR, %struct.GPR* %31814, i32 0, i32 33
  %31816 = getelementptr inbounds %struct.Reg, %struct.Reg* %31815, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %31816 to i64*
  %31817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31818 = getelementptr inbounds %struct.GPR, %struct.GPR* %31817, i32 0, i32 5
  %31819 = getelementptr inbounds %struct.Reg, %struct.Reg* %31818, i32 0, i32 0
  %RCX.i574 = bitcast %union.anon* %31819 to i64*
  %31820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31821 = getelementptr inbounds %struct.GPR, %struct.GPR* %31820, i32 0, i32 15
  %31822 = getelementptr inbounds %struct.Reg, %struct.Reg* %31821, i32 0, i32 0
  %RBP.i575 = bitcast %union.anon* %31822 to i64*
  %31823 = load i64, i64* %RBP.i575
  %31824 = sub i64 %31823, 24
  %31825 = load i64, i64* %PC.i573
  %31826 = add i64 %31825, 4
  store i64 %31826, i64* %PC.i573
  %31827 = inttoptr i64 %31824 to i32*
  %31828 = load i32, i32* %31827
  %31829 = sext i32 %31828 to i64
  store i64 %31829, i64* %RCX.i574, align 8
  store %struct.Memory* %loadMem_4abfaa, %struct.Memory** %MEMORY
  %loadMem_4abfae = load %struct.Memory*, %struct.Memory** %MEMORY
  %31830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31831 = getelementptr inbounds %struct.GPR, %struct.GPR* %31830, i32 0, i32 33
  %31832 = getelementptr inbounds %struct.Reg, %struct.Reg* %31831, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %31832 to i64*
  %31833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31834 = getelementptr inbounds %struct.GPR, %struct.GPR* %31833, i32 0, i32 5
  %31835 = getelementptr inbounds %struct.Reg, %struct.Reg* %31834, i32 0, i32 0
  %RCX.i572 = bitcast %union.anon* %31835 to i64*
  %31836 = load i64, i64* %RCX.i572
  %31837 = load i64, i64* %PC.i571
  %31838 = add i64 %31837, 4
  store i64 %31838, i64* %PC.i571
  %31839 = shl i64 %31836, 5
  %31840 = icmp slt i64 %31839, 0
  %31841 = shl i64 %31839, 1
  store i64 %31841, i64* %RCX.i572, align 8
  %31842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %31843 = zext i1 %31840 to i8
  store i8 %31843, i8* %31842, align 1
  %31844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %31845 = trunc i64 %31841 to i32
  %31846 = and i32 %31845, 254
  %31847 = call i32 @llvm.ctpop.i32(i32 %31846)
  %31848 = trunc i32 %31847 to i8
  %31849 = and i8 %31848, 1
  %31850 = xor i8 %31849, 1
  store i8 %31850, i8* %31844, align 1
  %31851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %31851, align 1
  %31852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %31853 = icmp eq i64 %31841, 0
  %31854 = zext i1 %31853 to i8
  store i8 %31854, i8* %31852, align 1
  %31855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31856 = lshr i64 %31841, 63
  %31857 = trunc i64 %31856 to i8
  store i8 %31857, i8* %31855, align 1
  %31858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31858, align 1
  store %struct.Memory* %loadMem_4abfae, %struct.Memory** %MEMORY
  %loadMem_4abfb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31860 = getelementptr inbounds %struct.GPR, %struct.GPR* %31859, i32 0, i32 33
  %31861 = getelementptr inbounds %struct.Reg, %struct.Reg* %31860, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %31861 to i64*
  %31862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31863 = getelementptr inbounds %struct.GPR, %struct.GPR* %31862, i32 0, i32 1
  %31864 = getelementptr inbounds %struct.Reg, %struct.Reg* %31863, i32 0, i32 0
  %RAX.i569 = bitcast %union.anon* %31864 to i64*
  %31865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31866 = getelementptr inbounds %struct.GPR, %struct.GPR* %31865, i32 0, i32 5
  %31867 = getelementptr inbounds %struct.Reg, %struct.Reg* %31866, i32 0, i32 0
  %RCX.i570 = bitcast %union.anon* %31867 to i64*
  %31868 = load i64, i64* %RAX.i569
  %31869 = load i64, i64* %RCX.i570
  %31870 = load i64, i64* %PC.i568
  %31871 = add i64 %31870, 3
  store i64 %31871, i64* %PC.i568
  %31872 = add i64 %31869, %31868
  store i64 %31872, i64* %RAX.i569, align 8
  %31873 = icmp ult i64 %31872, %31868
  %31874 = icmp ult i64 %31872, %31869
  %31875 = or i1 %31873, %31874
  %31876 = zext i1 %31875 to i8
  %31877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31876, i8* %31877, align 1
  %31878 = trunc i64 %31872 to i32
  %31879 = and i32 %31878, 255
  %31880 = call i32 @llvm.ctpop.i32(i32 %31879)
  %31881 = trunc i32 %31880 to i8
  %31882 = and i8 %31881, 1
  %31883 = xor i8 %31882, 1
  %31884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31883, i8* %31884, align 1
  %31885 = xor i64 %31869, %31868
  %31886 = xor i64 %31885, %31872
  %31887 = lshr i64 %31886, 4
  %31888 = trunc i64 %31887 to i8
  %31889 = and i8 %31888, 1
  %31890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31889, i8* %31890, align 1
  %31891 = icmp eq i64 %31872, 0
  %31892 = zext i1 %31891 to i8
  %31893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31892, i8* %31893, align 1
  %31894 = lshr i64 %31872, 63
  %31895 = trunc i64 %31894 to i8
  %31896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31895, i8* %31896, align 1
  %31897 = lshr i64 %31868, 63
  %31898 = lshr i64 %31869, 63
  %31899 = xor i64 %31894, %31897
  %31900 = xor i64 %31894, %31898
  %31901 = add i64 %31899, %31900
  %31902 = icmp eq i64 %31901, 2
  %31903 = zext i1 %31902 to i8
  %31904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31903, i8* %31904, align 1
  store %struct.Memory* %loadMem_4abfb2, %struct.Memory** %MEMORY
  %loadMem_4abfb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31906 = getelementptr inbounds %struct.GPR, %struct.GPR* %31905, i32 0, i32 33
  %31907 = getelementptr inbounds %struct.Reg, %struct.Reg* %31906, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %31907 to i64*
  %31908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31909 = getelementptr inbounds %struct.GPR, %struct.GPR* %31908, i32 0, i32 5
  %31910 = getelementptr inbounds %struct.Reg, %struct.Reg* %31909, i32 0, i32 0
  %RCX.i566 = bitcast %union.anon* %31910 to i64*
  %31911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31912 = getelementptr inbounds %struct.GPR, %struct.GPR* %31911, i32 0, i32 15
  %31913 = getelementptr inbounds %struct.Reg, %struct.Reg* %31912, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %31913 to i64*
  %31914 = load i64, i64* %RBP.i567
  %31915 = sub i64 %31914, 28
  %31916 = load i64, i64* %PC.i565
  %31917 = add i64 %31916, 4
  store i64 %31917, i64* %PC.i565
  %31918 = inttoptr i64 %31915 to i32*
  %31919 = load i32, i32* %31918
  %31920 = sext i32 %31919 to i64
  store i64 %31920, i64* %RCX.i566, align 8
  store %struct.Memory* %loadMem_4abfb5, %struct.Memory** %MEMORY
  %loadMem_4abfb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31922 = getelementptr inbounds %struct.GPR, %struct.GPR* %31921, i32 0, i32 33
  %31923 = getelementptr inbounds %struct.Reg, %struct.Reg* %31922, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %31923 to i64*
  %31924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31925 = getelementptr inbounds %struct.GPR, %struct.GPR* %31924, i32 0, i32 1
  %31926 = getelementptr inbounds %struct.Reg, %struct.Reg* %31925, i32 0, i32 0
  %RAX.i562 = bitcast %union.anon* %31926 to i64*
  %31927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31928 = getelementptr inbounds %struct.GPR, %struct.GPR* %31927, i32 0, i32 5
  %31929 = getelementptr inbounds %struct.Reg, %struct.Reg* %31928, i32 0, i32 0
  %RCX.i563 = bitcast %union.anon* %31929 to i64*
  %31930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31931 = getelementptr inbounds %struct.GPR, %struct.GPR* %31930, i32 0, i32 7
  %31932 = getelementptr inbounds %struct.Reg, %struct.Reg* %31931, i32 0, i32 0
  %RDX.i564 = bitcast %union.anon* %31932 to i64*
  %31933 = load i64, i64* %RAX.i562
  %31934 = load i64, i64* %RCX.i563
  %31935 = mul i64 %31934, 4
  %31936 = add i64 %31935, %31933
  %31937 = load i64, i64* %PC.i561
  %31938 = add i64 %31937, 3
  store i64 %31938, i64* %PC.i561
  %31939 = inttoptr i64 %31936 to i32*
  %31940 = load i32, i32* %31939
  %31941 = zext i32 %31940 to i64
  store i64 %31941, i64* %RDX.i564, align 8
  store %struct.Memory* %loadMem_4abfb9, %struct.Memory** %MEMORY
  %loadMem_4abfbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %31942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31943 = getelementptr inbounds %struct.GPR, %struct.GPR* %31942, i32 0, i32 33
  %31944 = getelementptr inbounds %struct.Reg, %struct.Reg* %31943, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %31944 to i64*
  %31945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31946 = getelementptr inbounds %struct.GPR, %struct.GPR* %31945, i32 0, i32 1
  %31947 = getelementptr inbounds %struct.Reg, %struct.Reg* %31946, i32 0, i32 0
  %RAX.i560 = bitcast %union.anon* %31947 to i64*
  %31948 = load i64, i64* %PC.i559
  %31949 = add i64 %31948, 8
  store i64 %31949, i64* %PC.i559
  %31950 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %31950, i64* %RAX.i560, align 8
  store %struct.Memory* %loadMem_4abfbc, %struct.Memory** %MEMORY
  %loadMem_4abfc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %31951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31952 = getelementptr inbounds %struct.GPR, %struct.GPR* %31951, i32 0, i32 33
  %31953 = getelementptr inbounds %struct.Reg, %struct.Reg* %31952, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %31953 to i64*
  %31954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31955 = getelementptr inbounds %struct.GPR, %struct.GPR* %31954, i32 0, i32 1
  %31956 = getelementptr inbounds %struct.Reg, %struct.Reg* %31955, i32 0, i32 0
  %RAX.i558 = bitcast %union.anon* %31956 to i64*
  %31957 = load i64, i64* %RAX.i558
  %31958 = load i64, i64* %PC.i557
  %31959 = add i64 %31958, 6
  store i64 %31959, i64* %PC.i557
  %31960 = add i64 12600, %31957
  store i64 %31960, i64* %RAX.i558, align 8
  %31961 = icmp ult i64 %31960, %31957
  %31962 = icmp ult i64 %31960, 12600
  %31963 = or i1 %31961, %31962
  %31964 = zext i1 %31963 to i8
  %31965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31964, i8* %31965, align 1
  %31966 = trunc i64 %31960 to i32
  %31967 = and i32 %31966, 255
  %31968 = call i32 @llvm.ctpop.i32(i32 %31967)
  %31969 = trunc i32 %31968 to i8
  %31970 = and i8 %31969, 1
  %31971 = xor i8 %31970, 1
  %31972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31971, i8* %31972, align 1
  %31973 = xor i64 12600, %31957
  %31974 = xor i64 %31973, %31960
  %31975 = lshr i64 %31974, 4
  %31976 = trunc i64 %31975 to i8
  %31977 = and i8 %31976, 1
  %31978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31977, i8* %31978, align 1
  %31979 = icmp eq i64 %31960, 0
  %31980 = zext i1 %31979 to i8
  %31981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31980, i8* %31981, align 1
  %31982 = lshr i64 %31960, 63
  %31983 = trunc i64 %31982 to i8
  %31984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31983, i8* %31984, align 1
  %31985 = lshr i64 %31957, 63
  %31986 = xor i64 %31982, %31985
  %31987 = add i64 %31986, %31982
  %31988 = icmp eq i64 %31987, 2
  %31989 = zext i1 %31988 to i8
  %31990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31989, i8* %31990, align 1
  store %struct.Memory* %loadMem_4abfc4, %struct.Memory** %MEMORY
  %loadMem_4abfca = load %struct.Memory*, %struct.Memory** %MEMORY
  %31991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31992 = getelementptr inbounds %struct.GPR, %struct.GPR* %31991, i32 0, i32 33
  %31993 = getelementptr inbounds %struct.Reg, %struct.Reg* %31992, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %31993 to i64*
  %31994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31995 = getelementptr inbounds %struct.GPR, %struct.GPR* %31994, i32 0, i32 9
  %31996 = getelementptr inbounds %struct.Reg, %struct.Reg* %31995, i32 0, i32 0
  %RSI.i555 = bitcast %union.anon* %31996 to i64*
  %31997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31998 = getelementptr inbounds %struct.GPR, %struct.GPR* %31997, i32 0, i32 15
  %31999 = getelementptr inbounds %struct.Reg, %struct.Reg* %31998, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %31999 to i64*
  %32000 = load i64, i64* %RBP.i556
  %32001 = sub i64 %32000, 24
  %32002 = load i64, i64* %PC.i554
  %32003 = add i64 %32002, 3
  store i64 %32003, i64* %PC.i554
  %32004 = inttoptr i64 %32001 to i32*
  %32005 = load i32, i32* %32004
  %32006 = zext i32 %32005 to i64
  store i64 %32006, i64* %RSI.i555, align 8
  store %struct.Memory* %loadMem_4abfca, %struct.Memory** %MEMORY
  %loadMem_4abfcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %32007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32008 = getelementptr inbounds %struct.GPR, %struct.GPR* %32007, i32 0, i32 33
  %32009 = getelementptr inbounds %struct.Reg, %struct.Reg* %32008, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %32009 to i64*
  %32010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32011 = getelementptr inbounds %struct.GPR, %struct.GPR* %32010, i32 0, i32 9
  %32012 = getelementptr inbounds %struct.Reg, %struct.Reg* %32011, i32 0, i32 0
  %RSI.i552 = bitcast %union.anon* %32012 to i64*
  %32013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32014 = getelementptr inbounds %struct.GPR, %struct.GPR* %32013, i32 0, i32 15
  %32015 = getelementptr inbounds %struct.Reg, %struct.Reg* %32014, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %32015 to i64*
  %32016 = load i64, i64* %RSI.i552
  %32017 = load i64, i64* %RBP.i553
  %32018 = sub i64 %32017, 84
  %32019 = load i64, i64* %PC.i551
  %32020 = add i64 %32019, 3
  store i64 %32020, i64* %PC.i551
  %32021 = trunc i64 %32016 to i32
  %32022 = inttoptr i64 %32018 to i32*
  %32023 = load i32, i32* %32022
  %32024 = add i32 %32023, %32021
  %32025 = zext i32 %32024 to i64
  store i64 %32025, i64* %RSI.i552, align 8
  %32026 = icmp ult i32 %32024, %32021
  %32027 = icmp ult i32 %32024, %32023
  %32028 = or i1 %32026, %32027
  %32029 = zext i1 %32028 to i8
  %32030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32029, i8* %32030, align 1
  %32031 = and i32 %32024, 255
  %32032 = call i32 @llvm.ctpop.i32(i32 %32031)
  %32033 = trunc i32 %32032 to i8
  %32034 = and i8 %32033, 1
  %32035 = xor i8 %32034, 1
  %32036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32035, i8* %32036, align 1
  %32037 = xor i32 %32023, %32021
  %32038 = xor i32 %32037, %32024
  %32039 = lshr i32 %32038, 4
  %32040 = trunc i32 %32039 to i8
  %32041 = and i8 %32040, 1
  %32042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32041, i8* %32042, align 1
  %32043 = icmp eq i32 %32024, 0
  %32044 = zext i1 %32043 to i8
  %32045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32044, i8* %32045, align 1
  %32046 = lshr i32 %32024, 31
  %32047 = trunc i32 %32046 to i8
  %32048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32047, i8* %32048, align 1
  %32049 = lshr i32 %32021, 31
  %32050 = lshr i32 %32023, 31
  %32051 = xor i32 %32046, %32049
  %32052 = xor i32 %32046, %32050
  %32053 = add i32 %32051, %32052
  %32054 = icmp eq i32 %32053, 2
  %32055 = zext i1 %32054 to i8
  %32056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32055, i8* %32056, align 1
  store %struct.Memory* %loadMem_4abfcd, %struct.Memory** %MEMORY
  %loadMem_4abfd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32058 = getelementptr inbounds %struct.GPR, %struct.GPR* %32057, i32 0, i32 33
  %32059 = getelementptr inbounds %struct.Reg, %struct.Reg* %32058, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %32059 to i64*
  %32060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32061 = getelementptr inbounds %struct.GPR, %struct.GPR* %32060, i32 0, i32 9
  %32062 = getelementptr inbounds %struct.Reg, %struct.Reg* %32061, i32 0, i32 0
  %ESI.i549 = bitcast %union.anon* %32062 to i32*
  %32063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32064 = getelementptr inbounds %struct.GPR, %struct.GPR* %32063, i32 0, i32 5
  %32065 = getelementptr inbounds %struct.Reg, %struct.Reg* %32064, i32 0, i32 0
  %RCX.i550 = bitcast %union.anon* %32065 to i64*
  %32066 = load i32, i32* %ESI.i549
  %32067 = zext i32 %32066 to i64
  %32068 = load i64, i64* %PC.i548
  %32069 = add i64 %32068, 3
  store i64 %32069, i64* %PC.i548
  %32070 = shl i64 %32067, 32
  %32071 = ashr exact i64 %32070, 32
  store i64 %32071, i64* %RCX.i550, align 8
  store %struct.Memory* %loadMem_4abfd0, %struct.Memory** %MEMORY
  %loadMem_4abfd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32073 = getelementptr inbounds %struct.GPR, %struct.GPR* %32072, i32 0, i32 33
  %32074 = getelementptr inbounds %struct.Reg, %struct.Reg* %32073, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %32074 to i64*
  %32075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32076 = getelementptr inbounds %struct.GPR, %struct.GPR* %32075, i32 0, i32 5
  %32077 = getelementptr inbounds %struct.Reg, %struct.Reg* %32076, i32 0, i32 0
  %RCX.i547 = bitcast %union.anon* %32077 to i64*
  %32078 = load i64, i64* %RCX.i547
  %32079 = load i64, i64* %PC.i546
  %32080 = add i64 %32079, 4
  store i64 %32080, i64* %PC.i546
  %32081 = shl i64 %32078, 4
  %32082 = icmp slt i64 %32081, 0
  %32083 = shl i64 %32081, 1
  store i64 %32083, i64* %RCX.i547, align 8
  %32084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %32085 = zext i1 %32082 to i8
  store i8 %32085, i8* %32084, align 1
  %32086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %32087 = trunc i64 %32083 to i32
  %32088 = and i32 %32087, 254
  %32089 = call i32 @llvm.ctpop.i32(i32 %32088)
  %32090 = trunc i32 %32089 to i8
  %32091 = and i8 %32090, 1
  %32092 = xor i8 %32091, 1
  store i8 %32092, i8* %32086, align 1
  %32093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32093, align 1
  %32094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %32095 = icmp eq i64 %32083, 0
  %32096 = zext i1 %32095 to i8
  store i8 %32096, i8* %32094, align 1
  %32097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32098 = lshr i64 %32083, 63
  %32099 = trunc i64 %32098 to i8
  store i8 %32099, i8* %32097, align 1
  %32100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32100, align 1
  store %struct.Memory* %loadMem_4abfd3, %struct.Memory** %MEMORY
  %loadMem_4abfd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32102 = getelementptr inbounds %struct.GPR, %struct.GPR* %32101, i32 0, i32 33
  %32103 = getelementptr inbounds %struct.Reg, %struct.Reg* %32102, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %32103 to i64*
  %32104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32105 = getelementptr inbounds %struct.GPR, %struct.GPR* %32104, i32 0, i32 1
  %32106 = getelementptr inbounds %struct.Reg, %struct.Reg* %32105, i32 0, i32 0
  %RAX.i544 = bitcast %union.anon* %32106 to i64*
  %32107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32108 = getelementptr inbounds %struct.GPR, %struct.GPR* %32107, i32 0, i32 5
  %32109 = getelementptr inbounds %struct.Reg, %struct.Reg* %32108, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %32109 to i64*
  %32110 = load i64, i64* %RAX.i544
  %32111 = load i64, i64* %RCX.i545
  %32112 = load i64, i64* %PC.i543
  %32113 = add i64 %32112, 3
  store i64 %32113, i64* %PC.i543
  %32114 = add i64 %32111, %32110
  store i64 %32114, i64* %RAX.i544, align 8
  %32115 = icmp ult i64 %32114, %32110
  %32116 = icmp ult i64 %32114, %32111
  %32117 = or i1 %32115, %32116
  %32118 = zext i1 %32117 to i8
  %32119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32118, i8* %32119, align 1
  %32120 = trunc i64 %32114 to i32
  %32121 = and i32 %32120, 255
  %32122 = call i32 @llvm.ctpop.i32(i32 %32121)
  %32123 = trunc i32 %32122 to i8
  %32124 = and i8 %32123, 1
  %32125 = xor i8 %32124, 1
  %32126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32125, i8* %32126, align 1
  %32127 = xor i64 %32111, %32110
  %32128 = xor i64 %32127, %32114
  %32129 = lshr i64 %32128, 4
  %32130 = trunc i64 %32129 to i8
  %32131 = and i8 %32130, 1
  %32132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32131, i8* %32132, align 1
  %32133 = icmp eq i64 %32114, 0
  %32134 = zext i1 %32133 to i8
  %32135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32134, i8* %32135, align 1
  %32136 = lshr i64 %32114, 63
  %32137 = trunc i64 %32136 to i8
  %32138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32137, i8* %32138, align 1
  %32139 = lshr i64 %32110, 63
  %32140 = lshr i64 %32111, 63
  %32141 = xor i64 %32136, %32139
  %32142 = xor i64 %32136, %32140
  %32143 = add i64 %32141, %32142
  %32144 = icmp eq i64 %32143, 2
  %32145 = zext i1 %32144 to i8
  %32146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32145, i8* %32146, align 1
  store %struct.Memory* %loadMem_4abfd7, %struct.Memory** %MEMORY
  %loadMem_4abfda = load %struct.Memory*, %struct.Memory** %MEMORY
  %32147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32148 = getelementptr inbounds %struct.GPR, %struct.GPR* %32147, i32 0, i32 33
  %32149 = getelementptr inbounds %struct.Reg, %struct.Reg* %32148, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %32149 to i64*
  %32150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32151 = getelementptr inbounds %struct.GPR, %struct.GPR* %32150, i32 0, i32 9
  %32152 = getelementptr inbounds %struct.Reg, %struct.Reg* %32151, i32 0, i32 0
  %RSI.i541 = bitcast %union.anon* %32152 to i64*
  %32153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32154 = getelementptr inbounds %struct.GPR, %struct.GPR* %32153, i32 0, i32 15
  %32155 = getelementptr inbounds %struct.Reg, %struct.Reg* %32154, i32 0, i32 0
  %RBP.i542 = bitcast %union.anon* %32155 to i64*
  %32156 = load i64, i64* %RBP.i542
  %32157 = sub i64 %32156, 28
  %32158 = load i64, i64* %PC.i540
  %32159 = add i64 %32158, 3
  store i64 %32159, i64* %PC.i540
  %32160 = inttoptr i64 %32157 to i32*
  %32161 = load i32, i32* %32160
  %32162 = zext i32 %32161 to i64
  store i64 %32162, i64* %RSI.i541, align 8
  store %struct.Memory* %loadMem_4abfda, %struct.Memory** %MEMORY
  %loadMem_4abfdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %32163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32164 = getelementptr inbounds %struct.GPR, %struct.GPR* %32163, i32 0, i32 33
  %32165 = getelementptr inbounds %struct.Reg, %struct.Reg* %32164, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %32165 to i64*
  %32166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32167 = getelementptr inbounds %struct.GPR, %struct.GPR* %32166, i32 0, i32 9
  %32168 = getelementptr inbounds %struct.Reg, %struct.Reg* %32167, i32 0, i32 0
  %RSI.i538 = bitcast %union.anon* %32168 to i64*
  %32169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32170 = getelementptr inbounds %struct.GPR, %struct.GPR* %32169, i32 0, i32 15
  %32171 = getelementptr inbounds %struct.Reg, %struct.Reg* %32170, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %32171 to i64*
  %32172 = load i64, i64* %RSI.i538
  %32173 = load i64, i64* %RBP.i539
  %32174 = sub i64 %32173, 88
  %32175 = load i64, i64* %PC.i537
  %32176 = add i64 %32175, 3
  store i64 %32176, i64* %PC.i537
  %32177 = trunc i64 %32172 to i32
  %32178 = inttoptr i64 %32174 to i32*
  %32179 = load i32, i32* %32178
  %32180 = add i32 %32179, %32177
  %32181 = zext i32 %32180 to i64
  store i64 %32181, i64* %RSI.i538, align 8
  %32182 = icmp ult i32 %32180, %32177
  %32183 = icmp ult i32 %32180, %32179
  %32184 = or i1 %32182, %32183
  %32185 = zext i1 %32184 to i8
  %32186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32185, i8* %32186, align 1
  %32187 = and i32 %32180, 255
  %32188 = call i32 @llvm.ctpop.i32(i32 %32187)
  %32189 = trunc i32 %32188 to i8
  %32190 = and i8 %32189, 1
  %32191 = xor i8 %32190, 1
  %32192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32191, i8* %32192, align 1
  %32193 = xor i32 %32179, %32177
  %32194 = xor i32 %32193, %32180
  %32195 = lshr i32 %32194, 4
  %32196 = trunc i32 %32195 to i8
  %32197 = and i8 %32196, 1
  %32198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32197, i8* %32198, align 1
  %32199 = icmp eq i32 %32180, 0
  %32200 = zext i1 %32199 to i8
  %32201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32200, i8* %32201, align 1
  %32202 = lshr i32 %32180, 31
  %32203 = trunc i32 %32202 to i8
  %32204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32203, i8* %32204, align 1
  %32205 = lshr i32 %32177, 31
  %32206 = lshr i32 %32179, 31
  %32207 = xor i32 %32202, %32205
  %32208 = xor i32 %32202, %32206
  %32209 = add i32 %32207, %32208
  %32210 = icmp eq i32 %32209, 2
  %32211 = zext i1 %32210 to i8
  %32212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32211, i8* %32212, align 1
  store %struct.Memory* %loadMem_4abfdd, %struct.Memory** %MEMORY
  %loadMem_4abfe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32214 = getelementptr inbounds %struct.GPR, %struct.GPR* %32213, i32 0, i32 33
  %32215 = getelementptr inbounds %struct.Reg, %struct.Reg* %32214, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %32215 to i64*
  %32216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32217 = getelementptr inbounds %struct.GPR, %struct.GPR* %32216, i32 0, i32 9
  %32218 = getelementptr inbounds %struct.Reg, %struct.Reg* %32217, i32 0, i32 0
  %ESI.i535 = bitcast %union.anon* %32218 to i32*
  %32219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32220 = getelementptr inbounds %struct.GPR, %struct.GPR* %32219, i32 0, i32 5
  %32221 = getelementptr inbounds %struct.Reg, %struct.Reg* %32220, i32 0, i32 0
  %RCX.i536 = bitcast %union.anon* %32221 to i64*
  %32222 = load i32, i32* %ESI.i535
  %32223 = zext i32 %32222 to i64
  %32224 = load i64, i64* %PC.i534
  %32225 = add i64 %32224, 3
  store i64 %32225, i64* %PC.i534
  %32226 = shl i64 %32223, 32
  %32227 = ashr exact i64 %32226, 32
  store i64 %32227, i64* %RCX.i536, align 8
  store %struct.Memory* %loadMem_4abfe0, %struct.Memory** %MEMORY
  %loadMem_4abfe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32229 = getelementptr inbounds %struct.GPR, %struct.GPR* %32228, i32 0, i32 33
  %32230 = getelementptr inbounds %struct.Reg, %struct.Reg* %32229, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %32230 to i64*
  %32231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32232 = getelementptr inbounds %struct.GPR, %struct.GPR* %32231, i32 0, i32 1
  %32233 = getelementptr inbounds %struct.Reg, %struct.Reg* %32232, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %32233 to i64*
  %32234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32235 = getelementptr inbounds %struct.GPR, %struct.GPR* %32234, i32 0, i32 5
  %32236 = getelementptr inbounds %struct.Reg, %struct.Reg* %32235, i32 0, i32 0
  %RCX.i532 = bitcast %union.anon* %32236 to i64*
  %32237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32238 = getelementptr inbounds %struct.GPR, %struct.GPR* %32237, i32 0, i32 9
  %32239 = getelementptr inbounds %struct.Reg, %struct.Reg* %32238, i32 0, i32 0
  %RSI.i533 = bitcast %union.anon* %32239 to i64*
  %32240 = load i64, i64* %RAX.i531
  %32241 = load i64, i64* %RCX.i532
  %32242 = mul i64 %32241, 2
  %32243 = add i64 %32242, %32240
  %32244 = load i64, i64* %PC.i530
  %32245 = add i64 %32244, 4
  store i64 %32245, i64* %PC.i530
  %32246 = inttoptr i64 %32243 to i16*
  %32247 = load i16, i16* %32246
  %32248 = zext i16 %32247 to i64
  store i64 %32248, i64* %RSI.i533, align 8
  store %struct.Memory* %loadMem_4abfe3, %struct.Memory** %MEMORY
  %loadMem_4abfe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32250 = getelementptr inbounds %struct.GPR, %struct.GPR* %32249, i32 0, i32 33
  %32251 = getelementptr inbounds %struct.Reg, %struct.Reg* %32250, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %32251 to i64*
  %32252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32253 = getelementptr inbounds %struct.GPR, %struct.GPR* %32252, i32 0, i32 9
  %32254 = getelementptr inbounds %struct.Reg, %struct.Reg* %32253, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %32254 to i32*
  %32255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32256 = getelementptr inbounds %struct.GPR, %struct.GPR* %32255, i32 0, i32 7
  %32257 = getelementptr inbounds %struct.Reg, %struct.Reg* %32256, i32 0, i32 0
  %RDX.i529 = bitcast %union.anon* %32257 to i64*
  %32258 = load i64, i64* %RDX.i529
  %32259 = load i32, i32* %ESI.i
  %32260 = zext i32 %32259 to i64
  %32261 = load i64, i64* %PC.i528
  %32262 = add i64 %32261, 2
  store i64 %32262, i64* %PC.i528
  %32263 = trunc i64 %32258 to i32
  %32264 = add i32 %32259, %32263
  %32265 = zext i32 %32264 to i64
  store i64 %32265, i64* %RDX.i529, align 8
  %32266 = icmp ult i32 %32264, %32263
  %32267 = icmp ult i32 %32264, %32259
  %32268 = or i1 %32266, %32267
  %32269 = zext i1 %32268 to i8
  %32270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32269, i8* %32270, align 1
  %32271 = and i32 %32264, 255
  %32272 = call i32 @llvm.ctpop.i32(i32 %32271)
  %32273 = trunc i32 %32272 to i8
  %32274 = and i8 %32273, 1
  %32275 = xor i8 %32274, 1
  %32276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32275, i8* %32276, align 1
  %32277 = xor i64 %32260, %32258
  %32278 = trunc i64 %32277 to i32
  %32279 = xor i32 %32278, %32264
  %32280 = lshr i32 %32279, 4
  %32281 = trunc i32 %32280 to i8
  %32282 = and i8 %32281, 1
  %32283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32282, i8* %32283, align 1
  %32284 = icmp eq i32 %32264, 0
  %32285 = zext i1 %32284 to i8
  %32286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32285, i8* %32286, align 1
  %32287 = lshr i32 %32264, 31
  %32288 = trunc i32 %32287 to i8
  %32289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32288, i8* %32289, align 1
  %32290 = lshr i32 %32263, 31
  %32291 = lshr i32 %32259, 31
  %32292 = xor i32 %32287, %32290
  %32293 = xor i32 %32287, %32291
  %32294 = add i32 %32292, %32293
  %32295 = icmp eq i32 %32294, 2
  %32296 = zext i1 %32295 to i8
  %32297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32296, i8* %32297, align 1
  store %struct.Memory* %loadMem_4abfe7, %struct.Memory** %MEMORY
  %loadMem_4abfe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32299 = getelementptr inbounds %struct.GPR, %struct.GPR* %32298, i32 0, i32 33
  %32300 = getelementptr inbounds %struct.Reg, %struct.Reg* %32299, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %32300 to i64*
  %32301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32302 = getelementptr inbounds %struct.GPR, %struct.GPR* %32301, i32 0, i32 1
  %32303 = getelementptr inbounds %struct.Reg, %struct.Reg* %32302, i32 0, i32 0
  %RAX.i527 = bitcast %union.anon* %32303 to i64*
  %32304 = load i64, i64* %PC.i526
  %32305 = add i64 %32304, 8
  store i64 %32305, i64* %PC.i526
  %32306 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %32306, i64* %RAX.i527, align 8
  store %struct.Memory* %loadMem_4abfe9, %struct.Memory** %MEMORY
  %loadMem_4abff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32308 = getelementptr inbounds %struct.GPR, %struct.GPR* %32307, i32 0, i32 33
  %32309 = getelementptr inbounds %struct.Reg, %struct.Reg* %32308, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %32309 to i64*
  %32310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32311 = getelementptr inbounds %struct.GPR, %struct.GPR* %32310, i32 0, i32 1
  %32312 = getelementptr inbounds %struct.Reg, %struct.Reg* %32311, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %32312 to i64*
  %32313 = load i64, i64* %RAX.i525
  %32314 = load i64, i64* %PC.i524
  %32315 = add i64 %32314, 6
  store i64 %32315, i64* %PC.i524
  %32316 = add i64 13112, %32313
  store i64 %32316, i64* %RAX.i525, align 8
  %32317 = icmp ult i64 %32316, %32313
  %32318 = icmp ult i64 %32316, 13112
  %32319 = or i1 %32317, %32318
  %32320 = zext i1 %32319 to i8
  %32321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32320, i8* %32321, align 1
  %32322 = trunc i64 %32316 to i32
  %32323 = and i32 %32322, 255
  %32324 = call i32 @llvm.ctpop.i32(i32 %32323)
  %32325 = trunc i32 %32324 to i8
  %32326 = and i8 %32325, 1
  %32327 = xor i8 %32326, 1
  %32328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32327, i8* %32328, align 1
  %32329 = xor i64 13112, %32313
  %32330 = xor i64 %32329, %32316
  %32331 = lshr i64 %32330, 4
  %32332 = trunc i64 %32331 to i8
  %32333 = and i8 %32332, 1
  %32334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32333, i8* %32334, align 1
  %32335 = icmp eq i64 %32316, 0
  %32336 = zext i1 %32335 to i8
  %32337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32336, i8* %32337, align 1
  %32338 = lshr i64 %32316, 63
  %32339 = trunc i64 %32338 to i8
  %32340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32339, i8* %32340, align 1
  %32341 = lshr i64 %32313, 63
  %32342 = xor i64 %32338, %32341
  %32343 = add i64 %32342, %32338
  %32344 = icmp eq i64 %32343, 2
  %32345 = zext i1 %32344 to i8
  %32346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32345, i8* %32346, align 1
  store %struct.Memory* %loadMem_4abff1, %struct.Memory** %MEMORY
  %loadMem_4abff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32348 = getelementptr inbounds %struct.GPR, %struct.GPR* %32347, i32 0, i32 33
  %32349 = getelementptr inbounds %struct.Reg, %struct.Reg* %32348, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %32349 to i64*
  %32350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32351 = getelementptr inbounds %struct.GPR, %struct.GPR* %32350, i32 0, i32 5
  %32352 = getelementptr inbounds %struct.Reg, %struct.Reg* %32351, i32 0, i32 0
  %RCX.i522 = bitcast %union.anon* %32352 to i64*
  %32353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32354 = getelementptr inbounds %struct.GPR, %struct.GPR* %32353, i32 0, i32 15
  %32355 = getelementptr inbounds %struct.Reg, %struct.Reg* %32354, i32 0, i32 0
  %RBP.i523 = bitcast %union.anon* %32355 to i64*
  %32356 = load i64, i64* %RBP.i523
  %32357 = sub i64 %32356, 24
  %32358 = load i64, i64* %PC.i521
  %32359 = add i64 %32358, 4
  store i64 %32359, i64* %PC.i521
  %32360 = inttoptr i64 %32357 to i32*
  %32361 = load i32, i32* %32360
  %32362 = sext i32 %32361 to i64
  store i64 %32362, i64* %RCX.i522, align 8
  store %struct.Memory* %loadMem_4abff7, %struct.Memory** %MEMORY
  %loadMem_4abffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %32363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32364 = getelementptr inbounds %struct.GPR, %struct.GPR* %32363, i32 0, i32 33
  %32365 = getelementptr inbounds %struct.Reg, %struct.Reg* %32364, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %32365 to i64*
  %32366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32367 = getelementptr inbounds %struct.GPR, %struct.GPR* %32366, i32 0, i32 5
  %32368 = getelementptr inbounds %struct.Reg, %struct.Reg* %32367, i32 0, i32 0
  %RCX.i520 = bitcast %union.anon* %32368 to i64*
  %32369 = load i64, i64* %RCX.i520
  %32370 = load i64, i64* %PC.i519
  %32371 = add i64 %32370, 4
  store i64 %32371, i64* %PC.i519
  %32372 = shl i64 %32369, 5
  %32373 = icmp slt i64 %32372, 0
  %32374 = shl i64 %32372, 1
  store i64 %32374, i64* %RCX.i520, align 8
  %32375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %32376 = zext i1 %32373 to i8
  store i8 %32376, i8* %32375, align 1
  %32377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %32378 = trunc i64 %32374 to i32
  %32379 = and i32 %32378, 254
  %32380 = call i32 @llvm.ctpop.i32(i32 %32379)
  %32381 = trunc i32 %32380 to i8
  %32382 = and i8 %32381, 1
  %32383 = xor i8 %32382, 1
  store i8 %32383, i8* %32377, align 1
  %32384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32384, align 1
  %32385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %32386 = icmp eq i64 %32374, 0
  %32387 = zext i1 %32386 to i8
  store i8 %32387, i8* %32385, align 1
  %32388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32389 = lshr i64 %32374, 63
  %32390 = trunc i64 %32389 to i8
  store i8 %32390, i8* %32388, align 1
  %32391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32391, align 1
  store %struct.Memory* %loadMem_4abffb, %struct.Memory** %MEMORY
  %loadMem_4abfff = load %struct.Memory*, %struct.Memory** %MEMORY
  %32392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32393 = getelementptr inbounds %struct.GPR, %struct.GPR* %32392, i32 0, i32 33
  %32394 = getelementptr inbounds %struct.Reg, %struct.Reg* %32393, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %32394 to i64*
  %32395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32396 = getelementptr inbounds %struct.GPR, %struct.GPR* %32395, i32 0, i32 1
  %32397 = getelementptr inbounds %struct.Reg, %struct.Reg* %32396, i32 0, i32 0
  %RAX.i517 = bitcast %union.anon* %32397 to i64*
  %32398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32399 = getelementptr inbounds %struct.GPR, %struct.GPR* %32398, i32 0, i32 5
  %32400 = getelementptr inbounds %struct.Reg, %struct.Reg* %32399, i32 0, i32 0
  %RCX.i518 = bitcast %union.anon* %32400 to i64*
  %32401 = load i64, i64* %RAX.i517
  %32402 = load i64, i64* %RCX.i518
  %32403 = load i64, i64* %PC.i516
  %32404 = add i64 %32403, 3
  store i64 %32404, i64* %PC.i516
  %32405 = add i64 %32402, %32401
  store i64 %32405, i64* %RAX.i517, align 8
  %32406 = icmp ult i64 %32405, %32401
  %32407 = icmp ult i64 %32405, %32402
  %32408 = or i1 %32406, %32407
  %32409 = zext i1 %32408 to i8
  %32410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32409, i8* %32410, align 1
  %32411 = trunc i64 %32405 to i32
  %32412 = and i32 %32411, 255
  %32413 = call i32 @llvm.ctpop.i32(i32 %32412)
  %32414 = trunc i32 %32413 to i8
  %32415 = and i8 %32414, 1
  %32416 = xor i8 %32415, 1
  %32417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32416, i8* %32417, align 1
  %32418 = xor i64 %32402, %32401
  %32419 = xor i64 %32418, %32405
  %32420 = lshr i64 %32419, 4
  %32421 = trunc i64 %32420 to i8
  %32422 = and i8 %32421, 1
  %32423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32422, i8* %32423, align 1
  %32424 = icmp eq i64 %32405, 0
  %32425 = zext i1 %32424 to i8
  %32426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32425, i8* %32426, align 1
  %32427 = lshr i64 %32405, 63
  %32428 = trunc i64 %32427 to i8
  %32429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32428, i8* %32429, align 1
  %32430 = lshr i64 %32401, 63
  %32431 = lshr i64 %32402, 63
  %32432 = xor i64 %32427, %32430
  %32433 = xor i64 %32427, %32431
  %32434 = add i64 %32432, %32433
  %32435 = icmp eq i64 %32434, 2
  %32436 = zext i1 %32435 to i8
  %32437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32436, i8* %32437, align 1
  store %struct.Memory* %loadMem_4abfff, %struct.Memory** %MEMORY
  %loadMem_4ac002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32439 = getelementptr inbounds %struct.GPR, %struct.GPR* %32438, i32 0, i32 33
  %32440 = getelementptr inbounds %struct.Reg, %struct.Reg* %32439, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %32440 to i64*
  %32441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32442 = getelementptr inbounds %struct.GPR, %struct.GPR* %32441, i32 0, i32 5
  %32443 = getelementptr inbounds %struct.Reg, %struct.Reg* %32442, i32 0, i32 0
  %RCX.i514 = bitcast %union.anon* %32443 to i64*
  %32444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32445 = getelementptr inbounds %struct.GPR, %struct.GPR* %32444, i32 0, i32 15
  %32446 = getelementptr inbounds %struct.Reg, %struct.Reg* %32445, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %32446 to i64*
  %32447 = load i64, i64* %RBP.i515
  %32448 = sub i64 %32447, 28
  %32449 = load i64, i64* %PC.i513
  %32450 = add i64 %32449, 4
  store i64 %32450, i64* %PC.i513
  %32451 = inttoptr i64 %32448 to i32*
  %32452 = load i32, i32* %32451
  %32453 = sext i32 %32452 to i64
  store i64 %32453, i64* %RCX.i514, align 8
  store %struct.Memory* %loadMem_4ac002, %struct.Memory** %MEMORY
  %loadMem_4ac006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32455 = getelementptr inbounds %struct.GPR, %struct.GPR* %32454, i32 0, i32 33
  %32456 = getelementptr inbounds %struct.Reg, %struct.Reg* %32455, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %32456 to i64*
  %32457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32458 = getelementptr inbounds %struct.GPR, %struct.GPR* %32457, i32 0, i32 7
  %32459 = getelementptr inbounds %struct.Reg, %struct.Reg* %32458, i32 0, i32 0
  %EDX.i510 = bitcast %union.anon* %32459 to i32*
  %32460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32461 = getelementptr inbounds %struct.GPR, %struct.GPR* %32460, i32 0, i32 1
  %32462 = getelementptr inbounds %struct.Reg, %struct.Reg* %32461, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %32462 to i64*
  %32463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32464 = getelementptr inbounds %struct.GPR, %struct.GPR* %32463, i32 0, i32 5
  %32465 = getelementptr inbounds %struct.Reg, %struct.Reg* %32464, i32 0, i32 0
  %RCX.i512 = bitcast %union.anon* %32465 to i64*
  %32466 = load i64, i64* %RAX.i511
  %32467 = load i64, i64* %RCX.i512
  %32468 = mul i64 %32467, 4
  %32469 = add i64 %32468, %32466
  %32470 = load i32, i32* %EDX.i510
  %32471 = zext i32 %32470 to i64
  %32472 = load i64, i64* %PC.i509
  %32473 = add i64 %32472, 3
  store i64 %32473, i64* %PC.i509
  %32474 = inttoptr i64 %32469 to i32*
  store i32 %32470, i32* %32474
  store %struct.Memory* %loadMem_4ac006, %struct.Memory** %MEMORY
  %loadMem_4ac009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32476 = getelementptr inbounds %struct.GPR, %struct.GPR* %32475, i32 0, i32 33
  %32477 = getelementptr inbounds %struct.Reg, %struct.Reg* %32476, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %32477 to i64*
  %32478 = load i64, i64* %PC.i508
  %32479 = add i64 %32478, 684
  %32480 = load i64, i64* %PC.i508
  %32481 = add i64 %32480, 5
  store i64 %32481, i64* %PC.i508
  %32482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %32479, i64* %32482, align 8
  store %struct.Memory* %loadMem_4ac009, %struct.Memory** %MEMORY
  br label %block_.L_4ac2b5

block_.L_4ac00e:                                  ; preds = %block_4abf8f
  %loadMem_4ac00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %32483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32484 = getelementptr inbounds %struct.GPR, %struct.GPR* %32483, i32 0, i32 33
  %32485 = getelementptr inbounds %struct.Reg, %struct.Reg* %32484, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %32485 to i64*
  %32486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32487 = getelementptr inbounds %struct.GPR, %struct.GPR* %32486, i32 0, i32 1
  %32488 = getelementptr inbounds %struct.Reg, %struct.Reg* %32487, i32 0, i32 0
  %RAX.i507 = bitcast %union.anon* %32488 to i64*
  %32489 = load i64, i64* %PC.i506
  %32490 = add i64 %32489, 8
  store i64 %32490, i64* %PC.i506
  %32491 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %32491, i64* %RAX.i507, align 8
  store %struct.Memory* %loadMem_4ac00e, %struct.Memory** %MEMORY
  %loadMem_4ac016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32493 = getelementptr inbounds %struct.GPR, %struct.GPR* %32492, i32 0, i32 33
  %32494 = getelementptr inbounds %struct.Reg, %struct.Reg* %32493, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %32494 to i64*
  %32495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32496 = getelementptr inbounds %struct.GPR, %struct.GPR* %32495, i32 0, i32 1
  %32497 = getelementptr inbounds %struct.Reg, %struct.Reg* %32496, i32 0, i32 0
  %RAX.i505 = bitcast %union.anon* %32497 to i64*
  %32498 = load i64, i64* %RAX.i505
  %32499 = add i64 %32498, 72724
  %32500 = load i64, i64* %PC.i504
  %32501 = add i64 %32500, 7
  store i64 %32501, i64* %PC.i504
  %32502 = inttoptr i64 %32499 to i32*
  %32503 = load i32, i32* %32502
  %32504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %32504, align 1
  %32505 = and i32 %32503, 255
  %32506 = call i32 @llvm.ctpop.i32(i32 %32505)
  %32507 = trunc i32 %32506 to i8
  %32508 = and i8 %32507, 1
  %32509 = xor i8 %32508, 1
  %32510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32509, i8* %32510, align 1
  %32511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32511, align 1
  %32512 = icmp eq i32 %32503, 0
  %32513 = zext i1 %32512 to i8
  %32514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32513, i8* %32514, align 1
  %32515 = lshr i32 %32503, 31
  %32516 = trunc i32 %32515 to i8
  %32517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32516, i8* %32517, align 1
  %32518 = lshr i32 %32503, 31
  %32519 = xor i32 %32515, %32518
  %32520 = add i32 %32519, %32518
  %32521 = icmp eq i32 %32520, 2
  %32522 = zext i1 %32521 to i8
  %32523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32522, i8* %32523, align 1
  store %struct.Memory* %loadMem_4ac016, %struct.Memory** %MEMORY
  %loadMem_4ac01d = load %struct.Memory*, %struct.Memory** %MEMORY
  %32524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32525 = getelementptr inbounds %struct.GPR, %struct.GPR* %32524, i32 0, i32 33
  %32526 = getelementptr inbounds %struct.Reg, %struct.Reg* %32525, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %32526 to i64*
  %32527 = load i64, i64* %PC.i503
  %32528 = add i64 %32527, 589
  %32529 = load i64, i64* %PC.i503
  %32530 = add i64 %32529, 6
  %32531 = load i64, i64* %PC.i503
  %32532 = add i64 %32531, 6
  store i64 %32532, i64* %PC.i503
  %32533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %32534 = load i8, i8* %32533, align 1
  %32535 = icmp eq i8 %32534, 0
  %32536 = zext i1 %32535 to i8
  store i8 %32536, i8* %BRANCH_TAKEN, align 1
  %32537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32538 = select i1 %32535, i64 %32528, i64 %32530
  store i64 %32538, i64* %32537, align 8
  store %struct.Memory* %loadMem_4ac01d, %struct.Memory** %MEMORY
  %loadBr_4ac01d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ac01d = icmp eq i8 %loadBr_4ac01d, 1
  br i1 %cmpBr_4ac01d, label %block_.L_4ac26a, label %block_4ac023

block_4ac023:                                     ; preds = %block_.L_4ac00e
  %loadMem_4ac023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32540 = getelementptr inbounds %struct.GPR, %struct.GPR* %32539, i32 0, i32 33
  %32541 = getelementptr inbounds %struct.Reg, %struct.Reg* %32540, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %32541 to i64*
  %32542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32543 = getelementptr inbounds %struct.GPR, %struct.GPR* %32542, i32 0, i32 1
  %32544 = getelementptr inbounds %struct.Reg, %struct.Reg* %32543, i32 0, i32 0
  %EAX.i501 = bitcast %union.anon* %32544 to i32*
  %32545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32546 = getelementptr inbounds %struct.GPR, %struct.GPR* %32545, i32 0, i32 1
  %32547 = getelementptr inbounds %struct.Reg, %struct.Reg* %32546, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %32547 to i64*
  %32548 = load i64, i64* %RAX.i502
  %32549 = load i32, i32* %EAX.i501
  %32550 = zext i32 %32549 to i64
  %32551 = load i64, i64* %PC.i500
  %32552 = add i64 %32551, 2
  store i64 %32552, i64* %PC.i500
  %32553 = xor i64 %32550, %32548
  %32554 = trunc i64 %32553 to i32
  %32555 = and i64 %32553, 4294967295
  store i64 %32555, i64* %RAX.i502, align 8
  %32556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %32556, align 1
  %32557 = and i32 %32554, 255
  %32558 = call i32 @llvm.ctpop.i32(i32 %32557)
  %32559 = trunc i32 %32558 to i8
  %32560 = and i8 %32559, 1
  %32561 = xor i8 %32560, 1
  %32562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32561, i8* %32562, align 1
  %32563 = icmp eq i32 %32554, 0
  %32564 = zext i1 %32563 to i8
  %32565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32564, i8* %32565, align 1
  %32566 = lshr i32 %32554, 31
  %32567 = trunc i32 %32566 to i8
  %32568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32567, i8* %32568, align 1
  %32569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32569, align 1
  %32570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32570, align 1
  store %struct.Memory* %loadMem_4ac023, %struct.Memory** %MEMORY
  %loadMem_4ac025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32572 = getelementptr inbounds %struct.GPR, %struct.GPR* %32571, i32 0, i32 33
  %32573 = getelementptr inbounds %struct.Reg, %struct.Reg* %32572, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %32573 to i64*
  %32574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32575 = getelementptr inbounds %struct.GPR, %struct.GPR* %32574, i32 0, i32 1
  %32576 = getelementptr inbounds %struct.Reg, %struct.Reg* %32575, i32 0, i32 0
  %EAX.i498 = bitcast %union.anon* %32576 to i32*
  %32577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32578 = getelementptr inbounds %struct.GPR, %struct.GPR* %32577, i32 0, i32 5
  %32579 = getelementptr inbounds %struct.Reg, %struct.Reg* %32578, i32 0, i32 0
  %RCX.i499 = bitcast %union.anon* %32579 to i64*
  %32580 = load i32, i32* %EAX.i498
  %32581 = zext i32 %32580 to i64
  %32582 = load i64, i64* %PC.i497
  %32583 = add i64 %32582, 2
  store i64 %32583, i64* %PC.i497
  %32584 = and i64 %32581, 4294967295
  store i64 %32584, i64* %RCX.i499, align 8
  store %struct.Memory* %loadMem_4ac025, %struct.Memory** %MEMORY
  %loadMem_4ac027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32586 = getelementptr inbounds %struct.GPR, %struct.GPR* %32585, i32 0, i32 33
  %32587 = getelementptr inbounds %struct.Reg, %struct.Reg* %32586, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %32587 to i64*
  %32588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32589 = getelementptr inbounds %struct.GPR, %struct.GPR* %32588, i32 0, i32 7
  %32590 = getelementptr inbounds %struct.Reg, %struct.Reg* %32589, i32 0, i32 0
  %RDX.i496 = bitcast %union.anon* %32590 to i64*
  %32591 = load i64, i64* %PC.i495
  %32592 = add i64 %32591, 8
  store i64 %32592, i64* %PC.i495
  %32593 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %32593, i64* %RDX.i496, align 8
  store %struct.Memory* %loadMem_4ac027, %struct.Memory** %MEMORY
  %loadMem_4ac02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %32594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32595 = getelementptr inbounds %struct.GPR, %struct.GPR* %32594, i32 0, i32 33
  %32596 = getelementptr inbounds %struct.Reg, %struct.Reg* %32595, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %32596 to i64*
  %32597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32598 = getelementptr inbounds %struct.GPR, %struct.GPR* %32597, i32 0, i32 7
  %32599 = getelementptr inbounds %struct.Reg, %struct.Reg* %32598, i32 0, i32 0
  %RDX.i494 = bitcast %union.anon* %32599 to i64*
  %32600 = load i64, i64* %RDX.i494
  %32601 = add i64 %32600, 72684
  %32602 = load i64, i64* %PC.i493
  %32603 = add i64 %32602, 7
  store i64 %32603, i64* %PC.i493
  %32604 = inttoptr i64 %32601 to i32*
  %32605 = load i32, i32* %32604
  %32606 = sext i32 %32605 to i64
  store i64 %32606, i64* %RDX.i494, align 8
  store %struct.Memory* %loadMem_4ac02f, %struct.Memory** %MEMORY
  %loadMem_4ac036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32608 = getelementptr inbounds %struct.GPR, %struct.GPR* %32607, i32 0, i32 33
  %32609 = getelementptr inbounds %struct.Reg, %struct.Reg* %32608, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %32609 to i64*
  %32610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32611 = getelementptr inbounds %struct.GPR, %struct.GPR* %32610, i32 0, i32 9
  %32612 = getelementptr inbounds %struct.Reg, %struct.Reg* %32611, i32 0, i32 0
  %RSI.i492 = bitcast %union.anon* %32612 to i64*
  %32613 = load i64, i64* %PC.i491
  %32614 = add i64 %32613, 8
  store i64 %32614, i64* %PC.i491
  %32615 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %32615, i64* %RSI.i492, align 8
  store %struct.Memory* %loadMem_4ac036, %struct.Memory** %MEMORY
  %loadMem_4ac03e = load %struct.Memory*, %struct.Memory** %MEMORY
  %32616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32617 = getelementptr inbounds %struct.GPR, %struct.GPR* %32616, i32 0, i32 33
  %32618 = getelementptr inbounds %struct.Reg, %struct.Reg* %32617, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %32618 to i64*
  %32619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32620 = getelementptr inbounds %struct.GPR, %struct.GPR* %32619, i32 0, i32 9
  %32621 = getelementptr inbounds %struct.Reg, %struct.Reg* %32620, i32 0, i32 0
  %RSI.i490 = bitcast %union.anon* %32621 to i64*
  %32622 = load i64, i64* %RSI.i490
  %32623 = load i64, i64* %PC.i489
  %32624 = add i64 %32623, 7
  store i64 %32624, i64* %PC.i489
  %32625 = add i64 13112, %32622
  store i64 %32625, i64* %RSI.i490, align 8
  %32626 = icmp ult i64 %32625, %32622
  %32627 = icmp ult i64 %32625, 13112
  %32628 = or i1 %32626, %32627
  %32629 = zext i1 %32628 to i8
  %32630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32629, i8* %32630, align 1
  %32631 = trunc i64 %32625 to i32
  %32632 = and i32 %32631, 255
  %32633 = call i32 @llvm.ctpop.i32(i32 %32632)
  %32634 = trunc i32 %32633 to i8
  %32635 = and i8 %32634, 1
  %32636 = xor i8 %32635, 1
  %32637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32636, i8* %32637, align 1
  %32638 = xor i64 13112, %32622
  %32639 = xor i64 %32638, %32625
  %32640 = lshr i64 %32639, 4
  %32641 = trunc i64 %32640 to i8
  %32642 = and i8 %32641, 1
  %32643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32642, i8* %32643, align 1
  %32644 = icmp eq i64 %32625, 0
  %32645 = zext i1 %32644 to i8
  %32646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32645, i8* %32646, align 1
  %32647 = lshr i64 %32625, 63
  %32648 = trunc i64 %32647 to i8
  %32649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32648, i8* %32649, align 1
  %32650 = lshr i64 %32622, 63
  %32651 = xor i64 %32647, %32650
  %32652 = add i64 %32651, %32647
  %32653 = icmp eq i64 %32652, 2
  %32654 = zext i1 %32653 to i8
  %32655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32654, i8* %32655, align 1
  store %struct.Memory* %loadMem_4ac03e, %struct.Memory** %MEMORY
  %loadMem_4ac045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32657 = getelementptr inbounds %struct.GPR, %struct.GPR* %32656, i32 0, i32 33
  %32658 = getelementptr inbounds %struct.Reg, %struct.Reg* %32657, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %32658 to i64*
  %32659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32660 = getelementptr inbounds %struct.GPR, %struct.GPR* %32659, i32 0, i32 11
  %32661 = getelementptr inbounds %struct.Reg, %struct.Reg* %32660, i32 0, i32 0
  %RDI.i487 = bitcast %union.anon* %32661 to i64*
  %32662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32663 = getelementptr inbounds %struct.GPR, %struct.GPR* %32662, i32 0, i32 15
  %32664 = getelementptr inbounds %struct.Reg, %struct.Reg* %32663, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %32664 to i64*
  %32665 = load i64, i64* %RBP.i488
  %32666 = sub i64 %32665, 24
  %32667 = load i64, i64* %PC.i486
  %32668 = add i64 %32667, 4
  store i64 %32668, i64* %PC.i486
  %32669 = inttoptr i64 %32666 to i32*
  %32670 = load i32, i32* %32669
  %32671 = sext i32 %32670 to i64
  store i64 %32671, i64* %RDI.i487, align 8
  store %struct.Memory* %loadMem_4ac045, %struct.Memory** %MEMORY
  %loadMem_4ac049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32673 = getelementptr inbounds %struct.GPR, %struct.GPR* %32672, i32 0, i32 33
  %32674 = getelementptr inbounds %struct.Reg, %struct.Reg* %32673, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %32674 to i64*
  %32675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32676 = getelementptr inbounds %struct.GPR, %struct.GPR* %32675, i32 0, i32 11
  %32677 = getelementptr inbounds %struct.Reg, %struct.Reg* %32676, i32 0, i32 0
  %RDI.i485 = bitcast %union.anon* %32677 to i64*
  %32678 = load i64, i64* %RDI.i485
  %32679 = load i64, i64* %PC.i484
  %32680 = add i64 %32679, 4
  store i64 %32680, i64* %PC.i484
  %32681 = shl i64 %32678, 5
  %32682 = icmp slt i64 %32681, 0
  %32683 = shl i64 %32681, 1
  store i64 %32683, i64* %RDI.i485, align 8
  %32684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %32685 = zext i1 %32682 to i8
  store i8 %32685, i8* %32684, align 1
  %32686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %32687 = trunc i64 %32683 to i32
  %32688 = and i32 %32687, 254
  %32689 = call i32 @llvm.ctpop.i32(i32 %32688)
  %32690 = trunc i32 %32689 to i8
  %32691 = and i8 %32690, 1
  %32692 = xor i8 %32691, 1
  store i8 %32692, i8* %32686, align 1
  %32693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32693, align 1
  %32694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %32695 = icmp eq i64 %32683, 0
  %32696 = zext i1 %32695 to i8
  store i8 %32696, i8* %32694, align 1
  %32697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32698 = lshr i64 %32683, 63
  %32699 = trunc i64 %32698 to i8
  store i8 %32699, i8* %32697, align 1
  %32700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32700, align 1
  store %struct.Memory* %loadMem_4ac049, %struct.Memory** %MEMORY
  %loadMem_4ac04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %32701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32702 = getelementptr inbounds %struct.GPR, %struct.GPR* %32701, i32 0, i32 33
  %32703 = getelementptr inbounds %struct.Reg, %struct.Reg* %32702, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %32703 to i64*
  %32704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32705 = getelementptr inbounds %struct.GPR, %struct.GPR* %32704, i32 0, i32 9
  %32706 = getelementptr inbounds %struct.Reg, %struct.Reg* %32705, i32 0, i32 0
  %RSI.i482 = bitcast %union.anon* %32706 to i64*
  %32707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32708 = getelementptr inbounds %struct.GPR, %struct.GPR* %32707, i32 0, i32 11
  %32709 = getelementptr inbounds %struct.Reg, %struct.Reg* %32708, i32 0, i32 0
  %RDI.i483 = bitcast %union.anon* %32709 to i64*
  %32710 = load i64, i64* %RSI.i482
  %32711 = load i64, i64* %RDI.i483
  %32712 = load i64, i64* %PC.i481
  %32713 = add i64 %32712, 3
  store i64 %32713, i64* %PC.i481
  %32714 = add i64 %32711, %32710
  store i64 %32714, i64* %RSI.i482, align 8
  %32715 = icmp ult i64 %32714, %32710
  %32716 = icmp ult i64 %32714, %32711
  %32717 = or i1 %32715, %32716
  %32718 = zext i1 %32717 to i8
  %32719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32718, i8* %32719, align 1
  %32720 = trunc i64 %32714 to i32
  %32721 = and i32 %32720, 255
  %32722 = call i32 @llvm.ctpop.i32(i32 %32721)
  %32723 = trunc i32 %32722 to i8
  %32724 = and i8 %32723, 1
  %32725 = xor i8 %32724, 1
  %32726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32725, i8* %32726, align 1
  %32727 = xor i64 %32711, %32710
  %32728 = xor i64 %32727, %32714
  %32729 = lshr i64 %32728, 4
  %32730 = trunc i64 %32729 to i8
  %32731 = and i8 %32730, 1
  %32732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32731, i8* %32732, align 1
  %32733 = icmp eq i64 %32714, 0
  %32734 = zext i1 %32733 to i8
  %32735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32734, i8* %32735, align 1
  %32736 = lshr i64 %32714, 63
  %32737 = trunc i64 %32736 to i8
  %32738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32737, i8* %32738, align 1
  %32739 = lshr i64 %32710, 63
  %32740 = lshr i64 %32711, 63
  %32741 = xor i64 %32736, %32739
  %32742 = xor i64 %32736, %32740
  %32743 = add i64 %32741, %32742
  %32744 = icmp eq i64 %32743, 2
  %32745 = zext i1 %32744 to i8
  %32746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32745, i8* %32746, align 1
  store %struct.Memory* %loadMem_4ac04d, %struct.Memory** %MEMORY
  %loadMem_4ac050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32748 = getelementptr inbounds %struct.GPR, %struct.GPR* %32747, i32 0, i32 33
  %32749 = getelementptr inbounds %struct.Reg, %struct.Reg* %32748, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %32749 to i64*
  %32750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32751 = getelementptr inbounds %struct.GPR, %struct.GPR* %32750, i32 0, i32 11
  %32752 = getelementptr inbounds %struct.Reg, %struct.Reg* %32751, i32 0, i32 0
  %RDI.i479 = bitcast %union.anon* %32752 to i64*
  %32753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32754 = getelementptr inbounds %struct.GPR, %struct.GPR* %32753, i32 0, i32 15
  %32755 = getelementptr inbounds %struct.Reg, %struct.Reg* %32754, i32 0, i32 0
  %RBP.i480 = bitcast %union.anon* %32755 to i64*
  %32756 = load i64, i64* %RBP.i480
  %32757 = sub i64 %32756, 28
  %32758 = load i64, i64* %PC.i478
  %32759 = add i64 %32758, 4
  store i64 %32759, i64* %PC.i478
  %32760 = inttoptr i64 %32757 to i32*
  %32761 = load i32, i32* %32760
  %32762 = sext i32 %32761 to i64
  store i64 %32762, i64* %RDI.i479, align 8
  store %struct.Memory* %loadMem_4ac050, %struct.Memory** %MEMORY
  %loadMem_4ac054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32764 = getelementptr inbounds %struct.GPR, %struct.GPR* %32763, i32 0, i32 33
  %32765 = getelementptr inbounds %struct.Reg, %struct.Reg* %32764, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %32765 to i64*
  %32766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32767 = getelementptr inbounds %struct.GPR, %struct.GPR* %32766, i32 0, i32 9
  %32768 = getelementptr inbounds %struct.Reg, %struct.Reg* %32767, i32 0, i32 0
  %RSI.i476 = bitcast %union.anon* %32768 to i64*
  %32769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32770 = getelementptr inbounds %struct.GPR, %struct.GPR* %32769, i32 0, i32 11
  %32771 = getelementptr inbounds %struct.Reg, %struct.Reg* %32770, i32 0, i32 0
  %RDI.i477 = bitcast %union.anon* %32771 to i64*
  %32772 = load i64, i64* %RSI.i476
  %32773 = load i64, i64* %RDI.i477
  %32774 = mul i64 %32773, 4
  %32775 = add i64 %32774, %32772
  %32776 = load i64, i64* %PC.i475
  %32777 = add i64 %32776, 4
  store i64 %32777, i64* %PC.i475
  %32778 = inttoptr i64 %32775 to i32*
  %32779 = load i32, i32* %32778
  %32780 = sext i32 %32779 to i64
  store i64 %32780, i64* %RSI.i476, align 8
  store %struct.Memory* %loadMem_4ac054, %struct.Memory** %MEMORY
  %loadMem_4ac058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32782 = getelementptr inbounds %struct.GPR, %struct.GPR* %32781, i32 0, i32 33
  %32783 = getelementptr inbounds %struct.Reg, %struct.Reg* %32782, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %32783 to i64*
  %32784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32785 = getelementptr inbounds %struct.GPR, %struct.GPR* %32784, i32 0, i32 11
  %32786 = getelementptr inbounds %struct.Reg, %struct.Reg* %32785, i32 0, i32 0
  %RDI.i474 = bitcast %union.anon* %32786 to i64*
  %32787 = load i64, i64* %PC.i473
  %32788 = add i64 %32787, 8
  store i64 %32788, i64* %PC.i473
  %32789 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %32789, i64* %RDI.i474, align 8
  store %struct.Memory* %loadMem_4ac058, %struct.Memory** %MEMORY
  %loadMem_4ac060 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32791 = getelementptr inbounds %struct.GPR, %struct.GPR* %32790, i32 0, i32 33
  %32792 = getelementptr inbounds %struct.Reg, %struct.Reg* %32791, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %32792 to i64*
  %32793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32794 = getelementptr inbounds %struct.GPR, %struct.GPR* %32793, i32 0, i32 11
  %32795 = getelementptr inbounds %struct.Reg, %struct.Reg* %32794, i32 0, i32 0
  %RDI.i472 = bitcast %union.anon* %32795 to i64*
  %32796 = load i64, i64* %RDI.i472
  %32797 = load i64, i64* %PC.i471
  %32798 = add i64 %32797, 7
  store i64 %32798, i64* %PC.i471
  %32799 = add i64 12600, %32796
  store i64 %32799, i64* %RDI.i472, align 8
  %32800 = icmp ult i64 %32799, %32796
  %32801 = icmp ult i64 %32799, 12600
  %32802 = or i1 %32800, %32801
  %32803 = zext i1 %32802 to i8
  %32804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32803, i8* %32804, align 1
  %32805 = trunc i64 %32799 to i32
  %32806 = and i32 %32805, 255
  %32807 = call i32 @llvm.ctpop.i32(i32 %32806)
  %32808 = trunc i32 %32807 to i8
  %32809 = and i8 %32808, 1
  %32810 = xor i8 %32809, 1
  %32811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32810, i8* %32811, align 1
  %32812 = xor i64 12600, %32796
  %32813 = xor i64 %32812, %32799
  %32814 = lshr i64 %32813, 4
  %32815 = trunc i64 %32814 to i8
  %32816 = and i8 %32815, 1
  %32817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32816, i8* %32817, align 1
  %32818 = icmp eq i64 %32799, 0
  %32819 = zext i1 %32818 to i8
  %32820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32819, i8* %32820, align 1
  %32821 = lshr i64 %32799, 63
  %32822 = trunc i64 %32821 to i8
  %32823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32822, i8* %32823, align 1
  %32824 = lshr i64 %32796, 63
  %32825 = xor i64 %32821, %32824
  %32826 = add i64 %32825, %32821
  %32827 = icmp eq i64 %32826, 2
  %32828 = zext i1 %32827 to i8
  %32829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32828, i8* %32829, align 1
  store %struct.Memory* %loadMem_4ac060, %struct.Memory** %MEMORY
  %loadMem_4ac067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32831 = getelementptr inbounds %struct.GPR, %struct.GPR* %32830, i32 0, i32 33
  %32832 = getelementptr inbounds %struct.Reg, %struct.Reg* %32831, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %32832 to i64*
  %32833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32834 = getelementptr inbounds %struct.GPR, %struct.GPR* %32833, i32 0, i32 1
  %32835 = getelementptr inbounds %struct.Reg, %struct.Reg* %32834, i32 0, i32 0
  %RAX.i469 = bitcast %union.anon* %32835 to i64*
  %32836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32837 = getelementptr inbounds %struct.GPR, %struct.GPR* %32836, i32 0, i32 15
  %32838 = getelementptr inbounds %struct.Reg, %struct.Reg* %32837, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %32838 to i64*
  %32839 = load i64, i64* %RBP.i470
  %32840 = sub i64 %32839, 24
  %32841 = load i64, i64* %PC.i468
  %32842 = add i64 %32841, 3
  store i64 %32842, i64* %PC.i468
  %32843 = inttoptr i64 %32840 to i32*
  %32844 = load i32, i32* %32843
  %32845 = zext i32 %32844 to i64
  store i64 %32845, i64* %RAX.i469, align 8
  store %struct.Memory* %loadMem_4ac067, %struct.Memory** %MEMORY
  %loadMem_4ac06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %32846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32847 = getelementptr inbounds %struct.GPR, %struct.GPR* %32846, i32 0, i32 33
  %32848 = getelementptr inbounds %struct.Reg, %struct.Reg* %32847, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %32848 to i64*
  %32849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32850 = getelementptr inbounds %struct.GPR, %struct.GPR* %32849, i32 0, i32 1
  %32851 = getelementptr inbounds %struct.Reg, %struct.Reg* %32850, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %32851 to i64*
  %32852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32853 = getelementptr inbounds %struct.GPR, %struct.GPR* %32852, i32 0, i32 15
  %32854 = getelementptr inbounds %struct.Reg, %struct.Reg* %32853, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %32854 to i64*
  %32855 = load i64, i64* %RAX.i466
  %32856 = load i64, i64* %RBP.i467
  %32857 = sub i64 %32856, 84
  %32858 = load i64, i64* %PC.i465
  %32859 = add i64 %32858, 3
  store i64 %32859, i64* %PC.i465
  %32860 = trunc i64 %32855 to i32
  %32861 = inttoptr i64 %32857 to i32*
  %32862 = load i32, i32* %32861
  %32863 = add i32 %32862, %32860
  %32864 = zext i32 %32863 to i64
  store i64 %32864, i64* %RAX.i466, align 8
  %32865 = icmp ult i32 %32863, %32860
  %32866 = icmp ult i32 %32863, %32862
  %32867 = or i1 %32865, %32866
  %32868 = zext i1 %32867 to i8
  %32869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32868, i8* %32869, align 1
  %32870 = and i32 %32863, 255
  %32871 = call i32 @llvm.ctpop.i32(i32 %32870)
  %32872 = trunc i32 %32871 to i8
  %32873 = and i8 %32872, 1
  %32874 = xor i8 %32873, 1
  %32875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32874, i8* %32875, align 1
  %32876 = xor i32 %32862, %32860
  %32877 = xor i32 %32876, %32863
  %32878 = lshr i32 %32877, 4
  %32879 = trunc i32 %32878 to i8
  %32880 = and i8 %32879, 1
  %32881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32880, i8* %32881, align 1
  %32882 = icmp eq i32 %32863, 0
  %32883 = zext i1 %32882 to i8
  %32884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32883, i8* %32884, align 1
  %32885 = lshr i32 %32863, 31
  %32886 = trunc i32 %32885 to i8
  %32887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32886, i8* %32887, align 1
  %32888 = lshr i32 %32860, 31
  %32889 = lshr i32 %32862, 31
  %32890 = xor i32 %32885, %32888
  %32891 = xor i32 %32885, %32889
  %32892 = add i32 %32890, %32891
  %32893 = icmp eq i32 %32892, 2
  %32894 = zext i1 %32893 to i8
  %32895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32894, i8* %32895, align 1
  store %struct.Memory* %loadMem_4ac06a, %struct.Memory** %MEMORY
  %loadMem_4ac06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %32896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32897 = getelementptr inbounds %struct.GPR, %struct.GPR* %32896, i32 0, i32 33
  %32898 = getelementptr inbounds %struct.Reg, %struct.Reg* %32897, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %32898 to i64*
  %32899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32900 = getelementptr inbounds %struct.GPR, %struct.GPR* %32899, i32 0, i32 1
  %32901 = getelementptr inbounds %struct.Reg, %struct.Reg* %32900, i32 0, i32 0
  %EAX.i463 = bitcast %union.anon* %32901 to i32*
  %32902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32903 = getelementptr inbounds %struct.GPR, %struct.GPR* %32902, i32 0, i32 17
  %32904 = getelementptr inbounds %struct.Reg, %struct.Reg* %32903, i32 0, i32 0
  %R8.i464 = bitcast %union.anon* %32904 to i64*
  %32905 = load i32, i32* %EAX.i463
  %32906 = zext i32 %32905 to i64
  %32907 = load i64, i64* %PC.i462
  %32908 = add i64 %32907, 3
  store i64 %32908, i64* %PC.i462
  %32909 = shl i64 %32906, 32
  %32910 = ashr exact i64 %32909, 32
  store i64 %32910, i64* %R8.i464, align 8
  store %struct.Memory* %loadMem_4ac06d, %struct.Memory** %MEMORY
  %loadMem_4ac070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32912 = getelementptr inbounds %struct.GPR, %struct.GPR* %32911, i32 0, i32 33
  %32913 = getelementptr inbounds %struct.Reg, %struct.Reg* %32912, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %32913 to i64*
  %32914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32915 = getelementptr inbounds %struct.GPR, %struct.GPR* %32914, i32 0, i32 17
  %32916 = getelementptr inbounds %struct.Reg, %struct.Reg* %32915, i32 0, i32 0
  %R8.i461 = bitcast %union.anon* %32916 to i64*
  %32917 = load i64, i64* %R8.i461
  %32918 = load i64, i64* %PC.i460
  %32919 = add i64 %32918, 4
  store i64 %32919, i64* %PC.i460
  %32920 = shl i64 %32917, 4
  %32921 = icmp slt i64 %32920, 0
  %32922 = shl i64 %32920, 1
  store i64 %32922, i64* %R8.i461, align 8
  %32923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %32924 = zext i1 %32921 to i8
  store i8 %32924, i8* %32923, align 1
  %32925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %32926 = trunc i64 %32922 to i32
  %32927 = and i32 %32926, 254
  %32928 = call i32 @llvm.ctpop.i32(i32 %32927)
  %32929 = trunc i32 %32928 to i8
  %32930 = and i8 %32929, 1
  %32931 = xor i8 %32930, 1
  store i8 %32931, i8* %32925, align 1
  %32932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32932, align 1
  %32933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %32934 = icmp eq i64 %32922, 0
  %32935 = zext i1 %32934 to i8
  store i8 %32935, i8* %32933, align 1
  %32936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32937 = lshr i64 %32922, 63
  %32938 = trunc i64 %32937 to i8
  store i8 %32938, i8* %32936, align 1
  %32939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32939, align 1
  store %struct.Memory* %loadMem_4ac070, %struct.Memory** %MEMORY
  %loadMem_4ac074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32941 = getelementptr inbounds %struct.GPR, %struct.GPR* %32940, i32 0, i32 33
  %32942 = getelementptr inbounds %struct.Reg, %struct.Reg* %32941, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %32942 to i64*
  %32943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32944 = getelementptr inbounds %struct.GPR, %struct.GPR* %32943, i32 0, i32 11
  %32945 = getelementptr inbounds %struct.Reg, %struct.Reg* %32944, i32 0, i32 0
  %RDI.i458 = bitcast %union.anon* %32945 to i64*
  %32946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32947 = getelementptr inbounds %struct.GPR, %struct.GPR* %32946, i32 0, i32 17
  %32948 = getelementptr inbounds %struct.Reg, %struct.Reg* %32947, i32 0, i32 0
  %R8.i459 = bitcast %union.anon* %32948 to i64*
  %32949 = load i64, i64* %RDI.i458
  %32950 = load i64, i64* %R8.i459
  %32951 = load i64, i64* %PC.i457
  %32952 = add i64 %32951, 3
  store i64 %32952, i64* %PC.i457
  %32953 = add i64 %32950, %32949
  store i64 %32953, i64* %RDI.i458, align 8
  %32954 = icmp ult i64 %32953, %32949
  %32955 = icmp ult i64 %32953, %32950
  %32956 = or i1 %32954, %32955
  %32957 = zext i1 %32956 to i8
  %32958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %32957, i8* %32958, align 1
  %32959 = trunc i64 %32953 to i32
  %32960 = and i32 %32959, 255
  %32961 = call i32 @llvm.ctpop.i32(i32 %32960)
  %32962 = trunc i32 %32961 to i8
  %32963 = and i8 %32962, 1
  %32964 = xor i8 %32963, 1
  %32965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32964, i8* %32965, align 1
  %32966 = xor i64 %32950, %32949
  %32967 = xor i64 %32966, %32953
  %32968 = lshr i64 %32967, 4
  %32969 = trunc i64 %32968 to i8
  %32970 = and i8 %32969, 1
  %32971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32970, i8* %32971, align 1
  %32972 = icmp eq i64 %32953, 0
  %32973 = zext i1 %32972 to i8
  %32974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32973, i8* %32974, align 1
  %32975 = lshr i64 %32953, 63
  %32976 = trunc i64 %32975 to i8
  %32977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32976, i8* %32977, align 1
  %32978 = lshr i64 %32949, 63
  %32979 = lshr i64 %32950, 63
  %32980 = xor i64 %32975, %32978
  %32981 = xor i64 %32975, %32979
  %32982 = add i64 %32980, %32981
  %32983 = icmp eq i64 %32982, 2
  %32984 = zext i1 %32983 to i8
  %32985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32984, i8* %32985, align 1
  store %struct.Memory* %loadMem_4ac074, %struct.Memory** %MEMORY
  %loadMem_4ac077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %32986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32987 = getelementptr inbounds %struct.GPR, %struct.GPR* %32986, i32 0, i32 33
  %32988 = getelementptr inbounds %struct.Reg, %struct.Reg* %32987, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %32988 to i64*
  %32989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32990 = getelementptr inbounds %struct.GPR, %struct.GPR* %32989, i32 0, i32 1
  %32991 = getelementptr inbounds %struct.Reg, %struct.Reg* %32990, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %32991 to i64*
  %32992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32993 = getelementptr inbounds %struct.GPR, %struct.GPR* %32992, i32 0, i32 15
  %32994 = getelementptr inbounds %struct.Reg, %struct.Reg* %32993, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %32994 to i64*
  %32995 = load i64, i64* %RBP.i456
  %32996 = sub i64 %32995, 28
  %32997 = load i64, i64* %PC.i454
  %32998 = add i64 %32997, 3
  store i64 %32998, i64* %PC.i454
  %32999 = inttoptr i64 %32996 to i32*
  %33000 = load i32, i32* %32999
  %33001 = zext i32 %33000 to i64
  store i64 %33001, i64* %RAX.i455, align 8
  store %struct.Memory* %loadMem_4ac077, %struct.Memory** %MEMORY
  %loadMem_4ac07a = load %struct.Memory*, %struct.Memory** %MEMORY
  %33002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33003 = getelementptr inbounds %struct.GPR, %struct.GPR* %33002, i32 0, i32 33
  %33004 = getelementptr inbounds %struct.Reg, %struct.Reg* %33003, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %33004 to i64*
  %33005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33006 = getelementptr inbounds %struct.GPR, %struct.GPR* %33005, i32 0, i32 1
  %33007 = getelementptr inbounds %struct.Reg, %struct.Reg* %33006, i32 0, i32 0
  %RAX.i452 = bitcast %union.anon* %33007 to i64*
  %33008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33009 = getelementptr inbounds %struct.GPR, %struct.GPR* %33008, i32 0, i32 15
  %33010 = getelementptr inbounds %struct.Reg, %struct.Reg* %33009, i32 0, i32 0
  %RBP.i453 = bitcast %union.anon* %33010 to i64*
  %33011 = load i64, i64* %RAX.i452
  %33012 = load i64, i64* %RBP.i453
  %33013 = sub i64 %33012, 88
  %33014 = load i64, i64* %PC.i451
  %33015 = add i64 %33014, 3
  store i64 %33015, i64* %PC.i451
  %33016 = trunc i64 %33011 to i32
  %33017 = inttoptr i64 %33013 to i32*
  %33018 = load i32, i32* %33017
  %33019 = add i32 %33018, %33016
  %33020 = zext i32 %33019 to i64
  store i64 %33020, i64* %RAX.i452, align 8
  %33021 = icmp ult i32 %33019, %33016
  %33022 = icmp ult i32 %33019, %33018
  %33023 = or i1 %33021, %33022
  %33024 = zext i1 %33023 to i8
  %33025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33024, i8* %33025, align 1
  %33026 = and i32 %33019, 255
  %33027 = call i32 @llvm.ctpop.i32(i32 %33026)
  %33028 = trunc i32 %33027 to i8
  %33029 = and i8 %33028, 1
  %33030 = xor i8 %33029, 1
  %33031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33030, i8* %33031, align 1
  %33032 = xor i32 %33018, %33016
  %33033 = xor i32 %33032, %33019
  %33034 = lshr i32 %33033, 4
  %33035 = trunc i32 %33034 to i8
  %33036 = and i8 %33035, 1
  %33037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33036, i8* %33037, align 1
  %33038 = icmp eq i32 %33019, 0
  %33039 = zext i1 %33038 to i8
  %33040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33039, i8* %33040, align 1
  %33041 = lshr i32 %33019, 31
  %33042 = trunc i32 %33041 to i8
  %33043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33042, i8* %33043, align 1
  %33044 = lshr i32 %33016, 31
  %33045 = lshr i32 %33018, 31
  %33046 = xor i32 %33041, %33044
  %33047 = xor i32 %33041, %33045
  %33048 = add i32 %33046, %33047
  %33049 = icmp eq i32 %33048, 2
  %33050 = zext i1 %33049 to i8
  %33051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33050, i8* %33051, align 1
  store %struct.Memory* %loadMem_4ac07a, %struct.Memory** %MEMORY
  %loadMem_4ac07d = load %struct.Memory*, %struct.Memory** %MEMORY
  %33052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33053 = getelementptr inbounds %struct.GPR, %struct.GPR* %33052, i32 0, i32 33
  %33054 = getelementptr inbounds %struct.Reg, %struct.Reg* %33053, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %33054 to i64*
  %33055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33056 = getelementptr inbounds %struct.GPR, %struct.GPR* %33055, i32 0, i32 1
  %33057 = getelementptr inbounds %struct.Reg, %struct.Reg* %33056, i32 0, i32 0
  %EAX.i449 = bitcast %union.anon* %33057 to i32*
  %33058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33059 = getelementptr inbounds %struct.GPR, %struct.GPR* %33058, i32 0, i32 17
  %33060 = getelementptr inbounds %struct.Reg, %struct.Reg* %33059, i32 0, i32 0
  %R8.i450 = bitcast %union.anon* %33060 to i64*
  %33061 = load i32, i32* %EAX.i449
  %33062 = zext i32 %33061 to i64
  %33063 = load i64, i64* %PC.i448
  %33064 = add i64 %33063, 3
  store i64 %33064, i64* %PC.i448
  %33065 = shl i64 %33062, 32
  %33066 = ashr exact i64 %33065, 32
  store i64 %33066, i64* %R8.i450, align 8
  store %struct.Memory* %loadMem_4ac07d, %struct.Memory** %MEMORY
  %loadMem_4ac080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33068 = getelementptr inbounds %struct.GPR, %struct.GPR* %33067, i32 0, i32 33
  %33069 = getelementptr inbounds %struct.Reg, %struct.Reg* %33068, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %33069 to i64*
  %33070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33071 = getelementptr inbounds %struct.GPR, %struct.GPR* %33070, i32 0, i32 1
  %33072 = getelementptr inbounds %struct.Reg, %struct.Reg* %33071, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %33072 to i64*
  %33073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33074 = getelementptr inbounds %struct.GPR, %struct.GPR* %33073, i32 0, i32 11
  %33075 = getelementptr inbounds %struct.Reg, %struct.Reg* %33074, i32 0, i32 0
  %RDI.i447 = bitcast %union.anon* %33075 to i64*
  %33076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33077 = getelementptr inbounds %struct.GPR, %struct.GPR* %33076, i32 0, i32 17
  %33078 = getelementptr inbounds %struct.Reg, %struct.Reg* %33077, i32 0, i32 0
  %R8.i = bitcast %union.anon* %33078 to i64*
  %33079 = load i64, i64* %RDI.i447
  %33080 = load i64, i64* %R8.i
  %33081 = mul i64 %33080, 2
  %33082 = add i64 %33081, %33079
  %33083 = load i64, i64* %PC.i445
  %33084 = add i64 %33083, 5
  store i64 %33084, i64* %PC.i445
  %33085 = inttoptr i64 %33082 to i16*
  %33086 = load i16, i16* %33085
  %33087 = zext i16 %33086 to i64
  store i64 %33087, i64* %RAX.i446, align 8
  store %struct.Memory* %loadMem_4ac080, %struct.Memory** %MEMORY
  %loadMem_4ac085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33089 = getelementptr inbounds %struct.GPR, %struct.GPR* %33088, i32 0, i32 33
  %33090 = getelementptr inbounds %struct.Reg, %struct.Reg* %33089, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %33090 to i64*
  %33091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33092 = getelementptr inbounds %struct.GPR, %struct.GPR* %33091, i32 0, i32 1
  %33093 = getelementptr inbounds %struct.Reg, %struct.Reg* %33092, i32 0, i32 0
  %EAX.i443 = bitcast %union.anon* %33093 to i32*
  %33094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33095 = getelementptr inbounds %struct.GPR, %struct.GPR* %33094, i32 0, i32 11
  %33096 = getelementptr inbounds %struct.Reg, %struct.Reg* %33095, i32 0, i32 0
  %RDI.i444 = bitcast %union.anon* %33096 to i64*
  %33097 = load i32, i32* %EAX.i443
  %33098 = zext i32 %33097 to i64
  %33099 = load i64, i64* %PC.i442
  %33100 = add i64 %33099, 2
  store i64 %33100, i64* %PC.i442
  %33101 = and i64 %33098, 4294967295
  store i64 %33101, i64* %RDI.i444, align 8
  store %struct.Memory* %loadMem_4ac085, %struct.Memory** %MEMORY
  %loadMem_4ac087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33103 = getelementptr inbounds %struct.GPR, %struct.GPR* %33102, i32 0, i32 33
  %33104 = getelementptr inbounds %struct.Reg, %struct.Reg* %33103, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %33104 to i64*
  %33105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33106 = getelementptr inbounds %struct.GPR, %struct.GPR* %33105, i32 0, i32 11
  %33107 = getelementptr inbounds %struct.Reg, %struct.Reg* %33106, i32 0, i32 0
  %RDI.i441 = bitcast %union.anon* %33107 to i64*
  %33108 = load i64, i64* %RDI.i441
  %33109 = load i64, i64* %PC.i440
  %33110 = add i64 %33109, 4
  store i64 %33110, i64* %PC.i440
  %33111 = shl i64 %33108, 5
  %33112 = icmp slt i64 %33111, 0
  %33113 = shl i64 %33111, 1
  store i64 %33113, i64* %RDI.i441, align 8
  %33114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %33115 = zext i1 %33112 to i8
  store i8 %33115, i8* %33114, align 1
  %33116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %33117 = trunc i64 %33113 to i32
  %33118 = and i32 %33117, 254
  %33119 = call i32 @llvm.ctpop.i32(i32 %33118)
  %33120 = trunc i32 %33119 to i8
  %33121 = and i8 %33120, 1
  %33122 = xor i8 %33121, 1
  store i8 %33122, i8* %33116, align 1
  %33123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33123, align 1
  %33124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %33125 = icmp eq i64 %33113, 0
  %33126 = zext i1 %33125 to i8
  store i8 %33126, i8* %33124, align 1
  %33127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %33128 = lshr i64 %33113, 63
  %33129 = trunc i64 %33128 to i8
  store i8 %33129, i8* %33127, align 1
  %33130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33130, align 1
  store %struct.Memory* %loadMem_4ac087, %struct.Memory** %MEMORY
  %loadMem_4ac08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %33131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33132 = getelementptr inbounds %struct.GPR, %struct.GPR* %33131, i32 0, i32 33
  %33133 = getelementptr inbounds %struct.Reg, %struct.Reg* %33132, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %33133 to i64*
  %33134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33135 = getelementptr inbounds %struct.GPR, %struct.GPR* %33134, i32 0, i32 9
  %33136 = getelementptr inbounds %struct.Reg, %struct.Reg* %33135, i32 0, i32 0
  %RSI.i438 = bitcast %union.anon* %33136 to i64*
  %33137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33138 = getelementptr inbounds %struct.GPR, %struct.GPR* %33137, i32 0, i32 11
  %33139 = getelementptr inbounds %struct.Reg, %struct.Reg* %33138, i32 0, i32 0
  %RDI.i439 = bitcast %union.anon* %33139 to i64*
  %33140 = load i64, i64* %RSI.i438
  %33141 = load i64, i64* %RDI.i439
  %33142 = load i64, i64* %PC.i437
  %33143 = add i64 %33142, 3
  store i64 %33143, i64* %PC.i437
  %33144 = add i64 %33141, %33140
  store i64 %33144, i64* %RSI.i438, align 8
  %33145 = icmp ult i64 %33144, %33140
  %33146 = icmp ult i64 %33144, %33141
  %33147 = or i1 %33145, %33146
  %33148 = zext i1 %33147 to i8
  %33149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33148, i8* %33149, align 1
  %33150 = trunc i64 %33144 to i32
  %33151 = and i32 %33150, 255
  %33152 = call i32 @llvm.ctpop.i32(i32 %33151)
  %33153 = trunc i32 %33152 to i8
  %33154 = and i8 %33153, 1
  %33155 = xor i8 %33154, 1
  %33156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33155, i8* %33156, align 1
  %33157 = xor i64 %33141, %33140
  %33158 = xor i64 %33157, %33144
  %33159 = lshr i64 %33158, 4
  %33160 = trunc i64 %33159 to i8
  %33161 = and i8 %33160, 1
  %33162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33161, i8* %33162, align 1
  %33163 = icmp eq i64 %33144, 0
  %33164 = zext i1 %33163 to i8
  %33165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33164, i8* %33165, align 1
  %33166 = lshr i64 %33144, 63
  %33167 = trunc i64 %33166 to i8
  %33168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33167, i8* %33168, align 1
  %33169 = lshr i64 %33140, 63
  %33170 = lshr i64 %33141, 63
  %33171 = xor i64 %33166, %33169
  %33172 = xor i64 %33166, %33170
  %33173 = add i64 %33171, %33172
  %33174 = icmp eq i64 %33173, 2
  %33175 = zext i1 %33174 to i8
  %33176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33175, i8* %33176, align 1
  store %struct.Memory* %loadMem_4ac08b, %struct.Memory** %MEMORY
  %loadMem_4ac08e = load %struct.Memory*, %struct.Memory** %MEMORY
  %33177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33178 = getelementptr inbounds %struct.GPR, %struct.GPR* %33177, i32 0, i32 33
  %33179 = getelementptr inbounds %struct.Reg, %struct.Reg* %33178, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %33179 to i64*
  %33180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33181 = getelementptr inbounds %struct.GPR, %struct.GPR* %33180, i32 0, i32 9
  %33182 = getelementptr inbounds %struct.Reg, %struct.Reg* %33181, i32 0, i32 0
  %RSI.i436 = bitcast %union.anon* %33182 to i64*
  %33183 = load i64, i64* %RSI.i436
  %33184 = load i64, i64* %PC.i435
  %33185 = add i64 %33184, 4
  store i64 %33185, i64* %PC.i435
  %33186 = add i64 32, %33183
  store i64 %33186, i64* %RSI.i436, align 8
  %33187 = icmp ult i64 %33186, %33183
  %33188 = icmp ult i64 %33186, 32
  %33189 = or i1 %33187, %33188
  %33190 = zext i1 %33189 to i8
  %33191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33190, i8* %33191, align 1
  %33192 = trunc i64 %33186 to i32
  %33193 = and i32 %33192, 255
  %33194 = call i32 @llvm.ctpop.i32(i32 %33193)
  %33195 = trunc i32 %33194 to i8
  %33196 = and i8 %33195, 1
  %33197 = xor i8 %33196, 1
  %33198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33197, i8* %33198, align 1
  %33199 = xor i64 32, %33183
  %33200 = xor i64 %33199, %33186
  %33201 = lshr i64 %33200, 4
  %33202 = trunc i64 %33201 to i8
  %33203 = and i8 %33202, 1
  %33204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33203, i8* %33204, align 1
  %33205 = icmp eq i64 %33186, 0
  %33206 = zext i1 %33205 to i8
  %33207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33206, i8* %33207, align 1
  %33208 = lshr i64 %33186, 63
  %33209 = trunc i64 %33208 to i8
  %33210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33209, i8* %33210, align 1
  %33211 = lshr i64 %33183, 63
  %33212 = xor i64 %33208, %33211
  %33213 = add i64 %33212, %33208
  %33214 = icmp eq i64 %33213, 2
  %33215 = zext i1 %33214 to i8
  %33216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33215, i8* %33216, align 1
  store %struct.Memory* %loadMem_4ac08e, %struct.Memory** %MEMORY
  %loadMem_4ac092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33218 = getelementptr inbounds %struct.GPR, %struct.GPR* %33217, i32 0, i32 33
  %33219 = getelementptr inbounds %struct.Reg, %struct.Reg* %33218, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %33219 to i64*
  %33220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33221 = getelementptr inbounds %struct.GPR, %struct.GPR* %33220, i32 0, i32 9
  %33222 = getelementptr inbounds %struct.Reg, %struct.Reg* %33221, i32 0, i32 0
  %RSI.i434 = bitcast %union.anon* %33222 to i64*
  %33223 = load i64, i64* %RSI.i434
  %33224 = load i64, i64* %PC.i433
  %33225 = add i64 %33224, 4
  store i64 %33225, i64* %PC.i433
  %33226 = ashr i64 %33223, 5
  %33227 = trunc i64 %33226 to i8
  %33228 = and i8 %33227, 1
  %33229 = ashr i64 %33226, 1
  store i64 %33229, i64* %RSI.i434, align 8
  %33230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33228, i8* %33230, align 1
  %33231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %33232 = trunc i64 %33229 to i32
  %33233 = and i32 %33232, 255
  %33234 = call i32 @llvm.ctpop.i32(i32 %33233)
  %33235 = trunc i32 %33234 to i8
  %33236 = and i8 %33235, 1
  %33237 = xor i8 %33236, 1
  store i8 %33237, i8* %33231, align 1
  %33238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33238, align 1
  %33239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %33240 = icmp eq i64 %33229, 0
  %33241 = zext i1 %33240 to i8
  store i8 %33241, i8* %33239, align 1
  %33242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %33243 = lshr i64 %33229, 63
  %33244 = trunc i64 %33243 to i8
  store i8 %33244, i8* %33242, align 1
  %33245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33245, align 1
  store %struct.Memory* %loadMem_4ac092, %struct.Memory** %MEMORY
  %loadMem_4ac096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33247 = getelementptr inbounds %struct.GPR, %struct.GPR* %33246, i32 0, i32 33
  %33248 = getelementptr inbounds %struct.Reg, %struct.Reg* %33247, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %33248 to i64*
  %33249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33250 = getelementptr inbounds %struct.GPR, %struct.GPR* %33249, i32 0, i32 5
  %33251 = getelementptr inbounds %struct.Reg, %struct.Reg* %33250, i32 0, i32 0
  %RCX.i431 = bitcast %union.anon* %33251 to i64*
  %33252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33253 = getelementptr inbounds %struct.GPR, %struct.GPR* %33252, i32 0, i32 9
  %33254 = getelementptr inbounds %struct.Reg, %struct.Reg* %33253, i32 0, i32 0
  %RSI.i432 = bitcast %union.anon* %33254 to i64*
  %33255 = load i64, i64* %RCX.i431
  %33256 = load i64, i64* %RSI.i432
  %33257 = load i64, i64* %PC.i430
  %33258 = add i64 %33257, 3
  store i64 %33258, i64* %PC.i430
  %33259 = sub i64 %33255, %33256
  %33260 = icmp ult i64 %33255, %33256
  %33261 = zext i1 %33260 to i8
  %33262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33261, i8* %33262, align 1
  %33263 = trunc i64 %33259 to i32
  %33264 = and i32 %33263, 255
  %33265 = call i32 @llvm.ctpop.i32(i32 %33264)
  %33266 = trunc i32 %33265 to i8
  %33267 = and i8 %33266, 1
  %33268 = xor i8 %33267, 1
  %33269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33268, i8* %33269, align 1
  %33270 = xor i64 %33256, %33255
  %33271 = xor i64 %33270, %33259
  %33272 = lshr i64 %33271, 4
  %33273 = trunc i64 %33272 to i8
  %33274 = and i8 %33273, 1
  %33275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33274, i8* %33275, align 1
  %33276 = icmp eq i64 %33259, 0
  %33277 = zext i1 %33276 to i8
  %33278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33277, i8* %33278, align 1
  %33279 = lshr i64 %33259, 63
  %33280 = trunc i64 %33279 to i8
  %33281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33280, i8* %33281, align 1
  %33282 = lshr i64 %33255, 63
  %33283 = lshr i64 %33256, 63
  %33284 = xor i64 %33283, %33282
  %33285 = xor i64 %33279, %33282
  %33286 = add i64 %33285, %33284
  %33287 = icmp eq i64 %33286, 2
  %33288 = zext i1 %33287 to i8
  %33289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33288, i8* %33289, align 1
  store %struct.Memory* %loadMem_4ac096, %struct.Memory** %MEMORY
  %loadMem_4ac099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33291 = getelementptr inbounds %struct.GPR, %struct.GPR* %33290, i32 0, i32 33
  %33292 = getelementptr inbounds %struct.Reg, %struct.Reg* %33291, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %33292 to i64*
  %33293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33294 = getelementptr inbounds %struct.GPR, %struct.GPR* %33293, i32 0, i32 7
  %33295 = getelementptr inbounds %struct.Reg, %struct.Reg* %33294, i32 0, i32 0
  %RDX.i428 = bitcast %union.anon* %33295 to i64*
  %33296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33297 = getelementptr inbounds %struct.GPR, %struct.GPR* %33296, i32 0, i32 15
  %33298 = getelementptr inbounds %struct.Reg, %struct.Reg* %33297, i32 0, i32 0
  %RBP.i429 = bitcast %union.anon* %33298 to i64*
  %33299 = load i64, i64* %RBP.i429
  %33300 = sub i64 %33299, 728
  %33301 = load i64, i64* %RDX.i428
  %33302 = load i64, i64* %PC.i427
  %33303 = add i64 %33302, 7
  store i64 %33303, i64* %PC.i427
  %33304 = inttoptr i64 %33300 to i64*
  store i64 %33301, i64* %33304
  store %struct.Memory* %loadMem_4ac099, %struct.Memory** %MEMORY
  %loadMem_4ac0a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33306 = getelementptr inbounds %struct.GPR, %struct.GPR* %33305, i32 0, i32 33
  %33307 = getelementptr inbounds %struct.Reg, %struct.Reg* %33306, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %33307 to i64*
  %33308 = load i64, i64* %PC.i426
  %33309 = add i64 %33308, 22
  %33310 = load i64, i64* %PC.i426
  %33311 = add i64 %33310, 6
  %33312 = load i64, i64* %PC.i426
  %33313 = add i64 %33312, 6
  store i64 %33313, i64* %PC.i426
  %33314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %33315 = load i8, i8* %33314, align 1
  %33316 = icmp ne i8 %33315, 0
  %33317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %33318 = load i8, i8* %33317, align 1
  %33319 = icmp ne i8 %33318, 0
  %33320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %33321 = load i8, i8* %33320, align 1
  %33322 = icmp ne i8 %33321, 0
  %33323 = xor i1 %33319, %33322
  %33324 = or i1 %33316, %33323
  %33325 = zext i1 %33324 to i8
  store i8 %33325, i8* %BRANCH_TAKEN, align 1
  %33326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %33327 = select i1 %33324, i64 %33309, i64 %33311
  store i64 %33327, i64* %33326, align 8
  store %struct.Memory* %loadMem_4ac0a0, %struct.Memory** %MEMORY
  %loadBr_4ac0a0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ac0a0 = icmp eq i8 %loadBr_4ac0a0, 1
  br i1 %cmpBr_4ac0a0, label %block_.L_4ac0b6, label %block_4ac0a6

block_4ac0a6:                                     ; preds = %block_4ac023
  %loadMem_4ac0a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33329 = getelementptr inbounds %struct.GPR, %struct.GPR* %33328, i32 0, i32 33
  %33330 = getelementptr inbounds %struct.Reg, %struct.Reg* %33329, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %33330 to i64*
  %33331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33332 = getelementptr inbounds %struct.GPR, %struct.GPR* %33331, i32 0, i32 1
  %33333 = getelementptr inbounds %struct.Reg, %struct.Reg* %33332, i32 0, i32 0
  %EAX.i424 = bitcast %union.anon* %33333 to i32*
  %33334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33335 = getelementptr inbounds %struct.GPR, %struct.GPR* %33334, i32 0, i32 1
  %33336 = getelementptr inbounds %struct.Reg, %struct.Reg* %33335, i32 0, i32 0
  %RAX.i425 = bitcast %union.anon* %33336 to i64*
  %33337 = load i64, i64* %RAX.i425
  %33338 = load i32, i32* %EAX.i424
  %33339 = zext i32 %33338 to i64
  %33340 = load i64, i64* %PC.i423
  %33341 = add i64 %33340, 2
  store i64 %33341, i64* %PC.i423
  %33342 = xor i64 %33339, %33337
  %33343 = trunc i64 %33342 to i32
  %33344 = and i64 %33342, 4294967295
  store i64 %33344, i64* %RAX.i425, align 8
  %33345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %33345, align 1
  %33346 = and i32 %33343, 255
  %33347 = call i32 @llvm.ctpop.i32(i32 %33346)
  %33348 = trunc i32 %33347 to i8
  %33349 = and i8 %33348, 1
  %33350 = xor i8 %33349, 1
  %33351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33350, i8* %33351, align 1
  %33352 = icmp eq i32 %33343, 0
  %33353 = zext i1 %33352 to i8
  %33354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33353, i8* %33354, align 1
  %33355 = lshr i32 %33343, 31
  %33356 = trunc i32 %33355 to i8
  %33357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33356, i8* %33357, align 1
  %33358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33358, align 1
  %33359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33359, align 1
  store %struct.Memory* %loadMem_4ac0a6, %struct.Memory** %MEMORY
  %loadMem_4ac0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33361 = getelementptr inbounds %struct.GPR, %struct.GPR* %33360, i32 0, i32 33
  %33362 = getelementptr inbounds %struct.Reg, %struct.Reg* %33361, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %33362 to i64*
  %33363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33364 = getelementptr inbounds %struct.GPR, %struct.GPR* %33363, i32 0, i32 1
  %33365 = getelementptr inbounds %struct.Reg, %struct.Reg* %33364, i32 0, i32 0
  %EAX.i421 = bitcast %union.anon* %33365 to i32*
  %33366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33367 = getelementptr inbounds %struct.GPR, %struct.GPR* %33366, i32 0, i32 5
  %33368 = getelementptr inbounds %struct.Reg, %struct.Reg* %33367, i32 0, i32 0
  %RCX.i422 = bitcast %union.anon* %33368 to i64*
  %33369 = load i32, i32* %EAX.i421
  %33370 = zext i32 %33369 to i64
  %33371 = load i64, i64* %PC.i420
  %33372 = add i64 %33371, 2
  store i64 %33372, i64* %PC.i420
  %33373 = and i64 %33370, 4294967295
  store i64 %33373, i64* %RCX.i422, align 8
  store %struct.Memory* %loadMem_4ac0a8, %struct.Memory** %MEMORY
  %loadMem_4ac0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %33374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33375 = getelementptr inbounds %struct.GPR, %struct.GPR* %33374, i32 0, i32 33
  %33376 = getelementptr inbounds %struct.Reg, %struct.Reg* %33375, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %33376 to i64*
  %33377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33378 = getelementptr inbounds %struct.GPR, %struct.GPR* %33377, i32 0, i32 5
  %33379 = getelementptr inbounds %struct.Reg, %struct.Reg* %33378, i32 0, i32 0
  %RCX.i418 = bitcast %union.anon* %33379 to i64*
  %33380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33381 = getelementptr inbounds %struct.GPR, %struct.GPR* %33380, i32 0, i32 15
  %33382 = getelementptr inbounds %struct.Reg, %struct.Reg* %33381, i32 0, i32 0
  %RBP.i419 = bitcast %union.anon* %33382 to i64*
  %33383 = load i64, i64* %RBP.i419
  %33384 = sub i64 %33383, 736
  %33385 = load i64, i64* %RCX.i418
  %33386 = load i64, i64* %PC.i417
  %33387 = add i64 %33386, 7
  store i64 %33387, i64* %PC.i417
  %33388 = inttoptr i64 %33384 to i64*
  store i64 %33385, i64* %33388
  store %struct.Memory* %loadMem_4ac0aa, %struct.Memory** %MEMORY
  %loadMem_4ac0b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33390 = getelementptr inbounds %struct.GPR, %struct.GPR* %33389, i32 0, i32 33
  %33391 = getelementptr inbounds %struct.Reg, %struct.Reg* %33390, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %33391 to i64*
  %33392 = load i64, i64* %PC.i416
  %33393 = add i64 %33392, 106
  %33394 = load i64, i64* %PC.i416
  %33395 = add i64 %33394, 5
  store i64 %33395, i64* %PC.i416
  %33396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %33393, i64* %33396, align 8
  store %struct.Memory* %loadMem_4ac0b1, %struct.Memory** %MEMORY
  br label %block_.L_4ac11b

block_.L_4ac0b6:                                  ; preds = %block_4ac023
  %loadMem_4ac0b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33398 = getelementptr inbounds %struct.GPR, %struct.GPR* %33397, i32 0, i32 33
  %33399 = getelementptr inbounds %struct.Reg, %struct.Reg* %33398, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %33399 to i64*
  %33400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33401 = getelementptr inbounds %struct.GPR, %struct.GPR* %33400, i32 0, i32 1
  %33402 = getelementptr inbounds %struct.Reg, %struct.Reg* %33401, i32 0, i32 0
  %RAX.i415 = bitcast %union.anon* %33402 to i64*
  %33403 = load i64, i64* %PC.i414
  %33404 = add i64 %33403, 8
  store i64 %33404, i64* %PC.i414
  %33405 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %33405, i64* %RAX.i415, align 8
  store %struct.Memory* %loadMem_4ac0b6, %struct.Memory** %MEMORY
  %loadMem_4ac0be = load %struct.Memory*, %struct.Memory** %MEMORY
  %33406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33407 = getelementptr inbounds %struct.GPR, %struct.GPR* %33406, i32 0, i32 33
  %33408 = getelementptr inbounds %struct.Reg, %struct.Reg* %33407, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %33408 to i64*
  %33409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33410 = getelementptr inbounds %struct.GPR, %struct.GPR* %33409, i32 0, i32 1
  %33411 = getelementptr inbounds %struct.Reg, %struct.Reg* %33410, i32 0, i32 0
  %RAX.i413 = bitcast %union.anon* %33411 to i64*
  %33412 = load i64, i64* %RAX.i413
  %33413 = load i64, i64* %PC.i412
  %33414 = add i64 %33413, 6
  store i64 %33414, i64* %PC.i412
  %33415 = add i64 13112, %33412
  store i64 %33415, i64* %RAX.i413, align 8
  %33416 = icmp ult i64 %33415, %33412
  %33417 = icmp ult i64 %33415, 13112
  %33418 = or i1 %33416, %33417
  %33419 = zext i1 %33418 to i8
  %33420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33419, i8* %33420, align 1
  %33421 = trunc i64 %33415 to i32
  %33422 = and i32 %33421, 255
  %33423 = call i32 @llvm.ctpop.i32(i32 %33422)
  %33424 = trunc i32 %33423 to i8
  %33425 = and i8 %33424, 1
  %33426 = xor i8 %33425, 1
  %33427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33426, i8* %33427, align 1
  %33428 = xor i64 13112, %33412
  %33429 = xor i64 %33428, %33415
  %33430 = lshr i64 %33429, 4
  %33431 = trunc i64 %33430 to i8
  %33432 = and i8 %33431, 1
  %33433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33432, i8* %33433, align 1
  %33434 = icmp eq i64 %33415, 0
  %33435 = zext i1 %33434 to i8
  %33436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33435, i8* %33436, align 1
  %33437 = lshr i64 %33415, 63
  %33438 = trunc i64 %33437 to i8
  %33439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33438, i8* %33439, align 1
  %33440 = lshr i64 %33412, 63
  %33441 = xor i64 %33437, %33440
  %33442 = add i64 %33441, %33437
  %33443 = icmp eq i64 %33442, 2
  %33444 = zext i1 %33443 to i8
  %33445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33444, i8* %33445, align 1
  store %struct.Memory* %loadMem_4ac0be, %struct.Memory** %MEMORY
  %loadMem_4ac0c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33447 = getelementptr inbounds %struct.GPR, %struct.GPR* %33446, i32 0, i32 33
  %33448 = getelementptr inbounds %struct.Reg, %struct.Reg* %33447, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %33448 to i64*
  %33449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33450 = getelementptr inbounds %struct.GPR, %struct.GPR* %33449, i32 0, i32 5
  %33451 = getelementptr inbounds %struct.Reg, %struct.Reg* %33450, i32 0, i32 0
  %RCX.i410 = bitcast %union.anon* %33451 to i64*
  %33452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33453 = getelementptr inbounds %struct.GPR, %struct.GPR* %33452, i32 0, i32 15
  %33454 = getelementptr inbounds %struct.Reg, %struct.Reg* %33453, i32 0, i32 0
  %RBP.i411 = bitcast %union.anon* %33454 to i64*
  %33455 = load i64, i64* %RBP.i411
  %33456 = sub i64 %33455, 24
  %33457 = load i64, i64* %PC.i409
  %33458 = add i64 %33457, 4
  store i64 %33458, i64* %PC.i409
  %33459 = inttoptr i64 %33456 to i32*
  %33460 = load i32, i32* %33459
  %33461 = sext i32 %33460 to i64
  store i64 %33461, i64* %RCX.i410, align 8
  store %struct.Memory* %loadMem_4ac0c4, %struct.Memory** %MEMORY
  %loadMem_4ac0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33463 = getelementptr inbounds %struct.GPR, %struct.GPR* %33462, i32 0, i32 33
  %33464 = getelementptr inbounds %struct.Reg, %struct.Reg* %33463, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %33464 to i64*
  %33465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33466 = getelementptr inbounds %struct.GPR, %struct.GPR* %33465, i32 0, i32 5
  %33467 = getelementptr inbounds %struct.Reg, %struct.Reg* %33466, i32 0, i32 0
  %RCX.i408 = bitcast %union.anon* %33467 to i64*
  %33468 = load i64, i64* %RCX.i408
  %33469 = load i64, i64* %PC.i407
  %33470 = add i64 %33469, 4
  store i64 %33470, i64* %PC.i407
  %33471 = shl i64 %33468, 5
  %33472 = icmp slt i64 %33471, 0
  %33473 = shl i64 %33471, 1
  store i64 %33473, i64* %RCX.i408, align 8
  %33474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %33475 = zext i1 %33472 to i8
  store i8 %33475, i8* %33474, align 1
  %33476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %33477 = trunc i64 %33473 to i32
  %33478 = and i32 %33477, 254
  %33479 = call i32 @llvm.ctpop.i32(i32 %33478)
  %33480 = trunc i32 %33479 to i8
  %33481 = and i8 %33480, 1
  %33482 = xor i8 %33481, 1
  store i8 %33482, i8* %33476, align 1
  %33483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33483, align 1
  %33484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %33485 = icmp eq i64 %33473, 0
  %33486 = zext i1 %33485 to i8
  store i8 %33486, i8* %33484, align 1
  %33487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %33488 = lshr i64 %33473, 63
  %33489 = trunc i64 %33488 to i8
  store i8 %33489, i8* %33487, align 1
  %33490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33490, align 1
  store %struct.Memory* %loadMem_4ac0c8, %struct.Memory** %MEMORY
  %loadMem_4ac0cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %33491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33492 = getelementptr inbounds %struct.GPR, %struct.GPR* %33491, i32 0, i32 33
  %33493 = getelementptr inbounds %struct.Reg, %struct.Reg* %33492, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %33493 to i64*
  %33494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33495 = getelementptr inbounds %struct.GPR, %struct.GPR* %33494, i32 0, i32 1
  %33496 = getelementptr inbounds %struct.Reg, %struct.Reg* %33495, i32 0, i32 0
  %RAX.i405 = bitcast %union.anon* %33496 to i64*
  %33497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33498 = getelementptr inbounds %struct.GPR, %struct.GPR* %33497, i32 0, i32 5
  %33499 = getelementptr inbounds %struct.Reg, %struct.Reg* %33498, i32 0, i32 0
  %RCX.i406 = bitcast %union.anon* %33499 to i64*
  %33500 = load i64, i64* %RAX.i405
  %33501 = load i64, i64* %RCX.i406
  %33502 = load i64, i64* %PC.i404
  %33503 = add i64 %33502, 3
  store i64 %33503, i64* %PC.i404
  %33504 = add i64 %33501, %33500
  store i64 %33504, i64* %RAX.i405, align 8
  %33505 = icmp ult i64 %33504, %33500
  %33506 = icmp ult i64 %33504, %33501
  %33507 = or i1 %33505, %33506
  %33508 = zext i1 %33507 to i8
  %33509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33508, i8* %33509, align 1
  %33510 = trunc i64 %33504 to i32
  %33511 = and i32 %33510, 255
  %33512 = call i32 @llvm.ctpop.i32(i32 %33511)
  %33513 = trunc i32 %33512 to i8
  %33514 = and i8 %33513, 1
  %33515 = xor i8 %33514, 1
  %33516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33515, i8* %33516, align 1
  %33517 = xor i64 %33501, %33500
  %33518 = xor i64 %33517, %33504
  %33519 = lshr i64 %33518, 4
  %33520 = trunc i64 %33519 to i8
  %33521 = and i8 %33520, 1
  %33522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33521, i8* %33522, align 1
  %33523 = icmp eq i64 %33504, 0
  %33524 = zext i1 %33523 to i8
  %33525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33524, i8* %33525, align 1
  %33526 = lshr i64 %33504, 63
  %33527 = trunc i64 %33526 to i8
  %33528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33527, i8* %33528, align 1
  %33529 = lshr i64 %33500, 63
  %33530 = lshr i64 %33501, 63
  %33531 = xor i64 %33526, %33529
  %33532 = xor i64 %33526, %33530
  %33533 = add i64 %33531, %33532
  %33534 = icmp eq i64 %33533, 2
  %33535 = zext i1 %33534 to i8
  %33536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33535, i8* %33536, align 1
  store %struct.Memory* %loadMem_4ac0cc, %struct.Memory** %MEMORY
  %loadMem_4ac0cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %33537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33538 = getelementptr inbounds %struct.GPR, %struct.GPR* %33537, i32 0, i32 33
  %33539 = getelementptr inbounds %struct.Reg, %struct.Reg* %33538, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %33539 to i64*
  %33540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33541 = getelementptr inbounds %struct.GPR, %struct.GPR* %33540, i32 0, i32 5
  %33542 = getelementptr inbounds %struct.Reg, %struct.Reg* %33541, i32 0, i32 0
  %RCX.i402 = bitcast %union.anon* %33542 to i64*
  %33543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33544 = getelementptr inbounds %struct.GPR, %struct.GPR* %33543, i32 0, i32 15
  %33545 = getelementptr inbounds %struct.Reg, %struct.Reg* %33544, i32 0, i32 0
  %RBP.i403 = bitcast %union.anon* %33545 to i64*
  %33546 = load i64, i64* %RBP.i403
  %33547 = sub i64 %33546, 28
  %33548 = load i64, i64* %PC.i401
  %33549 = add i64 %33548, 4
  store i64 %33549, i64* %PC.i401
  %33550 = inttoptr i64 %33547 to i32*
  %33551 = load i32, i32* %33550
  %33552 = sext i32 %33551 to i64
  store i64 %33552, i64* %RCX.i402, align 8
  store %struct.Memory* %loadMem_4ac0cf, %struct.Memory** %MEMORY
  %loadMem_4ac0d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33554 = getelementptr inbounds %struct.GPR, %struct.GPR* %33553, i32 0, i32 33
  %33555 = getelementptr inbounds %struct.Reg, %struct.Reg* %33554, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %33555 to i64*
  %33556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33557 = getelementptr inbounds %struct.GPR, %struct.GPR* %33556, i32 0, i32 1
  %33558 = getelementptr inbounds %struct.Reg, %struct.Reg* %33557, i32 0, i32 0
  %RAX.i399 = bitcast %union.anon* %33558 to i64*
  %33559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33560 = getelementptr inbounds %struct.GPR, %struct.GPR* %33559, i32 0, i32 5
  %33561 = getelementptr inbounds %struct.Reg, %struct.Reg* %33560, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %33561 to i64*
  %33562 = load i64, i64* %RAX.i399
  %33563 = load i64, i64* %RCX.i400
  %33564 = mul i64 %33563, 4
  %33565 = add i64 %33564, %33562
  %33566 = load i64, i64* %PC.i398
  %33567 = add i64 %33566, 4
  store i64 %33567, i64* %PC.i398
  %33568 = inttoptr i64 %33565 to i32*
  %33569 = load i32, i32* %33568
  %33570 = sext i32 %33569 to i64
  store i64 %33570, i64* %RAX.i399, align 8
  store %struct.Memory* %loadMem_4ac0d3, %struct.Memory** %MEMORY
  %loadMem_4ac0d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33572 = getelementptr inbounds %struct.GPR, %struct.GPR* %33571, i32 0, i32 33
  %33573 = getelementptr inbounds %struct.Reg, %struct.Reg* %33572, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %33573 to i64*
  %33574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33575 = getelementptr inbounds %struct.GPR, %struct.GPR* %33574, i32 0, i32 5
  %33576 = getelementptr inbounds %struct.Reg, %struct.Reg* %33575, i32 0, i32 0
  %RCX.i397 = bitcast %union.anon* %33576 to i64*
  %33577 = load i64, i64* %PC.i396
  %33578 = add i64 %33577, 8
  store i64 %33578, i64* %PC.i396
  %33579 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %33579, i64* %RCX.i397, align 8
  store %struct.Memory* %loadMem_4ac0d7, %struct.Memory** %MEMORY
  %loadMem_4ac0df = load %struct.Memory*, %struct.Memory** %MEMORY
  %33580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33581 = getelementptr inbounds %struct.GPR, %struct.GPR* %33580, i32 0, i32 33
  %33582 = getelementptr inbounds %struct.Reg, %struct.Reg* %33581, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %33582 to i64*
  %33583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33584 = getelementptr inbounds %struct.GPR, %struct.GPR* %33583, i32 0, i32 5
  %33585 = getelementptr inbounds %struct.Reg, %struct.Reg* %33584, i32 0, i32 0
  %RCX.i395 = bitcast %union.anon* %33585 to i64*
  %33586 = load i64, i64* %RCX.i395
  %33587 = load i64, i64* %PC.i394
  %33588 = add i64 %33587, 7
  store i64 %33588, i64* %PC.i394
  %33589 = add i64 12600, %33586
  store i64 %33589, i64* %RCX.i395, align 8
  %33590 = icmp ult i64 %33589, %33586
  %33591 = icmp ult i64 %33589, 12600
  %33592 = or i1 %33590, %33591
  %33593 = zext i1 %33592 to i8
  %33594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33593, i8* %33594, align 1
  %33595 = trunc i64 %33589 to i32
  %33596 = and i32 %33595, 255
  %33597 = call i32 @llvm.ctpop.i32(i32 %33596)
  %33598 = trunc i32 %33597 to i8
  %33599 = and i8 %33598, 1
  %33600 = xor i8 %33599, 1
  %33601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33600, i8* %33601, align 1
  %33602 = xor i64 12600, %33586
  %33603 = xor i64 %33602, %33589
  %33604 = lshr i64 %33603, 4
  %33605 = trunc i64 %33604 to i8
  %33606 = and i8 %33605, 1
  %33607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33606, i8* %33607, align 1
  %33608 = icmp eq i64 %33589, 0
  %33609 = zext i1 %33608 to i8
  %33610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33609, i8* %33610, align 1
  %33611 = lshr i64 %33589, 63
  %33612 = trunc i64 %33611 to i8
  %33613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33612, i8* %33613, align 1
  %33614 = lshr i64 %33586, 63
  %33615 = xor i64 %33611, %33614
  %33616 = add i64 %33615, %33611
  %33617 = icmp eq i64 %33616, 2
  %33618 = zext i1 %33617 to i8
  %33619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33618, i8* %33619, align 1
  store %struct.Memory* %loadMem_4ac0df, %struct.Memory** %MEMORY
  %loadMem_4ac0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33621 = getelementptr inbounds %struct.GPR, %struct.GPR* %33620, i32 0, i32 33
  %33622 = getelementptr inbounds %struct.Reg, %struct.Reg* %33621, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %33622 to i64*
  %33623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33624 = getelementptr inbounds %struct.GPR, %struct.GPR* %33623, i32 0, i32 7
  %33625 = getelementptr inbounds %struct.Reg, %struct.Reg* %33624, i32 0, i32 0
  %RDX.i392 = bitcast %union.anon* %33625 to i64*
  %33626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33627 = getelementptr inbounds %struct.GPR, %struct.GPR* %33626, i32 0, i32 15
  %33628 = getelementptr inbounds %struct.Reg, %struct.Reg* %33627, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %33628 to i64*
  %33629 = load i64, i64* %RBP.i393
  %33630 = sub i64 %33629, 24
  %33631 = load i64, i64* %PC.i391
  %33632 = add i64 %33631, 3
  store i64 %33632, i64* %PC.i391
  %33633 = inttoptr i64 %33630 to i32*
  %33634 = load i32, i32* %33633
  %33635 = zext i32 %33634 to i64
  store i64 %33635, i64* %RDX.i392, align 8
  store %struct.Memory* %loadMem_4ac0e6, %struct.Memory** %MEMORY
  %loadMem_4ac0e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33637 = getelementptr inbounds %struct.GPR, %struct.GPR* %33636, i32 0, i32 33
  %33638 = getelementptr inbounds %struct.Reg, %struct.Reg* %33637, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %33638 to i64*
  %33639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33640 = getelementptr inbounds %struct.GPR, %struct.GPR* %33639, i32 0, i32 7
  %33641 = getelementptr inbounds %struct.Reg, %struct.Reg* %33640, i32 0, i32 0
  %RDX.i389 = bitcast %union.anon* %33641 to i64*
  %33642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33643 = getelementptr inbounds %struct.GPR, %struct.GPR* %33642, i32 0, i32 15
  %33644 = getelementptr inbounds %struct.Reg, %struct.Reg* %33643, i32 0, i32 0
  %RBP.i390 = bitcast %union.anon* %33644 to i64*
  %33645 = load i64, i64* %RDX.i389
  %33646 = load i64, i64* %RBP.i390
  %33647 = sub i64 %33646, 84
  %33648 = load i64, i64* %PC.i388
  %33649 = add i64 %33648, 3
  store i64 %33649, i64* %PC.i388
  %33650 = trunc i64 %33645 to i32
  %33651 = inttoptr i64 %33647 to i32*
  %33652 = load i32, i32* %33651
  %33653 = add i32 %33652, %33650
  %33654 = zext i32 %33653 to i64
  store i64 %33654, i64* %RDX.i389, align 8
  %33655 = icmp ult i32 %33653, %33650
  %33656 = icmp ult i32 %33653, %33652
  %33657 = or i1 %33655, %33656
  %33658 = zext i1 %33657 to i8
  %33659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33658, i8* %33659, align 1
  %33660 = and i32 %33653, 255
  %33661 = call i32 @llvm.ctpop.i32(i32 %33660)
  %33662 = trunc i32 %33661 to i8
  %33663 = and i8 %33662, 1
  %33664 = xor i8 %33663, 1
  %33665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33664, i8* %33665, align 1
  %33666 = xor i32 %33652, %33650
  %33667 = xor i32 %33666, %33653
  %33668 = lshr i32 %33667, 4
  %33669 = trunc i32 %33668 to i8
  %33670 = and i8 %33669, 1
  %33671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33670, i8* %33671, align 1
  %33672 = icmp eq i32 %33653, 0
  %33673 = zext i1 %33672 to i8
  %33674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33673, i8* %33674, align 1
  %33675 = lshr i32 %33653, 31
  %33676 = trunc i32 %33675 to i8
  %33677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33676, i8* %33677, align 1
  %33678 = lshr i32 %33650, 31
  %33679 = lshr i32 %33652, 31
  %33680 = xor i32 %33675, %33678
  %33681 = xor i32 %33675, %33679
  %33682 = add i32 %33680, %33681
  %33683 = icmp eq i32 %33682, 2
  %33684 = zext i1 %33683 to i8
  %33685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33684, i8* %33685, align 1
  store %struct.Memory* %loadMem_4ac0e9, %struct.Memory** %MEMORY
  %loadMem_4ac0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %33686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33687 = getelementptr inbounds %struct.GPR, %struct.GPR* %33686, i32 0, i32 33
  %33688 = getelementptr inbounds %struct.Reg, %struct.Reg* %33687, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %33688 to i64*
  %33689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33690 = getelementptr inbounds %struct.GPR, %struct.GPR* %33689, i32 0, i32 7
  %33691 = getelementptr inbounds %struct.Reg, %struct.Reg* %33690, i32 0, i32 0
  %EDX.i386 = bitcast %union.anon* %33691 to i32*
  %33692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33693 = getelementptr inbounds %struct.GPR, %struct.GPR* %33692, i32 0, i32 9
  %33694 = getelementptr inbounds %struct.Reg, %struct.Reg* %33693, i32 0, i32 0
  %RSI.i387 = bitcast %union.anon* %33694 to i64*
  %33695 = load i32, i32* %EDX.i386
  %33696 = zext i32 %33695 to i64
  %33697 = load i64, i64* %PC.i385
  %33698 = add i64 %33697, 3
  store i64 %33698, i64* %PC.i385
  %33699 = shl i64 %33696, 32
  %33700 = ashr exact i64 %33699, 32
  store i64 %33700, i64* %RSI.i387, align 8
  store %struct.Memory* %loadMem_4ac0ec, %struct.Memory** %MEMORY
  %loadMem_4ac0ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %33701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33702 = getelementptr inbounds %struct.GPR, %struct.GPR* %33701, i32 0, i32 33
  %33703 = getelementptr inbounds %struct.Reg, %struct.Reg* %33702, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %33703 to i64*
  %33704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33705 = getelementptr inbounds %struct.GPR, %struct.GPR* %33704, i32 0, i32 9
  %33706 = getelementptr inbounds %struct.Reg, %struct.Reg* %33705, i32 0, i32 0
  %RSI.i384 = bitcast %union.anon* %33706 to i64*
  %33707 = load i64, i64* %RSI.i384
  %33708 = load i64, i64* %PC.i383
  %33709 = add i64 %33708, 4
  store i64 %33709, i64* %PC.i383
  %33710 = shl i64 %33707, 4
  %33711 = icmp slt i64 %33710, 0
  %33712 = shl i64 %33710, 1
  store i64 %33712, i64* %RSI.i384, align 8
  %33713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %33714 = zext i1 %33711 to i8
  store i8 %33714, i8* %33713, align 1
  %33715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %33716 = trunc i64 %33712 to i32
  %33717 = and i32 %33716, 254
  %33718 = call i32 @llvm.ctpop.i32(i32 %33717)
  %33719 = trunc i32 %33718 to i8
  %33720 = and i8 %33719, 1
  %33721 = xor i8 %33720, 1
  store i8 %33721, i8* %33715, align 1
  %33722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33722, align 1
  %33723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %33724 = icmp eq i64 %33712, 0
  %33725 = zext i1 %33724 to i8
  store i8 %33725, i8* %33723, align 1
  %33726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %33727 = lshr i64 %33712, 63
  %33728 = trunc i64 %33727 to i8
  store i8 %33728, i8* %33726, align 1
  %33729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33729, align 1
  store %struct.Memory* %loadMem_4ac0ef, %struct.Memory** %MEMORY
  %loadMem_4ac0f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33731 = getelementptr inbounds %struct.GPR, %struct.GPR* %33730, i32 0, i32 33
  %33732 = getelementptr inbounds %struct.Reg, %struct.Reg* %33731, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %33732 to i64*
  %33733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33734 = getelementptr inbounds %struct.GPR, %struct.GPR* %33733, i32 0, i32 5
  %33735 = getelementptr inbounds %struct.Reg, %struct.Reg* %33734, i32 0, i32 0
  %RCX.i381 = bitcast %union.anon* %33735 to i64*
  %33736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33737 = getelementptr inbounds %struct.GPR, %struct.GPR* %33736, i32 0, i32 9
  %33738 = getelementptr inbounds %struct.Reg, %struct.Reg* %33737, i32 0, i32 0
  %RSI.i382 = bitcast %union.anon* %33738 to i64*
  %33739 = load i64, i64* %RCX.i381
  %33740 = load i64, i64* %RSI.i382
  %33741 = load i64, i64* %PC.i380
  %33742 = add i64 %33741, 3
  store i64 %33742, i64* %PC.i380
  %33743 = add i64 %33740, %33739
  store i64 %33743, i64* %RCX.i381, align 8
  %33744 = icmp ult i64 %33743, %33739
  %33745 = icmp ult i64 %33743, %33740
  %33746 = or i1 %33744, %33745
  %33747 = zext i1 %33746 to i8
  %33748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33747, i8* %33748, align 1
  %33749 = trunc i64 %33743 to i32
  %33750 = and i32 %33749, 255
  %33751 = call i32 @llvm.ctpop.i32(i32 %33750)
  %33752 = trunc i32 %33751 to i8
  %33753 = and i8 %33752, 1
  %33754 = xor i8 %33753, 1
  %33755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33754, i8* %33755, align 1
  %33756 = xor i64 %33740, %33739
  %33757 = xor i64 %33756, %33743
  %33758 = lshr i64 %33757, 4
  %33759 = trunc i64 %33758 to i8
  %33760 = and i8 %33759, 1
  %33761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33760, i8* %33761, align 1
  %33762 = icmp eq i64 %33743, 0
  %33763 = zext i1 %33762 to i8
  %33764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33763, i8* %33764, align 1
  %33765 = lshr i64 %33743, 63
  %33766 = trunc i64 %33765 to i8
  %33767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33766, i8* %33767, align 1
  %33768 = lshr i64 %33739, 63
  %33769 = lshr i64 %33740, 63
  %33770 = xor i64 %33765, %33768
  %33771 = xor i64 %33765, %33769
  %33772 = add i64 %33770, %33771
  %33773 = icmp eq i64 %33772, 2
  %33774 = zext i1 %33773 to i8
  %33775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33774, i8* %33775, align 1
  store %struct.Memory* %loadMem_4ac0f3, %struct.Memory** %MEMORY
  %loadMem_4ac0f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33777 = getelementptr inbounds %struct.GPR, %struct.GPR* %33776, i32 0, i32 33
  %33778 = getelementptr inbounds %struct.Reg, %struct.Reg* %33777, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %33778 to i64*
  %33779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33780 = getelementptr inbounds %struct.GPR, %struct.GPR* %33779, i32 0, i32 7
  %33781 = getelementptr inbounds %struct.Reg, %struct.Reg* %33780, i32 0, i32 0
  %RDX.i378 = bitcast %union.anon* %33781 to i64*
  %33782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33783 = getelementptr inbounds %struct.GPR, %struct.GPR* %33782, i32 0, i32 15
  %33784 = getelementptr inbounds %struct.Reg, %struct.Reg* %33783, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %33784 to i64*
  %33785 = load i64, i64* %RBP.i379
  %33786 = sub i64 %33785, 28
  %33787 = load i64, i64* %PC.i377
  %33788 = add i64 %33787, 3
  store i64 %33788, i64* %PC.i377
  %33789 = inttoptr i64 %33786 to i32*
  %33790 = load i32, i32* %33789
  %33791 = zext i32 %33790 to i64
  store i64 %33791, i64* %RDX.i378, align 8
  store %struct.Memory* %loadMem_4ac0f6, %struct.Memory** %MEMORY
  %loadMem_4ac0f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33793 = getelementptr inbounds %struct.GPR, %struct.GPR* %33792, i32 0, i32 33
  %33794 = getelementptr inbounds %struct.Reg, %struct.Reg* %33793, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %33794 to i64*
  %33795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33796 = getelementptr inbounds %struct.GPR, %struct.GPR* %33795, i32 0, i32 7
  %33797 = getelementptr inbounds %struct.Reg, %struct.Reg* %33796, i32 0, i32 0
  %RDX.i375 = bitcast %union.anon* %33797 to i64*
  %33798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33799 = getelementptr inbounds %struct.GPR, %struct.GPR* %33798, i32 0, i32 15
  %33800 = getelementptr inbounds %struct.Reg, %struct.Reg* %33799, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %33800 to i64*
  %33801 = load i64, i64* %RDX.i375
  %33802 = load i64, i64* %RBP.i376
  %33803 = sub i64 %33802, 88
  %33804 = load i64, i64* %PC.i374
  %33805 = add i64 %33804, 3
  store i64 %33805, i64* %PC.i374
  %33806 = trunc i64 %33801 to i32
  %33807 = inttoptr i64 %33803 to i32*
  %33808 = load i32, i32* %33807
  %33809 = add i32 %33808, %33806
  %33810 = zext i32 %33809 to i64
  store i64 %33810, i64* %RDX.i375, align 8
  %33811 = icmp ult i32 %33809, %33806
  %33812 = icmp ult i32 %33809, %33808
  %33813 = or i1 %33811, %33812
  %33814 = zext i1 %33813 to i8
  %33815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33814, i8* %33815, align 1
  %33816 = and i32 %33809, 255
  %33817 = call i32 @llvm.ctpop.i32(i32 %33816)
  %33818 = trunc i32 %33817 to i8
  %33819 = and i8 %33818, 1
  %33820 = xor i8 %33819, 1
  %33821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33820, i8* %33821, align 1
  %33822 = xor i32 %33808, %33806
  %33823 = xor i32 %33822, %33809
  %33824 = lshr i32 %33823, 4
  %33825 = trunc i32 %33824 to i8
  %33826 = and i8 %33825, 1
  %33827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33826, i8* %33827, align 1
  %33828 = icmp eq i32 %33809, 0
  %33829 = zext i1 %33828 to i8
  %33830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33829, i8* %33830, align 1
  %33831 = lshr i32 %33809, 31
  %33832 = trunc i32 %33831 to i8
  %33833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33832, i8* %33833, align 1
  %33834 = lshr i32 %33806, 31
  %33835 = lshr i32 %33808, 31
  %33836 = xor i32 %33831, %33834
  %33837 = xor i32 %33831, %33835
  %33838 = add i32 %33836, %33837
  %33839 = icmp eq i32 %33838, 2
  %33840 = zext i1 %33839 to i8
  %33841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33840, i8* %33841, align 1
  store %struct.Memory* %loadMem_4ac0f9, %struct.Memory** %MEMORY
  %loadMem_4ac0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %33842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33843 = getelementptr inbounds %struct.GPR, %struct.GPR* %33842, i32 0, i32 33
  %33844 = getelementptr inbounds %struct.Reg, %struct.Reg* %33843, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %33844 to i64*
  %33845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33846 = getelementptr inbounds %struct.GPR, %struct.GPR* %33845, i32 0, i32 7
  %33847 = getelementptr inbounds %struct.Reg, %struct.Reg* %33846, i32 0, i32 0
  %EDX.i372 = bitcast %union.anon* %33847 to i32*
  %33848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33849 = getelementptr inbounds %struct.GPR, %struct.GPR* %33848, i32 0, i32 9
  %33850 = getelementptr inbounds %struct.Reg, %struct.Reg* %33849, i32 0, i32 0
  %RSI.i373 = bitcast %union.anon* %33850 to i64*
  %33851 = load i32, i32* %EDX.i372
  %33852 = zext i32 %33851 to i64
  %33853 = load i64, i64* %PC.i371
  %33854 = add i64 %33853, 3
  store i64 %33854, i64* %PC.i371
  %33855 = shl i64 %33852, 32
  %33856 = ashr exact i64 %33855, 32
  store i64 %33856, i64* %RSI.i373, align 8
  store %struct.Memory* %loadMem_4ac0fc, %struct.Memory** %MEMORY
  %loadMem_4ac0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %33857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33858 = getelementptr inbounds %struct.GPR, %struct.GPR* %33857, i32 0, i32 33
  %33859 = getelementptr inbounds %struct.Reg, %struct.Reg* %33858, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %33859 to i64*
  %33860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33861 = getelementptr inbounds %struct.GPR, %struct.GPR* %33860, i32 0, i32 5
  %33862 = getelementptr inbounds %struct.Reg, %struct.Reg* %33861, i32 0, i32 0
  %RCX.i368 = bitcast %union.anon* %33862 to i64*
  %33863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33864 = getelementptr inbounds %struct.GPR, %struct.GPR* %33863, i32 0, i32 7
  %33865 = getelementptr inbounds %struct.Reg, %struct.Reg* %33864, i32 0, i32 0
  %RDX.i369 = bitcast %union.anon* %33865 to i64*
  %33866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33867 = getelementptr inbounds %struct.GPR, %struct.GPR* %33866, i32 0, i32 9
  %33868 = getelementptr inbounds %struct.Reg, %struct.Reg* %33867, i32 0, i32 0
  %RSI.i370 = bitcast %union.anon* %33868 to i64*
  %33869 = load i64, i64* %RCX.i368
  %33870 = load i64, i64* %RSI.i370
  %33871 = mul i64 %33870, 2
  %33872 = add i64 %33871, %33869
  %33873 = load i64, i64* %PC.i367
  %33874 = add i64 %33873, 4
  store i64 %33874, i64* %PC.i367
  %33875 = inttoptr i64 %33872 to i16*
  %33876 = load i16, i16* %33875
  %33877 = zext i16 %33876 to i64
  store i64 %33877, i64* %RDX.i369, align 8
  store %struct.Memory* %loadMem_4ac0ff, %struct.Memory** %MEMORY
  %loadMem_4ac103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33879 = getelementptr inbounds %struct.GPR, %struct.GPR* %33878, i32 0, i32 33
  %33880 = getelementptr inbounds %struct.Reg, %struct.Reg* %33879, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %33880 to i64*
  %33881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33882 = getelementptr inbounds %struct.GPR, %struct.GPR* %33881, i32 0, i32 7
  %33883 = getelementptr inbounds %struct.Reg, %struct.Reg* %33882, i32 0, i32 0
  %EDX.i365 = bitcast %union.anon* %33883 to i32*
  %33884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33885 = getelementptr inbounds %struct.GPR, %struct.GPR* %33884, i32 0, i32 5
  %33886 = getelementptr inbounds %struct.Reg, %struct.Reg* %33885, i32 0, i32 0
  %RCX.i366 = bitcast %union.anon* %33886 to i64*
  %33887 = load i32, i32* %EDX.i365
  %33888 = zext i32 %33887 to i64
  %33889 = load i64, i64* %PC.i364
  %33890 = add i64 %33889, 2
  store i64 %33890, i64* %PC.i364
  %33891 = and i64 %33888, 4294967295
  store i64 %33891, i64* %RCX.i366, align 8
  store %struct.Memory* %loadMem_4ac103, %struct.Memory** %MEMORY
  %loadMem_4ac105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33893 = getelementptr inbounds %struct.GPR, %struct.GPR* %33892, i32 0, i32 33
  %33894 = getelementptr inbounds %struct.Reg, %struct.Reg* %33893, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %33894 to i64*
  %33895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33896 = getelementptr inbounds %struct.GPR, %struct.GPR* %33895, i32 0, i32 5
  %33897 = getelementptr inbounds %struct.Reg, %struct.Reg* %33896, i32 0, i32 0
  %RCX.i363 = bitcast %union.anon* %33897 to i64*
  %33898 = load i64, i64* %RCX.i363
  %33899 = load i64, i64* %PC.i362
  %33900 = add i64 %33899, 4
  store i64 %33900, i64* %PC.i362
  %33901 = shl i64 %33898, 5
  %33902 = icmp slt i64 %33901, 0
  %33903 = shl i64 %33901, 1
  store i64 %33903, i64* %RCX.i363, align 8
  %33904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %33905 = zext i1 %33902 to i8
  store i8 %33905, i8* %33904, align 1
  %33906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %33907 = trunc i64 %33903 to i32
  %33908 = and i32 %33907, 254
  %33909 = call i32 @llvm.ctpop.i32(i32 %33908)
  %33910 = trunc i32 %33909 to i8
  %33911 = and i8 %33910, 1
  %33912 = xor i8 %33911, 1
  store i8 %33912, i8* %33906, align 1
  %33913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33913, align 1
  %33914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %33915 = icmp eq i64 %33903, 0
  %33916 = zext i1 %33915 to i8
  store i8 %33916, i8* %33914, align 1
  %33917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %33918 = lshr i64 %33903, 63
  %33919 = trunc i64 %33918 to i8
  store i8 %33919, i8* %33917, align 1
  %33920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33920, align 1
  store %struct.Memory* %loadMem_4ac105, %struct.Memory** %MEMORY
  %loadMem_4ac109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %33921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33922 = getelementptr inbounds %struct.GPR, %struct.GPR* %33921, i32 0, i32 33
  %33923 = getelementptr inbounds %struct.Reg, %struct.Reg* %33922, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %33923 to i64*
  %33924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33925 = getelementptr inbounds %struct.GPR, %struct.GPR* %33924, i32 0, i32 1
  %33926 = getelementptr inbounds %struct.Reg, %struct.Reg* %33925, i32 0, i32 0
  %RAX.i360 = bitcast %union.anon* %33926 to i64*
  %33927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33928 = getelementptr inbounds %struct.GPR, %struct.GPR* %33927, i32 0, i32 5
  %33929 = getelementptr inbounds %struct.Reg, %struct.Reg* %33928, i32 0, i32 0
  %RCX.i361 = bitcast %union.anon* %33929 to i64*
  %33930 = load i64, i64* %RAX.i360
  %33931 = load i64, i64* %RCX.i361
  %33932 = load i64, i64* %PC.i359
  %33933 = add i64 %33932, 3
  store i64 %33933, i64* %PC.i359
  %33934 = add i64 %33931, %33930
  store i64 %33934, i64* %RAX.i360, align 8
  %33935 = icmp ult i64 %33934, %33930
  %33936 = icmp ult i64 %33934, %33931
  %33937 = or i1 %33935, %33936
  %33938 = zext i1 %33937 to i8
  %33939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33938, i8* %33939, align 1
  %33940 = trunc i64 %33934 to i32
  %33941 = and i32 %33940, 255
  %33942 = call i32 @llvm.ctpop.i32(i32 %33941)
  %33943 = trunc i32 %33942 to i8
  %33944 = and i8 %33943, 1
  %33945 = xor i8 %33944, 1
  %33946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33945, i8* %33946, align 1
  %33947 = xor i64 %33931, %33930
  %33948 = xor i64 %33947, %33934
  %33949 = lshr i64 %33948, 4
  %33950 = trunc i64 %33949 to i8
  %33951 = and i8 %33950, 1
  %33952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33951, i8* %33952, align 1
  %33953 = icmp eq i64 %33934, 0
  %33954 = zext i1 %33953 to i8
  %33955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33954, i8* %33955, align 1
  %33956 = lshr i64 %33934, 63
  %33957 = trunc i64 %33956 to i8
  %33958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33957, i8* %33958, align 1
  %33959 = lshr i64 %33930, 63
  %33960 = lshr i64 %33931, 63
  %33961 = xor i64 %33956, %33959
  %33962 = xor i64 %33956, %33960
  %33963 = add i64 %33961, %33962
  %33964 = icmp eq i64 %33963, 2
  %33965 = zext i1 %33964 to i8
  %33966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33965, i8* %33966, align 1
  store %struct.Memory* %loadMem_4ac109, %struct.Memory** %MEMORY
  %loadMem_4ac10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %33967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33968 = getelementptr inbounds %struct.GPR, %struct.GPR* %33967, i32 0, i32 33
  %33969 = getelementptr inbounds %struct.Reg, %struct.Reg* %33968, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %33969 to i64*
  %33970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33971 = getelementptr inbounds %struct.GPR, %struct.GPR* %33970, i32 0, i32 1
  %33972 = getelementptr inbounds %struct.Reg, %struct.Reg* %33971, i32 0, i32 0
  %RAX.i358 = bitcast %union.anon* %33972 to i64*
  %33973 = load i64, i64* %RAX.i358
  %33974 = load i64, i64* %PC.i357
  %33975 = add i64 %33974, 4
  store i64 %33975, i64* %PC.i357
  %33976 = add i64 32, %33973
  store i64 %33976, i64* %RAX.i358, align 8
  %33977 = icmp ult i64 %33976, %33973
  %33978 = icmp ult i64 %33976, 32
  %33979 = or i1 %33977, %33978
  %33980 = zext i1 %33979 to i8
  %33981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33980, i8* %33981, align 1
  %33982 = trunc i64 %33976 to i32
  %33983 = and i32 %33982, 255
  %33984 = call i32 @llvm.ctpop.i32(i32 %33983)
  %33985 = trunc i32 %33984 to i8
  %33986 = and i8 %33985, 1
  %33987 = xor i8 %33986, 1
  %33988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33987, i8* %33988, align 1
  %33989 = xor i64 32, %33973
  %33990 = xor i64 %33989, %33976
  %33991 = lshr i64 %33990, 4
  %33992 = trunc i64 %33991 to i8
  %33993 = and i8 %33992, 1
  %33994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33993, i8* %33994, align 1
  %33995 = icmp eq i64 %33976, 0
  %33996 = zext i1 %33995 to i8
  %33997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33996, i8* %33997, align 1
  %33998 = lshr i64 %33976, 63
  %33999 = trunc i64 %33998 to i8
  %34000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33999, i8* %34000, align 1
  %34001 = lshr i64 %33973, 63
  %34002 = xor i64 %33998, %34001
  %34003 = add i64 %34002, %33998
  %34004 = icmp eq i64 %34003, 2
  %34005 = zext i1 %34004 to i8
  %34006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34005, i8* %34006, align 1
  store %struct.Memory* %loadMem_4ac10c, %struct.Memory** %MEMORY
  %loadMem_4ac110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34008 = getelementptr inbounds %struct.GPR, %struct.GPR* %34007, i32 0, i32 33
  %34009 = getelementptr inbounds %struct.Reg, %struct.Reg* %34008, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %34009 to i64*
  %34010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34011 = getelementptr inbounds %struct.GPR, %struct.GPR* %34010, i32 0, i32 1
  %34012 = getelementptr inbounds %struct.Reg, %struct.Reg* %34011, i32 0, i32 0
  %RAX.i356 = bitcast %union.anon* %34012 to i64*
  %34013 = load i64, i64* %RAX.i356
  %34014 = load i64, i64* %PC.i355
  %34015 = add i64 %34014, 4
  store i64 %34015, i64* %PC.i355
  %34016 = ashr i64 %34013, 5
  %34017 = trunc i64 %34016 to i8
  %34018 = and i8 %34017, 1
  %34019 = ashr i64 %34016, 1
  store i64 %34019, i64* %RAX.i356, align 8
  %34020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34018, i8* %34020, align 1
  %34021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %34022 = trunc i64 %34019 to i32
  %34023 = and i32 %34022, 255
  %34024 = call i32 @llvm.ctpop.i32(i32 %34023)
  %34025 = trunc i32 %34024 to i8
  %34026 = and i8 %34025, 1
  %34027 = xor i8 %34026, 1
  store i8 %34027, i8* %34021, align 1
  %34028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34028, align 1
  %34029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %34030 = icmp eq i64 %34019, 0
  %34031 = zext i1 %34030 to i8
  store i8 %34031, i8* %34029, align 1
  %34032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34033 = lshr i64 %34019, 63
  %34034 = trunc i64 %34033 to i8
  store i8 %34034, i8* %34032, align 1
  %34035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34035, align 1
  store %struct.Memory* %loadMem_4ac110, %struct.Memory** %MEMORY
  %loadMem_4ac114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34037 = getelementptr inbounds %struct.GPR, %struct.GPR* %34036, i32 0, i32 33
  %34038 = getelementptr inbounds %struct.Reg, %struct.Reg* %34037, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %34038 to i64*
  %34039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34040 = getelementptr inbounds %struct.GPR, %struct.GPR* %34039, i32 0, i32 1
  %34041 = getelementptr inbounds %struct.Reg, %struct.Reg* %34040, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %34041 to i64*
  %34042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34043 = getelementptr inbounds %struct.GPR, %struct.GPR* %34042, i32 0, i32 15
  %34044 = getelementptr inbounds %struct.Reg, %struct.Reg* %34043, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %34044 to i64*
  %34045 = load i64, i64* %RBP.i354
  %34046 = sub i64 %34045, 736
  %34047 = load i64, i64* %RAX.i353
  %34048 = load i64, i64* %PC.i352
  %34049 = add i64 %34048, 7
  store i64 %34049, i64* %PC.i352
  %34050 = inttoptr i64 %34046 to i64*
  store i64 %34047, i64* %34050
  store %struct.Memory* %loadMem_4ac114, %struct.Memory** %MEMORY
  br label %block_.L_4ac11b

block_.L_4ac11b:                                  ; preds = %block_.L_4ac0b6, %block_4ac0a6
  %loadMem_4ac11b = load %struct.Memory*, %struct.Memory** %MEMORY
  %34051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34052 = getelementptr inbounds %struct.GPR, %struct.GPR* %34051, i32 0, i32 33
  %34053 = getelementptr inbounds %struct.Reg, %struct.Reg* %34052, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %34053 to i64*
  %34054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34055 = getelementptr inbounds %struct.GPR, %struct.GPR* %34054, i32 0, i32 1
  %34056 = getelementptr inbounds %struct.Reg, %struct.Reg* %34055, i32 0, i32 0
  %RAX.i350 = bitcast %union.anon* %34056 to i64*
  %34057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34058 = getelementptr inbounds %struct.GPR, %struct.GPR* %34057, i32 0, i32 15
  %34059 = getelementptr inbounds %struct.Reg, %struct.Reg* %34058, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %34059 to i64*
  %34060 = load i64, i64* %RBP.i351
  %34061 = sub i64 %34060, 736
  %34062 = load i64, i64* %PC.i349
  %34063 = add i64 %34062, 7
  store i64 %34063, i64* %PC.i349
  %34064 = inttoptr i64 %34061 to i64*
  %34065 = load i64, i64* %34064
  store i64 %34065, i64* %RAX.i350, align 8
  store %struct.Memory* %loadMem_4ac11b, %struct.Memory** %MEMORY
  %loadMem_4ac122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34067 = getelementptr inbounds %struct.GPR, %struct.GPR* %34066, i32 0, i32 33
  %34068 = getelementptr inbounds %struct.Reg, %struct.Reg* %34067, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %34068 to i64*
  %34069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34070 = getelementptr inbounds %struct.GPR, %struct.GPR* %34069, i32 0, i32 5
  %34071 = getelementptr inbounds %struct.Reg, %struct.Reg* %34070, i32 0, i32 0
  %RCX.i347 = bitcast %union.anon* %34071 to i64*
  %34072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34073 = getelementptr inbounds %struct.GPR, %struct.GPR* %34072, i32 0, i32 15
  %34074 = getelementptr inbounds %struct.Reg, %struct.Reg* %34073, i32 0, i32 0
  %RBP.i348 = bitcast %union.anon* %34074 to i64*
  %34075 = load i64, i64* %RBP.i348
  %34076 = sub i64 %34075, 728
  %34077 = load i64, i64* %PC.i346
  %34078 = add i64 %34077, 7
  store i64 %34078, i64* %PC.i346
  %34079 = inttoptr i64 %34076 to i64*
  %34080 = load i64, i64* %34079
  store i64 %34080, i64* %RCX.i347, align 8
  store %struct.Memory* %loadMem_4ac122, %struct.Memory** %MEMORY
  %loadMem_4ac129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34082 = getelementptr inbounds %struct.GPR, %struct.GPR* %34081, i32 0, i32 33
  %34083 = getelementptr inbounds %struct.Reg, %struct.Reg* %34082, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %34083 to i64*
  %34084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34085 = getelementptr inbounds %struct.GPR, %struct.GPR* %34084, i32 0, i32 1
  %34086 = getelementptr inbounds %struct.Reg, %struct.Reg* %34085, i32 0, i32 0
  %RAX.i344 = bitcast %union.anon* %34086 to i64*
  %34087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34088 = getelementptr inbounds %struct.GPR, %struct.GPR* %34087, i32 0, i32 5
  %34089 = getelementptr inbounds %struct.Reg, %struct.Reg* %34088, i32 0, i32 0
  %RCX.i345 = bitcast %union.anon* %34089 to i64*
  %34090 = load i64, i64* %RCX.i345
  %34091 = load i64, i64* %RAX.i344
  %34092 = load i64, i64* %PC.i343
  %34093 = add i64 %34092, 3
  store i64 %34093, i64* %PC.i343
  %34094 = sub i64 %34090, %34091
  %34095 = icmp ult i64 %34090, %34091
  %34096 = zext i1 %34095 to i8
  %34097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34096, i8* %34097, align 1
  %34098 = trunc i64 %34094 to i32
  %34099 = and i32 %34098, 255
  %34100 = call i32 @llvm.ctpop.i32(i32 %34099)
  %34101 = trunc i32 %34100 to i8
  %34102 = and i8 %34101, 1
  %34103 = xor i8 %34102, 1
  %34104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34103, i8* %34104, align 1
  %34105 = xor i64 %34091, %34090
  %34106 = xor i64 %34105, %34094
  %34107 = lshr i64 %34106, 4
  %34108 = trunc i64 %34107 to i8
  %34109 = and i8 %34108, 1
  %34110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34109, i8* %34110, align 1
  %34111 = icmp eq i64 %34094, 0
  %34112 = zext i1 %34111 to i8
  %34113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34112, i8* %34113, align 1
  %34114 = lshr i64 %34094, 63
  %34115 = trunc i64 %34114 to i8
  %34116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34115, i8* %34116, align 1
  %34117 = lshr i64 %34090, 63
  %34118 = lshr i64 %34091, 63
  %34119 = xor i64 %34118, %34117
  %34120 = xor i64 %34114, %34117
  %34121 = add i64 %34120, %34119
  %34122 = icmp eq i64 %34121, 2
  %34123 = zext i1 %34122 to i8
  %34124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34123, i8* %34124, align 1
  store %struct.Memory* %loadMem_4ac129, %struct.Memory** %MEMORY
  %loadMem_4ac12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %34125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34126 = getelementptr inbounds %struct.GPR, %struct.GPR* %34125, i32 0, i32 33
  %34127 = getelementptr inbounds %struct.Reg, %struct.Reg* %34126, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %34127 to i64*
  %34128 = load i64, i64* %PC.i342
  %34129 = add i64 %34128, 33
  %34130 = load i64, i64* %PC.i342
  %34131 = add i64 %34130, 6
  %34132 = load i64, i64* %PC.i342
  %34133 = add i64 %34132, 6
  store i64 %34133, i64* %PC.i342
  %34134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34135 = load i8, i8* %34134, align 1
  %34136 = icmp ne i8 %34135, 0
  %34137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34138 = load i8, i8* %34137, align 1
  %34139 = icmp ne i8 %34138, 0
  %34140 = xor i1 %34136, %34139
  %34141 = xor i1 %34140, true
  %34142 = zext i1 %34141 to i8
  store i8 %34142, i8* %BRANCH_TAKEN, align 1
  %34143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %34144 = select i1 %34140, i64 %34131, i64 %34129
  store i64 %34144, i64* %34143, align 8
  store %struct.Memory* %loadMem_4ac12c, %struct.Memory** %MEMORY
  %loadBr_4ac12c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ac12c = icmp eq i8 %loadBr_4ac12c, 1
  br i1 %cmpBr_4ac12c, label %block_.L_4ac14d, label %block_4ac132

block_4ac132:                                     ; preds = %block_.L_4ac11b
  %loadMem_4ac132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34146 = getelementptr inbounds %struct.GPR, %struct.GPR* %34145, i32 0, i32 33
  %34147 = getelementptr inbounds %struct.Reg, %struct.Reg* %34146, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %34147 to i64*
  %34148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34149 = getelementptr inbounds %struct.GPR, %struct.GPR* %34148, i32 0, i32 1
  %34150 = getelementptr inbounds %struct.Reg, %struct.Reg* %34149, i32 0, i32 0
  %RAX.i341 = bitcast %union.anon* %34150 to i64*
  %34151 = load i64, i64* %PC.i340
  %34152 = add i64 %34151, 8
  store i64 %34152, i64* %PC.i340
  %34153 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %34153, i64* %RAX.i341, align 8
  store %struct.Memory* %loadMem_4ac132, %struct.Memory** %MEMORY
  %loadMem_4ac13a = load %struct.Memory*, %struct.Memory** %MEMORY
  %34154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34155 = getelementptr inbounds %struct.GPR, %struct.GPR* %34154, i32 0, i32 33
  %34156 = getelementptr inbounds %struct.Reg, %struct.Reg* %34155, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %34156 to i64*
  %34157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34158 = getelementptr inbounds %struct.GPR, %struct.GPR* %34157, i32 0, i32 1
  %34159 = getelementptr inbounds %struct.Reg, %struct.Reg* %34158, i32 0, i32 0
  %RAX.i339 = bitcast %union.anon* %34159 to i64*
  %34160 = load i64, i64* %RAX.i339
  %34161 = add i64 %34160, 72684
  %34162 = load i64, i64* %PC.i338
  %34163 = add i64 %34162, 7
  store i64 %34163, i64* %PC.i338
  %34164 = inttoptr i64 %34161 to i32*
  %34165 = load i32, i32* %34164
  %34166 = sext i32 %34165 to i64
  store i64 %34166, i64* %RAX.i339, align 8
  store %struct.Memory* %loadMem_4ac13a, %struct.Memory** %MEMORY
  %loadMem_4ac141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34168 = getelementptr inbounds %struct.GPR, %struct.GPR* %34167, i32 0, i32 33
  %34169 = getelementptr inbounds %struct.Reg, %struct.Reg* %34168, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %34169 to i64*
  %34170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34171 = getelementptr inbounds %struct.GPR, %struct.GPR* %34170, i32 0, i32 1
  %34172 = getelementptr inbounds %struct.Reg, %struct.Reg* %34171, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %34172 to i64*
  %34173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34174 = getelementptr inbounds %struct.GPR, %struct.GPR* %34173, i32 0, i32 15
  %34175 = getelementptr inbounds %struct.Reg, %struct.Reg* %34174, i32 0, i32 0
  %RBP.i337 = bitcast %union.anon* %34175 to i64*
  %34176 = load i64, i64* %RBP.i337
  %34177 = sub i64 %34176, 744
  %34178 = load i64, i64* %RAX.i336
  %34179 = load i64, i64* %PC.i335
  %34180 = add i64 %34179, 7
  store i64 %34180, i64* %PC.i335
  %34181 = inttoptr i64 %34177 to i64*
  store i64 %34178, i64* %34181
  store %struct.Memory* %loadMem_4ac141, %struct.Memory** %MEMORY
  %loadMem_4ac148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34183 = getelementptr inbounds %struct.GPR, %struct.GPR* %34182, i32 0, i32 33
  %34184 = getelementptr inbounds %struct.Reg, %struct.Reg* %34183, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %34184 to i64*
  %34185 = load i64, i64* %PC.i334
  %34186 = add i64 %34185, 244
  %34187 = load i64, i64* %PC.i334
  %34188 = add i64 %34187, 5
  store i64 %34188, i64* %PC.i334
  %34189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %34186, i64* %34189, align 8
  store %struct.Memory* %loadMem_4ac148, %struct.Memory** %MEMORY
  br label %block_.L_4ac23c

block_.L_4ac14d:                                  ; preds = %block_.L_4ac11b
  %loadMem_4ac14d = load %struct.Memory*, %struct.Memory** %MEMORY
  %34190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34191 = getelementptr inbounds %struct.GPR, %struct.GPR* %34190, i32 0, i32 33
  %34192 = getelementptr inbounds %struct.Reg, %struct.Reg* %34191, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %34192 to i64*
  %34193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34194 = getelementptr inbounds %struct.GPR, %struct.GPR* %34193, i32 0, i32 1
  %34195 = getelementptr inbounds %struct.Reg, %struct.Reg* %34194, i32 0, i32 0
  %EAX.i332 = bitcast %union.anon* %34195 to i32*
  %34196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34197 = getelementptr inbounds %struct.GPR, %struct.GPR* %34196, i32 0, i32 1
  %34198 = getelementptr inbounds %struct.Reg, %struct.Reg* %34197, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %34198 to i64*
  %34199 = load i64, i64* %RAX.i333
  %34200 = load i32, i32* %EAX.i332
  %34201 = zext i32 %34200 to i64
  %34202 = load i64, i64* %PC.i331
  %34203 = add i64 %34202, 2
  store i64 %34203, i64* %PC.i331
  %34204 = xor i64 %34201, %34199
  %34205 = trunc i64 %34204 to i32
  %34206 = and i64 %34204, 4294967295
  store i64 %34206, i64* %RAX.i333, align 8
  %34207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %34207, align 1
  %34208 = and i32 %34205, 255
  %34209 = call i32 @llvm.ctpop.i32(i32 %34208)
  %34210 = trunc i32 %34209 to i8
  %34211 = and i8 %34210, 1
  %34212 = xor i8 %34211, 1
  %34213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34212, i8* %34213, align 1
  %34214 = icmp eq i32 %34205, 0
  %34215 = zext i1 %34214 to i8
  %34216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34215, i8* %34216, align 1
  %34217 = lshr i32 %34205, 31
  %34218 = trunc i32 %34217 to i8
  %34219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34218, i8* %34219, align 1
  %34220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34220, align 1
  %34221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34221, align 1
  store %struct.Memory* %loadMem_4ac14d, %struct.Memory** %MEMORY
  %loadMem_4ac14f = load %struct.Memory*, %struct.Memory** %MEMORY
  %34222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34223 = getelementptr inbounds %struct.GPR, %struct.GPR* %34222, i32 0, i32 33
  %34224 = getelementptr inbounds %struct.Reg, %struct.Reg* %34223, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %34224 to i64*
  %34225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34226 = getelementptr inbounds %struct.GPR, %struct.GPR* %34225, i32 0, i32 1
  %34227 = getelementptr inbounds %struct.Reg, %struct.Reg* %34226, i32 0, i32 0
  %EAX.i329 = bitcast %union.anon* %34227 to i32*
  %34228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34229 = getelementptr inbounds %struct.GPR, %struct.GPR* %34228, i32 0, i32 5
  %34230 = getelementptr inbounds %struct.Reg, %struct.Reg* %34229, i32 0, i32 0
  %RCX.i330 = bitcast %union.anon* %34230 to i64*
  %34231 = load i32, i32* %EAX.i329
  %34232 = zext i32 %34231 to i64
  %34233 = load i64, i64* %PC.i328
  %34234 = add i64 %34233, 2
  store i64 %34234, i64* %PC.i328
  %34235 = and i64 %34232, 4294967295
  store i64 %34235, i64* %RCX.i330, align 8
  store %struct.Memory* %loadMem_4ac14f, %struct.Memory** %MEMORY
  %loadMem_4ac151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34237 = getelementptr inbounds %struct.GPR, %struct.GPR* %34236, i32 0, i32 33
  %34238 = getelementptr inbounds %struct.Reg, %struct.Reg* %34237, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %34238 to i64*
  %34239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34240 = getelementptr inbounds %struct.GPR, %struct.GPR* %34239, i32 0, i32 7
  %34241 = getelementptr inbounds %struct.Reg, %struct.Reg* %34240, i32 0, i32 0
  %RDX.i327 = bitcast %union.anon* %34241 to i64*
  %34242 = load i64, i64* %PC.i326
  %34243 = add i64 %34242, 8
  store i64 %34243, i64* %PC.i326
  %34244 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %34244, i64* %RDX.i327, align 8
  store %struct.Memory* %loadMem_4ac151, %struct.Memory** %MEMORY
  %loadMem_4ac159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34246 = getelementptr inbounds %struct.GPR, %struct.GPR* %34245, i32 0, i32 33
  %34247 = getelementptr inbounds %struct.Reg, %struct.Reg* %34246, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %34247 to i64*
  %34248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34249 = getelementptr inbounds %struct.GPR, %struct.GPR* %34248, i32 0, i32 7
  %34250 = getelementptr inbounds %struct.Reg, %struct.Reg* %34249, i32 0, i32 0
  %RDX.i325 = bitcast %union.anon* %34250 to i64*
  %34251 = load i64, i64* %RDX.i325
  %34252 = load i64, i64* %PC.i324
  %34253 = add i64 %34252, 7
  store i64 %34253, i64* %PC.i324
  %34254 = add i64 13112, %34251
  store i64 %34254, i64* %RDX.i325, align 8
  %34255 = icmp ult i64 %34254, %34251
  %34256 = icmp ult i64 %34254, 13112
  %34257 = or i1 %34255, %34256
  %34258 = zext i1 %34257 to i8
  %34259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34258, i8* %34259, align 1
  %34260 = trunc i64 %34254 to i32
  %34261 = and i32 %34260, 255
  %34262 = call i32 @llvm.ctpop.i32(i32 %34261)
  %34263 = trunc i32 %34262 to i8
  %34264 = and i8 %34263, 1
  %34265 = xor i8 %34264, 1
  %34266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34265, i8* %34266, align 1
  %34267 = xor i64 13112, %34251
  %34268 = xor i64 %34267, %34254
  %34269 = lshr i64 %34268, 4
  %34270 = trunc i64 %34269 to i8
  %34271 = and i8 %34270, 1
  %34272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34271, i8* %34272, align 1
  %34273 = icmp eq i64 %34254, 0
  %34274 = zext i1 %34273 to i8
  %34275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34274, i8* %34275, align 1
  %34276 = lshr i64 %34254, 63
  %34277 = trunc i64 %34276 to i8
  %34278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34277, i8* %34278, align 1
  %34279 = lshr i64 %34251, 63
  %34280 = xor i64 %34276, %34279
  %34281 = add i64 %34280, %34276
  %34282 = icmp eq i64 %34281, 2
  %34283 = zext i1 %34282 to i8
  %34284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34283, i8* %34284, align 1
  store %struct.Memory* %loadMem_4ac159, %struct.Memory** %MEMORY
  %loadMem_4ac160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34286 = getelementptr inbounds %struct.GPR, %struct.GPR* %34285, i32 0, i32 33
  %34287 = getelementptr inbounds %struct.Reg, %struct.Reg* %34286, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %34287 to i64*
  %34288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34289 = getelementptr inbounds %struct.GPR, %struct.GPR* %34288, i32 0, i32 9
  %34290 = getelementptr inbounds %struct.Reg, %struct.Reg* %34289, i32 0, i32 0
  %RSI.i322 = bitcast %union.anon* %34290 to i64*
  %34291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34292 = getelementptr inbounds %struct.GPR, %struct.GPR* %34291, i32 0, i32 15
  %34293 = getelementptr inbounds %struct.Reg, %struct.Reg* %34292, i32 0, i32 0
  %RBP.i323 = bitcast %union.anon* %34293 to i64*
  %34294 = load i64, i64* %RBP.i323
  %34295 = sub i64 %34294, 24
  %34296 = load i64, i64* %PC.i321
  %34297 = add i64 %34296, 4
  store i64 %34297, i64* %PC.i321
  %34298 = inttoptr i64 %34295 to i32*
  %34299 = load i32, i32* %34298
  %34300 = sext i32 %34299 to i64
  store i64 %34300, i64* %RSI.i322, align 8
  store %struct.Memory* %loadMem_4ac160, %struct.Memory** %MEMORY
  %loadMem_4ac164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34302 = getelementptr inbounds %struct.GPR, %struct.GPR* %34301, i32 0, i32 33
  %34303 = getelementptr inbounds %struct.Reg, %struct.Reg* %34302, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %34303 to i64*
  %34304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34305 = getelementptr inbounds %struct.GPR, %struct.GPR* %34304, i32 0, i32 9
  %34306 = getelementptr inbounds %struct.Reg, %struct.Reg* %34305, i32 0, i32 0
  %RSI.i320 = bitcast %union.anon* %34306 to i64*
  %34307 = load i64, i64* %RSI.i320
  %34308 = load i64, i64* %PC.i319
  %34309 = add i64 %34308, 4
  store i64 %34309, i64* %PC.i319
  %34310 = shl i64 %34307, 5
  %34311 = icmp slt i64 %34310, 0
  %34312 = shl i64 %34310, 1
  store i64 %34312, i64* %RSI.i320, align 8
  %34313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %34314 = zext i1 %34311 to i8
  store i8 %34314, i8* %34313, align 1
  %34315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %34316 = trunc i64 %34312 to i32
  %34317 = and i32 %34316, 254
  %34318 = call i32 @llvm.ctpop.i32(i32 %34317)
  %34319 = trunc i32 %34318 to i8
  %34320 = and i8 %34319, 1
  %34321 = xor i8 %34320, 1
  store i8 %34321, i8* %34315, align 1
  %34322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34322, align 1
  %34323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %34324 = icmp eq i64 %34312, 0
  %34325 = zext i1 %34324 to i8
  store i8 %34325, i8* %34323, align 1
  %34326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34327 = lshr i64 %34312, 63
  %34328 = trunc i64 %34327 to i8
  store i8 %34328, i8* %34326, align 1
  %34329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34329, align 1
  store %struct.Memory* %loadMem_4ac164, %struct.Memory** %MEMORY
  %loadMem_4ac168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34331 = getelementptr inbounds %struct.GPR, %struct.GPR* %34330, i32 0, i32 33
  %34332 = getelementptr inbounds %struct.Reg, %struct.Reg* %34331, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %34332 to i64*
  %34333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34334 = getelementptr inbounds %struct.GPR, %struct.GPR* %34333, i32 0, i32 7
  %34335 = getelementptr inbounds %struct.Reg, %struct.Reg* %34334, i32 0, i32 0
  %RDX.i317 = bitcast %union.anon* %34335 to i64*
  %34336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34337 = getelementptr inbounds %struct.GPR, %struct.GPR* %34336, i32 0, i32 9
  %34338 = getelementptr inbounds %struct.Reg, %struct.Reg* %34337, i32 0, i32 0
  %RSI.i318 = bitcast %union.anon* %34338 to i64*
  %34339 = load i64, i64* %RDX.i317
  %34340 = load i64, i64* %RSI.i318
  %34341 = load i64, i64* %PC.i316
  %34342 = add i64 %34341, 3
  store i64 %34342, i64* %PC.i316
  %34343 = add i64 %34340, %34339
  store i64 %34343, i64* %RDX.i317, align 8
  %34344 = icmp ult i64 %34343, %34339
  %34345 = icmp ult i64 %34343, %34340
  %34346 = or i1 %34344, %34345
  %34347 = zext i1 %34346 to i8
  %34348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34347, i8* %34348, align 1
  %34349 = trunc i64 %34343 to i32
  %34350 = and i32 %34349, 255
  %34351 = call i32 @llvm.ctpop.i32(i32 %34350)
  %34352 = trunc i32 %34351 to i8
  %34353 = and i8 %34352, 1
  %34354 = xor i8 %34353, 1
  %34355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34354, i8* %34355, align 1
  %34356 = xor i64 %34340, %34339
  %34357 = xor i64 %34356, %34343
  %34358 = lshr i64 %34357, 4
  %34359 = trunc i64 %34358 to i8
  %34360 = and i8 %34359, 1
  %34361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34360, i8* %34361, align 1
  %34362 = icmp eq i64 %34343, 0
  %34363 = zext i1 %34362 to i8
  %34364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34363, i8* %34364, align 1
  %34365 = lshr i64 %34343, 63
  %34366 = trunc i64 %34365 to i8
  %34367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34366, i8* %34367, align 1
  %34368 = lshr i64 %34339, 63
  %34369 = lshr i64 %34340, 63
  %34370 = xor i64 %34365, %34368
  %34371 = xor i64 %34365, %34369
  %34372 = add i64 %34370, %34371
  %34373 = icmp eq i64 %34372, 2
  %34374 = zext i1 %34373 to i8
  %34375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34374, i8* %34375, align 1
  store %struct.Memory* %loadMem_4ac168, %struct.Memory** %MEMORY
  %loadMem_4ac16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %34376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34377 = getelementptr inbounds %struct.GPR, %struct.GPR* %34376, i32 0, i32 33
  %34378 = getelementptr inbounds %struct.Reg, %struct.Reg* %34377, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %34378 to i64*
  %34379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34380 = getelementptr inbounds %struct.GPR, %struct.GPR* %34379, i32 0, i32 9
  %34381 = getelementptr inbounds %struct.Reg, %struct.Reg* %34380, i32 0, i32 0
  %RSI.i314 = bitcast %union.anon* %34381 to i64*
  %34382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34383 = getelementptr inbounds %struct.GPR, %struct.GPR* %34382, i32 0, i32 15
  %34384 = getelementptr inbounds %struct.Reg, %struct.Reg* %34383, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %34384 to i64*
  %34385 = load i64, i64* %RBP.i315
  %34386 = sub i64 %34385, 28
  %34387 = load i64, i64* %PC.i313
  %34388 = add i64 %34387, 4
  store i64 %34388, i64* %PC.i313
  %34389 = inttoptr i64 %34386 to i32*
  %34390 = load i32, i32* %34389
  %34391 = sext i32 %34390 to i64
  store i64 %34391, i64* %RSI.i314, align 8
  store %struct.Memory* %loadMem_4ac16b, %struct.Memory** %MEMORY
  %loadMem_4ac16f = load %struct.Memory*, %struct.Memory** %MEMORY
  %34392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34393 = getelementptr inbounds %struct.GPR, %struct.GPR* %34392, i32 0, i32 33
  %34394 = getelementptr inbounds %struct.Reg, %struct.Reg* %34393, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %34394 to i64*
  %34395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34396 = getelementptr inbounds %struct.GPR, %struct.GPR* %34395, i32 0, i32 7
  %34397 = getelementptr inbounds %struct.Reg, %struct.Reg* %34396, i32 0, i32 0
  %RDX.i311 = bitcast %union.anon* %34397 to i64*
  %34398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34399 = getelementptr inbounds %struct.GPR, %struct.GPR* %34398, i32 0, i32 9
  %34400 = getelementptr inbounds %struct.Reg, %struct.Reg* %34399, i32 0, i32 0
  %RSI.i312 = bitcast %union.anon* %34400 to i64*
  %34401 = load i64, i64* %RDX.i311
  %34402 = load i64, i64* %RSI.i312
  %34403 = mul i64 %34402, 4
  %34404 = add i64 %34403, %34401
  %34405 = load i64, i64* %PC.i310
  %34406 = add i64 %34405, 4
  store i64 %34406, i64* %PC.i310
  %34407 = inttoptr i64 %34404 to i32*
  %34408 = load i32, i32* %34407
  %34409 = sext i32 %34408 to i64
  store i64 %34409, i64* %RDX.i311, align 8
  store %struct.Memory* %loadMem_4ac16f, %struct.Memory** %MEMORY
  %loadMem_4ac173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34411 = getelementptr inbounds %struct.GPR, %struct.GPR* %34410, i32 0, i32 33
  %34412 = getelementptr inbounds %struct.Reg, %struct.Reg* %34411, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %34412 to i64*
  %34413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34414 = getelementptr inbounds %struct.GPR, %struct.GPR* %34413, i32 0, i32 9
  %34415 = getelementptr inbounds %struct.Reg, %struct.Reg* %34414, i32 0, i32 0
  %RSI.i309 = bitcast %union.anon* %34415 to i64*
  %34416 = load i64, i64* %PC.i308
  %34417 = add i64 %34416, 8
  store i64 %34417, i64* %PC.i308
  %34418 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %34418, i64* %RSI.i309, align 8
  store %struct.Memory* %loadMem_4ac173, %struct.Memory** %MEMORY
  %loadMem_4ac17b = load %struct.Memory*, %struct.Memory** %MEMORY
  %34419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34420 = getelementptr inbounds %struct.GPR, %struct.GPR* %34419, i32 0, i32 33
  %34421 = getelementptr inbounds %struct.Reg, %struct.Reg* %34420, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %34421 to i64*
  %34422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34423 = getelementptr inbounds %struct.GPR, %struct.GPR* %34422, i32 0, i32 9
  %34424 = getelementptr inbounds %struct.Reg, %struct.Reg* %34423, i32 0, i32 0
  %RSI.i307 = bitcast %union.anon* %34424 to i64*
  %34425 = load i64, i64* %RSI.i307
  %34426 = load i64, i64* %PC.i306
  %34427 = add i64 %34426, 7
  store i64 %34427, i64* %PC.i306
  %34428 = add i64 12600, %34425
  store i64 %34428, i64* %RSI.i307, align 8
  %34429 = icmp ult i64 %34428, %34425
  %34430 = icmp ult i64 %34428, 12600
  %34431 = or i1 %34429, %34430
  %34432 = zext i1 %34431 to i8
  %34433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34432, i8* %34433, align 1
  %34434 = trunc i64 %34428 to i32
  %34435 = and i32 %34434, 255
  %34436 = call i32 @llvm.ctpop.i32(i32 %34435)
  %34437 = trunc i32 %34436 to i8
  %34438 = and i8 %34437, 1
  %34439 = xor i8 %34438, 1
  %34440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34439, i8* %34440, align 1
  %34441 = xor i64 12600, %34425
  %34442 = xor i64 %34441, %34428
  %34443 = lshr i64 %34442, 4
  %34444 = trunc i64 %34443 to i8
  %34445 = and i8 %34444, 1
  %34446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34445, i8* %34446, align 1
  %34447 = icmp eq i64 %34428, 0
  %34448 = zext i1 %34447 to i8
  %34449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34448, i8* %34449, align 1
  %34450 = lshr i64 %34428, 63
  %34451 = trunc i64 %34450 to i8
  %34452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34451, i8* %34452, align 1
  %34453 = lshr i64 %34425, 63
  %34454 = xor i64 %34450, %34453
  %34455 = add i64 %34454, %34450
  %34456 = icmp eq i64 %34455, 2
  %34457 = zext i1 %34456 to i8
  %34458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34457, i8* %34458, align 1
  store %struct.Memory* %loadMem_4ac17b, %struct.Memory** %MEMORY
  %loadMem_4ac182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34460 = getelementptr inbounds %struct.GPR, %struct.GPR* %34459, i32 0, i32 33
  %34461 = getelementptr inbounds %struct.Reg, %struct.Reg* %34460, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %34461 to i64*
  %34462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34463 = getelementptr inbounds %struct.GPR, %struct.GPR* %34462, i32 0, i32 1
  %34464 = getelementptr inbounds %struct.Reg, %struct.Reg* %34463, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %34464 to i64*
  %34465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34466 = getelementptr inbounds %struct.GPR, %struct.GPR* %34465, i32 0, i32 15
  %34467 = getelementptr inbounds %struct.Reg, %struct.Reg* %34466, i32 0, i32 0
  %RBP.i305 = bitcast %union.anon* %34467 to i64*
  %34468 = load i64, i64* %RBP.i305
  %34469 = sub i64 %34468, 24
  %34470 = load i64, i64* %PC.i303
  %34471 = add i64 %34470, 3
  store i64 %34471, i64* %PC.i303
  %34472 = inttoptr i64 %34469 to i32*
  %34473 = load i32, i32* %34472
  %34474 = zext i32 %34473 to i64
  store i64 %34474, i64* %RAX.i304, align 8
  store %struct.Memory* %loadMem_4ac182, %struct.Memory** %MEMORY
  %loadMem_4ac185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34476 = getelementptr inbounds %struct.GPR, %struct.GPR* %34475, i32 0, i32 33
  %34477 = getelementptr inbounds %struct.Reg, %struct.Reg* %34476, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %34477 to i64*
  %34478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34479 = getelementptr inbounds %struct.GPR, %struct.GPR* %34478, i32 0, i32 1
  %34480 = getelementptr inbounds %struct.Reg, %struct.Reg* %34479, i32 0, i32 0
  %RAX.i301 = bitcast %union.anon* %34480 to i64*
  %34481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34482 = getelementptr inbounds %struct.GPR, %struct.GPR* %34481, i32 0, i32 15
  %34483 = getelementptr inbounds %struct.Reg, %struct.Reg* %34482, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %34483 to i64*
  %34484 = load i64, i64* %RAX.i301
  %34485 = load i64, i64* %RBP.i302
  %34486 = sub i64 %34485, 84
  %34487 = load i64, i64* %PC.i300
  %34488 = add i64 %34487, 3
  store i64 %34488, i64* %PC.i300
  %34489 = trunc i64 %34484 to i32
  %34490 = inttoptr i64 %34486 to i32*
  %34491 = load i32, i32* %34490
  %34492 = add i32 %34491, %34489
  %34493 = zext i32 %34492 to i64
  store i64 %34493, i64* %RAX.i301, align 8
  %34494 = icmp ult i32 %34492, %34489
  %34495 = icmp ult i32 %34492, %34491
  %34496 = or i1 %34494, %34495
  %34497 = zext i1 %34496 to i8
  %34498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34497, i8* %34498, align 1
  %34499 = and i32 %34492, 255
  %34500 = call i32 @llvm.ctpop.i32(i32 %34499)
  %34501 = trunc i32 %34500 to i8
  %34502 = and i8 %34501, 1
  %34503 = xor i8 %34502, 1
  %34504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34503, i8* %34504, align 1
  %34505 = xor i32 %34491, %34489
  %34506 = xor i32 %34505, %34492
  %34507 = lshr i32 %34506, 4
  %34508 = trunc i32 %34507 to i8
  %34509 = and i8 %34508, 1
  %34510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34509, i8* %34510, align 1
  %34511 = icmp eq i32 %34492, 0
  %34512 = zext i1 %34511 to i8
  %34513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34512, i8* %34513, align 1
  %34514 = lshr i32 %34492, 31
  %34515 = trunc i32 %34514 to i8
  %34516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34515, i8* %34516, align 1
  %34517 = lshr i32 %34489, 31
  %34518 = lshr i32 %34491, 31
  %34519 = xor i32 %34514, %34517
  %34520 = xor i32 %34514, %34518
  %34521 = add i32 %34519, %34520
  %34522 = icmp eq i32 %34521, 2
  %34523 = zext i1 %34522 to i8
  %34524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34523, i8* %34524, align 1
  store %struct.Memory* %loadMem_4ac185, %struct.Memory** %MEMORY
  %loadMem_4ac188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34526 = getelementptr inbounds %struct.GPR, %struct.GPR* %34525, i32 0, i32 33
  %34527 = getelementptr inbounds %struct.Reg, %struct.Reg* %34526, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %34527 to i64*
  %34528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34529 = getelementptr inbounds %struct.GPR, %struct.GPR* %34528, i32 0, i32 1
  %34530 = getelementptr inbounds %struct.Reg, %struct.Reg* %34529, i32 0, i32 0
  %EAX.i298 = bitcast %union.anon* %34530 to i32*
  %34531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34532 = getelementptr inbounds %struct.GPR, %struct.GPR* %34531, i32 0, i32 11
  %34533 = getelementptr inbounds %struct.Reg, %struct.Reg* %34532, i32 0, i32 0
  %RDI.i299 = bitcast %union.anon* %34533 to i64*
  %34534 = load i32, i32* %EAX.i298
  %34535 = zext i32 %34534 to i64
  %34536 = load i64, i64* %PC.i297
  %34537 = add i64 %34536, 3
  store i64 %34537, i64* %PC.i297
  %34538 = shl i64 %34535, 32
  %34539 = ashr exact i64 %34538, 32
  store i64 %34539, i64* %RDI.i299, align 8
  store %struct.Memory* %loadMem_4ac188, %struct.Memory** %MEMORY
  %loadMem_4ac18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %34540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34541 = getelementptr inbounds %struct.GPR, %struct.GPR* %34540, i32 0, i32 33
  %34542 = getelementptr inbounds %struct.Reg, %struct.Reg* %34541, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %34542 to i64*
  %34543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34544 = getelementptr inbounds %struct.GPR, %struct.GPR* %34543, i32 0, i32 11
  %34545 = getelementptr inbounds %struct.Reg, %struct.Reg* %34544, i32 0, i32 0
  %RDI.i296 = bitcast %union.anon* %34545 to i64*
  %34546 = load i64, i64* %RDI.i296
  %34547 = load i64, i64* %PC.i295
  %34548 = add i64 %34547, 4
  store i64 %34548, i64* %PC.i295
  %34549 = shl i64 %34546, 4
  %34550 = icmp slt i64 %34549, 0
  %34551 = shl i64 %34549, 1
  store i64 %34551, i64* %RDI.i296, align 8
  %34552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %34553 = zext i1 %34550 to i8
  store i8 %34553, i8* %34552, align 1
  %34554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %34555 = trunc i64 %34551 to i32
  %34556 = and i32 %34555, 254
  %34557 = call i32 @llvm.ctpop.i32(i32 %34556)
  %34558 = trunc i32 %34557 to i8
  %34559 = and i8 %34558, 1
  %34560 = xor i8 %34559, 1
  store i8 %34560, i8* %34554, align 1
  %34561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34561, align 1
  %34562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %34563 = icmp eq i64 %34551, 0
  %34564 = zext i1 %34563 to i8
  store i8 %34564, i8* %34562, align 1
  %34565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34566 = lshr i64 %34551, 63
  %34567 = trunc i64 %34566 to i8
  store i8 %34567, i8* %34565, align 1
  %34568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34568, align 1
  store %struct.Memory* %loadMem_4ac18b, %struct.Memory** %MEMORY
  %loadMem_4ac18f = load %struct.Memory*, %struct.Memory** %MEMORY
  %34569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34570 = getelementptr inbounds %struct.GPR, %struct.GPR* %34569, i32 0, i32 33
  %34571 = getelementptr inbounds %struct.Reg, %struct.Reg* %34570, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %34571 to i64*
  %34572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34573 = getelementptr inbounds %struct.GPR, %struct.GPR* %34572, i32 0, i32 9
  %34574 = getelementptr inbounds %struct.Reg, %struct.Reg* %34573, i32 0, i32 0
  %RSI.i293 = bitcast %union.anon* %34574 to i64*
  %34575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34576 = getelementptr inbounds %struct.GPR, %struct.GPR* %34575, i32 0, i32 11
  %34577 = getelementptr inbounds %struct.Reg, %struct.Reg* %34576, i32 0, i32 0
  %RDI.i294 = bitcast %union.anon* %34577 to i64*
  %34578 = load i64, i64* %RSI.i293
  %34579 = load i64, i64* %RDI.i294
  %34580 = load i64, i64* %PC.i292
  %34581 = add i64 %34580, 3
  store i64 %34581, i64* %PC.i292
  %34582 = add i64 %34579, %34578
  store i64 %34582, i64* %RSI.i293, align 8
  %34583 = icmp ult i64 %34582, %34578
  %34584 = icmp ult i64 %34582, %34579
  %34585 = or i1 %34583, %34584
  %34586 = zext i1 %34585 to i8
  %34587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34586, i8* %34587, align 1
  %34588 = trunc i64 %34582 to i32
  %34589 = and i32 %34588, 255
  %34590 = call i32 @llvm.ctpop.i32(i32 %34589)
  %34591 = trunc i32 %34590 to i8
  %34592 = and i8 %34591, 1
  %34593 = xor i8 %34592, 1
  %34594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34593, i8* %34594, align 1
  %34595 = xor i64 %34579, %34578
  %34596 = xor i64 %34595, %34582
  %34597 = lshr i64 %34596, 4
  %34598 = trunc i64 %34597 to i8
  %34599 = and i8 %34598, 1
  %34600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34599, i8* %34600, align 1
  %34601 = icmp eq i64 %34582, 0
  %34602 = zext i1 %34601 to i8
  %34603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34602, i8* %34603, align 1
  %34604 = lshr i64 %34582, 63
  %34605 = trunc i64 %34604 to i8
  %34606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34605, i8* %34606, align 1
  %34607 = lshr i64 %34578, 63
  %34608 = lshr i64 %34579, 63
  %34609 = xor i64 %34604, %34607
  %34610 = xor i64 %34604, %34608
  %34611 = add i64 %34609, %34610
  %34612 = icmp eq i64 %34611, 2
  %34613 = zext i1 %34612 to i8
  %34614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34613, i8* %34614, align 1
  store %struct.Memory* %loadMem_4ac18f, %struct.Memory** %MEMORY
  %loadMem_4ac192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34616 = getelementptr inbounds %struct.GPR, %struct.GPR* %34615, i32 0, i32 33
  %34617 = getelementptr inbounds %struct.Reg, %struct.Reg* %34616, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %34617 to i64*
  %34618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34619 = getelementptr inbounds %struct.GPR, %struct.GPR* %34618, i32 0, i32 1
  %34620 = getelementptr inbounds %struct.Reg, %struct.Reg* %34619, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %34620 to i64*
  %34621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34622 = getelementptr inbounds %struct.GPR, %struct.GPR* %34621, i32 0, i32 15
  %34623 = getelementptr inbounds %struct.Reg, %struct.Reg* %34622, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %34623 to i64*
  %34624 = load i64, i64* %RBP.i291
  %34625 = sub i64 %34624, 28
  %34626 = load i64, i64* %PC.i289
  %34627 = add i64 %34626, 3
  store i64 %34627, i64* %PC.i289
  %34628 = inttoptr i64 %34625 to i32*
  %34629 = load i32, i32* %34628
  %34630 = zext i32 %34629 to i64
  store i64 %34630, i64* %RAX.i290, align 8
  store %struct.Memory* %loadMem_4ac192, %struct.Memory** %MEMORY
  %loadMem_4ac195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34632 = getelementptr inbounds %struct.GPR, %struct.GPR* %34631, i32 0, i32 33
  %34633 = getelementptr inbounds %struct.Reg, %struct.Reg* %34632, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %34633 to i64*
  %34634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34635 = getelementptr inbounds %struct.GPR, %struct.GPR* %34634, i32 0, i32 1
  %34636 = getelementptr inbounds %struct.Reg, %struct.Reg* %34635, i32 0, i32 0
  %RAX.i287 = bitcast %union.anon* %34636 to i64*
  %34637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34638 = getelementptr inbounds %struct.GPR, %struct.GPR* %34637, i32 0, i32 15
  %34639 = getelementptr inbounds %struct.Reg, %struct.Reg* %34638, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %34639 to i64*
  %34640 = load i64, i64* %RAX.i287
  %34641 = load i64, i64* %RBP.i288
  %34642 = sub i64 %34641, 88
  %34643 = load i64, i64* %PC.i286
  %34644 = add i64 %34643, 3
  store i64 %34644, i64* %PC.i286
  %34645 = trunc i64 %34640 to i32
  %34646 = inttoptr i64 %34642 to i32*
  %34647 = load i32, i32* %34646
  %34648 = add i32 %34647, %34645
  %34649 = zext i32 %34648 to i64
  store i64 %34649, i64* %RAX.i287, align 8
  %34650 = icmp ult i32 %34648, %34645
  %34651 = icmp ult i32 %34648, %34647
  %34652 = or i1 %34650, %34651
  %34653 = zext i1 %34652 to i8
  %34654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34653, i8* %34654, align 1
  %34655 = and i32 %34648, 255
  %34656 = call i32 @llvm.ctpop.i32(i32 %34655)
  %34657 = trunc i32 %34656 to i8
  %34658 = and i8 %34657, 1
  %34659 = xor i8 %34658, 1
  %34660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34659, i8* %34660, align 1
  %34661 = xor i32 %34647, %34645
  %34662 = xor i32 %34661, %34648
  %34663 = lshr i32 %34662, 4
  %34664 = trunc i32 %34663 to i8
  %34665 = and i8 %34664, 1
  %34666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34665, i8* %34666, align 1
  %34667 = icmp eq i32 %34648, 0
  %34668 = zext i1 %34667 to i8
  %34669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34668, i8* %34669, align 1
  %34670 = lshr i32 %34648, 31
  %34671 = trunc i32 %34670 to i8
  %34672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34671, i8* %34672, align 1
  %34673 = lshr i32 %34645, 31
  %34674 = lshr i32 %34647, 31
  %34675 = xor i32 %34670, %34673
  %34676 = xor i32 %34670, %34674
  %34677 = add i32 %34675, %34676
  %34678 = icmp eq i32 %34677, 2
  %34679 = zext i1 %34678 to i8
  %34680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34679, i8* %34680, align 1
  store %struct.Memory* %loadMem_4ac195, %struct.Memory** %MEMORY
  %loadMem_4ac198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34682 = getelementptr inbounds %struct.GPR, %struct.GPR* %34681, i32 0, i32 33
  %34683 = getelementptr inbounds %struct.Reg, %struct.Reg* %34682, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %34683 to i64*
  %34684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34685 = getelementptr inbounds %struct.GPR, %struct.GPR* %34684, i32 0, i32 1
  %34686 = getelementptr inbounds %struct.Reg, %struct.Reg* %34685, i32 0, i32 0
  %EAX.i284 = bitcast %union.anon* %34686 to i32*
  %34687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34688 = getelementptr inbounds %struct.GPR, %struct.GPR* %34687, i32 0, i32 11
  %34689 = getelementptr inbounds %struct.Reg, %struct.Reg* %34688, i32 0, i32 0
  %RDI.i285 = bitcast %union.anon* %34689 to i64*
  %34690 = load i32, i32* %EAX.i284
  %34691 = zext i32 %34690 to i64
  %34692 = load i64, i64* %PC.i283
  %34693 = add i64 %34692, 3
  store i64 %34693, i64* %PC.i283
  %34694 = shl i64 %34691, 32
  %34695 = ashr exact i64 %34694, 32
  store i64 %34695, i64* %RDI.i285, align 8
  store %struct.Memory* %loadMem_4ac198, %struct.Memory** %MEMORY
  %loadMem_4ac19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %34696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34697 = getelementptr inbounds %struct.GPR, %struct.GPR* %34696, i32 0, i32 33
  %34698 = getelementptr inbounds %struct.Reg, %struct.Reg* %34697, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %34698 to i64*
  %34699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34700 = getelementptr inbounds %struct.GPR, %struct.GPR* %34699, i32 0, i32 1
  %34701 = getelementptr inbounds %struct.Reg, %struct.Reg* %34700, i32 0, i32 0
  %RAX.i281 = bitcast %union.anon* %34701 to i64*
  %34702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34703 = getelementptr inbounds %struct.GPR, %struct.GPR* %34702, i32 0, i32 9
  %34704 = getelementptr inbounds %struct.Reg, %struct.Reg* %34703, i32 0, i32 0
  %RSI.i282 = bitcast %union.anon* %34704 to i64*
  %34705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34706 = getelementptr inbounds %struct.GPR, %struct.GPR* %34705, i32 0, i32 11
  %34707 = getelementptr inbounds %struct.Reg, %struct.Reg* %34706, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %34707 to i64*
  %34708 = load i64, i64* %RSI.i282
  %34709 = load i64, i64* %RDI.i
  %34710 = mul i64 %34709, 2
  %34711 = add i64 %34710, %34708
  %34712 = load i64, i64* %PC.i280
  %34713 = add i64 %34712, 4
  store i64 %34713, i64* %PC.i280
  %34714 = inttoptr i64 %34711 to i16*
  %34715 = load i16, i16* %34714
  %34716 = zext i16 %34715 to i64
  store i64 %34716, i64* %RAX.i281, align 8
  store %struct.Memory* %loadMem_4ac19b, %struct.Memory** %MEMORY
  %loadMem_4ac19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %34717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34718 = getelementptr inbounds %struct.GPR, %struct.GPR* %34717, i32 0, i32 33
  %34719 = getelementptr inbounds %struct.Reg, %struct.Reg* %34718, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %34719 to i64*
  %34720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34721 = getelementptr inbounds %struct.GPR, %struct.GPR* %34720, i32 0, i32 1
  %34722 = getelementptr inbounds %struct.Reg, %struct.Reg* %34721, i32 0, i32 0
  %EAX.i278 = bitcast %union.anon* %34722 to i32*
  %34723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34724 = getelementptr inbounds %struct.GPR, %struct.GPR* %34723, i32 0, i32 9
  %34725 = getelementptr inbounds %struct.Reg, %struct.Reg* %34724, i32 0, i32 0
  %RSI.i279 = bitcast %union.anon* %34725 to i64*
  %34726 = load i32, i32* %EAX.i278
  %34727 = zext i32 %34726 to i64
  %34728 = load i64, i64* %PC.i277
  %34729 = add i64 %34728, 2
  store i64 %34729, i64* %PC.i277
  %34730 = and i64 %34727, 4294967295
  store i64 %34730, i64* %RSI.i279, align 8
  store %struct.Memory* %loadMem_4ac19f, %struct.Memory** %MEMORY
  %loadMem_4ac1a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34732 = getelementptr inbounds %struct.GPR, %struct.GPR* %34731, i32 0, i32 33
  %34733 = getelementptr inbounds %struct.Reg, %struct.Reg* %34732, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %34733 to i64*
  %34734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34735 = getelementptr inbounds %struct.GPR, %struct.GPR* %34734, i32 0, i32 9
  %34736 = getelementptr inbounds %struct.Reg, %struct.Reg* %34735, i32 0, i32 0
  %RSI.i276 = bitcast %union.anon* %34736 to i64*
  %34737 = load i64, i64* %RSI.i276
  %34738 = load i64, i64* %PC.i275
  %34739 = add i64 %34738, 4
  store i64 %34739, i64* %PC.i275
  %34740 = shl i64 %34737, 5
  %34741 = icmp slt i64 %34740, 0
  %34742 = shl i64 %34740, 1
  store i64 %34742, i64* %RSI.i276, align 8
  %34743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %34744 = zext i1 %34741 to i8
  store i8 %34744, i8* %34743, align 1
  %34745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %34746 = trunc i64 %34742 to i32
  %34747 = and i32 %34746, 254
  %34748 = call i32 @llvm.ctpop.i32(i32 %34747)
  %34749 = trunc i32 %34748 to i8
  %34750 = and i8 %34749, 1
  %34751 = xor i8 %34750, 1
  store i8 %34751, i8* %34745, align 1
  %34752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34752, align 1
  %34753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %34754 = icmp eq i64 %34742, 0
  %34755 = zext i1 %34754 to i8
  store i8 %34755, i8* %34753, align 1
  %34756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34757 = lshr i64 %34742, 63
  %34758 = trunc i64 %34757 to i8
  store i8 %34758, i8* %34756, align 1
  %34759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34759, align 1
  store %struct.Memory* %loadMem_4ac1a1, %struct.Memory** %MEMORY
  %loadMem_4ac1a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34761 = getelementptr inbounds %struct.GPR, %struct.GPR* %34760, i32 0, i32 33
  %34762 = getelementptr inbounds %struct.Reg, %struct.Reg* %34761, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %34762 to i64*
  %34763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34764 = getelementptr inbounds %struct.GPR, %struct.GPR* %34763, i32 0, i32 7
  %34765 = getelementptr inbounds %struct.Reg, %struct.Reg* %34764, i32 0, i32 0
  %RDX.i273 = bitcast %union.anon* %34765 to i64*
  %34766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34767 = getelementptr inbounds %struct.GPR, %struct.GPR* %34766, i32 0, i32 9
  %34768 = getelementptr inbounds %struct.Reg, %struct.Reg* %34767, i32 0, i32 0
  %RSI.i274 = bitcast %union.anon* %34768 to i64*
  %34769 = load i64, i64* %RDX.i273
  %34770 = load i64, i64* %RSI.i274
  %34771 = load i64, i64* %PC.i272
  %34772 = add i64 %34771, 3
  store i64 %34772, i64* %PC.i272
  %34773 = add i64 %34770, %34769
  store i64 %34773, i64* %RDX.i273, align 8
  %34774 = icmp ult i64 %34773, %34769
  %34775 = icmp ult i64 %34773, %34770
  %34776 = or i1 %34774, %34775
  %34777 = zext i1 %34776 to i8
  %34778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34777, i8* %34778, align 1
  %34779 = trunc i64 %34773 to i32
  %34780 = and i32 %34779, 255
  %34781 = call i32 @llvm.ctpop.i32(i32 %34780)
  %34782 = trunc i32 %34781 to i8
  %34783 = and i8 %34782, 1
  %34784 = xor i8 %34783, 1
  %34785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34784, i8* %34785, align 1
  %34786 = xor i64 %34770, %34769
  %34787 = xor i64 %34786, %34773
  %34788 = lshr i64 %34787, 4
  %34789 = trunc i64 %34788 to i8
  %34790 = and i8 %34789, 1
  %34791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34790, i8* %34791, align 1
  %34792 = icmp eq i64 %34773, 0
  %34793 = zext i1 %34792 to i8
  %34794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34793, i8* %34794, align 1
  %34795 = lshr i64 %34773, 63
  %34796 = trunc i64 %34795 to i8
  %34797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34796, i8* %34797, align 1
  %34798 = lshr i64 %34769, 63
  %34799 = lshr i64 %34770, 63
  %34800 = xor i64 %34795, %34798
  %34801 = xor i64 %34795, %34799
  %34802 = add i64 %34800, %34801
  %34803 = icmp eq i64 %34802, 2
  %34804 = zext i1 %34803 to i8
  %34805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34804, i8* %34805, align 1
  store %struct.Memory* %loadMem_4ac1a5, %struct.Memory** %MEMORY
  %loadMem_4ac1a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34807 = getelementptr inbounds %struct.GPR, %struct.GPR* %34806, i32 0, i32 33
  %34808 = getelementptr inbounds %struct.Reg, %struct.Reg* %34807, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %34808 to i64*
  %34809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34810 = getelementptr inbounds %struct.GPR, %struct.GPR* %34809, i32 0, i32 7
  %34811 = getelementptr inbounds %struct.Reg, %struct.Reg* %34810, i32 0, i32 0
  %RDX.i271 = bitcast %union.anon* %34811 to i64*
  %34812 = load i64, i64* %RDX.i271
  %34813 = load i64, i64* %PC.i270
  %34814 = add i64 %34813, 4
  store i64 %34814, i64* %PC.i270
  %34815 = add i64 32, %34812
  store i64 %34815, i64* %RDX.i271, align 8
  %34816 = icmp ult i64 %34815, %34812
  %34817 = icmp ult i64 %34815, 32
  %34818 = or i1 %34816, %34817
  %34819 = zext i1 %34818 to i8
  %34820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34819, i8* %34820, align 1
  %34821 = trunc i64 %34815 to i32
  %34822 = and i32 %34821, 255
  %34823 = call i32 @llvm.ctpop.i32(i32 %34822)
  %34824 = trunc i32 %34823 to i8
  %34825 = and i8 %34824, 1
  %34826 = xor i8 %34825, 1
  %34827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34826, i8* %34827, align 1
  %34828 = xor i64 32, %34812
  %34829 = xor i64 %34828, %34815
  %34830 = lshr i64 %34829, 4
  %34831 = trunc i64 %34830 to i8
  %34832 = and i8 %34831, 1
  %34833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34832, i8* %34833, align 1
  %34834 = icmp eq i64 %34815, 0
  %34835 = zext i1 %34834 to i8
  %34836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34835, i8* %34836, align 1
  %34837 = lshr i64 %34815, 63
  %34838 = trunc i64 %34837 to i8
  %34839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34838, i8* %34839, align 1
  %34840 = lshr i64 %34812, 63
  %34841 = xor i64 %34837, %34840
  %34842 = add i64 %34841, %34837
  %34843 = icmp eq i64 %34842, 2
  %34844 = zext i1 %34843 to i8
  %34845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34844, i8* %34845, align 1
  store %struct.Memory* %loadMem_4ac1a8, %struct.Memory** %MEMORY
  %loadMem_4ac1ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %34846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34847 = getelementptr inbounds %struct.GPR, %struct.GPR* %34846, i32 0, i32 33
  %34848 = getelementptr inbounds %struct.Reg, %struct.Reg* %34847, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %34848 to i64*
  %34849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34850 = getelementptr inbounds %struct.GPR, %struct.GPR* %34849, i32 0, i32 7
  %34851 = getelementptr inbounds %struct.Reg, %struct.Reg* %34850, i32 0, i32 0
  %RDX.i269 = bitcast %union.anon* %34851 to i64*
  %34852 = load i64, i64* %RDX.i269
  %34853 = load i64, i64* %PC.i268
  %34854 = add i64 %34853, 4
  store i64 %34854, i64* %PC.i268
  %34855 = ashr i64 %34852, 5
  %34856 = trunc i64 %34855 to i8
  %34857 = and i8 %34856, 1
  %34858 = ashr i64 %34855, 1
  store i64 %34858, i64* %RDX.i269, align 8
  %34859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34857, i8* %34859, align 1
  %34860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %34861 = trunc i64 %34858 to i32
  %34862 = and i32 %34861, 255
  %34863 = call i32 @llvm.ctpop.i32(i32 %34862)
  %34864 = trunc i32 %34863 to i8
  %34865 = and i8 %34864, 1
  %34866 = xor i8 %34865, 1
  store i8 %34866, i8* %34860, align 1
  %34867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34867, align 1
  %34868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %34869 = icmp eq i64 %34858, 0
  %34870 = zext i1 %34869 to i8
  store i8 %34870, i8* %34868, align 1
  %34871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34872 = lshr i64 %34858, 63
  %34873 = trunc i64 %34872 to i8
  store i8 %34873, i8* %34871, align 1
  %34874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34874, align 1
  store %struct.Memory* %loadMem_4ac1ac, %struct.Memory** %MEMORY
  %loadMem_4ac1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34876 = getelementptr inbounds %struct.GPR, %struct.GPR* %34875, i32 0, i32 33
  %34877 = getelementptr inbounds %struct.Reg, %struct.Reg* %34876, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %34877 to i64*
  %34878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34879 = getelementptr inbounds %struct.GPR, %struct.GPR* %34878, i32 0, i32 5
  %34880 = getelementptr inbounds %struct.Reg, %struct.Reg* %34879, i32 0, i32 0
  %RCX.i266 = bitcast %union.anon* %34880 to i64*
  %34881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34882 = getelementptr inbounds %struct.GPR, %struct.GPR* %34881, i32 0, i32 7
  %34883 = getelementptr inbounds %struct.Reg, %struct.Reg* %34882, i32 0, i32 0
  %RDX.i267 = bitcast %union.anon* %34883 to i64*
  %34884 = load i64, i64* %RCX.i266
  %34885 = load i64, i64* %RDX.i267
  %34886 = load i64, i64* %PC.i265
  %34887 = add i64 %34886, 3
  store i64 %34887, i64* %PC.i265
  %34888 = sub i64 %34884, %34885
  %34889 = icmp ult i64 %34884, %34885
  %34890 = zext i1 %34889 to i8
  %34891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %34890, i8* %34891, align 1
  %34892 = trunc i64 %34888 to i32
  %34893 = and i32 %34892, 255
  %34894 = call i32 @llvm.ctpop.i32(i32 %34893)
  %34895 = trunc i32 %34894 to i8
  %34896 = and i8 %34895, 1
  %34897 = xor i8 %34896, 1
  %34898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34897, i8* %34898, align 1
  %34899 = xor i64 %34885, %34884
  %34900 = xor i64 %34899, %34888
  %34901 = lshr i64 %34900, 4
  %34902 = trunc i64 %34901 to i8
  %34903 = and i8 %34902, 1
  %34904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34903, i8* %34904, align 1
  %34905 = icmp eq i64 %34888, 0
  %34906 = zext i1 %34905 to i8
  %34907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34906, i8* %34907, align 1
  %34908 = lshr i64 %34888, 63
  %34909 = trunc i64 %34908 to i8
  %34910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34909, i8* %34910, align 1
  %34911 = lshr i64 %34884, 63
  %34912 = lshr i64 %34885, 63
  %34913 = xor i64 %34912, %34911
  %34914 = xor i64 %34908, %34911
  %34915 = add i64 %34914, %34913
  %34916 = icmp eq i64 %34915, 2
  %34917 = zext i1 %34916 to i8
  %34918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34917, i8* %34918, align 1
  store %struct.Memory* %loadMem_4ac1b0, %struct.Memory** %MEMORY
  %loadMem_4ac1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34920 = getelementptr inbounds %struct.GPR, %struct.GPR* %34919, i32 0, i32 33
  %34921 = getelementptr inbounds %struct.Reg, %struct.Reg* %34920, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %34921 to i64*
  %34922 = load i64, i64* %PC.i264
  %34923 = add i64 %34922, 22
  %34924 = load i64, i64* %PC.i264
  %34925 = add i64 %34924, 6
  %34926 = load i64, i64* %PC.i264
  %34927 = add i64 %34926, 6
  store i64 %34927, i64* %PC.i264
  %34928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %34929 = load i8, i8* %34928, align 1
  %34930 = icmp ne i8 %34929, 0
  %34931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34932 = load i8, i8* %34931, align 1
  %34933 = icmp ne i8 %34932, 0
  %34934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34935 = load i8, i8* %34934, align 1
  %34936 = icmp ne i8 %34935, 0
  %34937 = xor i1 %34933, %34936
  %34938 = or i1 %34930, %34937
  %34939 = zext i1 %34938 to i8
  store i8 %34939, i8* %BRANCH_TAKEN, align 1
  %34940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %34941 = select i1 %34938, i64 %34923, i64 %34925
  store i64 %34941, i64* %34940, align 8
  store %struct.Memory* %loadMem_4ac1b3, %struct.Memory** %MEMORY
  %loadBr_4ac1b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ac1b3 = icmp eq i8 %loadBr_4ac1b3, 1
  br i1 %cmpBr_4ac1b3, label %block_.L_4ac1c9, label %block_4ac1b9

block_4ac1b9:                                     ; preds = %block_.L_4ac14d
  %loadMem_4ac1b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %34942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34943 = getelementptr inbounds %struct.GPR, %struct.GPR* %34942, i32 0, i32 33
  %34944 = getelementptr inbounds %struct.Reg, %struct.Reg* %34943, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %34944 to i64*
  %34945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34946 = getelementptr inbounds %struct.GPR, %struct.GPR* %34945, i32 0, i32 1
  %34947 = getelementptr inbounds %struct.Reg, %struct.Reg* %34946, i32 0, i32 0
  %EAX.i262 = bitcast %union.anon* %34947 to i32*
  %34948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34949 = getelementptr inbounds %struct.GPR, %struct.GPR* %34948, i32 0, i32 1
  %34950 = getelementptr inbounds %struct.Reg, %struct.Reg* %34949, i32 0, i32 0
  %RAX.i263 = bitcast %union.anon* %34950 to i64*
  %34951 = load i64, i64* %RAX.i263
  %34952 = load i32, i32* %EAX.i262
  %34953 = zext i32 %34952 to i64
  %34954 = load i64, i64* %PC.i261
  %34955 = add i64 %34954, 2
  store i64 %34955, i64* %PC.i261
  %34956 = xor i64 %34953, %34951
  %34957 = trunc i64 %34956 to i32
  %34958 = and i64 %34956, 4294967295
  store i64 %34958, i64* %RAX.i263, align 8
  %34959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %34959, align 1
  %34960 = and i32 %34957, 255
  %34961 = call i32 @llvm.ctpop.i32(i32 %34960)
  %34962 = trunc i32 %34961 to i8
  %34963 = and i8 %34962, 1
  %34964 = xor i8 %34963, 1
  %34965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34964, i8* %34965, align 1
  %34966 = icmp eq i32 %34957, 0
  %34967 = zext i1 %34966 to i8
  %34968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34967, i8* %34968, align 1
  %34969 = lshr i32 %34957, 31
  %34970 = trunc i32 %34969 to i8
  %34971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34970, i8* %34971, align 1
  %34972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34972, align 1
  %34973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34973, align 1
  store %struct.Memory* %loadMem_4ac1b9, %struct.Memory** %MEMORY
  %loadMem_4ac1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %34974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34975 = getelementptr inbounds %struct.GPR, %struct.GPR* %34974, i32 0, i32 33
  %34976 = getelementptr inbounds %struct.Reg, %struct.Reg* %34975, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %34976 to i64*
  %34977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34978 = getelementptr inbounds %struct.GPR, %struct.GPR* %34977, i32 0, i32 1
  %34979 = getelementptr inbounds %struct.Reg, %struct.Reg* %34978, i32 0, i32 0
  %EAX.i259 = bitcast %union.anon* %34979 to i32*
  %34980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34981 = getelementptr inbounds %struct.GPR, %struct.GPR* %34980, i32 0, i32 5
  %34982 = getelementptr inbounds %struct.Reg, %struct.Reg* %34981, i32 0, i32 0
  %RCX.i260 = bitcast %union.anon* %34982 to i64*
  %34983 = load i32, i32* %EAX.i259
  %34984 = zext i32 %34983 to i64
  %34985 = load i64, i64* %PC.i258
  %34986 = add i64 %34985, 2
  store i64 %34986, i64* %PC.i258
  %34987 = and i64 %34984, 4294967295
  store i64 %34987, i64* %RCX.i260, align 8
  store %struct.Memory* %loadMem_4ac1bb, %struct.Memory** %MEMORY
  %loadMem_4ac1bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %34988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34989 = getelementptr inbounds %struct.GPR, %struct.GPR* %34988, i32 0, i32 33
  %34990 = getelementptr inbounds %struct.Reg, %struct.Reg* %34989, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %34990 to i64*
  %34991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34992 = getelementptr inbounds %struct.GPR, %struct.GPR* %34991, i32 0, i32 5
  %34993 = getelementptr inbounds %struct.Reg, %struct.Reg* %34992, i32 0, i32 0
  %RCX.i256 = bitcast %union.anon* %34993 to i64*
  %34994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34995 = getelementptr inbounds %struct.GPR, %struct.GPR* %34994, i32 0, i32 15
  %34996 = getelementptr inbounds %struct.Reg, %struct.Reg* %34995, i32 0, i32 0
  %RBP.i257 = bitcast %union.anon* %34996 to i64*
  %34997 = load i64, i64* %RBP.i257
  %34998 = sub i64 %34997, 752
  %34999 = load i64, i64* %RCX.i256
  %35000 = load i64, i64* %PC.i255
  %35001 = add i64 %35000, 7
  store i64 %35001, i64* %PC.i255
  %35002 = inttoptr i64 %34998 to i64*
  store i64 %34999, i64* %35002
  store %struct.Memory* %loadMem_4ac1bd, %struct.Memory** %MEMORY
  %loadMem_4ac1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35004 = getelementptr inbounds %struct.GPR, %struct.GPR* %35003, i32 0, i32 33
  %35005 = getelementptr inbounds %struct.Reg, %struct.Reg* %35004, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %35005 to i64*
  %35006 = load i64, i64* %PC.i254
  %35007 = add i64 %35006, 106
  %35008 = load i64, i64* %PC.i254
  %35009 = add i64 %35008, 5
  store i64 %35009, i64* %PC.i254
  %35010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %35007, i64* %35010, align 8
  store %struct.Memory* %loadMem_4ac1c4, %struct.Memory** %MEMORY
  br label %block_.L_4ac22e

block_.L_4ac1c9:                                  ; preds = %block_.L_4ac14d
  %loadMem_4ac1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35012 = getelementptr inbounds %struct.GPR, %struct.GPR* %35011, i32 0, i32 33
  %35013 = getelementptr inbounds %struct.Reg, %struct.Reg* %35012, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %35013 to i64*
  %35014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35015 = getelementptr inbounds %struct.GPR, %struct.GPR* %35014, i32 0, i32 1
  %35016 = getelementptr inbounds %struct.Reg, %struct.Reg* %35015, i32 0, i32 0
  %RAX.i253 = bitcast %union.anon* %35016 to i64*
  %35017 = load i64, i64* %PC.i252
  %35018 = add i64 %35017, 8
  store i64 %35018, i64* %PC.i252
  %35019 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %35019, i64* %RAX.i253, align 8
  store %struct.Memory* %loadMem_4ac1c9, %struct.Memory** %MEMORY
  %loadMem_4ac1d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35021 = getelementptr inbounds %struct.GPR, %struct.GPR* %35020, i32 0, i32 33
  %35022 = getelementptr inbounds %struct.Reg, %struct.Reg* %35021, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %35022 to i64*
  %35023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35024 = getelementptr inbounds %struct.GPR, %struct.GPR* %35023, i32 0, i32 1
  %35025 = getelementptr inbounds %struct.Reg, %struct.Reg* %35024, i32 0, i32 0
  %RAX.i251 = bitcast %union.anon* %35025 to i64*
  %35026 = load i64, i64* %RAX.i251
  %35027 = load i64, i64* %PC.i250
  %35028 = add i64 %35027, 6
  store i64 %35028, i64* %PC.i250
  %35029 = add i64 13112, %35026
  store i64 %35029, i64* %RAX.i251, align 8
  %35030 = icmp ult i64 %35029, %35026
  %35031 = icmp ult i64 %35029, 13112
  %35032 = or i1 %35030, %35031
  %35033 = zext i1 %35032 to i8
  %35034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35033, i8* %35034, align 1
  %35035 = trunc i64 %35029 to i32
  %35036 = and i32 %35035, 255
  %35037 = call i32 @llvm.ctpop.i32(i32 %35036)
  %35038 = trunc i32 %35037 to i8
  %35039 = and i8 %35038, 1
  %35040 = xor i8 %35039, 1
  %35041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35040, i8* %35041, align 1
  %35042 = xor i64 13112, %35026
  %35043 = xor i64 %35042, %35029
  %35044 = lshr i64 %35043, 4
  %35045 = trunc i64 %35044 to i8
  %35046 = and i8 %35045, 1
  %35047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35046, i8* %35047, align 1
  %35048 = icmp eq i64 %35029, 0
  %35049 = zext i1 %35048 to i8
  %35050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35049, i8* %35050, align 1
  %35051 = lshr i64 %35029, 63
  %35052 = trunc i64 %35051 to i8
  %35053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35052, i8* %35053, align 1
  %35054 = lshr i64 %35026, 63
  %35055 = xor i64 %35051, %35054
  %35056 = add i64 %35055, %35051
  %35057 = icmp eq i64 %35056, 2
  %35058 = zext i1 %35057 to i8
  %35059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35058, i8* %35059, align 1
  store %struct.Memory* %loadMem_4ac1d1, %struct.Memory** %MEMORY
  %loadMem_4ac1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35061 = getelementptr inbounds %struct.GPR, %struct.GPR* %35060, i32 0, i32 33
  %35062 = getelementptr inbounds %struct.Reg, %struct.Reg* %35061, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %35062 to i64*
  %35063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35064 = getelementptr inbounds %struct.GPR, %struct.GPR* %35063, i32 0, i32 5
  %35065 = getelementptr inbounds %struct.Reg, %struct.Reg* %35064, i32 0, i32 0
  %RCX.i248 = bitcast %union.anon* %35065 to i64*
  %35066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35067 = getelementptr inbounds %struct.GPR, %struct.GPR* %35066, i32 0, i32 15
  %35068 = getelementptr inbounds %struct.Reg, %struct.Reg* %35067, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %35068 to i64*
  %35069 = load i64, i64* %RBP.i249
  %35070 = sub i64 %35069, 24
  %35071 = load i64, i64* %PC.i247
  %35072 = add i64 %35071, 4
  store i64 %35072, i64* %PC.i247
  %35073 = inttoptr i64 %35070 to i32*
  %35074 = load i32, i32* %35073
  %35075 = sext i32 %35074 to i64
  store i64 %35075, i64* %RCX.i248, align 8
  store %struct.Memory* %loadMem_4ac1d7, %struct.Memory** %MEMORY
  %loadMem_4ac1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %35076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35077 = getelementptr inbounds %struct.GPR, %struct.GPR* %35076, i32 0, i32 33
  %35078 = getelementptr inbounds %struct.Reg, %struct.Reg* %35077, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %35078 to i64*
  %35079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35080 = getelementptr inbounds %struct.GPR, %struct.GPR* %35079, i32 0, i32 5
  %35081 = getelementptr inbounds %struct.Reg, %struct.Reg* %35080, i32 0, i32 0
  %RCX.i246 = bitcast %union.anon* %35081 to i64*
  %35082 = load i64, i64* %RCX.i246
  %35083 = load i64, i64* %PC.i245
  %35084 = add i64 %35083, 4
  store i64 %35084, i64* %PC.i245
  %35085 = shl i64 %35082, 5
  %35086 = icmp slt i64 %35085, 0
  %35087 = shl i64 %35085, 1
  store i64 %35087, i64* %RCX.i246, align 8
  %35088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %35089 = zext i1 %35086 to i8
  store i8 %35089, i8* %35088, align 1
  %35090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %35091 = trunc i64 %35087 to i32
  %35092 = and i32 %35091, 254
  %35093 = call i32 @llvm.ctpop.i32(i32 %35092)
  %35094 = trunc i32 %35093 to i8
  %35095 = and i8 %35094, 1
  %35096 = xor i8 %35095, 1
  store i8 %35096, i8* %35090, align 1
  %35097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35097, align 1
  %35098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %35099 = icmp eq i64 %35087, 0
  %35100 = zext i1 %35099 to i8
  store i8 %35100, i8* %35098, align 1
  %35101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %35102 = lshr i64 %35087, 63
  %35103 = trunc i64 %35102 to i8
  store i8 %35103, i8* %35101, align 1
  %35104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35104, align 1
  store %struct.Memory* %loadMem_4ac1db, %struct.Memory** %MEMORY
  %loadMem_4ac1df = load %struct.Memory*, %struct.Memory** %MEMORY
  %35105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35106 = getelementptr inbounds %struct.GPR, %struct.GPR* %35105, i32 0, i32 33
  %35107 = getelementptr inbounds %struct.Reg, %struct.Reg* %35106, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %35107 to i64*
  %35108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35109 = getelementptr inbounds %struct.GPR, %struct.GPR* %35108, i32 0, i32 1
  %35110 = getelementptr inbounds %struct.Reg, %struct.Reg* %35109, i32 0, i32 0
  %RAX.i243 = bitcast %union.anon* %35110 to i64*
  %35111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35112 = getelementptr inbounds %struct.GPR, %struct.GPR* %35111, i32 0, i32 5
  %35113 = getelementptr inbounds %struct.Reg, %struct.Reg* %35112, i32 0, i32 0
  %RCX.i244 = bitcast %union.anon* %35113 to i64*
  %35114 = load i64, i64* %RAX.i243
  %35115 = load i64, i64* %RCX.i244
  %35116 = load i64, i64* %PC.i242
  %35117 = add i64 %35116, 3
  store i64 %35117, i64* %PC.i242
  %35118 = add i64 %35115, %35114
  store i64 %35118, i64* %RAX.i243, align 8
  %35119 = icmp ult i64 %35118, %35114
  %35120 = icmp ult i64 %35118, %35115
  %35121 = or i1 %35119, %35120
  %35122 = zext i1 %35121 to i8
  %35123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35122, i8* %35123, align 1
  %35124 = trunc i64 %35118 to i32
  %35125 = and i32 %35124, 255
  %35126 = call i32 @llvm.ctpop.i32(i32 %35125)
  %35127 = trunc i32 %35126 to i8
  %35128 = and i8 %35127, 1
  %35129 = xor i8 %35128, 1
  %35130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35129, i8* %35130, align 1
  %35131 = xor i64 %35115, %35114
  %35132 = xor i64 %35131, %35118
  %35133 = lshr i64 %35132, 4
  %35134 = trunc i64 %35133 to i8
  %35135 = and i8 %35134, 1
  %35136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35135, i8* %35136, align 1
  %35137 = icmp eq i64 %35118, 0
  %35138 = zext i1 %35137 to i8
  %35139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35138, i8* %35139, align 1
  %35140 = lshr i64 %35118, 63
  %35141 = trunc i64 %35140 to i8
  %35142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35141, i8* %35142, align 1
  %35143 = lshr i64 %35114, 63
  %35144 = lshr i64 %35115, 63
  %35145 = xor i64 %35140, %35143
  %35146 = xor i64 %35140, %35144
  %35147 = add i64 %35145, %35146
  %35148 = icmp eq i64 %35147, 2
  %35149 = zext i1 %35148 to i8
  %35150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35149, i8* %35150, align 1
  store %struct.Memory* %loadMem_4ac1df, %struct.Memory** %MEMORY
  %loadMem_4ac1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35152 = getelementptr inbounds %struct.GPR, %struct.GPR* %35151, i32 0, i32 33
  %35153 = getelementptr inbounds %struct.Reg, %struct.Reg* %35152, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %35153 to i64*
  %35154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35155 = getelementptr inbounds %struct.GPR, %struct.GPR* %35154, i32 0, i32 5
  %35156 = getelementptr inbounds %struct.Reg, %struct.Reg* %35155, i32 0, i32 0
  %RCX.i240 = bitcast %union.anon* %35156 to i64*
  %35157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35158 = getelementptr inbounds %struct.GPR, %struct.GPR* %35157, i32 0, i32 15
  %35159 = getelementptr inbounds %struct.Reg, %struct.Reg* %35158, i32 0, i32 0
  %RBP.i241 = bitcast %union.anon* %35159 to i64*
  %35160 = load i64, i64* %RBP.i241
  %35161 = sub i64 %35160, 28
  %35162 = load i64, i64* %PC.i239
  %35163 = add i64 %35162, 4
  store i64 %35163, i64* %PC.i239
  %35164 = inttoptr i64 %35161 to i32*
  %35165 = load i32, i32* %35164
  %35166 = sext i32 %35165 to i64
  store i64 %35166, i64* %RCX.i240, align 8
  store %struct.Memory* %loadMem_4ac1e2, %struct.Memory** %MEMORY
  %loadMem_4ac1e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35168 = getelementptr inbounds %struct.GPR, %struct.GPR* %35167, i32 0, i32 33
  %35169 = getelementptr inbounds %struct.Reg, %struct.Reg* %35168, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %35169 to i64*
  %35170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35171 = getelementptr inbounds %struct.GPR, %struct.GPR* %35170, i32 0, i32 1
  %35172 = getelementptr inbounds %struct.Reg, %struct.Reg* %35171, i32 0, i32 0
  %RAX.i237 = bitcast %union.anon* %35172 to i64*
  %35173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35174 = getelementptr inbounds %struct.GPR, %struct.GPR* %35173, i32 0, i32 5
  %35175 = getelementptr inbounds %struct.Reg, %struct.Reg* %35174, i32 0, i32 0
  %RCX.i238 = bitcast %union.anon* %35175 to i64*
  %35176 = load i64, i64* %RAX.i237
  %35177 = load i64, i64* %RCX.i238
  %35178 = mul i64 %35177, 4
  %35179 = add i64 %35178, %35176
  %35180 = load i64, i64* %PC.i236
  %35181 = add i64 %35180, 4
  store i64 %35181, i64* %PC.i236
  %35182 = inttoptr i64 %35179 to i32*
  %35183 = load i32, i32* %35182
  %35184 = sext i32 %35183 to i64
  store i64 %35184, i64* %RAX.i237, align 8
  store %struct.Memory* %loadMem_4ac1e6, %struct.Memory** %MEMORY
  %loadMem_4ac1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %35185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35186 = getelementptr inbounds %struct.GPR, %struct.GPR* %35185, i32 0, i32 33
  %35187 = getelementptr inbounds %struct.Reg, %struct.Reg* %35186, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %35187 to i64*
  %35188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35189 = getelementptr inbounds %struct.GPR, %struct.GPR* %35188, i32 0, i32 5
  %35190 = getelementptr inbounds %struct.Reg, %struct.Reg* %35189, i32 0, i32 0
  %RCX.i235 = bitcast %union.anon* %35190 to i64*
  %35191 = load i64, i64* %PC.i234
  %35192 = add i64 %35191, 8
  store i64 %35192, i64* %PC.i234
  %35193 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %35193, i64* %RCX.i235, align 8
  store %struct.Memory* %loadMem_4ac1ea, %struct.Memory** %MEMORY
  %loadMem_4ac1f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35195 = getelementptr inbounds %struct.GPR, %struct.GPR* %35194, i32 0, i32 33
  %35196 = getelementptr inbounds %struct.Reg, %struct.Reg* %35195, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %35196 to i64*
  %35197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35198 = getelementptr inbounds %struct.GPR, %struct.GPR* %35197, i32 0, i32 5
  %35199 = getelementptr inbounds %struct.Reg, %struct.Reg* %35198, i32 0, i32 0
  %RCX.i233 = bitcast %union.anon* %35199 to i64*
  %35200 = load i64, i64* %RCX.i233
  %35201 = load i64, i64* %PC.i232
  %35202 = add i64 %35201, 7
  store i64 %35202, i64* %PC.i232
  %35203 = add i64 12600, %35200
  store i64 %35203, i64* %RCX.i233, align 8
  %35204 = icmp ult i64 %35203, %35200
  %35205 = icmp ult i64 %35203, 12600
  %35206 = or i1 %35204, %35205
  %35207 = zext i1 %35206 to i8
  %35208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35207, i8* %35208, align 1
  %35209 = trunc i64 %35203 to i32
  %35210 = and i32 %35209, 255
  %35211 = call i32 @llvm.ctpop.i32(i32 %35210)
  %35212 = trunc i32 %35211 to i8
  %35213 = and i8 %35212, 1
  %35214 = xor i8 %35213, 1
  %35215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35214, i8* %35215, align 1
  %35216 = xor i64 12600, %35200
  %35217 = xor i64 %35216, %35203
  %35218 = lshr i64 %35217, 4
  %35219 = trunc i64 %35218 to i8
  %35220 = and i8 %35219, 1
  %35221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35220, i8* %35221, align 1
  %35222 = icmp eq i64 %35203, 0
  %35223 = zext i1 %35222 to i8
  %35224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35223, i8* %35224, align 1
  %35225 = lshr i64 %35203, 63
  %35226 = trunc i64 %35225 to i8
  %35227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35226, i8* %35227, align 1
  %35228 = lshr i64 %35200, 63
  %35229 = xor i64 %35225, %35228
  %35230 = add i64 %35229, %35225
  %35231 = icmp eq i64 %35230, 2
  %35232 = zext i1 %35231 to i8
  %35233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35232, i8* %35233, align 1
  store %struct.Memory* %loadMem_4ac1f2, %struct.Memory** %MEMORY
  %loadMem_4ac1f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35235 = getelementptr inbounds %struct.GPR, %struct.GPR* %35234, i32 0, i32 33
  %35236 = getelementptr inbounds %struct.Reg, %struct.Reg* %35235, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %35236 to i64*
  %35237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35238 = getelementptr inbounds %struct.GPR, %struct.GPR* %35237, i32 0, i32 7
  %35239 = getelementptr inbounds %struct.Reg, %struct.Reg* %35238, i32 0, i32 0
  %RDX.i230 = bitcast %union.anon* %35239 to i64*
  %35240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35241 = getelementptr inbounds %struct.GPR, %struct.GPR* %35240, i32 0, i32 15
  %35242 = getelementptr inbounds %struct.Reg, %struct.Reg* %35241, i32 0, i32 0
  %RBP.i231 = bitcast %union.anon* %35242 to i64*
  %35243 = load i64, i64* %RBP.i231
  %35244 = sub i64 %35243, 24
  %35245 = load i64, i64* %PC.i229
  %35246 = add i64 %35245, 3
  store i64 %35246, i64* %PC.i229
  %35247 = inttoptr i64 %35244 to i32*
  %35248 = load i32, i32* %35247
  %35249 = zext i32 %35248 to i64
  store i64 %35249, i64* %RDX.i230, align 8
  store %struct.Memory* %loadMem_4ac1f9, %struct.Memory** %MEMORY
  %loadMem_4ac1fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %35250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35251 = getelementptr inbounds %struct.GPR, %struct.GPR* %35250, i32 0, i32 33
  %35252 = getelementptr inbounds %struct.Reg, %struct.Reg* %35251, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %35252 to i64*
  %35253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35254 = getelementptr inbounds %struct.GPR, %struct.GPR* %35253, i32 0, i32 7
  %35255 = getelementptr inbounds %struct.Reg, %struct.Reg* %35254, i32 0, i32 0
  %RDX.i227 = bitcast %union.anon* %35255 to i64*
  %35256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35257 = getelementptr inbounds %struct.GPR, %struct.GPR* %35256, i32 0, i32 15
  %35258 = getelementptr inbounds %struct.Reg, %struct.Reg* %35257, i32 0, i32 0
  %RBP.i228 = bitcast %union.anon* %35258 to i64*
  %35259 = load i64, i64* %RDX.i227
  %35260 = load i64, i64* %RBP.i228
  %35261 = sub i64 %35260, 84
  %35262 = load i64, i64* %PC.i226
  %35263 = add i64 %35262, 3
  store i64 %35263, i64* %PC.i226
  %35264 = trunc i64 %35259 to i32
  %35265 = inttoptr i64 %35261 to i32*
  %35266 = load i32, i32* %35265
  %35267 = add i32 %35266, %35264
  %35268 = zext i32 %35267 to i64
  store i64 %35268, i64* %RDX.i227, align 8
  %35269 = icmp ult i32 %35267, %35264
  %35270 = icmp ult i32 %35267, %35266
  %35271 = or i1 %35269, %35270
  %35272 = zext i1 %35271 to i8
  %35273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35272, i8* %35273, align 1
  %35274 = and i32 %35267, 255
  %35275 = call i32 @llvm.ctpop.i32(i32 %35274)
  %35276 = trunc i32 %35275 to i8
  %35277 = and i8 %35276, 1
  %35278 = xor i8 %35277, 1
  %35279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35278, i8* %35279, align 1
  %35280 = xor i32 %35266, %35264
  %35281 = xor i32 %35280, %35267
  %35282 = lshr i32 %35281, 4
  %35283 = trunc i32 %35282 to i8
  %35284 = and i8 %35283, 1
  %35285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35284, i8* %35285, align 1
  %35286 = icmp eq i32 %35267, 0
  %35287 = zext i1 %35286 to i8
  %35288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35287, i8* %35288, align 1
  %35289 = lshr i32 %35267, 31
  %35290 = trunc i32 %35289 to i8
  %35291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35290, i8* %35291, align 1
  %35292 = lshr i32 %35264, 31
  %35293 = lshr i32 %35266, 31
  %35294 = xor i32 %35289, %35292
  %35295 = xor i32 %35289, %35293
  %35296 = add i32 %35294, %35295
  %35297 = icmp eq i32 %35296, 2
  %35298 = zext i1 %35297 to i8
  %35299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35298, i8* %35299, align 1
  store %struct.Memory* %loadMem_4ac1fc, %struct.Memory** %MEMORY
  %loadMem_4ac1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %35300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35301 = getelementptr inbounds %struct.GPR, %struct.GPR* %35300, i32 0, i32 33
  %35302 = getelementptr inbounds %struct.Reg, %struct.Reg* %35301, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %35302 to i64*
  %35303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35304 = getelementptr inbounds %struct.GPR, %struct.GPR* %35303, i32 0, i32 7
  %35305 = getelementptr inbounds %struct.Reg, %struct.Reg* %35304, i32 0, i32 0
  %EDX.i224 = bitcast %union.anon* %35305 to i32*
  %35306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35307 = getelementptr inbounds %struct.GPR, %struct.GPR* %35306, i32 0, i32 9
  %35308 = getelementptr inbounds %struct.Reg, %struct.Reg* %35307, i32 0, i32 0
  %RSI.i225 = bitcast %union.anon* %35308 to i64*
  %35309 = load i32, i32* %EDX.i224
  %35310 = zext i32 %35309 to i64
  %35311 = load i64, i64* %PC.i223
  %35312 = add i64 %35311, 3
  store i64 %35312, i64* %PC.i223
  %35313 = shl i64 %35310, 32
  %35314 = ashr exact i64 %35313, 32
  store i64 %35314, i64* %RSI.i225, align 8
  store %struct.Memory* %loadMem_4ac1ff, %struct.Memory** %MEMORY
  %loadMem_4ac202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35316 = getelementptr inbounds %struct.GPR, %struct.GPR* %35315, i32 0, i32 33
  %35317 = getelementptr inbounds %struct.Reg, %struct.Reg* %35316, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %35317 to i64*
  %35318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35319 = getelementptr inbounds %struct.GPR, %struct.GPR* %35318, i32 0, i32 9
  %35320 = getelementptr inbounds %struct.Reg, %struct.Reg* %35319, i32 0, i32 0
  %RSI.i222 = bitcast %union.anon* %35320 to i64*
  %35321 = load i64, i64* %RSI.i222
  %35322 = load i64, i64* %PC.i221
  %35323 = add i64 %35322, 4
  store i64 %35323, i64* %PC.i221
  %35324 = shl i64 %35321, 4
  %35325 = icmp slt i64 %35324, 0
  %35326 = shl i64 %35324, 1
  store i64 %35326, i64* %RSI.i222, align 8
  %35327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %35328 = zext i1 %35325 to i8
  store i8 %35328, i8* %35327, align 1
  %35329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %35330 = trunc i64 %35326 to i32
  %35331 = and i32 %35330, 254
  %35332 = call i32 @llvm.ctpop.i32(i32 %35331)
  %35333 = trunc i32 %35332 to i8
  %35334 = and i8 %35333, 1
  %35335 = xor i8 %35334, 1
  store i8 %35335, i8* %35329, align 1
  %35336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35336, align 1
  %35337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %35338 = icmp eq i64 %35326, 0
  %35339 = zext i1 %35338 to i8
  store i8 %35339, i8* %35337, align 1
  %35340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %35341 = lshr i64 %35326, 63
  %35342 = trunc i64 %35341 to i8
  store i8 %35342, i8* %35340, align 1
  %35343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35343, align 1
  store %struct.Memory* %loadMem_4ac202, %struct.Memory** %MEMORY
  %loadMem_4ac206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35345 = getelementptr inbounds %struct.GPR, %struct.GPR* %35344, i32 0, i32 33
  %35346 = getelementptr inbounds %struct.Reg, %struct.Reg* %35345, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %35346 to i64*
  %35347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35348 = getelementptr inbounds %struct.GPR, %struct.GPR* %35347, i32 0, i32 5
  %35349 = getelementptr inbounds %struct.Reg, %struct.Reg* %35348, i32 0, i32 0
  %RCX.i219 = bitcast %union.anon* %35349 to i64*
  %35350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35351 = getelementptr inbounds %struct.GPR, %struct.GPR* %35350, i32 0, i32 9
  %35352 = getelementptr inbounds %struct.Reg, %struct.Reg* %35351, i32 0, i32 0
  %RSI.i220 = bitcast %union.anon* %35352 to i64*
  %35353 = load i64, i64* %RCX.i219
  %35354 = load i64, i64* %RSI.i220
  %35355 = load i64, i64* %PC.i218
  %35356 = add i64 %35355, 3
  store i64 %35356, i64* %PC.i218
  %35357 = add i64 %35354, %35353
  store i64 %35357, i64* %RCX.i219, align 8
  %35358 = icmp ult i64 %35357, %35353
  %35359 = icmp ult i64 %35357, %35354
  %35360 = or i1 %35358, %35359
  %35361 = zext i1 %35360 to i8
  %35362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35361, i8* %35362, align 1
  %35363 = trunc i64 %35357 to i32
  %35364 = and i32 %35363, 255
  %35365 = call i32 @llvm.ctpop.i32(i32 %35364)
  %35366 = trunc i32 %35365 to i8
  %35367 = and i8 %35366, 1
  %35368 = xor i8 %35367, 1
  %35369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35368, i8* %35369, align 1
  %35370 = xor i64 %35354, %35353
  %35371 = xor i64 %35370, %35357
  %35372 = lshr i64 %35371, 4
  %35373 = trunc i64 %35372 to i8
  %35374 = and i8 %35373, 1
  %35375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35374, i8* %35375, align 1
  %35376 = icmp eq i64 %35357, 0
  %35377 = zext i1 %35376 to i8
  %35378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35377, i8* %35378, align 1
  %35379 = lshr i64 %35357, 63
  %35380 = trunc i64 %35379 to i8
  %35381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35380, i8* %35381, align 1
  %35382 = lshr i64 %35353, 63
  %35383 = lshr i64 %35354, 63
  %35384 = xor i64 %35379, %35382
  %35385 = xor i64 %35379, %35383
  %35386 = add i64 %35384, %35385
  %35387 = icmp eq i64 %35386, 2
  %35388 = zext i1 %35387 to i8
  %35389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35388, i8* %35389, align 1
  store %struct.Memory* %loadMem_4ac206, %struct.Memory** %MEMORY
  %loadMem_4ac209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35391 = getelementptr inbounds %struct.GPR, %struct.GPR* %35390, i32 0, i32 33
  %35392 = getelementptr inbounds %struct.Reg, %struct.Reg* %35391, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %35392 to i64*
  %35393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35394 = getelementptr inbounds %struct.GPR, %struct.GPR* %35393, i32 0, i32 7
  %35395 = getelementptr inbounds %struct.Reg, %struct.Reg* %35394, i32 0, i32 0
  %RDX.i216 = bitcast %union.anon* %35395 to i64*
  %35396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35397 = getelementptr inbounds %struct.GPR, %struct.GPR* %35396, i32 0, i32 15
  %35398 = getelementptr inbounds %struct.Reg, %struct.Reg* %35397, i32 0, i32 0
  %RBP.i217 = bitcast %union.anon* %35398 to i64*
  %35399 = load i64, i64* %RBP.i217
  %35400 = sub i64 %35399, 28
  %35401 = load i64, i64* %PC.i215
  %35402 = add i64 %35401, 3
  store i64 %35402, i64* %PC.i215
  %35403 = inttoptr i64 %35400 to i32*
  %35404 = load i32, i32* %35403
  %35405 = zext i32 %35404 to i64
  store i64 %35405, i64* %RDX.i216, align 8
  store %struct.Memory* %loadMem_4ac209, %struct.Memory** %MEMORY
  %loadMem_4ac20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %35406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35407 = getelementptr inbounds %struct.GPR, %struct.GPR* %35406, i32 0, i32 33
  %35408 = getelementptr inbounds %struct.Reg, %struct.Reg* %35407, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %35408 to i64*
  %35409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35410 = getelementptr inbounds %struct.GPR, %struct.GPR* %35409, i32 0, i32 7
  %35411 = getelementptr inbounds %struct.Reg, %struct.Reg* %35410, i32 0, i32 0
  %RDX.i213 = bitcast %union.anon* %35411 to i64*
  %35412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35413 = getelementptr inbounds %struct.GPR, %struct.GPR* %35412, i32 0, i32 15
  %35414 = getelementptr inbounds %struct.Reg, %struct.Reg* %35413, i32 0, i32 0
  %RBP.i214 = bitcast %union.anon* %35414 to i64*
  %35415 = load i64, i64* %RDX.i213
  %35416 = load i64, i64* %RBP.i214
  %35417 = sub i64 %35416, 88
  %35418 = load i64, i64* %PC.i212
  %35419 = add i64 %35418, 3
  store i64 %35419, i64* %PC.i212
  %35420 = trunc i64 %35415 to i32
  %35421 = inttoptr i64 %35417 to i32*
  %35422 = load i32, i32* %35421
  %35423 = add i32 %35422, %35420
  %35424 = zext i32 %35423 to i64
  store i64 %35424, i64* %RDX.i213, align 8
  %35425 = icmp ult i32 %35423, %35420
  %35426 = icmp ult i32 %35423, %35422
  %35427 = or i1 %35425, %35426
  %35428 = zext i1 %35427 to i8
  %35429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35428, i8* %35429, align 1
  %35430 = and i32 %35423, 255
  %35431 = call i32 @llvm.ctpop.i32(i32 %35430)
  %35432 = trunc i32 %35431 to i8
  %35433 = and i8 %35432, 1
  %35434 = xor i8 %35433, 1
  %35435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35434, i8* %35435, align 1
  %35436 = xor i32 %35422, %35420
  %35437 = xor i32 %35436, %35423
  %35438 = lshr i32 %35437, 4
  %35439 = trunc i32 %35438 to i8
  %35440 = and i8 %35439, 1
  %35441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35440, i8* %35441, align 1
  %35442 = icmp eq i32 %35423, 0
  %35443 = zext i1 %35442 to i8
  %35444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35443, i8* %35444, align 1
  %35445 = lshr i32 %35423, 31
  %35446 = trunc i32 %35445 to i8
  %35447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35446, i8* %35447, align 1
  %35448 = lshr i32 %35420, 31
  %35449 = lshr i32 %35422, 31
  %35450 = xor i32 %35445, %35448
  %35451 = xor i32 %35445, %35449
  %35452 = add i32 %35450, %35451
  %35453 = icmp eq i32 %35452, 2
  %35454 = zext i1 %35453 to i8
  %35455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35454, i8* %35455, align 1
  store %struct.Memory* %loadMem_4ac20c, %struct.Memory** %MEMORY
  %loadMem_4ac20f = load %struct.Memory*, %struct.Memory** %MEMORY
  %35456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35457 = getelementptr inbounds %struct.GPR, %struct.GPR* %35456, i32 0, i32 33
  %35458 = getelementptr inbounds %struct.Reg, %struct.Reg* %35457, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %35458 to i64*
  %35459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35460 = getelementptr inbounds %struct.GPR, %struct.GPR* %35459, i32 0, i32 7
  %35461 = getelementptr inbounds %struct.Reg, %struct.Reg* %35460, i32 0, i32 0
  %EDX.i210 = bitcast %union.anon* %35461 to i32*
  %35462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35463 = getelementptr inbounds %struct.GPR, %struct.GPR* %35462, i32 0, i32 9
  %35464 = getelementptr inbounds %struct.Reg, %struct.Reg* %35463, i32 0, i32 0
  %RSI.i211 = bitcast %union.anon* %35464 to i64*
  %35465 = load i32, i32* %EDX.i210
  %35466 = zext i32 %35465 to i64
  %35467 = load i64, i64* %PC.i209
  %35468 = add i64 %35467, 3
  store i64 %35468, i64* %PC.i209
  %35469 = shl i64 %35466, 32
  %35470 = ashr exact i64 %35469, 32
  store i64 %35470, i64* %RSI.i211, align 8
  store %struct.Memory* %loadMem_4ac20f, %struct.Memory** %MEMORY
  %loadMem_4ac212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35472 = getelementptr inbounds %struct.GPR, %struct.GPR* %35471, i32 0, i32 33
  %35473 = getelementptr inbounds %struct.Reg, %struct.Reg* %35472, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %35473 to i64*
  %35474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35475 = getelementptr inbounds %struct.GPR, %struct.GPR* %35474, i32 0, i32 5
  %35476 = getelementptr inbounds %struct.Reg, %struct.Reg* %35475, i32 0, i32 0
  %RCX.i207 = bitcast %union.anon* %35476 to i64*
  %35477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35478 = getelementptr inbounds %struct.GPR, %struct.GPR* %35477, i32 0, i32 7
  %35479 = getelementptr inbounds %struct.Reg, %struct.Reg* %35478, i32 0, i32 0
  %RDX.i208 = bitcast %union.anon* %35479 to i64*
  %35480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35481 = getelementptr inbounds %struct.GPR, %struct.GPR* %35480, i32 0, i32 9
  %35482 = getelementptr inbounds %struct.Reg, %struct.Reg* %35481, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %35482 to i64*
  %35483 = load i64, i64* %RCX.i207
  %35484 = load i64, i64* %RSI.i
  %35485 = mul i64 %35484, 2
  %35486 = add i64 %35485, %35483
  %35487 = load i64, i64* %PC.i206
  %35488 = add i64 %35487, 4
  store i64 %35488, i64* %PC.i206
  %35489 = inttoptr i64 %35486 to i16*
  %35490 = load i16, i16* %35489
  %35491 = zext i16 %35490 to i64
  store i64 %35491, i64* %RDX.i208, align 8
  store %struct.Memory* %loadMem_4ac212, %struct.Memory** %MEMORY
  %loadMem_4ac216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35493 = getelementptr inbounds %struct.GPR, %struct.GPR* %35492, i32 0, i32 33
  %35494 = getelementptr inbounds %struct.Reg, %struct.Reg* %35493, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %35494 to i64*
  %35495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35496 = getelementptr inbounds %struct.GPR, %struct.GPR* %35495, i32 0, i32 7
  %35497 = getelementptr inbounds %struct.Reg, %struct.Reg* %35496, i32 0, i32 0
  %EDX.i204 = bitcast %union.anon* %35497 to i32*
  %35498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35499 = getelementptr inbounds %struct.GPR, %struct.GPR* %35498, i32 0, i32 5
  %35500 = getelementptr inbounds %struct.Reg, %struct.Reg* %35499, i32 0, i32 0
  %RCX.i205 = bitcast %union.anon* %35500 to i64*
  %35501 = load i32, i32* %EDX.i204
  %35502 = zext i32 %35501 to i64
  %35503 = load i64, i64* %PC.i203
  %35504 = add i64 %35503, 2
  store i64 %35504, i64* %PC.i203
  %35505 = and i64 %35502, 4294967295
  store i64 %35505, i64* %RCX.i205, align 8
  store %struct.Memory* %loadMem_4ac216, %struct.Memory** %MEMORY
  %loadMem_4ac218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35507 = getelementptr inbounds %struct.GPR, %struct.GPR* %35506, i32 0, i32 33
  %35508 = getelementptr inbounds %struct.Reg, %struct.Reg* %35507, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %35508 to i64*
  %35509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35510 = getelementptr inbounds %struct.GPR, %struct.GPR* %35509, i32 0, i32 5
  %35511 = getelementptr inbounds %struct.Reg, %struct.Reg* %35510, i32 0, i32 0
  %RCX.i202 = bitcast %union.anon* %35511 to i64*
  %35512 = load i64, i64* %RCX.i202
  %35513 = load i64, i64* %PC.i201
  %35514 = add i64 %35513, 4
  store i64 %35514, i64* %PC.i201
  %35515 = shl i64 %35512, 5
  %35516 = icmp slt i64 %35515, 0
  %35517 = shl i64 %35515, 1
  store i64 %35517, i64* %RCX.i202, align 8
  %35518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %35519 = zext i1 %35516 to i8
  store i8 %35519, i8* %35518, align 1
  %35520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %35521 = trunc i64 %35517 to i32
  %35522 = and i32 %35521, 254
  %35523 = call i32 @llvm.ctpop.i32(i32 %35522)
  %35524 = trunc i32 %35523 to i8
  %35525 = and i8 %35524, 1
  %35526 = xor i8 %35525, 1
  store i8 %35526, i8* %35520, align 1
  %35527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35527, align 1
  %35528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %35529 = icmp eq i64 %35517, 0
  %35530 = zext i1 %35529 to i8
  store i8 %35530, i8* %35528, align 1
  %35531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %35532 = lshr i64 %35517, 63
  %35533 = trunc i64 %35532 to i8
  store i8 %35533, i8* %35531, align 1
  %35534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35534, align 1
  store %struct.Memory* %loadMem_4ac218, %struct.Memory** %MEMORY
  %loadMem_4ac21c = load %struct.Memory*, %struct.Memory** %MEMORY
  %35535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35536 = getelementptr inbounds %struct.GPR, %struct.GPR* %35535, i32 0, i32 33
  %35537 = getelementptr inbounds %struct.Reg, %struct.Reg* %35536, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %35537 to i64*
  %35538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35539 = getelementptr inbounds %struct.GPR, %struct.GPR* %35538, i32 0, i32 1
  %35540 = getelementptr inbounds %struct.Reg, %struct.Reg* %35539, i32 0, i32 0
  %RAX.i199 = bitcast %union.anon* %35540 to i64*
  %35541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35542 = getelementptr inbounds %struct.GPR, %struct.GPR* %35541, i32 0, i32 5
  %35543 = getelementptr inbounds %struct.Reg, %struct.Reg* %35542, i32 0, i32 0
  %RCX.i200 = bitcast %union.anon* %35543 to i64*
  %35544 = load i64, i64* %RAX.i199
  %35545 = load i64, i64* %RCX.i200
  %35546 = load i64, i64* %PC.i198
  %35547 = add i64 %35546, 3
  store i64 %35547, i64* %PC.i198
  %35548 = add i64 %35545, %35544
  store i64 %35548, i64* %RAX.i199, align 8
  %35549 = icmp ult i64 %35548, %35544
  %35550 = icmp ult i64 %35548, %35545
  %35551 = or i1 %35549, %35550
  %35552 = zext i1 %35551 to i8
  %35553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35552, i8* %35553, align 1
  %35554 = trunc i64 %35548 to i32
  %35555 = and i32 %35554, 255
  %35556 = call i32 @llvm.ctpop.i32(i32 %35555)
  %35557 = trunc i32 %35556 to i8
  %35558 = and i8 %35557, 1
  %35559 = xor i8 %35558, 1
  %35560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35559, i8* %35560, align 1
  %35561 = xor i64 %35545, %35544
  %35562 = xor i64 %35561, %35548
  %35563 = lshr i64 %35562, 4
  %35564 = trunc i64 %35563 to i8
  %35565 = and i8 %35564, 1
  %35566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35565, i8* %35566, align 1
  %35567 = icmp eq i64 %35548, 0
  %35568 = zext i1 %35567 to i8
  %35569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35568, i8* %35569, align 1
  %35570 = lshr i64 %35548, 63
  %35571 = trunc i64 %35570 to i8
  %35572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35571, i8* %35572, align 1
  %35573 = lshr i64 %35544, 63
  %35574 = lshr i64 %35545, 63
  %35575 = xor i64 %35570, %35573
  %35576 = xor i64 %35570, %35574
  %35577 = add i64 %35575, %35576
  %35578 = icmp eq i64 %35577, 2
  %35579 = zext i1 %35578 to i8
  %35580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35579, i8* %35580, align 1
  store %struct.Memory* %loadMem_4ac21c, %struct.Memory** %MEMORY
  %loadMem_4ac21f = load %struct.Memory*, %struct.Memory** %MEMORY
  %35581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35582 = getelementptr inbounds %struct.GPR, %struct.GPR* %35581, i32 0, i32 33
  %35583 = getelementptr inbounds %struct.Reg, %struct.Reg* %35582, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %35583 to i64*
  %35584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35585 = getelementptr inbounds %struct.GPR, %struct.GPR* %35584, i32 0, i32 1
  %35586 = getelementptr inbounds %struct.Reg, %struct.Reg* %35585, i32 0, i32 0
  %RAX.i197 = bitcast %union.anon* %35586 to i64*
  %35587 = load i64, i64* %RAX.i197
  %35588 = load i64, i64* %PC.i196
  %35589 = add i64 %35588, 4
  store i64 %35589, i64* %PC.i196
  %35590 = add i64 32, %35587
  store i64 %35590, i64* %RAX.i197, align 8
  %35591 = icmp ult i64 %35590, %35587
  %35592 = icmp ult i64 %35590, 32
  %35593 = or i1 %35591, %35592
  %35594 = zext i1 %35593 to i8
  %35595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35594, i8* %35595, align 1
  %35596 = trunc i64 %35590 to i32
  %35597 = and i32 %35596, 255
  %35598 = call i32 @llvm.ctpop.i32(i32 %35597)
  %35599 = trunc i32 %35598 to i8
  %35600 = and i8 %35599, 1
  %35601 = xor i8 %35600, 1
  %35602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35601, i8* %35602, align 1
  %35603 = xor i64 32, %35587
  %35604 = xor i64 %35603, %35590
  %35605 = lshr i64 %35604, 4
  %35606 = trunc i64 %35605 to i8
  %35607 = and i8 %35606, 1
  %35608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35607, i8* %35608, align 1
  %35609 = icmp eq i64 %35590, 0
  %35610 = zext i1 %35609 to i8
  %35611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35610, i8* %35611, align 1
  %35612 = lshr i64 %35590, 63
  %35613 = trunc i64 %35612 to i8
  %35614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35613, i8* %35614, align 1
  %35615 = lshr i64 %35587, 63
  %35616 = xor i64 %35612, %35615
  %35617 = add i64 %35616, %35612
  %35618 = icmp eq i64 %35617, 2
  %35619 = zext i1 %35618 to i8
  %35620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35619, i8* %35620, align 1
  store %struct.Memory* %loadMem_4ac21f, %struct.Memory** %MEMORY
  %loadMem_4ac223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35622 = getelementptr inbounds %struct.GPR, %struct.GPR* %35621, i32 0, i32 33
  %35623 = getelementptr inbounds %struct.Reg, %struct.Reg* %35622, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %35623 to i64*
  %35624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35625 = getelementptr inbounds %struct.GPR, %struct.GPR* %35624, i32 0, i32 1
  %35626 = getelementptr inbounds %struct.Reg, %struct.Reg* %35625, i32 0, i32 0
  %RAX.i195 = bitcast %union.anon* %35626 to i64*
  %35627 = load i64, i64* %RAX.i195
  %35628 = load i64, i64* %PC.i194
  %35629 = add i64 %35628, 4
  store i64 %35629, i64* %PC.i194
  %35630 = ashr i64 %35627, 5
  %35631 = trunc i64 %35630 to i8
  %35632 = and i8 %35631, 1
  %35633 = ashr i64 %35630, 1
  store i64 %35633, i64* %RAX.i195, align 8
  %35634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35632, i8* %35634, align 1
  %35635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %35636 = trunc i64 %35633 to i32
  %35637 = and i32 %35636, 255
  %35638 = call i32 @llvm.ctpop.i32(i32 %35637)
  %35639 = trunc i32 %35638 to i8
  %35640 = and i8 %35639, 1
  %35641 = xor i8 %35640, 1
  store i8 %35641, i8* %35635, align 1
  %35642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35642, align 1
  %35643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %35644 = icmp eq i64 %35633, 0
  %35645 = zext i1 %35644 to i8
  store i8 %35645, i8* %35643, align 1
  %35646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %35647 = lshr i64 %35633, 63
  %35648 = trunc i64 %35647 to i8
  store i8 %35648, i8* %35646, align 1
  %35649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35649, align 1
  store %struct.Memory* %loadMem_4ac223, %struct.Memory** %MEMORY
  %loadMem_4ac227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35651 = getelementptr inbounds %struct.GPR, %struct.GPR* %35650, i32 0, i32 33
  %35652 = getelementptr inbounds %struct.Reg, %struct.Reg* %35651, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %35652 to i64*
  %35653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35654 = getelementptr inbounds %struct.GPR, %struct.GPR* %35653, i32 0, i32 1
  %35655 = getelementptr inbounds %struct.Reg, %struct.Reg* %35654, i32 0, i32 0
  %RAX.i192 = bitcast %union.anon* %35655 to i64*
  %35656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35657 = getelementptr inbounds %struct.GPR, %struct.GPR* %35656, i32 0, i32 15
  %35658 = getelementptr inbounds %struct.Reg, %struct.Reg* %35657, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %35658 to i64*
  %35659 = load i64, i64* %RBP.i193
  %35660 = sub i64 %35659, 752
  %35661 = load i64, i64* %RAX.i192
  %35662 = load i64, i64* %PC.i191
  %35663 = add i64 %35662, 7
  store i64 %35663, i64* %PC.i191
  %35664 = inttoptr i64 %35660 to i64*
  store i64 %35661, i64* %35664
  store %struct.Memory* %loadMem_4ac227, %struct.Memory** %MEMORY
  br label %block_.L_4ac22e

block_.L_4ac22e:                                  ; preds = %block_.L_4ac1c9, %block_4ac1b9
  %loadMem_4ac22e = load %struct.Memory*, %struct.Memory** %MEMORY
  %35665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35666 = getelementptr inbounds %struct.GPR, %struct.GPR* %35665, i32 0, i32 33
  %35667 = getelementptr inbounds %struct.Reg, %struct.Reg* %35666, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %35667 to i64*
  %35668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35669 = getelementptr inbounds %struct.GPR, %struct.GPR* %35668, i32 0, i32 1
  %35670 = getelementptr inbounds %struct.Reg, %struct.Reg* %35669, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %35670 to i64*
  %35671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35672 = getelementptr inbounds %struct.GPR, %struct.GPR* %35671, i32 0, i32 15
  %35673 = getelementptr inbounds %struct.Reg, %struct.Reg* %35672, i32 0, i32 0
  %RBP.i190 = bitcast %union.anon* %35673 to i64*
  %35674 = load i64, i64* %RBP.i190
  %35675 = sub i64 %35674, 752
  %35676 = load i64, i64* %PC.i188
  %35677 = add i64 %35676, 7
  store i64 %35677, i64* %PC.i188
  %35678 = inttoptr i64 %35675 to i64*
  %35679 = load i64, i64* %35678
  store i64 %35679, i64* %RAX.i189, align 8
  store %struct.Memory* %loadMem_4ac22e, %struct.Memory** %MEMORY
  %loadMem_4ac235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35681 = getelementptr inbounds %struct.GPR, %struct.GPR* %35680, i32 0, i32 33
  %35682 = getelementptr inbounds %struct.Reg, %struct.Reg* %35681, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %35682 to i64*
  %35683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35684 = getelementptr inbounds %struct.GPR, %struct.GPR* %35683, i32 0, i32 1
  %35685 = getelementptr inbounds %struct.Reg, %struct.Reg* %35684, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %35685 to i64*
  %35686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35687 = getelementptr inbounds %struct.GPR, %struct.GPR* %35686, i32 0, i32 15
  %35688 = getelementptr inbounds %struct.Reg, %struct.Reg* %35687, i32 0, i32 0
  %RBP.i187 = bitcast %union.anon* %35688 to i64*
  %35689 = load i64, i64* %RBP.i187
  %35690 = sub i64 %35689, 744
  %35691 = load i64, i64* %RAX.i186
  %35692 = load i64, i64* %PC.i185
  %35693 = add i64 %35692, 7
  store i64 %35693, i64* %PC.i185
  %35694 = inttoptr i64 %35690 to i64*
  store i64 %35691, i64* %35694
  store %struct.Memory* %loadMem_4ac235, %struct.Memory** %MEMORY
  br label %block_.L_4ac23c

block_.L_4ac23c:                                  ; preds = %block_.L_4ac22e, %block_4ac132
  %loadMem_4ac23c = load %struct.Memory*, %struct.Memory** %MEMORY
  %35695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35696 = getelementptr inbounds %struct.GPR, %struct.GPR* %35695, i32 0, i32 33
  %35697 = getelementptr inbounds %struct.Reg, %struct.Reg* %35696, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %35697 to i64*
  %35698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35699 = getelementptr inbounds %struct.GPR, %struct.GPR* %35698, i32 0, i32 1
  %35700 = getelementptr inbounds %struct.Reg, %struct.Reg* %35699, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %35700 to i64*
  %35701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35702 = getelementptr inbounds %struct.GPR, %struct.GPR* %35701, i32 0, i32 15
  %35703 = getelementptr inbounds %struct.Reg, %struct.Reg* %35702, i32 0, i32 0
  %RBP.i184 = bitcast %union.anon* %35703 to i64*
  %35704 = load i64, i64* %RBP.i184
  %35705 = sub i64 %35704, 744
  %35706 = load i64, i64* %PC.i182
  %35707 = add i64 %35706, 7
  store i64 %35707, i64* %PC.i182
  %35708 = inttoptr i64 %35705 to i64*
  %35709 = load i64, i64* %35708
  store i64 %35709, i64* %RAX.i183, align 8
  store %struct.Memory* %loadMem_4ac23c, %struct.Memory** %MEMORY
  %loadMem_4ac243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35711 = getelementptr inbounds %struct.GPR, %struct.GPR* %35710, i32 0, i32 33
  %35712 = getelementptr inbounds %struct.Reg, %struct.Reg* %35711, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %35712 to i64*
  %35713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35714 = getelementptr inbounds %struct.GPR, %struct.GPR* %35713, i32 0, i32 1
  %35715 = getelementptr inbounds %struct.Reg, %struct.Reg* %35714, i32 0, i32 0
  %EAX.i180 = bitcast %union.anon* %35715 to i32*
  %35716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35717 = getelementptr inbounds %struct.GPR, %struct.GPR* %35716, i32 0, i32 5
  %35718 = getelementptr inbounds %struct.Reg, %struct.Reg* %35717, i32 0, i32 0
  %RCX.i181 = bitcast %union.anon* %35718 to i64*
  %35719 = load i32, i32* %EAX.i180
  %35720 = zext i32 %35719 to i64
  %35721 = load i64, i64* %PC.i179
  %35722 = add i64 %35721, 2
  store i64 %35722, i64* %PC.i179
  %35723 = and i64 %35720, 4294967295
  store i64 %35723, i64* %RCX.i181, align 8
  store %struct.Memory* %loadMem_4ac243, %struct.Memory** %MEMORY
  %loadMem_4ac245 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35725 = getelementptr inbounds %struct.GPR, %struct.GPR* %35724, i32 0, i32 33
  %35726 = getelementptr inbounds %struct.Reg, %struct.Reg* %35725, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %35726 to i64*
  %35727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35728 = getelementptr inbounds %struct.GPR, %struct.GPR* %35727, i32 0, i32 1
  %35729 = getelementptr inbounds %struct.Reg, %struct.Reg* %35728, i32 0, i32 0
  %RAX.i178 = bitcast %union.anon* %35729 to i64*
  %35730 = load i64, i64* %PC.i177
  %35731 = add i64 %35730, 8
  store i64 %35731, i64* %PC.i177
  %35732 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %35732, i64* %RAX.i178, align 8
  store %struct.Memory* %loadMem_4ac245, %struct.Memory** %MEMORY
  %loadMem_4ac24d = load %struct.Memory*, %struct.Memory** %MEMORY
  %35733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35734 = getelementptr inbounds %struct.GPR, %struct.GPR* %35733, i32 0, i32 33
  %35735 = getelementptr inbounds %struct.Reg, %struct.Reg* %35734, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %35735 to i64*
  %35736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35737 = getelementptr inbounds %struct.GPR, %struct.GPR* %35736, i32 0, i32 1
  %35738 = getelementptr inbounds %struct.Reg, %struct.Reg* %35737, i32 0, i32 0
  %RAX.i176 = bitcast %union.anon* %35738 to i64*
  %35739 = load i64, i64* %RAX.i176
  %35740 = load i64, i64* %PC.i175
  %35741 = add i64 %35740, 6
  store i64 %35741, i64* %PC.i175
  %35742 = add i64 13112, %35739
  store i64 %35742, i64* %RAX.i176, align 8
  %35743 = icmp ult i64 %35742, %35739
  %35744 = icmp ult i64 %35742, 13112
  %35745 = or i1 %35743, %35744
  %35746 = zext i1 %35745 to i8
  %35747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35746, i8* %35747, align 1
  %35748 = trunc i64 %35742 to i32
  %35749 = and i32 %35748, 255
  %35750 = call i32 @llvm.ctpop.i32(i32 %35749)
  %35751 = trunc i32 %35750 to i8
  %35752 = and i8 %35751, 1
  %35753 = xor i8 %35752, 1
  %35754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35753, i8* %35754, align 1
  %35755 = xor i64 13112, %35739
  %35756 = xor i64 %35755, %35742
  %35757 = lshr i64 %35756, 4
  %35758 = trunc i64 %35757 to i8
  %35759 = and i8 %35758, 1
  %35760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35759, i8* %35760, align 1
  %35761 = icmp eq i64 %35742, 0
  %35762 = zext i1 %35761 to i8
  %35763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35762, i8* %35763, align 1
  %35764 = lshr i64 %35742, 63
  %35765 = trunc i64 %35764 to i8
  %35766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35765, i8* %35766, align 1
  %35767 = lshr i64 %35739, 63
  %35768 = xor i64 %35764, %35767
  %35769 = add i64 %35768, %35764
  %35770 = icmp eq i64 %35769, 2
  %35771 = zext i1 %35770 to i8
  %35772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35771, i8* %35772, align 1
  store %struct.Memory* %loadMem_4ac24d, %struct.Memory** %MEMORY
  %loadMem_4ac253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35774 = getelementptr inbounds %struct.GPR, %struct.GPR* %35773, i32 0, i32 33
  %35775 = getelementptr inbounds %struct.Reg, %struct.Reg* %35774, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %35775 to i64*
  %35776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35777 = getelementptr inbounds %struct.GPR, %struct.GPR* %35776, i32 0, i32 7
  %35778 = getelementptr inbounds %struct.Reg, %struct.Reg* %35777, i32 0, i32 0
  %RDX.i173 = bitcast %union.anon* %35778 to i64*
  %35779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35780 = getelementptr inbounds %struct.GPR, %struct.GPR* %35779, i32 0, i32 15
  %35781 = getelementptr inbounds %struct.Reg, %struct.Reg* %35780, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %35781 to i64*
  %35782 = load i64, i64* %RBP.i174
  %35783 = sub i64 %35782, 24
  %35784 = load i64, i64* %PC.i172
  %35785 = add i64 %35784, 4
  store i64 %35785, i64* %PC.i172
  %35786 = inttoptr i64 %35783 to i32*
  %35787 = load i32, i32* %35786
  %35788 = sext i32 %35787 to i64
  store i64 %35788, i64* %RDX.i173, align 8
  store %struct.Memory* %loadMem_4ac253, %struct.Memory** %MEMORY
  %loadMem_4ac257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35790 = getelementptr inbounds %struct.GPR, %struct.GPR* %35789, i32 0, i32 33
  %35791 = getelementptr inbounds %struct.Reg, %struct.Reg* %35790, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %35791 to i64*
  %35792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35793 = getelementptr inbounds %struct.GPR, %struct.GPR* %35792, i32 0, i32 7
  %35794 = getelementptr inbounds %struct.Reg, %struct.Reg* %35793, i32 0, i32 0
  %RDX.i171 = bitcast %union.anon* %35794 to i64*
  %35795 = load i64, i64* %RDX.i171
  %35796 = load i64, i64* %PC.i170
  %35797 = add i64 %35796, 4
  store i64 %35797, i64* %PC.i170
  %35798 = shl i64 %35795, 5
  %35799 = icmp slt i64 %35798, 0
  %35800 = shl i64 %35798, 1
  store i64 %35800, i64* %RDX.i171, align 8
  %35801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %35802 = zext i1 %35799 to i8
  store i8 %35802, i8* %35801, align 1
  %35803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %35804 = trunc i64 %35800 to i32
  %35805 = and i32 %35804, 254
  %35806 = call i32 @llvm.ctpop.i32(i32 %35805)
  %35807 = trunc i32 %35806 to i8
  %35808 = and i8 %35807, 1
  %35809 = xor i8 %35808, 1
  store i8 %35809, i8* %35803, align 1
  %35810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35810, align 1
  %35811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %35812 = icmp eq i64 %35800, 0
  %35813 = zext i1 %35812 to i8
  store i8 %35813, i8* %35811, align 1
  %35814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %35815 = lshr i64 %35800, 63
  %35816 = trunc i64 %35815 to i8
  store i8 %35816, i8* %35814, align 1
  %35817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35817, align 1
  store %struct.Memory* %loadMem_4ac257, %struct.Memory** %MEMORY
  %loadMem_4ac25b = load %struct.Memory*, %struct.Memory** %MEMORY
  %35818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35819 = getelementptr inbounds %struct.GPR, %struct.GPR* %35818, i32 0, i32 33
  %35820 = getelementptr inbounds %struct.Reg, %struct.Reg* %35819, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %35820 to i64*
  %35821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35822 = getelementptr inbounds %struct.GPR, %struct.GPR* %35821, i32 0, i32 1
  %35823 = getelementptr inbounds %struct.Reg, %struct.Reg* %35822, i32 0, i32 0
  %RAX.i168 = bitcast %union.anon* %35823 to i64*
  %35824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35825 = getelementptr inbounds %struct.GPR, %struct.GPR* %35824, i32 0, i32 7
  %35826 = getelementptr inbounds %struct.Reg, %struct.Reg* %35825, i32 0, i32 0
  %RDX.i169 = bitcast %union.anon* %35826 to i64*
  %35827 = load i64, i64* %RAX.i168
  %35828 = load i64, i64* %RDX.i169
  %35829 = load i64, i64* %PC.i167
  %35830 = add i64 %35829, 3
  store i64 %35830, i64* %PC.i167
  %35831 = add i64 %35828, %35827
  store i64 %35831, i64* %RAX.i168, align 8
  %35832 = icmp ult i64 %35831, %35827
  %35833 = icmp ult i64 %35831, %35828
  %35834 = or i1 %35832, %35833
  %35835 = zext i1 %35834 to i8
  %35836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35835, i8* %35836, align 1
  %35837 = trunc i64 %35831 to i32
  %35838 = and i32 %35837, 255
  %35839 = call i32 @llvm.ctpop.i32(i32 %35838)
  %35840 = trunc i32 %35839 to i8
  %35841 = and i8 %35840, 1
  %35842 = xor i8 %35841, 1
  %35843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35842, i8* %35843, align 1
  %35844 = xor i64 %35828, %35827
  %35845 = xor i64 %35844, %35831
  %35846 = lshr i64 %35845, 4
  %35847 = trunc i64 %35846 to i8
  %35848 = and i8 %35847, 1
  %35849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35848, i8* %35849, align 1
  %35850 = icmp eq i64 %35831, 0
  %35851 = zext i1 %35850 to i8
  %35852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35851, i8* %35852, align 1
  %35853 = lshr i64 %35831, 63
  %35854 = trunc i64 %35853 to i8
  %35855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35854, i8* %35855, align 1
  %35856 = lshr i64 %35827, 63
  %35857 = lshr i64 %35828, 63
  %35858 = xor i64 %35853, %35856
  %35859 = xor i64 %35853, %35857
  %35860 = add i64 %35858, %35859
  %35861 = icmp eq i64 %35860, 2
  %35862 = zext i1 %35861 to i8
  %35863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35862, i8* %35863, align 1
  store %struct.Memory* %loadMem_4ac25b, %struct.Memory** %MEMORY
  %loadMem_4ac25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %35864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35865 = getelementptr inbounds %struct.GPR, %struct.GPR* %35864, i32 0, i32 33
  %35866 = getelementptr inbounds %struct.Reg, %struct.Reg* %35865, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %35866 to i64*
  %35867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35868 = getelementptr inbounds %struct.GPR, %struct.GPR* %35867, i32 0, i32 7
  %35869 = getelementptr inbounds %struct.Reg, %struct.Reg* %35868, i32 0, i32 0
  %RDX.i165 = bitcast %union.anon* %35869 to i64*
  %35870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35871 = getelementptr inbounds %struct.GPR, %struct.GPR* %35870, i32 0, i32 15
  %35872 = getelementptr inbounds %struct.Reg, %struct.Reg* %35871, i32 0, i32 0
  %RBP.i166 = bitcast %union.anon* %35872 to i64*
  %35873 = load i64, i64* %RBP.i166
  %35874 = sub i64 %35873, 28
  %35875 = load i64, i64* %PC.i164
  %35876 = add i64 %35875, 4
  store i64 %35876, i64* %PC.i164
  %35877 = inttoptr i64 %35874 to i32*
  %35878 = load i32, i32* %35877
  %35879 = sext i32 %35878 to i64
  store i64 %35879, i64* %RDX.i165, align 8
  store %struct.Memory* %loadMem_4ac25e, %struct.Memory** %MEMORY
  %loadMem_4ac262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35881 = getelementptr inbounds %struct.GPR, %struct.GPR* %35880, i32 0, i32 33
  %35882 = getelementptr inbounds %struct.Reg, %struct.Reg* %35881, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %35882 to i64*
  %35883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35884 = getelementptr inbounds %struct.GPR, %struct.GPR* %35883, i32 0, i32 5
  %35885 = getelementptr inbounds %struct.Reg, %struct.Reg* %35884, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %35885 to i32*
  %35886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35887 = getelementptr inbounds %struct.GPR, %struct.GPR* %35886, i32 0, i32 1
  %35888 = getelementptr inbounds %struct.Reg, %struct.Reg* %35887, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %35888 to i64*
  %35889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35890 = getelementptr inbounds %struct.GPR, %struct.GPR* %35889, i32 0, i32 7
  %35891 = getelementptr inbounds %struct.Reg, %struct.Reg* %35890, i32 0, i32 0
  %RDX.i163 = bitcast %union.anon* %35891 to i64*
  %35892 = load i64, i64* %RAX.i162
  %35893 = load i64, i64* %RDX.i163
  %35894 = mul i64 %35893, 4
  %35895 = add i64 %35894, %35892
  %35896 = load i32, i32* %ECX.i
  %35897 = zext i32 %35896 to i64
  %35898 = load i64, i64* %PC.i161
  %35899 = add i64 %35898, 3
  store i64 %35899, i64* %PC.i161
  %35900 = inttoptr i64 %35895 to i32*
  store i32 %35896, i32* %35900
  store %struct.Memory* %loadMem_4ac262, %struct.Memory** %MEMORY
  %loadMem_4ac265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35902 = getelementptr inbounds %struct.GPR, %struct.GPR* %35901, i32 0, i32 33
  %35903 = getelementptr inbounds %struct.Reg, %struct.Reg* %35902, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %35903 to i64*
  %35904 = load i64, i64* %PC.i160
  %35905 = add i64 %35904, 75
  %35906 = load i64, i64* %PC.i160
  %35907 = add i64 %35906, 5
  store i64 %35907, i64* %PC.i160
  %35908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %35905, i64* %35908, align 8
  store %struct.Memory* %loadMem_4ac265, %struct.Memory** %MEMORY
  br label %block_.L_4ac2b0

block_.L_4ac26a:                                  ; preds = %block_.L_4ac00e
  %loadMem_4ac26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %35909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35910 = getelementptr inbounds %struct.GPR, %struct.GPR* %35909, i32 0, i32 33
  %35911 = getelementptr inbounds %struct.Reg, %struct.Reg* %35910, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %35911 to i64*
  %35912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35913 = getelementptr inbounds %struct.GPR, %struct.GPR* %35912, i32 0, i32 1
  %35914 = getelementptr inbounds %struct.Reg, %struct.Reg* %35913, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %35914 to i64*
  %35915 = load i64, i64* %PC.i158
  %35916 = add i64 %35915, 8
  store i64 %35916, i64* %PC.i158
  %35917 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %35917, i64* %RAX.i159, align 8
  store %struct.Memory* %loadMem_4ac26a, %struct.Memory** %MEMORY
  %loadMem_4ac272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35919 = getelementptr inbounds %struct.GPR, %struct.GPR* %35918, i32 0, i32 33
  %35920 = getelementptr inbounds %struct.Reg, %struct.Reg* %35919, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %35920 to i64*
  %35921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35922 = getelementptr inbounds %struct.GPR, %struct.GPR* %35921, i32 0, i32 1
  %35923 = getelementptr inbounds %struct.Reg, %struct.Reg* %35922, i32 0, i32 0
  %RAX.i157 = bitcast %union.anon* %35923 to i64*
  %35924 = load i64, i64* %RAX.i157
  %35925 = load i64, i64* %PC.i156
  %35926 = add i64 %35925, 6
  store i64 %35926, i64* %PC.i156
  %35927 = add i64 13112, %35924
  store i64 %35927, i64* %RAX.i157, align 8
  %35928 = icmp ult i64 %35927, %35924
  %35929 = icmp ult i64 %35927, 13112
  %35930 = or i1 %35928, %35929
  %35931 = zext i1 %35930 to i8
  %35932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %35931, i8* %35932, align 1
  %35933 = trunc i64 %35927 to i32
  %35934 = and i32 %35933, 255
  %35935 = call i32 @llvm.ctpop.i32(i32 %35934)
  %35936 = trunc i32 %35935 to i8
  %35937 = and i8 %35936, 1
  %35938 = xor i8 %35937, 1
  %35939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35938, i8* %35939, align 1
  %35940 = xor i64 13112, %35924
  %35941 = xor i64 %35940, %35927
  %35942 = lshr i64 %35941, 4
  %35943 = trunc i64 %35942 to i8
  %35944 = and i8 %35943, 1
  %35945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35944, i8* %35945, align 1
  %35946 = icmp eq i64 %35927, 0
  %35947 = zext i1 %35946 to i8
  %35948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35947, i8* %35948, align 1
  %35949 = lshr i64 %35927, 63
  %35950 = trunc i64 %35949 to i8
  %35951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35950, i8* %35951, align 1
  %35952 = lshr i64 %35924, 63
  %35953 = xor i64 %35949, %35952
  %35954 = add i64 %35953, %35949
  %35955 = icmp eq i64 %35954, 2
  %35956 = zext i1 %35955 to i8
  %35957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35956, i8* %35957, align 1
  store %struct.Memory* %loadMem_4ac272, %struct.Memory** %MEMORY
  %loadMem_4ac278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %35958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35959 = getelementptr inbounds %struct.GPR, %struct.GPR* %35958, i32 0, i32 33
  %35960 = getelementptr inbounds %struct.Reg, %struct.Reg* %35959, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %35960 to i64*
  %35961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35962 = getelementptr inbounds %struct.GPR, %struct.GPR* %35961, i32 0, i32 5
  %35963 = getelementptr inbounds %struct.Reg, %struct.Reg* %35962, i32 0, i32 0
  %RCX.i154 = bitcast %union.anon* %35963 to i64*
  %35964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35965 = getelementptr inbounds %struct.GPR, %struct.GPR* %35964, i32 0, i32 15
  %35966 = getelementptr inbounds %struct.Reg, %struct.Reg* %35965, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %35966 to i64*
  %35967 = load i64, i64* %RBP.i155
  %35968 = sub i64 %35967, 24
  %35969 = load i64, i64* %PC.i153
  %35970 = add i64 %35969, 4
  store i64 %35970, i64* %PC.i153
  %35971 = inttoptr i64 %35968 to i32*
  %35972 = load i32, i32* %35971
  %35973 = sext i32 %35972 to i64
  store i64 %35973, i64* %RCX.i154, align 8
  store %struct.Memory* %loadMem_4ac278, %struct.Memory** %MEMORY
  %loadMem_4ac27c = load %struct.Memory*, %struct.Memory** %MEMORY
  %35974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35975 = getelementptr inbounds %struct.GPR, %struct.GPR* %35974, i32 0, i32 33
  %35976 = getelementptr inbounds %struct.Reg, %struct.Reg* %35975, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %35976 to i64*
  %35977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35978 = getelementptr inbounds %struct.GPR, %struct.GPR* %35977, i32 0, i32 5
  %35979 = getelementptr inbounds %struct.Reg, %struct.Reg* %35978, i32 0, i32 0
  %RCX.i152 = bitcast %union.anon* %35979 to i64*
  %35980 = load i64, i64* %RCX.i152
  %35981 = load i64, i64* %PC.i151
  %35982 = add i64 %35981, 4
  store i64 %35982, i64* %PC.i151
  %35983 = shl i64 %35980, 5
  %35984 = icmp slt i64 %35983, 0
  %35985 = shl i64 %35983, 1
  store i64 %35985, i64* %RCX.i152, align 8
  %35986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %35987 = zext i1 %35984 to i8
  store i8 %35987, i8* %35986, align 1
  %35988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %35989 = trunc i64 %35985 to i32
  %35990 = and i32 %35989, 254
  %35991 = call i32 @llvm.ctpop.i32(i32 %35990)
  %35992 = trunc i32 %35991 to i8
  %35993 = and i8 %35992, 1
  %35994 = xor i8 %35993, 1
  store i8 %35994, i8* %35988, align 1
  %35995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35995, align 1
  %35996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %35997 = icmp eq i64 %35985, 0
  %35998 = zext i1 %35997 to i8
  store i8 %35998, i8* %35996, align 1
  %35999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %36000 = lshr i64 %35985, 63
  %36001 = trunc i64 %36000 to i8
  store i8 %36001, i8* %35999, align 1
  %36002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36002, align 1
  store %struct.Memory* %loadMem_4ac27c, %struct.Memory** %MEMORY
  %loadMem_4ac280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36004 = getelementptr inbounds %struct.GPR, %struct.GPR* %36003, i32 0, i32 33
  %36005 = getelementptr inbounds %struct.Reg, %struct.Reg* %36004, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %36005 to i64*
  %36006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36007 = getelementptr inbounds %struct.GPR, %struct.GPR* %36006, i32 0, i32 1
  %36008 = getelementptr inbounds %struct.Reg, %struct.Reg* %36007, i32 0, i32 0
  %RAX.i149 = bitcast %union.anon* %36008 to i64*
  %36009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36010 = getelementptr inbounds %struct.GPR, %struct.GPR* %36009, i32 0, i32 5
  %36011 = getelementptr inbounds %struct.Reg, %struct.Reg* %36010, i32 0, i32 0
  %RCX.i150 = bitcast %union.anon* %36011 to i64*
  %36012 = load i64, i64* %RAX.i149
  %36013 = load i64, i64* %RCX.i150
  %36014 = load i64, i64* %PC.i148
  %36015 = add i64 %36014, 3
  store i64 %36015, i64* %PC.i148
  %36016 = add i64 %36013, %36012
  store i64 %36016, i64* %RAX.i149, align 8
  %36017 = icmp ult i64 %36016, %36012
  %36018 = icmp ult i64 %36016, %36013
  %36019 = or i1 %36017, %36018
  %36020 = zext i1 %36019 to i8
  %36021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36020, i8* %36021, align 1
  %36022 = trunc i64 %36016 to i32
  %36023 = and i32 %36022, 255
  %36024 = call i32 @llvm.ctpop.i32(i32 %36023)
  %36025 = trunc i32 %36024 to i8
  %36026 = and i8 %36025, 1
  %36027 = xor i8 %36026, 1
  %36028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36027, i8* %36028, align 1
  %36029 = xor i64 %36013, %36012
  %36030 = xor i64 %36029, %36016
  %36031 = lshr i64 %36030, 4
  %36032 = trunc i64 %36031 to i8
  %36033 = and i8 %36032, 1
  %36034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36033, i8* %36034, align 1
  %36035 = icmp eq i64 %36016, 0
  %36036 = zext i1 %36035 to i8
  %36037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36036, i8* %36037, align 1
  %36038 = lshr i64 %36016, 63
  %36039 = trunc i64 %36038 to i8
  %36040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36039, i8* %36040, align 1
  %36041 = lshr i64 %36012, 63
  %36042 = lshr i64 %36013, 63
  %36043 = xor i64 %36038, %36041
  %36044 = xor i64 %36038, %36042
  %36045 = add i64 %36043, %36044
  %36046 = icmp eq i64 %36045, 2
  %36047 = zext i1 %36046 to i8
  %36048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36047, i8* %36048, align 1
  store %struct.Memory* %loadMem_4ac280, %struct.Memory** %MEMORY
  %loadMem_4ac283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36050 = getelementptr inbounds %struct.GPR, %struct.GPR* %36049, i32 0, i32 33
  %36051 = getelementptr inbounds %struct.Reg, %struct.Reg* %36050, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %36051 to i64*
  %36052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36053 = getelementptr inbounds %struct.GPR, %struct.GPR* %36052, i32 0, i32 5
  %36054 = getelementptr inbounds %struct.Reg, %struct.Reg* %36053, i32 0, i32 0
  %RCX.i146 = bitcast %union.anon* %36054 to i64*
  %36055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36056 = getelementptr inbounds %struct.GPR, %struct.GPR* %36055, i32 0, i32 15
  %36057 = getelementptr inbounds %struct.Reg, %struct.Reg* %36056, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %36057 to i64*
  %36058 = load i64, i64* %RBP.i147
  %36059 = sub i64 %36058, 28
  %36060 = load i64, i64* %PC.i145
  %36061 = add i64 %36060, 4
  store i64 %36061, i64* %PC.i145
  %36062 = inttoptr i64 %36059 to i32*
  %36063 = load i32, i32* %36062
  %36064 = sext i32 %36063 to i64
  store i64 %36064, i64* %RCX.i146, align 8
  store %struct.Memory* %loadMem_4ac283, %struct.Memory** %MEMORY
  %loadMem_4ac287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36066 = getelementptr inbounds %struct.GPR, %struct.GPR* %36065, i32 0, i32 33
  %36067 = getelementptr inbounds %struct.Reg, %struct.Reg* %36066, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %36067 to i64*
  %36068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36069 = getelementptr inbounds %struct.GPR, %struct.GPR* %36068, i32 0, i32 1
  %36070 = getelementptr inbounds %struct.Reg, %struct.Reg* %36069, i32 0, i32 0
  %RAX.i142 = bitcast %union.anon* %36070 to i64*
  %36071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36072 = getelementptr inbounds %struct.GPR, %struct.GPR* %36071, i32 0, i32 5
  %36073 = getelementptr inbounds %struct.Reg, %struct.Reg* %36072, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %36073 to i64*
  %36074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36075 = getelementptr inbounds %struct.GPR, %struct.GPR* %36074, i32 0, i32 7
  %36076 = getelementptr inbounds %struct.Reg, %struct.Reg* %36075, i32 0, i32 0
  %RDX.i144 = bitcast %union.anon* %36076 to i64*
  %36077 = load i64, i64* %RAX.i142
  %36078 = load i64, i64* %RCX.i143
  %36079 = mul i64 %36078, 4
  %36080 = add i64 %36079, %36077
  %36081 = load i64, i64* %PC.i141
  %36082 = add i64 %36081, 3
  store i64 %36082, i64* %PC.i141
  %36083 = inttoptr i64 %36080 to i32*
  %36084 = load i32, i32* %36083
  %36085 = zext i32 %36084 to i64
  store i64 %36085, i64* %RDX.i144, align 8
  store %struct.Memory* %loadMem_4ac287, %struct.Memory** %MEMORY
  %loadMem_4ac28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %36086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36087 = getelementptr inbounds %struct.GPR, %struct.GPR* %36086, i32 0, i32 33
  %36088 = getelementptr inbounds %struct.Reg, %struct.Reg* %36087, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %36088 to i64*
  %36089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36090 = getelementptr inbounds %struct.GPR, %struct.GPR* %36089, i32 0, i32 7
  %36091 = getelementptr inbounds %struct.Reg, %struct.Reg* %36090, i32 0, i32 0
  %RDX.i140 = bitcast %union.anon* %36091 to i64*
  %36092 = load i64, i64* %RDX.i140
  %36093 = load i64, i64* %PC.i139
  %36094 = add i64 %36093, 3
  store i64 %36094, i64* %PC.i139
  %36095 = trunc i64 %36092 to i32
  %36096 = add i32 32, %36095
  %36097 = zext i32 %36096 to i64
  store i64 %36097, i64* %RDX.i140, align 8
  %36098 = icmp ult i32 %36096, %36095
  %36099 = icmp ult i32 %36096, 32
  %36100 = or i1 %36098, %36099
  %36101 = zext i1 %36100 to i8
  %36102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36101, i8* %36102, align 1
  %36103 = and i32 %36096, 255
  %36104 = call i32 @llvm.ctpop.i32(i32 %36103)
  %36105 = trunc i32 %36104 to i8
  %36106 = and i8 %36105, 1
  %36107 = xor i8 %36106, 1
  %36108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36107, i8* %36108, align 1
  %36109 = xor i64 32, %36092
  %36110 = trunc i64 %36109 to i32
  %36111 = xor i32 %36110, %36096
  %36112 = lshr i32 %36111, 4
  %36113 = trunc i32 %36112 to i8
  %36114 = and i8 %36113, 1
  %36115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36114, i8* %36115, align 1
  %36116 = icmp eq i32 %36096, 0
  %36117 = zext i1 %36116 to i8
  %36118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36117, i8* %36118, align 1
  %36119 = lshr i32 %36096, 31
  %36120 = trunc i32 %36119 to i8
  %36121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36120, i8* %36121, align 1
  %36122 = lshr i32 %36095, 31
  %36123 = xor i32 %36119, %36122
  %36124 = add i32 %36123, %36119
  %36125 = icmp eq i32 %36124, 2
  %36126 = zext i1 %36125 to i8
  %36127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36126, i8* %36127, align 1
  store %struct.Memory* %loadMem_4ac28a, %struct.Memory** %MEMORY
  %loadMem_4ac28d = load %struct.Memory*, %struct.Memory** %MEMORY
  %36128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36129 = getelementptr inbounds %struct.GPR, %struct.GPR* %36128, i32 0, i32 33
  %36130 = getelementptr inbounds %struct.Reg, %struct.Reg* %36129, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %36130 to i64*
  %36131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36132 = getelementptr inbounds %struct.GPR, %struct.GPR* %36131, i32 0, i32 7
  %36133 = getelementptr inbounds %struct.Reg, %struct.Reg* %36132, i32 0, i32 0
  %RDX.i138 = bitcast %union.anon* %36133 to i64*
  %36134 = load i64, i64* %RDX.i138
  %36135 = load i64, i64* %PC.i137
  %36136 = add i64 %36135, 3
  store i64 %36136, i64* %PC.i137
  %36137 = shl i64 %36134, 32
  %36138 = ashr exact i64 %36137, 32
  %36139 = ashr i64 %36138, 5
  %36140 = lshr i64 %36139, 1
  %36141 = trunc i64 %36139 to i8
  %36142 = and i8 %36141, 1
  %36143 = trunc i64 %36140 to i32
  %36144 = and i64 %36140, 4294967295
  store i64 %36144, i64* %RDX.i138, align 8
  %36145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36142, i8* %36145, align 1
  %36146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %36147 = and i32 %36143, 255
  %36148 = call i32 @llvm.ctpop.i32(i32 %36147)
  %36149 = trunc i32 %36148 to i8
  %36150 = and i8 %36149, 1
  %36151 = xor i8 %36150, 1
  store i8 %36151, i8* %36146, align 1
  %36152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36152, align 1
  %36153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %36154 = icmp eq i32 %36143, 0
  %36155 = zext i1 %36154 to i8
  store i8 %36155, i8* %36153, align 1
  %36156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %36157 = lshr i32 %36143, 31
  %36158 = trunc i32 %36157 to i8
  store i8 %36158, i8* %36156, align 1
  %36159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36159, align 1
  store %struct.Memory* %loadMem_4ac28d, %struct.Memory** %MEMORY
  %loadMem_4ac290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36161 = getelementptr inbounds %struct.GPR, %struct.GPR* %36160, i32 0, i32 33
  %36162 = getelementptr inbounds %struct.Reg, %struct.Reg* %36161, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %36162 to i64*
  %36163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36164 = getelementptr inbounds %struct.GPR, %struct.GPR* %36163, i32 0, i32 1
  %36165 = getelementptr inbounds %struct.Reg, %struct.Reg* %36164, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %36165 to i64*
  %36166 = load i64, i64* %PC.i135
  %36167 = add i64 %36166, 8
  store i64 %36167, i64* %PC.i135
  %36168 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %36168, i64* %RAX.i136, align 8
  store %struct.Memory* %loadMem_4ac290, %struct.Memory** %MEMORY
  %loadMem_4ac298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36170 = getelementptr inbounds %struct.GPR, %struct.GPR* %36169, i32 0, i32 33
  %36171 = getelementptr inbounds %struct.Reg, %struct.Reg* %36170, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %36171 to i64*
  %36172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36173 = getelementptr inbounds %struct.GPR, %struct.GPR* %36172, i32 0, i32 1
  %36174 = getelementptr inbounds %struct.Reg, %struct.Reg* %36173, i32 0, i32 0
  %RAX.i134 = bitcast %union.anon* %36174 to i64*
  %36175 = load i64, i64* %RAX.i134
  %36176 = load i64, i64* %PC.i133
  %36177 = add i64 %36176, 6
  store i64 %36177, i64* %PC.i133
  %36178 = add i64 13112, %36175
  store i64 %36178, i64* %RAX.i134, align 8
  %36179 = icmp ult i64 %36178, %36175
  %36180 = icmp ult i64 %36178, 13112
  %36181 = or i1 %36179, %36180
  %36182 = zext i1 %36181 to i8
  %36183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36182, i8* %36183, align 1
  %36184 = trunc i64 %36178 to i32
  %36185 = and i32 %36184, 255
  %36186 = call i32 @llvm.ctpop.i32(i32 %36185)
  %36187 = trunc i32 %36186 to i8
  %36188 = and i8 %36187, 1
  %36189 = xor i8 %36188, 1
  %36190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36189, i8* %36190, align 1
  %36191 = xor i64 13112, %36175
  %36192 = xor i64 %36191, %36178
  %36193 = lshr i64 %36192, 4
  %36194 = trunc i64 %36193 to i8
  %36195 = and i8 %36194, 1
  %36196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36195, i8* %36196, align 1
  %36197 = icmp eq i64 %36178, 0
  %36198 = zext i1 %36197 to i8
  %36199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36198, i8* %36199, align 1
  %36200 = lshr i64 %36178, 63
  %36201 = trunc i64 %36200 to i8
  %36202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36201, i8* %36202, align 1
  %36203 = lshr i64 %36175, 63
  %36204 = xor i64 %36200, %36203
  %36205 = add i64 %36204, %36200
  %36206 = icmp eq i64 %36205, 2
  %36207 = zext i1 %36206 to i8
  %36208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36207, i8* %36208, align 1
  store %struct.Memory* %loadMem_4ac298, %struct.Memory** %MEMORY
  %loadMem_4ac29e = load %struct.Memory*, %struct.Memory** %MEMORY
  %36209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36210 = getelementptr inbounds %struct.GPR, %struct.GPR* %36209, i32 0, i32 33
  %36211 = getelementptr inbounds %struct.Reg, %struct.Reg* %36210, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %36211 to i64*
  %36212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36213 = getelementptr inbounds %struct.GPR, %struct.GPR* %36212, i32 0, i32 5
  %36214 = getelementptr inbounds %struct.Reg, %struct.Reg* %36213, i32 0, i32 0
  %RCX.i131 = bitcast %union.anon* %36214 to i64*
  %36215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36216 = getelementptr inbounds %struct.GPR, %struct.GPR* %36215, i32 0, i32 15
  %36217 = getelementptr inbounds %struct.Reg, %struct.Reg* %36216, i32 0, i32 0
  %RBP.i132 = bitcast %union.anon* %36217 to i64*
  %36218 = load i64, i64* %RBP.i132
  %36219 = sub i64 %36218, 24
  %36220 = load i64, i64* %PC.i130
  %36221 = add i64 %36220, 4
  store i64 %36221, i64* %PC.i130
  %36222 = inttoptr i64 %36219 to i32*
  %36223 = load i32, i32* %36222
  %36224 = sext i32 %36223 to i64
  store i64 %36224, i64* %RCX.i131, align 8
  store %struct.Memory* %loadMem_4ac29e, %struct.Memory** %MEMORY
  %loadMem_4ac2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36226 = getelementptr inbounds %struct.GPR, %struct.GPR* %36225, i32 0, i32 33
  %36227 = getelementptr inbounds %struct.Reg, %struct.Reg* %36226, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %36227 to i64*
  %36228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36229 = getelementptr inbounds %struct.GPR, %struct.GPR* %36228, i32 0, i32 5
  %36230 = getelementptr inbounds %struct.Reg, %struct.Reg* %36229, i32 0, i32 0
  %RCX.i129 = bitcast %union.anon* %36230 to i64*
  %36231 = load i64, i64* %RCX.i129
  %36232 = load i64, i64* %PC.i128
  %36233 = add i64 %36232, 4
  store i64 %36233, i64* %PC.i128
  %36234 = shl i64 %36231, 5
  %36235 = icmp slt i64 %36234, 0
  %36236 = shl i64 %36234, 1
  store i64 %36236, i64* %RCX.i129, align 8
  %36237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %36238 = zext i1 %36235 to i8
  store i8 %36238, i8* %36237, align 1
  %36239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %36240 = trunc i64 %36236 to i32
  %36241 = and i32 %36240, 254
  %36242 = call i32 @llvm.ctpop.i32(i32 %36241)
  %36243 = trunc i32 %36242 to i8
  %36244 = and i8 %36243, 1
  %36245 = xor i8 %36244, 1
  store i8 %36245, i8* %36239, align 1
  %36246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36246, align 1
  %36247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %36248 = icmp eq i64 %36236, 0
  %36249 = zext i1 %36248 to i8
  store i8 %36249, i8* %36247, align 1
  %36250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %36251 = lshr i64 %36236, 63
  %36252 = trunc i64 %36251 to i8
  store i8 %36252, i8* %36250, align 1
  %36253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36253, align 1
  store %struct.Memory* %loadMem_4ac2a2, %struct.Memory** %MEMORY
  %loadMem_4ac2a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36255 = getelementptr inbounds %struct.GPR, %struct.GPR* %36254, i32 0, i32 33
  %36256 = getelementptr inbounds %struct.Reg, %struct.Reg* %36255, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %36256 to i64*
  %36257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36258 = getelementptr inbounds %struct.GPR, %struct.GPR* %36257, i32 0, i32 1
  %36259 = getelementptr inbounds %struct.Reg, %struct.Reg* %36258, i32 0, i32 0
  %RAX.i126 = bitcast %union.anon* %36259 to i64*
  %36260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36261 = getelementptr inbounds %struct.GPR, %struct.GPR* %36260, i32 0, i32 5
  %36262 = getelementptr inbounds %struct.Reg, %struct.Reg* %36261, i32 0, i32 0
  %RCX.i127 = bitcast %union.anon* %36262 to i64*
  %36263 = load i64, i64* %RAX.i126
  %36264 = load i64, i64* %RCX.i127
  %36265 = load i64, i64* %PC.i125
  %36266 = add i64 %36265, 3
  store i64 %36266, i64* %PC.i125
  %36267 = add i64 %36264, %36263
  store i64 %36267, i64* %RAX.i126, align 8
  %36268 = icmp ult i64 %36267, %36263
  %36269 = icmp ult i64 %36267, %36264
  %36270 = or i1 %36268, %36269
  %36271 = zext i1 %36270 to i8
  %36272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36271, i8* %36272, align 1
  %36273 = trunc i64 %36267 to i32
  %36274 = and i32 %36273, 255
  %36275 = call i32 @llvm.ctpop.i32(i32 %36274)
  %36276 = trunc i32 %36275 to i8
  %36277 = and i8 %36276, 1
  %36278 = xor i8 %36277, 1
  %36279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36278, i8* %36279, align 1
  %36280 = xor i64 %36264, %36263
  %36281 = xor i64 %36280, %36267
  %36282 = lshr i64 %36281, 4
  %36283 = trunc i64 %36282 to i8
  %36284 = and i8 %36283, 1
  %36285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36284, i8* %36285, align 1
  %36286 = icmp eq i64 %36267, 0
  %36287 = zext i1 %36286 to i8
  %36288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36287, i8* %36288, align 1
  %36289 = lshr i64 %36267, 63
  %36290 = trunc i64 %36289 to i8
  %36291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36290, i8* %36291, align 1
  %36292 = lshr i64 %36263, 63
  %36293 = lshr i64 %36264, 63
  %36294 = xor i64 %36289, %36292
  %36295 = xor i64 %36289, %36293
  %36296 = add i64 %36294, %36295
  %36297 = icmp eq i64 %36296, 2
  %36298 = zext i1 %36297 to i8
  %36299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36298, i8* %36299, align 1
  store %struct.Memory* %loadMem_4ac2a6, %struct.Memory** %MEMORY
  %loadMem_4ac2a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36301 = getelementptr inbounds %struct.GPR, %struct.GPR* %36300, i32 0, i32 33
  %36302 = getelementptr inbounds %struct.Reg, %struct.Reg* %36301, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %36302 to i64*
  %36303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36304 = getelementptr inbounds %struct.GPR, %struct.GPR* %36303, i32 0, i32 5
  %36305 = getelementptr inbounds %struct.Reg, %struct.Reg* %36304, i32 0, i32 0
  %RCX.i123 = bitcast %union.anon* %36305 to i64*
  %36306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36307 = getelementptr inbounds %struct.GPR, %struct.GPR* %36306, i32 0, i32 15
  %36308 = getelementptr inbounds %struct.Reg, %struct.Reg* %36307, i32 0, i32 0
  %RBP.i124 = bitcast %union.anon* %36308 to i64*
  %36309 = load i64, i64* %RBP.i124
  %36310 = sub i64 %36309, 28
  %36311 = load i64, i64* %PC.i122
  %36312 = add i64 %36311, 4
  store i64 %36312, i64* %PC.i122
  %36313 = inttoptr i64 %36310 to i32*
  %36314 = load i32, i32* %36313
  %36315 = sext i32 %36314 to i64
  store i64 %36315, i64* %RCX.i123, align 8
  store %struct.Memory* %loadMem_4ac2a9, %struct.Memory** %MEMORY
  %loadMem_4ac2ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %36316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36317 = getelementptr inbounds %struct.GPR, %struct.GPR* %36316, i32 0, i32 33
  %36318 = getelementptr inbounds %struct.Reg, %struct.Reg* %36317, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %36318 to i64*
  %36319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36320 = getelementptr inbounds %struct.GPR, %struct.GPR* %36319, i32 0, i32 7
  %36321 = getelementptr inbounds %struct.Reg, %struct.Reg* %36320, i32 0, i32 0
  %EDX.i119 = bitcast %union.anon* %36321 to i32*
  %36322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36323 = getelementptr inbounds %struct.GPR, %struct.GPR* %36322, i32 0, i32 1
  %36324 = getelementptr inbounds %struct.Reg, %struct.Reg* %36323, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %36324 to i64*
  %36325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36326 = getelementptr inbounds %struct.GPR, %struct.GPR* %36325, i32 0, i32 5
  %36327 = getelementptr inbounds %struct.Reg, %struct.Reg* %36326, i32 0, i32 0
  %RCX.i121 = bitcast %union.anon* %36327 to i64*
  %36328 = load i64, i64* %RAX.i120
  %36329 = load i64, i64* %RCX.i121
  %36330 = mul i64 %36329, 4
  %36331 = add i64 %36330, %36328
  %36332 = load i32, i32* %EDX.i119
  %36333 = zext i32 %36332 to i64
  %36334 = load i64, i64* %PC.i118
  %36335 = add i64 %36334, 3
  store i64 %36335, i64* %PC.i118
  %36336 = inttoptr i64 %36331 to i32*
  store i32 %36332, i32* %36336
  store %struct.Memory* %loadMem_4ac2ad, %struct.Memory** %MEMORY
  br label %block_.L_4ac2b0

block_.L_4ac2b0:                                  ; preds = %block_.L_4ac26a, %block_.L_4ac23c
  %loadMem_4ac2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36338 = getelementptr inbounds %struct.GPR, %struct.GPR* %36337, i32 0, i32 33
  %36339 = getelementptr inbounds %struct.Reg, %struct.Reg* %36338, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %36339 to i64*
  %36340 = load i64, i64* %PC.i117
  %36341 = add i64 %36340, 5
  %36342 = load i64, i64* %PC.i117
  %36343 = add i64 %36342, 5
  store i64 %36343, i64* %PC.i117
  %36344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %36341, i64* %36344, align 8
  store %struct.Memory* %loadMem_4ac2b0, %struct.Memory** %MEMORY
  br label %block_.L_4ac2b5

block_.L_4ac2b5:                                  ; preds = %block_.L_4ac2b0, %block_4abf9c
  %loadMem_4ac2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36346 = getelementptr inbounds %struct.GPR, %struct.GPR* %36345, i32 0, i32 33
  %36347 = getelementptr inbounds %struct.Reg, %struct.Reg* %36346, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %36347 to i64*
  %36348 = load i64, i64* %PC.i116
  %36349 = add i64 %36348, 5
  %36350 = load i64, i64* %PC.i116
  %36351 = add i64 %36350, 5
  store i64 %36351, i64* %PC.i116
  %36352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %36349, i64* %36352, align 8
  store %struct.Memory* %loadMem_4ac2b5, %struct.Memory** %MEMORY
  br label %block_.L_4ac2ba

block_.L_4ac2ba:                                  ; preds = %block_.L_4ac2b5
  %loadMem_4ac2ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %36353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36354 = getelementptr inbounds %struct.GPR, %struct.GPR* %36353, i32 0, i32 33
  %36355 = getelementptr inbounds %struct.Reg, %struct.Reg* %36354, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %36355 to i64*
  %36356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36357 = getelementptr inbounds %struct.GPR, %struct.GPR* %36356, i32 0, i32 1
  %36358 = getelementptr inbounds %struct.Reg, %struct.Reg* %36357, i32 0, i32 0
  %RAX.i114 = bitcast %union.anon* %36358 to i64*
  %36359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36360 = getelementptr inbounds %struct.GPR, %struct.GPR* %36359, i32 0, i32 15
  %36361 = getelementptr inbounds %struct.Reg, %struct.Reg* %36360, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %36361 to i64*
  %36362 = load i64, i64* %RBP.i115
  %36363 = sub i64 %36362, 28
  %36364 = load i64, i64* %PC.i113
  %36365 = add i64 %36364, 3
  store i64 %36365, i64* %PC.i113
  %36366 = inttoptr i64 %36363 to i32*
  %36367 = load i32, i32* %36366
  %36368 = zext i32 %36367 to i64
  store i64 %36368, i64* %RAX.i114, align 8
  store %struct.Memory* %loadMem_4ac2ba, %struct.Memory** %MEMORY
  %loadMem_4ac2bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %36369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36370 = getelementptr inbounds %struct.GPR, %struct.GPR* %36369, i32 0, i32 33
  %36371 = getelementptr inbounds %struct.Reg, %struct.Reg* %36370, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %36371 to i64*
  %36372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36373 = getelementptr inbounds %struct.GPR, %struct.GPR* %36372, i32 0, i32 1
  %36374 = getelementptr inbounds %struct.Reg, %struct.Reg* %36373, i32 0, i32 0
  %RAX.i112 = bitcast %union.anon* %36374 to i64*
  %36375 = load i64, i64* %RAX.i112
  %36376 = load i64, i64* %PC.i111
  %36377 = add i64 %36376, 3
  store i64 %36377, i64* %PC.i111
  %36378 = trunc i64 %36375 to i32
  %36379 = add i32 1, %36378
  %36380 = zext i32 %36379 to i64
  store i64 %36380, i64* %RAX.i112, align 8
  %36381 = icmp ult i32 %36379, %36378
  %36382 = icmp ult i32 %36379, 1
  %36383 = or i1 %36381, %36382
  %36384 = zext i1 %36383 to i8
  %36385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36384, i8* %36385, align 1
  %36386 = and i32 %36379, 255
  %36387 = call i32 @llvm.ctpop.i32(i32 %36386)
  %36388 = trunc i32 %36387 to i8
  %36389 = and i8 %36388, 1
  %36390 = xor i8 %36389, 1
  %36391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36390, i8* %36391, align 1
  %36392 = xor i64 1, %36375
  %36393 = trunc i64 %36392 to i32
  %36394 = xor i32 %36393, %36379
  %36395 = lshr i32 %36394, 4
  %36396 = trunc i32 %36395 to i8
  %36397 = and i8 %36396, 1
  %36398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36397, i8* %36398, align 1
  %36399 = icmp eq i32 %36379, 0
  %36400 = zext i1 %36399 to i8
  %36401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36400, i8* %36401, align 1
  %36402 = lshr i32 %36379, 31
  %36403 = trunc i32 %36402 to i8
  %36404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36403, i8* %36404, align 1
  %36405 = lshr i32 %36378, 31
  %36406 = xor i32 %36402, %36405
  %36407 = add i32 %36406, %36402
  %36408 = icmp eq i32 %36407, 2
  %36409 = zext i1 %36408 to i8
  %36410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36409, i8* %36410, align 1
  store %struct.Memory* %loadMem_4ac2bd, %struct.Memory** %MEMORY
  %loadMem_4ac2c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36412 = getelementptr inbounds %struct.GPR, %struct.GPR* %36411, i32 0, i32 33
  %36413 = getelementptr inbounds %struct.Reg, %struct.Reg* %36412, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %36413 to i64*
  %36414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36415 = getelementptr inbounds %struct.GPR, %struct.GPR* %36414, i32 0, i32 1
  %36416 = getelementptr inbounds %struct.Reg, %struct.Reg* %36415, i32 0, i32 0
  %EAX.i109 = bitcast %union.anon* %36416 to i32*
  %36417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36418 = getelementptr inbounds %struct.GPR, %struct.GPR* %36417, i32 0, i32 15
  %36419 = getelementptr inbounds %struct.Reg, %struct.Reg* %36418, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %36419 to i64*
  %36420 = load i64, i64* %RBP.i110
  %36421 = sub i64 %36420, 28
  %36422 = load i32, i32* %EAX.i109
  %36423 = zext i32 %36422 to i64
  %36424 = load i64, i64* %PC.i108
  %36425 = add i64 %36424, 3
  store i64 %36425, i64* %PC.i108
  %36426 = inttoptr i64 %36421 to i32*
  store i32 %36422, i32* %36426
  store %struct.Memory* %loadMem_4ac2c0, %struct.Memory** %MEMORY
  %loadMem_4ac2c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36428 = getelementptr inbounds %struct.GPR, %struct.GPR* %36427, i32 0, i32 33
  %36429 = getelementptr inbounds %struct.Reg, %struct.Reg* %36428, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %36429 to i64*
  %36430 = load i64, i64* %PC.i107
  %36431 = add i64 %36430, -830
  %36432 = load i64, i64* %PC.i107
  %36433 = add i64 %36432, 5
  store i64 %36433, i64* %PC.i107
  %36434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %36431, i64* %36434, align 8
  store %struct.Memory* %loadMem_4ac2c3, %struct.Memory** %MEMORY
  br label %block_.L_4abf85

block_.L_4ac2c8:                                  ; preds = %block_.L_4abf85
  %loadMem_4ac2c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36436 = getelementptr inbounds %struct.GPR, %struct.GPR* %36435, i32 0, i32 33
  %36437 = getelementptr inbounds %struct.Reg, %struct.Reg* %36436, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %36437 to i64*
  %36438 = load i64, i64* %PC.i106
  %36439 = add i64 %36438, 5
  %36440 = load i64, i64* %PC.i106
  %36441 = add i64 %36440, 5
  store i64 %36441, i64* %PC.i106
  %36442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %36439, i64* %36442, align 8
  store %struct.Memory* %loadMem_4ac2c8, %struct.Memory** %MEMORY
  br label %block_.L_4ac2cd

block_.L_4ac2cd:                                  ; preds = %block_.L_4ac2c8
  %loadMem_4ac2cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %36443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36444 = getelementptr inbounds %struct.GPR, %struct.GPR* %36443, i32 0, i32 33
  %36445 = getelementptr inbounds %struct.Reg, %struct.Reg* %36444, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %36445 to i64*
  %36446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36447 = getelementptr inbounds %struct.GPR, %struct.GPR* %36446, i32 0, i32 1
  %36448 = getelementptr inbounds %struct.Reg, %struct.Reg* %36447, i32 0, i32 0
  %RAX.i104 = bitcast %union.anon* %36448 to i64*
  %36449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36450 = getelementptr inbounds %struct.GPR, %struct.GPR* %36449, i32 0, i32 15
  %36451 = getelementptr inbounds %struct.Reg, %struct.Reg* %36450, i32 0, i32 0
  %RBP.i105 = bitcast %union.anon* %36451 to i64*
  %36452 = load i64, i64* %RBP.i105
  %36453 = sub i64 %36452, 24
  %36454 = load i64, i64* %PC.i103
  %36455 = add i64 %36454, 3
  store i64 %36455, i64* %PC.i103
  %36456 = inttoptr i64 %36453 to i32*
  %36457 = load i32, i32* %36456
  %36458 = zext i32 %36457 to i64
  store i64 %36458, i64* %RAX.i104, align 8
  store %struct.Memory* %loadMem_4ac2cd, %struct.Memory** %MEMORY
  %loadMem_4ac2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36460 = getelementptr inbounds %struct.GPR, %struct.GPR* %36459, i32 0, i32 33
  %36461 = getelementptr inbounds %struct.Reg, %struct.Reg* %36460, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %36461 to i64*
  %36462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36463 = getelementptr inbounds %struct.GPR, %struct.GPR* %36462, i32 0, i32 1
  %36464 = getelementptr inbounds %struct.Reg, %struct.Reg* %36463, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %36464 to i64*
  %36465 = load i64, i64* %RAX.i102
  %36466 = load i64, i64* %PC.i101
  %36467 = add i64 %36466, 3
  store i64 %36467, i64* %PC.i101
  %36468 = trunc i64 %36465 to i32
  %36469 = add i32 1, %36468
  %36470 = zext i32 %36469 to i64
  store i64 %36470, i64* %RAX.i102, align 8
  %36471 = icmp ult i32 %36469, %36468
  %36472 = icmp ult i32 %36469, 1
  %36473 = or i1 %36471, %36472
  %36474 = zext i1 %36473 to i8
  %36475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36474, i8* %36475, align 1
  %36476 = and i32 %36469, 255
  %36477 = call i32 @llvm.ctpop.i32(i32 %36476)
  %36478 = trunc i32 %36477 to i8
  %36479 = and i8 %36478, 1
  %36480 = xor i8 %36479, 1
  %36481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36480, i8* %36481, align 1
  %36482 = xor i64 1, %36465
  %36483 = trunc i64 %36482 to i32
  %36484 = xor i32 %36483, %36469
  %36485 = lshr i32 %36484, 4
  %36486 = trunc i32 %36485 to i8
  %36487 = and i8 %36486, 1
  %36488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36487, i8* %36488, align 1
  %36489 = icmp eq i32 %36469, 0
  %36490 = zext i1 %36489 to i8
  %36491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36490, i8* %36491, align 1
  %36492 = lshr i32 %36469, 31
  %36493 = trunc i32 %36492 to i8
  %36494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36493, i8* %36494, align 1
  %36495 = lshr i32 %36468, 31
  %36496 = xor i32 %36492, %36495
  %36497 = add i32 %36496, %36492
  %36498 = icmp eq i32 %36497, 2
  %36499 = zext i1 %36498 to i8
  %36500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36499, i8* %36500, align 1
  store %struct.Memory* %loadMem_4ac2d0, %struct.Memory** %MEMORY
  %loadMem_4ac2d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36502 = getelementptr inbounds %struct.GPR, %struct.GPR* %36501, i32 0, i32 33
  %36503 = getelementptr inbounds %struct.Reg, %struct.Reg* %36502, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %36503 to i64*
  %36504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36505 = getelementptr inbounds %struct.GPR, %struct.GPR* %36504, i32 0, i32 1
  %36506 = getelementptr inbounds %struct.Reg, %struct.Reg* %36505, i32 0, i32 0
  %EAX.i99 = bitcast %union.anon* %36506 to i32*
  %36507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36508 = getelementptr inbounds %struct.GPR, %struct.GPR* %36507, i32 0, i32 15
  %36509 = getelementptr inbounds %struct.Reg, %struct.Reg* %36508, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %36509 to i64*
  %36510 = load i64, i64* %RBP.i100
  %36511 = sub i64 %36510, 24
  %36512 = load i32, i32* %EAX.i99
  %36513 = zext i32 %36512 to i64
  %36514 = load i64, i64* %PC.i98
  %36515 = add i64 %36514, 3
  store i64 %36515, i64* %PC.i98
  %36516 = inttoptr i64 %36511 to i32*
  store i32 %36512, i32* %36516
  store %struct.Memory* %loadMem_4ac2d3, %struct.Memory** %MEMORY
  %loadMem_4ac2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36518 = getelementptr inbounds %struct.GPR, %struct.GPR* %36517, i32 0, i32 33
  %36519 = getelementptr inbounds %struct.Reg, %struct.Reg* %36518, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %36519 to i64*
  %36520 = load i64, i64* %PC.i97
  %36521 = add i64 %36520, -866
  %36522 = load i64, i64* %PC.i97
  %36523 = add i64 %36522, 5
  store i64 %36523, i64* %PC.i97
  %36524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %36521, i64* %36524, align 8
  store %struct.Memory* %loadMem_4ac2d6, %struct.Memory** %MEMORY
  br label %block_.L_4abf74

block_.L_4ac2db:                                  ; preds = %block_.L_4abf74
  %loadMem_4ac2db = load %struct.Memory*, %struct.Memory** %MEMORY
  %36525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36526 = getelementptr inbounds %struct.GPR, %struct.GPR* %36525, i32 0, i32 33
  %36527 = getelementptr inbounds %struct.Reg, %struct.Reg* %36526, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %36527 to i64*
  %36528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36529 = getelementptr inbounds %struct.GPR, %struct.GPR* %36528, i32 0, i32 1
  %36530 = getelementptr inbounds %struct.Reg, %struct.Reg* %36529, i32 0, i32 0
  %RAX.i96 = bitcast %union.anon* %36530 to i64*
  %36531 = load i64, i64* %PC.i95
  %36532 = add i64 %36531, 8
  store i64 %36532, i64* %PC.i95
  %36533 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %36533, i64* %RAX.i96, align 8
  store %struct.Memory* %loadMem_4ac2db, %struct.Memory** %MEMORY
  %loadMem_4ac2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36535 = getelementptr inbounds %struct.GPR, %struct.GPR* %36534, i32 0, i32 33
  %36536 = getelementptr inbounds %struct.Reg, %struct.Reg* %36535, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %36536 to i64*
  %36537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36538 = getelementptr inbounds %struct.GPR, %struct.GPR* %36537, i32 0, i32 1
  %36539 = getelementptr inbounds %struct.Reg, %struct.Reg* %36538, i32 0, i32 0
  %RAX.i94 = bitcast %union.anon* %36539 to i64*
  %36540 = load i64, i64* %RAX.i94
  %36541 = add i64 %36540, 72724
  %36542 = load i64, i64* %PC.i93
  %36543 = add i64 %36542, 7
  store i64 %36543, i64* %PC.i93
  %36544 = inttoptr i64 %36541 to i32*
  %36545 = load i32, i32* %36544
  %36546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %36546, align 1
  %36547 = and i32 %36545, 255
  %36548 = call i32 @llvm.ctpop.i32(i32 %36547)
  %36549 = trunc i32 %36548 to i8
  %36550 = and i8 %36549, 1
  %36551 = xor i8 %36550, 1
  %36552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36551, i8* %36552, align 1
  %36553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36553, align 1
  %36554 = icmp eq i32 %36545, 0
  %36555 = zext i1 %36554 to i8
  %36556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36555, i8* %36556, align 1
  %36557 = lshr i32 %36545, 31
  %36558 = trunc i32 %36557 to i8
  %36559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36558, i8* %36559, align 1
  %36560 = lshr i32 %36545, 31
  %36561 = xor i32 %36557, %36560
  %36562 = add i32 %36561, %36560
  %36563 = icmp eq i32 %36562, 2
  %36564 = zext i1 %36563 to i8
  %36565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36564, i8* %36565, align 1
  store %struct.Memory* %loadMem_4ac2e3, %struct.Memory** %MEMORY
  %loadMem_4ac2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %36566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36567 = getelementptr inbounds %struct.GPR, %struct.GPR* %36566, i32 0, i32 33
  %36568 = getelementptr inbounds %struct.Reg, %struct.Reg* %36567, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %36568 to i64*
  %36569 = load i64, i64* %PC.i92
  %36570 = add i64 %36569, 182
  %36571 = load i64, i64* %PC.i92
  %36572 = add i64 %36571, 6
  %36573 = load i64, i64* %PC.i92
  %36574 = add i64 %36573, 6
  store i64 %36574, i64* %PC.i92
  %36575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %36576 = load i8, i8* %36575, align 1
  %36577 = icmp eq i8 %36576, 0
  %36578 = zext i1 %36577 to i8
  store i8 %36578, i8* %BRANCH_TAKEN, align 1
  %36579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %36580 = select i1 %36577, i64 %36570, i64 %36572
  store i64 %36580, i64* %36579, align 8
  store %struct.Memory* %loadMem_4ac2ea, %struct.Memory** %MEMORY
  %loadBr_4ac2ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ac2ea = icmp eq i8 %loadBr_4ac2ea, 1
  br i1 %cmpBr_4ac2ea, label %block_.L_4ac3a0, label %block_4ac2f0

block_4ac2f0:                                     ; preds = %block_.L_4ac2db
  %loadMem_4ac2f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36582 = getelementptr inbounds %struct.GPR, %struct.GPR* %36581, i32 0, i32 33
  %36583 = getelementptr inbounds %struct.Reg, %struct.Reg* %36582, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %36583 to i64*
  %36584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36585 = getelementptr inbounds %struct.GPR, %struct.GPR* %36584, i32 0, i32 15
  %36586 = getelementptr inbounds %struct.Reg, %struct.Reg* %36585, i32 0, i32 0
  %RBP.i91 = bitcast %union.anon* %36586 to i64*
  %36587 = load i64, i64* %RBP.i91
  %36588 = sub i64 %36587, 28
  %36589 = load i64, i64* %PC.i90
  %36590 = add i64 %36589, 7
  store i64 %36590, i64* %PC.i90
  %36591 = inttoptr i64 %36588 to i32*
  store i32 0, i32* %36591
  store %struct.Memory* %loadMem_4ac2f0, %struct.Memory** %MEMORY
  br label %block_.L_4ac2f7

block_.L_4ac2f7:                                  ; preds = %block_.L_4ac38d, %block_4ac2f0
  %loadMem_4ac2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36593 = getelementptr inbounds %struct.GPR, %struct.GPR* %36592, i32 0, i32 33
  %36594 = getelementptr inbounds %struct.Reg, %struct.Reg* %36593, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %36594 to i64*
  %36595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36596 = getelementptr inbounds %struct.GPR, %struct.GPR* %36595, i32 0, i32 15
  %36597 = getelementptr inbounds %struct.Reg, %struct.Reg* %36596, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %36597 to i64*
  %36598 = load i64, i64* %RBP.i89
  %36599 = sub i64 %36598, 28
  %36600 = load i64, i64* %PC.i88
  %36601 = add i64 %36600, 4
  store i64 %36601, i64* %PC.i88
  %36602 = inttoptr i64 %36599 to i32*
  %36603 = load i32, i32* %36602
  %36604 = sub i32 %36603, 8
  %36605 = icmp ult i32 %36603, 8
  %36606 = zext i1 %36605 to i8
  %36607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36606, i8* %36607, align 1
  %36608 = and i32 %36604, 255
  %36609 = call i32 @llvm.ctpop.i32(i32 %36608)
  %36610 = trunc i32 %36609 to i8
  %36611 = and i8 %36610, 1
  %36612 = xor i8 %36611, 1
  %36613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36612, i8* %36613, align 1
  %36614 = xor i32 %36603, 8
  %36615 = xor i32 %36614, %36604
  %36616 = lshr i32 %36615, 4
  %36617 = trunc i32 %36616 to i8
  %36618 = and i8 %36617, 1
  %36619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36618, i8* %36619, align 1
  %36620 = icmp eq i32 %36604, 0
  %36621 = zext i1 %36620 to i8
  %36622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36621, i8* %36622, align 1
  %36623 = lshr i32 %36604, 31
  %36624 = trunc i32 %36623 to i8
  %36625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36624, i8* %36625, align 1
  %36626 = lshr i32 %36603, 31
  %36627 = xor i32 %36623, %36626
  %36628 = add i32 %36627, %36626
  %36629 = icmp eq i32 %36628, 2
  %36630 = zext i1 %36629 to i8
  %36631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36630, i8* %36631, align 1
  store %struct.Memory* %loadMem_4ac2f7, %struct.Memory** %MEMORY
  %loadMem_4ac2fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %36632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36633 = getelementptr inbounds %struct.GPR, %struct.GPR* %36632, i32 0, i32 33
  %36634 = getelementptr inbounds %struct.Reg, %struct.Reg* %36633, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %36634 to i64*
  %36635 = load i64, i64* %PC.i87
  %36636 = add i64 %36635, 160
  %36637 = load i64, i64* %PC.i87
  %36638 = add i64 %36637, 6
  %36639 = load i64, i64* %PC.i87
  %36640 = add i64 %36639, 6
  store i64 %36640, i64* %PC.i87
  %36641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %36642 = load i8, i8* %36641, align 1
  %36643 = icmp ne i8 %36642, 0
  %36644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %36645 = load i8, i8* %36644, align 1
  %36646 = icmp ne i8 %36645, 0
  %36647 = xor i1 %36643, %36646
  %36648 = xor i1 %36647, true
  %36649 = zext i1 %36648 to i8
  store i8 %36649, i8* %BRANCH_TAKEN, align 1
  %36650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %36651 = select i1 %36647, i64 %36638, i64 %36636
  store i64 %36651, i64* %36650, align 8
  store %struct.Memory* %loadMem_4ac2fb, %struct.Memory** %MEMORY
  %loadBr_4ac2fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ac2fb = icmp eq i8 %loadBr_4ac2fb, 1
  br i1 %cmpBr_4ac2fb, label %block_.L_4ac39b, label %block_4ac301

block_4ac301:                                     ; preds = %block_.L_4ac2f7
  %loadMem_4ac301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36653 = getelementptr inbounds %struct.GPR, %struct.GPR* %36652, i32 0, i32 33
  %36654 = getelementptr inbounds %struct.Reg, %struct.Reg* %36653, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %36654 to i64*
  %36655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36656 = getelementptr inbounds %struct.GPR, %struct.GPR* %36655, i32 0, i32 15
  %36657 = getelementptr inbounds %struct.Reg, %struct.Reg* %36656, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %36657 to i64*
  %36658 = load i64, i64* %RBP.i86
  %36659 = sub i64 %36658, 24
  %36660 = load i64, i64* %PC.i85
  %36661 = add i64 %36660, 7
  store i64 %36661, i64* %PC.i85
  %36662 = inttoptr i64 %36659 to i32*
  store i32 0, i32* %36662
  store %struct.Memory* %loadMem_4ac301, %struct.Memory** %MEMORY
  br label %block_.L_4ac308

block_.L_4ac308:                                  ; preds = %block_4ac312, %block_4ac301
  %loadMem_4ac308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36664 = getelementptr inbounds %struct.GPR, %struct.GPR* %36663, i32 0, i32 33
  %36665 = getelementptr inbounds %struct.Reg, %struct.Reg* %36664, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %36665 to i64*
  %36666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36667 = getelementptr inbounds %struct.GPR, %struct.GPR* %36666, i32 0, i32 15
  %36668 = getelementptr inbounds %struct.Reg, %struct.Reg* %36667, i32 0, i32 0
  %RBP.i84 = bitcast %union.anon* %36668 to i64*
  %36669 = load i64, i64* %RBP.i84
  %36670 = sub i64 %36669, 24
  %36671 = load i64, i64* %PC.i83
  %36672 = add i64 %36671, 4
  store i64 %36672, i64* %PC.i83
  %36673 = inttoptr i64 %36670 to i32*
  %36674 = load i32, i32* %36673
  %36675 = sub i32 %36674, 8
  %36676 = icmp ult i32 %36674, 8
  %36677 = zext i1 %36676 to i8
  %36678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36677, i8* %36678, align 1
  %36679 = and i32 %36675, 255
  %36680 = call i32 @llvm.ctpop.i32(i32 %36679)
  %36681 = trunc i32 %36680 to i8
  %36682 = and i8 %36681, 1
  %36683 = xor i8 %36682, 1
  %36684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36683, i8* %36684, align 1
  %36685 = xor i32 %36674, 8
  %36686 = xor i32 %36685, %36675
  %36687 = lshr i32 %36686, 4
  %36688 = trunc i32 %36687 to i8
  %36689 = and i8 %36688, 1
  %36690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36689, i8* %36690, align 1
  %36691 = icmp eq i32 %36675, 0
  %36692 = zext i1 %36691 to i8
  %36693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36692, i8* %36693, align 1
  %36694 = lshr i32 %36675, 31
  %36695 = trunc i32 %36694 to i8
  %36696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36695, i8* %36696, align 1
  %36697 = lshr i32 %36674, 31
  %36698 = xor i32 %36694, %36697
  %36699 = add i32 %36698, %36697
  %36700 = icmp eq i32 %36699, 2
  %36701 = zext i1 %36700 to i8
  %36702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36701, i8* %36702, align 1
  store %struct.Memory* %loadMem_4ac308, %struct.Memory** %MEMORY
  %loadMem_4ac30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %36703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36704 = getelementptr inbounds %struct.GPR, %struct.GPR* %36703, i32 0, i32 33
  %36705 = getelementptr inbounds %struct.Reg, %struct.Reg* %36704, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %36705 to i64*
  %36706 = load i64, i64* %PC.i82
  %36707 = add i64 %36706, 124
  %36708 = load i64, i64* %PC.i82
  %36709 = add i64 %36708, 6
  %36710 = load i64, i64* %PC.i82
  %36711 = add i64 %36710, 6
  store i64 %36711, i64* %PC.i82
  %36712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %36713 = load i8, i8* %36712, align 1
  %36714 = icmp ne i8 %36713, 0
  %36715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %36716 = load i8, i8* %36715, align 1
  %36717 = icmp ne i8 %36716, 0
  %36718 = xor i1 %36714, %36717
  %36719 = xor i1 %36718, true
  %36720 = zext i1 %36719 to i8
  store i8 %36720, i8* %BRANCH_TAKEN, align 1
  %36721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %36722 = select i1 %36718, i64 %36709, i64 %36707
  store i64 %36722, i64* %36721, align 8
  store %struct.Memory* %loadMem_4ac30c, %struct.Memory** %MEMORY
  %loadBr_4ac30c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4ac30c = icmp eq i8 %loadBr_4ac30c, 1
  br i1 %cmpBr_4ac30c, label %block_.L_4ac388, label %block_4ac312

block_4ac312:                                     ; preds = %block_.L_4ac308
  %loadMem_4ac312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36724 = getelementptr inbounds %struct.GPR, %struct.GPR* %36723, i32 0, i32 33
  %36725 = getelementptr inbounds %struct.Reg, %struct.Reg* %36724, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %36725 to i64*
  %36726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36727 = getelementptr inbounds %struct.GPR, %struct.GPR* %36726, i32 0, i32 1
  %36728 = getelementptr inbounds %struct.Reg, %struct.Reg* %36727, i32 0, i32 0
  %RAX.i81 = bitcast %union.anon* %36728 to i64*
  %36729 = load i64, i64* %PC.i80
  %36730 = add i64 %36729, 8
  store i64 %36730, i64* %PC.i80
  %36731 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %36731, i64* %RAX.i81, align 8
  store %struct.Memory* %loadMem_4ac312, %struct.Memory** %MEMORY
  %loadMem_4ac31a = load %struct.Memory*, %struct.Memory** %MEMORY
  %36732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36733 = getelementptr inbounds %struct.GPR, %struct.GPR* %36732, i32 0, i32 33
  %36734 = getelementptr inbounds %struct.Reg, %struct.Reg* %36733, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %36734 to i64*
  %36735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36736 = getelementptr inbounds %struct.GPR, %struct.GPR* %36735, i32 0, i32 1
  %36737 = getelementptr inbounds %struct.Reg, %struct.Reg* %36736, i32 0, i32 0
  %RAX.i79 = bitcast %union.anon* %36737 to i64*
  %36738 = load i64, i64* %RAX.i79
  %36739 = load i64, i64* %PC.i78
  %36740 = add i64 %36739, 6
  store i64 %36740, i64* %PC.i78
  %36741 = add i64 13112, %36738
  store i64 %36741, i64* %RAX.i79, align 8
  %36742 = icmp ult i64 %36741, %36738
  %36743 = icmp ult i64 %36741, 13112
  %36744 = or i1 %36742, %36743
  %36745 = zext i1 %36744 to i8
  %36746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36745, i8* %36746, align 1
  %36747 = trunc i64 %36741 to i32
  %36748 = and i32 %36747, 255
  %36749 = call i32 @llvm.ctpop.i32(i32 %36748)
  %36750 = trunc i32 %36749 to i8
  %36751 = and i8 %36750, 1
  %36752 = xor i8 %36751, 1
  %36753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36752, i8* %36753, align 1
  %36754 = xor i64 13112, %36738
  %36755 = xor i64 %36754, %36741
  %36756 = lshr i64 %36755, 4
  %36757 = trunc i64 %36756 to i8
  %36758 = and i8 %36757, 1
  %36759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36758, i8* %36759, align 1
  %36760 = icmp eq i64 %36741, 0
  %36761 = zext i1 %36760 to i8
  %36762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36761, i8* %36762, align 1
  %36763 = lshr i64 %36741, 63
  %36764 = trunc i64 %36763 to i8
  %36765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36764, i8* %36765, align 1
  %36766 = lshr i64 %36738, 63
  %36767 = xor i64 %36763, %36766
  %36768 = add i64 %36767, %36763
  %36769 = icmp eq i64 %36768, 2
  %36770 = zext i1 %36769 to i8
  %36771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36770, i8* %36771, align 1
  store %struct.Memory* %loadMem_4ac31a, %struct.Memory** %MEMORY
  %loadMem_4ac320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36773 = getelementptr inbounds %struct.GPR, %struct.GPR* %36772, i32 0, i32 33
  %36774 = getelementptr inbounds %struct.Reg, %struct.Reg* %36773, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %36774 to i64*
  %36775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36776 = getelementptr inbounds %struct.GPR, %struct.GPR* %36775, i32 0, i32 5
  %36777 = getelementptr inbounds %struct.Reg, %struct.Reg* %36776, i32 0, i32 0
  %RCX.i76 = bitcast %union.anon* %36777 to i64*
  %36778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36779 = getelementptr inbounds %struct.GPR, %struct.GPR* %36778, i32 0, i32 15
  %36780 = getelementptr inbounds %struct.Reg, %struct.Reg* %36779, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %36780 to i64*
  %36781 = load i64, i64* %RBP.i77
  %36782 = sub i64 %36781, 24
  %36783 = load i64, i64* %PC.i75
  %36784 = add i64 %36783, 4
  store i64 %36784, i64* %PC.i75
  %36785 = inttoptr i64 %36782 to i32*
  %36786 = load i32, i32* %36785
  %36787 = sext i32 %36786 to i64
  store i64 %36787, i64* %RCX.i76, align 8
  store %struct.Memory* %loadMem_4ac320, %struct.Memory** %MEMORY
  %loadMem_4ac324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36789 = getelementptr inbounds %struct.GPR, %struct.GPR* %36788, i32 0, i32 33
  %36790 = getelementptr inbounds %struct.Reg, %struct.Reg* %36789, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %36790 to i64*
  %36791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36792 = getelementptr inbounds %struct.GPR, %struct.GPR* %36791, i32 0, i32 5
  %36793 = getelementptr inbounds %struct.Reg, %struct.Reg* %36792, i32 0, i32 0
  %RCX.i74 = bitcast %union.anon* %36793 to i64*
  %36794 = load i64, i64* %RCX.i74
  %36795 = load i64, i64* %PC.i73
  %36796 = add i64 %36795, 4
  store i64 %36796, i64* %PC.i73
  %36797 = shl i64 %36794, 5
  %36798 = icmp slt i64 %36797, 0
  %36799 = shl i64 %36797, 1
  store i64 %36799, i64* %RCX.i74, align 8
  %36800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %36801 = zext i1 %36798 to i8
  store i8 %36801, i8* %36800, align 1
  %36802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %36803 = trunc i64 %36799 to i32
  %36804 = and i32 %36803, 254
  %36805 = call i32 @llvm.ctpop.i32(i32 %36804)
  %36806 = trunc i32 %36805 to i8
  %36807 = and i8 %36806, 1
  %36808 = xor i8 %36807, 1
  store i8 %36808, i8* %36802, align 1
  %36809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36809, align 1
  %36810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %36811 = icmp eq i64 %36799, 0
  %36812 = zext i1 %36811 to i8
  store i8 %36812, i8* %36810, align 1
  %36813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %36814 = lshr i64 %36799, 63
  %36815 = trunc i64 %36814 to i8
  store i8 %36815, i8* %36813, align 1
  %36816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36816, align 1
  store %struct.Memory* %loadMem_4ac324, %struct.Memory** %MEMORY
  %loadMem_4ac328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36818 = getelementptr inbounds %struct.GPR, %struct.GPR* %36817, i32 0, i32 33
  %36819 = getelementptr inbounds %struct.Reg, %struct.Reg* %36818, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %36819 to i64*
  %36820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36821 = getelementptr inbounds %struct.GPR, %struct.GPR* %36820, i32 0, i32 1
  %36822 = getelementptr inbounds %struct.Reg, %struct.Reg* %36821, i32 0, i32 0
  %RAX.i71 = bitcast %union.anon* %36822 to i64*
  %36823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36824 = getelementptr inbounds %struct.GPR, %struct.GPR* %36823, i32 0, i32 5
  %36825 = getelementptr inbounds %struct.Reg, %struct.Reg* %36824, i32 0, i32 0
  %RCX.i72 = bitcast %union.anon* %36825 to i64*
  %36826 = load i64, i64* %RAX.i71
  %36827 = load i64, i64* %RCX.i72
  %36828 = load i64, i64* %PC.i70
  %36829 = add i64 %36828, 3
  store i64 %36829, i64* %PC.i70
  %36830 = add i64 %36827, %36826
  store i64 %36830, i64* %RAX.i71, align 8
  %36831 = icmp ult i64 %36830, %36826
  %36832 = icmp ult i64 %36830, %36827
  %36833 = or i1 %36831, %36832
  %36834 = zext i1 %36833 to i8
  %36835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36834, i8* %36835, align 1
  %36836 = trunc i64 %36830 to i32
  %36837 = and i32 %36836, 255
  %36838 = call i32 @llvm.ctpop.i32(i32 %36837)
  %36839 = trunc i32 %36838 to i8
  %36840 = and i8 %36839, 1
  %36841 = xor i8 %36840, 1
  %36842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36841, i8* %36842, align 1
  %36843 = xor i64 %36827, %36826
  %36844 = xor i64 %36843, %36830
  %36845 = lshr i64 %36844, 4
  %36846 = trunc i64 %36845 to i8
  %36847 = and i8 %36846, 1
  %36848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36847, i8* %36848, align 1
  %36849 = icmp eq i64 %36830, 0
  %36850 = zext i1 %36849 to i8
  %36851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36850, i8* %36851, align 1
  %36852 = lshr i64 %36830, 63
  %36853 = trunc i64 %36852 to i8
  %36854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36853, i8* %36854, align 1
  %36855 = lshr i64 %36826, 63
  %36856 = lshr i64 %36827, 63
  %36857 = xor i64 %36852, %36855
  %36858 = xor i64 %36852, %36856
  %36859 = add i64 %36857, %36858
  %36860 = icmp eq i64 %36859, 2
  %36861 = zext i1 %36860 to i8
  %36862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36861, i8* %36862, align 1
  store %struct.Memory* %loadMem_4ac328, %struct.Memory** %MEMORY
  %loadMem_4ac32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %36863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36864 = getelementptr inbounds %struct.GPR, %struct.GPR* %36863, i32 0, i32 33
  %36865 = getelementptr inbounds %struct.Reg, %struct.Reg* %36864, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %36865 to i64*
  %36866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36867 = getelementptr inbounds %struct.GPR, %struct.GPR* %36866, i32 0, i32 5
  %36868 = getelementptr inbounds %struct.Reg, %struct.Reg* %36867, i32 0, i32 0
  %RCX.i68 = bitcast %union.anon* %36868 to i64*
  %36869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36870 = getelementptr inbounds %struct.GPR, %struct.GPR* %36869, i32 0, i32 15
  %36871 = getelementptr inbounds %struct.Reg, %struct.Reg* %36870, i32 0, i32 0
  %RBP.i69 = bitcast %union.anon* %36871 to i64*
  %36872 = load i64, i64* %RBP.i69
  %36873 = sub i64 %36872, 28
  %36874 = load i64, i64* %PC.i67
  %36875 = add i64 %36874, 4
  store i64 %36875, i64* %PC.i67
  %36876 = inttoptr i64 %36873 to i32*
  %36877 = load i32, i32* %36876
  %36878 = sext i32 %36877 to i64
  store i64 %36878, i64* %RCX.i68, align 8
  store %struct.Memory* %loadMem_4ac32b, %struct.Memory** %MEMORY
  %loadMem_4ac32f = load %struct.Memory*, %struct.Memory** %MEMORY
  %36879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36880 = getelementptr inbounds %struct.GPR, %struct.GPR* %36879, i32 0, i32 33
  %36881 = getelementptr inbounds %struct.Reg, %struct.Reg* %36880, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %36881 to i64*
  %36882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36883 = getelementptr inbounds %struct.GPR, %struct.GPR* %36882, i32 0, i32 1
  %36884 = getelementptr inbounds %struct.Reg, %struct.Reg* %36883, i32 0, i32 0
  %RAX.i64 = bitcast %union.anon* %36884 to i64*
  %36885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36886 = getelementptr inbounds %struct.GPR, %struct.GPR* %36885, i32 0, i32 5
  %36887 = getelementptr inbounds %struct.Reg, %struct.Reg* %36886, i32 0, i32 0
  %RCX.i65 = bitcast %union.anon* %36887 to i64*
  %36888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36889 = getelementptr inbounds %struct.GPR, %struct.GPR* %36888, i32 0, i32 7
  %36890 = getelementptr inbounds %struct.Reg, %struct.Reg* %36889, i32 0, i32 0
  %RDX.i66 = bitcast %union.anon* %36890 to i64*
  %36891 = load i64, i64* %RAX.i64
  %36892 = load i64, i64* %RCX.i65
  %36893 = mul i64 %36892, 4
  %36894 = add i64 %36893, %36891
  %36895 = load i64, i64* %PC.i63
  %36896 = add i64 %36895, 3
  store i64 %36896, i64* %PC.i63
  %36897 = inttoptr i64 %36894 to i32*
  %36898 = load i32, i32* %36897
  %36899 = zext i32 %36898 to i64
  store i64 %36899, i64* %RDX.i66, align 8
  store %struct.Memory* %loadMem_4ac32f, %struct.Memory** %MEMORY
  %loadMem_4ac332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36901 = getelementptr inbounds %struct.GPR, %struct.GPR* %36900, i32 0, i32 33
  %36902 = getelementptr inbounds %struct.Reg, %struct.Reg* %36901, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %36902 to i64*
  %36903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36904 = getelementptr inbounds %struct.GPR, %struct.GPR* %36903, i32 0, i32 7
  %36905 = getelementptr inbounds %struct.Reg, %struct.Reg* %36904, i32 0, i32 0
  %DX.i = bitcast %union.anon* %36905 to i16*
  %36906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36907 = getelementptr inbounds %struct.GPR, %struct.GPR* %36906, i32 0, i32 9
  %36908 = getelementptr inbounds %struct.Reg, %struct.Reg* %36907, i32 0, i32 0
  %SI.i62 = bitcast %union.anon* %36908 to i16*
  %36909 = load i16, i16* %DX.i
  %36910 = zext i16 %36909 to i64
  %36911 = load i64, i64* %PC.i61
  %36912 = add i64 %36911, 3
  store i64 %36912, i64* %PC.i61
  store i16 %36909, i16* %SI.i62, align 2
  store %struct.Memory* %loadMem_4ac332, %struct.Memory** %MEMORY
  %loadMem_4ac335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36914 = getelementptr inbounds %struct.GPR, %struct.GPR* %36913, i32 0, i32 33
  %36915 = getelementptr inbounds %struct.Reg, %struct.Reg* %36914, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %36915 to i64*
  %36916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36917 = getelementptr inbounds %struct.GPR, %struct.GPR* %36916, i32 0, i32 1
  %36918 = getelementptr inbounds %struct.Reg, %struct.Reg* %36917, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %36918 to i64*
  %36919 = load i64, i64* %PC.i59
  %36920 = add i64 %36919, 8
  store i64 %36920, i64* %PC.i59
  %36921 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %36921, i64* %RAX.i60, align 8
  store %struct.Memory* %loadMem_4ac335, %struct.Memory** %MEMORY
  %loadMem_4ac33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %36922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36923 = getelementptr inbounds %struct.GPR, %struct.GPR* %36922, i32 0, i32 33
  %36924 = getelementptr inbounds %struct.Reg, %struct.Reg* %36923, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %36924 to i64*
  %36925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36926 = getelementptr inbounds %struct.GPR, %struct.GPR* %36925, i32 0, i32 1
  %36927 = getelementptr inbounds %struct.Reg, %struct.Reg* %36926, i32 0, i32 0
  %RAX.i58 = bitcast %union.anon* %36927 to i64*
  %36928 = load i64, i64* %RAX.i58
  %36929 = add i64 %36928, 6424
  %36930 = load i64, i64* %PC.i57
  %36931 = add i64 %36930, 7
  store i64 %36931, i64* %PC.i57
  %36932 = inttoptr i64 %36929 to i64*
  %36933 = load i64, i64* %36932
  store i64 %36933, i64* %RAX.i58, align 8
  store %struct.Memory* %loadMem_4ac33d, %struct.Memory** %MEMORY
  %loadMem_4ac344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36935 = getelementptr inbounds %struct.GPR, %struct.GPR* %36934, i32 0, i32 33
  %36936 = getelementptr inbounds %struct.Reg, %struct.Reg* %36935, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %36936 to i64*
  %36937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36938 = getelementptr inbounds %struct.GPR, %struct.GPR* %36937, i32 0, i32 5
  %36939 = getelementptr inbounds %struct.Reg, %struct.Reg* %36938, i32 0, i32 0
  %RCX.i56 = bitcast %union.anon* %36939 to i64*
  %36940 = load i64, i64* %PC.i55
  %36941 = add i64 %36940, 8
  store i64 %36941, i64* %PC.i55
  %36942 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %36942, i64* %RCX.i56, align 8
  store %struct.Memory* %loadMem_4ac344, %struct.Memory** %MEMORY
  %loadMem_4ac34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %36943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36944 = getelementptr inbounds %struct.GPR, %struct.GPR* %36943, i32 0, i32 33
  %36945 = getelementptr inbounds %struct.Reg, %struct.Reg* %36944, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %36945 to i64*
  %36946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36947 = getelementptr inbounds %struct.GPR, %struct.GPR* %36946, i32 0, i32 5
  %36948 = getelementptr inbounds %struct.Reg, %struct.Reg* %36947, i32 0, i32 0
  %RCX.i53 = bitcast %union.anon* %36948 to i64*
  %36949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36950 = getelementptr inbounds %struct.GPR, %struct.GPR* %36949, i32 0, i32 7
  %36951 = getelementptr inbounds %struct.Reg, %struct.Reg* %36950, i32 0, i32 0
  %RDX.i54 = bitcast %union.anon* %36951 to i64*
  %36952 = load i64, i64* %RCX.i53
  %36953 = add i64 %36952, 156
  %36954 = load i64, i64* %PC.i52
  %36955 = add i64 %36954, 6
  store i64 %36955, i64* %PC.i52
  %36956 = inttoptr i64 %36953 to i32*
  %36957 = load i32, i32* %36956
  %36958 = zext i32 %36957 to i64
  store i64 %36958, i64* %RDX.i54, align 8
  store %struct.Memory* %loadMem_4ac34c, %struct.Memory** %MEMORY
  %loadMem_4ac352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %36959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36960 = getelementptr inbounds %struct.GPR, %struct.GPR* %36959, i32 0, i32 33
  %36961 = getelementptr inbounds %struct.Reg, %struct.Reg* %36960, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %36961 to i64*
  %36962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36963 = getelementptr inbounds %struct.GPR, %struct.GPR* %36962, i32 0, i32 7
  %36964 = getelementptr inbounds %struct.Reg, %struct.Reg* %36963, i32 0, i32 0
  %RDX.i50 = bitcast %union.anon* %36964 to i64*
  %36965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36966 = getelementptr inbounds %struct.GPR, %struct.GPR* %36965, i32 0, i32 15
  %36967 = getelementptr inbounds %struct.Reg, %struct.Reg* %36966, i32 0, i32 0
  %RBP.i51 = bitcast %union.anon* %36967 to i64*
  %36968 = load i64, i64* %RDX.i50
  %36969 = load i64, i64* %RBP.i51
  %36970 = sub i64 %36969, 88
  %36971 = load i64, i64* %PC.i49
  %36972 = add i64 %36971, 3
  store i64 %36972, i64* %PC.i49
  %36973 = trunc i64 %36968 to i32
  %36974 = inttoptr i64 %36970 to i32*
  %36975 = load i32, i32* %36974
  %36976 = add i32 %36975, %36973
  %36977 = zext i32 %36976 to i64
  store i64 %36977, i64* %RDX.i50, align 8
  %36978 = icmp ult i32 %36976, %36973
  %36979 = icmp ult i32 %36976, %36975
  %36980 = or i1 %36978, %36979
  %36981 = zext i1 %36980 to i8
  %36982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36981, i8* %36982, align 1
  %36983 = and i32 %36976, 255
  %36984 = call i32 @llvm.ctpop.i32(i32 %36983)
  %36985 = trunc i32 %36984 to i8
  %36986 = and i8 %36985, 1
  %36987 = xor i8 %36986, 1
  %36988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36987, i8* %36988, align 1
  %36989 = xor i32 %36975, %36973
  %36990 = xor i32 %36989, %36976
  %36991 = lshr i32 %36990, 4
  %36992 = trunc i32 %36991 to i8
  %36993 = and i8 %36992, 1
  %36994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36993, i8* %36994, align 1
  %36995 = icmp eq i32 %36976, 0
  %36996 = zext i1 %36995 to i8
  %36997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36996, i8* %36997, align 1
  %36998 = lshr i32 %36976, 31
  %36999 = trunc i32 %36998 to i8
  %37000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36999, i8* %37000, align 1
  %37001 = lshr i32 %36973, 31
  %37002 = lshr i32 %36975, 31
  %37003 = xor i32 %36998, %37001
  %37004 = xor i32 %36998, %37002
  %37005 = add i32 %37003, %37004
  %37006 = icmp eq i32 %37005, 2
  %37007 = zext i1 %37006 to i8
  %37008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37007, i8* %37008, align 1
  store %struct.Memory* %loadMem_4ac352, %struct.Memory** %MEMORY
  %loadMem_4ac355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37010 = getelementptr inbounds %struct.GPR, %struct.GPR* %37009, i32 0, i32 33
  %37011 = getelementptr inbounds %struct.Reg, %struct.Reg* %37010, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %37011 to i64*
  %37012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37013 = getelementptr inbounds %struct.GPR, %struct.GPR* %37012, i32 0, i32 7
  %37014 = getelementptr inbounds %struct.Reg, %struct.Reg* %37013, i32 0, i32 0
  %RDX.i47 = bitcast %union.anon* %37014 to i64*
  %37015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37016 = getelementptr inbounds %struct.GPR, %struct.GPR* %37015, i32 0, i32 15
  %37017 = getelementptr inbounds %struct.Reg, %struct.Reg* %37016, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %37017 to i64*
  %37018 = load i64, i64* %RDX.i47
  %37019 = load i64, i64* %RBP.i48
  %37020 = sub i64 %37019, 28
  %37021 = load i64, i64* %PC.i46
  %37022 = add i64 %37021, 3
  store i64 %37022, i64* %PC.i46
  %37023 = trunc i64 %37018 to i32
  %37024 = inttoptr i64 %37020 to i32*
  %37025 = load i32, i32* %37024
  %37026 = add i32 %37025, %37023
  %37027 = zext i32 %37026 to i64
  store i64 %37027, i64* %RDX.i47, align 8
  %37028 = icmp ult i32 %37026, %37023
  %37029 = icmp ult i32 %37026, %37025
  %37030 = or i1 %37028, %37029
  %37031 = zext i1 %37030 to i8
  %37032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %37031, i8* %37032, align 1
  %37033 = and i32 %37026, 255
  %37034 = call i32 @llvm.ctpop.i32(i32 %37033)
  %37035 = trunc i32 %37034 to i8
  %37036 = and i8 %37035, 1
  %37037 = xor i8 %37036, 1
  %37038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37037, i8* %37038, align 1
  %37039 = xor i32 %37025, %37023
  %37040 = xor i32 %37039, %37026
  %37041 = lshr i32 %37040, 4
  %37042 = trunc i32 %37041 to i8
  %37043 = and i8 %37042, 1
  %37044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37043, i8* %37044, align 1
  %37045 = icmp eq i32 %37026, 0
  %37046 = zext i1 %37045 to i8
  %37047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37046, i8* %37047, align 1
  %37048 = lshr i32 %37026, 31
  %37049 = trunc i32 %37048 to i8
  %37050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37049, i8* %37050, align 1
  %37051 = lshr i32 %37023, 31
  %37052 = lshr i32 %37025, 31
  %37053 = xor i32 %37048, %37051
  %37054 = xor i32 %37048, %37052
  %37055 = add i32 %37053, %37054
  %37056 = icmp eq i32 %37055, 2
  %37057 = zext i1 %37056 to i8
  %37058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37057, i8* %37058, align 1
  store %struct.Memory* %loadMem_4ac355, %struct.Memory** %MEMORY
  %loadMem_4ac358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37060 = getelementptr inbounds %struct.GPR, %struct.GPR* %37059, i32 0, i32 33
  %37061 = getelementptr inbounds %struct.Reg, %struct.Reg* %37060, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %37061 to i64*
  %37062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37063 = getelementptr inbounds %struct.GPR, %struct.GPR* %37062, i32 0, i32 7
  %37064 = getelementptr inbounds %struct.Reg, %struct.Reg* %37063, i32 0, i32 0
  %EDX.i44 = bitcast %union.anon* %37064 to i32*
  %37065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37066 = getelementptr inbounds %struct.GPR, %struct.GPR* %37065, i32 0, i32 5
  %37067 = getelementptr inbounds %struct.Reg, %struct.Reg* %37066, i32 0, i32 0
  %RCX.i45 = bitcast %union.anon* %37067 to i64*
  %37068 = load i32, i32* %EDX.i44
  %37069 = zext i32 %37068 to i64
  %37070 = load i64, i64* %PC.i43
  %37071 = add i64 %37070, 3
  store i64 %37071, i64* %PC.i43
  %37072 = shl i64 %37069, 32
  %37073 = ashr exact i64 %37072, 32
  store i64 %37073, i64* %RCX.i45, align 8
  store %struct.Memory* %loadMem_4ac358, %struct.Memory** %MEMORY
  %loadMem_4ac35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %37074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37075 = getelementptr inbounds %struct.GPR, %struct.GPR* %37074, i32 0, i32 33
  %37076 = getelementptr inbounds %struct.Reg, %struct.Reg* %37075, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %37076 to i64*
  %37077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37078 = getelementptr inbounds %struct.GPR, %struct.GPR* %37077, i32 0, i32 1
  %37079 = getelementptr inbounds %struct.Reg, %struct.Reg* %37078, i32 0, i32 0
  %RAX.i41 = bitcast %union.anon* %37079 to i64*
  %37080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37081 = getelementptr inbounds %struct.GPR, %struct.GPR* %37080, i32 0, i32 5
  %37082 = getelementptr inbounds %struct.Reg, %struct.Reg* %37081, i32 0, i32 0
  %RCX.i42 = bitcast %union.anon* %37082 to i64*
  %37083 = load i64, i64* %RAX.i41
  %37084 = load i64, i64* %RCX.i42
  %37085 = mul i64 %37084, 8
  %37086 = add i64 %37085, %37083
  %37087 = load i64, i64* %PC.i40
  %37088 = add i64 %37087, 4
  store i64 %37088, i64* %PC.i40
  %37089 = inttoptr i64 %37086 to i64*
  %37090 = load i64, i64* %37089
  store i64 %37090, i64* %RAX.i41, align 8
  store %struct.Memory* %loadMem_4ac35b, %struct.Memory** %MEMORY
  %loadMem_4ac35f = load %struct.Memory*, %struct.Memory** %MEMORY
  %37091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37092 = getelementptr inbounds %struct.GPR, %struct.GPR* %37091, i32 0, i32 33
  %37093 = getelementptr inbounds %struct.Reg, %struct.Reg* %37092, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %37093 to i64*
  %37094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37095 = getelementptr inbounds %struct.GPR, %struct.GPR* %37094, i32 0, i32 5
  %37096 = getelementptr inbounds %struct.Reg, %struct.Reg* %37095, i32 0, i32 0
  %RCX.i39 = bitcast %union.anon* %37096 to i64*
  %37097 = load i64, i64* %PC.i38
  %37098 = add i64 %37097, 8
  store i64 %37098, i64* %PC.i38
  %37099 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %37099, i64* %RCX.i39, align 8
  store %struct.Memory* %loadMem_4ac35f, %struct.Memory** %MEMORY
  %loadMem_4ac367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37101 = getelementptr inbounds %struct.GPR, %struct.GPR* %37100, i32 0, i32 33
  %37102 = getelementptr inbounds %struct.Reg, %struct.Reg* %37101, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %37102 to i64*
  %37103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37104 = getelementptr inbounds %struct.GPR, %struct.GPR* %37103, i32 0, i32 5
  %37105 = getelementptr inbounds %struct.Reg, %struct.Reg* %37104, i32 0, i32 0
  %RCX.i36 = bitcast %union.anon* %37105 to i64*
  %37106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37107 = getelementptr inbounds %struct.GPR, %struct.GPR* %37106, i32 0, i32 7
  %37108 = getelementptr inbounds %struct.Reg, %struct.Reg* %37107, i32 0, i32 0
  %RDX.i37 = bitcast %union.anon* %37108 to i64*
  %37109 = load i64, i64* %RCX.i36
  %37110 = add i64 %37109, 152
  %37111 = load i64, i64* %PC.i35
  %37112 = add i64 %37111, 6
  store i64 %37112, i64* %PC.i35
  %37113 = inttoptr i64 %37110 to i32*
  %37114 = load i32, i32* %37113
  %37115 = zext i32 %37114 to i64
  store i64 %37115, i64* %RDX.i37, align 8
  store %struct.Memory* %loadMem_4ac367, %struct.Memory** %MEMORY
  %loadMem_4ac36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %37116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37117 = getelementptr inbounds %struct.GPR, %struct.GPR* %37116, i32 0, i32 33
  %37118 = getelementptr inbounds %struct.Reg, %struct.Reg* %37117, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %37118 to i64*
  %37119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37120 = getelementptr inbounds %struct.GPR, %struct.GPR* %37119, i32 0, i32 7
  %37121 = getelementptr inbounds %struct.Reg, %struct.Reg* %37120, i32 0, i32 0
  %RDX.i33 = bitcast %union.anon* %37121 to i64*
  %37122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37123 = getelementptr inbounds %struct.GPR, %struct.GPR* %37122, i32 0, i32 15
  %37124 = getelementptr inbounds %struct.Reg, %struct.Reg* %37123, i32 0, i32 0
  %RBP.i34 = bitcast %union.anon* %37124 to i64*
  %37125 = load i64, i64* %RDX.i33
  %37126 = load i64, i64* %RBP.i34
  %37127 = sub i64 %37126, 84
  %37128 = load i64, i64* %PC.i32
  %37129 = add i64 %37128, 3
  store i64 %37129, i64* %PC.i32
  %37130 = trunc i64 %37125 to i32
  %37131 = inttoptr i64 %37127 to i32*
  %37132 = load i32, i32* %37131
  %37133 = add i32 %37132, %37130
  %37134 = zext i32 %37133 to i64
  store i64 %37134, i64* %RDX.i33, align 8
  %37135 = icmp ult i32 %37133, %37130
  %37136 = icmp ult i32 %37133, %37132
  %37137 = or i1 %37135, %37136
  %37138 = zext i1 %37137 to i8
  %37139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %37138, i8* %37139, align 1
  %37140 = and i32 %37133, 255
  %37141 = call i32 @llvm.ctpop.i32(i32 %37140)
  %37142 = trunc i32 %37141 to i8
  %37143 = and i8 %37142, 1
  %37144 = xor i8 %37143, 1
  %37145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37144, i8* %37145, align 1
  %37146 = xor i32 %37132, %37130
  %37147 = xor i32 %37146, %37133
  %37148 = lshr i32 %37147, 4
  %37149 = trunc i32 %37148 to i8
  %37150 = and i8 %37149, 1
  %37151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37150, i8* %37151, align 1
  %37152 = icmp eq i32 %37133, 0
  %37153 = zext i1 %37152 to i8
  %37154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37153, i8* %37154, align 1
  %37155 = lshr i32 %37133, 31
  %37156 = trunc i32 %37155 to i8
  %37157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37156, i8* %37157, align 1
  %37158 = lshr i32 %37130, 31
  %37159 = lshr i32 %37132, 31
  %37160 = xor i32 %37155, %37158
  %37161 = xor i32 %37155, %37159
  %37162 = add i32 %37160, %37161
  %37163 = icmp eq i32 %37162, 2
  %37164 = zext i1 %37163 to i8
  %37165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37164, i8* %37165, align 1
  store %struct.Memory* %loadMem_4ac36d, %struct.Memory** %MEMORY
  %loadMem_4ac370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37167 = getelementptr inbounds %struct.GPR, %struct.GPR* %37166, i32 0, i32 33
  %37168 = getelementptr inbounds %struct.Reg, %struct.Reg* %37167, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %37168 to i64*
  %37169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37170 = getelementptr inbounds %struct.GPR, %struct.GPR* %37169, i32 0, i32 7
  %37171 = getelementptr inbounds %struct.Reg, %struct.Reg* %37170, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %37171 to i64*
  %37172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37173 = getelementptr inbounds %struct.GPR, %struct.GPR* %37172, i32 0, i32 15
  %37174 = getelementptr inbounds %struct.Reg, %struct.Reg* %37173, i32 0, i32 0
  %RBP.i31 = bitcast %union.anon* %37174 to i64*
  %37175 = load i64, i64* %RDX.i
  %37176 = load i64, i64* %RBP.i31
  %37177 = sub i64 %37176, 24
  %37178 = load i64, i64* %PC.i30
  %37179 = add i64 %37178, 3
  store i64 %37179, i64* %PC.i30
  %37180 = trunc i64 %37175 to i32
  %37181 = inttoptr i64 %37177 to i32*
  %37182 = load i32, i32* %37181
  %37183 = add i32 %37182, %37180
  %37184 = zext i32 %37183 to i64
  store i64 %37184, i64* %RDX.i, align 8
  %37185 = icmp ult i32 %37183, %37180
  %37186 = icmp ult i32 %37183, %37182
  %37187 = or i1 %37185, %37186
  %37188 = zext i1 %37187 to i8
  %37189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %37188, i8* %37189, align 1
  %37190 = and i32 %37183, 255
  %37191 = call i32 @llvm.ctpop.i32(i32 %37190)
  %37192 = trunc i32 %37191 to i8
  %37193 = and i8 %37192, 1
  %37194 = xor i8 %37193, 1
  %37195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37194, i8* %37195, align 1
  %37196 = xor i32 %37182, %37180
  %37197 = xor i32 %37196, %37183
  %37198 = lshr i32 %37197, 4
  %37199 = trunc i32 %37198 to i8
  %37200 = and i8 %37199, 1
  %37201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37200, i8* %37201, align 1
  %37202 = icmp eq i32 %37183, 0
  %37203 = zext i1 %37202 to i8
  %37204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37203, i8* %37204, align 1
  %37205 = lshr i32 %37183, 31
  %37206 = trunc i32 %37205 to i8
  %37207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37206, i8* %37207, align 1
  %37208 = lshr i32 %37180, 31
  %37209 = lshr i32 %37182, 31
  %37210 = xor i32 %37205, %37208
  %37211 = xor i32 %37205, %37209
  %37212 = add i32 %37210, %37211
  %37213 = icmp eq i32 %37212, 2
  %37214 = zext i1 %37213 to i8
  %37215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37214, i8* %37215, align 1
  store %struct.Memory* %loadMem_4ac370, %struct.Memory** %MEMORY
  %loadMem_4ac373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37217 = getelementptr inbounds %struct.GPR, %struct.GPR* %37216, i32 0, i32 33
  %37218 = getelementptr inbounds %struct.Reg, %struct.Reg* %37217, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %37218 to i64*
  %37219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37220 = getelementptr inbounds %struct.GPR, %struct.GPR* %37219, i32 0, i32 7
  %37221 = getelementptr inbounds %struct.Reg, %struct.Reg* %37220, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %37221 to i32*
  %37222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37223 = getelementptr inbounds %struct.GPR, %struct.GPR* %37222, i32 0, i32 5
  %37224 = getelementptr inbounds %struct.Reg, %struct.Reg* %37223, i32 0, i32 0
  %RCX.i29 = bitcast %union.anon* %37224 to i64*
  %37225 = load i32, i32* %EDX.i
  %37226 = zext i32 %37225 to i64
  %37227 = load i64, i64* %PC.i28
  %37228 = add i64 %37227, 3
  store i64 %37228, i64* %PC.i28
  %37229 = shl i64 %37226, 32
  %37230 = ashr exact i64 %37229, 32
  store i64 %37230, i64* %RCX.i29, align 8
  store %struct.Memory* %loadMem_4ac373, %struct.Memory** %MEMORY
  %loadMem_4ac376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37232 = getelementptr inbounds %struct.GPR, %struct.GPR* %37231, i32 0, i32 33
  %37233 = getelementptr inbounds %struct.Reg, %struct.Reg* %37232, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %37233 to i64*
  %37234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37235 = getelementptr inbounds %struct.GPR, %struct.GPR* %37234, i32 0, i32 9
  %37236 = getelementptr inbounds %struct.Reg, %struct.Reg* %37235, i32 0, i32 0
  %SI.i = bitcast %union.anon* %37236 to i16*
  %37237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37238 = getelementptr inbounds %struct.GPR, %struct.GPR* %37237, i32 0, i32 1
  %37239 = getelementptr inbounds %struct.Reg, %struct.Reg* %37238, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %37239 to i64*
  %37240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37241 = getelementptr inbounds %struct.GPR, %struct.GPR* %37240, i32 0, i32 5
  %37242 = getelementptr inbounds %struct.Reg, %struct.Reg* %37241, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %37242 to i64*
  %37243 = load i64, i64* %RAX.i27
  %37244 = load i64, i64* %RCX.i
  %37245 = mul i64 %37244, 2
  %37246 = add i64 %37245, %37243
  %37247 = load i16, i16* %SI.i
  %37248 = zext i16 %37247 to i64
  %37249 = load i64, i64* %PC.i26
  %37250 = add i64 %37249, 4
  store i64 %37250, i64* %PC.i26
  %37251 = inttoptr i64 %37246 to i16*
  store i16 %37247, i16* %37251
  store %struct.Memory* %loadMem_4ac376, %struct.Memory** %MEMORY
  %loadMem_4ac37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %37252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37253 = getelementptr inbounds %struct.GPR, %struct.GPR* %37252, i32 0, i32 33
  %37254 = getelementptr inbounds %struct.Reg, %struct.Reg* %37253, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %37254 to i64*
  %37255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37256 = getelementptr inbounds %struct.GPR, %struct.GPR* %37255, i32 0, i32 1
  %37257 = getelementptr inbounds %struct.Reg, %struct.Reg* %37256, i32 0, i32 0
  %RAX.i24 = bitcast %union.anon* %37257 to i64*
  %37258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37259 = getelementptr inbounds %struct.GPR, %struct.GPR* %37258, i32 0, i32 15
  %37260 = getelementptr inbounds %struct.Reg, %struct.Reg* %37259, i32 0, i32 0
  %RBP.i25 = bitcast %union.anon* %37260 to i64*
  %37261 = load i64, i64* %RBP.i25
  %37262 = sub i64 %37261, 24
  %37263 = load i64, i64* %PC.i23
  %37264 = add i64 %37263, 3
  store i64 %37264, i64* %PC.i23
  %37265 = inttoptr i64 %37262 to i32*
  %37266 = load i32, i32* %37265
  %37267 = zext i32 %37266 to i64
  store i64 %37267, i64* %RAX.i24, align 8
  store %struct.Memory* %loadMem_4ac37a, %struct.Memory** %MEMORY
  %loadMem_4ac37d = load %struct.Memory*, %struct.Memory** %MEMORY
  %37268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37269 = getelementptr inbounds %struct.GPR, %struct.GPR* %37268, i32 0, i32 33
  %37270 = getelementptr inbounds %struct.Reg, %struct.Reg* %37269, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %37270 to i64*
  %37271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37272 = getelementptr inbounds %struct.GPR, %struct.GPR* %37271, i32 0, i32 1
  %37273 = getelementptr inbounds %struct.Reg, %struct.Reg* %37272, i32 0, i32 0
  %RAX.i22 = bitcast %union.anon* %37273 to i64*
  %37274 = load i64, i64* %RAX.i22
  %37275 = load i64, i64* %PC.i21
  %37276 = add i64 %37275, 3
  store i64 %37276, i64* %PC.i21
  %37277 = trunc i64 %37274 to i32
  %37278 = add i32 1, %37277
  %37279 = zext i32 %37278 to i64
  store i64 %37279, i64* %RAX.i22, align 8
  %37280 = icmp ult i32 %37278, %37277
  %37281 = icmp ult i32 %37278, 1
  %37282 = or i1 %37280, %37281
  %37283 = zext i1 %37282 to i8
  %37284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %37283, i8* %37284, align 1
  %37285 = and i32 %37278, 255
  %37286 = call i32 @llvm.ctpop.i32(i32 %37285)
  %37287 = trunc i32 %37286 to i8
  %37288 = and i8 %37287, 1
  %37289 = xor i8 %37288, 1
  %37290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37289, i8* %37290, align 1
  %37291 = xor i64 1, %37274
  %37292 = trunc i64 %37291 to i32
  %37293 = xor i32 %37292, %37278
  %37294 = lshr i32 %37293, 4
  %37295 = trunc i32 %37294 to i8
  %37296 = and i8 %37295, 1
  %37297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37296, i8* %37297, align 1
  %37298 = icmp eq i32 %37278, 0
  %37299 = zext i1 %37298 to i8
  %37300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37299, i8* %37300, align 1
  %37301 = lshr i32 %37278, 31
  %37302 = trunc i32 %37301 to i8
  %37303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37302, i8* %37303, align 1
  %37304 = lshr i32 %37277, 31
  %37305 = xor i32 %37301, %37304
  %37306 = add i32 %37305, %37301
  %37307 = icmp eq i32 %37306, 2
  %37308 = zext i1 %37307 to i8
  %37309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37308, i8* %37309, align 1
  store %struct.Memory* %loadMem_4ac37d, %struct.Memory** %MEMORY
  %loadMem_4ac380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37311 = getelementptr inbounds %struct.GPR, %struct.GPR* %37310, i32 0, i32 33
  %37312 = getelementptr inbounds %struct.Reg, %struct.Reg* %37311, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %37312 to i64*
  %37313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37314 = getelementptr inbounds %struct.GPR, %struct.GPR* %37313, i32 0, i32 1
  %37315 = getelementptr inbounds %struct.Reg, %struct.Reg* %37314, i32 0, i32 0
  %EAX.i19 = bitcast %union.anon* %37315 to i32*
  %37316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37317 = getelementptr inbounds %struct.GPR, %struct.GPR* %37316, i32 0, i32 15
  %37318 = getelementptr inbounds %struct.Reg, %struct.Reg* %37317, i32 0, i32 0
  %RBP.i20 = bitcast %union.anon* %37318 to i64*
  %37319 = load i64, i64* %RBP.i20
  %37320 = sub i64 %37319, 24
  %37321 = load i32, i32* %EAX.i19
  %37322 = zext i32 %37321 to i64
  %37323 = load i64, i64* %PC.i18
  %37324 = add i64 %37323, 3
  store i64 %37324, i64* %PC.i18
  %37325 = inttoptr i64 %37320 to i32*
  store i32 %37321, i32* %37325
  store %struct.Memory* %loadMem_4ac380, %struct.Memory** %MEMORY
  %loadMem_4ac383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37327 = getelementptr inbounds %struct.GPR, %struct.GPR* %37326, i32 0, i32 33
  %37328 = getelementptr inbounds %struct.Reg, %struct.Reg* %37327, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %37328 to i64*
  %37329 = load i64, i64* %PC.i17
  %37330 = add i64 %37329, -123
  %37331 = load i64, i64* %PC.i17
  %37332 = add i64 %37331, 5
  store i64 %37332, i64* %PC.i17
  %37333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %37330, i64* %37333, align 8
  store %struct.Memory* %loadMem_4ac383, %struct.Memory** %MEMORY
  br label %block_.L_4ac308

block_.L_4ac388:                                  ; preds = %block_.L_4ac308
  %loadMem_4ac388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37335 = getelementptr inbounds %struct.GPR, %struct.GPR* %37334, i32 0, i32 33
  %37336 = getelementptr inbounds %struct.Reg, %struct.Reg* %37335, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %37336 to i64*
  %37337 = load i64, i64* %PC.i16
  %37338 = add i64 %37337, 5
  %37339 = load i64, i64* %PC.i16
  %37340 = add i64 %37339, 5
  store i64 %37340, i64* %PC.i16
  %37341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %37338, i64* %37341, align 8
  store %struct.Memory* %loadMem_4ac388, %struct.Memory** %MEMORY
  br label %block_.L_4ac38d

block_.L_4ac38d:                                  ; preds = %block_.L_4ac388
  %loadMem_4ac38d = load %struct.Memory*, %struct.Memory** %MEMORY
  %37342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37343 = getelementptr inbounds %struct.GPR, %struct.GPR* %37342, i32 0, i32 33
  %37344 = getelementptr inbounds %struct.Reg, %struct.Reg* %37343, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %37344 to i64*
  %37345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37346 = getelementptr inbounds %struct.GPR, %struct.GPR* %37345, i32 0, i32 1
  %37347 = getelementptr inbounds %struct.Reg, %struct.Reg* %37346, i32 0, i32 0
  %RAX.i14 = bitcast %union.anon* %37347 to i64*
  %37348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37349 = getelementptr inbounds %struct.GPR, %struct.GPR* %37348, i32 0, i32 15
  %37350 = getelementptr inbounds %struct.Reg, %struct.Reg* %37349, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %37350 to i64*
  %37351 = load i64, i64* %RBP.i15
  %37352 = sub i64 %37351, 28
  %37353 = load i64, i64* %PC.i13
  %37354 = add i64 %37353, 3
  store i64 %37354, i64* %PC.i13
  %37355 = inttoptr i64 %37352 to i32*
  %37356 = load i32, i32* %37355
  %37357 = zext i32 %37356 to i64
  store i64 %37357, i64* %RAX.i14, align 8
  store %struct.Memory* %loadMem_4ac38d, %struct.Memory** %MEMORY
  %loadMem_4ac390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37359 = getelementptr inbounds %struct.GPR, %struct.GPR* %37358, i32 0, i32 33
  %37360 = getelementptr inbounds %struct.Reg, %struct.Reg* %37359, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %37360 to i64*
  %37361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37362 = getelementptr inbounds %struct.GPR, %struct.GPR* %37361, i32 0, i32 1
  %37363 = getelementptr inbounds %struct.Reg, %struct.Reg* %37362, i32 0, i32 0
  %RAX.i12 = bitcast %union.anon* %37363 to i64*
  %37364 = load i64, i64* %RAX.i12
  %37365 = load i64, i64* %PC.i11
  %37366 = add i64 %37365, 3
  store i64 %37366, i64* %PC.i11
  %37367 = trunc i64 %37364 to i32
  %37368 = add i32 1, %37367
  %37369 = zext i32 %37368 to i64
  store i64 %37369, i64* %RAX.i12, align 8
  %37370 = icmp ult i32 %37368, %37367
  %37371 = icmp ult i32 %37368, 1
  %37372 = or i1 %37370, %37371
  %37373 = zext i1 %37372 to i8
  %37374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %37373, i8* %37374, align 1
  %37375 = and i32 %37368, 255
  %37376 = call i32 @llvm.ctpop.i32(i32 %37375)
  %37377 = trunc i32 %37376 to i8
  %37378 = and i8 %37377, 1
  %37379 = xor i8 %37378, 1
  %37380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37379, i8* %37380, align 1
  %37381 = xor i64 1, %37364
  %37382 = trunc i64 %37381 to i32
  %37383 = xor i32 %37382, %37368
  %37384 = lshr i32 %37383, 4
  %37385 = trunc i32 %37384 to i8
  %37386 = and i8 %37385, 1
  %37387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37386, i8* %37387, align 1
  %37388 = icmp eq i32 %37368, 0
  %37389 = zext i1 %37388 to i8
  %37390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37389, i8* %37390, align 1
  %37391 = lshr i32 %37368, 31
  %37392 = trunc i32 %37391 to i8
  %37393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37392, i8* %37393, align 1
  %37394 = lshr i32 %37367, 31
  %37395 = xor i32 %37391, %37394
  %37396 = add i32 %37395, %37391
  %37397 = icmp eq i32 %37396, 2
  %37398 = zext i1 %37397 to i8
  %37399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37398, i8* %37399, align 1
  store %struct.Memory* %loadMem_4ac390, %struct.Memory** %MEMORY
  %loadMem_4ac393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37401 = getelementptr inbounds %struct.GPR, %struct.GPR* %37400, i32 0, i32 33
  %37402 = getelementptr inbounds %struct.Reg, %struct.Reg* %37401, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %37402 to i64*
  %37403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37404 = getelementptr inbounds %struct.GPR, %struct.GPR* %37403, i32 0, i32 1
  %37405 = getelementptr inbounds %struct.Reg, %struct.Reg* %37404, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %37405 to i32*
  %37406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37407 = getelementptr inbounds %struct.GPR, %struct.GPR* %37406, i32 0, i32 15
  %37408 = getelementptr inbounds %struct.Reg, %struct.Reg* %37407, i32 0, i32 0
  %RBP.i10 = bitcast %union.anon* %37408 to i64*
  %37409 = load i64, i64* %RBP.i10
  %37410 = sub i64 %37409, 28
  %37411 = load i32, i32* %EAX.i
  %37412 = zext i32 %37411 to i64
  %37413 = load i64, i64* %PC.i9
  %37414 = add i64 %37413, 3
  store i64 %37414, i64* %PC.i9
  %37415 = inttoptr i64 %37410 to i32*
  store i32 %37411, i32* %37415
  store %struct.Memory* %loadMem_4ac393, %struct.Memory** %MEMORY
  %loadMem_4ac396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37417 = getelementptr inbounds %struct.GPR, %struct.GPR* %37416, i32 0, i32 33
  %37418 = getelementptr inbounds %struct.Reg, %struct.Reg* %37417, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %37418 to i64*
  %37419 = load i64, i64* %PC.i8
  %37420 = add i64 %37419, -159
  %37421 = load i64, i64* %PC.i8
  %37422 = add i64 %37421, 5
  store i64 %37422, i64* %PC.i8
  %37423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %37420, i64* %37423, align 8
  store %struct.Memory* %loadMem_4ac396, %struct.Memory** %MEMORY
  br label %block_.L_4ac2f7

block_.L_4ac39b:                                  ; preds = %block_.L_4ac2f7
  %loadMem_4ac39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %37424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37425 = getelementptr inbounds %struct.GPR, %struct.GPR* %37424, i32 0, i32 33
  %37426 = getelementptr inbounds %struct.Reg, %struct.Reg* %37425, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %37426 to i64*
  %37427 = load i64, i64* %PC.i7
  %37428 = add i64 %37427, 5
  %37429 = load i64, i64* %PC.i7
  %37430 = add i64 %37429, 5
  store i64 %37430, i64* %PC.i7
  %37431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %37428, i64* %37431, align 8
  store %struct.Memory* %loadMem_4ac39b, %struct.Memory** %MEMORY
  br label %block_.L_4ac3a0

block_.L_4ac3a0:                                  ; preds = %block_.L_4ac39b, %block_.L_4ac2db
  %loadMem_4ac3a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37433 = getelementptr inbounds %struct.GPR, %struct.GPR* %37432, i32 0, i32 33
  %37434 = getelementptr inbounds %struct.Reg, %struct.Reg* %37433, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %37434 to i64*
  %37435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37436 = getelementptr inbounds %struct.GPR, %struct.GPR* %37435, i32 0, i32 1
  %37437 = getelementptr inbounds %struct.Reg, %struct.Reg* %37436, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %37437 to i64*
  %37438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37439 = getelementptr inbounds %struct.GPR, %struct.GPR* %37438, i32 0, i32 15
  %37440 = getelementptr inbounds %struct.Reg, %struct.Reg* %37439, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %37440 to i64*
  %37441 = load i64, i64* %RBP.i6
  %37442 = sub i64 %37441, 56
  %37443 = load i64, i64* %PC.i5
  %37444 = add i64 %37443, 3
  store i64 %37444, i64* %PC.i5
  %37445 = inttoptr i64 %37442 to i32*
  %37446 = load i32, i32* %37445
  %37447 = zext i32 %37446 to i64
  store i64 %37447, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_4ac3a0, %struct.Memory** %MEMORY
  %loadMem_4ac3a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %37448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37449 = getelementptr inbounds %struct.GPR, %struct.GPR* %37448, i32 0, i32 33
  %37450 = getelementptr inbounds %struct.Reg, %struct.Reg* %37449, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %37450 to i64*
  %37451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37452 = getelementptr inbounds %struct.GPR, %struct.GPR* %37451, i32 0, i32 13
  %37453 = getelementptr inbounds %struct.Reg, %struct.Reg* %37452, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %37453 to i64*
  %37454 = load i64, i64* %RSP.i
  %37455 = load i64, i64* %PC.i4
  %37456 = add i64 %37455, 7
  store i64 %37456, i64* %PC.i4
  %37457 = add i64 752, %37454
  store i64 %37457, i64* %RSP.i, align 8
  %37458 = icmp ult i64 %37457, %37454
  %37459 = icmp ult i64 %37457, 752
  %37460 = or i1 %37458, %37459
  %37461 = zext i1 %37460 to i8
  %37462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %37461, i8* %37462, align 1
  %37463 = trunc i64 %37457 to i32
  %37464 = and i32 %37463, 255
  %37465 = call i32 @llvm.ctpop.i32(i32 %37464)
  %37466 = trunc i32 %37465 to i8
  %37467 = and i8 %37466, 1
  %37468 = xor i8 %37467, 1
  %37469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37468, i8* %37469, align 1
  %37470 = xor i64 752, %37454
  %37471 = xor i64 %37470, %37457
  %37472 = lshr i64 %37471, 4
  %37473 = trunc i64 %37472 to i8
  %37474 = and i8 %37473, 1
  %37475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37474, i8* %37475, align 1
  %37476 = icmp eq i64 %37457, 0
  %37477 = zext i1 %37476 to i8
  %37478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37477, i8* %37478, align 1
  %37479 = lshr i64 %37457, 63
  %37480 = trunc i64 %37479 to i8
  %37481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37480, i8* %37481, align 1
  %37482 = lshr i64 %37454, 63
  %37483 = xor i64 %37479, %37482
  %37484 = add i64 %37483, %37479
  %37485 = icmp eq i64 %37484, 2
  %37486 = zext i1 %37485 to i8
  %37487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37486, i8* %37487, align 1
  store %struct.Memory* %loadMem_4ac3a3, %struct.Memory** %MEMORY
  %loadMem_4ac3aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %37488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37489 = getelementptr inbounds %struct.GPR, %struct.GPR* %37488, i32 0, i32 33
  %37490 = getelementptr inbounds %struct.Reg, %struct.Reg* %37489, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %37490 to i64*
  %37491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37492 = getelementptr inbounds %struct.GPR, %struct.GPR* %37491, i32 0, i32 15
  %37493 = getelementptr inbounds %struct.Reg, %struct.Reg* %37492, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %37493 to i64*
  %37494 = load i64, i64* %PC.i2
  %37495 = add i64 %37494, 1
  store i64 %37495, i64* %PC.i2
  %37496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %37497 = load i64, i64* %37496, align 8
  %37498 = add i64 %37497, 8
  %37499 = inttoptr i64 %37497 to i64*
  %37500 = load i64, i64* %37499
  store i64 %37500, i64* %RBP.i3, align 8
  store i64 %37498, i64* %37496, align 8
  store %struct.Memory* %loadMem_4ac3aa, %struct.Memory** %MEMORY
  %loadMem_4ac3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %37501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37502 = getelementptr inbounds %struct.GPR, %struct.GPR* %37501, i32 0, i32 33
  %37503 = getelementptr inbounds %struct.Reg, %struct.Reg* %37502, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %37503 to i64*
  %37504 = load i64, i64* %PC.i1
  %37505 = add i64 %37504, 1
  store i64 %37505, i64* %PC.i1
  %37506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %37507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %37508 = load i64, i64* %37507, align 8
  %37509 = inttoptr i64 %37508 to i64*
  %37510 = load i64, i64* %37509
  store i64 %37510, i64* %37506, align 8
  %37511 = add i64 %37508, 8
  store i64 %37511, i64* %37507, align 8
  store %struct.Memory* %loadMem_4ac3ab, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4ac3ab
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x2f0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 752
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 752
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 752, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2a4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_shll__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3738__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x198__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x28__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11bdc__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x2a5__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 677
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4aa84a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11c00__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x2a5__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 677
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 6, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x19c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 412
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x28__rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11bdc__rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RDX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x10___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 16, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 16
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 16, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x6__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 6
  %16 = icmp ult i32 %14, 6
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 6
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aa8db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x3c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x3c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aa8e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x6___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 6
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 6
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 6, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4aa92c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2ac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2ac__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aa95d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x2b9__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 697
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aa98a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x19c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 412
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setne__al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorb__0xff___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = xor i64 255, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i8 %15, 7
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x2b9__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 697
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x2b9__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 697
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4aa99d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aacb5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3338__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13112
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x34f8__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13560
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1c0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3378__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13176
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x34b8__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13496
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1bc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x33b8__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13240
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x3478__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13432
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x33f8__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13304
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x3438__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13368
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1b4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 436
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1e0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1b8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 440
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1dc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 476
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1b4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 436
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1d8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1b8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 440
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1d4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x34f8__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13560
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x34b8__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13496
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1ac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x3478__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13432
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1a8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x3438__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13368
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1ac__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1a8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 424
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b0__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RDI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1b0__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 432
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1d0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1a4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 420
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1a8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1a8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 424
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1cc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1a4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 420
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1ac__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1ac__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 428
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1a8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 424
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1a4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1a4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 420
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1c4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1dc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 476
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x170__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -368
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ESI
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1d8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1d4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x130__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -304
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ESI
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1dc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 476
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xf0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -240
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ESI
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1d4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 468
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xb0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -176
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ESI
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1d0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RDI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x150__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -336
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ESI
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1cc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x110__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -272
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ESI
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1cc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xd0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ESI
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1c4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 452
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -144
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aa964(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x2ba__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 698
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4aace2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x2ba__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 698
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x2ba__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 698
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4aacf5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab09a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x170__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x1c__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x200__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x18__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x1fc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x14__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x1f8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x10__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x1f4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x200__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1f4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 500
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x220__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1fc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1f8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 504
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x21c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 540
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1f4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 500
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x218__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1f8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 504
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x214__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 532
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x1c__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x1f0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x18__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x1ec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x14__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x1e8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x10__rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x1e4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1e8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 488
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 496
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = shl i64 %11, 32
  %15 = ashr i64 %14, 33
  %16 = trunc i64 %11 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %9, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1f0__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 496
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %21, %13
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %13
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %13, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__r8d___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x210__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1e4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 484
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 488
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1e8__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 488
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %21, %13
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %13
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %13, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__r8d___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x20c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 524
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1e4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 484
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 492
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1ec__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 492
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %21, %13
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %13
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %13, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x208__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1e8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 488
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 484
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1e4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 484
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %21, %13
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %13
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %13, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x204__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x220__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x21c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 540
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x218__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x214__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 532
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x21c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 540
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x10__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x214__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 532
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x18__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 24
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x210__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x204__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 516
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = ashr i64 %15, 1
  %17 = lshr i64 %16, 1
  %18 = trunc i64 %16 to i8
  %19 = and i8 %18, 1
  %20 = trunc i64 %17 to i32
  %21 = and i64 %17, 4294967295
  store i64 %21, i64* %9, align 8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  store i8 %28, i8* %23, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %31 = icmp eq i32 %20, 0
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %34 = lshr i32 %20, 31
  %35 = trunc i32 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 524
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x208__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 520
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0xc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x208__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20c__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 524
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x14__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 20
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x204__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 516
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x1c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4aacbc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x184__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 388
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x188__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 392
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x18c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 396
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x190__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x174__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 372
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x178__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 376
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x17c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 380
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x180__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 384
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x40__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 64
  %16 = icmp ult i32 %14, 64
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 64
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ab6e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11afc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72444
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ab14e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ab171(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x198__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4ba3d0___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4957136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4ba3d1___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4957137
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab18f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4ba350___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4957008
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4ba351___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4957009
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 3, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x190__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -400
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x190__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -400
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ab1f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab2ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ab27e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d33f0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 7156720, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d0bc0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d0bc0_type* @G__0x6d0bc0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x40__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 7
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rdx__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 7
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RAX, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab2fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x720d90___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 7474576, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x70f6e0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x70f6e0_type* @G__0x70f6e0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ab69c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x23c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 572
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ab475(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x934__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2356
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ab475(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4ab356(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xf423f___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 999999, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 999999
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 999999, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab393(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4ba450___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4ba450_type* @G__0x4ba450 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x9a4__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 2468
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 3, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RDX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x190__rbp__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -400
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl___rax__rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = zext i8 %21 to i64
  store i64 %22, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sign(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3738__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 3, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RSI, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x180__rbp__rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -384
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x180__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -384
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x180__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -384
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x190__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -400
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 -1, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab513(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4ab492(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab4c2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ab556(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab697(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ab5f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4ab5b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cfc70___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cfc70_type* @G__0x6cfc70 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x40__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RCX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RSI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RSI, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab5f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RSI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RSI, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab692(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4ab649(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d12c0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d12c0_type* @G__0x6d12c0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab68d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2cc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2cc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab69c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ab6cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab6d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab106(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ab709(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ab71d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab776(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ab771(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x180__rbp__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -384
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab724(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x2cd__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 717
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ab7a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x2cd__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 717
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x2cd__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 717
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ab7b6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4abb38(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x240__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x230__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x238__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x34b8__rcx__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13496
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x228__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 552
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x240__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x228__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 552
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x260__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x230__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x238__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 568
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x258__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x238__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 568
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x250__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 592
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x228__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 552
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x248__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x33f8__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13304
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x34f8__rcx__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13560
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x23c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x33f8__rcx__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13304
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x234__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 564
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x3378__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13176
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3478__rcx__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13432
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x22c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 556
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x3378__rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 13176
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3378__rcx__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13176
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x224__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x23c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x224__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x25c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x224__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 548
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x244__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x234__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x22c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 556
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x254__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 596
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x22c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 556
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 588
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x260__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x244__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 580
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x170__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -368
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x258__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x24c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 588
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x150__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -336
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x250__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 592
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x254__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 596
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x130__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -304
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x248__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x25c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 604
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x110__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -272
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x25c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 604
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -240
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x254__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 596
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x24c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 588
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -176
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x244__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 580
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ab77d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x2ce__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 718
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4abb65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x2ce__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 718
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x2ce__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 718
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4abb78(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4abf6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x280__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x10__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x270__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x278__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x18__rsi____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x268__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 616
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x280__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x268__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 616
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x2a0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x270__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x278__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 632
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x298__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x278__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 632
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x290__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x268__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 616
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x288__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0xc__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x1c__rsi____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x27c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 636
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rsi____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x274__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rsi____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x26c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 620
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x4__rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rcx____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x264__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x27c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 636
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x264__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 612
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x29c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x264__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 612
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x284__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 644
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x26c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 620
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x26c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 620
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 652
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2a0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x284__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 644
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x298__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 652
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x290__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x294__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 660
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x288__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x29c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x29c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x10__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x294__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 660
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x14__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x28c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 652
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x18__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x284__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 644
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4abb3f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ac2db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ac2c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4ac00e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac2b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ac26a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x11bec__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72684
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rsi__rdi_4____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RDI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdi__r8_2____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x20___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 32, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 32
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 32, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = ashr i64 %9, 5
  %13 = trunc i64 %12 to i8
  %14 = and i8 %13, 1
  %15 = ashr i64 %12, 1
  store i64 %15, i64* %RSI, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %15 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %15, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = sub i64 %12, %13
  %17 = icmp ult i64 %12, %13
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i64 %16 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 %13, %12
  %28 = xor i64 %27, %16
  %29 = lshr i64 %28, 4
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i64 %16, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %16, 63
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %12, 63
  %40 = lshr i64 %13, 63
  %41 = xor i64 %40, %39
  %42 = xor i64 %36, %39
  %43 = add i64 %42, %41
  %44 = icmp eq i64 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x2d8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4ac0b6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x2e0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac11b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rax__rcx_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x54__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x58__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rsi_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 32, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 32
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 32, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarq__0x6___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = ashr i64 %9, 5
  %13 = trunc i64 %12 to i8
  %14 = and i8 %13, 1
  %15 = ashr i64 %12, 1
  store i64 %15, i64* %RAX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %15 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %15, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x2e0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x2e0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x2d8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = sub i64 %12, %13
  %17 = icmp ult i64 %12, %13
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i64 %16 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 %13, %12
  %28 = xor i64 %27, %16
  %29 = lshr i64 %28, 4
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i64 %16, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %16, 63
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %12, 63
  %40 = lshr i64 %13, 63
  %41 = xor i64 %40, %39
  %42 = xor i64 %36, %39
  %43 = add i64 %42, %41
  %44 = icmp eq i64 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ac14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x11bec__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72684
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x2e8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 744
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac23c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rdx__rsi_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rsi__rdi_2____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 32, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 32
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 32, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = ashr i64 %9, 5
  %13 = trunc i64 %12 to i8
  %14 = and i8 %13, 1
  %15 = ashr i64 %12, 1
  store i64 %15, i64* %RDX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %15 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %15, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = sub i64 %12, %13
  %17 = icmp ult i64 %12, %13
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i64 %16 to i32
  %21 = and i32 %20, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 %13, %12
  %28 = xor i64 %27, %16
  %29 = lshr i64 %28, 4
  %30 = trunc i64 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i64 %16, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %16, 63
  %37 = trunc i64 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %12, 63
  %40 = lshr i64 %13, 63
  %41 = xor i64 %40, %39
  %42 = xor i64 %36, %39
  %43 = add i64 %42, %41
  %44 = icmp eq i64 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4ac1c9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x2f0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac22e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x2f0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x2f0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x2e8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 744
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac2b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RDX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac2ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4abf85(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac2cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4abf74(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4ac3a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ac39b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4ac388(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx___si(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %SI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac308(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac38d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac2f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4ac3a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x2f0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 752, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 752
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 752, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
