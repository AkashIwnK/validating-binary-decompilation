; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6cb908_type = type <{ [8 x i8] }>
%G_0x6cc018_type = type <{ [4 x i8] }>
%G_0x6cc020_type = type <{ [4 x i8] }>
%G_0x6cc330_type = type <{ [8 x i8] }>
%G_0x6cee50_type = type <{ [4 x i8] }>
%G_0x6d11c8_type = type <{ [8 x i8] }>
%G_0x6d4758_type = type <{ [8 x i8] }>
%G_0x6e51e8_type = type <{ [4 x i8] }>
%G_0x6f6e10_type = type <{ [4 x i8] }>
%G_0x6f80a8_type = type <{ [8 x i8] }>
%G_0x6f8edc_type = type <{ [4 x i8] }>
%G_0x6f96a0_type = type <{ [4 x i8] }>
%G_0x6f9710_type = type <{ [4 x i8] }>
%G_0x70d194_type = type <{ [4 x i8] }>
%G_0x70d198_type = type <{ [4 x i8] }>
%G_0x70fcf0_type = type <{ [4 x i8] }>
%G_0x710a50_type = type <{ [4 x i8] }>
%G_0x711c40_type = type <{ [8 x i8] }>
%G_0x721df0_type = type <{ [8 x i8] }>
%G_0x722c98_type = type <{ [4 x i8] }>
%G_0x722ca8_type = type <{ [4 x i8] }>
%G_0x723e20_type = type <{ [8 x i8] }>
%G_0x7242a4_type = type <{ [4 x i8] }>
%G_0x725260_type = type <{ [4 x i8] }>
%G_0x7ea76__rip__type = type <{ [8 x i8] }>
%G_0x7eabe__rip__type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0C\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6cb908 = global %G_0x6cb908_type zeroinitializer
@G_0x6cc018 = global %G_0x6cc018_type zeroinitializer
@G_0x6cc020 = global %G_0x6cc020_type zeroinitializer
@G_0x6cc330 = global %G_0x6cc330_type zeroinitializer
@G_0x6cee50 = global %G_0x6cee50_type zeroinitializer
@G_0x6d11c8 = global %G_0x6d11c8_type zeroinitializer
@G_0x6d4758 = global %G_0x6d4758_type zeroinitializer
@G_0x6e51e8 = global %G_0x6e51e8_type zeroinitializer
@G_0x6f6e10 = global %G_0x6f6e10_type zeroinitializer
@G_0x6f80a8 = global %G_0x6f80a8_type zeroinitializer
@G_0x6f8edc = global %G_0x6f8edc_type zeroinitializer
@G_0x6f96a0 = global %G_0x6f96a0_type zeroinitializer
@G_0x6f9710 = global %G_0x6f9710_type zeroinitializer
@G_0x70d194 = global %G_0x70d194_type zeroinitializer
@G_0x70d198 = global %G_0x70d198_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G_0x710a50 = global %G_0x710a50_type zeroinitializer
@G_0x711c40 = global %G_0x711c40_type zeroinitializer
@G_0x721df0 = global %G_0x721df0_type zeroinitializer
@G_0x722c98 = global %G_0x722c98_type zeroinitializer
@G_0x722ca8 = global %G_0x722ca8_type zeroinitializer
@G_0x723e20 = global %G_0x723e20_type zeroinitializer
@G_0x7242a4 = global %G_0x7242a4_type zeroinitializer
@G_0x725260 = global %G_0x725260_type zeroinitializer
@G_0x7ea76__rip_ = global %G_0x7ea76__rip__type zeroinitializer
@G_0x7eabe__rip_ = global %G_0x7eabe__rip__type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4141a0.Configure(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4796b0.Init_QMatrix(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_47b780.Init_QOffsetMatrix(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4753c0.AllocNalPayloadBuffer(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_433390.init_poc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_476540.GenerateParameterSets(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_433520.init_img(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_434620.malloc_picture(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_481de0.init_rdopt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_41e540.init_gop_structure(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_41e620.interpret_gop_structure(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_41dcf0.create_pyramid(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_44b510.init_dpb(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_475ff0.init_out_buffer(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_434670.init_global_buffers(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_417770.create_context_memory(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_45df30.Init_Motion_Search_Module(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_434c40.information_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_47c370.rc_init_seq(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_41f8e0.DefineThreshold(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4176d0.PatchInputNoFrames(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_424830.start_sequence(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_434e40.SetImgType(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_47c890.rc_init_GOP(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_427d20.encode_one_frame(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_434fc0.report_frame_statistic(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_41ed40.encode_enhancement_layer(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_435f70.process_2nd_IGOP(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4249c0.terminate_sequence(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_453f60.flush_dpb(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4010b0.close_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401020.fclose_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_45e5b0.Clear_Motion_Search_Module(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_431bc0.RandomIntraUninit(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_425880.FmoUninit(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_41e5f0.clear_gop_structure(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_481d20.clear_rdopt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_431fd0.calc_buffer(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_436060.report(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_437560.free_picture(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_44b7b0.free_dpb(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4553f0.free_colocated(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_476010.uninit_out_buffer(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_437590.free_global_buffers(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_437a30.free_img(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_417ae0.free_context_memory(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_475430.FreeNalPayloadBuffer(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4775b0.FreeParameterSets(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @main(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_432710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_432710, %struct.Memory** %MEMORY
  %loadMem_432711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i190 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i191 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i190
  %27 = load i64, i64* %PC.i189
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i189
  store i64 %26, i64* %RBP.i191, align 8
  store %struct.Memory* %loadMem_432711, %struct.Memory** %MEMORY
  %loadMem_432714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i241 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i241
  %36 = load i64, i64* %PC.i240
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i240
  %38 = sub i64 %35, 144
  store i64 %38, i64* %RSP.i241, align 8
  %39 = icmp ult i64 %35, 144
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 144, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_432714, %struct.Memory** %MEMORY
  %loadMem_43271b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 15
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RBP.i264 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %RBP.i264
  %74 = sub i64 %73, 4
  %75 = load i64, i64* %PC.i263
  %76 = add i64 %75, 7
  store i64 %76, i64* %PC.i263
  %77 = inttoptr i64 %74 to i32*
  store i32 0, i32* %77
  store %struct.Memory* %loadMem_43271b, %struct.Memory** %MEMORY
  %loadMem_432722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 33
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 11
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %EDI.i361 = bitcast %union.anon* %83 to i32*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %85 = getelementptr inbounds %struct.GPR, %struct.GPR* %84, i32 0, i32 15
  %86 = getelementptr inbounds %struct.Reg, %struct.Reg* %85, i32 0, i32 0
  %RBP.i362 = bitcast %union.anon* %86 to i64*
  %87 = load i64, i64* %RBP.i362
  %88 = sub i64 %87, 8
  %89 = load i32, i32* %EDI.i361
  %90 = zext i32 %89 to i64
  %91 = load i64, i64* %PC.i360
  %92 = add i64 %91, 3
  store i64 %92, i64* %PC.i360
  %93 = inttoptr i64 %88 to i32*
  store i32 %89, i32* %93
  store %struct.Memory* %loadMem_432722, %struct.Memory** %MEMORY
  %loadMem_432725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 33
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %96 to i64*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 9
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RSI.i381 = bitcast %union.anon* %99 to i64*
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %101 = getelementptr inbounds %struct.GPR, %struct.GPR* %100, i32 0, i32 15
  %102 = getelementptr inbounds %struct.Reg, %struct.Reg* %101, i32 0, i32 0
  %RBP.i382 = bitcast %union.anon* %102 to i64*
  %103 = load i64, i64* %RBP.i382
  %104 = sub i64 %103, 16
  %105 = load i64, i64* %RSI.i381
  %106 = load i64, i64* %PC.i380
  %107 = add i64 %106, 4
  store i64 %107, i64* %PC.i380
  %108 = inttoptr i64 %104 to i64*
  store i64 %105, i64* %108
  store %struct.Memory* %loadMem_432725, %struct.Memory** %MEMORY
  %loadMem_432729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 33
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %111 to i64*
  %112 = load i64, i64* %PC.i565
  %113 = add i64 %112, 11
  store i64 %113, i64* %PC.i565
  store i32 -1, i32* bitcast (%G_0x6f6e10_type* @G_0x6f6e10 to i32*)
  store %struct.Memory* %loadMem_432729, %struct.Memory** %MEMORY
  %loadMem_432734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %116 to i64*
  %117 = load i64, i64* %PC.i685
  %118 = add i64 %117, 11
  store i64 %118, i64* %PC.i685
  store i32 -1, i32* bitcast (%G_0x7242a4_type* @G_0x7242a4 to i32*)
  store %struct.Memory* %loadMem_432734, %struct.Memory** %MEMORY
  %loadMem_43273f = load %struct.Memory*, %struct.Memory** %MEMORY
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.GPR, %struct.GPR* %119, i32 0, i32 33
  %121 = getelementptr inbounds %struct.Reg, %struct.Reg* %120, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %121 to i64*
  %122 = load i64, i64* %PC.i732
  %123 = add i64 %122, 12
  store i64 %123, i64* %PC.i732
  store i64 0, i64* bitcast (%G_0x723e20_type* @G_0x723e20 to i64*)
  store %struct.Memory* %loadMem_43273f, %struct.Memory** %MEMORY
  %loadMem_43274b = load %struct.Memory*, %struct.Memory** %MEMORY
  %124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %125 = getelementptr inbounds %struct.GPR, %struct.GPR* %124, i32 0, i32 33
  %126 = getelementptr inbounds %struct.Reg, %struct.Reg* %125, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %126 to i64*
  %127 = load i64, i64* %PC.i778
  %128 = add i64 %127, 12
  store i64 %128, i64* %PC.i778
  store i64 0, i64* bitcast (%G_0x70d198_type* @G_0x70d198 to i64*)
  store %struct.Memory* %loadMem_43274b, %struct.Memory** %MEMORY
  %loadMem_432757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 33
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %131 to i64*
  %132 = load i64, i64* %PC.i823
  %133 = add i64 %132, 12
  store i64 %133, i64* %PC.i823
  store i64 0, i64* bitcast (%G_0x6e51e8_type* @G_0x6e51e8 to i64*)
  store %struct.Memory* %loadMem_432757, %struct.Memory** %MEMORY
  %loadMem_432763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 33
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %PC.i979
  %138 = add i64 %137, 11
  store i64 %138, i64* %PC.i979
  store i32 1, i32* bitcast (%G_0x70d194_type* @G_0x70d194 to i32*)
  store %struct.Memory* %loadMem_432763, %struct.Memory** %MEMORY
  %loadMem_43276e = load %struct.Memory*, %struct.Memory** %MEMORY
  %139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %140 = getelementptr inbounds %struct.GPR, %struct.GPR* %139, i32 0, i32 33
  %141 = getelementptr inbounds %struct.Reg, %struct.Reg* %140, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %141 to i64*
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 11
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %RDI.i1075 = bitcast %union.anon* %144 to i64*
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 15
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %147 to i64*
  %148 = load i64, i64* %RBP.i1076
  %149 = sub i64 %148, 8
  %150 = load i64, i64* %PC.i1074
  %151 = add i64 %150, 3
  store i64 %151, i64* %PC.i1074
  %152 = inttoptr i64 %149 to i32*
  %153 = load i32, i32* %152
  %154 = zext i32 %153 to i64
  store i64 %154, i64* %RDI.i1075, align 8
  store %struct.Memory* %loadMem_43276e, %struct.Memory** %MEMORY
  %loadMem_432771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %156 = getelementptr inbounds %struct.GPR, %struct.GPR* %155, i32 0, i32 33
  %157 = getelementptr inbounds %struct.Reg, %struct.Reg* %156, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %157 to i64*
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 9
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %RSI.i1215 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 15
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %RBP.i1216 = bitcast %union.anon* %163 to i64*
  %164 = load i64, i64* %RBP.i1216
  %165 = sub i64 %164, 16
  %166 = load i64, i64* %PC.i1214
  %167 = add i64 %166, 4
  store i64 %167, i64* %PC.i1214
  %168 = inttoptr i64 %165 to i64*
  %169 = load i64, i64* %168
  store i64 %169, i64* %RSI.i1215, align 8
  store %struct.Memory* %loadMem_432771, %struct.Memory** %MEMORY
  %loadMem1_432775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %171 = getelementptr inbounds %struct.GPR, %struct.GPR* %170, i32 0, i32 33
  %172 = getelementptr inbounds %struct.Reg, %struct.Reg* %171, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %172 to i64*
  %173 = load i64, i64* %PC.i1213
  %174 = add i64 %173, -124373
  %175 = load i64, i64* %PC.i1213
  %176 = add i64 %175, 5
  %177 = load i64, i64* %PC.i1213
  %178 = add i64 %177, 5
  store i64 %178, i64* %PC.i1213
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, -8
  %182 = inttoptr i64 %181 to i64*
  store i64 %176, i64* %182
  store i64 %181, i64* %179, align 8
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %174, i64* %183, align 8
  store %struct.Memory* %loadMem1_432775, %struct.Memory** %MEMORY
  %loadMem2_432775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432775 = load i64, i64* %3
  %call2_432775 = call %struct.Memory* @sub_4141a0.Configure(%struct.State* %0, i64 %loadPC_432775, %struct.Memory* %loadMem2_432775)
  store %struct.Memory* %call2_432775, %struct.Memory** %MEMORY
  %loadMem1_43277a = load %struct.Memory*, %struct.Memory** %MEMORY
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 33
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %186 to i64*
  %187 = load i64, i64* %PC.i1212
  %188 = add i64 %187, 290614
  %189 = load i64, i64* %PC.i1212
  %190 = add i64 %189, 5
  %191 = load i64, i64* %PC.i1212
  %192 = add i64 %191, 5
  store i64 %192, i64* %PC.i1212
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = add i64 %194, -8
  %196 = inttoptr i64 %195 to i64*
  store i64 %190, i64* %196
  store i64 %195, i64* %193, align 8
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %188, i64* %197, align 8
  store %struct.Memory* %loadMem1_43277a, %struct.Memory** %MEMORY
  %loadMem2_43277a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43277a = load i64, i64* %3
  %call2_43277a = call %struct.Memory* @sub_4796b0.Init_QMatrix(%struct.State* %0, i64 %loadPC_43277a, %struct.Memory* %loadMem2_43277a)
  store %struct.Memory* %call2_43277a, %struct.Memory** %MEMORY
  %loadMem_43277f = load %struct.Memory*, %struct.Memory** %MEMORY
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 33
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 1
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %204 = bitcast %union.anon* %203 to %struct.anon.2*
  %AL.i1211 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %204, i32 0, i32 0
  %205 = load i64, i64* %PC.i1210
  %206 = add i64 %205, 2
  store i64 %206, i64* %PC.i1210
  store i8 0, i8* %AL.i1211, align 1
  store %struct.Memory* %loadMem_43277f, %struct.Memory** %MEMORY
  %loadMem1_432781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 33
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %209 to i64*
  %210 = load i64, i64* %PC.i1209
  %211 = add i64 %210, 299007
  %212 = load i64, i64* %PC.i1209
  %213 = add i64 %212, 5
  %214 = load i64, i64* %PC.i1209
  %215 = add i64 %214, 5
  store i64 %215, i64* %PC.i1209
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, -8
  %219 = inttoptr i64 %218 to i64*
  store i64 %213, i64* %219
  store i64 %218, i64* %216, align 8
  %220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %211, i64* %220, align 8
  store %struct.Memory* %loadMem1_432781, %struct.Memory** %MEMORY
  %loadMem2_432781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432781 = load i64, i64* %3
  %call2_432781 = call %struct.Memory* @sub_47b780.Init_QOffsetMatrix(%struct.State* %0, i64 %loadPC_432781, %struct.Memory* %loadMem2_432781)
  store %struct.Memory* %call2_432781, %struct.Memory** %MEMORY
  %loadMem_432786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 33
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %223 to i64*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 1
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %227 = bitcast %union.anon* %226 to %struct.anon.2*
  %AL.i1208 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %227, i32 0, i32 0
  %228 = load i64, i64* %PC.i1207
  %229 = add i64 %228, 2
  store i64 %229, i64* %PC.i1207
  store i8 0, i8* %AL.i1208, align 1
  store %struct.Memory* %loadMem_432786, %struct.Memory** %MEMORY
  %loadMem1_432788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %231 = getelementptr inbounds %struct.GPR, %struct.GPR* %230, i32 0, i32 33
  %232 = getelementptr inbounds %struct.Reg, %struct.Reg* %231, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %232 to i64*
  %233 = load i64, i64* %PC.i1206
  %234 = add i64 %233, 273464
  %235 = load i64, i64* %PC.i1206
  %236 = add i64 %235, 5
  %237 = load i64, i64* %PC.i1206
  %238 = add i64 %237, 5
  store i64 %238, i64* %PC.i1206
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = add i64 %240, -8
  %242 = inttoptr i64 %241 to i64*
  store i64 %236, i64* %242
  store i64 %241, i64* %239, align 8
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %234, i64* %243, align 8
  store %struct.Memory* %loadMem1_432788, %struct.Memory** %MEMORY
  %loadMem2_432788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432788 = load i64, i64* %3
  %call2_432788 = call %struct.Memory* @sub_4753c0.AllocNalPayloadBuffer(%struct.State* %0, i64 %loadPC_432788, %struct.Memory* %loadMem2_432788)
  store %struct.Memory* %call2_432788, %struct.Memory** %MEMORY
  %loadMem1_43278d = load %struct.Memory*, %struct.Memory** %MEMORY
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 33
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %246 to i64*
  %247 = load i64, i64* %PC.i1205
  %248 = add i64 %247, 3075
  %249 = load i64, i64* %PC.i1205
  %250 = add i64 %249, 5
  %251 = load i64, i64* %PC.i1205
  %252 = add i64 %251, 5
  store i64 %252, i64* %PC.i1205
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %254 = load i64, i64* %253, align 8
  %255 = add i64 %254, -8
  %256 = inttoptr i64 %255 to i64*
  store i64 %250, i64* %256
  store i64 %255, i64* %253, align 8
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %248, i64* %257, align 8
  store %struct.Memory* %loadMem1_43278d, %struct.Memory** %MEMORY
  %loadMem2_43278d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43278d = load i64, i64* %3
  %call2_43278d = call %struct.Memory* @sub_433390.init_poc(%struct.State* %0, i64 %loadPC_43278d, %struct.Memory* %loadMem2_43278d)
  store %struct.Memory* %call2_43278d, %struct.Memory** %MEMORY
  %loadMem_432792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %259 = getelementptr inbounds %struct.GPR, %struct.GPR* %258, i32 0, i32 33
  %260 = getelementptr inbounds %struct.Reg, %struct.Reg* %259, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %260 to i64*
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 1
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %264 = bitcast %union.anon* %263 to %struct.anon.2*
  %AL.i1204 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %264, i32 0, i32 0
  %265 = load i64, i64* %PC.i1203
  %266 = add i64 %265, 2
  store i64 %266, i64* %PC.i1203
  store i8 0, i8* %AL.i1204, align 1
  store %struct.Memory* %loadMem_432792, %struct.Memory** %MEMORY
  %loadMem1_432794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %268 = getelementptr inbounds %struct.GPR, %struct.GPR* %267, i32 0, i32 33
  %269 = getelementptr inbounds %struct.Reg, %struct.Reg* %268, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %269 to i64*
  %270 = load i64, i64* %PC.i1202
  %271 = add i64 %270, 277932
  %272 = load i64, i64* %PC.i1202
  %273 = add i64 %272, 5
  %274 = load i64, i64* %PC.i1202
  %275 = add i64 %274, 5
  store i64 %275, i64* %PC.i1202
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %277 = load i64, i64* %276, align 8
  %278 = add i64 %277, -8
  %279 = inttoptr i64 %278 to i64*
  store i64 %273, i64* %279
  store i64 %278, i64* %276, align 8
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %271, i64* %280, align 8
  store %struct.Memory* %loadMem1_432794, %struct.Memory** %MEMORY
  %loadMem2_432794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432794 = load i64, i64* %3
  %call2_432794 = call %struct.Memory* @sub_476540.GenerateParameterSets(%struct.State* %0, i64 %loadPC_432794, %struct.Memory* %loadMem2_432794)
  store %struct.Memory* %call2_432794, %struct.Memory** %MEMORY
  %loadMem1_432799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 33
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %283 to i64*
  %284 = load i64, i64* %PC.i1201
  %285 = add i64 %284, 3463
  %286 = load i64, i64* %PC.i1201
  %287 = add i64 %286, 5
  %288 = load i64, i64* %PC.i1201
  %289 = add i64 %288, 5
  store i64 %289, i64* %PC.i1201
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %291 = load i64, i64* %290, align 8
  %292 = add i64 %291, -8
  %293 = inttoptr i64 %292 to i64*
  store i64 %287, i64* %293
  store i64 %292, i64* %290, align 8
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %285, i64* %294, align 8
  store %struct.Memory* %loadMem1_432799, %struct.Memory** %MEMORY
  %loadMem2_432799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432799 = load i64, i64* %3
  %call2_432799 = call %struct.Memory* @sub_433520.init_img(%struct.State* %0, i64 %loadPC_432799, %struct.Memory* %loadMem2_432799)
  store %struct.Memory* %call2_432799, %struct.Memory** %MEMORY
  %loadMem1_43279e = load %struct.Memory*, %struct.Memory** %MEMORY
  %295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %296 = getelementptr inbounds %struct.GPR, %struct.GPR* %295, i32 0, i32 33
  %297 = getelementptr inbounds %struct.Reg, %struct.Reg* %296, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %297 to i64*
  %298 = load i64, i64* %PC.i1200
  %299 = add i64 %298, 7810
  %300 = load i64, i64* %PC.i1200
  %301 = add i64 %300, 5
  %302 = load i64, i64* %PC.i1200
  %303 = add i64 %302, 5
  store i64 %303, i64* %PC.i1200
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %305 = load i64, i64* %304, align 8
  %306 = add i64 %305, -8
  %307 = inttoptr i64 %306 to i64*
  store i64 %301, i64* %307
  store i64 %306, i64* %304, align 8
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %299, i64* %308, align 8
  store %struct.Memory* %loadMem1_43279e, %struct.Memory** %MEMORY
  %loadMem2_43279e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43279e = load i64, i64* %3
  %call2_43279e = call %struct.Memory* @sub_434620.malloc_picture(%struct.State* %0, i64 %loadPC_43279e, %struct.Memory* %loadMem2_43279e)
  store %struct.Memory* %call2_43279e, %struct.Memory** %MEMORY
  %loadMem_4327a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %310 = getelementptr inbounds %struct.GPR, %struct.GPR* %309, i32 0, i32 33
  %311 = getelementptr inbounds %struct.Reg, %struct.Reg* %310, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %311 to i64*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %313 = getelementptr inbounds %struct.GPR, %struct.GPR* %312, i32 0, i32 1
  %314 = getelementptr inbounds %struct.Reg, %struct.Reg* %313, i32 0, i32 0
  %RAX.i1199 = bitcast %union.anon* %314 to i64*
  %315 = load i64, i64* %RAX.i1199
  %316 = load i64, i64* %PC.i1198
  %317 = add i64 %316, 8
  store i64 %317, i64* %PC.i1198
  store i64 %315, i64* bitcast (%G_0x711c40_type* @G_0x711c40 to i64*)
  store %struct.Memory* %loadMem_4327a3, %struct.Memory** %MEMORY
  %loadMem_4327ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 33
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %320 to i64*
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %322 = getelementptr inbounds %struct.GPR, %struct.GPR* %321, i32 0, i32 1
  %323 = getelementptr inbounds %struct.Reg, %struct.Reg* %322, i32 0, i32 0
  %RAX.i1197 = bitcast %union.anon* %323 to i64*
  %324 = load i64, i64* %PC.i1196
  %325 = add i64 %324, 8
  store i64 %325, i64* %PC.i1196
  %326 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %326, i64* %RAX.i1197, align 8
  store %struct.Memory* %loadMem_4327ab, %struct.Memory** %MEMORY
  %loadMem_4327b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %328 = getelementptr inbounds %struct.GPR, %struct.GPR* %327, i32 0, i32 33
  %329 = getelementptr inbounds %struct.Reg, %struct.Reg* %328, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %329 to i64*
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %331 = getelementptr inbounds %struct.GPR, %struct.GPR* %330, i32 0, i32 1
  %332 = getelementptr inbounds %struct.Reg, %struct.Reg* %331, i32 0, i32 0
  %RAX.i1195 = bitcast %union.anon* %332 to i64*
  %333 = load i64, i64* %RAX.i1195
  %334 = add i64 %333, 1296
  %335 = load i64, i64* %PC.i1194
  %336 = add i64 %335, 7
  store i64 %336, i64* %PC.i1194
  %337 = inttoptr i64 %334 to i32*
  %338 = load i32, i32* %337
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %339, align 1
  %340 = and i32 %338, 255
  %341 = call i32 @llvm.ctpop.i32(i32 %340)
  %342 = trunc i32 %341 to i8
  %343 = and i8 %342, 1
  %344 = xor i8 %343, 1
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %344, i8* %345, align 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %346, align 1
  %347 = icmp eq i32 %338, 0
  %348 = zext i1 %347 to i8
  %349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %348, i8* %349, align 1
  %350 = lshr i32 %338, 31
  %351 = trunc i32 %350 to i8
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %351, i8* %352, align 1
  %353 = lshr i32 %338, 31
  %354 = xor i32 %350, %353
  %355 = add i32 %354, %353
  %356 = icmp eq i32 %355, 2
  %357 = zext i1 %356 to i8
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %357, i8* %358, align 1
  store %struct.Memory* %loadMem_4327b3, %struct.Memory** %MEMORY
  %loadMem_4327ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %360 = getelementptr inbounds %struct.GPR, %struct.GPR* %359, i32 0, i32 33
  %361 = getelementptr inbounds %struct.Reg, %struct.Reg* %360, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %361 to i64*
  %362 = load i64, i64* %PC.i1193
  %363 = add i64 %362, 32
  %364 = load i64, i64* %PC.i1193
  %365 = add i64 %364, 6
  %366 = load i64, i64* %PC.i1193
  %367 = add i64 %366, 6
  store i64 %367, i64* %PC.i1193
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %369 = load i8, i8* %368, align 1
  store i8 %369, i8* %BRANCH_TAKEN, align 1
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %371 = icmp ne i8 %369, 0
  %372 = select i1 %371, i64 %363, i64 %365
  store i64 %372, i64* %370, align 8
  store %struct.Memory* %loadMem_4327ba, %struct.Memory** %MEMORY
  %loadBr_4327ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4327ba = icmp eq i8 %loadBr_4327ba, 1
  br i1 %cmpBr_4327ba, label %block_.L_4327da, label %block_4327c0

block_4327c0:                                     ; preds = %entry
  %loadMem1_4327c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %374 = getelementptr inbounds %struct.GPR, %struct.GPR* %373, i32 0, i32 33
  %375 = getelementptr inbounds %struct.Reg, %struct.Reg* %374, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %375 to i64*
  %376 = load i64, i64* %PC.i1192
  %377 = add i64 %376, 7776
  %378 = load i64, i64* %PC.i1192
  %379 = add i64 %378, 5
  %380 = load i64, i64* %PC.i1192
  %381 = add i64 %380, 5
  store i64 %381, i64* %PC.i1192
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %383 = load i64, i64* %382, align 8
  %384 = add i64 %383, -8
  %385 = inttoptr i64 %384 to i64*
  store i64 %379, i64* %385
  store i64 %384, i64* %382, align 8
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %377, i64* %386, align 8
  store %struct.Memory* %loadMem1_4327c0, %struct.Memory** %MEMORY
  %loadMem2_4327c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4327c0 = load i64, i64* %3
  %call2_4327c0 = call %struct.Memory* @sub_434620.malloc_picture(%struct.State* %0, i64 %loadPC_4327c0, %struct.Memory* %loadMem2_4327c0)
  store %struct.Memory* %call2_4327c0, %struct.Memory** %MEMORY
  %loadMem_4327c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %388 = getelementptr inbounds %struct.GPR, %struct.GPR* %387, i32 0, i32 33
  %389 = getelementptr inbounds %struct.Reg, %struct.Reg* %388, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %389 to i64*
  %390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %391 = getelementptr inbounds %struct.GPR, %struct.GPR* %390, i32 0, i32 1
  %392 = getelementptr inbounds %struct.Reg, %struct.Reg* %391, i32 0, i32 0
  %RAX.i1191 = bitcast %union.anon* %392 to i64*
  %393 = load i64, i64* %RAX.i1191
  %394 = load i64, i64* %PC.i1190
  %395 = add i64 %394, 8
  store i64 %395, i64* %PC.i1190
  store i64 %393, i64* bitcast (%G_0x6d11c8_type* @G_0x6d11c8 to i64*)
  store %struct.Memory* %loadMem_4327c5, %struct.Memory** %MEMORY
  %loadMem1_4327cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 33
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %398 to i64*
  %399 = load i64, i64* %PC.i1189
  %400 = add i64 %399, 7763
  %401 = load i64, i64* %PC.i1189
  %402 = add i64 %401, 5
  %403 = load i64, i64* %PC.i1189
  %404 = add i64 %403, 5
  store i64 %404, i64* %PC.i1189
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %406 = load i64, i64* %405, align 8
  %407 = add i64 %406, -8
  %408 = inttoptr i64 %407 to i64*
  store i64 %402, i64* %408
  store i64 %407, i64* %405, align 8
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %400, i64* %409, align 8
  store %struct.Memory* %loadMem1_4327cd, %struct.Memory** %MEMORY
  %loadMem2_4327cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4327cd = load i64, i64* %3
  %call2_4327cd = call %struct.Memory* @sub_434620.malloc_picture(%struct.State* %0, i64 %loadPC_4327cd, %struct.Memory* %loadMem2_4327cd)
  store %struct.Memory* %call2_4327cd, %struct.Memory** %MEMORY
  %loadMem_4327d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %411 = getelementptr inbounds %struct.GPR, %struct.GPR* %410, i32 0, i32 33
  %412 = getelementptr inbounds %struct.Reg, %struct.Reg* %411, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %412 to i64*
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %414 = getelementptr inbounds %struct.GPR, %struct.GPR* %413, i32 0, i32 1
  %415 = getelementptr inbounds %struct.Reg, %struct.Reg* %414, i32 0, i32 0
  %RAX.i1188 = bitcast %union.anon* %415 to i64*
  %416 = load i64, i64* %RAX.i1188
  %417 = load i64, i64* %PC.i1187
  %418 = add i64 %417, 8
  store i64 %418, i64* %PC.i1187
  store i64 %416, i64* bitcast (%G_0x721df0_type* @G_0x721df0 to i64*)
  store %struct.Memory* %loadMem_4327d2, %struct.Memory** %MEMORY
  br label %block_.L_4327da

block_.L_4327da:                                  ; preds = %block_4327c0, %entry
  %loadMem_4327da = load %struct.Memory*, %struct.Memory** %MEMORY
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %420 = getelementptr inbounds %struct.GPR, %struct.GPR* %419, i32 0, i32 33
  %421 = getelementptr inbounds %struct.Reg, %struct.Reg* %420, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %421 to i64*
  %422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %423 = getelementptr inbounds %struct.GPR, %struct.GPR* %422, i32 0, i32 1
  %424 = getelementptr inbounds %struct.Reg, %struct.Reg* %423, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %424 to i64*
  %425 = load i64, i64* %PC.i1185
  %426 = add i64 %425, 8
  store i64 %426, i64* %PC.i1185
  %427 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %427, i64* %RAX.i1186, align 8
  store %struct.Memory* %loadMem_4327da, %struct.Memory** %MEMORY
  %loadMem_4327e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %429 = getelementptr inbounds %struct.GPR, %struct.GPR* %428, i32 0, i32 33
  %430 = getelementptr inbounds %struct.Reg, %struct.Reg* %429, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %430 to i64*
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %432 = getelementptr inbounds %struct.GPR, %struct.GPR* %431, i32 0, i32 1
  %433 = getelementptr inbounds %struct.Reg, %struct.Reg* %432, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %433 to i64*
  %434 = load i64, i64* %RAX.i1184
  %435 = add i64 %434, 2880
  %436 = load i64, i64* %PC.i1183
  %437 = add i64 %436, 7
  store i64 %437, i64* %PC.i1183
  %438 = inttoptr i64 %435 to i32*
  %439 = load i32, i32* %438
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %440, align 1
  %441 = and i32 %439, 255
  %442 = call i32 @llvm.ctpop.i32(i32 %441)
  %443 = trunc i32 %442 to i8
  %444 = and i8 %443, 1
  %445 = xor i8 %444, 1
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %445, i8* %446, align 1
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %447, align 1
  %448 = icmp eq i32 %439, 0
  %449 = zext i1 %448 to i8
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %449, i8* %450, align 1
  %451 = lshr i32 %439, 31
  %452 = trunc i32 %451 to i8
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %452, i8* %453, align 1
  %454 = lshr i32 %439, 31
  %455 = xor i32 %451, %454
  %456 = add i32 %455, %454
  %457 = icmp eq i32 %456, 2
  %458 = zext i1 %457 to i8
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %458, i8* %459, align 1
  store %struct.Memory* %loadMem_4327e2, %struct.Memory** %MEMORY
  %loadMem_4327e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %461 = getelementptr inbounds %struct.GPR, %struct.GPR* %460, i32 0, i32 33
  %462 = getelementptr inbounds %struct.Reg, %struct.Reg* %461, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %462 to i64*
  %463 = load i64, i64* %PC.i1182
  %464 = add i64 %463, 32
  %465 = load i64, i64* %PC.i1182
  %466 = add i64 %465, 6
  %467 = load i64, i64* %PC.i1182
  %468 = add i64 %467, 6
  store i64 %468, i64* %PC.i1182
  %469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %470 = load i8, i8* %469, align 1
  store i8 %470, i8* %BRANCH_TAKEN, align 1
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %472 = icmp ne i8 %470, 0
  %473 = select i1 %472, i64 %464, i64 %466
  store i64 %473, i64* %471, align 8
  store %struct.Memory* %loadMem_4327e9, %struct.Memory** %MEMORY
  %loadBr_4327e9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4327e9 = icmp eq i8 %loadBr_4327e9, 1
  br i1 %cmpBr_4327e9, label %block_.L_432809, label %block_4327ef

block_4327ef:                                     ; preds = %block_.L_4327da
  %loadMem1_4327ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %475 = getelementptr inbounds %struct.GPR, %struct.GPR* %474, i32 0, i32 33
  %476 = getelementptr inbounds %struct.Reg, %struct.Reg* %475, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %476 to i64*
  %477 = load i64, i64* %PC.i1181
  %478 = add i64 %477, 7729
  %479 = load i64, i64* %PC.i1181
  %480 = add i64 %479, 5
  %481 = load i64, i64* %PC.i1181
  %482 = add i64 %481, 5
  store i64 %482, i64* %PC.i1181
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %484 = load i64, i64* %483, align 8
  %485 = add i64 %484, -8
  %486 = inttoptr i64 %485 to i64*
  store i64 %480, i64* %486
  store i64 %485, i64* %483, align 8
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %478, i64* %487, align 8
  store %struct.Memory* %loadMem1_4327ef, %struct.Memory** %MEMORY
  %loadMem2_4327ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4327ef = load i64, i64* %3
  %call2_4327ef = call %struct.Memory* @sub_434620.malloc_picture(%struct.State* %0, i64 %loadPC_4327ef, %struct.Memory* %loadMem2_4327ef)
  store %struct.Memory* %call2_4327ef, %struct.Memory** %MEMORY
  %loadMem_4327f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 33
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %490 to i64*
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 1
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %RAX.i1180 = bitcast %union.anon* %493 to i64*
  %494 = load i64, i64* %RAX.i1180
  %495 = load i64, i64* %PC.i1179
  %496 = add i64 %495, 8
  store i64 %496, i64* %PC.i1179
  store i64 %494, i64* bitcast (%G_0x6d4758_type* @G_0x6d4758 to i64*)
  store %struct.Memory* %loadMem_4327f4, %struct.Memory** %MEMORY
  %loadMem1_4327fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %498 = getelementptr inbounds %struct.GPR, %struct.GPR* %497, i32 0, i32 33
  %499 = getelementptr inbounds %struct.Reg, %struct.Reg* %498, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %499 to i64*
  %500 = load i64, i64* %PC.i1178
  %501 = add i64 %500, 7716
  %502 = load i64, i64* %PC.i1178
  %503 = add i64 %502, 5
  %504 = load i64, i64* %PC.i1178
  %505 = add i64 %504, 5
  store i64 %505, i64* %PC.i1178
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %507 = load i64, i64* %506, align 8
  %508 = add i64 %507, -8
  %509 = inttoptr i64 %508 to i64*
  store i64 %503, i64* %509
  store i64 %508, i64* %506, align 8
  %510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %501, i64* %510, align 8
  store %struct.Memory* %loadMem1_4327fc, %struct.Memory** %MEMORY
  %loadMem2_4327fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4327fc = load i64, i64* %3
  %call2_4327fc = call %struct.Memory* @sub_434620.malloc_picture(%struct.State* %0, i64 %loadPC_4327fc, %struct.Memory* %loadMem2_4327fc)
  store %struct.Memory* %call2_4327fc, %struct.Memory** %MEMORY
  %loadMem_432801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %512 = getelementptr inbounds %struct.GPR, %struct.GPR* %511, i32 0, i32 33
  %513 = getelementptr inbounds %struct.Reg, %struct.Reg* %512, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %513 to i64*
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 1
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %RAX.i1177 = bitcast %union.anon* %516 to i64*
  %517 = load i64, i64* %RAX.i1177
  %518 = load i64, i64* %PC.i1176
  %519 = add i64 %518, 8
  store i64 %519, i64* %PC.i1176
  store i64 %517, i64* bitcast (%G_0x6f80a8_type* @G_0x6f80a8 to i64*)
  store %struct.Memory* %loadMem_432801, %struct.Memory** %MEMORY
  br label %block_.L_432809

block_.L_432809:                                  ; preds = %block_4327ef, %block_.L_4327da
  %loadMem_432809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %521 = getelementptr inbounds %struct.GPR, %struct.GPR* %520, i32 0, i32 33
  %522 = getelementptr inbounds %struct.Reg, %struct.Reg* %521, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %522 to i64*
  %523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %524 = getelementptr inbounds %struct.GPR, %struct.GPR* %523, i32 0, i32 1
  %525 = getelementptr inbounds %struct.Reg, %struct.Reg* %524, i32 0, i32 0
  %526 = bitcast %union.anon* %525 to %struct.anon.2*
  %AL.i1175 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %526, i32 0, i32 0
  %527 = load i64, i64* %PC.i1174
  %528 = add i64 %527, 2
  store i64 %528, i64* %PC.i1174
  store i8 0, i8* %AL.i1175, align 1
  store %struct.Memory* %loadMem_432809, %struct.Memory** %MEMORY
  %loadMem1_43280b = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %531 to i64*
  %532 = load i64, i64* %PC.i1173
  %533 = add i64 %532, 325077
  %534 = load i64, i64* %PC.i1173
  %535 = add i64 %534, 5
  %536 = load i64, i64* %PC.i1173
  %537 = add i64 %536, 5
  store i64 %537, i64* %PC.i1173
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %539 = load i64, i64* %538, align 8
  %540 = add i64 %539, -8
  %541 = inttoptr i64 %540 to i64*
  store i64 %535, i64* %541
  store i64 %540, i64* %538, align 8
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %533, i64* %542, align 8
  store %struct.Memory* %loadMem1_43280b, %struct.Memory** %MEMORY
  %loadMem2_43280b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43280b = load i64, i64* %3
  %call2_43280b = call %struct.Memory* @sub_481de0.init_rdopt(%struct.State* %0, i64 %loadPC_43280b, %struct.Memory* %loadMem2_43280b)
  store %struct.Memory* %call2_43280b, %struct.Memory** %MEMORY
  %loadMem_432810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %544 = getelementptr inbounds %struct.GPR, %struct.GPR* %543, i32 0, i32 33
  %545 = getelementptr inbounds %struct.Reg, %struct.Reg* %544, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %545 to i64*
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %547 = getelementptr inbounds %struct.GPR, %struct.GPR* %546, i32 0, i32 5
  %548 = getelementptr inbounds %struct.Reg, %struct.Reg* %547, i32 0, i32 0
  %RCX.i1172 = bitcast %union.anon* %548 to i64*
  %549 = load i64, i64* %PC.i1171
  %550 = add i64 %549, 8
  store i64 %550, i64* %PC.i1171
  %551 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %551, i64* %RCX.i1172, align 8
  store %struct.Memory* %loadMem_432810, %struct.Memory** %MEMORY
  %loadMem_432818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %553 = getelementptr inbounds %struct.GPR, %struct.GPR* %552, i32 0, i32 33
  %554 = getelementptr inbounds %struct.Reg, %struct.Reg* %553, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %554 to i64*
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %556 = getelementptr inbounds %struct.GPR, %struct.GPR* %555, i32 0, i32 5
  %557 = getelementptr inbounds %struct.Reg, %struct.Reg* %556, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %557 to i64*
  %558 = load i64, i64* %RCX.i1170
  %559 = add i64 %558, 1320
  %560 = load i64, i64* %PC.i1169
  %561 = add i64 %560, 7
  store i64 %561, i64* %PC.i1169
  %562 = inttoptr i64 %559 to i32*
  %563 = load i32, i32* %562
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %564, align 1
  %565 = and i32 %563, 255
  %566 = call i32 @llvm.ctpop.i32(i32 %565)
  %567 = trunc i32 %566 to i8
  %568 = and i8 %567, 1
  %569 = xor i8 %568, 1
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %569, i8* %570, align 1
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %571, align 1
  %572 = icmp eq i32 %563, 0
  %573 = zext i1 %572 to i8
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %573, i8* %574, align 1
  %575 = lshr i32 %563, 31
  %576 = trunc i32 %575 to i8
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %576, i8* %577, align 1
  %578 = lshr i32 %563, 31
  %579 = xor i32 %575, %578
  %580 = add i32 %579, %578
  %581 = icmp eq i32 %580, 2
  %582 = zext i1 %581 to i8
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %582, i8* %583, align 1
  store %struct.Memory* %loadMem_432818, %struct.Memory** %MEMORY
  %loadMem_43281f = load %struct.Memory*, %struct.Memory** %MEMORY
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %585 = getelementptr inbounds %struct.GPR, %struct.GPR* %584, i32 0, i32 33
  %586 = getelementptr inbounds %struct.Reg, %struct.Reg* %585, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %586 to i64*
  %587 = load i64, i64* %PC.i1168
  %588 = add i64 %587, 58
  %589 = load i64, i64* %PC.i1168
  %590 = add i64 %589, 6
  %591 = load i64, i64* %PC.i1168
  %592 = add i64 %591, 6
  store i64 %592, i64* %PC.i1168
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %594 = load i8, i8* %593, align 1
  store i8 %594, i8* %BRANCH_TAKEN, align 1
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %596 = icmp ne i8 %594, 0
  %597 = select i1 %596, i64 %588, i64 %590
  store i64 %597, i64* %595, align 8
  store %struct.Memory* %loadMem_43281f, %struct.Memory** %MEMORY
  %loadBr_43281f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43281f = icmp eq i8 %loadBr_43281f, 1
  br i1 %cmpBr_43281f, label %block_.L_432859, label %block_432825

block_432825:                                     ; preds = %block_.L_432809
  %loadMem_432825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %599 = getelementptr inbounds %struct.GPR, %struct.GPR* %598, i32 0, i32 33
  %600 = getelementptr inbounds %struct.Reg, %struct.Reg* %599, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %600 to i64*
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %602 = getelementptr inbounds %struct.GPR, %struct.GPR* %601, i32 0, i32 1
  %603 = getelementptr inbounds %struct.Reg, %struct.Reg* %602, i32 0, i32 0
  %604 = bitcast %union.anon* %603 to %struct.anon.2*
  %AL.i1167 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %604, i32 0, i32 0
  %605 = load i64, i64* %PC.i1166
  %606 = add i64 %605, 2
  store i64 %606, i64* %PC.i1166
  store i8 0, i8* %AL.i1167, align 1
  store %struct.Memory* %loadMem_432825, %struct.Memory** %MEMORY
  %loadMem1_432827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 33
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %609 to i64*
  %610 = load i64, i64* %PC.i1165
  %611 = add i64 %610, -82663
  %612 = load i64, i64* %PC.i1165
  %613 = add i64 %612, 5
  %614 = load i64, i64* %PC.i1165
  %615 = add i64 %614, 5
  store i64 %615, i64* %PC.i1165
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %617 = load i64, i64* %616, align 8
  %618 = add i64 %617, -8
  %619 = inttoptr i64 %618 to i64*
  store i64 %613, i64* %619
  store i64 %618, i64* %616, align 8
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %611, i64* %620, align 8
  store %struct.Memory* %loadMem1_432827, %struct.Memory** %MEMORY
  %loadMem2_432827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432827 = load i64, i64* %3
  %call2_432827 = call %struct.Memory* @sub_41e540.init_gop_structure(%struct.State* %0, i64 %loadPC_432827, %struct.Memory* %loadMem2_432827)
  store %struct.Memory* %call2_432827, %struct.Memory** %MEMORY
  %loadMem_43282c = load %struct.Memory*, %struct.Memory** %MEMORY
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 33
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %623 to i64*
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %625 = getelementptr inbounds %struct.GPR, %struct.GPR* %624, i32 0, i32 5
  %626 = getelementptr inbounds %struct.Reg, %struct.Reg* %625, i32 0, i32 0
  %RCX.i1164 = bitcast %union.anon* %626 to i64*
  %627 = load i64, i64* %PC.i1163
  %628 = add i64 %627, 8
  store i64 %628, i64* %PC.i1163
  %629 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %629, i64* %RCX.i1164, align 8
  store %struct.Memory* %loadMem_43282c, %struct.Memory** %MEMORY
  %loadMem_432834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %631 = getelementptr inbounds %struct.GPR, %struct.GPR* %630, i32 0, i32 33
  %632 = getelementptr inbounds %struct.Reg, %struct.Reg* %631, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %632 to i64*
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 5
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %RCX.i1162 = bitcast %union.anon* %635 to i64*
  %636 = load i64, i64* %RCX.i1162
  %637 = add i64 %636, 1320
  %638 = load i64, i64* %PC.i1161
  %639 = add i64 %638, 7
  store i64 %639, i64* %PC.i1161
  %640 = inttoptr i64 %637 to i32*
  %641 = load i32, i32* %640
  %642 = sub i32 %641, 3
  %643 = icmp ult i32 %641, 3
  %644 = zext i1 %643 to i8
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %644, i8* %645, align 1
  %646 = and i32 %642, 255
  %647 = call i32 @llvm.ctpop.i32(i32 %646)
  %648 = trunc i32 %647 to i8
  %649 = and i8 %648, 1
  %650 = xor i8 %649, 1
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %650, i8* %651, align 1
  %652 = xor i32 %641, 3
  %653 = xor i32 %652, %642
  %654 = lshr i32 %653, 4
  %655 = trunc i32 %654 to i8
  %656 = and i8 %655, 1
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %656, i8* %657, align 1
  %658 = icmp eq i32 %642, 0
  %659 = zext i1 %658 to i8
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %659, i8* %660, align 1
  %661 = lshr i32 %642, 31
  %662 = trunc i32 %661 to i8
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %662, i8* %663, align 1
  %664 = lshr i32 %641, 31
  %665 = xor i32 %661, %664
  %666 = add i32 %665, %664
  %667 = icmp eq i32 %666, 2
  %668 = zext i1 %667 to i8
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %668, i8* %669, align 1
  store %struct.Memory* %loadMem_432834, %struct.Memory** %MEMORY
  %loadMem_43283b = load %struct.Memory*, %struct.Memory** %MEMORY
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %671 = getelementptr inbounds %struct.GPR, %struct.GPR* %670, i32 0, i32 33
  %672 = getelementptr inbounds %struct.Reg, %struct.Reg* %671, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %672 to i64*
  %673 = load i64, i64* %PC.i1160
  %674 = add i64 %673, 18
  %675 = load i64, i64* %PC.i1160
  %676 = add i64 %675, 6
  %677 = load i64, i64* %PC.i1160
  %678 = add i64 %677, 6
  store i64 %678, i64* %PC.i1160
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %680 = load i8, i8* %679, align 1
  %681 = icmp eq i8 %680, 0
  %682 = zext i1 %681 to i8
  store i8 %682, i8* %BRANCH_TAKEN, align 1
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %684 = select i1 %681, i64 %674, i64 %676
  store i64 %684, i64* %683, align 8
  store %struct.Memory* %loadMem_43283b, %struct.Memory** %MEMORY
  %loadBr_43283b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43283b = icmp eq i8 %loadBr_43283b, 1
  br i1 %cmpBr_43283b, label %block_.L_43284d, label %block_432841

block_432841:                                     ; preds = %block_432825
  %loadMem_432841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %686 = getelementptr inbounds %struct.GPR, %struct.GPR* %685, i32 0, i32 33
  %687 = getelementptr inbounds %struct.Reg, %struct.Reg* %686, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %687 to i64*
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 1
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %691 = bitcast %union.anon* %690 to %struct.anon.2*
  %AL.i1159 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %691, i32 0, i32 0
  %692 = load i64, i64* %PC.i1158
  %693 = add i64 %692, 2
  store i64 %693, i64* %PC.i1158
  store i8 0, i8* %AL.i1159, align 1
  store %struct.Memory* %loadMem_432841, %struct.Memory** %MEMORY
  %loadMem1_432843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %695 = getelementptr inbounds %struct.GPR, %struct.GPR* %694, i32 0, i32 33
  %696 = getelementptr inbounds %struct.Reg, %struct.Reg* %695, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %696 to i64*
  %697 = load i64, i64* %PC.i1157
  %698 = add i64 %697, -82467
  %699 = load i64, i64* %PC.i1157
  %700 = add i64 %699, 5
  %701 = load i64, i64* %PC.i1157
  %702 = add i64 %701, 5
  store i64 %702, i64* %PC.i1157
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %704 = load i64, i64* %703, align 8
  %705 = add i64 %704, -8
  %706 = inttoptr i64 %705 to i64*
  store i64 %700, i64* %706
  store i64 %705, i64* %703, align 8
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %698, i64* %707, align 8
  store %struct.Memory* %loadMem1_432843, %struct.Memory** %MEMORY
  %loadMem2_432843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432843 = load i64, i64* %3
  %call2_432843 = call %struct.Memory* @sub_41e620.interpret_gop_structure(%struct.State* %0, i64 %loadPC_432843, %struct.Memory* %loadMem2_432843)
  store %struct.Memory* %call2_432843, %struct.Memory** %MEMORY
  %loadMem_432848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 33
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %710 to i64*
  %711 = load i64, i64* %PC.i1156
  %712 = add i64 %711, 12
  %713 = load i64, i64* %PC.i1156
  %714 = add i64 %713, 5
  store i64 %714, i64* %PC.i1156
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %712, i64* %715, align 8
  store %struct.Memory* %loadMem_432848, %struct.Memory** %MEMORY
  br label %block_.L_432854

block_.L_43284d:                                  ; preds = %block_432825
  %loadMem_43284d = load %struct.Memory*, %struct.Memory** %MEMORY
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %717 = getelementptr inbounds %struct.GPR, %struct.GPR* %716, i32 0, i32 33
  %718 = getelementptr inbounds %struct.Reg, %struct.Reg* %717, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %718 to i64*
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %720 = getelementptr inbounds %struct.GPR, %struct.GPR* %719, i32 0, i32 1
  %721 = getelementptr inbounds %struct.Reg, %struct.Reg* %720, i32 0, i32 0
  %722 = bitcast %union.anon* %721 to %struct.anon.2*
  %AL.i1155 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %722, i32 0, i32 0
  %723 = load i64, i64* %PC.i1154
  %724 = add i64 %723, 2
  store i64 %724, i64* %PC.i1154
  store i8 0, i8* %AL.i1155, align 1
  store %struct.Memory* %loadMem_43284d, %struct.Memory** %MEMORY
  %loadMem1_43284f = load %struct.Memory*, %struct.Memory** %MEMORY
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 33
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %727 to i64*
  %728 = load i64, i64* %PC.i1153
  %729 = add i64 %728, -84831
  %730 = load i64, i64* %PC.i1153
  %731 = add i64 %730, 5
  %732 = load i64, i64* %PC.i1153
  %733 = add i64 %732, 5
  store i64 %733, i64* %PC.i1153
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %735 = load i64, i64* %734, align 8
  %736 = add i64 %735, -8
  %737 = inttoptr i64 %736 to i64*
  store i64 %731, i64* %737
  store i64 %736, i64* %734, align 8
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %729, i64* %738, align 8
  store %struct.Memory* %loadMem1_43284f, %struct.Memory** %MEMORY
  %loadMem2_43284f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43284f = load i64, i64* %3
  %call2_43284f = call %struct.Memory* @sub_41dcf0.create_pyramid(%struct.State* %0, i64 %loadPC_43284f, %struct.Memory* %loadMem2_43284f)
  store %struct.Memory* %call2_43284f, %struct.Memory** %MEMORY
  br label %block_.L_432854

block_.L_432854:                                  ; preds = %block_.L_43284d, %block_432841
  %loadMem_432854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %740 = getelementptr inbounds %struct.GPR, %struct.GPR* %739, i32 0, i32 33
  %741 = getelementptr inbounds %struct.Reg, %struct.Reg* %740, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %741 to i64*
  %742 = load i64, i64* %PC.i1152
  %743 = add i64 %742, 5
  %744 = load i64, i64* %PC.i1152
  %745 = add i64 %744, 5
  store i64 %745, i64* %PC.i1152
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %743, i64* %746, align 8
  store %struct.Memory* %loadMem_432854, %struct.Memory** %MEMORY
  br label %block_.L_432859

block_.L_432859:                                  ; preds = %block_.L_432854, %block_.L_432809
  %loadMem_432859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %748 = getelementptr inbounds %struct.GPR, %struct.GPR* %747, i32 0, i32 33
  %749 = getelementptr inbounds %struct.Reg, %struct.Reg* %748, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %749 to i64*
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %751 = getelementptr inbounds %struct.GPR, %struct.GPR* %750, i32 0, i32 11
  %752 = getelementptr inbounds %struct.Reg, %struct.Reg* %751, i32 0, i32 0
  %RDI.i1151 = bitcast %union.anon* %752 to i64*
  %753 = load i64, i64* %PC.i1150
  %754 = add i64 %753, 8
  store i64 %754, i64* %PC.i1150
  %755 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %755, i64* %RDI.i1151, align 8
  store %struct.Memory* %loadMem_432859, %struct.Memory** %MEMORY
  %loadMem_432861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %757 = getelementptr inbounds %struct.GPR, %struct.GPR* %756, i32 0, i32 33
  %758 = getelementptr inbounds %struct.Reg, %struct.Reg* %757, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %758 to i64*
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %760 = getelementptr inbounds %struct.GPR, %struct.GPR* %759, i32 0, i32 1
  %761 = getelementptr inbounds %struct.Reg, %struct.Reg* %760, i32 0, i32 0
  %762 = bitcast %union.anon* %761 to %struct.anon.2*
  %AL.i1149 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %762, i32 0, i32 0
  %763 = load i64, i64* %PC.i1148
  %764 = add i64 %763, 2
  store i64 %764, i64* %PC.i1148
  store i8 0, i8* %AL.i1149, align 1
  store %struct.Memory* %loadMem_432861, %struct.Memory** %MEMORY
  %loadMem1_432863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 33
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %767 to i64*
  %768 = load i64, i64* %PC.i1147
  %769 = add i64 %768, 101549
  %770 = load i64, i64* %PC.i1147
  %771 = add i64 %770, 5
  %772 = load i64, i64* %PC.i1147
  %773 = add i64 %772, 5
  store i64 %773, i64* %PC.i1147
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %775 = load i64, i64* %774, align 8
  %776 = add i64 %775, -8
  %777 = inttoptr i64 %776 to i64*
  store i64 %771, i64* %777
  store i64 %776, i64* %774, align 8
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %769, i64* %778, align 8
  store %struct.Memory* %loadMem1_432863, %struct.Memory** %MEMORY
  %loadMem2_432863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432863 = load i64, i64* %3
  %call2_432863 = call %struct.Memory* @sub_44b510.init_dpb(%struct.State* %0, i64 %loadPC_432863, %struct.Memory* %loadMem2_432863)
  store %struct.Memory* %call2_432863, %struct.Memory** %MEMORY
  %loadMem_432868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 33
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %781 to i64*
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %783 = getelementptr inbounds %struct.GPR, %struct.GPR* %782, i32 0, i32 1
  %784 = getelementptr inbounds %struct.Reg, %struct.Reg* %783, i32 0, i32 0
  %785 = bitcast %union.anon* %784 to %struct.anon.2*
  %AL.i1146 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %785, i32 0, i32 0
  %786 = load i64, i64* %PC.i1145
  %787 = add i64 %786, 2
  store i64 %787, i64* %PC.i1145
  store i8 0, i8* %AL.i1146, align 1
  store %struct.Memory* %loadMem_432868, %struct.Memory** %MEMORY
  %loadMem1_43286a = load %struct.Memory*, %struct.Memory** %MEMORY
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 33
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %790 to i64*
  %791 = load i64, i64* %PC.i1144
  %792 = add i64 %791, 276358
  %793 = load i64, i64* %PC.i1144
  %794 = add i64 %793, 5
  %795 = load i64, i64* %PC.i1144
  %796 = add i64 %795, 5
  store i64 %796, i64* %PC.i1144
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %798 = load i64, i64* %797, align 8
  %799 = add i64 %798, -8
  %800 = inttoptr i64 %799 to i64*
  store i64 %794, i64* %800
  store i64 %799, i64* %797, align 8
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %792, i64* %801, align 8
  store %struct.Memory* %loadMem1_43286a, %struct.Memory** %MEMORY
  %loadMem2_43286a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43286a = load i64, i64* %3
  %call2_43286a = call %struct.Memory* @sub_475ff0.init_out_buffer(%struct.State* %0, i64 %loadPC_43286a, %struct.Memory* %loadMem2_43286a)
  store %struct.Memory* %call2_43286a, %struct.Memory** %MEMORY
  %loadMem_43286f = load %struct.Memory*, %struct.Memory** %MEMORY
  %802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %803 = getelementptr inbounds %struct.GPR, %struct.GPR* %802, i32 0, i32 33
  %804 = getelementptr inbounds %struct.Reg, %struct.Reg* %803, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %804 to i64*
  %805 = load i64, i64* %PC.i1143
  %806 = add i64 %805, 12
  store i64 %806, i64* %PC.i1143
  store i64 0, i64* bitcast (%G_0x6f9710_type* @G_0x6f9710 to i64*)
  store %struct.Memory* %loadMem_43286f, %struct.Memory** %MEMORY
  %loadMem_43287b = load %struct.Memory*, %struct.Memory** %MEMORY
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %808 = getelementptr inbounds %struct.GPR, %struct.GPR* %807, i32 0, i32 33
  %809 = getelementptr inbounds %struct.Reg, %struct.Reg* %808, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %809 to i64*
  %810 = load i64, i64* %PC.i1142
  %811 = add i64 %810, 12
  store i64 %811, i64* %PC.i1142
  store i64 0, i64* bitcast (%G_0x6f96a0_type* @G_0x6f96a0 to i64*)
  store %struct.Memory* %loadMem_43287b, %struct.Memory** %MEMORY
  %loadMem_432887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 33
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %814 to i64*
  %815 = load i64, i64* %PC.i1141
  %816 = add i64 %815, 12
  store i64 %816, i64* %PC.i1141
  store i64 0, i64* bitcast (%G_0x710a50_type* @G_0x710a50 to i64*)
  store %struct.Memory* %loadMem_432887, %struct.Memory** %MEMORY
  %loadMem_432893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %818 = getelementptr inbounds %struct.GPR, %struct.GPR* %817, i32 0, i32 33
  %819 = getelementptr inbounds %struct.Reg, %struct.Reg* %818, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %819 to i64*
  %820 = load i64, i64* %PC.i1140
  %821 = add i64 %820, 12
  store i64 %821, i64* %PC.i1140
  store i64 0, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store %struct.Memory* %loadMem_432893, %struct.Memory** %MEMORY
  %loadMem1_43289f = load %struct.Memory*, %struct.Memory** %MEMORY
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %823 = getelementptr inbounds %struct.GPR, %struct.GPR* %822, i32 0, i32 33
  %824 = getelementptr inbounds %struct.Reg, %struct.Reg* %823, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %824 to i64*
  %825 = load i64, i64* %PC.i1139
  %826 = add i64 %825, 7633
  %827 = load i64, i64* %PC.i1139
  %828 = add i64 %827, 5
  %829 = load i64, i64* %PC.i1139
  %830 = add i64 %829, 5
  store i64 %830, i64* %PC.i1139
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %832 = load i64, i64* %831, align 8
  %833 = add i64 %832, -8
  %834 = inttoptr i64 %833 to i64*
  store i64 %828, i64* %834
  store i64 %833, i64* %831, align 8
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %826, i64* %835, align 8
  store %struct.Memory* %loadMem1_43289f, %struct.Memory** %MEMORY
  %loadMem2_43289f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43289f = load i64, i64* %3
  %call2_43289f = call %struct.Memory* @sub_434670.init_global_buffers(%struct.State* %0, i64 %loadPC_43289f, %struct.Memory* %loadMem2_43289f)
  store %struct.Memory* %call2_43289f, %struct.Memory** %MEMORY
  %loadMem_4328a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %837 = getelementptr inbounds %struct.GPR, %struct.GPR* %836, i32 0, i32 33
  %838 = getelementptr inbounds %struct.Reg, %struct.Reg* %837, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %838 to i64*
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %840 = getelementptr inbounds %struct.GPR, %struct.GPR* %839, i32 0, i32 1
  %841 = getelementptr inbounds %struct.Reg, %struct.Reg* %840, i32 0, i32 0
  %EAX.i1137 = bitcast %union.anon* %841 to i32*
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %843 = getelementptr inbounds %struct.GPR, %struct.GPR* %842, i32 0, i32 15
  %844 = getelementptr inbounds %struct.Reg, %struct.Reg* %843, i32 0, i32 0
  %RBP.i1138 = bitcast %union.anon* %844 to i64*
  %845 = load i64, i64* %RBP.i1138
  %846 = sub i64 %845, 44
  %847 = load i32, i32* %EAX.i1137
  %848 = zext i32 %847 to i64
  %849 = load i64, i64* %PC.i1136
  %850 = add i64 %849, 3
  store i64 %850, i64* %PC.i1136
  %851 = inttoptr i64 %846 to i32*
  store i32 %847, i32* %851
  store %struct.Memory* %loadMem_4328a4, %struct.Memory** %MEMORY
  %loadMem_4328a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 33
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %854 to i64*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 1
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %858 = bitcast %union.anon* %857 to %struct.anon.2*
  %AL.i1135 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %858, i32 0, i32 0
  %859 = load i64, i64* %PC.i1134
  %860 = add i64 %859, 2
  store i64 %860, i64* %PC.i1134
  store i8 0, i8* %AL.i1135, align 1
  store %struct.Memory* %loadMem_4328a7, %struct.Memory** %MEMORY
  %loadMem1_4328a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 33
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %863 to i64*
  %864 = load i64, i64* %PC.i1133
  %865 = add i64 %864, -110905
  %866 = load i64, i64* %PC.i1133
  %867 = add i64 %866, 5
  %868 = load i64, i64* %PC.i1133
  %869 = add i64 %868, 5
  store i64 %869, i64* %PC.i1133
  %870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %871 = load i64, i64* %870, align 8
  %872 = add i64 %871, -8
  %873 = inttoptr i64 %872 to i64*
  store i64 %867, i64* %873
  store i64 %872, i64* %870, align 8
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %865, i64* %874, align 8
  store %struct.Memory* %loadMem1_4328a9, %struct.Memory** %MEMORY
  %loadMem2_4328a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4328a9 = load i64, i64* %3
  %call2_4328a9 = call %struct.Memory* @sub_417770.create_context_memory(%struct.State* %0, i64 %loadPC_4328a9, %struct.Memory* %loadMem2_4328a9)
  store %struct.Memory* %call2_4328a9, %struct.Memory** %MEMORY
  %loadMem_4328ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %876 = getelementptr inbounds %struct.GPR, %struct.GPR* %875, i32 0, i32 33
  %877 = getelementptr inbounds %struct.Reg, %struct.Reg* %876, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %877 to i64*
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %879 = getelementptr inbounds %struct.GPR, %struct.GPR* %878, i32 0, i32 1
  %880 = getelementptr inbounds %struct.Reg, %struct.Reg* %879, i32 0, i32 0
  %881 = bitcast %union.anon* %880 to %struct.anon.2*
  %AL.i1132 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %881, i32 0, i32 0
  %882 = load i64, i64* %PC.i1131
  %883 = add i64 %882, 2
  store i64 %883, i64* %PC.i1131
  store i8 0, i8* %AL.i1132, align 1
  store %struct.Memory* %loadMem_4328ae, %struct.Memory** %MEMORY
  %loadMem1_4328b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %886 to i64*
  %887 = load i64, i64* %PC.i1130
  %888 = add i64 %887, 177792
  %889 = load i64, i64* %PC.i1130
  %890 = add i64 %889, 5
  %891 = load i64, i64* %PC.i1130
  %892 = add i64 %891, 5
  store i64 %892, i64* %PC.i1130
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %894 = load i64, i64* %893, align 8
  %895 = add i64 %894, -8
  %896 = inttoptr i64 %895 to i64*
  store i64 %890, i64* %896
  store i64 %895, i64* %893, align 8
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %888, i64* %897, align 8
  store %struct.Memory* %loadMem1_4328b0, %struct.Memory** %MEMORY
  %loadMem2_4328b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4328b0 = load i64, i64* %3
  %call2_4328b0 = call %struct.Memory* @sub_45df30.Init_Motion_Search_Module(%struct.State* %0, i64 %loadPC_4328b0, %struct.Memory* %loadMem2_4328b0)
  store %struct.Memory* %call2_4328b0, %struct.Memory** %MEMORY
  %loadMem1_4328b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 33
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %900 to i64*
  %901 = load i64, i64* %PC.i1129
  %902 = add i64 %901, 9099
  %903 = load i64, i64* %PC.i1129
  %904 = add i64 %903, 5
  %905 = load i64, i64* %PC.i1129
  %906 = add i64 %905, 5
  store i64 %906, i64* %PC.i1129
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %908 = load i64, i64* %907, align 8
  %909 = add i64 %908, -8
  %910 = inttoptr i64 %909 to i64*
  store i64 %904, i64* %910
  store i64 %909, i64* %907, align 8
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %902, i64* %911, align 8
  store %struct.Memory* %loadMem1_4328b5, %struct.Memory** %MEMORY
  %loadMem2_4328b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4328b5 = load i64, i64* %3
  %call2_4328b5 = call %struct.Memory* @sub_434c40.information_init(%struct.State* %0, i64 %loadPC_4328b5, %struct.Memory* %loadMem2_4328b5)
  store %struct.Memory* %call2_4328b5, %struct.Memory** %MEMORY
  %loadMem_4328ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %913 = getelementptr inbounds %struct.GPR, %struct.GPR* %912, i32 0, i32 33
  %914 = getelementptr inbounds %struct.Reg, %struct.Reg* %913, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %914 to i64*
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %916 = getelementptr inbounds %struct.GPR, %struct.GPR* %915, i32 0, i32 11
  %917 = getelementptr inbounds %struct.Reg, %struct.Reg* %916, i32 0, i32 0
  %RDI.i1128 = bitcast %union.anon* %917 to i64*
  %918 = load i64, i64* %PC.i1127
  %919 = add i64 %918, 8
  store i64 %919, i64* %PC.i1127
  %920 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %920, i64* %RDI.i1128, align 8
  store %struct.Memory* %loadMem_4328ba, %struct.Memory** %MEMORY
  %loadMem_4328c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %922 = getelementptr inbounds %struct.GPR, %struct.GPR* %921, i32 0, i32 33
  %923 = getelementptr inbounds %struct.Reg, %struct.Reg* %922, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %923 to i64*
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %925 = getelementptr inbounds %struct.GPR, %struct.GPR* %924, i32 0, i32 11
  %926 = getelementptr inbounds %struct.Reg, %struct.Reg* %925, i32 0, i32 0
  %RDI.i1126 = bitcast %union.anon* %926 to i64*
  %927 = load i64, i64* %RDI.i1126
  %928 = add i64 %927, 3236
  %929 = load i64, i64* %PC.i1125
  %930 = add i64 %929, 7
  store i64 %930, i64* %PC.i1125
  %931 = inttoptr i64 %928 to i32*
  %932 = load i32, i32* %931
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %933, align 1
  %934 = and i32 %932, 255
  %935 = call i32 @llvm.ctpop.i32(i32 %934)
  %936 = trunc i32 %935 to i8
  %937 = and i8 %936, 1
  %938 = xor i8 %937, 1
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %938, i8* %939, align 1
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %940, align 1
  %941 = icmp eq i32 %932, 0
  %942 = zext i1 %941 to i8
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %942, i8* %943, align 1
  %944 = lshr i32 %932, 31
  %945 = trunc i32 %944 to i8
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %945, i8* %946, align 1
  %947 = lshr i32 %932, 31
  %948 = xor i32 %944, %947
  %949 = add i32 %948, %947
  %950 = icmp eq i32 %949, 2
  %951 = zext i1 %950 to i8
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %951, i8* %952, align 1
  store %struct.Memory* %loadMem_4328c2, %struct.Memory** %MEMORY
  %loadMem_4328c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %954 = getelementptr inbounds %struct.GPR, %struct.GPR* %953, i32 0, i32 33
  %955 = getelementptr inbounds %struct.Reg, %struct.Reg* %954, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %955 to i64*
  %956 = load i64, i64* %PC.i1124
  %957 = add i64 %956, 13
  %958 = load i64, i64* %PC.i1124
  %959 = add i64 %958, 6
  %960 = load i64, i64* %PC.i1124
  %961 = add i64 %960, 6
  store i64 %961, i64* %PC.i1124
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %963 = load i8, i8* %962, align 1
  store i8 %963, i8* %BRANCH_TAKEN, align 1
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %965 = icmp ne i8 %963, 0
  %966 = select i1 %965, i64 %957, i64 %959
  store i64 %966, i64* %964, align 8
  store %struct.Memory* %loadMem_4328c9, %struct.Memory** %MEMORY
  %loadBr_4328c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4328c9 = icmp eq i8 %loadBr_4328c9, 1
  br i1 %cmpBr_4328c9, label %block_.L_4328d6, label %block_4328cf

block_4328cf:                                     ; preds = %block_.L_432859
  %loadMem_4328cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %968 = getelementptr inbounds %struct.GPR, %struct.GPR* %967, i32 0, i32 33
  %969 = getelementptr inbounds %struct.Reg, %struct.Reg* %968, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %969 to i64*
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %971 = getelementptr inbounds %struct.GPR, %struct.GPR* %970, i32 0, i32 1
  %972 = getelementptr inbounds %struct.Reg, %struct.Reg* %971, i32 0, i32 0
  %973 = bitcast %union.anon* %972 to %struct.anon.2*
  %AL.i1123 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %973, i32 0, i32 0
  %974 = load i64, i64* %PC.i1122
  %975 = add i64 %974, 2
  store i64 %975, i64* %PC.i1122
  store i8 0, i8* %AL.i1123, align 1
  store %struct.Memory* %loadMem_4328cf, %struct.Memory** %MEMORY
  %loadMem1_4328d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %977 = getelementptr inbounds %struct.GPR, %struct.GPR* %976, i32 0, i32 33
  %978 = getelementptr inbounds %struct.Reg, %struct.Reg* %977, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %978 to i64*
  %979 = load i64, i64* %PC.i1121
  %980 = add i64 %979, 301727
  %981 = load i64, i64* %PC.i1121
  %982 = add i64 %981, 5
  %983 = load i64, i64* %PC.i1121
  %984 = add i64 %983, 5
  store i64 %984, i64* %PC.i1121
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %986 = load i64, i64* %985, align 8
  %987 = add i64 %986, -8
  %988 = inttoptr i64 %987 to i64*
  store i64 %982, i64* %988
  store i64 %987, i64* %985, align 8
  %989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %980, i64* %989, align 8
  store %struct.Memory* %loadMem1_4328d1, %struct.Memory** %MEMORY
  %loadMem2_4328d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4328d1 = load i64, i64* %3
  %call2_4328d1 = call %struct.Memory* @sub_47c370.rc_init_seq(%struct.State* %0, i64 %loadPC_4328d1, %struct.Memory* %loadMem2_4328d1)
  store %struct.Memory* %call2_4328d1, %struct.Memory** %MEMORY
  br label %block_.L_4328d6

block_.L_4328d6:                                  ; preds = %block_4328cf, %block_.L_432859
  %loadMem_4328d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %991 = getelementptr inbounds %struct.GPR, %struct.GPR* %990, i32 0, i32 33
  %992 = getelementptr inbounds %struct.Reg, %struct.Reg* %991, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %992 to i64*
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %994 = getelementptr inbounds %struct.GPR, %struct.GPR* %993, i32 0, i32 1
  %995 = getelementptr inbounds %struct.Reg, %struct.Reg* %994, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %995 to i64*
  %996 = load i64, i64* %PC.i1119
  %997 = add i64 %996, 8
  store i64 %997, i64* %PC.i1119
  %998 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %998, i64* %RAX.i1120, align 8
  store %struct.Memory* %loadMem_4328d6, %struct.Memory** %MEMORY
  %loadMem_4328de = load %struct.Memory*, %struct.Memory** %MEMORY
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1000 = getelementptr inbounds %struct.GPR, %struct.GPR* %999, i32 0, i32 33
  %1001 = getelementptr inbounds %struct.Reg, %struct.Reg* %1000, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %1001 to i64*
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1003 = getelementptr inbounds %struct.GPR, %struct.GPR* %1002, i32 0, i32 1
  %1004 = getelementptr inbounds %struct.Reg, %struct.Reg* %1003, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %1004 to i64*
  %1005 = load i64, i64* %RAX.i1118
  %1006 = add i64 %1005, 3292
  %1007 = load i64, i64* %PC.i1117
  %1008 = add i64 %1007, 7
  store i64 %1008, i64* %PC.i1117
  %1009 = inttoptr i64 %1006 to i32*
  %1010 = load i32, i32* %1009
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1011, align 1
  %1012 = and i32 %1010, 255
  %1013 = call i32 @llvm.ctpop.i32(i32 %1012)
  %1014 = trunc i32 %1013 to i8
  %1015 = and i8 %1014, 1
  %1016 = xor i8 %1015, 1
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1016, i8* %1017, align 1
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1018, align 1
  %1019 = icmp eq i32 %1010, 0
  %1020 = zext i1 %1019 to i8
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1020, i8* %1021, align 1
  %1022 = lshr i32 %1010, 31
  %1023 = trunc i32 %1022 to i8
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1023, i8* %1024, align 1
  %1025 = lshr i32 %1010, 31
  %1026 = xor i32 %1022, %1025
  %1027 = add i32 %1026, %1025
  %1028 = icmp eq i32 %1027, 2
  %1029 = zext i1 %1028 to i8
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1029, i8* %1030, align 1
  store %struct.Memory* %loadMem_4328de, %struct.Memory** %MEMORY
  %loadMem_4328e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 33
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %1033 to i64*
  %1034 = load i64, i64* %PC.i1116
  %1035 = add i64 %1034, 13
  %1036 = load i64, i64* %PC.i1116
  %1037 = add i64 %1036, 6
  %1038 = load i64, i64* %PC.i1116
  %1039 = add i64 %1038, 6
  store i64 %1039, i64* %PC.i1116
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1041 = load i8, i8* %1040, align 1
  store i8 %1041, i8* %BRANCH_TAKEN, align 1
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1043 = icmp ne i8 %1041, 0
  %1044 = select i1 %1043, i64 %1035, i64 %1037
  store i64 %1044, i64* %1042, align 8
  store %struct.Memory* %loadMem_4328e5, %struct.Memory** %MEMORY
  %loadBr_4328e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4328e5 = icmp eq i8 %loadBr_4328e5, 1
  br i1 %cmpBr_4328e5, label %block_.L_4328f2, label %block_4328eb

block_4328eb:                                     ; preds = %block_.L_4328d6
  %loadMem_4328eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1046 = getelementptr inbounds %struct.GPR, %struct.GPR* %1045, i32 0, i32 33
  %1047 = getelementptr inbounds %struct.Reg, %struct.Reg* %1046, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %1047 to i64*
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1049 = getelementptr inbounds %struct.GPR, %struct.GPR* %1048, i32 0, i32 1
  %1050 = getelementptr inbounds %struct.Reg, %struct.Reg* %1049, i32 0, i32 0
  %1051 = bitcast %union.anon* %1050 to %struct.anon.2*
  %AL.i1115 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1051, i32 0, i32 0
  %1052 = load i64, i64* %PC.i1114
  %1053 = add i64 %1052, 2
  store i64 %1053, i64* %PC.i1114
  store i8 0, i8* %AL.i1115, align 1
  store %struct.Memory* %loadMem_4328eb, %struct.Memory** %MEMORY
  %loadMem1_4328ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1055 = getelementptr inbounds %struct.GPR, %struct.GPR* %1054, i32 0, i32 33
  %1056 = getelementptr inbounds %struct.Reg, %struct.Reg* %1055, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %1056 to i64*
  %1057 = load i64, i64* %PC.i1113
  %1058 = add i64 %1057, -77837
  %1059 = load i64, i64* %PC.i1113
  %1060 = add i64 %1059, 5
  %1061 = load i64, i64* %PC.i1113
  %1062 = add i64 %1061, 5
  store i64 %1062, i64* %PC.i1113
  %1063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1064 = load i64, i64* %1063, align 8
  %1065 = add i64 %1064, -8
  %1066 = inttoptr i64 %1065 to i64*
  store i64 %1060, i64* %1066
  store i64 %1065, i64* %1063, align 8
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1058, i64* %1067, align 8
  store %struct.Memory* %loadMem1_4328ed, %struct.Memory** %MEMORY
  %loadMem2_4328ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4328ed = load i64, i64* %3
  %call2_4328ed = call %struct.Memory* @sub_41f8e0.DefineThreshold(%struct.State* %0, i64 %loadPC_4328ed, %struct.Memory* %loadMem2_4328ed)
  store %struct.Memory* %call2_4328ed, %struct.Memory** %MEMORY
  br label %block_.L_4328f2

block_.L_4328f2:                                  ; preds = %block_4328eb, %block_.L_4328d6
  %loadMem_4328f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1069 = getelementptr inbounds %struct.GPR, %struct.GPR* %1068, i32 0, i32 33
  %1070 = getelementptr inbounds %struct.Reg, %struct.Reg* %1069, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %1070 to i64*
  %1071 = load i64, i64* %PC.i1112
  %1072 = add i64 %1071, 11
  store i64 %1072, i64* %PC.i1112
  store i32 0, i32* bitcast (%G_0x6f8edc_type* @G_0x6f8edc to i32*)
  store %struct.Memory* %loadMem_4328f2, %struct.Memory** %MEMORY
  %loadMem_4328fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 33
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %1075 to i64*
  %1076 = load i64, i64* %PC.i1111
  %1077 = add i64 %1076, 11
  store i64 %1077, i64* %PC.i1111
  store i32 0, i32* bitcast (%G_0x6cee50_type* @G_0x6cee50 to i32*)
  store %struct.Memory* %loadMem_4328fd, %struct.Memory** %MEMORY
  %loadMem_432908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 33
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %1080 to i64*
  %1081 = load i64, i64* %PC.i1110
  %1082 = add i64 %1081, 11
  store i64 %1082, i64* %PC.i1110
  store i32 0, i32* bitcast (%G_0x722ca8_type* @G_0x722ca8 to i32*)
  store %struct.Memory* %loadMem_432908, %struct.Memory** %MEMORY
  %loadMem_432913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1084 = getelementptr inbounds %struct.GPR, %struct.GPR* %1083, i32 0, i32 33
  %1085 = getelementptr inbounds %struct.Reg, %struct.Reg* %1084, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %1085 to i64*
  %1086 = load i64, i64* %PC.i1109
  %1087 = add i64 %1086, 11
  store i64 %1087, i64* %PC.i1109
  store i32 0, i32* bitcast (%G_0x725260_type* @G_0x725260 to i32*)
  store %struct.Memory* %loadMem_432913, %struct.Memory** %MEMORY
  %loadMem_43291e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1089 = getelementptr inbounds %struct.GPR, %struct.GPR* %1088, i32 0, i32 33
  %1090 = getelementptr inbounds %struct.Reg, %struct.Reg* %1089, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %1090 to i64*
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1092 = getelementptr inbounds %struct.GPR, %struct.GPR* %1091, i32 0, i32 1
  %1093 = getelementptr inbounds %struct.Reg, %struct.Reg* %1092, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %1093 to i64*
  %1094 = load i64, i64* %PC.i1107
  %1095 = add i64 %1094, 8
  store i64 %1095, i64* %PC.i1107
  %1096 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1096, i64* %RAX.i1108, align 8
  store %struct.Memory* %loadMem_43291e, %struct.Memory** %MEMORY
  %loadMem_432926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1098 = getelementptr inbounds %struct.GPR, %struct.GPR* %1097, i32 0, i32 33
  %1099 = getelementptr inbounds %struct.Reg, %struct.Reg* %1098, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %1099 to i64*
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 1
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %1102 to i64*
  %1103 = load i64, i64* %RAX.i1106
  %1104 = add i64 %1103, 2440
  %1105 = load i64, i64* %PC.i1105
  %1106 = add i64 %1105, 7
  store i64 %1106, i64* %PC.i1105
  %1107 = inttoptr i64 %1104 to i32*
  %1108 = load i32, i32* %1107
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1109, align 1
  %1110 = and i32 %1108, 255
  %1111 = call i32 @llvm.ctpop.i32(i32 %1110)
  %1112 = trunc i32 %1111 to i8
  %1113 = and i8 %1112, 1
  %1114 = xor i8 %1113, 1
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1114, i8* %1115, align 1
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1116, align 1
  %1117 = icmp eq i32 %1108, 0
  %1118 = zext i1 %1117 to i8
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1118, i8* %1119, align 1
  %1120 = lshr i32 %1108, 31
  %1121 = trunc i32 %1120 to i8
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1121, i8* %1122, align 1
  %1123 = lshr i32 %1108, 31
  %1124 = xor i32 %1120, %1123
  %1125 = add i32 %1124, %1123
  %1126 = icmp eq i32 %1125, 2
  %1127 = zext i1 %1126 to i8
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1127, i8* %1128, align 1
  store %struct.Memory* %loadMem_432926, %struct.Memory** %MEMORY
  %loadMem_43292d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1130 = getelementptr inbounds %struct.GPR, %struct.GPR* %1129, i32 0, i32 33
  %1131 = getelementptr inbounds %struct.Reg, %struct.Reg* %1130, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %1131 to i64*
  %1132 = load i64, i64* %PC.i1104
  %1133 = add i64 %1132, 70
  %1134 = load i64, i64* %PC.i1104
  %1135 = add i64 %1134, 6
  %1136 = load i64, i64* %PC.i1104
  %1137 = add i64 %1136, 6
  store i64 %1137, i64* %PC.i1104
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1139 = load i8, i8* %1138, align 1
  %1140 = icmp ne i8 %1139, 0
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1142 = load i8, i8* %1141, align 1
  %1143 = icmp ne i8 %1142, 0
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1145 = load i8, i8* %1144, align 1
  %1146 = icmp ne i8 %1145, 0
  %1147 = xor i1 %1143, %1146
  %1148 = or i1 %1140, %1147
  %1149 = zext i1 %1148 to i8
  store i8 %1149, i8* %BRANCH_TAKEN, align 1
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1151 = select i1 %1148, i64 %1133, i64 %1135
  store i64 %1151, i64* %1150, align 8
  store %struct.Memory* %loadMem_43292d, %struct.Memory** %MEMORY
  %loadBr_43292d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43292d = icmp eq i8 %loadBr_43292d, 1
  br i1 %cmpBr_43292d, label %block_.L_432973, label %block_432933

block_432933:                                     ; preds = %block_.L_4328f2
  %loadMem_432933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1153 = getelementptr inbounds %struct.GPR, %struct.GPR* %1152, i32 0, i32 33
  %1154 = getelementptr inbounds %struct.Reg, %struct.Reg* %1153, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %1154 to i64*
  %1155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1156 = getelementptr inbounds %struct.GPR, %struct.GPR* %1155, i32 0, i32 1
  %1157 = getelementptr inbounds %struct.Reg, %struct.Reg* %1156, i32 0, i32 0
  %RAX.i1103 = bitcast %union.anon* %1157 to i64*
  %1158 = load i64, i64* %PC.i1102
  %1159 = add i64 %1158, 8
  store i64 %1159, i64* %PC.i1102
  %1160 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1160, i64* %RAX.i1103, align 8
  store %struct.Memory* %loadMem_432933, %struct.Memory** %MEMORY
  %loadMem_43293b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1162 = getelementptr inbounds %struct.GPR, %struct.GPR* %1161, i32 0, i32 33
  %1163 = getelementptr inbounds %struct.Reg, %struct.Reg* %1162, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %1163 to i64*
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 1
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %RAX.i1100 = bitcast %union.anon* %1166 to i64*
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 5
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %RCX.i1101 = bitcast %union.anon* %1169 to i64*
  %1170 = load i64, i64* %RAX.i1100
  %1171 = add i64 %1170, 2440
  %1172 = load i64, i64* %PC.i1099
  %1173 = add i64 %1172, 6
  store i64 %1173, i64* %PC.i1099
  %1174 = inttoptr i64 %1171 to i32*
  %1175 = load i32, i32* %1174
  %1176 = zext i32 %1175 to i64
  store i64 %1176, i64* %RCX.i1101, align 8
  store %struct.Memory* %loadMem_43293b, %struct.Memory** %MEMORY
  %loadMem_432941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1178 = getelementptr inbounds %struct.GPR, %struct.GPR* %1177, i32 0, i32 33
  %1179 = getelementptr inbounds %struct.Reg, %struct.Reg* %1178, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %1179 to i64*
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 1
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %1182 to i64*
  %1183 = load i64, i64* %PC.i1097
  %1184 = add i64 %1183, 8
  store i64 %1184, i64* %PC.i1097
  %1185 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1185, i64* %RAX.i1098, align 8
  store %struct.Memory* %loadMem_432941, %struct.Memory** %MEMORY
  %loadMem_432949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1187 = getelementptr inbounds %struct.GPR, %struct.GPR* %1186, i32 0, i32 33
  %1188 = getelementptr inbounds %struct.Reg, %struct.Reg* %1187, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %1188 to i64*
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 1
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %RAX.i1095 = bitcast %union.anon* %1191 to i64*
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1193 = getelementptr inbounds %struct.GPR, %struct.GPR* %1192, i32 0, i32 5
  %1194 = getelementptr inbounds %struct.Reg, %struct.Reg* %1193, i32 0, i32 0
  %RCX.i1096 = bitcast %union.anon* %1194 to i64*
  %1195 = load i64, i64* %RCX.i1096
  %1196 = load i64, i64* %RAX.i1095
  %1197 = add i64 %1196, 20
  %1198 = load i64, i64* %PC.i1094
  %1199 = add i64 %1198, 3
  store i64 %1199, i64* %PC.i1094
  %1200 = trunc i64 %1195 to i32
  %1201 = inttoptr i64 %1197 to i32*
  %1202 = load i32, i32* %1201
  %1203 = add i32 %1202, %1200
  %1204 = zext i32 %1203 to i64
  store i64 %1204, i64* %RCX.i1096, align 8
  %1205 = icmp ult i32 %1203, %1200
  %1206 = icmp ult i32 %1203, %1202
  %1207 = or i1 %1205, %1206
  %1208 = zext i1 %1207 to i8
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1208, i8* %1209, align 1
  %1210 = and i32 %1203, 255
  %1211 = call i32 @llvm.ctpop.i32(i32 %1210)
  %1212 = trunc i32 %1211 to i8
  %1213 = and i8 %1212, 1
  %1214 = xor i8 %1213, 1
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1214, i8* %1215, align 1
  %1216 = xor i32 %1202, %1200
  %1217 = xor i32 %1216, %1203
  %1218 = lshr i32 %1217, 4
  %1219 = trunc i32 %1218 to i8
  %1220 = and i8 %1219, 1
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1220, i8* %1221, align 1
  %1222 = icmp eq i32 %1203, 0
  %1223 = zext i1 %1222 to i8
  %1224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1223, i8* %1224, align 1
  %1225 = lshr i32 %1203, 31
  %1226 = trunc i32 %1225 to i8
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1226, i8* %1227, align 1
  %1228 = lshr i32 %1200, 31
  %1229 = lshr i32 %1202, 31
  %1230 = xor i32 %1225, %1228
  %1231 = xor i32 %1225, %1229
  %1232 = add i32 %1230, %1231
  %1233 = icmp eq i32 %1232, 2
  %1234 = zext i1 %1233 to i8
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1234, i8* %1235, align 1
  store %struct.Memory* %loadMem_432949, %struct.Memory** %MEMORY
  %loadMem_43294c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1237 = getelementptr inbounds %struct.GPR, %struct.GPR* %1236, i32 0, i32 33
  %1238 = getelementptr inbounds %struct.Reg, %struct.Reg* %1237, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %1238 to i64*
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1240 = getelementptr inbounds %struct.GPR, %struct.GPR* %1239, i32 0, i32 1
  %1241 = getelementptr inbounds %struct.Reg, %struct.Reg* %1240, i32 0, i32 0
  %RAX.i1093 = bitcast %union.anon* %1241 to i64*
  %1242 = load i64, i64* %PC.i1092
  %1243 = add i64 %1242, 8
  store i64 %1243, i64* %PC.i1092
  %1244 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1244, i64* %RAX.i1093, align 8
  store %struct.Memory* %loadMem_43294c, %struct.Memory** %MEMORY
  %loadMem_432954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1246 = getelementptr inbounds %struct.GPR, %struct.GPR* %1245, i32 0, i32 33
  %1247 = getelementptr inbounds %struct.Reg, %struct.Reg* %1246, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %1247 to i64*
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1249 = getelementptr inbounds %struct.GPR, %struct.GPR* %1248, i32 0, i32 1
  %1250 = getelementptr inbounds %struct.Reg, %struct.Reg* %1249, i32 0, i32 0
  %RAX.i1090 = bitcast %union.anon* %1250 to i64*
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1252 = getelementptr inbounds %struct.GPR, %struct.GPR* %1251, i32 0, i32 7
  %1253 = getelementptr inbounds %struct.Reg, %struct.Reg* %1252, i32 0, i32 0
  %RDX.i1091 = bitcast %union.anon* %1253 to i64*
  %1254 = load i64, i64* %RAX.i1090
  %1255 = add i64 %1254, 20
  %1256 = load i64, i64* %PC.i1089
  %1257 = add i64 %1256, 3
  store i64 %1257, i64* %PC.i1089
  %1258 = inttoptr i64 %1255 to i32*
  %1259 = load i32, i32* %1258
  %1260 = zext i32 %1259 to i64
  store i64 %1260, i64* %RDX.i1091, align 8
  store %struct.Memory* %loadMem_432954, %struct.Memory** %MEMORY
  %loadMem_432957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 33
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %1263 to i64*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 7
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %RDX.i1088 = bitcast %union.anon* %1266 to i64*
  %1267 = load i64, i64* %RDX.i1088
  %1268 = load i64, i64* %PC.i1087
  %1269 = add i64 %1268, 3
  store i64 %1269, i64* %PC.i1087
  %1270 = trunc i64 %1267 to i32
  %1271 = add i32 1, %1270
  %1272 = zext i32 %1271 to i64
  store i64 %1272, i64* %RDX.i1088, align 8
  %1273 = icmp ult i32 %1271, %1270
  %1274 = icmp ult i32 %1271, 1
  %1275 = or i1 %1273, %1274
  %1276 = zext i1 %1275 to i8
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1276, i8* %1277, align 1
  %1278 = and i32 %1271, 255
  %1279 = call i32 @llvm.ctpop.i32(i32 %1278)
  %1280 = trunc i32 %1279 to i8
  %1281 = and i8 %1280, 1
  %1282 = xor i8 %1281, 1
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1282, i8* %1283, align 1
  %1284 = xor i64 1, %1267
  %1285 = trunc i64 %1284 to i32
  %1286 = xor i32 %1285, %1271
  %1287 = lshr i32 %1286, 4
  %1288 = trunc i32 %1287 to i8
  %1289 = and i8 %1288, 1
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1289, i8* %1290, align 1
  %1291 = icmp eq i32 %1271, 0
  %1292 = zext i1 %1291 to i8
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1292, i8* %1293, align 1
  %1294 = lshr i32 %1271, 31
  %1295 = trunc i32 %1294 to i8
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1295, i8* %1296, align 1
  %1297 = lshr i32 %1270, 31
  %1298 = xor i32 %1294, %1297
  %1299 = add i32 %1298, %1294
  %1300 = icmp eq i32 %1299, 2
  %1301 = zext i1 %1300 to i8
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1301, i8* %1302, align 1
  store %struct.Memory* %loadMem_432957, %struct.Memory** %MEMORY
  %loadMem_43295a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1304 = getelementptr inbounds %struct.GPR, %struct.GPR* %1303, i32 0, i32 33
  %1305 = getelementptr inbounds %struct.Reg, %struct.Reg* %1304, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %1305 to i64*
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1307 = getelementptr inbounds %struct.GPR, %struct.GPR* %1306, i32 0, i32 5
  %1308 = getelementptr inbounds %struct.Reg, %struct.Reg* %1307, i32 0, i32 0
  %ECX.i1085 = bitcast %union.anon* %1308 to i32*
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1310 = getelementptr inbounds %struct.GPR, %struct.GPR* %1309, i32 0, i32 1
  %1311 = getelementptr inbounds %struct.Reg, %struct.Reg* %1310, i32 0, i32 0
  %RAX.i1086 = bitcast %union.anon* %1311 to i64*
  %1312 = load i32, i32* %ECX.i1085
  %1313 = zext i32 %1312 to i64
  %1314 = load i64, i64* %PC.i1084
  %1315 = add i64 %1314, 2
  store i64 %1315, i64* %PC.i1084
  %1316 = and i64 %1313, 4294967295
  store i64 %1316, i64* %RAX.i1086, align 8
  store %struct.Memory* %loadMem_43295a, %struct.Memory** %MEMORY
  %loadMem_43295c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 33
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %1319 to i64*
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1321 = getelementptr inbounds %struct.GPR, %struct.GPR* %1320, i32 0, i32 7
  %1322 = getelementptr inbounds %struct.Reg, %struct.Reg* %1321, i32 0, i32 0
  %EDX.i1082 = bitcast %union.anon* %1322 to i32*
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 15
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %1325 to i64*
  %1326 = load i64, i64* %RBP.i1083
  %1327 = sub i64 %1326, 48
  %1328 = load i32, i32* %EDX.i1082
  %1329 = zext i32 %1328 to i64
  %1330 = load i64, i64* %PC.i1081
  %1331 = add i64 %1330, 3
  store i64 %1331, i64* %PC.i1081
  %1332 = inttoptr i64 %1327 to i32*
  store i32 %1328, i32* %1332
  store %struct.Memory* %loadMem_43295c, %struct.Memory** %MEMORY
  %loadMem_43295f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 33
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %1335 to i64*
  %1336 = load i64, i64* %PC.i1080
  %1337 = add i64 %1336, 1
  store i64 %1337, i64* %PC.i1080
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1340 = bitcast %union.anon* %1339 to i32*
  %1341 = load i32, i32* %1340, align 8
  %1342 = sext i32 %1341 to i64
  %1343 = lshr i64 %1342, 32
  store i64 %1343, i64* %1338, align 8
  store %struct.Memory* %loadMem_43295f, %struct.Memory** %MEMORY
  %loadMem_432960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 33
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %1346 to i64*
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1348 = getelementptr inbounds %struct.GPR, %struct.GPR* %1347, i32 0, i32 5
  %1349 = getelementptr inbounds %struct.Reg, %struct.Reg* %1348, i32 0, i32 0
  %RCX.i1078 = bitcast %union.anon* %1349 to i64*
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1351 = getelementptr inbounds %struct.GPR, %struct.GPR* %1350, i32 0, i32 15
  %1352 = getelementptr inbounds %struct.Reg, %struct.Reg* %1351, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %1352 to i64*
  %1353 = load i64, i64* %RBP.i1079
  %1354 = sub i64 %1353, 48
  %1355 = load i64, i64* %PC.i1077
  %1356 = add i64 %1355, 3
  store i64 %1356, i64* %PC.i1077
  %1357 = inttoptr i64 %1354 to i32*
  %1358 = load i32, i32* %1357
  %1359 = zext i32 %1358 to i64
  store i64 %1359, i64* %RCX.i1078, align 8
  store %struct.Memory* %loadMem_432960, %struct.Memory** %MEMORY
  %loadMem_432963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1361 = getelementptr inbounds %struct.GPR, %struct.GPR* %1360, i32 0, i32 33
  %1362 = getelementptr inbounds %struct.Reg, %struct.Reg* %1361, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %1362 to i64*
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1364 = getelementptr inbounds %struct.GPR, %struct.GPR* %1363, i32 0, i32 5
  %1365 = getelementptr inbounds %struct.Reg, %struct.Reg* %1364, i32 0, i32 0
  %ECX.i1072 = bitcast %union.anon* %1365 to i32*
  %1366 = load i32, i32* %ECX.i1072
  %1367 = zext i32 %1366 to i64
  %1368 = load i64, i64* %PC.i1071
  %1369 = add i64 %1368, 2
  store i64 %1369, i64* %PC.i1071
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1371 = bitcast %union.anon* %1370 to i32*
  %1372 = load i32, i32* %1371, align 8
  %1373 = zext i32 %1372 to i64
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1375 = bitcast %union.anon* %1374 to i32*
  %1376 = load i32, i32* %1375, align 8
  %1377 = zext i32 %1376 to i64
  %1378 = shl i64 %1367, 32
  %1379 = ashr exact i64 %1378, 32
  %1380 = shl i64 %1377, 32
  %1381 = or i64 %1380, %1373
  %1382 = sdiv i64 %1381, %1379
  %1383 = shl i64 %1382, 32
  %1384 = ashr exact i64 %1383, 32
  %1385 = icmp eq i64 %1382, %1384
  br i1 %1385, label %1390, label %1386

; <label>:1386:                                   ; preds = %block_432933
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1388 = load i64, i64* %1387, align 8
  %1389 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1388, %struct.Memory* %loadMem_432963)
  br label %routine_idivl__ecx.exit1073

; <label>:1390:                                   ; preds = %block_432933
  %1391 = srem i64 %1381, %1379
  %1392 = getelementptr inbounds %union.anon, %union.anon* %1370, i64 0, i32 0
  %1393 = and i64 %1382, 4294967295
  store i64 %1393, i64* %1392, align 8
  %1394 = getelementptr inbounds %union.anon, %union.anon* %1374, i64 0, i32 0
  %1395 = and i64 %1391, 4294967295
  store i64 %1395, i64* %1394, align 8
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1396, align 1
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1397, align 1
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1398, align 1
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1399, align 1
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1400, align 1
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1401, align 1
  br label %routine_idivl__ecx.exit1073

routine_idivl__ecx.exit1073:                      ; preds = %1386, %1390
  %1402 = phi %struct.Memory* [ %1389, %1386 ], [ %loadMem_432963, %1390 ]
  store %struct.Memory* %1402, %struct.Memory** %MEMORY
  %loadMem_432965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1404 = getelementptr inbounds %struct.GPR, %struct.GPR* %1403, i32 0, i32 33
  %1405 = getelementptr inbounds %struct.Reg, %struct.Reg* %1404, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %1405 to i64*
  %1406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1407 = getelementptr inbounds %struct.GPR, %struct.GPR* %1406, i32 0, i32 1
  %1408 = getelementptr inbounds %struct.Reg, %struct.Reg* %1407, i32 0, i32 0
  %RAX.i1070 = bitcast %union.anon* %1408 to i64*
  %1409 = load i64, i64* %RAX.i1070
  %1410 = load i64, i64* %PC.i1069
  %1411 = add i64 %1410, 3
  store i64 %1411, i64* %PC.i1069
  %1412 = trunc i64 %1409 to i32
  %1413 = add i32 1, %1412
  %1414 = zext i32 %1413 to i64
  store i64 %1414, i64* %RAX.i1070, align 8
  %1415 = icmp ult i32 %1413, %1412
  %1416 = icmp ult i32 %1413, 1
  %1417 = or i1 %1415, %1416
  %1418 = zext i1 %1417 to i8
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1418, i8* %1419, align 1
  %1420 = and i32 %1413, 255
  %1421 = call i32 @llvm.ctpop.i32(i32 %1420)
  %1422 = trunc i32 %1421 to i8
  %1423 = and i8 %1422, 1
  %1424 = xor i8 %1423, 1
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1424, i8* %1425, align 1
  %1426 = xor i64 1, %1409
  %1427 = trunc i64 %1426 to i32
  %1428 = xor i32 %1427, %1413
  %1429 = lshr i32 %1428, 4
  %1430 = trunc i32 %1429 to i8
  %1431 = and i8 %1430, 1
  %1432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1431, i8* %1432, align 1
  %1433 = icmp eq i32 %1413, 0
  %1434 = zext i1 %1433 to i8
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1434, i8* %1435, align 1
  %1436 = lshr i32 %1413, 31
  %1437 = trunc i32 %1436 to i8
  %1438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1437, i8* %1438, align 1
  %1439 = lshr i32 %1412, 31
  %1440 = xor i32 %1436, %1439
  %1441 = add i32 %1440, %1436
  %1442 = icmp eq i32 %1441, 2
  %1443 = zext i1 %1442 to i8
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1443, i8* %1444, align 1
  store %struct.Memory* %loadMem_432965, %struct.Memory** %MEMORY
  %loadMem_432968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1446 = getelementptr inbounds %struct.GPR, %struct.GPR* %1445, i32 0, i32 33
  %1447 = getelementptr inbounds %struct.Reg, %struct.Reg* %1446, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %1447 to i64*
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1449 = getelementptr inbounds %struct.GPR, %struct.GPR* %1448, i32 0, i32 9
  %1450 = getelementptr inbounds %struct.Reg, %struct.Reg* %1449, i32 0, i32 0
  %RSI.i1068 = bitcast %union.anon* %1450 to i64*
  %1451 = load i64, i64* %PC.i1067
  %1452 = add i64 %1451, 8
  store i64 %1452, i64* %PC.i1067
  %1453 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1453, i64* %RSI.i1068, align 8
  store %struct.Memory* %loadMem_432968, %struct.Memory** %MEMORY
  %loadMem_432970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1455 = getelementptr inbounds %struct.GPR, %struct.GPR* %1454, i32 0, i32 33
  %1456 = getelementptr inbounds %struct.Reg, %struct.Reg* %1455, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %1456 to i64*
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1458 = getelementptr inbounds %struct.GPR, %struct.GPR* %1457, i32 0, i32 1
  %1459 = getelementptr inbounds %struct.Reg, %struct.Reg* %1458, i32 0, i32 0
  %EAX.i1065 = bitcast %union.anon* %1459 to i32*
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1461 = getelementptr inbounds %struct.GPR, %struct.GPR* %1460, i32 0, i32 9
  %1462 = getelementptr inbounds %struct.Reg, %struct.Reg* %1461, i32 0, i32 0
  %RSI.i1066 = bitcast %union.anon* %1462 to i64*
  %1463 = load i64, i64* %RSI.i1066
  %1464 = add i64 %1463, 8
  %1465 = load i32, i32* %EAX.i1065
  %1466 = zext i32 %1465 to i64
  %1467 = load i64, i64* %PC.i1064
  %1468 = add i64 %1467, 3
  store i64 %1468, i64* %PC.i1064
  %1469 = inttoptr i64 %1464 to i32*
  store i32 %1465, i32* %1469
  store %struct.Memory* %loadMem_432970, %struct.Memory** %MEMORY
  br label %block_.L_432973

block_.L_432973:                                  ; preds = %routine_idivl__ecx.exit1073, %block_.L_4328f2
  %loadMem_432973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1471 = getelementptr inbounds %struct.GPR, %struct.GPR* %1470, i32 0, i32 33
  %1472 = getelementptr inbounds %struct.Reg, %struct.Reg* %1471, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %1472 to i64*
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1474 = getelementptr inbounds %struct.GPR, %struct.GPR* %1473, i32 0, i32 1
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %RAX.i1063 = bitcast %union.anon* %1475 to i64*
  %1476 = load i64, i64* %PC.i1062
  %1477 = add i64 %1476, 8
  store i64 %1477, i64* %PC.i1062
  %1478 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1478, i64* %RAX.i1063, align 8
  store %struct.Memory* %loadMem_432973, %struct.Memory** %MEMORY
  %loadMem_43297b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1480 = getelementptr inbounds %struct.GPR, %struct.GPR* %1479, i32 0, i32 33
  %1481 = getelementptr inbounds %struct.Reg, %struct.Reg* %1480, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %1481 to i64*
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1483 = getelementptr inbounds %struct.GPR, %struct.GPR* %1482, i32 0, i32 1
  %1484 = getelementptr inbounds %struct.Reg, %struct.Reg* %1483, i32 0, i32 0
  %RAX.i1060 = bitcast %union.anon* %1484 to i64*
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 5
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %RCX.i1061 = bitcast %union.anon* %1487 to i64*
  %1488 = load i64, i64* %RAX.i1060
  %1489 = add i64 %1488, 1236
  %1490 = load i64, i64* %PC.i1059
  %1491 = add i64 %1490, 6
  store i64 %1491, i64* %PC.i1059
  %1492 = inttoptr i64 %1489 to i32*
  %1493 = load i32, i32* %1492
  %1494 = zext i32 %1493 to i64
  store i64 %1494, i64* %RCX.i1061, align 8
  store %struct.Memory* %loadMem_43297b, %struct.Memory** %MEMORY
  %loadMem_432981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 33
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 5
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %ECX.i1058 = bitcast %union.anon* %1500 to i32*
  %1501 = load i32, i32* %ECX.i1058
  %1502 = zext i32 %1501 to i64
  %1503 = load i64, i64* %PC.i1057
  %1504 = add i64 %1503, 7
  store i64 %1504, i64* %PC.i1057
  store i32 %1501, i32* bitcast (%G_0x6cc018_type* @G_0x6cc018 to i32*)
  store %struct.Memory* %loadMem_432981, %struct.Memory** %MEMORY
  %loadMem_432988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 33
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %1507 to i64*
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1509 = getelementptr inbounds %struct.GPR, %struct.GPR* %1508, i32 0, i32 1
  %1510 = getelementptr inbounds %struct.Reg, %struct.Reg* %1509, i32 0, i32 0
  %1511 = bitcast %union.anon* %1510 to %struct.anon.2*
  %AL.i1056 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1511, i32 0, i32 0
  %1512 = load i64, i64* %PC.i1055
  %1513 = add i64 %1512, 2
  store i64 %1513, i64* %PC.i1055
  store i8 0, i8* %AL.i1056, align 1
  store %struct.Memory* %loadMem_432988, %struct.Memory** %MEMORY
  %loadMem1_43298a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1515 = getelementptr inbounds %struct.GPR, %struct.GPR* %1514, i32 0, i32 33
  %1516 = getelementptr inbounds %struct.Reg, %struct.Reg* %1515, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %1516 to i64*
  %1517 = load i64, i64* %PC.i1054
  %1518 = add i64 %1517, -111290
  %1519 = load i64, i64* %PC.i1054
  %1520 = add i64 %1519, 5
  %1521 = load i64, i64* %PC.i1054
  %1522 = add i64 %1521, 5
  store i64 %1522, i64* %PC.i1054
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1524 = load i64, i64* %1523, align 8
  %1525 = add i64 %1524, -8
  %1526 = inttoptr i64 %1525 to i64*
  store i64 %1520, i64* %1526
  store i64 %1525, i64* %1523, align 8
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1518, i64* %1527, align 8
  store %struct.Memory* %loadMem1_43298a, %struct.Memory** %MEMORY
  %loadMem2_43298a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43298a = load i64, i64* %3
  %call2_43298a = call %struct.Memory* @sub_4176d0.PatchInputNoFrames(%struct.State* %0, i64 %loadPC_43298a, %struct.Memory* %loadMem2_43298a)
  store %struct.Memory* %call2_43298a, %struct.Memory** %MEMORY
  %loadMem_43298f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1529 = getelementptr inbounds %struct.GPR, %struct.GPR* %1528, i32 0, i32 33
  %1530 = getelementptr inbounds %struct.Reg, %struct.Reg* %1529, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %1530 to i64*
  %1531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1532 = getelementptr inbounds %struct.GPR, %struct.GPR* %1531, i32 0, i32 7
  %1533 = getelementptr inbounds %struct.Reg, %struct.Reg* %1532, i32 0, i32 0
  %RDX.i1053 = bitcast %union.anon* %1533 to i64*
  %1534 = load i64, i64* %PC.i1052
  %1535 = add i64 %1534, 8
  store i64 %1535, i64* %PC.i1052
  %1536 = load i64, i64* bitcast (%G_0x6cb908_type* @G_0x6cb908 to i64*)
  store i64 %1536, i64* %RDX.i1053, align 8
  store %struct.Memory* %loadMem_43298f, %struct.Memory** %MEMORY
  %loadMem_432997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1538 = getelementptr inbounds %struct.GPR, %struct.GPR* %1537, i32 0, i32 33
  %1539 = getelementptr inbounds %struct.Reg, %struct.Reg* %1538, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %1539 to i64*
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1541 = getelementptr inbounds %struct.GPR, %struct.GPR* %1540, i32 0, i32 7
  %1542 = getelementptr inbounds %struct.Reg, %struct.Reg* %1541, i32 0, i32 0
  %RDX.i1051 = bitcast %union.anon* %1542 to i64*
  %1543 = load i64, i64* %RDX.i1051
  %1544 = add i64 %1543, 1488
  %1545 = load i64, i64* %PC.i1050
  %1546 = add i64 %1545, 10
  store i64 %1546, i64* %PC.i1050
  %1547 = inttoptr i64 %1544 to i32*
  store i32 0, i32* %1547
  store %struct.Memory* %loadMem_432997, %struct.Memory** %MEMORY
  %loadMem_4329a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 33
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %1550 to i64*
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1552 = getelementptr inbounds %struct.GPR, %struct.GPR* %1551, i32 0, i32 1
  %1553 = getelementptr inbounds %struct.Reg, %struct.Reg* %1552, i32 0, i32 0
  %1554 = bitcast %union.anon* %1553 to %struct.anon.2*
  %AL.i1049 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1554, i32 0, i32 0
  %1555 = load i64, i64* %PC.i1048
  %1556 = add i64 %1555, 2
  store i64 %1556, i64* %PC.i1048
  store i8 0, i8* %AL.i1049, align 1
  store %struct.Memory* %loadMem_4329a1, %struct.Memory** %MEMORY
  %loadMem1_4329a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1558 = getelementptr inbounds %struct.GPR, %struct.GPR* %1557, i32 0, i32 33
  %1559 = getelementptr inbounds %struct.Reg, %struct.Reg* %1558, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %1559 to i64*
  %1560 = load i64, i64* %PC.i1047
  %1561 = add i64 %1560, -57715
  %1562 = load i64, i64* %PC.i1047
  %1563 = add i64 %1562, 5
  %1564 = load i64, i64* %PC.i1047
  %1565 = add i64 %1564, 5
  store i64 %1565, i64* %PC.i1047
  %1566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1567 = load i64, i64* %1566, align 8
  %1568 = add i64 %1567, -8
  %1569 = inttoptr i64 %1568 to i64*
  store i64 %1563, i64* %1569
  store i64 %1568, i64* %1566, align 8
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1561, i64* %1570, align 8
  store %struct.Memory* %loadMem1_4329a3, %struct.Memory** %MEMORY
  %loadMem2_4329a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4329a3 = load i64, i64* %3
  %call2_4329a3 = call %struct.Memory* @sub_424830.start_sequence(%struct.State* %0, i64 %loadPC_4329a3, %struct.Memory* %loadMem2_4329a3)
  store %struct.Memory* %call2_4329a3, %struct.Memory** %MEMORY
  %loadMem_4329a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1572 = getelementptr inbounds %struct.GPR, %struct.GPR* %1571, i32 0, i32 33
  %1573 = getelementptr inbounds %struct.Reg, %struct.Reg* %1572, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %1573 to i64*
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1575 = getelementptr inbounds %struct.GPR, %struct.GPR* %1574, i32 0, i32 7
  %1576 = getelementptr inbounds %struct.Reg, %struct.Reg* %1575, i32 0, i32 0
  %RDX.i1046 = bitcast %union.anon* %1576 to i64*
  %1577 = load i64, i64* %PC.i1045
  %1578 = add i64 %1577, 8
  store i64 %1578, i64* %PC.i1045
  %1579 = load i64, i64* bitcast (%G_0x6cb908_type* @G_0x6cb908 to i64*)
  store i64 %1579, i64* %RDX.i1046, align 8
  store %struct.Memory* %loadMem_4329a8, %struct.Memory** %MEMORY
  %loadMem_4329b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 33
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %1582 to i64*
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1584 = getelementptr inbounds %struct.GPR, %struct.GPR* %1583, i32 0, i32 1
  %1585 = getelementptr inbounds %struct.Reg, %struct.Reg* %1584, i32 0, i32 0
  %EAX.i1043 = bitcast %union.anon* %1585 to i32*
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1587 = getelementptr inbounds %struct.GPR, %struct.GPR* %1586, i32 0, i32 7
  %1588 = getelementptr inbounds %struct.Reg, %struct.Reg* %1587, i32 0, i32 0
  %RDX.i1044 = bitcast %union.anon* %1588 to i64*
  %1589 = load i64, i64* %RDX.i1044
  %1590 = add i64 %1589, 24
  %1591 = load i32, i32* %EAX.i1043
  %1592 = zext i32 %1591 to i64
  %1593 = load i64, i64* %PC.i1042
  %1594 = add i64 %1593, 3
  store i64 %1594, i64* %PC.i1042
  %1595 = inttoptr i64 %1590 to i32*
  store i32 %1591, i32* %1595
  store %struct.Memory* %loadMem_4329b0, %struct.Memory** %MEMORY
  %loadMem_4329b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1597 = getelementptr inbounds %struct.GPR, %struct.GPR* %1596, i32 0, i32 33
  %1598 = getelementptr inbounds %struct.Reg, %struct.Reg* %1597, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %1598 to i64*
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1600 = getelementptr inbounds %struct.GPR, %struct.GPR* %1599, i32 0, i32 7
  %1601 = getelementptr inbounds %struct.Reg, %struct.Reg* %1600, i32 0, i32 0
  %RDX.i1041 = bitcast %union.anon* %1601 to i64*
  %1602 = load i64, i64* %PC.i1040
  %1603 = add i64 %1602, 8
  store i64 %1603, i64* %PC.i1040
  %1604 = load i64, i64* bitcast (%G_0x6cb908_type* @G_0x6cb908 to i64*)
  store i64 %1604, i64* %RDX.i1041, align 8
  store %struct.Memory* %loadMem_4329b3, %struct.Memory** %MEMORY
  %loadMem_4329bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 33
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %1607 to i64*
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 1
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %1610 to i64*
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1612 = getelementptr inbounds %struct.GPR, %struct.GPR* %1611, i32 0, i32 7
  %1613 = getelementptr inbounds %struct.Reg, %struct.Reg* %1612, i32 0, i32 0
  %RDX.i1039 = bitcast %union.anon* %1613 to i64*
  %1614 = load i64, i64* %RDX.i1039
  %1615 = add i64 %1614, 1492
  %1616 = load i64, i64* %PC.i1037
  %1617 = add i64 %1616, 6
  store i64 %1617, i64* %PC.i1037
  %1618 = inttoptr i64 %1615 to i32*
  %1619 = load i32, i32* %1618
  %1620 = zext i32 %1619 to i64
  store i64 %1620, i64* %RAX.i1038, align 8
  store %struct.Memory* %loadMem_4329bb, %struct.Memory** %MEMORY
  %loadMem_4329c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1622 = getelementptr inbounds %struct.GPR, %struct.GPR* %1621, i32 0, i32 33
  %1623 = getelementptr inbounds %struct.Reg, %struct.Reg* %1622, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %1623 to i64*
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1625 = getelementptr inbounds %struct.GPR, %struct.GPR* %1624, i32 0, i32 7
  %1626 = getelementptr inbounds %struct.Reg, %struct.Reg* %1625, i32 0, i32 0
  %RDX.i1036 = bitcast %union.anon* %1626 to i64*
  %1627 = load i64, i64* %PC.i1035
  %1628 = add i64 %1627, 8
  store i64 %1628, i64* %PC.i1035
  %1629 = load i64, i64* bitcast (%G_0x6cb908_type* @G_0x6cb908 to i64*)
  store i64 %1629, i64* %RDX.i1036, align 8
  store %struct.Memory* %loadMem_4329c1, %struct.Memory** %MEMORY
  %loadMem_4329c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1631 = getelementptr inbounds %struct.GPR, %struct.GPR* %1630, i32 0, i32 33
  %1632 = getelementptr inbounds %struct.Reg, %struct.Reg* %1631, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %1632 to i64*
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1634 = getelementptr inbounds %struct.GPR, %struct.GPR* %1633, i32 0, i32 1
  %1635 = getelementptr inbounds %struct.Reg, %struct.Reg* %1634, i32 0, i32 0
  %RAX.i1033 = bitcast %union.anon* %1635 to i64*
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1637 = getelementptr inbounds %struct.GPR, %struct.GPR* %1636, i32 0, i32 7
  %1638 = getelementptr inbounds %struct.Reg, %struct.Reg* %1637, i32 0, i32 0
  %RDX.i1034 = bitcast %union.anon* %1638 to i64*
  %1639 = load i64, i64* %RAX.i1033
  %1640 = load i64, i64* %RDX.i1034
  %1641 = add i64 %1640, 1488
  %1642 = load i64, i64* %PC.i1032
  %1643 = add i64 %1642, 6
  store i64 %1643, i64* %PC.i1032
  %1644 = trunc i64 %1639 to i32
  %1645 = inttoptr i64 %1641 to i32*
  %1646 = load i32, i32* %1645
  %1647 = add i32 %1646, %1644
  %1648 = zext i32 %1647 to i64
  store i64 %1648, i64* %RAX.i1033, align 8
  %1649 = icmp ult i32 %1647, %1644
  %1650 = icmp ult i32 %1647, %1646
  %1651 = or i1 %1649, %1650
  %1652 = zext i1 %1651 to i8
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1652, i8* %1653, align 1
  %1654 = and i32 %1647, 255
  %1655 = call i32 @llvm.ctpop.i32(i32 %1654)
  %1656 = trunc i32 %1655 to i8
  %1657 = and i8 %1656, 1
  %1658 = xor i8 %1657, 1
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1658, i8* %1659, align 1
  %1660 = xor i32 %1646, %1644
  %1661 = xor i32 %1660, %1647
  %1662 = lshr i32 %1661, 4
  %1663 = trunc i32 %1662 to i8
  %1664 = and i8 %1663, 1
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1664, i8* %1665, align 1
  %1666 = icmp eq i32 %1647, 0
  %1667 = zext i1 %1666 to i8
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1667, i8* %1668, align 1
  %1669 = lshr i32 %1647, 31
  %1670 = trunc i32 %1669 to i8
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1670, i8* %1671, align 1
  %1672 = lshr i32 %1644, 31
  %1673 = lshr i32 %1646, 31
  %1674 = xor i32 %1669, %1672
  %1675 = xor i32 %1669, %1673
  %1676 = add i32 %1674, %1675
  %1677 = icmp eq i32 %1676, 2
  %1678 = zext i1 %1677 to i8
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1678, i8* %1679, align 1
  store %struct.Memory* %loadMem_4329c9, %struct.Memory** %MEMORY
  %loadMem_4329cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 33
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %1682 to i64*
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 1
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %EAX.i1030 = bitcast %union.anon* %1685 to i32*
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1687 = getelementptr inbounds %struct.GPR, %struct.GPR* %1686, i32 0, i32 7
  %1688 = getelementptr inbounds %struct.Reg, %struct.Reg* %1687, i32 0, i32 0
  %RDX.i1031 = bitcast %union.anon* %1688 to i64*
  %1689 = load i64, i64* %RDX.i1031
  %1690 = add i64 %1689, 1488
  %1691 = load i32, i32* %EAX.i1030
  %1692 = zext i32 %1691 to i64
  %1693 = load i64, i64* %PC.i1029
  %1694 = add i64 %1693, 6
  store i64 %1694, i64* %PC.i1029
  %1695 = inttoptr i64 %1690 to i32*
  store i32 %1691, i32* %1695
  store %struct.Memory* %loadMem_4329cf, %struct.Memory** %MEMORY
  %loadMem_4329d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1697 = getelementptr inbounds %struct.GPR, %struct.GPR* %1696, i32 0, i32 33
  %1698 = getelementptr inbounds %struct.Reg, %struct.Reg* %1697, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %1698 to i64*
  %1699 = load i64, i64* %PC.i1028
  %1700 = add i64 %1699, 11
  store i64 %1700, i64* %PC.i1028
  store i32 0, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  store %struct.Memory* %loadMem_4329d5, %struct.Memory** %MEMORY
  %loadMem_4329e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 33
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %1703 to i64*
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 7
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %RDX.i1027 = bitcast %union.anon* %1706 to i64*
  %1707 = load i64, i64* %PC.i1026
  %1708 = add i64 %1707, 8
  store i64 %1708, i64* %PC.i1026
  %1709 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1709, i64* %RDX.i1027, align 8
  store %struct.Memory* %loadMem_4329e0, %struct.Memory** %MEMORY
  %loadMem_4329e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1711 = getelementptr inbounds %struct.GPR, %struct.GPR* %1710, i32 0, i32 33
  %1712 = getelementptr inbounds %struct.Reg, %struct.Reg* %1711, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %1712 to i64*
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1714 = getelementptr inbounds %struct.GPR, %struct.GPR* %1713, i32 0, i32 7
  %1715 = getelementptr inbounds %struct.Reg, %struct.Reg* %1714, i32 0, i32 0
  %RDX.i1025 = bitcast %union.anon* %1715 to i64*
  %1716 = load i64, i64* %RDX.i1025
  %1717 = load i64, i64* %PC.i1024
  %1718 = add i64 %1717, 6
  store i64 %1718, i64* %PC.i1024
  %1719 = inttoptr i64 %1716 to i32*
  store i32 0, i32* %1719
  store %struct.Memory* %loadMem_4329e8, %struct.Memory** %MEMORY
  br label %block_.L_4329ee

block_.L_4329ee:                                  ; preds = %block_.L_4331ed, %block_.L_432973
  %loadMem_4329ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 33
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %1722 to i64*
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1724 = getelementptr inbounds %struct.GPR, %struct.GPR* %1723, i32 0, i32 1
  %1725 = getelementptr inbounds %struct.Reg, %struct.Reg* %1724, i32 0, i32 0
  %RAX.i1023 = bitcast %union.anon* %1725 to i64*
  %1726 = load i64, i64* %PC.i1022
  %1727 = add i64 %1726, 8
  store i64 %1727, i64* %PC.i1022
  %1728 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1728, i64* %RAX.i1023, align 8
  store %struct.Memory* %loadMem_4329ee, %struct.Memory** %MEMORY
  %loadMem_4329f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1730 = getelementptr inbounds %struct.GPR, %struct.GPR* %1729, i32 0, i32 33
  %1731 = getelementptr inbounds %struct.Reg, %struct.Reg* %1730, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %1731 to i64*
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1733 = getelementptr inbounds %struct.GPR, %struct.GPR* %1732, i32 0, i32 1
  %1734 = getelementptr inbounds %struct.Reg, %struct.Reg* %1733, i32 0, i32 0
  %RAX.i1020 = bitcast %union.anon* %1734 to i64*
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 5
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %RCX.i1021 = bitcast %union.anon* %1737 to i64*
  %1738 = load i64, i64* %RAX.i1020
  %1739 = load i64, i64* %PC.i1019
  %1740 = add i64 %1739, 2
  store i64 %1740, i64* %PC.i1019
  %1741 = inttoptr i64 %1738 to i32*
  %1742 = load i32, i32* %1741
  %1743 = zext i32 %1742 to i64
  store i64 %1743, i64* %RCX.i1021, align 8
  store %struct.Memory* %loadMem_4329f6, %struct.Memory** %MEMORY
  %loadMem_4329f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1745 = getelementptr inbounds %struct.GPR, %struct.GPR* %1744, i32 0, i32 33
  %1746 = getelementptr inbounds %struct.Reg, %struct.Reg* %1745, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %1746 to i64*
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1748 = getelementptr inbounds %struct.GPR, %struct.GPR* %1747, i32 0, i32 1
  %1749 = getelementptr inbounds %struct.Reg, %struct.Reg* %1748, i32 0, i32 0
  %RAX.i1018 = bitcast %union.anon* %1749 to i64*
  %1750 = load i64, i64* %PC.i1017
  %1751 = add i64 %1750, 8
  store i64 %1751, i64* %PC.i1017
  %1752 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1752, i64* %RAX.i1018, align 8
  store %struct.Memory* %loadMem_4329f8, %struct.Memory** %MEMORY
  %loadMem_432a00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1754 = getelementptr inbounds %struct.GPR, %struct.GPR* %1753, i32 0, i32 33
  %1755 = getelementptr inbounds %struct.Reg, %struct.Reg* %1754, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %1755 to i64*
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 5
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %ECX.i1015 = bitcast %union.anon* %1758 to i32*
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 1
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %RAX.i1016 = bitcast %union.anon* %1761 to i64*
  %1762 = load i32, i32* %ECX.i1015
  %1763 = zext i32 %1762 to i64
  %1764 = load i64, i64* %RAX.i1016
  %1765 = add i64 %1764, 8
  %1766 = load i64, i64* %PC.i1014
  %1767 = add i64 %1766, 3
  store i64 %1767, i64* %PC.i1014
  %1768 = inttoptr i64 %1765 to i32*
  %1769 = load i32, i32* %1768
  %1770 = sub i32 %1762, %1769
  %1771 = icmp ult i32 %1762, %1769
  %1772 = zext i1 %1771 to i8
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1772, i8* %1773, align 1
  %1774 = and i32 %1770, 255
  %1775 = call i32 @llvm.ctpop.i32(i32 %1774)
  %1776 = trunc i32 %1775 to i8
  %1777 = and i8 %1776, 1
  %1778 = xor i8 %1777, 1
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1778, i8* %1779, align 1
  %1780 = xor i32 %1769, %1762
  %1781 = xor i32 %1780, %1770
  %1782 = lshr i32 %1781, 4
  %1783 = trunc i32 %1782 to i8
  %1784 = and i8 %1783, 1
  %1785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1784, i8* %1785, align 1
  %1786 = icmp eq i32 %1770, 0
  %1787 = zext i1 %1786 to i8
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1787, i8* %1788, align 1
  %1789 = lshr i32 %1770, 31
  %1790 = trunc i32 %1789 to i8
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1790, i8* %1791, align 1
  %1792 = lshr i32 %1762, 31
  %1793 = lshr i32 %1769, 31
  %1794 = xor i32 %1793, %1792
  %1795 = xor i32 %1789, %1792
  %1796 = add i32 %1795, %1794
  %1797 = icmp eq i32 %1796, 2
  %1798 = zext i1 %1797 to i8
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1798, i8* %1799, align 1
  store %struct.Memory* %loadMem_432a00, %struct.Memory** %MEMORY
  %loadMem_432a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1801 = getelementptr inbounds %struct.GPR, %struct.GPR* %1800, i32 0, i32 33
  %1802 = getelementptr inbounds %struct.Reg, %struct.Reg* %1801, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %1802 to i64*
  %1803 = load i64, i64* %PC.i1013
  %1804 = add i64 %1803, 2072
  %1805 = load i64, i64* %PC.i1013
  %1806 = add i64 %1805, 6
  %1807 = load i64, i64* %PC.i1013
  %1808 = add i64 %1807, 6
  store i64 %1808, i64* %PC.i1013
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1810 = load i8, i8* %1809, align 1
  %1811 = icmp ne i8 %1810, 0
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1813 = load i8, i8* %1812, align 1
  %1814 = icmp ne i8 %1813, 0
  %1815 = xor i1 %1811, %1814
  %1816 = xor i1 %1815, true
  %1817 = zext i1 %1816 to i8
  store i8 %1817, i8* %BRANCH_TAKEN, align 1
  %1818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1819 = select i1 %1815, i64 %1806, i64 %1804
  store i64 %1819, i64* %1818, align 8
  store %struct.Memory* %loadMem_432a03, %struct.Memory** %MEMORY
  %loadBr_432a03 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432a03 = icmp eq i8 %loadBr_432a03, 1
  br i1 %cmpBr_432a03, label %block_.L_43321b, label %block_432a09

block_432a09:                                     ; preds = %block_.L_4329ee
  %loadMem_432a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1821 = getelementptr inbounds %struct.GPR, %struct.GPR* %1820, i32 0, i32 33
  %1822 = getelementptr inbounds %struct.Reg, %struct.Reg* %1821, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %1822 to i64*
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1824 = getelementptr inbounds %struct.GPR, %struct.GPR* %1823, i32 0, i32 1
  %1825 = getelementptr inbounds %struct.Reg, %struct.Reg* %1824, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %1825 to i64*
  %1826 = load i64, i64* %PC.i1011
  %1827 = add i64 %1826, 8
  store i64 %1827, i64* %PC.i1011
  %1828 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1828, i64* %RAX.i1012, align 8
  store %struct.Memory* %loadMem_432a09, %struct.Memory** %MEMORY
  %loadMem_432a11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 33
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %1831 to i64*
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1833 = getelementptr inbounds %struct.GPR, %struct.GPR* %1832, i32 0, i32 1
  %1834 = getelementptr inbounds %struct.Reg, %struct.Reg* %1833, i32 0, i32 0
  %RAX.i1010 = bitcast %union.anon* %1834 to i64*
  %1835 = load i64, i64* %RAX.i1010
  %1836 = add i64 %1835, 72496
  %1837 = load i64, i64* %PC.i1009
  %1838 = add i64 %1837, 10
  store i64 %1838, i64* %PC.i1009
  %1839 = inttoptr i64 %1836 to i32*
  store i32 1, i32* %1839
  store %struct.Memory* %loadMem_432a11, %struct.Memory** %MEMORY
  %loadMem_432a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1841 = getelementptr inbounds %struct.GPR, %struct.GPR* %1840, i32 0, i32 33
  %1842 = getelementptr inbounds %struct.Reg, %struct.Reg* %1841, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %1842 to i64*
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1844 = getelementptr inbounds %struct.GPR, %struct.GPR* %1843, i32 0, i32 1
  %1845 = getelementptr inbounds %struct.Reg, %struct.Reg* %1844, i32 0, i32 0
  %RAX.i1008 = bitcast %union.anon* %1845 to i64*
  %1846 = load i64, i64* %PC.i1007
  %1847 = add i64 %1846, 8
  store i64 %1847, i64* %PC.i1007
  %1848 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1848, i64* %RAX.i1008, align 8
  store %struct.Memory* %loadMem_432a1b, %struct.Memory** %MEMORY
  %loadMem_432a23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 33
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1851 to i64*
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1853 = getelementptr inbounds %struct.GPR, %struct.GPR* %1852, i32 0, i32 1
  %1854 = getelementptr inbounds %struct.Reg, %struct.Reg* %1853, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %1854 to i64*
  %1855 = load i64, i64* %RAX.i1006
  %1856 = add i64 %1855, 1224
  %1857 = load i64, i64* %PC.i1005
  %1858 = add i64 %1857, 7
  store i64 %1858, i64* %PC.i1005
  %1859 = inttoptr i64 %1856 to i32*
  %1860 = load i32, i32* %1859
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1861, align 1
  %1862 = and i32 %1860, 255
  %1863 = call i32 @llvm.ctpop.i32(i32 %1862)
  %1864 = trunc i32 %1863 to i8
  %1865 = and i8 %1864, 1
  %1866 = xor i8 %1865, 1
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1866, i8* %1867, align 1
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1868, align 1
  %1869 = icmp eq i32 %1860, 0
  %1870 = zext i1 %1869 to i8
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1870, i8* %1871, align 1
  %1872 = lshr i32 %1860, 31
  %1873 = trunc i32 %1872 to i8
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1873, i8* %1874, align 1
  %1875 = lshr i32 %1860, 31
  %1876 = xor i32 %1872, %1875
  %1877 = add i32 %1876, %1875
  %1878 = icmp eq i32 %1877, 2
  %1879 = zext i1 %1878 to i8
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1879, i8* %1880, align 1
  store %struct.Memory* %loadMem_432a23, %struct.Memory** %MEMORY
  %loadMem_432a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1882 = getelementptr inbounds %struct.GPR, %struct.GPR* %1881, i32 0, i32 33
  %1883 = getelementptr inbounds %struct.Reg, %struct.Reg* %1882, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %1883 to i64*
  %1884 = load i64, i64* %PC.i1004
  %1885 = add i64 %1884, 77
  %1886 = load i64, i64* %PC.i1004
  %1887 = add i64 %1886, 6
  %1888 = load i64, i64* %PC.i1004
  %1889 = add i64 %1888, 6
  store i64 %1889, i64* %PC.i1004
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1891 = load i8, i8* %1890, align 1
  store i8 %1891, i8* %BRANCH_TAKEN, align 1
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1893 = icmp ne i8 %1891, 0
  %1894 = select i1 %1893, i64 %1885, i64 %1887
  store i64 %1894, i64* %1892, align 8
  store %struct.Memory* %loadMem_432a2a, %struct.Memory** %MEMORY
  %loadBr_432a2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432a2a = icmp eq i8 %loadBr_432a2a, 1
  br i1 %cmpBr_432a2a, label %block_.L_432a77, label %block_432a30

block_432a30:                                     ; preds = %block_432a09
  %loadMem_432a30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1896 = getelementptr inbounds %struct.GPR, %struct.GPR* %1895, i32 0, i32 33
  %1897 = getelementptr inbounds %struct.Reg, %struct.Reg* %1896, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %1897 to i64*
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1899 = getelementptr inbounds %struct.GPR, %struct.GPR* %1898, i32 0, i32 1
  %1900 = getelementptr inbounds %struct.Reg, %struct.Reg* %1899, i32 0, i32 0
  %RAX.i1003 = bitcast %union.anon* %1900 to i64*
  %1901 = load i64, i64* %PC.i1002
  %1902 = add i64 %1901, 8
  store i64 %1902, i64* %PC.i1002
  %1903 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1903, i64* %RAX.i1003, align 8
  store %struct.Memory* %loadMem_432a30, %struct.Memory** %MEMORY
  %loadMem_432a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1905 = getelementptr inbounds %struct.GPR, %struct.GPR* %1904, i32 0, i32 33
  %1906 = getelementptr inbounds %struct.Reg, %struct.Reg* %1905, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %1906 to i64*
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1908 = getelementptr inbounds %struct.GPR, %struct.GPR* %1907, i32 0, i32 1
  %1909 = getelementptr inbounds %struct.Reg, %struct.Reg* %1908, i32 0, i32 0
  %RAX.i1001 = bitcast %union.anon* %1909 to i64*
  %1910 = load i64, i64* %RAX.i1001
  %1911 = add i64 %1910, 1228
  %1912 = load i64, i64* %PC.i1000
  %1913 = add i64 %1912, 7
  store i64 %1913, i64* %PC.i1000
  %1914 = inttoptr i64 %1911 to i32*
  %1915 = load i32, i32* %1914
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1916, align 1
  %1917 = and i32 %1915, 255
  %1918 = call i32 @llvm.ctpop.i32(i32 %1917)
  %1919 = trunc i32 %1918 to i8
  %1920 = and i8 %1919, 1
  %1921 = xor i8 %1920, 1
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1921, i8* %1922, align 1
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1923, align 1
  %1924 = icmp eq i32 %1915, 0
  %1925 = zext i1 %1924 to i8
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1925, i8* %1926, align 1
  %1927 = lshr i32 %1915, 31
  %1928 = trunc i32 %1927 to i8
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1928, i8* %1929, align 1
  %1930 = lshr i32 %1915, 31
  %1931 = xor i32 %1927, %1930
  %1932 = add i32 %1931, %1930
  %1933 = icmp eq i32 %1932, 2
  %1934 = zext i1 %1933 to i8
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1934, i8* %1935, align 1
  store %struct.Memory* %loadMem_432a38, %struct.Memory** %MEMORY
  %loadMem_432a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1937 = getelementptr inbounds %struct.GPR, %struct.GPR* %1936, i32 0, i32 33
  %1938 = getelementptr inbounds %struct.Reg, %struct.Reg* %1937, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %1938 to i64*
  %1939 = load i64, i64* %PC.i999
  %1940 = add i64 %1939, 56
  %1941 = load i64, i64* %PC.i999
  %1942 = add i64 %1941, 6
  %1943 = load i64, i64* %PC.i999
  %1944 = add i64 %1943, 6
  store i64 %1944, i64* %PC.i999
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1946 = load i8, i8* %1945, align 1
  store i8 %1946, i8* %BRANCH_TAKEN, align 1
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1948 = icmp ne i8 %1946, 0
  %1949 = select i1 %1948, i64 %1940, i64 %1942
  store i64 %1949, i64* %1947, align 8
  store %struct.Memory* %loadMem_432a3f, %struct.Memory** %MEMORY
  %loadBr_432a3f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432a3f = icmp eq i8 %loadBr_432a3f, 1
  br i1 %cmpBr_432a3f, label %block_.L_432a77, label %block_432a45

block_432a45:                                     ; preds = %block_432a30
  %loadMem_432a45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 33
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1952 to i64*
  %1953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1954 = getelementptr inbounds %struct.GPR, %struct.GPR* %1953, i32 0, i32 1
  %1955 = getelementptr inbounds %struct.Reg, %struct.Reg* %1954, i32 0, i32 0
  %RAX.i998 = bitcast %union.anon* %1955 to i64*
  %1956 = load i64, i64* %PC.i997
  %1957 = add i64 %1956, 8
  store i64 %1957, i64* %PC.i997
  %1958 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1958, i64* %RAX.i998, align 8
  store %struct.Memory* %loadMem_432a45, %struct.Memory** %MEMORY
  %loadMem_432a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1960 = getelementptr inbounds %struct.GPR, %struct.GPR* %1959, i32 0, i32 33
  %1961 = getelementptr inbounds %struct.Reg, %struct.Reg* %1960, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %1961 to i64*
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1963 = getelementptr inbounds %struct.GPR, %struct.GPR* %1962, i32 0, i32 1
  %1964 = getelementptr inbounds %struct.Reg, %struct.Reg* %1963, i32 0, i32 0
  %RAX.i995 = bitcast %union.anon* %1964 to i64*
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1966 = getelementptr inbounds %struct.GPR, %struct.GPR* %1965, i32 0, i32 5
  %1967 = getelementptr inbounds %struct.Reg, %struct.Reg* %1966, i32 0, i32 0
  %RCX.i996 = bitcast %union.anon* %1967 to i64*
  %1968 = load i64, i64* %RAX.i995
  %1969 = load i64, i64* %PC.i994
  %1970 = add i64 %1969, 2
  store i64 %1970, i64* %PC.i994
  %1971 = inttoptr i64 %1968 to i32*
  %1972 = load i32, i32* %1971
  %1973 = zext i32 %1972 to i64
  store i64 %1973, i64* %RCX.i996, align 8
  store %struct.Memory* %loadMem_432a4d, %struct.Memory** %MEMORY
  %loadMem_432a4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1975 = getelementptr inbounds %struct.GPR, %struct.GPR* %1974, i32 0, i32 33
  %1976 = getelementptr inbounds %struct.Reg, %struct.Reg* %1975, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %1976 to i64*
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1978 = getelementptr inbounds %struct.GPR, %struct.GPR* %1977, i32 0, i32 5
  %1979 = getelementptr inbounds %struct.Reg, %struct.Reg* %1978, i32 0, i32 0
  %RCX.i993 = bitcast %union.anon* %1979 to i64*
  %1980 = load i64, i64* %RCX.i993
  %1981 = load i64, i64* %PC.i992
  %1982 = add i64 %1981, 7
  store i64 %1982, i64* %PC.i992
  %1983 = trunc i64 %1980 to i32
  %1984 = load i32, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  %1985 = sub i32 %1983, %1984
  %1986 = zext i32 %1985 to i64
  store i64 %1986, i64* %RCX.i993, align 8
  %1987 = icmp ult i32 %1983, %1984
  %1988 = zext i1 %1987 to i8
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1988, i8* %1989, align 1
  %1990 = and i32 %1985, 255
  %1991 = call i32 @llvm.ctpop.i32(i32 %1990)
  %1992 = trunc i32 %1991 to i8
  %1993 = and i8 %1992, 1
  %1994 = xor i8 %1993, 1
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1994, i8* %1995, align 1
  %1996 = xor i32 %1984, %1983
  %1997 = xor i32 %1996, %1985
  %1998 = lshr i32 %1997, 4
  %1999 = trunc i32 %1998 to i8
  %2000 = and i8 %1999, 1
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2000, i8* %2001, align 1
  %2002 = icmp eq i32 %1985, 0
  %2003 = zext i1 %2002 to i8
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2003, i8* %2004, align 1
  %2005 = lshr i32 %1985, 31
  %2006 = trunc i32 %2005 to i8
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2006, i8* %2007, align 1
  %2008 = lshr i32 %1983, 31
  %2009 = lshr i32 %1984, 31
  %2010 = xor i32 %2009, %2008
  %2011 = xor i32 %2005, %2008
  %2012 = add i32 %2011, %2010
  %2013 = icmp eq i32 %2012, 2
  %2014 = zext i1 %2013 to i8
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2014, i8* %2015, align 1
  store %struct.Memory* %loadMem_432a4f, %struct.Memory** %MEMORY
  %loadMem_432a56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2017 = getelementptr inbounds %struct.GPR, %struct.GPR* %2016, i32 0, i32 33
  %2018 = getelementptr inbounds %struct.Reg, %struct.Reg* %2017, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %2018 to i64*
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2020 = getelementptr inbounds %struct.GPR, %struct.GPR* %2019, i32 0, i32 1
  %2021 = getelementptr inbounds %struct.Reg, %struct.Reg* %2020, i32 0, i32 0
  %RAX.i991 = bitcast %union.anon* %2021 to i64*
  %2022 = load i64, i64* %PC.i990
  %2023 = add i64 %2022, 8
  store i64 %2023, i64* %PC.i990
  %2024 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %2024, i64* %RAX.i991, align 8
  store %struct.Memory* %loadMem_432a56, %struct.Memory** %MEMORY
  %loadMem_432a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 33
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %2027 to i64*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 1
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %RAX.i988 = bitcast %union.anon* %2030 to i64*
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2032 = getelementptr inbounds %struct.GPR, %struct.GPR* %2031, i32 0, i32 15
  %2033 = getelementptr inbounds %struct.Reg, %struct.Reg* %2032, i32 0, i32 0
  %RBP.i989 = bitcast %union.anon* %2033 to i64*
  %2034 = load i64, i64* %RBP.i989
  %2035 = sub i64 %2034, 56
  %2036 = load i64, i64* %RAX.i988
  %2037 = load i64, i64* %PC.i987
  %2038 = add i64 %2037, 4
  store i64 %2038, i64* %PC.i987
  %2039 = inttoptr i64 %2035 to i64*
  store i64 %2036, i64* %2039
  store %struct.Memory* %loadMem_432a5e, %struct.Memory** %MEMORY
  %loadMem_432a62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 33
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %2042 to i64*
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2044 = getelementptr inbounds %struct.GPR, %struct.GPR* %2043, i32 0, i32 5
  %2045 = getelementptr inbounds %struct.Reg, %struct.Reg* %2044, i32 0, i32 0
  %ECX.i985 = bitcast %union.anon* %2045 to i32*
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2047 = getelementptr inbounds %struct.GPR, %struct.GPR* %2046, i32 0, i32 1
  %2048 = getelementptr inbounds %struct.Reg, %struct.Reg* %2047, i32 0, i32 0
  %RAX.i986 = bitcast %union.anon* %2048 to i64*
  %2049 = load i32, i32* %ECX.i985
  %2050 = zext i32 %2049 to i64
  %2051 = load i64, i64* %PC.i984
  %2052 = add i64 %2051, 2
  store i64 %2052, i64* %PC.i984
  %2053 = and i64 %2050, 4294967295
  store i64 %2053, i64* %RAX.i986, align 8
  store %struct.Memory* %loadMem_432a62, %struct.Memory** %MEMORY
  %loadMem_432a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2055 = getelementptr inbounds %struct.GPR, %struct.GPR* %2054, i32 0, i32 33
  %2056 = getelementptr inbounds %struct.Reg, %struct.Reg* %2055, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %2056 to i64*
  %2057 = load i64, i64* %PC.i983
  %2058 = add i64 %2057, 1
  store i64 %2058, i64* %PC.i983
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2061 = bitcast %union.anon* %2060 to i32*
  %2062 = load i32, i32* %2061, align 8
  %2063 = sext i32 %2062 to i64
  %2064 = lshr i64 %2063, 32
  store i64 %2064, i64* %2059, align 8
  store %struct.Memory* %loadMem_432a64, %struct.Memory** %MEMORY
  %loadMem_432a65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 33
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %2067 to i64*
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2069 = getelementptr inbounds %struct.GPR, %struct.GPR* %2068, i32 0, i32 9
  %2070 = getelementptr inbounds %struct.Reg, %struct.Reg* %2069, i32 0, i32 0
  %RSI.i981 = bitcast %union.anon* %2070 to i64*
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2072 = getelementptr inbounds %struct.GPR, %struct.GPR* %2071, i32 0, i32 15
  %2073 = getelementptr inbounds %struct.Reg, %struct.Reg* %2072, i32 0, i32 0
  %RBP.i982 = bitcast %union.anon* %2073 to i64*
  %2074 = load i64, i64* %RBP.i982
  %2075 = sub i64 %2074, 56
  %2076 = load i64, i64* %PC.i980
  %2077 = add i64 %2076, 4
  store i64 %2077, i64* %PC.i980
  %2078 = inttoptr i64 %2075 to i64*
  %2079 = load i64, i64* %2078
  store i64 %2079, i64* %RSI.i981, align 8
  store %struct.Memory* %loadMem_432a65, %struct.Memory** %MEMORY
  %loadMem_432a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2081 = getelementptr inbounds %struct.GPR, %struct.GPR* %2080, i32 0, i32 33
  %2082 = getelementptr inbounds %struct.Reg, %struct.Reg* %2081, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %2082 to i64*
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2084 = getelementptr inbounds %struct.GPR, %struct.GPR* %2083, i32 0, i32 9
  %2085 = getelementptr inbounds %struct.Reg, %struct.Reg* %2084, i32 0, i32 0
  %RSI.i977 = bitcast %union.anon* %2085 to i64*
  %2086 = load i64, i64* %RSI.i977
  %2087 = add i64 %2086, 1224
  %2088 = load i64, i64* %PC.i976
  %2089 = add i64 %2088, 6
  store i64 %2089, i64* %PC.i976
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2091 = bitcast %union.anon* %2090 to i32*
  %2092 = load i32, i32* %2091, align 8
  %2093 = zext i32 %2092 to i64
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2095 = bitcast %union.anon* %2094 to i32*
  %2096 = load i32, i32* %2095, align 8
  %2097 = zext i32 %2096 to i64
  %2098 = inttoptr i64 %2087 to i32*
  %2099 = load i32, i32* %2098
  %2100 = sext i32 %2099 to i64
  %2101 = shl i64 %2097, 32
  %2102 = or i64 %2101, %2093
  %2103 = sdiv i64 %2102, %2100
  %2104 = shl i64 %2103, 32
  %2105 = ashr exact i64 %2104, 32
  %2106 = icmp eq i64 %2103, %2105
  br i1 %2106, label %2111, label %2107

; <label>:2107:                                   ; preds = %block_432a45
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2109 = load i64, i64* %2108, align 8
  %2110 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2109, %struct.Memory* %loadMem_432a69)
  br label %routine_idivl_0x4c8__rsi_.exit978

; <label>:2111:                                   ; preds = %block_432a45
  %2112 = srem i64 %2102, %2100
  %2113 = getelementptr inbounds %union.anon, %union.anon* %2090, i64 0, i32 0
  %2114 = and i64 %2103, 4294967295
  store i64 %2114, i64* %2113, align 8
  %2115 = getelementptr inbounds %union.anon, %union.anon* %2094, i64 0, i32 0
  %2116 = and i64 %2112, 4294967295
  store i64 %2116, i64* %2115, align 8
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2117, align 1
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2118, align 1
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2119, align 1
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2120, align 1
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2121, align 1
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2122, align 1
  br label %routine_idivl_0x4c8__rsi_.exit978

routine_idivl_0x4c8__rsi_.exit978:                ; preds = %2107, %2111
  %2123 = phi %struct.Memory* [ %2110, %2107 ], [ %loadMem_432a69, %2111 ]
  store %struct.Memory* %2123, %struct.Memory** %MEMORY
  %loadMem_432a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2125 = getelementptr inbounds %struct.GPR, %struct.GPR* %2124, i32 0, i32 33
  %2126 = getelementptr inbounds %struct.Reg, %struct.Reg* %2125, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %2126 to i64*
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2128 = getelementptr inbounds %struct.GPR, %struct.GPR* %2127, i32 0, i32 7
  %2129 = getelementptr inbounds %struct.Reg, %struct.Reg* %2128, i32 0, i32 0
  %EDX.i974 = bitcast %union.anon* %2129 to i32*
  %2130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2131 = getelementptr inbounds %struct.GPR, %struct.GPR* %2130, i32 0, i32 15
  %2132 = getelementptr inbounds %struct.Reg, %struct.Reg* %2131, i32 0, i32 0
  %RBP.i975 = bitcast %union.anon* %2132 to i64*
  %2133 = load i64, i64* %RBP.i975
  %2134 = sub i64 %2133, 60
  %2135 = load i32, i32* %EDX.i974
  %2136 = zext i32 %2135 to i64
  %2137 = load i64, i64* %PC.i973
  %2138 = add i64 %2137, 3
  store i64 %2138, i64* %PC.i973
  %2139 = inttoptr i64 %2134 to i32*
  store i32 %2135, i32* %2139
  store %struct.Memory* %loadMem_432a6f, %struct.Memory** %MEMORY
  %loadMem_432a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2141 = getelementptr inbounds %struct.GPR, %struct.GPR* %2140, i32 0, i32 33
  %2142 = getelementptr inbounds %struct.Reg, %struct.Reg* %2141, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %2142 to i64*
  %2143 = load i64, i64* %PC.i972
  %2144 = add i64 %2143, 25
  %2145 = load i64, i64* %PC.i972
  %2146 = add i64 %2145, 5
  store i64 %2146, i64* %PC.i972
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2144, i64* %2147, align 8
  store %struct.Memory* %loadMem_432a72, %struct.Memory** %MEMORY
  br label %block_.L_432a8b

block_.L_432a77:                                  ; preds = %block_432a30, %block_432a09
  %loadMem_432a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 33
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %2150 to i64*
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2152 = getelementptr inbounds %struct.GPR, %struct.GPR* %2151, i32 0, i32 1
  %2153 = getelementptr inbounds %struct.Reg, %struct.Reg* %2152, i32 0, i32 0
  %RAX.i971 = bitcast %union.anon* %2153 to i64*
  %2154 = load i64, i64* %PC.i970
  %2155 = add i64 %2154, 8
  store i64 %2155, i64* %PC.i970
  %2156 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2156, i64* %RAX.i971, align 8
  store %struct.Memory* %loadMem_432a77, %struct.Memory** %MEMORY
  %loadMem_432a7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2158 = getelementptr inbounds %struct.GPR, %struct.GPR* %2157, i32 0, i32 33
  %2159 = getelementptr inbounds %struct.Reg, %struct.Reg* %2158, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %2159 to i64*
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2161 = getelementptr inbounds %struct.GPR, %struct.GPR* %2160, i32 0, i32 1
  %2162 = getelementptr inbounds %struct.Reg, %struct.Reg* %2161, i32 0, i32 0
  %RAX.i968 = bitcast %union.anon* %2162 to i64*
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2164 = getelementptr inbounds %struct.GPR, %struct.GPR* %2163, i32 0, i32 5
  %2165 = getelementptr inbounds %struct.Reg, %struct.Reg* %2164, i32 0, i32 0
  %RCX.i969 = bitcast %union.anon* %2165 to i64*
  %2166 = load i64, i64* %RAX.i968
  %2167 = load i64, i64* %PC.i967
  %2168 = add i64 %2167, 2
  store i64 %2168, i64* %PC.i967
  %2169 = inttoptr i64 %2166 to i32*
  %2170 = load i32, i32* %2169
  %2171 = zext i32 %2170 to i64
  store i64 %2171, i64* %RCX.i969, align 8
  store %struct.Memory* %loadMem_432a7f, %struct.Memory** %MEMORY
  %loadMem_432a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2173 = getelementptr inbounds %struct.GPR, %struct.GPR* %2172, i32 0, i32 33
  %2174 = getelementptr inbounds %struct.Reg, %struct.Reg* %2173, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %2174 to i64*
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 5
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %RCX.i966 = bitcast %union.anon* %2177 to i64*
  %2178 = load i64, i64* %RCX.i966
  %2179 = load i64, i64* %PC.i965
  %2180 = add i64 %2179, 7
  store i64 %2180, i64* %PC.i965
  %2181 = trunc i64 %2178 to i32
  %2182 = load i32, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  %2183 = sub i32 %2181, %2182
  %2184 = zext i32 %2183 to i64
  store i64 %2184, i64* %RCX.i966, align 8
  %2185 = icmp ult i32 %2181, %2182
  %2186 = zext i1 %2185 to i8
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2186, i8* %2187, align 1
  %2188 = and i32 %2183, 255
  %2189 = call i32 @llvm.ctpop.i32(i32 %2188)
  %2190 = trunc i32 %2189 to i8
  %2191 = and i8 %2190, 1
  %2192 = xor i8 %2191, 1
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2192, i8* %2193, align 1
  %2194 = xor i32 %2182, %2181
  %2195 = xor i32 %2194, %2183
  %2196 = lshr i32 %2195, 4
  %2197 = trunc i32 %2196 to i8
  %2198 = and i8 %2197, 1
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2198, i8* %2199, align 1
  %2200 = icmp eq i32 %2183, 0
  %2201 = zext i1 %2200 to i8
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2201, i8* %2202, align 1
  %2203 = lshr i32 %2183, 31
  %2204 = trunc i32 %2203 to i8
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2204, i8* %2205, align 1
  %2206 = lshr i32 %2181, 31
  %2207 = lshr i32 %2182, 31
  %2208 = xor i32 %2207, %2206
  %2209 = xor i32 %2203, %2206
  %2210 = add i32 %2209, %2208
  %2211 = icmp eq i32 %2210, 2
  %2212 = zext i1 %2211 to i8
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2212, i8* %2213, align 1
  store %struct.Memory* %loadMem_432a81, %struct.Memory** %MEMORY
  %loadMem_432a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2215 = getelementptr inbounds %struct.GPR, %struct.GPR* %2214, i32 0, i32 33
  %2216 = getelementptr inbounds %struct.Reg, %struct.Reg* %2215, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %2216 to i64*
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2218 = getelementptr inbounds %struct.GPR, %struct.GPR* %2217, i32 0, i32 5
  %2219 = getelementptr inbounds %struct.Reg, %struct.Reg* %2218, i32 0, i32 0
  %ECX.i963 = bitcast %union.anon* %2219 to i32*
  %2220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2221 = getelementptr inbounds %struct.GPR, %struct.GPR* %2220, i32 0, i32 15
  %2222 = getelementptr inbounds %struct.Reg, %struct.Reg* %2221, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %2222 to i64*
  %2223 = load i64, i64* %RBP.i964
  %2224 = sub i64 %2223, 60
  %2225 = load i32, i32* %ECX.i963
  %2226 = zext i32 %2225 to i64
  %2227 = load i64, i64* %PC.i962
  %2228 = add i64 %2227, 3
  store i64 %2228, i64* %PC.i962
  %2229 = inttoptr i64 %2224 to i32*
  store i32 %2225, i32* %2229
  store %struct.Memory* %loadMem_432a88, %struct.Memory** %MEMORY
  br label %block_.L_432a8b

block_.L_432a8b:                                  ; preds = %block_.L_432a77, %routine_idivl_0x4c8__rsi_.exit978
  %loadMem_432a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2231 = getelementptr inbounds %struct.GPR, %struct.GPR* %2230, i32 0, i32 33
  %2232 = getelementptr inbounds %struct.Reg, %struct.Reg* %2231, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %2232 to i64*
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2234 = getelementptr inbounds %struct.GPR, %struct.GPR* %2233, i32 0, i32 1
  %2235 = getelementptr inbounds %struct.Reg, %struct.Reg* %2234, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %2235 to i64*
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2237 = getelementptr inbounds %struct.GPR, %struct.GPR* %2236, i32 0, i32 15
  %2238 = getelementptr inbounds %struct.Reg, %struct.Reg* %2237, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %2238 to i64*
  %2239 = load i64, i64* %RBP.i961
  %2240 = sub i64 %2239, 60
  %2241 = load i64, i64* %PC.i959
  %2242 = add i64 %2241, 3
  store i64 %2242, i64* %PC.i959
  %2243 = inttoptr i64 %2240 to i32*
  %2244 = load i32, i32* %2243
  %2245 = zext i32 %2244 to i64
  store i64 %2245, i64* %RAX.i960, align 8
  store %struct.Memory* %loadMem_432a8b, %struct.Memory** %MEMORY
  %loadMem_432a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2247 = getelementptr inbounds %struct.GPR, %struct.GPR* %2246, i32 0, i32 33
  %2248 = getelementptr inbounds %struct.Reg, %struct.Reg* %2247, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %2248 to i64*
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2250 = getelementptr inbounds %struct.GPR, %struct.GPR* %2249, i32 0, i32 5
  %2251 = getelementptr inbounds %struct.Reg, %struct.Reg* %2250, i32 0, i32 0
  %RCX.i958 = bitcast %union.anon* %2251 to i64*
  %2252 = load i64, i64* %PC.i957
  %2253 = add i64 %2252, 8
  store i64 %2253, i64* %PC.i957
  %2254 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %2254, i64* %RCX.i958, align 8
  store %struct.Memory* %loadMem_432a8e, %struct.Memory** %MEMORY
  %loadMem_432a96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2256 = getelementptr inbounds %struct.GPR, %struct.GPR* %2255, i32 0, i32 33
  %2257 = getelementptr inbounds %struct.Reg, %struct.Reg* %2256, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %2257 to i64*
  %2258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2259 = getelementptr inbounds %struct.GPR, %struct.GPR* %2258, i32 0, i32 5
  %2260 = getelementptr inbounds %struct.Reg, %struct.Reg* %2259, i32 0, i32 0
  %RCX.i955 = bitcast %union.anon* %2260 to i64*
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2262 = getelementptr inbounds %struct.GPR, %struct.GPR* %2261, i32 0, i32 7
  %2263 = getelementptr inbounds %struct.Reg, %struct.Reg* %2262, i32 0, i32 0
  %RDX.i956 = bitcast %union.anon* %2263 to i64*
  %2264 = load i64, i64* %RCX.i955
  %2265 = add i64 %2264, 20
  %2266 = load i64, i64* %PC.i954
  %2267 = add i64 %2266, 3
  store i64 %2267, i64* %PC.i954
  %2268 = inttoptr i64 %2265 to i32*
  %2269 = load i32, i32* %2268
  %2270 = zext i32 %2269 to i64
  store i64 %2270, i64* %RDX.i956, align 8
  store %struct.Memory* %loadMem_432a96, %struct.Memory** %MEMORY
  %loadMem_432a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2272 = getelementptr inbounds %struct.GPR, %struct.GPR* %2271, i32 0, i32 33
  %2273 = getelementptr inbounds %struct.Reg, %struct.Reg* %2272, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %2273 to i64*
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2275 = getelementptr inbounds %struct.GPR, %struct.GPR* %2274, i32 0, i32 7
  %2276 = getelementptr inbounds %struct.Reg, %struct.Reg* %2275, i32 0, i32 0
  %RDX.i953 = bitcast %union.anon* %2276 to i64*
  %2277 = load i64, i64* %RDX.i953
  %2278 = load i64, i64* %PC.i952
  %2279 = add i64 %2278, 3
  store i64 %2279, i64* %PC.i952
  %2280 = trunc i64 %2277 to i32
  %2281 = add i32 1, %2280
  %2282 = zext i32 %2281 to i64
  store i64 %2282, i64* %RDX.i953, align 8
  %2283 = icmp ult i32 %2281, %2280
  %2284 = icmp ult i32 %2281, 1
  %2285 = or i1 %2283, %2284
  %2286 = zext i1 %2285 to i8
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2286, i8* %2287, align 1
  %2288 = and i32 %2281, 255
  %2289 = call i32 @llvm.ctpop.i32(i32 %2288)
  %2290 = trunc i32 %2289 to i8
  %2291 = and i8 %2290, 1
  %2292 = xor i8 %2291, 1
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2292, i8* %2293, align 1
  %2294 = xor i64 1, %2277
  %2295 = trunc i64 %2294 to i32
  %2296 = xor i32 %2295, %2281
  %2297 = lshr i32 %2296, 4
  %2298 = trunc i32 %2297 to i8
  %2299 = and i8 %2298, 1
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2299, i8* %2300, align 1
  %2301 = icmp eq i32 %2281, 0
  %2302 = zext i1 %2301 to i8
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2302, i8* %2303, align 1
  %2304 = lshr i32 %2281, 31
  %2305 = trunc i32 %2304 to i8
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2305, i8* %2306, align 1
  %2307 = lshr i32 %2280, 31
  %2308 = xor i32 %2304, %2307
  %2309 = add i32 %2308, %2304
  %2310 = icmp eq i32 %2309, 2
  %2311 = zext i1 %2310 to i8
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2311, i8* %2312, align 1
  store %struct.Memory* %loadMem_432a99, %struct.Memory** %MEMORY
  %loadMem_432a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 33
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %2315 to i64*
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2317 = getelementptr inbounds %struct.GPR, %struct.GPR* %2316, i32 0, i32 7
  %2318 = getelementptr inbounds %struct.Reg, %struct.Reg* %2317, i32 0, i32 0
  %RDX.i951 = bitcast %union.anon* %2318 to i64*
  %2319 = load i64, i64* %RDX.i951
  %2320 = load i64, i64* %PC.i950
  %2321 = add i64 %2320, 2
  store i64 %2321, i64* %PC.i950
  %2322 = trunc i64 %2319 to i32
  %2323 = shl i32 %2322, 1
  %2324 = icmp slt i32 %2322, 0
  %2325 = icmp slt i32 %2323, 0
  %2326 = xor i1 %2324, %2325
  %2327 = zext i32 %2323 to i64
  store i64 %2327, i64* %RDX.i951, align 8
  %2328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2329 = zext i1 %2324 to i8
  store i8 %2329, i8* %2328, align 1
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2331 = and i32 %2323, 254
  %2332 = call i32 @llvm.ctpop.i32(i32 %2331)
  %2333 = trunc i32 %2332 to i8
  %2334 = and i8 %2333, 1
  %2335 = xor i8 %2334, 1
  store i8 %2335, i8* %2330, align 1
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2336, align 1
  %2337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2338 = icmp eq i32 %2323, 0
  %2339 = zext i1 %2338 to i8
  store i8 %2339, i8* %2337, align 1
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2341 = lshr i32 %2323, 31
  %2342 = trunc i32 %2341 to i8
  store i8 %2342, i8* %2340, align 1
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2344 = zext i1 %2326 to i8
  store i8 %2344, i8* %2343, align 1
  store %struct.Memory* %loadMem_432a9c, %struct.Memory** %MEMORY
  %loadMem_432a9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 33
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %2347 to i64*
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 7
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %EDX.i948 = bitcast %union.anon* %2350 to i32*
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2352 = getelementptr inbounds %struct.GPR, %struct.GPR* %2351, i32 0, i32 1
  %2353 = getelementptr inbounds %struct.Reg, %struct.Reg* %2352, i32 0, i32 0
  %RAX.i949 = bitcast %union.anon* %2353 to i64*
  %2354 = load i64, i64* %RAX.i949
  %2355 = load i32, i32* %EDX.i948
  %2356 = zext i32 %2355 to i64
  %2357 = load i64, i64* %PC.i947
  %2358 = add i64 %2357, 3
  store i64 %2358, i64* %PC.i947
  %2359 = shl i64 %2354, 32
  %2360 = ashr exact i64 %2359, 32
  %2361 = shl i64 %2356, 32
  %2362 = ashr exact i64 %2361, 32
  %2363 = mul i64 %2362, %2360
  %2364 = trunc i64 %2363 to i32
  %2365 = and i64 %2363, 4294967295
  store i64 %2365, i64* %RAX.i949, align 8
  %2366 = shl i64 %2363, 32
  %2367 = ashr exact i64 %2366, 32
  %2368 = icmp ne i64 %2367, %2363
  %2369 = zext i1 %2368 to i8
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2369, i8* %2370, align 1
  %2371 = and i32 %2364, 255
  %2372 = call i32 @llvm.ctpop.i32(i32 %2371)
  %2373 = trunc i32 %2372 to i8
  %2374 = and i8 %2373, 1
  %2375 = xor i8 %2374, 1
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2375, i8* %2376, align 1
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2377, align 1
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2378, align 1
  %2379 = lshr i32 %2364, 31
  %2380 = trunc i32 %2379 to i8
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2380, i8* %2381, align 1
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2369, i8* %2382, align 1
  store %struct.Memory* %loadMem_432a9f, %struct.Memory** %MEMORY
  %loadMem_432aa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 33
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %2385 to i64*
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2387 = getelementptr inbounds %struct.GPR, %struct.GPR* %2386, i32 0, i32 5
  %2388 = getelementptr inbounds %struct.Reg, %struct.Reg* %2387, i32 0, i32 0
  %RCX.i946 = bitcast %union.anon* %2388 to i64*
  %2389 = load i64, i64* %PC.i945
  %2390 = add i64 %2389, 8
  store i64 %2390, i64* %PC.i945
  %2391 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2391, i64* %RCX.i946, align 8
  store %struct.Memory* %loadMem_432aa2, %struct.Memory** %MEMORY
  %loadMem_432aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2393 = getelementptr inbounds %struct.GPR, %struct.GPR* %2392, i32 0, i32 33
  %2394 = getelementptr inbounds %struct.Reg, %struct.Reg* %2393, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %2394 to i64*
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2396 = getelementptr inbounds %struct.GPR, %struct.GPR* %2395, i32 0, i32 1
  %2397 = getelementptr inbounds %struct.Reg, %struct.Reg* %2396, i32 0, i32 0
  %EAX.i943 = bitcast %union.anon* %2397 to i32*
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2399 = getelementptr inbounds %struct.GPR, %struct.GPR* %2398, i32 0, i32 5
  %2400 = getelementptr inbounds %struct.Reg, %struct.Reg* %2399, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %2400 to i64*
  %2401 = load i64, i64* %RCX.i944
  %2402 = add i64 %2401, 72448
  %2403 = load i32, i32* %EAX.i943
  %2404 = zext i32 %2403 to i64
  %2405 = load i64, i64* %PC.i942
  %2406 = add i64 %2405, 6
  store i64 %2406, i64* %PC.i942
  %2407 = inttoptr i64 %2402 to i32*
  store i32 %2403, i32* %2407
  store %struct.Memory* %loadMem_432aaa, %struct.Memory** %MEMORY
  %loadMem_432ab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2409 = getelementptr inbounds %struct.GPR, %struct.GPR* %2408, i32 0, i32 33
  %2410 = getelementptr inbounds %struct.Reg, %struct.Reg* %2409, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2410 to i64*
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2412 = getelementptr inbounds %struct.GPR, %struct.GPR* %2411, i32 0, i32 5
  %2413 = getelementptr inbounds %struct.Reg, %struct.Reg* %2412, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %2413 to i64*
  %2414 = load i64, i64* %PC.i940
  %2415 = add i64 %2414, 8
  store i64 %2415, i64* %PC.i940
  %2416 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %2416, i64* %RCX.i941, align 8
  store %struct.Memory* %loadMem_432ab0, %struct.Memory** %MEMORY
  %loadMem_432ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2418 = getelementptr inbounds %struct.GPR, %struct.GPR* %2417, i32 0, i32 33
  %2419 = getelementptr inbounds %struct.Reg, %struct.Reg* %2418, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %2419 to i64*
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2421 = getelementptr inbounds %struct.GPR, %struct.GPR* %2420, i32 0, i32 5
  %2422 = getelementptr inbounds %struct.Reg, %struct.Reg* %2421, i32 0, i32 0
  %RCX.i939 = bitcast %union.anon* %2422 to i64*
  %2423 = load i64, i64* %RCX.i939
  %2424 = add i64 %2423, 2880
  %2425 = load i64, i64* %PC.i938
  %2426 = add i64 %2425, 7
  store i64 %2426, i64* %PC.i938
  %2427 = inttoptr i64 %2424 to i32*
  %2428 = load i32, i32* %2427
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2429, align 1
  %2430 = and i32 %2428, 255
  %2431 = call i32 @llvm.ctpop.i32(i32 %2430)
  %2432 = trunc i32 %2431 to i8
  %2433 = and i8 %2432, 1
  %2434 = xor i8 %2433, 1
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2434, i8* %2435, align 1
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2436, align 1
  %2437 = icmp eq i32 %2428, 0
  %2438 = zext i1 %2437 to i8
  %2439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2438, i8* %2439, align 1
  %2440 = lshr i32 %2428, 31
  %2441 = trunc i32 %2440 to i8
  %2442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2441, i8* %2442, align 1
  %2443 = lshr i32 %2428, 31
  %2444 = xor i32 %2440, %2443
  %2445 = add i32 %2444, %2443
  %2446 = icmp eq i32 %2445, 2
  %2447 = zext i1 %2446 to i8
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2447, i8* %2448, align 1
  store %struct.Memory* %loadMem_432ab8, %struct.Memory** %MEMORY
  %loadMem_432abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 33
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2451 to i64*
  %2452 = load i64, i64* %PC.i937
  %2453 = add i64 %2452, 60
  %2454 = load i64, i64* %PC.i937
  %2455 = add i64 %2454, 6
  %2456 = load i64, i64* %PC.i937
  %2457 = add i64 %2456, 6
  store i64 %2457, i64* %PC.i937
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2459 = load i8, i8* %2458, align 1
  %2460 = icmp eq i8 %2459, 0
  %2461 = zext i1 %2460 to i8
  store i8 %2461, i8* %BRANCH_TAKEN, align 1
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2463 = select i1 %2460, i64 %2453, i64 %2455
  store i64 %2463, i64* %2462, align 8
  store %struct.Memory* %loadMem_432abf, %struct.Memory** %MEMORY
  %loadBr_432abf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432abf = icmp eq i8 %loadBr_432abf, 1
  br i1 %cmpBr_432abf, label %block_.L_432afb, label %block_432ac5

block_432ac5:                                     ; preds = %block_.L_432a8b
  %loadMem_432ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 33
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %2466 to i64*
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 1
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %2469 to i64*
  %2470 = load i64, i64* %PC.i935
  %2471 = add i64 %2470, 8
  store i64 %2471, i64* %PC.i935
  %2472 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %2472, i64* %RAX.i936, align 8
  store %struct.Memory* %loadMem_432ac5, %struct.Memory** %MEMORY
  %loadMem_432acd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2474 = getelementptr inbounds %struct.GPR, %struct.GPR* %2473, i32 0, i32 33
  %2475 = getelementptr inbounds %struct.Reg, %struct.Reg* %2474, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %2475 to i64*
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2477 = getelementptr inbounds %struct.GPR, %struct.GPR* %2476, i32 0, i32 1
  %2478 = getelementptr inbounds %struct.Reg, %struct.Reg* %2477, i32 0, i32 0
  %RAX.i934 = bitcast %union.anon* %2478 to i64*
  %2479 = load i64, i64* %RAX.i934
  %2480 = add i64 %2479, 2884
  %2481 = load i64, i64* %PC.i933
  %2482 = add i64 %2481, 7
  store i64 %2482, i64* %PC.i933
  %2483 = inttoptr i64 %2480 to i32*
  %2484 = load i32, i32* %2483
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2485, align 1
  %2486 = and i32 %2484, 255
  %2487 = call i32 @llvm.ctpop.i32(i32 %2486)
  %2488 = trunc i32 %2487 to i8
  %2489 = and i8 %2488, 1
  %2490 = xor i8 %2489, 1
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2490, i8* %2491, align 1
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2492, align 1
  %2493 = icmp eq i32 %2484, 0
  %2494 = zext i1 %2493 to i8
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2494, i8* %2495, align 1
  %2496 = lshr i32 %2484, 31
  %2497 = trunc i32 %2496 to i8
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2497, i8* %2498, align 1
  %2499 = lshr i32 %2484, 31
  %2500 = xor i32 %2496, %2499
  %2501 = add i32 %2500, %2499
  %2502 = icmp eq i32 %2501, 2
  %2503 = zext i1 %2502 to i8
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2503, i8* %2504, align 1
  store %struct.Memory* %loadMem_432acd, %struct.Memory** %MEMORY
  %loadMem_432ad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 33
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %2507 to i64*
  %2508 = load i64, i64* %PC.i932
  %2509 = add i64 %2508, 39
  %2510 = load i64, i64* %PC.i932
  %2511 = add i64 %2510, 6
  %2512 = load i64, i64* %PC.i932
  %2513 = add i64 %2512, 6
  store i64 %2513, i64* %PC.i932
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2515 = load i8, i8* %2514, align 1
  %2516 = icmp eq i8 %2515, 0
  %2517 = zext i1 %2516 to i8
  store i8 %2517, i8* %BRANCH_TAKEN, align 1
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2519 = select i1 %2516, i64 %2509, i64 %2511
  store i64 %2519, i64* %2518, align 8
  store %struct.Memory* %loadMem_432ad4, %struct.Memory** %MEMORY
  %loadBr_432ad4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432ad4 = icmp eq i8 %loadBr_432ad4, 1
  br i1 %cmpBr_432ad4, label %block_.L_432afb, label %block_432ada

block_432ada:                                     ; preds = %block_432ac5
  %loadMem_432ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2521 = getelementptr inbounds %struct.GPR, %struct.GPR* %2520, i32 0, i32 33
  %2522 = getelementptr inbounds %struct.Reg, %struct.Reg* %2521, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %2522 to i64*
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2524 = getelementptr inbounds %struct.GPR, %struct.GPR* %2523, i32 0, i32 1
  %2525 = getelementptr inbounds %struct.Reg, %struct.Reg* %2524, i32 0, i32 0
  %RAX.i931 = bitcast %union.anon* %2525 to i64*
  %2526 = load i64, i64* %PC.i930
  %2527 = add i64 %2526, 8
  store i64 %2527, i64* %PC.i930
  %2528 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2528, i64* %RAX.i931, align 8
  store %struct.Memory* %loadMem_432ada, %struct.Memory** %MEMORY
  %loadMem_432ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2530 = getelementptr inbounds %struct.GPR, %struct.GPR* %2529, i32 0, i32 33
  %2531 = getelementptr inbounds %struct.Reg, %struct.Reg* %2530, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %2531 to i64*
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2533 = getelementptr inbounds %struct.GPR, %struct.GPR* %2532, i32 0, i32 1
  %2534 = getelementptr inbounds %struct.Reg, %struct.Reg* %2533, i32 0, i32 0
  %RAX.i928 = bitcast %union.anon* %2534 to i64*
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2536 = getelementptr inbounds %struct.GPR, %struct.GPR* %2535, i32 0, i32 5
  %2537 = getelementptr inbounds %struct.Reg, %struct.Reg* %2536, i32 0, i32 0
  %RCX.i929 = bitcast %union.anon* %2537 to i64*
  %2538 = load i64, i64* %RAX.i928
  %2539 = add i64 %2538, 72448
  %2540 = load i64, i64* %PC.i927
  %2541 = add i64 %2540, 6
  store i64 %2541, i64* %PC.i927
  %2542 = inttoptr i64 %2539 to i32*
  %2543 = load i32, i32* %2542
  %2544 = zext i32 %2543 to i64
  store i64 %2544, i64* %RCX.i929, align 8
  store %struct.Memory* %loadMem_432ae2, %struct.Memory** %MEMORY
  %loadMem_432ae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 33
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %2547 to i64*
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 1
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %RAX.i926 = bitcast %union.anon* %2550 to i64*
  %2551 = load i64, i64* %PC.i925
  %2552 = add i64 %2551, 8
  store i64 %2552, i64* %PC.i925
  %2553 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2553, i64* %RAX.i926, align 8
  store %struct.Memory* %loadMem_432ae8, %struct.Memory** %MEMORY
  %loadMem_432af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 33
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %2556 to i64*
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 5
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %ECX.i923 = bitcast %union.anon* %2559 to i32*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 1
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %RAX.i924 = bitcast %union.anon* %2562 to i64*
  %2563 = load i64, i64* %RAX.i924
  %2564 = add i64 %2563, 72452
  %2565 = load i32, i32* %ECX.i923
  %2566 = zext i32 %2565 to i64
  %2567 = load i64, i64* %PC.i922
  %2568 = add i64 %2567, 6
  store i64 %2568, i64* %PC.i922
  %2569 = inttoptr i64 %2564 to i32*
  store i32 %2565, i32* %2569
  store %struct.Memory* %loadMem_432af0, %struct.Memory** %MEMORY
  %loadMem_432af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2571 = getelementptr inbounds %struct.GPR, %struct.GPR* %2570, i32 0, i32 33
  %2572 = getelementptr inbounds %struct.Reg, %struct.Reg* %2571, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %2572 to i64*
  %2573 = load i64, i64* %PC.i921
  %2574 = add i64 %2573, 36
  %2575 = load i64, i64* %PC.i921
  %2576 = add i64 %2575, 5
  store i64 %2576, i64* %PC.i921
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2574, i64* %2577, align 8
  store %struct.Memory* %loadMem_432af6, %struct.Memory** %MEMORY
  br label %block_.L_432b1a

block_.L_432afb:                                  ; preds = %block_432ac5, %block_.L_432a8b
  %loadMem_432afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2579 = getelementptr inbounds %struct.GPR, %struct.GPR* %2578, i32 0, i32 33
  %2580 = getelementptr inbounds %struct.Reg, %struct.Reg* %2579, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %2580 to i64*
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2582 = getelementptr inbounds %struct.GPR, %struct.GPR* %2581, i32 0, i32 1
  %2583 = getelementptr inbounds %struct.Reg, %struct.Reg* %2582, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %2583 to i64*
  %2584 = load i64, i64* %PC.i919
  %2585 = add i64 %2584, 8
  store i64 %2585, i64* %PC.i919
  %2586 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2586, i64* %RAX.i920, align 8
  store %struct.Memory* %loadMem_432afb, %struct.Memory** %MEMORY
  %loadMem_432b03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2588 = getelementptr inbounds %struct.GPR, %struct.GPR* %2587, i32 0, i32 33
  %2589 = getelementptr inbounds %struct.Reg, %struct.Reg* %2588, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %2589 to i64*
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2591 = getelementptr inbounds %struct.GPR, %struct.GPR* %2590, i32 0, i32 1
  %2592 = getelementptr inbounds %struct.Reg, %struct.Reg* %2591, i32 0, i32 0
  %RAX.i917 = bitcast %union.anon* %2592 to i64*
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2594 = getelementptr inbounds %struct.GPR, %struct.GPR* %2593, i32 0, i32 5
  %2595 = getelementptr inbounds %struct.Reg, %struct.Reg* %2594, i32 0, i32 0
  %RCX.i918 = bitcast %union.anon* %2595 to i64*
  %2596 = load i64, i64* %RAX.i917
  %2597 = add i64 %2596, 72448
  %2598 = load i64, i64* %PC.i916
  %2599 = add i64 %2598, 6
  store i64 %2599, i64* %PC.i916
  %2600 = inttoptr i64 %2597 to i32*
  %2601 = load i32, i32* %2600
  %2602 = zext i32 %2601 to i64
  store i64 %2602, i64* %RCX.i918, align 8
  store %struct.Memory* %loadMem_432b03, %struct.Memory** %MEMORY
  %loadMem_432b09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2604 = getelementptr inbounds %struct.GPR, %struct.GPR* %2603, i32 0, i32 33
  %2605 = getelementptr inbounds %struct.Reg, %struct.Reg* %2604, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %2605 to i64*
  %2606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2607 = getelementptr inbounds %struct.GPR, %struct.GPR* %2606, i32 0, i32 5
  %2608 = getelementptr inbounds %struct.Reg, %struct.Reg* %2607, i32 0, i32 0
  %RCX.i915 = bitcast %union.anon* %2608 to i64*
  %2609 = load i64, i64* %RCX.i915
  %2610 = load i64, i64* %PC.i914
  %2611 = add i64 %2610, 3
  store i64 %2611, i64* %PC.i914
  %2612 = trunc i64 %2609 to i32
  %2613 = add i32 1, %2612
  %2614 = zext i32 %2613 to i64
  store i64 %2614, i64* %RCX.i915, align 8
  %2615 = icmp ult i32 %2613, %2612
  %2616 = icmp ult i32 %2613, 1
  %2617 = or i1 %2615, %2616
  %2618 = zext i1 %2617 to i8
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2618, i8* %2619, align 1
  %2620 = and i32 %2613, 255
  %2621 = call i32 @llvm.ctpop.i32(i32 %2620)
  %2622 = trunc i32 %2621 to i8
  %2623 = and i8 %2622, 1
  %2624 = xor i8 %2623, 1
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2624, i8* %2625, align 1
  %2626 = xor i64 1, %2609
  %2627 = trunc i64 %2626 to i32
  %2628 = xor i32 %2627, %2613
  %2629 = lshr i32 %2628, 4
  %2630 = trunc i32 %2629 to i8
  %2631 = and i8 %2630, 1
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2631, i8* %2632, align 1
  %2633 = icmp eq i32 %2613, 0
  %2634 = zext i1 %2633 to i8
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2634, i8* %2635, align 1
  %2636 = lshr i32 %2613, 31
  %2637 = trunc i32 %2636 to i8
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2637, i8* %2638, align 1
  %2639 = lshr i32 %2612, 31
  %2640 = xor i32 %2636, %2639
  %2641 = add i32 %2640, %2636
  %2642 = icmp eq i32 %2641, 2
  %2643 = zext i1 %2642 to i8
  %2644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2643, i8* %2644, align 1
  store %struct.Memory* %loadMem_432b09, %struct.Memory** %MEMORY
  %loadMem_432b0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2646 = getelementptr inbounds %struct.GPR, %struct.GPR* %2645, i32 0, i32 33
  %2647 = getelementptr inbounds %struct.Reg, %struct.Reg* %2646, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %2647 to i64*
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2649 = getelementptr inbounds %struct.GPR, %struct.GPR* %2648, i32 0, i32 1
  %2650 = getelementptr inbounds %struct.Reg, %struct.Reg* %2649, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %2650 to i64*
  %2651 = load i64, i64* %PC.i912
  %2652 = add i64 %2651, 8
  store i64 %2652, i64* %PC.i912
  %2653 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2653, i64* %RAX.i913, align 8
  store %struct.Memory* %loadMem_432b0c, %struct.Memory** %MEMORY
  %loadMem_432b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2655 = getelementptr inbounds %struct.GPR, %struct.GPR* %2654, i32 0, i32 33
  %2656 = getelementptr inbounds %struct.Reg, %struct.Reg* %2655, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %2656 to i64*
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2658 = getelementptr inbounds %struct.GPR, %struct.GPR* %2657, i32 0, i32 5
  %2659 = getelementptr inbounds %struct.Reg, %struct.Reg* %2658, i32 0, i32 0
  %ECX.i910 = bitcast %union.anon* %2659 to i32*
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2661 = getelementptr inbounds %struct.GPR, %struct.GPR* %2660, i32 0, i32 1
  %2662 = getelementptr inbounds %struct.Reg, %struct.Reg* %2661, i32 0, i32 0
  %RAX.i911 = bitcast %union.anon* %2662 to i64*
  %2663 = load i64, i64* %RAX.i911
  %2664 = add i64 %2663, 72452
  %2665 = load i32, i32* %ECX.i910
  %2666 = zext i32 %2665 to i64
  %2667 = load i64, i64* %PC.i909
  %2668 = add i64 %2667, 6
  store i64 %2668, i64* %PC.i909
  %2669 = inttoptr i64 %2664 to i32*
  store i32 %2665, i32* %2669
  store %struct.Memory* %loadMem_432b14, %struct.Memory** %MEMORY
  br label %block_.L_432b1a

block_.L_432b1a:                                  ; preds = %block_.L_432afb, %block_432ada
  %loadMem_432b1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2671 = getelementptr inbounds %struct.GPR, %struct.GPR* %2670, i32 0, i32 33
  %2672 = getelementptr inbounds %struct.Reg, %struct.Reg* %2671, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %2672 to i64*
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2674 = getelementptr inbounds %struct.GPR, %struct.GPR* %2673, i32 0, i32 1
  %2675 = getelementptr inbounds %struct.Reg, %struct.Reg* %2674, i32 0, i32 0
  %RAX.i908 = bitcast %union.anon* %2675 to i64*
  %2676 = load i64, i64* %PC.i907
  %2677 = add i64 %2676, 8
  store i64 %2677, i64* %PC.i907
  %2678 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2678, i64* %RAX.i908, align 8
  store %struct.Memory* %loadMem_432b1a, %struct.Memory** %MEMORY
  %loadMem_432b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2680 = getelementptr inbounds %struct.GPR, %struct.GPR* %2679, i32 0, i32 33
  %2681 = getelementptr inbounds %struct.Reg, %struct.Reg* %2680, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %2681 to i64*
  %2682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2683 = getelementptr inbounds %struct.GPR, %struct.GPR* %2682, i32 0, i32 1
  %2684 = getelementptr inbounds %struct.Reg, %struct.Reg* %2683, i32 0, i32 0
  %RAX.i905 = bitcast %union.anon* %2684 to i64*
  %2685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2686 = getelementptr inbounds %struct.GPR, %struct.GPR* %2685, i32 0, i32 5
  %2687 = getelementptr inbounds %struct.Reg, %struct.Reg* %2686, i32 0, i32 0
  %RCX.i906 = bitcast %union.anon* %2687 to i64*
  %2688 = load i64, i64* %RAX.i905
  %2689 = add i64 %2688, 72448
  %2690 = load i64, i64* %PC.i904
  %2691 = add i64 %2690, 6
  store i64 %2691, i64* %PC.i904
  %2692 = inttoptr i64 %2689 to i32*
  %2693 = load i32, i32* %2692
  %2694 = zext i32 %2693 to i64
  store i64 %2694, i64* %RCX.i906, align 8
  store %struct.Memory* %loadMem_432b22, %struct.Memory** %MEMORY
  %loadMem_432b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2696 = getelementptr inbounds %struct.GPR, %struct.GPR* %2695, i32 0, i32 33
  %2697 = getelementptr inbounds %struct.Reg, %struct.Reg* %2696, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %2697 to i64*
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2699 = getelementptr inbounds %struct.GPR, %struct.GPR* %2698, i32 0, i32 1
  %2700 = getelementptr inbounds %struct.Reg, %struct.Reg* %2699, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %2700 to i64*
  %2701 = load i64, i64* %PC.i902
  %2702 = add i64 %2701, 8
  store i64 %2702, i64* %PC.i902
  %2703 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2703, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_432b28, %struct.Memory** %MEMORY
  %loadMem_432b30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2705 = getelementptr inbounds %struct.GPR, %struct.GPR* %2704, i32 0, i32 33
  %2706 = getelementptr inbounds %struct.Reg, %struct.Reg* %2705, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %2706 to i64*
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2708 = getelementptr inbounds %struct.GPR, %struct.GPR* %2707, i32 0, i32 5
  %2709 = getelementptr inbounds %struct.Reg, %struct.Reg* %2708, i32 0, i32 0
  %ECX.i900 = bitcast %union.anon* %2709 to i32*
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2711 = getelementptr inbounds %struct.GPR, %struct.GPR* %2710, i32 0, i32 1
  %2712 = getelementptr inbounds %struct.Reg, %struct.Reg* %2711, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %2712 to i64*
  %2713 = load i32, i32* %ECX.i900
  %2714 = zext i32 %2713 to i64
  %2715 = load i64, i64* %RAX.i901
  %2716 = add i64 %2715, 72452
  %2717 = load i64, i64* %PC.i899
  %2718 = add i64 %2717, 6
  store i64 %2718, i64* %PC.i899
  %2719 = inttoptr i64 %2716 to i32*
  %2720 = load i32, i32* %2719
  %2721 = sub i32 %2713, %2720
  %2722 = icmp ult i32 %2713, %2720
  %2723 = zext i1 %2722 to i8
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2723, i8* %2724, align 1
  %2725 = and i32 %2721, 255
  %2726 = call i32 @llvm.ctpop.i32(i32 %2725)
  %2727 = trunc i32 %2726 to i8
  %2728 = and i8 %2727, 1
  %2729 = xor i8 %2728, 1
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2729, i8* %2730, align 1
  %2731 = xor i32 %2720, %2713
  %2732 = xor i32 %2731, %2721
  %2733 = lshr i32 %2732, 4
  %2734 = trunc i32 %2733 to i8
  %2735 = and i8 %2734, 1
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2735, i8* %2736, align 1
  %2737 = icmp eq i32 %2721, 0
  %2738 = zext i1 %2737 to i8
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2738, i8* %2739, align 1
  %2740 = lshr i32 %2721, 31
  %2741 = trunc i32 %2740 to i8
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2741, i8* %2742, align 1
  %2743 = lshr i32 %2713, 31
  %2744 = lshr i32 %2720, 31
  %2745 = xor i32 %2744, %2743
  %2746 = xor i32 %2740, %2743
  %2747 = add i32 %2746, %2745
  %2748 = icmp eq i32 %2747, 2
  %2749 = zext i1 %2748 to i8
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2749, i8* %2750, align 1
  store %struct.Memory* %loadMem_432b30, %struct.Memory** %MEMORY
  %loadMem_432b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 33
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %2753 to i64*
  %2754 = load i64, i64* %PC.i898
  %2755 = add i64 %2754, 28
  %2756 = load i64, i64* %PC.i898
  %2757 = add i64 %2756, 6
  %2758 = load i64, i64* %PC.i898
  %2759 = add i64 %2758, 6
  store i64 %2759, i64* %PC.i898
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2761 = load i8, i8* %2760, align 1
  %2762 = icmp ne i8 %2761, 0
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2764 = load i8, i8* %2763, align 1
  %2765 = icmp ne i8 %2764, 0
  %2766 = xor i1 %2762, %2765
  %2767 = xor i1 %2766, true
  %2768 = zext i1 %2767 to i8
  store i8 %2768, i8* %BRANCH_TAKEN, align 1
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2770 = select i1 %2766, i64 %2757, i64 %2755
  store i64 %2770, i64* %2769, align 8
  store %struct.Memory* %loadMem_432b36, %struct.Memory** %MEMORY
  %loadBr_432b36 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432b36 = icmp eq i8 %loadBr_432b36, 1
  br i1 %cmpBr_432b36, label %block_.L_432b52, label %block_432b3c

block_432b3c:                                     ; preds = %block_.L_432b1a
  %loadMem_432b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 33
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %2773 to i64*
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2775 = getelementptr inbounds %struct.GPR, %struct.GPR* %2774, i32 0, i32 1
  %2776 = getelementptr inbounds %struct.Reg, %struct.Reg* %2775, i32 0, i32 0
  %RAX.i897 = bitcast %union.anon* %2776 to i64*
  %2777 = load i64, i64* %PC.i896
  %2778 = add i64 %2777, 8
  store i64 %2778, i64* %PC.i896
  %2779 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2779, i64* %RAX.i897, align 8
  store %struct.Memory* %loadMem_432b3c, %struct.Memory** %MEMORY
  %loadMem_432b44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2781 = getelementptr inbounds %struct.GPR, %struct.GPR* %2780, i32 0, i32 33
  %2782 = getelementptr inbounds %struct.Reg, %struct.Reg* %2781, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %2782 to i64*
  %2783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2784 = getelementptr inbounds %struct.GPR, %struct.GPR* %2783, i32 0, i32 1
  %2785 = getelementptr inbounds %struct.Reg, %struct.Reg* %2784, i32 0, i32 0
  %RAX.i894 = bitcast %union.anon* %2785 to i64*
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2787 = getelementptr inbounds %struct.GPR, %struct.GPR* %2786, i32 0, i32 5
  %2788 = getelementptr inbounds %struct.Reg, %struct.Reg* %2787, i32 0, i32 0
  %RCX.i895 = bitcast %union.anon* %2788 to i64*
  %2789 = load i64, i64* %RAX.i894
  %2790 = add i64 %2789, 72448
  %2791 = load i64, i64* %PC.i893
  %2792 = add i64 %2791, 6
  store i64 %2792, i64* %PC.i893
  %2793 = inttoptr i64 %2790 to i32*
  %2794 = load i32, i32* %2793
  %2795 = zext i32 %2794 to i64
  store i64 %2795, i64* %RCX.i895, align 8
  store %struct.Memory* %loadMem_432b44, %struct.Memory** %MEMORY
  %loadMem_432b4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2797 = getelementptr inbounds %struct.GPR, %struct.GPR* %2796, i32 0, i32 33
  %2798 = getelementptr inbounds %struct.Reg, %struct.Reg* %2797, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %2798 to i64*
  %2799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2800 = getelementptr inbounds %struct.GPR, %struct.GPR* %2799, i32 0, i32 5
  %2801 = getelementptr inbounds %struct.Reg, %struct.Reg* %2800, i32 0, i32 0
  %ECX.i891 = bitcast %union.anon* %2801 to i32*
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2803 = getelementptr inbounds %struct.GPR, %struct.GPR* %2802, i32 0, i32 15
  %2804 = getelementptr inbounds %struct.Reg, %struct.Reg* %2803, i32 0, i32 0
  %RBP.i892 = bitcast %union.anon* %2804 to i64*
  %2805 = load i64, i64* %RBP.i892
  %2806 = sub i64 %2805, 64
  %2807 = load i32, i32* %ECX.i891
  %2808 = zext i32 %2807 to i64
  %2809 = load i64, i64* %PC.i890
  %2810 = add i64 %2809, 3
  store i64 %2810, i64* %PC.i890
  %2811 = inttoptr i64 %2806 to i32*
  store i32 %2807, i32* %2811
  store %struct.Memory* %loadMem_432b4a, %struct.Memory** %MEMORY
  %loadMem_432b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2813 = getelementptr inbounds %struct.GPR, %struct.GPR* %2812, i32 0, i32 33
  %2814 = getelementptr inbounds %struct.Reg, %struct.Reg* %2813, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %2814 to i64*
  %2815 = load i64, i64* %PC.i889
  %2816 = add i64 %2815, 22
  %2817 = load i64, i64* %PC.i889
  %2818 = add i64 %2817, 5
  store i64 %2818, i64* %PC.i889
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2816, i64* %2819, align 8
  store %struct.Memory* %loadMem_432b4d, %struct.Memory** %MEMORY
  br label %block_.L_432b63

block_.L_432b52:                                  ; preds = %block_.L_432b1a
  %loadMem_432b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2821 = getelementptr inbounds %struct.GPR, %struct.GPR* %2820, i32 0, i32 33
  %2822 = getelementptr inbounds %struct.Reg, %struct.Reg* %2821, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %2822 to i64*
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2824 = getelementptr inbounds %struct.GPR, %struct.GPR* %2823, i32 0, i32 1
  %2825 = getelementptr inbounds %struct.Reg, %struct.Reg* %2824, i32 0, i32 0
  %RAX.i888 = bitcast %union.anon* %2825 to i64*
  %2826 = load i64, i64* %PC.i887
  %2827 = add i64 %2826, 8
  store i64 %2827, i64* %PC.i887
  %2828 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2828, i64* %RAX.i888, align 8
  store %struct.Memory* %loadMem_432b52, %struct.Memory** %MEMORY
  %loadMem_432b5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2830 = getelementptr inbounds %struct.GPR, %struct.GPR* %2829, i32 0, i32 33
  %2831 = getelementptr inbounds %struct.Reg, %struct.Reg* %2830, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %2831 to i64*
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2833 = getelementptr inbounds %struct.GPR, %struct.GPR* %2832, i32 0, i32 1
  %2834 = getelementptr inbounds %struct.Reg, %struct.Reg* %2833, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %2834 to i64*
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2836 = getelementptr inbounds %struct.GPR, %struct.GPR* %2835, i32 0, i32 5
  %2837 = getelementptr inbounds %struct.Reg, %struct.Reg* %2836, i32 0, i32 0
  %RCX.i886 = bitcast %union.anon* %2837 to i64*
  %2838 = load i64, i64* %RAX.i885
  %2839 = add i64 %2838, 72452
  %2840 = load i64, i64* %PC.i884
  %2841 = add i64 %2840, 6
  store i64 %2841, i64* %PC.i884
  %2842 = inttoptr i64 %2839 to i32*
  %2843 = load i32, i32* %2842
  %2844 = zext i32 %2843 to i64
  store i64 %2844, i64* %RCX.i886, align 8
  store %struct.Memory* %loadMem_432b5a, %struct.Memory** %MEMORY
  %loadMem_432b60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2846 = getelementptr inbounds %struct.GPR, %struct.GPR* %2845, i32 0, i32 33
  %2847 = getelementptr inbounds %struct.Reg, %struct.Reg* %2846, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %2847 to i64*
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2849 = getelementptr inbounds %struct.GPR, %struct.GPR* %2848, i32 0, i32 5
  %2850 = getelementptr inbounds %struct.Reg, %struct.Reg* %2849, i32 0, i32 0
  %ECX.i882 = bitcast %union.anon* %2850 to i32*
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 15
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %RBP.i883 = bitcast %union.anon* %2853 to i64*
  %2854 = load i64, i64* %RBP.i883
  %2855 = sub i64 %2854, 64
  %2856 = load i32, i32* %ECX.i882
  %2857 = zext i32 %2856 to i64
  %2858 = load i64, i64* %PC.i881
  %2859 = add i64 %2858, 3
  store i64 %2859, i64* %PC.i881
  %2860 = inttoptr i64 %2855 to i32*
  store i32 %2856, i32* %2860
  store %struct.Memory* %loadMem_432b60, %struct.Memory** %MEMORY
  br label %block_.L_432b63

block_.L_432b63:                                  ; preds = %block_.L_432b52, %block_432b3c
  %loadMem_432b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2862 = getelementptr inbounds %struct.GPR, %struct.GPR* %2861, i32 0, i32 33
  %2863 = getelementptr inbounds %struct.Reg, %struct.Reg* %2862, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %2863 to i64*
  %2864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2865 = getelementptr inbounds %struct.GPR, %struct.GPR* %2864, i32 0, i32 1
  %2866 = getelementptr inbounds %struct.Reg, %struct.Reg* %2865, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %2866 to i64*
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2868 = getelementptr inbounds %struct.GPR, %struct.GPR* %2867, i32 0, i32 15
  %2869 = getelementptr inbounds %struct.Reg, %struct.Reg* %2868, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %2869 to i64*
  %2870 = load i64, i64* %RBP.i880
  %2871 = sub i64 %2870, 64
  %2872 = load i64, i64* %PC.i878
  %2873 = add i64 %2872, 3
  store i64 %2873, i64* %PC.i878
  %2874 = inttoptr i64 %2871 to i32*
  %2875 = load i32, i32* %2874
  %2876 = zext i32 %2875 to i64
  store i64 %2876, i64* %RAX.i879, align 8
  store %struct.Memory* %loadMem_432b63, %struct.Memory** %MEMORY
  %loadMem_432b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2878 = getelementptr inbounds %struct.GPR, %struct.GPR* %2877, i32 0, i32 33
  %2879 = getelementptr inbounds %struct.Reg, %struct.Reg* %2878, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %2879 to i64*
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2881 = getelementptr inbounds %struct.GPR, %struct.GPR* %2880, i32 0, i32 5
  %2882 = getelementptr inbounds %struct.Reg, %struct.Reg* %2881, i32 0, i32 0
  %RCX.i877 = bitcast %union.anon* %2882 to i64*
  %2883 = load i64, i64* %PC.i876
  %2884 = add i64 %2883, 8
  store i64 %2884, i64* %PC.i876
  %2885 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2885, i64* %RCX.i877, align 8
  store %struct.Memory* %loadMem_432b66, %struct.Memory** %MEMORY
  %loadMem_432b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2887 = getelementptr inbounds %struct.GPR, %struct.GPR* %2886, i32 0, i32 33
  %2888 = getelementptr inbounds %struct.Reg, %struct.Reg* %2887, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %2888 to i64*
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2890 = getelementptr inbounds %struct.GPR, %struct.GPR* %2889, i32 0, i32 1
  %2891 = getelementptr inbounds %struct.Reg, %struct.Reg* %2890, i32 0, i32 0
  %EAX.i874 = bitcast %union.anon* %2891 to i32*
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2893 = getelementptr inbounds %struct.GPR, %struct.GPR* %2892, i32 0, i32 5
  %2894 = getelementptr inbounds %struct.Reg, %struct.Reg* %2893, i32 0, i32 0
  %RCX.i875 = bitcast %union.anon* %2894 to i64*
  %2895 = load i64, i64* %RCX.i875
  %2896 = add i64 %2895, 72456
  %2897 = load i32, i32* %EAX.i874
  %2898 = zext i32 %2897 to i64
  %2899 = load i64, i64* %PC.i873
  %2900 = add i64 %2899, 6
  store i64 %2900, i64* %PC.i873
  %2901 = inttoptr i64 %2896 to i32*
  store i32 %2897, i32* %2901
  store %struct.Memory* %loadMem_432b6e, %struct.Memory** %MEMORY
  %loadMem_432b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 33
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %2904 to i64*
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 5
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %RCX.i872 = bitcast %union.anon* %2907 to i64*
  %2908 = load i64, i64* %PC.i871
  %2909 = add i64 %2908, 8
  store i64 %2909, i64* %PC.i871
  %2910 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %2910, i64* %RCX.i872, align 8
  store %struct.Memory* %loadMem_432b74, %struct.Memory** %MEMORY
  %loadMem_432b7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2912 = getelementptr inbounds %struct.GPR, %struct.GPR* %2911, i32 0, i32 33
  %2913 = getelementptr inbounds %struct.Reg, %struct.Reg* %2912, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %2913 to i64*
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 5
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %RCX.i870 = bitcast %union.anon* %2916 to i64*
  %2917 = load i64, i64* %RCX.i870
  %2918 = add i64 %2917, 1316
  %2919 = load i64, i64* %PC.i869
  %2920 = add i64 %2919, 7
  store i64 %2920, i64* %PC.i869
  %2921 = inttoptr i64 %2918 to i32*
  %2922 = load i32, i32* %2921
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2923, align 1
  %2924 = and i32 %2922, 255
  %2925 = call i32 @llvm.ctpop.i32(i32 %2924)
  %2926 = trunc i32 %2925 to i8
  %2927 = and i8 %2926, 1
  %2928 = xor i8 %2927, 1
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2928, i8* %2929, align 1
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2930, align 1
  %2931 = icmp eq i32 %2922, 0
  %2932 = zext i1 %2931 to i8
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2932, i8* %2933, align 1
  %2934 = lshr i32 %2922, 31
  %2935 = trunc i32 %2934 to i8
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2935, i8* %2936, align 1
  %2937 = lshr i32 %2922, 31
  %2938 = xor i32 %2934, %2937
  %2939 = add i32 %2938, %2937
  %2940 = icmp eq i32 %2939, 2
  %2941 = zext i1 %2940 to i8
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2941, i8* %2942, align 1
  store %struct.Memory* %loadMem_432b7c, %struct.Memory** %MEMORY
  %loadMem_432b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2944 = getelementptr inbounds %struct.GPR, %struct.GPR* %2943, i32 0, i32 33
  %2945 = getelementptr inbounds %struct.Reg, %struct.Reg* %2944, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %2945 to i64*
  %2946 = load i64, i64* %PC.i868
  %2947 = add i64 %2946, 27
  %2948 = load i64, i64* %PC.i868
  %2949 = add i64 %2948, 6
  %2950 = load i64, i64* %PC.i868
  %2951 = add i64 %2950, 6
  store i64 %2951, i64* %PC.i868
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2953 = load i8, i8* %2952, align 1
  %2954 = icmp eq i8 %2953, 0
  %2955 = zext i1 %2954 to i8
  store i8 %2955, i8* %BRANCH_TAKEN, align 1
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2957 = select i1 %2954, i64 %2947, i64 %2949
  store i64 %2957, i64* %2956, align 8
  store %struct.Memory* %loadMem_432b83, %struct.Memory** %MEMORY
  %loadBr_432b83 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432b83 = icmp eq i8 %loadBr_432b83, 1
  br i1 %cmpBr_432b83, label %block_.L_432b9e, label %block_432b89

block_432b89:                                     ; preds = %block_.L_432b63
  %loadMem_432b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2959 = getelementptr inbounds %struct.GPR, %struct.GPR* %2958, i32 0, i32 33
  %2960 = getelementptr inbounds %struct.Reg, %struct.Reg* %2959, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %2960 to i64*
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 1
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %RAX.i867 = bitcast %union.anon* %2963 to i64*
  %2964 = load i64, i64* %PC.i866
  %2965 = add i64 %2964, 8
  store i64 %2965, i64* %PC.i866
  %2966 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %2966, i64* %RAX.i867, align 8
  store %struct.Memory* %loadMem_432b89, %struct.Memory** %MEMORY
  %loadMem_432b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2968 = getelementptr inbounds %struct.GPR, %struct.GPR* %2967, i32 0, i32 33
  %2969 = getelementptr inbounds %struct.Reg, %struct.Reg* %2968, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %2969 to i64*
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 1
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %RAX.i865 = bitcast %union.anon* %2972 to i64*
  %2973 = load i64, i64* %RAX.i865
  %2974 = add i64 %2973, 1320
  %2975 = load i64, i64* %PC.i864
  %2976 = add i64 %2975, 7
  store i64 %2976, i64* %PC.i864
  %2977 = inttoptr i64 %2974 to i32*
  %2978 = load i32, i32* %2977
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2979, align 1
  %2980 = and i32 %2978, 255
  %2981 = call i32 @llvm.ctpop.i32(i32 %2980)
  %2982 = trunc i32 %2981 to i8
  %2983 = and i8 %2982, 1
  %2984 = xor i8 %2983, 1
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2984, i8* %2985, align 1
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2986, align 1
  %2987 = icmp eq i32 %2978, 0
  %2988 = zext i1 %2987 to i8
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2988, i8* %2989, align 1
  %2990 = lshr i32 %2978, 31
  %2991 = trunc i32 %2990 to i8
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2991, i8* %2992, align 1
  %2993 = lshr i32 %2978, 31
  %2994 = xor i32 %2990, %2993
  %2995 = add i32 %2994, %2993
  %2996 = icmp eq i32 %2995, 2
  %2997 = zext i1 %2996 to i8
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2997, i8* %2998, align 1
  store %struct.Memory* %loadMem_432b91, %struct.Memory** %MEMORY
  %loadMem_432b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 33
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %3001 to i64*
  %3002 = load i64, i64* %PC.i863
  %3003 = add i64 %3002, 44
  %3004 = load i64, i64* %PC.i863
  %3005 = add i64 %3004, 6
  %3006 = load i64, i64* %PC.i863
  %3007 = add i64 %3006, 6
  store i64 %3007, i64* %PC.i863
  %3008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3009 = load i8, i8* %3008, align 1
  store i8 %3009, i8* %BRANCH_TAKEN, align 1
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3011 = icmp ne i8 %3009, 0
  %3012 = select i1 %3011, i64 %3003, i64 %3005
  store i64 %3012, i64* %3010, align 8
  store %struct.Memory* %loadMem_432b98, %struct.Memory** %MEMORY
  %loadBr_432b98 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432b98 = icmp eq i8 %loadBr_432b98, 1
  br i1 %cmpBr_432b98, label %block_.L_432bc4, label %block_.L_432b9e

block_.L_432b9e:                                  ; preds = %block_432b89, %block_.L_432b63
  %loadMem_432b9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3014 = getelementptr inbounds %struct.GPR, %struct.GPR* %3013, i32 0, i32 33
  %3015 = getelementptr inbounds %struct.Reg, %struct.Reg* %3014, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %3015 to i64*
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3017 = getelementptr inbounds %struct.GPR, %struct.GPR* %3016, i32 0, i32 1
  %3018 = getelementptr inbounds %struct.Reg, %struct.Reg* %3017, i32 0, i32 0
  %RAX.i862 = bitcast %union.anon* %3018 to i64*
  %3019 = load i64, i64* %PC.i861
  %3020 = add i64 %3019, 8
  store i64 %3020, i64* %PC.i861
  %3021 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3021, i64* %RAX.i862, align 8
  store %struct.Memory* %loadMem_432b9e, %struct.Memory** %MEMORY
  %loadMem_432ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3023 = getelementptr inbounds %struct.GPR, %struct.GPR* %3022, i32 0, i32 33
  %3024 = getelementptr inbounds %struct.Reg, %struct.Reg* %3023, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %3024 to i64*
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3026 = getelementptr inbounds %struct.GPR, %struct.GPR* %3025, i32 0, i32 1
  %3027 = getelementptr inbounds %struct.Reg, %struct.Reg* %3026, i32 0, i32 0
  %RAX.i860 = bitcast %union.anon* %3027 to i64*
  %3028 = load i64, i64* %RAX.i860
  %3029 = add i64 %3028, 1236
  %3030 = load i64, i64* %PC.i859
  %3031 = add i64 %3030, 7
  store i64 %3031, i64* %PC.i859
  %3032 = inttoptr i64 %3029 to i32*
  %3033 = load i32, i32* %3032
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3034, align 1
  %3035 = and i32 %3033, 255
  %3036 = call i32 @llvm.ctpop.i32(i32 %3035)
  %3037 = trunc i32 %3036 to i8
  %3038 = and i8 %3037, 1
  %3039 = xor i8 %3038, 1
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3039, i8* %3040, align 1
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3041, align 1
  %3042 = icmp eq i32 %3033, 0
  %3043 = zext i1 %3042 to i8
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3043, i8* %3044, align 1
  %3045 = lshr i32 %3033, 31
  %3046 = trunc i32 %3045 to i8
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3046, i8* %3047, align 1
  %3048 = lshr i32 %3033, 31
  %3049 = xor i32 %3045, %3048
  %3050 = add i32 %3049, %3048
  %3051 = icmp eq i32 %3050, 2
  %3052 = zext i1 %3051 to i8
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3052, i8* %3053, align 1
  store %struct.Memory* %loadMem_432ba6, %struct.Memory** %MEMORY
  %loadMem_432bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 33
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %3056 to i64*
  %3057 = load i64, i64* %PC.i858
  %3058 = add i64 %3057, 23
  %3059 = load i64, i64* %PC.i858
  %3060 = add i64 %3059, 6
  %3061 = load i64, i64* %PC.i858
  %3062 = add i64 %3061, 6
  store i64 %3062, i64* %PC.i858
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3064 = load i8, i8* %3063, align 1
  store i8 %3064, i8* %BRANCH_TAKEN, align 1
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3066 = icmp ne i8 %3064, 0
  %3067 = select i1 %3066, i64 %3058, i64 %3060
  store i64 %3067, i64* %3065, align 8
  store %struct.Memory* %loadMem_432bad, %struct.Memory** %MEMORY
  %loadBr_432bad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432bad = icmp eq i8 %loadBr_432bad, 1
  br i1 %cmpBr_432bad, label %block_.L_432bc4, label %block_432bb3

block_432bb3:                                     ; preds = %block_.L_432b9e
  %loadMem_432bb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3069 = getelementptr inbounds %struct.GPR, %struct.GPR* %3068, i32 0, i32 33
  %3070 = getelementptr inbounds %struct.Reg, %struct.Reg* %3069, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %3070 to i64*
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3072 = getelementptr inbounds %struct.GPR, %struct.GPR* %3071, i32 0, i32 1
  %3073 = getelementptr inbounds %struct.Reg, %struct.Reg* %3072, i32 0, i32 0
  %RAX.i857 = bitcast %union.anon* %3073 to i64*
  %3074 = load i64, i64* %PC.i856
  %3075 = add i64 %3074, 8
  store i64 %3075, i64* %PC.i856
  %3076 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3076, i64* %RAX.i857, align 8
  store %struct.Memory* %loadMem_432bb3, %struct.Memory** %MEMORY
  %loadMem_432bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 33
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %3079 to i64*
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 1
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %RAX.i855 = bitcast %union.anon* %3082 to i64*
  %3083 = load i64, i64* %RAX.i855
  %3084 = load i64, i64* %PC.i854
  %3085 = add i64 %3084, 3
  store i64 %3085, i64* %PC.i854
  %3086 = inttoptr i64 %3083 to i32*
  %3087 = load i32, i32* %3086
  %3088 = sub i32 %3087, 2
  %3089 = icmp ult i32 %3087, 2
  %3090 = zext i1 %3089 to i8
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3090, i8* %3091, align 1
  %3092 = and i32 %3088, 255
  %3093 = call i32 @llvm.ctpop.i32(i32 %3092)
  %3094 = trunc i32 %3093 to i8
  %3095 = and i8 %3094, 1
  %3096 = xor i8 %3095, 1
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3096, i8* %3097, align 1
  %3098 = xor i32 %3087, 2
  %3099 = xor i32 %3098, %3088
  %3100 = lshr i32 %3099, 4
  %3101 = trunc i32 %3100 to i8
  %3102 = and i8 %3101, 1
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3102, i8* %3103, align 1
  %3104 = icmp eq i32 %3088, 0
  %3105 = zext i1 %3104 to i8
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3105, i8* %3106, align 1
  %3107 = lshr i32 %3088, 31
  %3108 = trunc i32 %3107 to i8
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3108, i8* %3109, align 1
  %3110 = lshr i32 %3087, 31
  %3111 = xor i32 %3107, %3110
  %3112 = add i32 %3111, %3110
  %3113 = icmp eq i32 %3112, 2
  %3114 = zext i1 %3113 to i8
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3114, i8* %3115, align 1
  store %struct.Memory* %loadMem_432bbb, %struct.Memory** %MEMORY
  %loadMem_432bbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3117 = getelementptr inbounds %struct.GPR, %struct.GPR* %3116, i32 0, i32 33
  %3118 = getelementptr inbounds %struct.Reg, %struct.Reg* %3117, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %3118 to i64*
  %3119 = load i64, i64* %PC.i853
  %3120 = add i64 %3119, 174
  %3121 = load i64, i64* %PC.i853
  %3122 = add i64 %3121, 6
  %3123 = load i64, i64* %PC.i853
  %3124 = add i64 %3123, 6
  store i64 %3124, i64* %PC.i853
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3126 = load i8, i8* %3125, align 1
  %3127 = icmp ne i8 %3126, 0
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3129 = load i8, i8* %3128, align 1
  %3130 = icmp ne i8 %3129, 0
  %3131 = xor i1 %3127, %3130
  %3132 = xor i1 %3131, true
  %3133 = zext i1 %3132 to i8
  store i8 %3133, i8* %BRANCH_TAKEN, align 1
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3135 = select i1 %3131, i64 %3122, i64 %3120
  store i64 %3135, i64* %3134, align 8
  store %struct.Memory* %loadMem_432bbe, %struct.Memory** %MEMORY
  %loadBr_432bbe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432bbe = icmp eq i8 %loadBr_432bbe, 1
  br i1 %cmpBr_432bbe, label %block_.L_432c6c, label %block_.L_432bc4

block_.L_432bc4:                                  ; preds = %block_432bb3, %block_.L_432b9e, %block_432b89
  %loadMem_432bc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 33
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 1
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RAX.i852 = bitcast %union.anon* %3141 to i64*
  %3142 = load i64, i64* %PC.i851
  %3143 = add i64 %3142, 8
  store i64 %3143, i64* %PC.i851
  %3144 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3144, i64* %RAX.i852, align 8
  store %struct.Memory* %loadMem_432bc4, %struct.Memory** %MEMORY
  %loadMem_432bcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3146 = getelementptr inbounds %struct.GPR, %struct.GPR* %3145, i32 0, i32 33
  %3147 = getelementptr inbounds %struct.Reg, %struct.Reg* %3146, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %3147 to i64*
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 1
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %RAX.i850 = bitcast %union.anon* %3150 to i64*
  %3151 = load i64, i64* %RAX.i850
  %3152 = add i64 %3151, 1224
  %3153 = load i64, i64* %PC.i849
  %3154 = add i64 %3153, 7
  store i64 %3154, i64* %PC.i849
  %3155 = inttoptr i64 %3152 to i32*
  %3156 = load i32, i32* %3155
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3157, align 1
  %3158 = and i32 %3156, 255
  %3159 = call i32 @llvm.ctpop.i32(i32 %3158)
  %3160 = trunc i32 %3159 to i8
  %3161 = and i8 %3160, 1
  %3162 = xor i8 %3161, 1
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3162, i8* %3163, align 1
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3164, align 1
  %3165 = icmp eq i32 %3156, 0
  %3166 = zext i1 %3165 to i8
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3166, i8* %3167, align 1
  %3168 = lshr i32 %3156, 31
  %3169 = trunc i32 %3168 to i8
  %3170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3169, i8* %3170, align 1
  %3171 = lshr i32 %3156, 31
  %3172 = xor i32 %3168, %3171
  %3173 = add i32 %3172, %3171
  %3174 = icmp eq i32 %3173, 2
  %3175 = zext i1 %3174 to i8
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3175, i8* %3176, align 1
  store %struct.Memory* %loadMem_432bcc, %struct.Memory** %MEMORY
  %loadMem_432bd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3178 = getelementptr inbounds %struct.GPR, %struct.GPR* %3177, i32 0, i32 33
  %3179 = getelementptr inbounds %struct.Reg, %struct.Reg* %3178, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %3179 to i64*
  %3180 = load i64, i64* %PC.i848
  %3181 = add i64 %3180, 77
  %3182 = load i64, i64* %PC.i848
  %3183 = add i64 %3182, 6
  %3184 = load i64, i64* %PC.i848
  %3185 = add i64 %3184, 6
  store i64 %3185, i64* %PC.i848
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3187 = load i8, i8* %3186, align 1
  store i8 %3187, i8* %BRANCH_TAKEN, align 1
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3189 = icmp ne i8 %3187, 0
  %3190 = select i1 %3189, i64 %3181, i64 %3183
  store i64 %3190, i64* %3188, align 8
  store %struct.Memory* %loadMem_432bd3, %struct.Memory** %MEMORY
  %loadBr_432bd3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432bd3 = icmp eq i8 %loadBr_432bd3, 1
  br i1 %cmpBr_432bd3, label %block_.L_432c20, label %block_432bd9

block_432bd9:                                     ; preds = %block_.L_432bc4
  %loadMem_432bd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3192 = getelementptr inbounds %struct.GPR, %struct.GPR* %3191, i32 0, i32 33
  %3193 = getelementptr inbounds %struct.Reg, %struct.Reg* %3192, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %3193 to i64*
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3195 = getelementptr inbounds %struct.GPR, %struct.GPR* %3194, i32 0, i32 1
  %3196 = getelementptr inbounds %struct.Reg, %struct.Reg* %3195, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %3196 to i64*
  %3197 = load i64, i64* %PC.i846
  %3198 = add i64 %3197, 8
  store i64 %3198, i64* %PC.i846
  %3199 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3199, i64* %RAX.i847, align 8
  store %struct.Memory* %loadMem_432bd9, %struct.Memory** %MEMORY
  %loadMem_432be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3201 = getelementptr inbounds %struct.GPR, %struct.GPR* %3200, i32 0, i32 33
  %3202 = getelementptr inbounds %struct.Reg, %struct.Reg* %3201, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %3202 to i64*
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3204 = getelementptr inbounds %struct.GPR, %struct.GPR* %3203, i32 0, i32 1
  %3205 = getelementptr inbounds %struct.Reg, %struct.Reg* %3204, i32 0, i32 0
  %RAX.i845 = bitcast %union.anon* %3205 to i64*
  %3206 = load i64, i64* %RAX.i845
  %3207 = add i64 %3206, 1228
  %3208 = load i64, i64* %PC.i844
  %3209 = add i64 %3208, 7
  store i64 %3209, i64* %PC.i844
  %3210 = inttoptr i64 %3207 to i32*
  %3211 = load i32, i32* %3210
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3212, align 1
  %3213 = and i32 %3211, 255
  %3214 = call i32 @llvm.ctpop.i32(i32 %3213)
  %3215 = trunc i32 %3214 to i8
  %3216 = and i8 %3215, 1
  %3217 = xor i8 %3216, 1
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3217, i8* %3218, align 1
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3219, align 1
  %3220 = icmp eq i32 %3211, 0
  %3221 = zext i1 %3220 to i8
  %3222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3221, i8* %3222, align 1
  %3223 = lshr i32 %3211, 31
  %3224 = trunc i32 %3223 to i8
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3224, i8* %3225, align 1
  %3226 = lshr i32 %3211, 31
  %3227 = xor i32 %3223, %3226
  %3228 = add i32 %3227, %3226
  %3229 = icmp eq i32 %3228, 2
  %3230 = zext i1 %3229 to i8
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3230, i8* %3231, align 1
  store %struct.Memory* %loadMem_432be1, %struct.Memory** %MEMORY
  %loadMem_432be8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3233 = getelementptr inbounds %struct.GPR, %struct.GPR* %3232, i32 0, i32 33
  %3234 = getelementptr inbounds %struct.Reg, %struct.Reg* %3233, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %3234 to i64*
  %3235 = load i64, i64* %PC.i843
  %3236 = add i64 %3235, 56
  %3237 = load i64, i64* %PC.i843
  %3238 = add i64 %3237, 6
  %3239 = load i64, i64* %PC.i843
  %3240 = add i64 %3239, 6
  store i64 %3240, i64* %PC.i843
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3242 = load i8, i8* %3241, align 1
  store i8 %3242, i8* %BRANCH_TAKEN, align 1
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3244 = icmp ne i8 %3242, 0
  %3245 = select i1 %3244, i64 %3236, i64 %3238
  store i64 %3245, i64* %3243, align 8
  store %struct.Memory* %loadMem_432be8, %struct.Memory** %MEMORY
  %loadBr_432be8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432be8 = icmp eq i8 %loadBr_432be8, 1
  br i1 %cmpBr_432be8, label %block_.L_432c20, label %block_432bee

block_432bee:                                     ; preds = %block_432bd9
  %loadMem_432bee = load %struct.Memory*, %struct.Memory** %MEMORY
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 33
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %3248 to i64*
  %3249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3250 = getelementptr inbounds %struct.GPR, %struct.GPR* %3249, i32 0, i32 1
  %3251 = getelementptr inbounds %struct.Reg, %struct.Reg* %3250, i32 0, i32 0
  %RAX.i842 = bitcast %union.anon* %3251 to i64*
  %3252 = load i64, i64* %PC.i841
  %3253 = add i64 %3252, 8
  store i64 %3253, i64* %PC.i841
  %3254 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3254, i64* %RAX.i842, align 8
  store %struct.Memory* %loadMem_432bee, %struct.Memory** %MEMORY
  %loadMem_432bf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3256 = getelementptr inbounds %struct.GPR, %struct.GPR* %3255, i32 0, i32 33
  %3257 = getelementptr inbounds %struct.Reg, %struct.Reg* %3256, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %3257 to i64*
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3259 = getelementptr inbounds %struct.GPR, %struct.GPR* %3258, i32 0, i32 1
  %3260 = getelementptr inbounds %struct.Reg, %struct.Reg* %3259, i32 0, i32 0
  %RAX.i839 = bitcast %union.anon* %3260 to i64*
  %3261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3262 = getelementptr inbounds %struct.GPR, %struct.GPR* %3261, i32 0, i32 5
  %3263 = getelementptr inbounds %struct.Reg, %struct.Reg* %3262, i32 0, i32 0
  %RCX.i840 = bitcast %union.anon* %3263 to i64*
  %3264 = load i64, i64* %RAX.i839
  %3265 = load i64, i64* %PC.i838
  %3266 = add i64 %3265, 2
  store i64 %3266, i64* %PC.i838
  %3267 = inttoptr i64 %3264 to i32*
  %3268 = load i32, i32* %3267
  %3269 = zext i32 %3268 to i64
  store i64 %3269, i64* %RCX.i840, align 8
  store %struct.Memory* %loadMem_432bf6, %struct.Memory** %MEMORY
  %loadMem_432bf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3271 = getelementptr inbounds %struct.GPR, %struct.GPR* %3270, i32 0, i32 33
  %3272 = getelementptr inbounds %struct.Reg, %struct.Reg* %3271, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %3272 to i64*
  %3273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3274 = getelementptr inbounds %struct.GPR, %struct.GPR* %3273, i32 0, i32 5
  %3275 = getelementptr inbounds %struct.Reg, %struct.Reg* %3274, i32 0, i32 0
  %RCX.i837 = bitcast %union.anon* %3275 to i64*
  %3276 = load i64, i64* %RCX.i837
  %3277 = load i64, i64* %PC.i836
  %3278 = add i64 %3277, 7
  store i64 %3278, i64* %PC.i836
  %3279 = trunc i64 %3276 to i32
  %3280 = load i32, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  %3281 = sub i32 %3279, %3280
  %3282 = zext i32 %3281 to i64
  store i64 %3282, i64* %RCX.i837, align 8
  %3283 = icmp ult i32 %3279, %3280
  %3284 = zext i1 %3283 to i8
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3284, i8* %3285, align 1
  %3286 = and i32 %3281, 255
  %3287 = call i32 @llvm.ctpop.i32(i32 %3286)
  %3288 = trunc i32 %3287 to i8
  %3289 = and i8 %3288, 1
  %3290 = xor i8 %3289, 1
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3290, i8* %3291, align 1
  %3292 = xor i32 %3280, %3279
  %3293 = xor i32 %3292, %3281
  %3294 = lshr i32 %3293, 4
  %3295 = trunc i32 %3294 to i8
  %3296 = and i8 %3295, 1
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3296, i8* %3297, align 1
  %3298 = icmp eq i32 %3281, 0
  %3299 = zext i1 %3298 to i8
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3299, i8* %3300, align 1
  %3301 = lshr i32 %3281, 31
  %3302 = trunc i32 %3301 to i8
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3302, i8* %3303, align 1
  %3304 = lshr i32 %3279, 31
  %3305 = lshr i32 %3280, 31
  %3306 = xor i32 %3305, %3304
  %3307 = xor i32 %3301, %3304
  %3308 = add i32 %3307, %3306
  %3309 = icmp eq i32 %3308, 2
  %3310 = zext i1 %3309 to i8
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3310, i8* %3311, align 1
  store %struct.Memory* %loadMem_432bf8, %struct.Memory** %MEMORY
  %loadMem_432bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3313 = getelementptr inbounds %struct.GPR, %struct.GPR* %3312, i32 0, i32 33
  %3314 = getelementptr inbounds %struct.Reg, %struct.Reg* %3313, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %3314 to i64*
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3316 = getelementptr inbounds %struct.GPR, %struct.GPR* %3315, i32 0, i32 1
  %3317 = getelementptr inbounds %struct.Reg, %struct.Reg* %3316, i32 0, i32 0
  %RAX.i835 = bitcast %union.anon* %3317 to i64*
  %3318 = load i64, i64* %PC.i834
  %3319 = add i64 %3318, 8
  store i64 %3319, i64* %PC.i834
  %3320 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3320, i64* %RAX.i835, align 8
  store %struct.Memory* %loadMem_432bff, %struct.Memory** %MEMORY
  %loadMem_432c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3322 = getelementptr inbounds %struct.GPR, %struct.GPR* %3321, i32 0, i32 33
  %3323 = getelementptr inbounds %struct.Reg, %struct.Reg* %3322, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %3323 to i64*
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3325 = getelementptr inbounds %struct.GPR, %struct.GPR* %3324, i32 0, i32 1
  %3326 = getelementptr inbounds %struct.Reg, %struct.Reg* %3325, i32 0, i32 0
  %RAX.i832 = bitcast %union.anon* %3326 to i64*
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3328 = getelementptr inbounds %struct.GPR, %struct.GPR* %3327, i32 0, i32 15
  %3329 = getelementptr inbounds %struct.Reg, %struct.Reg* %3328, i32 0, i32 0
  %RBP.i833 = bitcast %union.anon* %3329 to i64*
  %3330 = load i64, i64* %RBP.i833
  %3331 = sub i64 %3330, 72
  %3332 = load i64, i64* %RAX.i832
  %3333 = load i64, i64* %PC.i831
  %3334 = add i64 %3333, 4
  store i64 %3334, i64* %PC.i831
  %3335 = inttoptr i64 %3331 to i64*
  store i64 %3332, i64* %3335
  store %struct.Memory* %loadMem_432c07, %struct.Memory** %MEMORY
  %loadMem_432c0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3337 = getelementptr inbounds %struct.GPR, %struct.GPR* %3336, i32 0, i32 33
  %3338 = getelementptr inbounds %struct.Reg, %struct.Reg* %3337, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %3338 to i64*
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 5
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %ECX.i829 = bitcast %union.anon* %3341 to i32*
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 1
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %RAX.i830 = bitcast %union.anon* %3344 to i64*
  %3345 = load i32, i32* %ECX.i829
  %3346 = zext i32 %3345 to i64
  %3347 = load i64, i64* %PC.i828
  %3348 = add i64 %3347, 2
  store i64 %3348, i64* %PC.i828
  %3349 = and i64 %3346, 4294967295
  store i64 %3349, i64* %RAX.i830, align 8
  store %struct.Memory* %loadMem_432c0b, %struct.Memory** %MEMORY
  %loadMem_432c0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3351 = getelementptr inbounds %struct.GPR, %struct.GPR* %3350, i32 0, i32 33
  %3352 = getelementptr inbounds %struct.Reg, %struct.Reg* %3351, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %3352 to i64*
  %3353 = load i64, i64* %PC.i827
  %3354 = add i64 %3353, 1
  store i64 %3354, i64* %PC.i827
  %3355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3357 = bitcast %union.anon* %3356 to i32*
  %3358 = load i32, i32* %3357, align 8
  %3359 = sext i32 %3358 to i64
  %3360 = lshr i64 %3359, 32
  store i64 %3360, i64* %3355, align 8
  store %struct.Memory* %loadMem_432c0d, %struct.Memory** %MEMORY
  %loadMem_432c0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3362 = getelementptr inbounds %struct.GPR, %struct.GPR* %3361, i32 0, i32 33
  %3363 = getelementptr inbounds %struct.Reg, %struct.Reg* %3362, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %3363 to i64*
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 9
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %RSI.i825 = bitcast %union.anon* %3366 to i64*
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3368 = getelementptr inbounds %struct.GPR, %struct.GPR* %3367, i32 0, i32 15
  %3369 = getelementptr inbounds %struct.Reg, %struct.Reg* %3368, i32 0, i32 0
  %RBP.i826 = bitcast %union.anon* %3369 to i64*
  %3370 = load i64, i64* %RBP.i826
  %3371 = sub i64 %3370, 72
  %3372 = load i64, i64* %PC.i824
  %3373 = add i64 %3372, 4
  store i64 %3373, i64* %PC.i824
  %3374 = inttoptr i64 %3371 to i64*
  %3375 = load i64, i64* %3374
  store i64 %3375, i64* %RSI.i825, align 8
  store %struct.Memory* %loadMem_432c0e, %struct.Memory** %MEMORY
  %loadMem_432c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3377 = getelementptr inbounds %struct.GPR, %struct.GPR* %3376, i32 0, i32 33
  %3378 = getelementptr inbounds %struct.Reg, %struct.Reg* %3377, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %3378 to i64*
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3380 = getelementptr inbounds %struct.GPR, %struct.GPR* %3379, i32 0, i32 9
  %3381 = getelementptr inbounds %struct.Reg, %struct.Reg* %3380, i32 0, i32 0
  %RSI.i822 = bitcast %union.anon* %3381 to i64*
  %3382 = load i64, i64* %RSI.i822
  %3383 = add i64 %3382, 1224
  %3384 = load i64, i64* %PC.i821
  %3385 = add i64 %3384, 6
  store i64 %3385, i64* %PC.i821
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3387 = bitcast %union.anon* %3386 to i32*
  %3388 = load i32, i32* %3387, align 8
  %3389 = zext i32 %3388 to i64
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3391 = bitcast %union.anon* %3390 to i32*
  %3392 = load i32, i32* %3391, align 8
  %3393 = zext i32 %3392 to i64
  %3394 = inttoptr i64 %3383 to i32*
  %3395 = load i32, i32* %3394
  %3396 = sext i32 %3395 to i64
  %3397 = shl i64 %3393, 32
  %3398 = or i64 %3397, %3389
  %3399 = sdiv i64 %3398, %3396
  %3400 = shl i64 %3399, 32
  %3401 = ashr exact i64 %3400, 32
  %3402 = icmp eq i64 %3399, %3401
  br i1 %3402, label %3407, label %3403

; <label>:3403:                                   ; preds = %block_432bee
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3405 = load i64, i64* %3404, align 8
  %3406 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3405, %struct.Memory* %loadMem_432c12)
  br label %routine_idivl_0x4c8__rsi_.exit

; <label>:3407:                                   ; preds = %block_432bee
  %3408 = srem i64 %3398, %3396
  %3409 = getelementptr inbounds %union.anon, %union.anon* %3386, i64 0, i32 0
  %3410 = and i64 %3399, 4294967295
  store i64 %3410, i64* %3409, align 8
  %3411 = getelementptr inbounds %union.anon, %union.anon* %3390, i64 0, i32 0
  %3412 = and i64 %3408, 4294967295
  store i64 %3412, i64* %3411, align 8
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3413, align 1
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3414, align 1
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3415, align 1
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3416, align 1
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3417, align 1
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3418, align 1
  br label %routine_idivl_0x4c8__rsi_.exit

routine_idivl_0x4c8__rsi_.exit:                   ; preds = %3403, %3407
  %3419 = phi %struct.Memory* [ %3406, %3403 ], [ %loadMem_432c12, %3407 ]
  store %struct.Memory* %3419, %struct.Memory** %MEMORY
  %loadMem_432c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3421 = getelementptr inbounds %struct.GPR, %struct.GPR* %3420, i32 0, i32 33
  %3422 = getelementptr inbounds %struct.Reg, %struct.Reg* %3421, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %3422 to i64*
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3424 = getelementptr inbounds %struct.GPR, %struct.GPR* %3423, i32 0, i32 7
  %3425 = getelementptr inbounds %struct.Reg, %struct.Reg* %3424, i32 0, i32 0
  %EDX.i819 = bitcast %union.anon* %3425 to i32*
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3427 = getelementptr inbounds %struct.GPR, %struct.GPR* %3426, i32 0, i32 15
  %3428 = getelementptr inbounds %struct.Reg, %struct.Reg* %3427, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %3428 to i64*
  %3429 = load i64, i64* %RBP.i820
  %3430 = sub i64 %3429, 76
  %3431 = load i32, i32* %EDX.i819
  %3432 = zext i32 %3431 to i64
  %3433 = load i64, i64* %PC.i818
  %3434 = add i64 %3433, 3
  store i64 %3434, i64* %PC.i818
  %3435 = inttoptr i64 %3430 to i32*
  store i32 %3431, i32* %3435
  store %struct.Memory* %loadMem_432c18, %struct.Memory** %MEMORY
  %loadMem_432c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3437 = getelementptr inbounds %struct.GPR, %struct.GPR* %3436, i32 0, i32 33
  %3438 = getelementptr inbounds %struct.Reg, %struct.Reg* %3437, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %3438 to i64*
  %3439 = load i64, i64* %PC.i817
  %3440 = add i64 %3439, 25
  %3441 = load i64, i64* %PC.i817
  %3442 = add i64 %3441, 5
  store i64 %3442, i64* %PC.i817
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3440, i64* %3443, align 8
  store %struct.Memory* %loadMem_432c1b, %struct.Memory** %MEMORY
  br label %block_.L_432c34

block_.L_432c20:                                  ; preds = %block_432bd9, %block_.L_432bc4
  %loadMem_432c20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3445 = getelementptr inbounds %struct.GPR, %struct.GPR* %3444, i32 0, i32 33
  %3446 = getelementptr inbounds %struct.Reg, %struct.Reg* %3445, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %3446 to i64*
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3448 = getelementptr inbounds %struct.GPR, %struct.GPR* %3447, i32 0, i32 1
  %3449 = getelementptr inbounds %struct.Reg, %struct.Reg* %3448, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %3449 to i64*
  %3450 = load i64, i64* %PC.i815
  %3451 = add i64 %3450, 8
  store i64 %3451, i64* %PC.i815
  %3452 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3452, i64* %RAX.i816, align 8
  store %struct.Memory* %loadMem_432c20, %struct.Memory** %MEMORY
  %loadMem_432c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3454 = getelementptr inbounds %struct.GPR, %struct.GPR* %3453, i32 0, i32 33
  %3455 = getelementptr inbounds %struct.Reg, %struct.Reg* %3454, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3455 to i64*
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3457 = getelementptr inbounds %struct.GPR, %struct.GPR* %3456, i32 0, i32 1
  %3458 = getelementptr inbounds %struct.Reg, %struct.Reg* %3457, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %3458 to i64*
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3460 = getelementptr inbounds %struct.GPR, %struct.GPR* %3459, i32 0, i32 5
  %3461 = getelementptr inbounds %struct.Reg, %struct.Reg* %3460, i32 0, i32 0
  %RCX.i814 = bitcast %union.anon* %3461 to i64*
  %3462 = load i64, i64* %RAX.i813
  %3463 = load i64, i64* %PC.i812
  %3464 = add i64 %3463, 2
  store i64 %3464, i64* %PC.i812
  %3465 = inttoptr i64 %3462 to i32*
  %3466 = load i32, i32* %3465
  %3467 = zext i32 %3466 to i64
  store i64 %3467, i64* %RCX.i814, align 8
  store %struct.Memory* %loadMem_432c28, %struct.Memory** %MEMORY
  %loadMem_432c2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3469 = getelementptr inbounds %struct.GPR, %struct.GPR* %3468, i32 0, i32 33
  %3470 = getelementptr inbounds %struct.Reg, %struct.Reg* %3469, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %3470 to i64*
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3472 = getelementptr inbounds %struct.GPR, %struct.GPR* %3471, i32 0, i32 5
  %3473 = getelementptr inbounds %struct.Reg, %struct.Reg* %3472, i32 0, i32 0
  %RCX.i811 = bitcast %union.anon* %3473 to i64*
  %3474 = load i64, i64* %RCX.i811
  %3475 = load i64, i64* %PC.i810
  %3476 = add i64 %3475, 7
  store i64 %3476, i64* %PC.i810
  %3477 = trunc i64 %3474 to i32
  %3478 = load i32, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  %3479 = sub i32 %3477, %3478
  %3480 = zext i32 %3479 to i64
  store i64 %3480, i64* %RCX.i811, align 8
  %3481 = icmp ult i32 %3477, %3478
  %3482 = zext i1 %3481 to i8
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3482, i8* %3483, align 1
  %3484 = and i32 %3479, 255
  %3485 = call i32 @llvm.ctpop.i32(i32 %3484)
  %3486 = trunc i32 %3485 to i8
  %3487 = and i8 %3486, 1
  %3488 = xor i8 %3487, 1
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3488, i8* %3489, align 1
  %3490 = xor i32 %3478, %3477
  %3491 = xor i32 %3490, %3479
  %3492 = lshr i32 %3491, 4
  %3493 = trunc i32 %3492 to i8
  %3494 = and i8 %3493, 1
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3494, i8* %3495, align 1
  %3496 = icmp eq i32 %3479, 0
  %3497 = zext i1 %3496 to i8
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3497, i8* %3498, align 1
  %3499 = lshr i32 %3479, 31
  %3500 = trunc i32 %3499 to i8
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3500, i8* %3501, align 1
  %3502 = lshr i32 %3477, 31
  %3503 = lshr i32 %3478, 31
  %3504 = xor i32 %3503, %3502
  %3505 = xor i32 %3499, %3502
  %3506 = add i32 %3505, %3504
  %3507 = icmp eq i32 %3506, 2
  %3508 = zext i1 %3507 to i8
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3508, i8* %3509, align 1
  store %struct.Memory* %loadMem_432c2a, %struct.Memory** %MEMORY
  %loadMem_432c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3511 = getelementptr inbounds %struct.GPR, %struct.GPR* %3510, i32 0, i32 33
  %3512 = getelementptr inbounds %struct.Reg, %struct.Reg* %3511, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %3512 to i64*
  %3513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3514 = getelementptr inbounds %struct.GPR, %struct.GPR* %3513, i32 0, i32 5
  %3515 = getelementptr inbounds %struct.Reg, %struct.Reg* %3514, i32 0, i32 0
  %ECX.i808 = bitcast %union.anon* %3515 to i32*
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3517 = getelementptr inbounds %struct.GPR, %struct.GPR* %3516, i32 0, i32 15
  %3518 = getelementptr inbounds %struct.Reg, %struct.Reg* %3517, i32 0, i32 0
  %RBP.i809 = bitcast %union.anon* %3518 to i64*
  %3519 = load i64, i64* %RBP.i809
  %3520 = sub i64 %3519, 76
  %3521 = load i32, i32* %ECX.i808
  %3522 = zext i32 %3521 to i64
  %3523 = load i64, i64* %PC.i807
  %3524 = add i64 %3523, 3
  store i64 %3524, i64* %PC.i807
  %3525 = inttoptr i64 %3520 to i32*
  store i32 %3521, i32* %3525
  store %struct.Memory* %loadMem_432c31, %struct.Memory** %MEMORY
  br label %block_.L_432c34

block_.L_432c34:                                  ; preds = %block_.L_432c20, %routine_idivl_0x4c8__rsi_.exit
  %loadMem_432c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3527 = getelementptr inbounds %struct.GPR, %struct.GPR* %3526, i32 0, i32 33
  %3528 = getelementptr inbounds %struct.Reg, %struct.Reg* %3527, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %3528 to i64*
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3530 = getelementptr inbounds %struct.GPR, %struct.GPR* %3529, i32 0, i32 1
  %3531 = getelementptr inbounds %struct.Reg, %struct.Reg* %3530, i32 0, i32 0
  %RAX.i805 = bitcast %union.anon* %3531 to i64*
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3533 = getelementptr inbounds %struct.GPR, %struct.GPR* %3532, i32 0, i32 15
  %3534 = getelementptr inbounds %struct.Reg, %struct.Reg* %3533, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %3534 to i64*
  %3535 = load i64, i64* %RBP.i806
  %3536 = sub i64 %3535, 76
  %3537 = load i64, i64* %PC.i804
  %3538 = add i64 %3537, 3
  store i64 %3538, i64* %PC.i804
  %3539 = inttoptr i64 %3536 to i32*
  %3540 = load i32, i32* %3539
  %3541 = zext i32 %3540 to i64
  store i64 %3541, i64* %RAX.i805, align 8
  store %struct.Memory* %loadMem_432c34, %struct.Memory** %MEMORY
  %loadMem_432c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3543 = getelementptr inbounds %struct.GPR, %struct.GPR* %3542, i32 0, i32 33
  %3544 = getelementptr inbounds %struct.Reg, %struct.Reg* %3543, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %3544 to i64*
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3546 = getelementptr inbounds %struct.GPR, %struct.GPR* %3545, i32 0, i32 5
  %3547 = getelementptr inbounds %struct.Reg, %struct.Reg* %3546, i32 0, i32 0
  %RCX.i803 = bitcast %union.anon* %3547 to i64*
  %3548 = load i64, i64* %PC.i802
  %3549 = add i64 %3548, 5
  store i64 %3549, i64* %PC.i802
  store i64 1, i64* %RCX.i803, align 8
  store %struct.Memory* %loadMem_432c37, %struct.Memory** %MEMORY
  %loadMem_432c3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3551 = getelementptr inbounds %struct.GPR, %struct.GPR* %3550, i32 0, i32 33
  %3552 = getelementptr inbounds %struct.Reg, %struct.Reg* %3551, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %3552 to i64*
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3554 = getelementptr inbounds %struct.GPR, %struct.GPR* %3553, i32 0, i32 7
  %3555 = getelementptr inbounds %struct.Reg, %struct.Reg* %3554, i32 0, i32 0
  %RDX.i801 = bitcast %union.anon* %3555 to i64*
  %3556 = load i64, i64* %PC.i800
  %3557 = add i64 %3556, 7
  store i64 %3557, i64* %PC.i800
  %3558 = load i32, i32* bitcast (%G_0x722c98_type* @G_0x722c98 to i32*)
  %3559 = zext i32 %3558 to i64
  store i64 %3559, i64* %RDX.i801, align 8
  store %struct.Memory* %loadMem_432c3c, %struct.Memory** %MEMORY
  %loadMem_432c43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 33
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %3562 to i64*
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 7
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %RDX.i799 = bitcast %union.anon* %3565 to i64*
  %3566 = load i64, i64* %RDX.i799
  %3567 = load i64, i64* %PC.i798
  %3568 = add i64 %3567, 3
  store i64 %3568, i64* %PC.i798
  %3569 = trunc i64 %3566 to i32
  %3570 = add i32 4, %3569
  %3571 = zext i32 %3570 to i64
  store i64 %3571, i64* %RDX.i799, align 8
  %3572 = icmp ult i32 %3570, %3569
  %3573 = icmp ult i32 %3570, 4
  %3574 = or i1 %3572, %3573
  %3575 = zext i1 %3574 to i8
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3575, i8* %3576, align 1
  %3577 = and i32 %3570, 255
  %3578 = call i32 @llvm.ctpop.i32(i32 %3577)
  %3579 = trunc i32 %3578 to i8
  %3580 = and i8 %3579, 1
  %3581 = xor i8 %3580, 1
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3581, i8* %3582, align 1
  %3583 = xor i64 4, %3566
  %3584 = trunc i64 %3583 to i32
  %3585 = xor i32 %3584, %3570
  %3586 = lshr i32 %3585, 4
  %3587 = trunc i32 %3586 to i8
  %3588 = and i8 %3587, 1
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3588, i8* %3589, align 1
  %3590 = icmp eq i32 %3570, 0
  %3591 = zext i1 %3590 to i8
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3591, i8* %3592, align 1
  %3593 = lshr i32 %3570, 31
  %3594 = trunc i32 %3593 to i8
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3594, i8* %3595, align 1
  %3596 = lshr i32 %3569, 31
  %3597 = xor i32 %3593, %3596
  %3598 = add i32 %3597, %3593
  %3599 = icmp eq i32 %3598, 2
  %3600 = zext i1 %3599 to i8
  %3601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3600, i8* %3601, align 1
  store %struct.Memory* %loadMem_432c43, %struct.Memory** %MEMORY
  %loadMem_432c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3603 = getelementptr inbounds %struct.GPR, %struct.GPR* %3602, i32 0, i32 33
  %3604 = getelementptr inbounds %struct.Reg, %struct.Reg* %3603, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %3604 to i64*
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 5
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %ECX.i796 = bitcast %union.anon* %3607 to i32*
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3609 = getelementptr inbounds %struct.GPR, %struct.GPR* %3608, i32 0, i32 15
  %3610 = getelementptr inbounds %struct.Reg, %struct.Reg* %3609, i32 0, i32 0
  %RBP.i797 = bitcast %union.anon* %3610 to i64*
  %3611 = load i64, i64* %RBP.i797
  %3612 = sub i64 %3611, 80
  %3613 = load i32, i32* %ECX.i796
  %3614 = zext i32 %3613 to i64
  %3615 = load i64, i64* %PC.i795
  %3616 = add i64 %3615, 3
  store i64 %3616, i64* %PC.i795
  %3617 = inttoptr i64 %3612 to i32*
  store i32 %3613, i32* %3617
  store %struct.Memory* %loadMem_432c46, %struct.Memory** %MEMORY
  %loadMem_432c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3619 = getelementptr inbounds %struct.GPR, %struct.GPR* %3618, i32 0, i32 33
  %3620 = getelementptr inbounds %struct.Reg, %struct.Reg* %3619, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %3620 to i64*
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3622 = getelementptr inbounds %struct.GPR, %struct.GPR* %3621, i32 0, i32 7
  %3623 = getelementptr inbounds %struct.Reg, %struct.Reg* %3622, i32 0, i32 0
  %EDX.i793 = bitcast %union.anon* %3623 to i32*
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3625 = getelementptr inbounds %struct.GPR, %struct.GPR* %3624, i32 0, i32 5
  %3626 = getelementptr inbounds %struct.Reg, %struct.Reg* %3625, i32 0, i32 0
  %RCX.i794 = bitcast %union.anon* %3626 to i64*
  %3627 = load i32, i32* %EDX.i793
  %3628 = zext i32 %3627 to i64
  %3629 = load i64, i64* %PC.i792
  %3630 = add i64 %3629, 2
  store i64 %3630, i64* %PC.i792
  %3631 = and i64 %3628, 4294967295
  store i64 %3631, i64* %RCX.i794, align 8
  store %struct.Memory* %loadMem_432c49, %struct.Memory** %MEMORY
  %loadMem_432c4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 33
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %3634 to i64*
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3636 = getelementptr inbounds %struct.GPR, %struct.GPR* %3635, i32 0, i32 7
  %3637 = getelementptr inbounds %struct.Reg, %struct.Reg* %3636, i32 0, i32 0
  %RDX.i790 = bitcast %union.anon* %3637 to i64*
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3639 = getelementptr inbounds %struct.GPR, %struct.GPR* %3638, i32 0, i32 15
  %3640 = getelementptr inbounds %struct.Reg, %struct.Reg* %3639, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %3640 to i64*
  %3641 = load i64, i64* %RBP.i791
  %3642 = sub i64 %3641, 80
  %3643 = load i64, i64* %PC.i789
  %3644 = add i64 %3643, 3
  store i64 %3644, i64* %PC.i789
  %3645 = inttoptr i64 %3642 to i32*
  %3646 = load i32, i32* %3645
  %3647 = zext i32 %3646 to i64
  store i64 %3647, i64* %RDX.i790, align 8
  store %struct.Memory* %loadMem_432c4b, %struct.Memory** %MEMORY
  %loadMem_432c4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3649 = getelementptr inbounds %struct.GPR, %struct.GPR* %3648, i32 0, i32 33
  %3650 = getelementptr inbounds %struct.Reg, %struct.Reg* %3649, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %3650 to i64*
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3652 = getelementptr inbounds %struct.GPR, %struct.GPR* %3651, i32 0, i32 5
  %3653 = getelementptr inbounds %struct.Reg, %struct.Reg* %3652, i32 0, i32 0
  %3654 = bitcast %union.anon* %3653 to %struct.anon.2*
  %CL.i787 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3654, i32 0, i32 0
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 7
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %RDX.i788 = bitcast %union.anon* %3657 to i64*
  %3658 = load i64, i64* %RDX.i788
  %3659 = load i8, i8* %CL.i787
  %3660 = zext i8 %3659 to i64
  %3661 = load i64, i64* %PC.i786
  %3662 = add i64 %3661, 2
  store i64 %3662, i64* %PC.i786
  %3663 = trunc i64 %3660 to i5
  switch i5 %3663, label %3670 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %3664
  ]

; <label>:3664:                                   ; preds = %block_.L_432c34
  %3665 = trunc i64 %3658 to i32
  %3666 = shl i32 %3665, 1
  %3667 = icmp slt i32 %3665, 0
  %3668 = icmp slt i32 %3666, 0
  %3669 = xor i1 %3667, %3668
  br label %3679

; <label>:3670:                                   ; preds = %block_.L_432c34
  %3671 = and i64 %3660, 31
  %3672 = add i64 %3671, 4294967295
  %3673 = and i64 %3658, 4294967295
  %3674 = and i64 %3672, 4294967295
  %3675 = shl i64 %3673, %3674
  %3676 = trunc i64 %3675 to i32
  %3677 = icmp slt i32 %3676, 0
  %3678 = shl i32 %3676, 1
  br label %3679

; <label>:3679:                                   ; preds = %3670, %3664
  %3680 = phi i1 [ %3667, %3664 ], [ %3677, %3670 ]
  %3681 = phi i1 [ %3669, %3664 ], [ false, %3670 ]
  %3682 = phi i32 [ %3666, %3664 ], [ %3678, %3670 ]
  %3683 = zext i32 %3682 to i64
  store i64 %3683, i64* %RDX.i788, align 8
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3685 = zext i1 %3680 to i8
  store i8 %3685, i8* %3684, align 1
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3687 = and i32 %3682, 254
  %3688 = call i32 @llvm.ctpop.i32(i32 %3687)
  %3689 = trunc i32 %3688 to i8
  %3690 = and i8 %3689, 1
  %3691 = xor i8 %3690, 1
  store i8 %3691, i8* %3686, align 1
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3692, align 1
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3694 = icmp eq i32 %3682, 0
  %3695 = zext i1 %3694 to i8
  store i8 %3695, i8* %3693, align 1
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3697 = lshr i32 %3682, 31
  %3698 = trunc i32 %3697 to i8
  store i8 %3698, i8* %3696, align 1
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3700 = zext i1 %3681 to i8
  store i8 %3700, i8* %3699, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %block_.L_432c34, %3679
  store %struct.Memory* %loadMem_432c4e, %struct.Memory** %MEMORY
  %loadMem_432c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 33
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %3703 to i64*
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 7
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %EDX.i784 = bitcast %union.anon* %3706 to i32*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 15
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %3709 to i64*
  %3710 = load i64, i64* %RBP.i785
  %3711 = sub i64 %3710, 84
  %3712 = load i32, i32* %EDX.i784
  %3713 = zext i32 %3712 to i64
  %3714 = load i64, i64* %PC.i783
  %3715 = add i64 %3714, 3
  store i64 %3715, i64* %PC.i783
  %3716 = inttoptr i64 %3711 to i32*
  store i32 %3712, i32* %3716
  store %struct.Memory* %loadMem_432c50, %struct.Memory** %MEMORY
  %loadMem_432c53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3718 = getelementptr inbounds %struct.GPR, %struct.GPR* %3717, i32 0, i32 33
  %3719 = getelementptr inbounds %struct.Reg, %struct.Reg* %3718, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %3719 to i64*
  %3720 = load i64, i64* %PC.i782
  %3721 = add i64 %3720, 1
  store i64 %3721, i64* %PC.i782
  %3722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3724 = bitcast %union.anon* %3723 to i32*
  %3725 = load i32, i32* %3724, align 8
  %3726 = sext i32 %3725 to i64
  %3727 = lshr i64 %3726, 32
  store i64 %3727, i64* %3722, align 8
  store %struct.Memory* %loadMem_432c53, %struct.Memory** %MEMORY
  %loadMem_432c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3729 = getelementptr inbounds %struct.GPR, %struct.GPR* %3728, i32 0, i32 33
  %3730 = getelementptr inbounds %struct.Reg, %struct.Reg* %3729, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %3730 to i64*
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3732 = getelementptr inbounds %struct.GPR, %struct.GPR* %3731, i32 0, i32 9
  %3733 = getelementptr inbounds %struct.Reg, %struct.Reg* %3732, i32 0, i32 0
  %RSI.i780 = bitcast %union.anon* %3733 to i64*
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 15
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %RBP.i781 = bitcast %union.anon* %3736 to i64*
  %3737 = load i64, i64* %RBP.i781
  %3738 = sub i64 %3737, 84
  %3739 = load i64, i64* %PC.i779
  %3740 = add i64 %3739, 3
  store i64 %3740, i64* %PC.i779
  %3741 = inttoptr i64 %3738 to i32*
  %3742 = load i32, i32* %3741
  %3743 = zext i32 %3742 to i64
  store i64 %3743, i64* %RSI.i780, align 8
  store %struct.Memory* %loadMem_432c54, %struct.Memory** %MEMORY
  %loadMem_432c57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3745 = getelementptr inbounds %struct.GPR, %struct.GPR* %3744, i32 0, i32 33
  %3746 = getelementptr inbounds %struct.Reg, %struct.Reg* %3745, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %3746 to i64*
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3748 = getelementptr inbounds %struct.GPR, %struct.GPR* %3747, i32 0, i32 9
  %3749 = getelementptr inbounds %struct.Reg, %struct.Reg* %3748, i32 0, i32 0
  %ESI.i777 = bitcast %union.anon* %3749 to i32*
  %3750 = load i32, i32* %ESI.i777
  %3751 = zext i32 %3750 to i64
  %3752 = load i64, i64* %PC.i776
  %3753 = add i64 %3752, 2
  store i64 %3753, i64* %PC.i776
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3755 = bitcast %union.anon* %3754 to i32*
  %3756 = load i32, i32* %3755, align 8
  %3757 = zext i32 %3756 to i64
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3759 = bitcast %union.anon* %3758 to i32*
  %3760 = load i32, i32* %3759, align 8
  %3761 = zext i32 %3760 to i64
  %3762 = shl i64 %3751, 32
  %3763 = ashr exact i64 %3762, 32
  %3764 = shl i64 %3761, 32
  %3765 = or i64 %3764, %3757
  %3766 = sdiv i64 %3765, %3763
  %3767 = shl i64 %3766, 32
  %3768 = ashr exact i64 %3767, 32
  %3769 = icmp eq i64 %3766, %3768
  br i1 %3769, label %3774, label %3770

; <label>:3770:                                   ; preds = %routine_shll__cl___edx.exit
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3772 = load i64, i64* %3771, align 8
  %3773 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3772, %struct.Memory* %loadMem_432c57)
  br label %routine_idivl__esi.exit

; <label>:3774:                                   ; preds = %routine_shll__cl___edx.exit
  %3775 = srem i64 %3765, %3763
  %3776 = getelementptr inbounds %union.anon, %union.anon* %3754, i64 0, i32 0
  %3777 = and i64 %3766, 4294967295
  store i64 %3777, i64* %3776, align 8
  %3778 = getelementptr inbounds %union.anon, %union.anon* %3758, i64 0, i32 0
  %3779 = and i64 %3775, 4294967295
  store i64 %3779, i64* %3778, align 8
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3780, align 1
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3781, align 1
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3782, align 1
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3783, align 1
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3784, align 1
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3785, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %3770, %3774
  %3786 = phi %struct.Memory* [ %3773, %3770 ], [ %loadMem_432c57, %3774 ]
  store %struct.Memory* %3786, %struct.Memory** %MEMORY
  %loadMem_432c59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3788 = getelementptr inbounds %struct.GPR, %struct.GPR* %3787, i32 0, i32 33
  %3789 = getelementptr inbounds %struct.Reg, %struct.Reg* %3788, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %3789 to i64*
  %3790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3791 = getelementptr inbounds %struct.GPR, %struct.GPR* %3790, i32 0, i32 11
  %3792 = getelementptr inbounds %struct.Reg, %struct.Reg* %3791, i32 0, i32 0
  %RDI.i775 = bitcast %union.anon* %3792 to i64*
  %3793 = load i64, i64* %PC.i774
  %3794 = add i64 %3793, 8
  store i64 %3794, i64* %PC.i774
  %3795 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3795, i64* %RDI.i775, align 8
  store %struct.Memory* %loadMem_432c59, %struct.Memory** %MEMORY
  %loadMem_432c61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3797 = getelementptr inbounds %struct.GPR, %struct.GPR* %3796, i32 0, i32 33
  %3798 = getelementptr inbounds %struct.Reg, %struct.Reg* %3797, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %3798 to i64*
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 7
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %EDX.i772 = bitcast %union.anon* %3801 to i32*
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 11
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %RDI.i773 = bitcast %union.anon* %3804 to i64*
  %3805 = load i64, i64* %RDI.i773
  %3806 = add i64 %3805, 72464
  %3807 = load i32, i32* %EDX.i772
  %3808 = zext i32 %3807 to i64
  %3809 = load i64, i64* %PC.i771
  %3810 = add i64 %3809, 6
  store i64 %3810, i64* %PC.i771
  %3811 = inttoptr i64 %3806 to i32*
  store i32 %3807, i32* %3811
  store %struct.Memory* %loadMem_432c61, %struct.Memory** %MEMORY
  %loadMem_432c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 33
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %3814 to i64*
  %3815 = load i64, i64* %PC.i770
  %3816 = add i64 %3815, 195
  %3817 = load i64, i64* %PC.i770
  %3818 = add i64 %3817, 5
  store i64 %3818, i64* %PC.i770
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3816, i64* %3819, align 8
  store %struct.Memory* %loadMem_432c67, %struct.Memory** %MEMORY
  br label %block_.L_432d2a

block_.L_432c6c:                                  ; preds = %block_432bb3
  %loadMem_432c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 33
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %3822 to i64*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 1
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %RAX.i769 = bitcast %union.anon* %3825 to i64*
  %3826 = load i64, i64* %PC.i768
  %3827 = add i64 %3826, 8
  store i64 %3827, i64* %PC.i768
  %3828 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3828, i64* %RAX.i769, align 8
  store %struct.Memory* %loadMem_432c6c, %struct.Memory** %MEMORY
  %loadMem_432c74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3830 = getelementptr inbounds %struct.GPR, %struct.GPR* %3829, i32 0, i32 33
  %3831 = getelementptr inbounds %struct.Reg, %struct.Reg* %3830, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %3831 to i64*
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3833 = getelementptr inbounds %struct.GPR, %struct.GPR* %3832, i32 0, i32 1
  %3834 = getelementptr inbounds %struct.Reg, %struct.Reg* %3833, i32 0, i32 0
  %RAX.i766 = bitcast %union.anon* %3834 to i64*
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3836 = getelementptr inbounds %struct.GPR, %struct.GPR* %3835, i32 0, i32 5
  %3837 = getelementptr inbounds %struct.Reg, %struct.Reg* %3836, i32 0, i32 0
  %RCX.i767 = bitcast %union.anon* %3837 to i64*
  %3838 = load i64, i64* %RAX.i766
  %3839 = add i64 %3838, 72464
  %3840 = load i64, i64* %PC.i765
  %3841 = add i64 %3840, 6
  store i64 %3841, i64* %PC.i765
  %3842 = inttoptr i64 %3839 to i32*
  %3843 = load i32, i32* %3842
  %3844 = zext i32 %3843 to i64
  store i64 %3844, i64* %RCX.i767, align 8
  store %struct.Memory* %loadMem_432c74, %struct.Memory** %MEMORY
  %loadMem_432c7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3846 = getelementptr inbounds %struct.GPR, %struct.GPR* %3845, i32 0, i32 33
  %3847 = getelementptr inbounds %struct.Reg, %struct.Reg* %3846, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %3847 to i64*
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 5
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %RCX.i764 = bitcast %union.anon* %3850 to i64*
  %3851 = load i64, i64* %RCX.i764
  %3852 = load i64, i64* %PC.i763
  %3853 = add i64 %3852, 3
  store i64 %3853, i64* %PC.i763
  %3854 = trunc i64 %3851 to i32
  %3855 = add i32 1, %3854
  %3856 = zext i32 %3855 to i64
  store i64 %3856, i64* %RCX.i764, align 8
  %3857 = icmp ult i32 %3855, %3854
  %3858 = icmp ult i32 %3855, 1
  %3859 = or i1 %3857, %3858
  %3860 = zext i1 %3859 to i8
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3860, i8* %3861, align 1
  %3862 = and i32 %3855, 255
  %3863 = call i32 @llvm.ctpop.i32(i32 %3862)
  %3864 = trunc i32 %3863 to i8
  %3865 = and i8 %3864, 1
  %3866 = xor i8 %3865, 1
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3866, i8* %3867, align 1
  %3868 = xor i64 1, %3851
  %3869 = trunc i64 %3868 to i32
  %3870 = xor i32 %3869, %3855
  %3871 = lshr i32 %3870, 4
  %3872 = trunc i32 %3871 to i8
  %3873 = and i8 %3872, 1
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3873, i8* %3874, align 1
  %3875 = icmp eq i32 %3855, 0
  %3876 = zext i1 %3875 to i8
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3876, i8* %3877, align 1
  %3878 = lshr i32 %3855, 31
  %3879 = trunc i32 %3878 to i8
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3879, i8* %3880, align 1
  %3881 = lshr i32 %3854, 31
  %3882 = xor i32 %3878, %3881
  %3883 = add i32 %3882, %3878
  %3884 = icmp eq i32 %3883, 2
  %3885 = zext i1 %3884 to i8
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3885, i8* %3886, align 1
  store %struct.Memory* %loadMem_432c7a, %struct.Memory** %MEMORY
  %loadMem_432c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3888 = getelementptr inbounds %struct.GPR, %struct.GPR* %3887, i32 0, i32 33
  %3889 = getelementptr inbounds %struct.Reg, %struct.Reg* %3888, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %3889 to i64*
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3891 = getelementptr inbounds %struct.GPR, %struct.GPR* %3890, i32 0, i32 5
  %3892 = getelementptr inbounds %struct.Reg, %struct.Reg* %3891, i32 0, i32 0
  %ECX.i761 = bitcast %union.anon* %3892 to i32*
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3894 = getelementptr inbounds %struct.GPR, %struct.GPR* %3893, i32 0, i32 1
  %3895 = getelementptr inbounds %struct.Reg, %struct.Reg* %3894, i32 0, i32 0
  %RAX.i762 = bitcast %union.anon* %3895 to i64*
  %3896 = load i64, i64* %RAX.i762
  %3897 = add i64 %3896, 72464
  %3898 = load i32, i32* %ECX.i761
  %3899 = zext i32 %3898 to i64
  %3900 = load i64, i64* %PC.i760
  %3901 = add i64 %3900, 6
  store i64 %3901, i64* %PC.i760
  %3902 = inttoptr i64 %3897 to i32*
  store i32 %3898, i32* %3902
  store %struct.Memory* %loadMem_432c7d, %struct.Memory** %MEMORY
  %loadMem_432c83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 33
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %3905 to i64*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 1
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %RAX.i759 = bitcast %union.anon* %3908 to i64*
  %3909 = load i64, i64* %PC.i758
  %3910 = add i64 %3909, 8
  store i64 %3910, i64* %PC.i758
  %3911 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3911, i64* %RAX.i759, align 8
  store %struct.Memory* %loadMem_432c83, %struct.Memory** %MEMORY
  %loadMem_432c8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3913 = getelementptr inbounds %struct.GPR, %struct.GPR* %3912, i32 0, i32 33
  %3914 = getelementptr inbounds %struct.Reg, %struct.Reg* %3913, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %3914 to i64*
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 1
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %RAX.i757 = bitcast %union.anon* %3917 to i64*
  %3918 = load i64, i64* %RAX.i757
  %3919 = add i64 %3918, 1224
  %3920 = load i64, i64* %PC.i756
  %3921 = add i64 %3920, 7
  store i64 %3921, i64* %PC.i756
  %3922 = inttoptr i64 %3919 to i32*
  %3923 = load i32, i32* %3922
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3924, align 1
  %3925 = and i32 %3923, 255
  %3926 = call i32 @llvm.ctpop.i32(i32 %3925)
  %3927 = trunc i32 %3926 to i8
  %3928 = and i8 %3927, 1
  %3929 = xor i8 %3928, 1
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3929, i8* %3930, align 1
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3931, align 1
  %3932 = icmp eq i32 %3923, 0
  %3933 = zext i1 %3932 to i8
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3933, i8* %3934, align 1
  %3935 = lshr i32 %3923, 31
  %3936 = trunc i32 %3935 to i8
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3936, i8* %3937, align 1
  %3938 = lshr i32 %3923, 31
  %3939 = xor i32 %3935, %3938
  %3940 = add i32 %3939, %3938
  %3941 = icmp eq i32 %3940, 2
  %3942 = zext i1 %3941 to i8
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3942, i8* %3943, align 1
  store %struct.Memory* %loadMem_432c8b, %struct.Memory** %MEMORY
  %loadMem_432c92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 33
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %3946 to i64*
  %3947 = load i64, i64* %PC.i755
  %3948 = add i64 %3947, 93
  %3949 = load i64, i64* %PC.i755
  %3950 = add i64 %3949, 6
  %3951 = load i64, i64* %PC.i755
  %3952 = add i64 %3951, 6
  store i64 %3952, i64* %PC.i755
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3954 = load i8, i8* %3953, align 1
  store i8 %3954, i8* %BRANCH_TAKEN, align 1
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3956 = icmp ne i8 %3954, 0
  %3957 = select i1 %3956, i64 %3948, i64 %3950
  store i64 %3957, i64* %3955, align 8
  store %struct.Memory* %loadMem_432c92, %struct.Memory** %MEMORY
  %loadBr_432c92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432c92 = icmp eq i8 %loadBr_432c92, 1
  br i1 %cmpBr_432c92, label %block_.L_432cef, label %block_432c98

block_432c98:                                     ; preds = %block_.L_432c6c
  %loadMem_432c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3959 = getelementptr inbounds %struct.GPR, %struct.GPR* %3958, i32 0, i32 33
  %3960 = getelementptr inbounds %struct.Reg, %struct.Reg* %3959, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %3960 to i64*
  %3961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3962 = getelementptr inbounds %struct.GPR, %struct.GPR* %3961, i32 0, i32 1
  %3963 = getelementptr inbounds %struct.Reg, %struct.Reg* %3962, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %3963 to i64*
  %3964 = load i64, i64* %PC.i753
  %3965 = add i64 %3964, 8
  store i64 %3965, i64* %PC.i753
  %3966 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %3966, i64* %RAX.i754, align 8
  store %struct.Memory* %loadMem_432c98, %struct.Memory** %MEMORY
  %loadMem_432ca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3968 = getelementptr inbounds %struct.GPR, %struct.GPR* %3967, i32 0, i32 33
  %3969 = getelementptr inbounds %struct.Reg, %struct.Reg* %3968, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %3969 to i64*
  %3970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3971 = getelementptr inbounds %struct.GPR, %struct.GPR* %3970, i32 0, i32 1
  %3972 = getelementptr inbounds %struct.Reg, %struct.Reg* %3971, i32 0, i32 0
  %RAX.i752 = bitcast %union.anon* %3972 to i64*
  %3973 = load i64, i64* %RAX.i752
  %3974 = add i64 %3973, 1228
  %3975 = load i64, i64* %PC.i751
  %3976 = add i64 %3975, 7
  store i64 %3976, i64* %PC.i751
  %3977 = inttoptr i64 %3974 to i32*
  %3978 = load i32, i32* %3977
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3979, align 1
  %3980 = and i32 %3978, 255
  %3981 = call i32 @llvm.ctpop.i32(i32 %3980)
  %3982 = trunc i32 %3981 to i8
  %3983 = and i8 %3982, 1
  %3984 = xor i8 %3983, 1
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3984, i8* %3985, align 1
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3986, align 1
  %3987 = icmp eq i32 %3978, 0
  %3988 = zext i1 %3987 to i8
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3988, i8* %3989, align 1
  %3990 = lshr i32 %3978, 31
  %3991 = trunc i32 %3990 to i8
  %3992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3991, i8* %3992, align 1
  %3993 = lshr i32 %3978, 31
  %3994 = xor i32 %3990, %3993
  %3995 = add i32 %3994, %3993
  %3996 = icmp eq i32 %3995, 2
  %3997 = zext i1 %3996 to i8
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3997, i8* %3998, align 1
  store %struct.Memory* %loadMem_432ca0, %struct.Memory** %MEMORY
  %loadMem_432ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 33
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %4001 to i64*
  %4002 = load i64, i64* %PC.i750
  %4003 = add i64 %4002, 72
  %4004 = load i64, i64* %PC.i750
  %4005 = add i64 %4004, 6
  %4006 = load i64, i64* %PC.i750
  %4007 = add i64 %4006, 6
  store i64 %4007, i64* %PC.i750
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4009 = load i8, i8* %4008, align 1
  store i8 %4009, i8* %BRANCH_TAKEN, align 1
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4011 = icmp ne i8 %4009, 0
  %4012 = select i1 %4011, i64 %4003, i64 %4005
  store i64 %4012, i64* %4010, align 8
  store %struct.Memory* %loadMem_432ca7, %struct.Memory** %MEMORY
  %loadBr_432ca7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432ca7 = icmp eq i8 %loadBr_432ca7, 1
  br i1 %cmpBr_432ca7, label %block_.L_432cef, label %block_432cad

block_432cad:                                     ; preds = %block_432c98
  %loadMem_432cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 33
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %4015 to i64*
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4017 = getelementptr inbounds %struct.GPR, %struct.GPR* %4016, i32 0, i32 1
  %4018 = getelementptr inbounds %struct.Reg, %struct.Reg* %4017, i32 0, i32 0
  %EAX.i748 = bitcast %union.anon* %4018 to i32*
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4020 = getelementptr inbounds %struct.GPR, %struct.GPR* %4019, i32 0, i32 1
  %4021 = getelementptr inbounds %struct.Reg, %struct.Reg* %4020, i32 0, i32 0
  %RAX.i749 = bitcast %union.anon* %4021 to i64*
  %4022 = load i64, i64* %RAX.i749
  %4023 = load i32, i32* %EAX.i748
  %4024 = zext i32 %4023 to i64
  %4025 = load i64, i64* %PC.i747
  %4026 = add i64 %4025, 2
  store i64 %4026, i64* %PC.i747
  %4027 = xor i64 %4024, %4022
  %4028 = trunc i64 %4027 to i32
  %4029 = and i64 %4027, 4294967295
  store i64 %4029, i64* %RAX.i749, align 8
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4030, align 1
  %4031 = and i32 %4028, 255
  %4032 = call i32 @llvm.ctpop.i32(i32 %4031)
  %4033 = trunc i32 %4032 to i8
  %4034 = and i8 %4033, 1
  %4035 = xor i8 %4034, 1
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4035, i8* %4036, align 1
  %4037 = icmp eq i32 %4028, 0
  %4038 = zext i1 %4037 to i8
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4038, i8* %4039, align 1
  %4040 = lshr i32 %4028, 31
  %4041 = trunc i32 %4040 to i8
  %4042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4041, i8* %4042, align 1
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4043, align 1
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4044, align 1
  store %struct.Memory* %loadMem_432cad, %struct.Memory** %MEMORY
  %loadMem_432caf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4046 = getelementptr inbounds %struct.GPR, %struct.GPR* %4045, i32 0, i32 33
  %4047 = getelementptr inbounds %struct.Reg, %struct.Reg* %4046, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %4047 to i64*
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4049 = getelementptr inbounds %struct.GPR, %struct.GPR* %4048, i32 0, i32 5
  %4050 = getelementptr inbounds %struct.Reg, %struct.Reg* %4049, i32 0, i32 0
  %RCX.i746 = bitcast %union.anon* %4050 to i64*
  %4051 = load i64, i64* %PC.i745
  %4052 = add i64 %4051, 8
  store i64 %4052, i64* %PC.i745
  %4053 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4053, i64* %RCX.i746, align 8
  store %struct.Memory* %loadMem_432caf, %struct.Memory** %MEMORY
  %loadMem_432cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4055 = getelementptr inbounds %struct.GPR, %struct.GPR* %4054, i32 0, i32 33
  %4056 = getelementptr inbounds %struct.Reg, %struct.Reg* %4055, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %4056 to i64*
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 5
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %RCX.i743 = bitcast %union.anon* %4059 to i64*
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 7
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %RDX.i744 = bitcast %union.anon* %4062 to i64*
  %4063 = load i64, i64* %RCX.i743
  %4064 = load i64, i64* %PC.i742
  %4065 = add i64 %4064, 2
  store i64 %4065, i64* %PC.i742
  %4066 = inttoptr i64 %4063 to i32*
  %4067 = load i32, i32* %4066
  %4068 = zext i32 %4067 to i64
  store i64 %4068, i64* %RDX.i744, align 8
  store %struct.Memory* %loadMem_432cb7, %struct.Memory** %MEMORY
  %loadMem_432cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4070 = getelementptr inbounds %struct.GPR, %struct.GPR* %4069, i32 0, i32 33
  %4071 = getelementptr inbounds %struct.Reg, %struct.Reg* %4070, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %4071 to i64*
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4073 = getelementptr inbounds %struct.GPR, %struct.GPR* %4072, i32 0, i32 5
  %4074 = getelementptr inbounds %struct.Reg, %struct.Reg* %4073, i32 0, i32 0
  %RCX.i741 = bitcast %union.anon* %4074 to i64*
  %4075 = load i64, i64* %PC.i740
  %4076 = add i64 %4075, 8
  store i64 %4076, i64* %PC.i740
  %4077 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4077, i64* %RCX.i741, align 8
  store %struct.Memory* %loadMem_432cb9, %struct.Memory** %MEMORY
  %loadMem_432cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4079 = getelementptr inbounds %struct.GPR, %struct.GPR* %4078, i32 0, i32 33
  %4080 = getelementptr inbounds %struct.Reg, %struct.Reg* %4079, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %4080 to i64*
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4082 = getelementptr inbounds %struct.GPR, %struct.GPR* %4081, i32 0, i32 1
  %4083 = getelementptr inbounds %struct.Reg, %struct.Reg* %4082, i32 0, i32 0
  %EAX.i738 = bitcast %union.anon* %4083 to i32*
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4085 = getelementptr inbounds %struct.GPR, %struct.GPR* %4084, i32 0, i32 15
  %4086 = getelementptr inbounds %struct.Reg, %struct.Reg* %4085, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %4086 to i64*
  %4087 = load i64, i64* %RBP.i739
  %4088 = sub i64 %4087, 88
  %4089 = load i32, i32* %EAX.i738
  %4090 = zext i32 %4089 to i64
  %4091 = load i64, i64* %PC.i737
  %4092 = add i64 %4091, 3
  store i64 %4092, i64* %PC.i737
  %4093 = inttoptr i64 %4088 to i32*
  store i32 %4089, i32* %4093
  store %struct.Memory* %loadMem_432cc1, %struct.Memory** %MEMORY
  %loadMem_432cc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4095 = getelementptr inbounds %struct.GPR, %struct.GPR* %4094, i32 0, i32 33
  %4096 = getelementptr inbounds %struct.Reg, %struct.Reg* %4095, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %4096 to i64*
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4098 = getelementptr inbounds %struct.GPR, %struct.GPR* %4097, i32 0, i32 7
  %4099 = getelementptr inbounds %struct.Reg, %struct.Reg* %4098, i32 0, i32 0
  %EDX.i735 = bitcast %union.anon* %4099 to i32*
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4101 = getelementptr inbounds %struct.GPR, %struct.GPR* %4100, i32 0, i32 1
  %4102 = getelementptr inbounds %struct.Reg, %struct.Reg* %4101, i32 0, i32 0
  %RAX.i736 = bitcast %union.anon* %4102 to i64*
  %4103 = load i32, i32* %EDX.i735
  %4104 = zext i32 %4103 to i64
  %4105 = load i64, i64* %PC.i734
  %4106 = add i64 %4105, 2
  store i64 %4106, i64* %PC.i734
  %4107 = and i64 %4104, 4294967295
  store i64 %4107, i64* %RAX.i736, align 8
  store %struct.Memory* %loadMem_432cc4, %struct.Memory** %MEMORY
  %loadMem_432cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4109 = getelementptr inbounds %struct.GPR, %struct.GPR* %4108, i32 0, i32 33
  %4110 = getelementptr inbounds %struct.Reg, %struct.Reg* %4109, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %4110 to i64*
  %4111 = load i64, i64* %PC.i733
  %4112 = add i64 %4111, 1
  store i64 %4112, i64* %PC.i733
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4115 = bitcast %union.anon* %4114 to i32*
  %4116 = load i32, i32* %4115, align 8
  %4117 = sext i32 %4116 to i64
  %4118 = lshr i64 %4117, 32
  store i64 %4118, i64* %4113, align 8
  store %struct.Memory* %loadMem_432cc6, %struct.Memory** %MEMORY
  %loadMem_432cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 33
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %4121 to i64*
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 5
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %RCX.i730 = bitcast %union.anon* %4124 to i64*
  %4125 = load i64, i64* %RCX.i730
  %4126 = add i64 %4125, 1224
  %4127 = load i64, i64* %PC.i729
  %4128 = add i64 %4127, 6
  store i64 %4128, i64* %PC.i729
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4130 = bitcast %union.anon* %4129 to i32*
  %4131 = load i32, i32* %4130, align 8
  %4132 = zext i32 %4131 to i64
  %4133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %4134 = bitcast %union.anon* %4133 to i32*
  %4135 = load i32, i32* %4134, align 8
  %4136 = zext i32 %4135 to i64
  %4137 = inttoptr i64 %4126 to i32*
  %4138 = load i32, i32* %4137
  %4139 = sext i32 %4138 to i64
  %4140 = shl i64 %4136, 32
  %4141 = or i64 %4140, %4132
  %4142 = sdiv i64 %4141, %4139
  %4143 = shl i64 %4142, 32
  %4144 = ashr exact i64 %4143, 32
  %4145 = icmp eq i64 %4142, %4144
  br i1 %4145, label %4150, label %4146

; <label>:4146:                                   ; preds = %block_432cad
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4148 = load i64, i64* %4147, align 8
  %4149 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4148, %struct.Memory* %loadMem_432cc7)
  br label %routine_idivl_0x4c8__rcx_.exit731

; <label>:4150:                                   ; preds = %block_432cad
  %4151 = srem i64 %4141, %4139
  %4152 = getelementptr inbounds %union.anon, %union.anon* %4129, i64 0, i32 0
  %4153 = and i64 %4142, 4294967295
  store i64 %4153, i64* %4152, align 8
  %4154 = getelementptr inbounds %union.anon, %union.anon* %4133, i64 0, i32 0
  %4155 = and i64 %4151, 4294967295
  store i64 %4155, i64* %4154, align 8
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4156, align 1
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %4157, align 1
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4158, align 1
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4159, align 1
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4160, align 1
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4161, align 1
  br label %routine_idivl_0x4c8__rcx_.exit731

routine_idivl_0x4c8__rcx_.exit731:                ; preds = %4146, %4150
  %4162 = phi %struct.Memory* [ %4149, %4146 ], [ %loadMem_432cc7, %4150 ]
  store %struct.Memory* %4162, %struct.Memory** %MEMORY
  %loadMem_432ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 33
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %4165 to i64*
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4167 = getelementptr inbounds %struct.GPR, %struct.GPR* %4166, i32 0, i32 9
  %4168 = getelementptr inbounds %struct.Reg, %struct.Reg* %4167, i32 0, i32 0
  %RSI.i727 = bitcast %union.anon* %4168 to i64*
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4170 = getelementptr inbounds %struct.GPR, %struct.GPR* %4169, i32 0, i32 15
  %4171 = getelementptr inbounds %struct.Reg, %struct.Reg* %4170, i32 0, i32 0
  %RBP.i728 = bitcast %union.anon* %4171 to i64*
  %4172 = load i64, i64* %RBP.i728
  %4173 = sub i64 %4172, 88
  %4174 = load i64, i64* %PC.i726
  %4175 = add i64 %4174, 3
  store i64 %4175, i64* %PC.i726
  %4176 = inttoptr i64 %4173 to i32*
  %4177 = load i32, i32* %4176
  %4178 = zext i32 %4177 to i64
  store i64 %4178, i64* %RSI.i727, align 8
  store %struct.Memory* %loadMem_432ccd, %struct.Memory** %MEMORY
  %loadMem_432cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 33
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %4181 to i64*
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 7
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %EDX.i724 = bitcast %union.anon* %4184 to i32*
  %4185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4186 = getelementptr inbounds %struct.GPR, %struct.GPR* %4185, i32 0, i32 9
  %4187 = getelementptr inbounds %struct.Reg, %struct.Reg* %4186, i32 0, i32 0
  %ESI.i725 = bitcast %union.anon* %4187 to i32*
  %4188 = load i32, i32* %ESI.i725
  %4189 = zext i32 %4188 to i64
  %4190 = load i32, i32* %EDX.i724
  %4191 = zext i32 %4190 to i64
  %4192 = load i64, i64* %PC.i723
  %4193 = add i64 %4192, 2
  store i64 %4193, i64* %PC.i723
  %4194 = sub i32 %4188, %4190
  %4195 = icmp ult i32 %4188, %4190
  %4196 = zext i1 %4195 to i8
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4196, i8* %4197, align 1
  %4198 = and i32 %4194, 255
  %4199 = call i32 @llvm.ctpop.i32(i32 %4198)
  %4200 = trunc i32 %4199 to i8
  %4201 = and i8 %4200, 1
  %4202 = xor i8 %4201, 1
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4202, i8* %4203, align 1
  %4204 = xor i64 %4191, %4189
  %4205 = trunc i64 %4204 to i32
  %4206 = xor i32 %4205, %4194
  %4207 = lshr i32 %4206, 4
  %4208 = trunc i32 %4207 to i8
  %4209 = and i8 %4208, 1
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4209, i8* %4210, align 1
  %4211 = icmp eq i32 %4194, 0
  %4212 = zext i1 %4211 to i8
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4212, i8* %4213, align 1
  %4214 = lshr i32 %4194, 31
  %4215 = trunc i32 %4214 to i8
  %4216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4215, i8* %4216, align 1
  %4217 = lshr i32 %4188, 31
  %4218 = lshr i32 %4190, 31
  %4219 = xor i32 %4218, %4217
  %4220 = xor i32 %4214, %4217
  %4221 = add i32 %4220, %4219
  %4222 = icmp eq i32 %4221, 2
  %4223 = zext i1 %4222 to i8
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4223, i8* %4224, align 1
  store %struct.Memory* %loadMem_432cd0, %struct.Memory** %MEMORY
  %loadMem_432cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4226 = getelementptr inbounds %struct.GPR, %struct.GPR* %4225, i32 0, i32 33
  %4227 = getelementptr inbounds %struct.Reg, %struct.Reg* %4226, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %4227 to i64*
  %4228 = load i64, i64* %PC.i722
  %4229 = add i64 %4228, 24
  %4230 = load i64, i64* %PC.i722
  %4231 = add i64 %4230, 6
  %4232 = load i64, i64* %PC.i722
  %4233 = add i64 %4232, 6
  store i64 %4233, i64* %PC.i722
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4235 = load i8, i8* %4234, align 1
  %4236 = icmp eq i8 %4235, 0
  %4237 = zext i1 %4236 to i8
  store i8 %4237, i8* %BRANCH_TAKEN, align 1
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4239 = select i1 %4236, i64 %4229, i64 %4231
  store i64 %4239, i64* %4238, align 8
  store %struct.Memory* %loadMem_432cd2, %struct.Memory** %MEMORY
  %loadBr_432cd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432cd2 = icmp eq i8 %loadBr_432cd2, 1
  br i1 %cmpBr_432cd2, label %block_.L_432cea, label %block_432cd8

block_432cd8:                                     ; preds = %routine_idivl_0x4c8__rcx_.exit731
  %loadMem_432cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4241 = getelementptr inbounds %struct.GPR, %struct.GPR* %4240, i32 0, i32 33
  %4242 = getelementptr inbounds %struct.Reg, %struct.Reg* %4241, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %4242 to i64*
  %4243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4244 = getelementptr inbounds %struct.GPR, %struct.GPR* %4243, i32 0, i32 1
  %4245 = getelementptr inbounds %struct.Reg, %struct.Reg* %4244, i32 0, i32 0
  %RAX.i721 = bitcast %union.anon* %4245 to i64*
  %4246 = load i64, i64* %PC.i720
  %4247 = add i64 %4246, 8
  store i64 %4247, i64* %PC.i720
  %4248 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4248, i64* %RAX.i721, align 8
  store %struct.Memory* %loadMem_432cd8, %struct.Memory** %MEMORY
  %loadMem_432ce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4250 = getelementptr inbounds %struct.GPR, %struct.GPR* %4249, i32 0, i32 33
  %4251 = getelementptr inbounds %struct.Reg, %struct.Reg* %4250, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %4251 to i64*
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4253 = getelementptr inbounds %struct.GPR, %struct.GPR* %4252, i32 0, i32 1
  %4254 = getelementptr inbounds %struct.Reg, %struct.Reg* %4253, i32 0, i32 0
  %RAX.i719 = bitcast %union.anon* %4254 to i64*
  %4255 = load i64, i64* %RAX.i719
  %4256 = add i64 %4255, 72464
  %4257 = load i64, i64* %PC.i718
  %4258 = add i64 %4257, 10
  store i64 %4258, i64* %PC.i718
  %4259 = inttoptr i64 %4256 to i32*
  store i32 0, i32* %4259
  store %struct.Memory* %loadMem_432ce0, %struct.Memory** %MEMORY
  br label %block_.L_432cea

block_.L_432cea:                                  ; preds = %block_432cd8, %routine_idivl_0x4c8__rcx_.exit731
  %loadMem_432cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4261 = getelementptr inbounds %struct.GPR, %struct.GPR* %4260, i32 0, i32 33
  %4262 = getelementptr inbounds %struct.Reg, %struct.Reg* %4261, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %4262 to i64*
  %4263 = load i64, i64* %PC.i717
  %4264 = add i64 %4263, 5
  %4265 = load i64, i64* %PC.i717
  %4266 = add i64 %4265, 5
  store i64 %4266, i64* %PC.i717
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4264, i64* %4267, align 8
  store %struct.Memory* %loadMem_432cea, %struct.Memory** %MEMORY
  br label %block_.L_432cef

block_.L_432cef:                                  ; preds = %block_.L_432cea, %block_432c98, %block_.L_432c6c
  %loadMem_432cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4269 = getelementptr inbounds %struct.GPR, %struct.GPR* %4268, i32 0, i32 33
  %4270 = getelementptr inbounds %struct.Reg, %struct.Reg* %4269, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %4270 to i64*
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4272 = getelementptr inbounds %struct.GPR, %struct.GPR* %4271, i32 0, i32 1
  %4273 = getelementptr inbounds %struct.Reg, %struct.Reg* %4272, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %4273 to i64*
  %4274 = load i64, i64* %PC.i715
  %4275 = add i64 %4274, 5
  store i64 %4275, i64* %PC.i715
  store i64 1, i64* %RAX.i716, align 8
  store %struct.Memory* %loadMem_432cef, %struct.Memory** %MEMORY
  %loadMem_432cf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4277 = getelementptr inbounds %struct.GPR, %struct.GPR* %4276, i32 0, i32 33
  %4278 = getelementptr inbounds %struct.Reg, %struct.Reg* %4277, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %4278 to i64*
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 5
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %RCX.i714 = bitcast %union.anon* %4281 to i64*
  %4282 = load i64, i64* %PC.i713
  %4283 = add i64 %4282, 7
  store i64 %4283, i64* %PC.i713
  %4284 = load i32, i32* bitcast (%G_0x722c98_type* @G_0x722c98 to i32*)
  %4285 = zext i32 %4284 to i64
  store i64 %4285, i64* %RCX.i714, align 8
  store %struct.Memory* %loadMem_432cf4, %struct.Memory** %MEMORY
  %loadMem_432cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 33
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %4288 to i64*
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 5
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %RCX.i712 = bitcast %union.anon* %4291 to i64*
  %4292 = load i64, i64* %RCX.i712
  %4293 = load i64, i64* %PC.i711
  %4294 = add i64 %4293, 3
  store i64 %4294, i64* %PC.i711
  %4295 = trunc i64 %4292 to i32
  %4296 = add i32 4, %4295
  %4297 = zext i32 %4296 to i64
  store i64 %4297, i64* %RCX.i712, align 8
  %4298 = icmp ult i32 %4296, %4295
  %4299 = icmp ult i32 %4296, 4
  %4300 = or i1 %4298, %4299
  %4301 = zext i1 %4300 to i8
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4301, i8* %4302, align 1
  %4303 = and i32 %4296, 255
  %4304 = call i32 @llvm.ctpop.i32(i32 %4303)
  %4305 = trunc i32 %4304 to i8
  %4306 = and i8 %4305, 1
  %4307 = xor i8 %4306, 1
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4307, i8* %4308, align 1
  %4309 = xor i64 4, %4292
  %4310 = trunc i64 %4309 to i32
  %4311 = xor i32 %4310, %4296
  %4312 = lshr i32 %4311, 4
  %4313 = trunc i32 %4312 to i8
  %4314 = and i8 %4313, 1
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4314, i8* %4315, align 1
  %4316 = icmp eq i32 %4296, 0
  %4317 = zext i1 %4316 to i8
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4317, i8* %4318, align 1
  %4319 = lshr i32 %4296, 31
  %4320 = trunc i32 %4319 to i8
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4320, i8* %4321, align 1
  %4322 = lshr i32 %4295, 31
  %4323 = xor i32 %4319, %4322
  %4324 = add i32 %4323, %4319
  %4325 = icmp eq i32 %4324, 2
  %4326 = zext i1 %4325 to i8
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4326, i8* %4327, align 1
  store %struct.Memory* %loadMem_432cfb, %struct.Memory** %MEMORY
  %loadMem_432cfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4329 = getelementptr inbounds %struct.GPR, %struct.GPR* %4328, i32 0, i32 33
  %4330 = getelementptr inbounds %struct.Reg, %struct.Reg* %4329, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %4330 to i64*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 5
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %4334 = bitcast %union.anon* %4333 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4334, i32 0, i32 0
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4336 = getelementptr inbounds %struct.GPR, %struct.GPR* %4335, i32 0, i32 1
  %4337 = getelementptr inbounds %struct.Reg, %struct.Reg* %4336, i32 0, i32 0
  %RAX.i710 = bitcast %union.anon* %4337 to i64*
  %4338 = load i64, i64* %RAX.i710
  %4339 = load i8, i8* %CL.i
  %4340 = zext i8 %4339 to i64
  %4341 = load i64, i64* %PC.i709
  %4342 = add i64 %4341, 2
  store i64 %4342, i64* %PC.i709
  %4343 = trunc i64 %4340 to i5
  switch i5 %4343, label %4350 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %4344
  ]

; <label>:4344:                                   ; preds = %block_.L_432cef
  %4345 = trunc i64 %4338 to i32
  %4346 = shl i32 %4345, 1
  %4347 = icmp slt i32 %4345, 0
  %4348 = icmp slt i32 %4346, 0
  %4349 = xor i1 %4347, %4348
  br label %4359

; <label>:4350:                                   ; preds = %block_.L_432cef
  %4351 = and i64 %4340, 31
  %4352 = add i64 %4351, 4294967295
  %4353 = and i64 %4338, 4294967295
  %4354 = and i64 %4352, 4294967295
  %4355 = shl i64 %4353, %4354
  %4356 = trunc i64 %4355 to i32
  %4357 = icmp slt i32 %4356, 0
  %4358 = shl i32 %4356, 1
  br label %4359

; <label>:4359:                                   ; preds = %4350, %4344
  %4360 = phi i1 [ %4347, %4344 ], [ %4357, %4350 ]
  %4361 = phi i1 [ %4349, %4344 ], [ false, %4350 ]
  %4362 = phi i32 [ %4346, %4344 ], [ %4358, %4350 ]
  %4363 = zext i32 %4362 to i64
  store i64 %4363, i64* %RAX.i710, align 8
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4365 = zext i1 %4360 to i8
  store i8 %4365, i8* %4364, align 1
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4367 = and i32 %4362, 254
  %4368 = call i32 @llvm.ctpop.i32(i32 %4367)
  %4369 = trunc i32 %4368 to i8
  %4370 = and i8 %4369, 1
  %4371 = xor i8 %4370, 1
  store i8 %4371, i8* %4366, align 1
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4372, align 1
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4374 = icmp eq i32 %4362, 0
  %4375 = zext i1 %4374 to i8
  store i8 %4375, i8* %4373, align 1
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4377 = lshr i32 %4362, 31
  %4378 = trunc i32 %4377 to i8
  store i8 %4378, i8* %4376, align 1
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4380 = zext i1 %4361 to i8
  store i8 %4380, i8* %4379, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %block_.L_432cef, %4359
  store %struct.Memory* %loadMem_432cfe, %struct.Memory** %MEMORY
  %loadMem_432d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4382 = getelementptr inbounds %struct.GPR, %struct.GPR* %4381, i32 0, i32 33
  %4383 = getelementptr inbounds %struct.Reg, %struct.Reg* %4382, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4383 to i64*
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4385 = getelementptr inbounds %struct.GPR, %struct.GPR* %4384, i32 0, i32 7
  %4386 = getelementptr inbounds %struct.Reg, %struct.Reg* %4385, i32 0, i32 0
  %RDX.i708 = bitcast %union.anon* %4386 to i64*
  %4387 = load i64, i64* %PC.i707
  %4388 = add i64 %4387, 8
  store i64 %4388, i64* %PC.i707
  %4389 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4389, i64* %RDX.i708, align 8
  store %struct.Memory* %loadMem_432d00, %struct.Memory** %MEMORY
  %loadMem_432d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 33
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4392 to i64*
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 7
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %RDX.i705 = bitcast %union.anon* %4395 to i64*
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 9
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %RSI.i706 = bitcast %union.anon* %4398 to i64*
  %4399 = load i64, i64* %RDX.i705
  %4400 = add i64 %4399, 72464
  %4401 = load i64, i64* %PC.i704
  %4402 = add i64 %4401, 6
  store i64 %4402, i64* %PC.i704
  %4403 = inttoptr i64 %4400 to i32*
  %4404 = load i32, i32* %4403
  %4405 = zext i32 %4404 to i64
  store i64 %4405, i64* %RSI.i706, align 8
  store %struct.Memory* %loadMem_432d08, %struct.Memory** %MEMORY
  %loadMem_432d0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4407 = getelementptr inbounds %struct.GPR, %struct.GPR* %4406, i32 0, i32 33
  %4408 = getelementptr inbounds %struct.Reg, %struct.Reg* %4407, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %4408 to i64*
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4410 = getelementptr inbounds %struct.GPR, %struct.GPR* %4409, i32 0, i32 1
  %4411 = getelementptr inbounds %struct.Reg, %struct.Reg* %4410, i32 0, i32 0
  %EAX.i702 = bitcast %union.anon* %4411 to i32*
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4413 = getelementptr inbounds %struct.GPR, %struct.GPR* %4412, i32 0, i32 15
  %4414 = getelementptr inbounds %struct.Reg, %struct.Reg* %4413, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %4414 to i64*
  %4415 = load i64, i64* %RBP.i703
  %4416 = sub i64 %4415, 92
  %4417 = load i32, i32* %EAX.i702
  %4418 = zext i32 %4417 to i64
  %4419 = load i64, i64* %PC.i701
  %4420 = add i64 %4419, 3
  store i64 %4420, i64* %PC.i701
  %4421 = inttoptr i64 %4416 to i32*
  store i32 %4417, i32* %4421
  store %struct.Memory* %loadMem_432d0e, %struct.Memory** %MEMORY
  %loadMem_432d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4423 = getelementptr inbounds %struct.GPR, %struct.GPR* %4422, i32 0, i32 33
  %4424 = getelementptr inbounds %struct.Reg, %struct.Reg* %4423, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %4424 to i64*
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 9
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %ESI.i699 = bitcast %union.anon* %4427 to i32*
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4429 = getelementptr inbounds %struct.GPR, %struct.GPR* %4428, i32 0, i32 1
  %4430 = getelementptr inbounds %struct.Reg, %struct.Reg* %4429, i32 0, i32 0
  %RAX.i700 = bitcast %union.anon* %4430 to i64*
  %4431 = load i32, i32* %ESI.i699
  %4432 = zext i32 %4431 to i64
  %4433 = load i64, i64* %PC.i698
  %4434 = add i64 %4433, 2
  store i64 %4434, i64* %PC.i698
  %4435 = and i64 %4432, 4294967295
  store i64 %4435, i64* %RAX.i700, align 8
  store %struct.Memory* %loadMem_432d11, %struct.Memory** %MEMORY
  %loadMem_432d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4437 = getelementptr inbounds %struct.GPR, %struct.GPR* %4436, i32 0, i32 33
  %4438 = getelementptr inbounds %struct.Reg, %struct.Reg* %4437, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %4438 to i64*
  %4439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4440 = getelementptr inbounds %struct.GPR, %struct.GPR* %4439, i32 0, i32 9
  %4441 = getelementptr inbounds %struct.Reg, %struct.Reg* %4440, i32 0, i32 0
  %ESI.i696 = bitcast %union.anon* %4441 to i32*
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4443 = getelementptr inbounds %struct.GPR, %struct.GPR* %4442, i32 0, i32 9
  %4444 = getelementptr inbounds %struct.Reg, %struct.Reg* %4443, i32 0, i32 0
  %RSI.i697 = bitcast %union.anon* %4444 to i64*
  %4445 = load i64, i64* %RSI.i697
  %4446 = load i32, i32* %ESI.i696
  %4447 = zext i32 %4446 to i64
  %4448 = load i64, i64* %PC.i695
  %4449 = add i64 %4448, 2
  store i64 %4449, i64* %PC.i695
  %4450 = xor i64 %4447, %4445
  %4451 = trunc i64 %4450 to i32
  %4452 = and i64 %4450, 4294967295
  store i64 %4452, i64* %RSI.i697, align 8
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4453, align 1
  %4454 = and i32 %4451, 255
  %4455 = call i32 @llvm.ctpop.i32(i32 %4454)
  %4456 = trunc i32 %4455 to i8
  %4457 = and i8 %4456, 1
  %4458 = xor i8 %4457, 1
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4458, i8* %4459, align 1
  %4460 = icmp eq i32 %4451, 0
  %4461 = zext i1 %4460 to i8
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4461, i8* %4462, align 1
  %4463 = lshr i32 %4451, 31
  %4464 = trunc i32 %4463 to i8
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4464, i8* %4465, align 1
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4466, align 1
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4467, align 1
  store %struct.Memory* %loadMem_432d13, %struct.Memory** %MEMORY
  %loadMem_432d15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4469 = getelementptr inbounds %struct.GPR, %struct.GPR* %4468, i32 0, i32 33
  %4470 = getelementptr inbounds %struct.Reg, %struct.Reg* %4469, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %4470 to i64*
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4472 = getelementptr inbounds %struct.GPR, %struct.GPR* %4471, i32 0, i32 7
  %4473 = getelementptr inbounds %struct.Reg, %struct.Reg* %4472, i32 0, i32 0
  %RDX.i693 = bitcast %union.anon* %4473 to i64*
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4475 = getelementptr inbounds %struct.GPR, %struct.GPR* %4474, i32 0, i32 15
  %4476 = getelementptr inbounds %struct.Reg, %struct.Reg* %4475, i32 0, i32 0
  %RBP.i694 = bitcast %union.anon* %4476 to i64*
  %4477 = load i64, i64* %RBP.i694
  %4478 = sub i64 %4477, 104
  %4479 = load i64, i64* %RDX.i693
  %4480 = load i64, i64* %PC.i692
  %4481 = add i64 %4480, 4
  store i64 %4481, i64* %PC.i692
  %4482 = inttoptr i64 %4478 to i64*
  store i64 %4479, i64* %4482
  store %struct.Memory* %loadMem_432d15, %struct.Memory** %MEMORY
  %loadMem_432d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4484 = getelementptr inbounds %struct.GPR, %struct.GPR* %4483, i32 0, i32 33
  %4485 = getelementptr inbounds %struct.Reg, %struct.Reg* %4484, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %4485 to i64*
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4487 = getelementptr inbounds %struct.GPR, %struct.GPR* %4486, i32 0, i32 9
  %4488 = getelementptr inbounds %struct.Reg, %struct.Reg* %4487, i32 0, i32 0
  %ESI.i690 = bitcast %union.anon* %4488 to i32*
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4490 = getelementptr inbounds %struct.GPR, %struct.GPR* %4489, i32 0, i32 7
  %4491 = getelementptr inbounds %struct.Reg, %struct.Reg* %4490, i32 0, i32 0
  %RDX.i691 = bitcast %union.anon* %4491 to i64*
  %4492 = load i32, i32* %ESI.i690
  %4493 = zext i32 %4492 to i64
  %4494 = load i64, i64* %PC.i689
  %4495 = add i64 %4494, 2
  store i64 %4495, i64* %PC.i689
  %4496 = and i64 %4493, 4294967295
  store i64 %4496, i64* %RDX.i691, align 8
  store %struct.Memory* %loadMem_432d19, %struct.Memory** %MEMORY
  %loadMem_432d1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4498 = getelementptr inbounds %struct.GPR, %struct.GPR* %4497, i32 0, i32 33
  %4499 = getelementptr inbounds %struct.Reg, %struct.Reg* %4498, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %4499 to i64*
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4501 = getelementptr inbounds %struct.GPR, %struct.GPR* %4500, i32 0, i32 9
  %4502 = getelementptr inbounds %struct.Reg, %struct.Reg* %4501, i32 0, i32 0
  %RSI.i687 = bitcast %union.anon* %4502 to i64*
  %4503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4504 = getelementptr inbounds %struct.GPR, %struct.GPR* %4503, i32 0, i32 15
  %4505 = getelementptr inbounds %struct.Reg, %struct.Reg* %4504, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %4505 to i64*
  %4506 = load i64, i64* %RBP.i688
  %4507 = sub i64 %4506, 92
  %4508 = load i64, i64* %PC.i686
  %4509 = add i64 %4508, 3
  store i64 %4509, i64* %PC.i686
  %4510 = inttoptr i64 %4507 to i32*
  %4511 = load i32, i32* %4510
  %4512 = zext i32 %4511 to i64
  store i64 %4512, i64* %RSI.i687, align 8
  store %struct.Memory* %loadMem_432d1b, %struct.Memory** %MEMORY
  %loadMem_432d1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4514 = getelementptr inbounds %struct.GPR, %struct.GPR* %4513, i32 0, i32 33
  %4515 = getelementptr inbounds %struct.Reg, %struct.Reg* %4514, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %4515 to i64*
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4517 = getelementptr inbounds %struct.GPR, %struct.GPR* %4516, i32 0, i32 9
  %4518 = getelementptr inbounds %struct.Reg, %struct.Reg* %4517, i32 0, i32 0
  %ESI.i684 = bitcast %union.anon* %4518 to i32*
  %4519 = load i32, i32* %ESI.i684
  %4520 = zext i32 %4519 to i64
  %4521 = load i64, i64* %PC.i683
  %4522 = add i64 %4521, 2
  store i64 %4522, i64* %PC.i683
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4524 = bitcast %union.anon* %4523 to i32*
  %4525 = load i32, i32* %4524, align 8
  %4526 = zext i32 %4525 to i64
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %4528 = bitcast %union.anon* %4527 to i32*
  %4529 = load i32, i32* %4528, align 8
  %4530 = zext i32 %4529 to i64
  %4531 = and i64 %4520, 4294967295
  %4532 = shl i64 %4530, 32
  %4533 = or i64 %4532, %4526
  %4534 = udiv i64 %4533, %4531
  %4535 = and i64 %4534, 4294967295
  %4536 = icmp eq i64 %4534, %4535
  br i1 %4536, label %4541, label %4537

; <label>:4537:                                   ; preds = %routine_shll__cl___eax.exit
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4539 = load i64, i64* %4538, align 8
  %4540 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4539, %struct.Memory* %loadMem_432d1e)
  br label %routine_divl__esi.exit

; <label>:4541:                                   ; preds = %routine_shll__cl___eax.exit
  %4542 = urem i64 %4533, %4531
  %4543 = getelementptr inbounds %union.anon, %union.anon* %4523, i64 0, i32 0
  store i64 %4534, i64* %4543, align 8
  %4544 = getelementptr inbounds %union.anon, %union.anon* %4527, i64 0, i32 0
  store i64 %4542, i64* %4544, align 8
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4545, align 1
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %4546, align 1
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4547, align 1
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4548, align 1
  %4549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4549, align 1
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4550, align 1
  br label %routine_divl__esi.exit

routine_divl__esi.exit:                           ; preds = %4537, %4541
  %4551 = phi %struct.Memory* [ %4540, %4537 ], [ %loadMem_432d1e, %4541 ]
  store %struct.Memory* %4551, %struct.Memory** %MEMORY
  %loadMem_432d20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4553 = getelementptr inbounds %struct.GPR, %struct.GPR* %4552, i32 0, i32 33
  %4554 = getelementptr inbounds %struct.Reg, %struct.Reg* %4553, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %4554 to i64*
  %4555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4556 = getelementptr inbounds %struct.GPR, %struct.GPR* %4555, i32 0, i32 11
  %4557 = getelementptr inbounds %struct.Reg, %struct.Reg* %4556, i32 0, i32 0
  %RDI.i681 = bitcast %union.anon* %4557 to i64*
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4559 = getelementptr inbounds %struct.GPR, %struct.GPR* %4558, i32 0, i32 15
  %4560 = getelementptr inbounds %struct.Reg, %struct.Reg* %4559, i32 0, i32 0
  %RBP.i682 = bitcast %union.anon* %4560 to i64*
  %4561 = load i64, i64* %RBP.i682
  %4562 = sub i64 %4561, 104
  %4563 = load i64, i64* %PC.i680
  %4564 = add i64 %4563, 4
  store i64 %4564, i64* %PC.i680
  %4565 = inttoptr i64 %4562 to i64*
  %4566 = load i64, i64* %4565
  store i64 %4566, i64* %RDI.i681, align 8
  store %struct.Memory* %loadMem_432d20, %struct.Memory** %MEMORY
  %loadMem_432d24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4568 = getelementptr inbounds %struct.GPR, %struct.GPR* %4567, i32 0, i32 33
  %4569 = getelementptr inbounds %struct.Reg, %struct.Reg* %4568, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %4569 to i64*
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4571 = getelementptr inbounds %struct.GPR, %struct.GPR* %4570, i32 0, i32 7
  %4572 = getelementptr inbounds %struct.Reg, %struct.Reg* %4571, i32 0, i32 0
  %EDX.i678 = bitcast %union.anon* %4572 to i32*
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4574 = getelementptr inbounds %struct.GPR, %struct.GPR* %4573, i32 0, i32 11
  %4575 = getelementptr inbounds %struct.Reg, %struct.Reg* %4574, i32 0, i32 0
  %RDI.i679 = bitcast %union.anon* %4575 to i64*
  %4576 = load i64, i64* %RDI.i679
  %4577 = add i64 %4576, 72464
  %4578 = load i32, i32* %EDX.i678
  %4579 = zext i32 %4578 to i64
  %4580 = load i64, i64* %PC.i677
  %4581 = add i64 %4580, 6
  store i64 %4581, i64* %PC.i677
  %4582 = inttoptr i64 %4577 to i32*
  store i32 %4578, i32* %4582
  store %struct.Memory* %loadMem_432d24, %struct.Memory** %MEMORY
  br label %block_.L_432d2a

block_.L_432d2a:                                  ; preds = %routine_divl__esi.exit, %routine_idivl__esi.exit
  %loadMem_432d2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4584 = getelementptr inbounds %struct.GPR, %struct.GPR* %4583, i32 0, i32 33
  %4585 = getelementptr inbounds %struct.Reg, %struct.Reg* %4584, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %4585 to i64*
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4587 = getelementptr inbounds %struct.GPR, %struct.GPR* %4586, i32 0, i32 1
  %4588 = getelementptr inbounds %struct.Reg, %struct.Reg* %4587, i32 0, i32 0
  %RAX.i676 = bitcast %union.anon* %4588 to i64*
  %4589 = load i64, i64* %PC.i675
  %4590 = add i64 %4589, 8
  store i64 %4590, i64* %PC.i675
  %4591 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4591, i64* %RAX.i676, align 8
  store %struct.Memory* %loadMem_432d2a, %struct.Memory** %MEMORY
  %loadMem_432d32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4593 = getelementptr inbounds %struct.GPR, %struct.GPR* %4592, i32 0, i32 33
  %4594 = getelementptr inbounds %struct.Reg, %struct.Reg* %4593, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %4594 to i64*
  %4595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4596 = getelementptr inbounds %struct.GPR, %struct.GPR* %4595, i32 0, i32 1
  %4597 = getelementptr inbounds %struct.Reg, %struct.Reg* %4596, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %4597 to i64*
  %4598 = load i64, i64* %RAX.i674
  %4599 = add i64 %4598, 72436
  %4600 = load i64, i64* %PC.i673
  %4601 = add i64 %4600, 10
  store i64 %4601, i64* %PC.i673
  %4602 = inttoptr i64 %4599 to i32*
  store i32 0, i32* %4602
  store %struct.Memory* %loadMem_432d32, %struct.Memory** %MEMORY
  %loadMem_432d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4604 = getelementptr inbounds %struct.GPR, %struct.GPR* %4603, i32 0, i32 33
  %4605 = getelementptr inbounds %struct.Reg, %struct.Reg* %4604, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %4605 to i64*
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4607 = getelementptr inbounds %struct.GPR, %struct.GPR* %4606, i32 0, i32 1
  %4608 = getelementptr inbounds %struct.Reg, %struct.Reg* %4607, i32 0, i32 0
  %RAX.i672 = bitcast %union.anon* %4608 to i64*
  %4609 = load i64, i64* %PC.i671
  %4610 = add i64 %4609, 8
  store i64 %4610, i64* %PC.i671
  %4611 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4611, i64* %RAX.i672, align 8
  store %struct.Memory* %loadMem_432d3c, %struct.Memory** %MEMORY
  %loadMem_432d44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4613 = getelementptr inbounds %struct.GPR, %struct.GPR* %4612, i32 0, i32 33
  %4614 = getelementptr inbounds %struct.Reg, %struct.Reg* %4613, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %4614 to i64*
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4616 = getelementptr inbounds %struct.GPR, %struct.GPR* %4615, i32 0, i32 1
  %4617 = getelementptr inbounds %struct.Reg, %struct.Reg* %4616, i32 0, i32 0
  %RAX.i670 = bitcast %union.anon* %4617 to i64*
  %4618 = load i64, i64* %RAX.i670
  %4619 = add i64 %4618, 1316
  %4620 = load i64, i64* %PC.i669
  %4621 = add i64 %4620, 7
  store i64 %4621, i64* %PC.i669
  %4622 = inttoptr i64 %4619 to i32*
  %4623 = load i32, i32* %4622
  %4624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4624, align 1
  %4625 = and i32 %4623, 255
  %4626 = call i32 @llvm.ctpop.i32(i32 %4625)
  %4627 = trunc i32 %4626 to i8
  %4628 = and i8 %4627, 1
  %4629 = xor i8 %4628, 1
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4629, i8* %4630, align 1
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4631, align 1
  %4632 = icmp eq i32 %4623, 0
  %4633 = zext i1 %4632 to i8
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4633, i8* %4634, align 1
  %4635 = lshr i32 %4623, 31
  %4636 = trunc i32 %4635 to i8
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4636, i8* %4637, align 1
  %4638 = lshr i32 %4623, 31
  %4639 = xor i32 %4635, %4638
  %4640 = add i32 %4639, %4638
  %4641 = icmp eq i32 %4640, 2
  %4642 = zext i1 %4641 to i8
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4642, i8* %4643, align 1
  store %struct.Memory* %loadMem_432d44, %struct.Memory** %MEMORY
  %loadMem_432d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4645 = getelementptr inbounds %struct.GPR, %struct.GPR* %4644, i32 0, i32 33
  %4646 = getelementptr inbounds %struct.Reg, %struct.Reg* %4645, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %4646 to i64*
  %4647 = load i64, i64* %PC.i668
  %4648 = add i64 %4647, 59
  %4649 = load i64, i64* %PC.i668
  %4650 = add i64 %4649, 6
  %4651 = load i64, i64* %PC.i668
  %4652 = add i64 %4651, 6
  store i64 %4652, i64* %PC.i668
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4654 = load i8, i8* %4653, align 1
  store i8 %4654, i8* %BRANCH_TAKEN, align 1
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4656 = icmp ne i8 %4654, 0
  %4657 = select i1 %4656, i64 %4648, i64 %4650
  store i64 %4657, i64* %4655, align 8
  store %struct.Memory* %loadMem_432d4b, %struct.Memory** %MEMORY
  %loadBr_432d4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432d4b = icmp eq i8 %loadBr_432d4b, 1
  br i1 %cmpBr_432d4b, label %block_.L_432d86, label %block_432d51

block_432d51:                                     ; preds = %block_.L_432d2a
  %loadMem_432d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4659 = getelementptr inbounds %struct.GPR, %struct.GPR* %4658, i32 0, i32 33
  %4660 = getelementptr inbounds %struct.Reg, %struct.Reg* %4659, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %4660 to i64*
  %4661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4662 = getelementptr inbounds %struct.GPR, %struct.GPR* %4661, i32 0, i32 1
  %4663 = getelementptr inbounds %struct.Reg, %struct.Reg* %4662, i32 0, i32 0
  %RAX.i667 = bitcast %union.anon* %4663 to i64*
  %4664 = load i64, i64* %PC.i666
  %4665 = add i64 %4664, 8
  store i64 %4665, i64* %PC.i666
  %4666 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4666, i64* %RAX.i667, align 8
  store %struct.Memory* %loadMem_432d51, %struct.Memory** %MEMORY
  %loadMem_432d59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4668 = getelementptr inbounds %struct.GPR, %struct.GPR* %4667, i32 0, i32 33
  %4669 = getelementptr inbounds %struct.Reg, %struct.Reg* %4668, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4669 to i64*
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4671 = getelementptr inbounds %struct.GPR, %struct.GPR* %4670, i32 0, i32 1
  %4672 = getelementptr inbounds %struct.Reg, %struct.Reg* %4671, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %4672 to i64*
  %4673 = load i64, i64* %RAX.i665
  %4674 = load i64, i64* %PC.i664
  %4675 = add i64 %4674, 3
  store i64 %4675, i64* %PC.i664
  %4676 = inttoptr i64 %4673 to i32*
  %4677 = load i32, i32* %4676
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4678, align 1
  %4679 = and i32 %4677, 255
  %4680 = call i32 @llvm.ctpop.i32(i32 %4679)
  %4681 = trunc i32 %4680 to i8
  %4682 = and i8 %4681, 1
  %4683 = xor i8 %4682, 1
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4683, i8* %4684, align 1
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4685, align 1
  %4686 = icmp eq i32 %4677, 0
  %4687 = zext i1 %4686 to i8
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4687, i8* %4688, align 1
  %4689 = lshr i32 %4677, 31
  %4690 = trunc i32 %4689 to i8
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4690, i8* %4691, align 1
  %4692 = lshr i32 %4677, 31
  %4693 = xor i32 %4689, %4692
  %4694 = add i32 %4693, %4692
  %4695 = icmp eq i32 %4694, 2
  %4696 = zext i1 %4695 to i8
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4696, i8* %4697, align 1
  store %struct.Memory* %loadMem_432d59, %struct.Memory** %MEMORY
  %loadMem_432d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4699 = getelementptr inbounds %struct.GPR, %struct.GPR* %4698, i32 0, i32 33
  %4700 = getelementptr inbounds %struct.Reg, %struct.Reg* %4699, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %4700 to i64*
  %4701 = load i64, i64* %PC.i663
  %4702 = add i64 %4701, 37
  %4703 = load i64, i64* %PC.i663
  %4704 = add i64 %4703, 6
  %4705 = load i64, i64* %PC.i663
  %4706 = add i64 %4705, 6
  store i64 %4706, i64* %PC.i663
  %4707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4708 = load i8, i8* %4707, align 1
  store i8 %4708, i8* %BRANCH_TAKEN, align 1
  %4709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4710 = icmp ne i8 %4708, 0
  %4711 = select i1 %4710, i64 %4702, i64 %4704
  store i64 %4711, i64* %4709, align 8
  store %struct.Memory* %loadMem_432d5c, %struct.Memory** %MEMORY
  %loadBr_432d5c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432d5c = icmp eq i8 %loadBr_432d5c, 1
  br i1 %cmpBr_432d5c, label %block_.L_432d81, label %block_432d62

block_432d62:                                     ; preds = %block_432d51
  %loadMem_432d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4713 = getelementptr inbounds %struct.GPR, %struct.GPR* %4712, i32 0, i32 33
  %4714 = getelementptr inbounds %struct.Reg, %struct.Reg* %4713, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4714 to i64*
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4716 = getelementptr inbounds %struct.GPR, %struct.GPR* %4715, i32 0, i32 1
  %4717 = getelementptr inbounds %struct.Reg, %struct.Reg* %4716, i32 0, i32 0
  %RAX.i662 = bitcast %union.anon* %4717 to i64*
  %4718 = load i64, i64* %PC.i661
  %4719 = add i64 %4718, 8
  store i64 %4719, i64* %PC.i661
  %4720 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4720, i64* %RAX.i662, align 8
  store %struct.Memory* %loadMem_432d62, %struct.Memory** %MEMORY
  %loadMem_432d6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4722 = getelementptr inbounds %struct.GPR, %struct.GPR* %4721, i32 0, i32 33
  %4723 = getelementptr inbounds %struct.Reg, %struct.Reg* %4722, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4723 to i64*
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4725 = getelementptr inbounds %struct.GPR, %struct.GPR* %4724, i32 0, i32 1
  %4726 = getelementptr inbounds %struct.Reg, %struct.Reg* %4725, i32 0, i32 0
  %RAX.i659 = bitcast %union.anon* %4726 to i64*
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4728 = getelementptr inbounds %struct.GPR, %struct.GPR* %4727, i32 0, i32 5
  %4729 = getelementptr inbounds %struct.Reg, %struct.Reg* %4728, i32 0, i32 0
  %RCX.i660 = bitcast %union.anon* %4729 to i64*
  %4730 = load i64, i64* %RAX.i659
  %4731 = add i64 %4730, 1236
  %4732 = load i64, i64* %PC.i658
  %4733 = add i64 %4732, 6
  store i64 %4733, i64* %PC.i658
  %4734 = inttoptr i64 %4731 to i32*
  %4735 = load i32, i32* %4734
  %4736 = zext i32 %4735 to i64
  store i64 %4736, i64* %RCX.i660, align 8
  store %struct.Memory* %loadMem_432d6a, %struct.Memory** %MEMORY
  %loadMem_432d70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4738 = getelementptr inbounds %struct.GPR, %struct.GPR* %4737, i32 0, i32 33
  %4739 = getelementptr inbounds %struct.Reg, %struct.Reg* %4738, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %4739 to i64*
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4741 = getelementptr inbounds %struct.GPR, %struct.GPR* %4740, i32 0, i32 5
  %4742 = getelementptr inbounds %struct.Reg, %struct.Reg* %4741, i32 0, i32 0
  %RCX.i657 = bitcast %union.anon* %4742 to i64*
  %4743 = load i64, i64* %RCX.i657
  %4744 = load i64, i64* %PC.i656
  %4745 = add i64 %4744, 2
  store i64 %4745, i64* %PC.i656
  %4746 = trunc i64 %4743 to i32
  %4747 = shl i32 %4746, 1
  %4748 = icmp slt i32 %4746, 0
  %4749 = icmp slt i32 %4747, 0
  %4750 = xor i1 %4748, %4749
  %4751 = zext i32 %4747 to i64
  store i64 %4751, i64* %RCX.i657, align 8
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4753 = zext i1 %4748 to i8
  store i8 %4753, i8* %4752, align 1
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4755 = and i32 %4747, 254
  %4756 = call i32 @llvm.ctpop.i32(i32 %4755)
  %4757 = trunc i32 %4756 to i8
  %4758 = and i8 %4757, 1
  %4759 = xor i8 %4758, 1
  store i8 %4759, i8* %4754, align 1
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4760, align 1
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4762 = icmp eq i32 %4747, 0
  %4763 = zext i1 %4762 to i8
  store i8 %4763, i8* %4761, align 1
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4765 = lshr i32 %4747, 31
  %4766 = trunc i32 %4765 to i8
  store i8 %4766, i8* %4764, align 1
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4768 = zext i1 %4750 to i8
  store i8 %4768, i8* %4767, align 1
  store %struct.Memory* %loadMem_432d70, %struct.Memory** %MEMORY
  %loadMem_432d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4770 = getelementptr inbounds %struct.GPR, %struct.GPR* %4769, i32 0, i32 33
  %4771 = getelementptr inbounds %struct.Reg, %struct.Reg* %4770, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %4771 to i64*
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4773 = getelementptr inbounds %struct.GPR, %struct.GPR* %4772, i32 0, i32 1
  %4774 = getelementptr inbounds %struct.Reg, %struct.Reg* %4773, i32 0, i32 0
  %RAX.i655 = bitcast %union.anon* %4774 to i64*
  %4775 = load i64, i64* %PC.i654
  %4776 = add i64 %4775, 8
  store i64 %4776, i64* %PC.i654
  %4777 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4777, i64* %RAX.i655, align 8
  store %struct.Memory* %loadMem_432d73, %struct.Memory** %MEMORY
  %loadMem_432d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4779 = getelementptr inbounds %struct.GPR, %struct.GPR* %4778, i32 0, i32 33
  %4780 = getelementptr inbounds %struct.Reg, %struct.Reg* %4779, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %4780 to i64*
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 5
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %ECX.i652 = bitcast %union.anon* %4783 to i32*
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4785 = getelementptr inbounds %struct.GPR, %struct.GPR* %4784, i32 0, i32 1
  %4786 = getelementptr inbounds %struct.Reg, %struct.Reg* %4785, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %4786 to i64*
  %4787 = load i64, i64* %RAX.i653
  %4788 = add i64 %4787, 72436
  %4789 = load i32, i32* %ECX.i652
  %4790 = zext i32 %4789 to i64
  %4791 = load i64, i64* %PC.i651
  %4792 = add i64 %4791, 6
  store i64 %4792, i64* %PC.i651
  %4793 = inttoptr i64 %4788 to i32*
  store i32 %4789, i32* %4793
  store %struct.Memory* %loadMem_432d7b, %struct.Memory** %MEMORY
  br label %block_.L_432d81

block_.L_432d81:                                  ; preds = %block_432d62, %block_432d51
  %loadMem_432d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4795 = getelementptr inbounds %struct.GPR, %struct.GPR* %4794, i32 0, i32 33
  %4796 = getelementptr inbounds %struct.Reg, %struct.Reg* %4795, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %4796 to i64*
  %4797 = load i64, i64* %PC.i650
  %4798 = add i64 %4797, 5
  %4799 = load i64, i64* %PC.i650
  %4800 = add i64 %4799, 5
  store i64 %4800, i64* %PC.i650
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4798, i64* %4801, align 8
  store %struct.Memory* %loadMem_432d81, %struct.Memory** %MEMORY
  br label %block_.L_432d86

block_.L_432d86:                                  ; preds = %block_.L_432d81, %block_.L_432d2a
  %loadMem1_432d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4803 = getelementptr inbounds %struct.GPR, %struct.GPR* %4802, i32 0, i32 33
  %4804 = getelementptr inbounds %struct.Reg, %struct.Reg* %4803, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %4804 to i64*
  %4805 = load i64, i64* %PC.i649
  %4806 = add i64 %4805, 8378
  %4807 = load i64, i64* %PC.i649
  %4808 = add i64 %4807, 5
  %4809 = load i64, i64* %PC.i649
  %4810 = add i64 %4809, 5
  store i64 %4810, i64* %PC.i649
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4812 = load i64, i64* %4811, align 8
  %4813 = add i64 %4812, -8
  %4814 = inttoptr i64 %4813 to i64*
  store i64 %4808, i64* %4814
  store i64 %4813, i64* %4811, align 8
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4806, i64* %4815, align 8
  store %struct.Memory* %loadMem1_432d86, %struct.Memory** %MEMORY
  %loadMem2_432d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_432d86 = load i64, i64* %3
  %call2_432d86 = call %struct.Memory* @sub_434e40.SetImgType(%struct.State* %0, i64 %loadPC_432d86, %struct.Memory* %loadMem2_432d86)
  store %struct.Memory* %call2_432d86, %struct.Memory** %MEMORY
  %loadMem_432d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4817 = getelementptr inbounds %struct.GPR, %struct.GPR* %4816, i32 0, i32 33
  %4818 = getelementptr inbounds %struct.Reg, %struct.Reg* %4817, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %4818 to i64*
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4820 = getelementptr inbounds %struct.GPR, %struct.GPR* %4819, i32 0, i32 1
  %4821 = getelementptr inbounds %struct.Reg, %struct.Reg* %4820, i32 0, i32 0
  %RAX.i648 = bitcast %union.anon* %4821 to i64*
  %4822 = load i64, i64* %PC.i647
  %4823 = add i64 %4822, 8
  store i64 %4823, i64* %PC.i647
  %4824 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4824, i64* %RAX.i648, align 8
  store %struct.Memory* %loadMem_432d8b, %struct.Memory** %MEMORY
  %loadMem_432d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4826 = getelementptr inbounds %struct.GPR, %struct.GPR* %4825, i32 0, i32 33
  %4827 = getelementptr inbounds %struct.Reg, %struct.Reg* %4826, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %4827 to i64*
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 1
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %4830 to i64*
  %4831 = load i64, i64* %RAX.i646
  %4832 = add i64 %4831, 1236
  %4833 = load i64, i64* %PC.i645
  %4834 = add i64 %4833, 7
  store i64 %4834, i64* %PC.i645
  %4835 = inttoptr i64 %4832 to i32*
  %4836 = load i32, i32* %4835
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4837, align 1
  %4838 = and i32 %4836, 255
  %4839 = call i32 @llvm.ctpop.i32(i32 %4838)
  %4840 = trunc i32 %4839 to i8
  %4841 = and i8 %4840, 1
  %4842 = xor i8 %4841, 1
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4842, i8* %4843, align 1
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4844, align 1
  %4845 = icmp eq i32 %4836, 0
  %4846 = zext i1 %4845 to i8
  %4847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4846, i8* %4847, align 1
  %4848 = lshr i32 %4836, 31
  %4849 = trunc i32 %4848 to i8
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4849, i8* %4850, align 1
  %4851 = lshr i32 %4836, 31
  %4852 = xor i32 %4848, %4851
  %4853 = add i32 %4852, %4851
  %4854 = icmp eq i32 %4853, 2
  %4855 = zext i1 %4854 to i8
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4855, i8* %4856, align 1
  store %struct.Memory* %loadMem_432d93, %struct.Memory** %MEMORY
  %loadMem_432d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4858 = getelementptr inbounds %struct.GPR, %struct.GPR* %4857, i32 0, i32 33
  %4859 = getelementptr inbounds %struct.Reg, %struct.Reg* %4858, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %4859 to i64*
  %4860 = load i64, i64* %PC.i644
  %4861 = add i64 %4860, 315
  %4862 = load i64, i64* %PC.i644
  %4863 = add i64 %4862, 6
  %4864 = load i64, i64* %PC.i644
  %4865 = add i64 %4864, 6
  store i64 %4865, i64* %PC.i644
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4867 = load i8, i8* %4866, align 1
  store i8 %4867, i8* %BRANCH_TAKEN, align 1
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4869 = icmp ne i8 %4867, 0
  %4870 = select i1 %4869, i64 %4861, i64 %4863
  store i64 %4870, i64* %4868, align 8
  store %struct.Memory* %loadMem_432d9a, %struct.Memory** %MEMORY
  %loadBr_432d9a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432d9a = icmp eq i8 %loadBr_432d9a, 1
  br i1 %cmpBr_432d9a, label %block_.L_432ed5, label %block_432da0

block_432da0:                                     ; preds = %block_.L_432d86
  %loadMem_432da0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 33
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %4873 to i64*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4875 = getelementptr inbounds %struct.GPR, %struct.GPR* %4874, i32 0, i32 1
  %4876 = getelementptr inbounds %struct.Reg, %struct.Reg* %4875, i32 0, i32 0
  %RAX.i643 = bitcast %union.anon* %4876 to i64*
  %4877 = load i64, i64* %PC.i642
  %4878 = add i64 %4877, 8
  store i64 %4878, i64* %PC.i642
  %4879 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4879, i64* %RAX.i643, align 8
  store %struct.Memory* %loadMem_432da0, %struct.Memory** %MEMORY
  %loadMem_432da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4881 = getelementptr inbounds %struct.GPR, %struct.GPR* %4880, i32 0, i32 33
  %4882 = getelementptr inbounds %struct.Reg, %struct.Reg* %4881, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %4882 to i64*
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4884 = getelementptr inbounds %struct.GPR, %struct.GPR* %4883, i32 0, i32 1
  %4885 = getelementptr inbounds %struct.Reg, %struct.Reg* %4884, i32 0, i32 0
  %RAX.i641 = bitcast %union.anon* %4885 to i64*
  %4886 = load i64, i64* %RAX.i641
  %4887 = add i64 %4886, 2440
  %4888 = load i64, i64* %PC.i640
  %4889 = add i64 %4888, 7
  store i64 %4889, i64* %PC.i640
  %4890 = inttoptr i64 %4887 to i32*
  %4891 = load i32, i32* %4890
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4892, align 1
  %4893 = and i32 %4891, 255
  %4894 = call i32 @llvm.ctpop.i32(i32 %4893)
  %4895 = trunc i32 %4894 to i8
  %4896 = and i8 %4895, 1
  %4897 = xor i8 %4896, 1
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4897, i8* %4898, align 1
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4899, align 1
  %4900 = icmp eq i32 %4891, 0
  %4901 = zext i1 %4900 to i8
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4901, i8* %4902, align 1
  %4903 = lshr i32 %4891, 31
  %4904 = trunc i32 %4903 to i8
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4904, i8* %4905, align 1
  %4906 = lshr i32 %4891, 31
  %4907 = xor i32 %4903, %4906
  %4908 = add i32 %4907, %4906
  %4909 = icmp eq i32 %4908, 2
  %4910 = zext i1 %4909 to i8
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4910, i8* %4911, align 1
  store %struct.Memory* %loadMem_432da8, %struct.Memory** %MEMORY
  %loadMem_432daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4913 = getelementptr inbounds %struct.GPR, %struct.GPR* %4912, i32 0, i32 33
  %4914 = getelementptr inbounds %struct.Reg, %struct.Reg* %4913, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %4914 to i64*
  %4915 = load i64, i64* %PC.i639
  %4916 = add i64 %4915, 294
  %4917 = load i64, i64* %PC.i639
  %4918 = add i64 %4917, 6
  %4919 = load i64, i64* %PC.i639
  %4920 = add i64 %4919, 6
  store i64 %4920, i64* %PC.i639
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4922 = load i8, i8* %4921, align 1
  store i8 %4922, i8* %BRANCH_TAKEN, align 1
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4924 = icmp ne i8 %4922, 0
  %4925 = select i1 %4924, i64 %4916, i64 %4918
  store i64 %4925, i64* %4923, align 8
  store %struct.Memory* %loadMem_432daf, %struct.Memory** %MEMORY
  %loadBr_432daf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432daf = icmp eq i8 %loadBr_432daf, 1
  br i1 %cmpBr_432daf, label %block_.L_432ed5, label %block_432db5

block_432db5:                                     ; preds = %block_432da0
  %loadMem_432db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4927 = getelementptr inbounds %struct.GPR, %struct.GPR* %4926, i32 0, i32 33
  %4928 = getelementptr inbounds %struct.Reg, %struct.Reg* %4927, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %4928 to i64*
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4930 = getelementptr inbounds %struct.GPR, %struct.GPR* %4929, i32 0, i32 1
  %4931 = getelementptr inbounds %struct.Reg, %struct.Reg* %4930, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %4931 to i64*
  %4932 = load i64, i64* %PC.i637
  %4933 = add i64 %4932, 8
  store i64 %4933, i64* %PC.i637
  %4934 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4934, i64* %RAX.i638, align 8
  store %struct.Memory* %loadMem_432db5, %struct.Memory** %MEMORY
  %loadMem_432dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4936 = getelementptr inbounds %struct.GPR, %struct.GPR* %4935, i32 0, i32 33
  %4937 = getelementptr inbounds %struct.Reg, %struct.Reg* %4936, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %4937 to i64*
  %4938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4939 = getelementptr inbounds %struct.GPR, %struct.GPR* %4938, i32 0, i32 1
  %4940 = getelementptr inbounds %struct.Reg, %struct.Reg* %4939, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %4940 to i64*
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4942 = getelementptr inbounds %struct.GPR, %struct.GPR* %4941, i32 0, i32 5
  %4943 = getelementptr inbounds %struct.Reg, %struct.Reg* %4942, i32 0, i32 0
  %RCX.i636 = bitcast %union.anon* %4943 to i64*
  %4944 = load i64, i64* %RAX.i635
  %4945 = load i64, i64* %PC.i634
  %4946 = add i64 %4945, 2
  store i64 %4946, i64* %PC.i634
  %4947 = inttoptr i64 %4944 to i32*
  %4948 = load i32, i32* %4947
  %4949 = zext i32 %4948 to i64
  store i64 %4949, i64* %RCX.i636, align 8
  store %struct.Memory* %loadMem_432dbd, %struct.Memory** %MEMORY
  %loadMem_432dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4951 = getelementptr inbounds %struct.GPR, %struct.GPR* %4950, i32 0, i32 33
  %4952 = getelementptr inbounds %struct.Reg, %struct.Reg* %4951, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %4952 to i64*
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4954 = getelementptr inbounds %struct.GPR, %struct.GPR* %4953, i32 0, i32 5
  %4955 = getelementptr inbounds %struct.Reg, %struct.Reg* %4954, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %4955 to i64*
  %4956 = load i64, i64* %RCX.i633
  %4957 = load i64, i64* %PC.i632
  %4958 = add i64 %4957, 7
  store i64 %4958, i64* %PC.i632
  %4959 = trunc i64 %4956 to i32
  %4960 = load i32, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  %4961 = sub i32 %4959, %4960
  %4962 = zext i32 %4961 to i64
  store i64 %4962, i64* %RCX.i633, align 8
  %4963 = icmp ult i32 %4959, %4960
  %4964 = zext i1 %4963 to i8
  %4965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4964, i8* %4965, align 1
  %4966 = and i32 %4961, 255
  %4967 = call i32 @llvm.ctpop.i32(i32 %4966)
  %4968 = trunc i32 %4967 to i8
  %4969 = and i8 %4968, 1
  %4970 = xor i8 %4969, 1
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4970, i8* %4971, align 1
  %4972 = xor i32 %4960, %4959
  %4973 = xor i32 %4972, %4961
  %4974 = lshr i32 %4973, 4
  %4975 = trunc i32 %4974 to i8
  %4976 = and i8 %4975, 1
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4976, i8* %4977, align 1
  %4978 = icmp eq i32 %4961, 0
  %4979 = zext i1 %4978 to i8
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4979, i8* %4980, align 1
  %4981 = lshr i32 %4961, 31
  %4982 = trunc i32 %4981 to i8
  %4983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4982, i8* %4983, align 1
  %4984 = lshr i32 %4959, 31
  %4985 = lshr i32 %4960, 31
  %4986 = xor i32 %4985, %4984
  %4987 = xor i32 %4981, %4984
  %4988 = add i32 %4987, %4986
  %4989 = icmp eq i32 %4988, 2
  %4990 = zext i1 %4989 to i8
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4990, i8* %4991, align 1
  store %struct.Memory* %loadMem_432dbf, %struct.Memory** %MEMORY
  %loadMem_432dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4993 = getelementptr inbounds %struct.GPR, %struct.GPR* %4992, i32 0, i32 33
  %4994 = getelementptr inbounds %struct.Reg, %struct.Reg* %4993, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %4994 to i64*
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4996 = getelementptr inbounds %struct.GPR, %struct.GPR* %4995, i32 0, i32 5
  %4997 = getelementptr inbounds %struct.Reg, %struct.Reg* %4996, i32 0, i32 0
  %RCX.i631 = bitcast %union.anon* %4997 to i64*
  %4998 = load i64, i64* %RCX.i631
  %4999 = load i64, i64* %PC.i630
  %5000 = add i64 %4999, 3
  store i64 %5000, i64* %PC.i630
  %5001 = trunc i64 %4998 to i32
  %5002 = add i32 1, %5001
  %5003 = zext i32 %5002 to i64
  store i64 %5003, i64* %RCX.i631, align 8
  %5004 = icmp ult i32 %5002, %5001
  %5005 = icmp ult i32 %5002, 1
  %5006 = or i1 %5004, %5005
  %5007 = zext i1 %5006 to i8
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5007, i8* %5008, align 1
  %5009 = and i32 %5002, 255
  %5010 = call i32 @llvm.ctpop.i32(i32 %5009)
  %5011 = trunc i32 %5010 to i8
  %5012 = and i8 %5011, 1
  %5013 = xor i8 %5012, 1
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5013, i8* %5014, align 1
  %5015 = xor i64 1, %4998
  %5016 = trunc i64 %5015 to i32
  %5017 = xor i32 %5016, %5002
  %5018 = lshr i32 %5017, 4
  %5019 = trunc i32 %5018 to i8
  %5020 = and i8 %5019, 1
  %5021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5020, i8* %5021, align 1
  %5022 = icmp eq i32 %5002, 0
  %5023 = zext i1 %5022 to i8
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5023, i8* %5024, align 1
  %5025 = lshr i32 %5002, 31
  %5026 = trunc i32 %5025 to i8
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5026, i8* %5027, align 1
  %5028 = lshr i32 %5001, 31
  %5029 = xor i32 %5025, %5028
  %5030 = add i32 %5029, %5025
  %5031 = icmp eq i32 %5030, 2
  %5032 = zext i1 %5031 to i8
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5032, i8* %5033, align 1
  store %struct.Memory* %loadMem_432dc6, %struct.Memory** %MEMORY
  %loadMem_432dc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5035 = getelementptr inbounds %struct.GPR, %struct.GPR* %5034, i32 0, i32 33
  %5036 = getelementptr inbounds %struct.Reg, %struct.Reg* %5035, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %5036 to i64*
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5038 = getelementptr inbounds %struct.GPR, %struct.GPR* %5037, i32 0, i32 1
  %5039 = getelementptr inbounds %struct.Reg, %struct.Reg* %5038, i32 0, i32 0
  %RAX.i629 = bitcast %union.anon* %5039 to i64*
  %5040 = load i64, i64* %PC.i628
  %5041 = add i64 %5040, 8
  store i64 %5041, i64* %PC.i628
  %5042 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %5042, i64* %RAX.i629, align 8
  store %struct.Memory* %loadMem_432dc9, %struct.Memory** %MEMORY
  %loadMem_432dd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 33
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %5045 to i64*
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5047 = getelementptr inbounds %struct.GPR, %struct.GPR* %5046, i32 0, i32 5
  %5048 = getelementptr inbounds %struct.Reg, %struct.Reg* %5047, i32 0, i32 0
  %ECX.i626 = bitcast %union.anon* %5048 to i32*
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5050 = getelementptr inbounds %struct.GPR, %struct.GPR* %5049, i32 0, i32 1
  %5051 = getelementptr inbounds %struct.Reg, %struct.Reg* %5050, i32 0, i32 0
  %RAX.i627 = bitcast %union.anon* %5051 to i64*
  %5052 = load i32, i32* %ECX.i626
  %5053 = zext i32 %5052 to i64
  %5054 = load i64, i64* %RAX.i627
  %5055 = add i64 %5054, 8
  %5056 = load i64, i64* %PC.i625
  %5057 = add i64 %5056, 3
  store i64 %5057, i64* %PC.i625
  %5058 = inttoptr i64 %5055 to i32*
  %5059 = load i32, i32* %5058
  %5060 = sub i32 %5052, %5059
  %5061 = icmp ult i32 %5052, %5059
  %5062 = zext i1 %5061 to i8
  %5063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5062, i8* %5063, align 1
  %5064 = and i32 %5060, 255
  %5065 = call i32 @llvm.ctpop.i32(i32 %5064)
  %5066 = trunc i32 %5065 to i8
  %5067 = and i8 %5066, 1
  %5068 = xor i8 %5067, 1
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5068, i8* %5069, align 1
  %5070 = xor i32 %5059, %5052
  %5071 = xor i32 %5070, %5060
  %5072 = lshr i32 %5071, 4
  %5073 = trunc i32 %5072 to i8
  %5074 = and i8 %5073, 1
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5074, i8* %5075, align 1
  %5076 = icmp eq i32 %5060, 0
  %5077 = zext i1 %5076 to i8
  %5078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5077, i8* %5078, align 1
  %5079 = lshr i32 %5060, 31
  %5080 = trunc i32 %5079 to i8
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5080, i8* %5081, align 1
  %5082 = lshr i32 %5052, 31
  %5083 = lshr i32 %5059, 31
  %5084 = xor i32 %5083, %5082
  %5085 = xor i32 %5079, %5082
  %5086 = add i32 %5085, %5084
  %5087 = icmp eq i32 %5086, 2
  %5088 = zext i1 %5087 to i8
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5088, i8* %5089, align 1
  store %struct.Memory* %loadMem_432dd1, %struct.Memory** %MEMORY
  %loadMem_432dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5091 = getelementptr inbounds %struct.GPR, %struct.GPR* %5090, i32 0, i32 33
  %5092 = getelementptr inbounds %struct.Reg, %struct.Reg* %5091, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %5092 to i64*
  %5093 = load i64, i64* %PC.i624
  %5094 = add i64 %5093, 257
  %5095 = load i64, i64* %PC.i624
  %5096 = add i64 %5095, 6
  %5097 = load i64, i64* %PC.i624
  %5098 = add i64 %5097, 6
  store i64 %5098, i64* %PC.i624
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5100 = load i8, i8* %5099, align 1
  %5101 = icmp eq i8 %5100, 0
  %5102 = zext i1 %5101 to i8
  store i8 %5102, i8* %BRANCH_TAKEN, align 1
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5104 = select i1 %5101, i64 %5094, i64 %5096
  store i64 %5104, i64* %5103, align 8
  store %struct.Memory* %loadMem_432dd4, %struct.Memory** %MEMORY
  %loadBr_432dd4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432dd4 = icmp eq i8 %loadBr_432dd4, 1
  br i1 %cmpBr_432dd4, label %block_.L_432ed5, label %block_432dda

block_432dda:                                     ; preds = %block_432db5
  %loadMem_432dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %5105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5106 = getelementptr inbounds %struct.GPR, %struct.GPR* %5105, i32 0, i32 33
  %5107 = getelementptr inbounds %struct.Reg, %struct.Reg* %5106, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %5107 to i64*
  %5108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5109 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5108, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %5109 to %"class.std::bitset"*
  %5110 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %5111 = load i64, i64* %PC.i623
  %5112 = add i64 %5111, ptrtoint (%G_0x7eabe__rip__type* @G_0x7eabe__rip_ to i64)
  %5113 = load i64, i64* %PC.i623
  %5114 = add i64 %5113, 8
  store i64 %5114, i64* %PC.i623
  %5115 = inttoptr i64 %5112 to double*
  %5116 = load double, double* %5115
  %5117 = bitcast i8* %5110 to double*
  store double %5116, double* %5117, align 1
  %5118 = getelementptr inbounds i8, i8* %5110, i64 8
  %5119 = bitcast i8* %5118 to double*
  store double 0.000000e+00, double* %5119, align 1
  store %struct.Memory* %loadMem_432dda, %struct.Memory** %MEMORY
  %loadMem_432de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5121 = getelementptr inbounds %struct.GPR, %struct.GPR* %5120, i32 0, i32 33
  %5122 = getelementptr inbounds %struct.Reg, %struct.Reg* %5121, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %5122 to i64*
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5124 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5123, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %5124 to %"class.std::bitset"*
  %5125 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %5126 = load i64, i64* %PC.i622
  %5127 = add i64 %5126, ptrtoint (%G_0x7ea76__rip__type* @G_0x7ea76__rip_ to i64)
  %5128 = load i64, i64* %PC.i622
  %5129 = add i64 %5128, 8
  store i64 %5129, i64* %PC.i622
  %5130 = inttoptr i64 %5127 to double*
  %5131 = load double, double* %5130
  %5132 = bitcast i8* %5125 to double*
  store double %5131, double* %5132, align 1
  %5133 = getelementptr inbounds i8, i8* %5125, i64 8
  %5134 = bitcast i8* %5133 to double*
  store double 0.000000e+00, double* %5134, align 1
  store %struct.Memory* %loadMem_432de2, %struct.Memory** %MEMORY
  %loadMem_432dea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5136 = getelementptr inbounds %struct.GPR, %struct.GPR* %5135, i32 0, i32 33
  %5137 = getelementptr inbounds %struct.Reg, %struct.Reg* %5136, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %5137 to i64*
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 1
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %RAX.i621 = bitcast %union.anon* %5140 to i64*
  %5141 = load i64, i64* %PC.i620
  %5142 = add i64 %5141, 8
  store i64 %5142, i64* %PC.i620
  %5143 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %5143, i64* %RAX.i621, align 8
  store %struct.Memory* %loadMem_432dea, %struct.Memory** %MEMORY
  %loadMem_432df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5145 = getelementptr inbounds %struct.GPR, %struct.GPR* %5144, i32 0, i32 33
  %5146 = getelementptr inbounds %struct.Reg, %struct.Reg* %5145, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %5146 to i64*
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 1
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %5149 to i64*
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 5
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %RCX.i619 = bitcast %union.anon* %5152 to i64*
  %5153 = load i64, i64* %RAX.i618
  %5154 = add i64 %5153, 20
  %5155 = load i64, i64* %PC.i617
  %5156 = add i64 %5155, 3
  store i64 %5156, i64* %PC.i617
  %5157 = inttoptr i64 %5154 to i32*
  %5158 = load i32, i32* %5157
  %5159 = zext i32 %5158 to i64
  store i64 %5159, i64* %RCX.i619, align 8
  store %struct.Memory* %loadMem_432df2, %struct.Memory** %MEMORY
  %loadMem_432df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5161 = getelementptr inbounds %struct.GPR, %struct.GPR* %5160, i32 0, i32 33
  %5162 = getelementptr inbounds %struct.Reg, %struct.Reg* %5161, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %5162 to i64*
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5164 = getelementptr inbounds %struct.GPR, %struct.GPR* %5163, i32 0, i32 5
  %5165 = getelementptr inbounds %struct.Reg, %struct.Reg* %5164, i32 0, i32 0
  %RCX.i616 = bitcast %union.anon* %5165 to i64*
  %5166 = load i64, i64* %RCX.i616
  %5167 = load i64, i64* %PC.i615
  %5168 = add i64 %5167, 3
  store i64 %5168, i64* %PC.i615
  %5169 = trunc i64 %5166 to i32
  %5170 = add i32 1, %5169
  %5171 = zext i32 %5170 to i64
  store i64 %5171, i64* %RCX.i616, align 8
  %5172 = icmp ult i32 %5170, %5169
  %5173 = icmp ult i32 %5170, 1
  %5174 = or i1 %5172, %5173
  %5175 = zext i1 %5174 to i8
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5175, i8* %5176, align 1
  %5177 = and i32 %5170, 255
  %5178 = call i32 @llvm.ctpop.i32(i32 %5177)
  %5179 = trunc i32 %5178 to i8
  %5180 = and i8 %5179, 1
  %5181 = xor i8 %5180, 1
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5181, i8* %5182, align 1
  %5183 = xor i64 1, %5166
  %5184 = trunc i64 %5183 to i32
  %5185 = xor i32 %5184, %5170
  %5186 = lshr i32 %5185, 4
  %5187 = trunc i32 %5186 to i8
  %5188 = and i8 %5187, 1
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5188, i8* %5189, align 1
  %5190 = icmp eq i32 %5170, 0
  %5191 = zext i1 %5190 to i8
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5191, i8* %5192, align 1
  %5193 = lshr i32 %5170, 31
  %5194 = trunc i32 %5193 to i8
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5194, i8* %5195, align 1
  %5196 = lshr i32 %5169, 31
  %5197 = xor i32 %5193, %5196
  %5198 = add i32 %5197, %5193
  %5199 = icmp eq i32 %5198, 2
  %5200 = zext i1 %5199 to i8
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5200, i8* %5201, align 1
  store %struct.Memory* %loadMem_432df5, %struct.Memory** %MEMORY
  %loadMem_432df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5203 = getelementptr inbounds %struct.GPR, %struct.GPR* %5202, i32 0, i32 33
  %5204 = getelementptr inbounds %struct.Reg, %struct.Reg* %5203, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %5204 to i64*
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5206 = getelementptr inbounds %struct.GPR, %struct.GPR* %5205, i32 0, i32 5
  %5207 = getelementptr inbounds %struct.Reg, %struct.Reg* %5206, i32 0, i32 0
  %ECX.i613 = bitcast %union.anon* %5207 to i32*
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5208, i64 0, i64 2
  %YMM2.i614 = bitcast %union.VectorReg* %5209 to %"class.std::bitset"*
  %5210 = bitcast %"class.std::bitset"* %YMM2.i614 to i8*
  %5211 = load i32, i32* %ECX.i613
  %5212 = zext i32 %5211 to i64
  %5213 = load i64, i64* %PC.i612
  %5214 = add i64 %5213, 4
  store i64 %5214, i64* %PC.i612
  %5215 = bitcast i8* %5210 to <2 x i32>*
  %5216 = load <2 x i32>, <2 x i32>* %5215, align 1
  %5217 = getelementptr inbounds i8, i8* %5210, i64 8
  %5218 = bitcast i8* %5217 to <2 x i32>*
  %5219 = load <2 x i32>, <2 x i32>* %5218, align 1
  %5220 = sitofp i32 %5211 to float
  %5221 = bitcast i8* %5210 to float*
  store float %5220, float* %5221, align 1
  %5222 = extractelement <2 x i32> %5216, i32 1
  %5223 = getelementptr inbounds i8, i8* %5210, i64 4
  %5224 = bitcast i8* %5223 to i32*
  store i32 %5222, i32* %5224, align 1
  %5225 = extractelement <2 x i32> %5219, i32 0
  %5226 = bitcast i8* %5217 to i32*
  store i32 %5225, i32* %5226, align 1
  %5227 = extractelement <2 x i32> %5219, i32 1
  %5228 = getelementptr inbounds i8, i8* %5210, i64 12
  %5229 = bitcast i8* %5228 to i32*
  store i32 %5227, i32* %5229, align 1
  store %struct.Memory* %loadMem_432df8, %struct.Memory** %MEMORY
  %loadMem_432dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5231 = getelementptr inbounds %struct.GPR, %struct.GPR* %5230, i32 0, i32 33
  %5232 = getelementptr inbounds %struct.Reg, %struct.Reg* %5231, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %5232 to i64*
  %5233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5234 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5233, i64 0, i64 2
  %YMM2.i610 = bitcast %union.VectorReg* %5234 to %"class.std::bitset"*
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5236 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5235, i64 0, i64 2
  %XMM2.i611 = bitcast %union.VectorReg* %5236 to %union.vec128_t*
  %5237 = bitcast %"class.std::bitset"* %YMM2.i610 to i8*
  %5238 = bitcast %union.vec128_t* %XMM2.i611 to i8*
  %5239 = load i64, i64* %PC.i609
  %5240 = add i64 %5239, 4
  store i64 %5240, i64* %PC.i609
  %5241 = bitcast i8* %5238 to <2 x float>*
  %5242 = load <2 x float>, <2 x float>* %5241, align 1
  %5243 = extractelement <2 x float> %5242, i32 0
  %5244 = fpext float %5243 to double
  %5245 = bitcast i8* %5237 to double*
  store double %5244, double* %5245, align 1
  store %struct.Memory* %loadMem_432dfc, %struct.Memory** %MEMORY
  %loadMem_432e00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5247 = getelementptr inbounds %struct.GPR, %struct.GPR* %5246, i32 0, i32 33
  %5248 = getelementptr inbounds %struct.Reg, %struct.Reg* %5247, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %5248 to i64*
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5250 = getelementptr inbounds %struct.GPR, %struct.GPR* %5249, i32 0, i32 1
  %5251 = getelementptr inbounds %struct.Reg, %struct.Reg* %5250, i32 0, i32 0
  %RAX.i608 = bitcast %union.anon* %5251 to i64*
  %5252 = load i64, i64* %PC.i607
  %5253 = add i64 %5252, 8
  store i64 %5253, i64* %PC.i607
  %5254 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %5254, i64* %RAX.i608, align 8
  store %struct.Memory* %loadMem_432e00, %struct.Memory** %MEMORY
  %loadMem_432e08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 33
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %5257 to i64*
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 1
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %5260 to i64*
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5262 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5261, i64 0, i64 3
  %YMM3.i606 = bitcast %union.VectorReg* %5262 to %"class.std::bitset"*
  %5263 = bitcast %"class.std::bitset"* %YMM3.i606 to i8*
  %5264 = load i64, i64* %RAX.i605
  %5265 = add i64 %5264, 1236
  %5266 = load i64, i64* %PC.i604
  %5267 = add i64 %5266, 8
  store i64 %5267, i64* %PC.i604
  %5268 = inttoptr i64 %5265 to i32*
  %5269 = load i32, i32* %5268
  %5270 = sitofp i32 %5269 to double
  %5271 = bitcast i8* %5263 to double*
  store double %5270, double* %5271, align 1
  store %struct.Memory* %loadMem_432e08, %struct.Memory** %MEMORY
  %loadMem_432e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5273 = getelementptr inbounds %struct.GPR, %struct.GPR* %5272, i32 0, i32 33
  %5274 = getelementptr inbounds %struct.Reg, %struct.Reg* %5273, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %5274 to i64*
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5276 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5275, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %5276 to %"class.std::bitset"*
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5278 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5277, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %5278 to %union.vec128_t*
  %5279 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %5280 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %5281 = bitcast %union.vec128_t* %XMM1.i to i8*
  %5282 = load i64, i64* %PC.i603
  %5283 = add i64 %5282, 4
  store i64 %5283, i64* %PC.i603
  %5284 = bitcast i8* %5280 to double*
  %5285 = load double, double* %5284, align 1
  %5286 = getelementptr inbounds i8, i8* %5280, i64 8
  %5287 = bitcast i8* %5286 to i64*
  %5288 = load i64, i64* %5287, align 1
  %5289 = bitcast i8* %5281 to double*
  %5290 = load double, double* %5289, align 1
  %5291 = fadd double %5285, %5290
  %5292 = bitcast i8* %5279 to double*
  store double %5291, double* %5292, align 1
  %5293 = getelementptr inbounds i8, i8* %5279, i64 8
  %5294 = bitcast i8* %5293 to i64*
  store i64 %5288, i64* %5294, align 1
  store %struct.Memory* %loadMem_432e10, %struct.Memory** %MEMORY
  %loadMem_432e14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5296 = getelementptr inbounds %struct.GPR, %struct.GPR* %5295, i32 0, i32 33
  %5297 = getelementptr inbounds %struct.Reg, %struct.Reg* %5296, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5297 to i64*
  %5298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5298, i64 0, i64 2
  %YMM2.i602 = bitcast %union.VectorReg* %5299 to %"class.std::bitset"*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5300, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %5301 to %union.vec128_t*
  %5302 = bitcast %"class.std::bitset"* %YMM2.i602 to i8*
  %5303 = bitcast %"class.std::bitset"* %YMM2.i602 to i8*
  %5304 = bitcast %union.vec128_t* %XMM3.i to i8*
  %5305 = load i64, i64* %PC.i601
  %5306 = add i64 %5305, 4
  store i64 %5306, i64* %PC.i601
  %5307 = bitcast i8* %5303 to double*
  %5308 = load double, double* %5307, align 1
  %5309 = getelementptr inbounds i8, i8* %5303, i64 8
  %5310 = bitcast i8* %5309 to i64*
  %5311 = load i64, i64* %5310, align 1
  %5312 = bitcast i8* %5304 to double*
  %5313 = load double, double* %5312, align 1
  %5314 = fdiv double %5308, %5313
  %5315 = bitcast i8* %5302 to double*
  store double %5314, double* %5315, align 1
  %5316 = getelementptr inbounds i8, i8* %5302, i64 8
  %5317 = bitcast i8* %5316 to i64*
  store i64 %5311, i64* %5317, align 1
  store %struct.Memory* %loadMem_432e14, %struct.Memory** %MEMORY
  %loadMem_432e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 33
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %5320 to i64*
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5322 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5321, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %5322 to %"class.std::bitset"*
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5324 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5323, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %5324 to %union.vec128_t*
  %5325 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %5326 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %5327 = bitcast %union.vec128_t* %XMM0.i to i8*
  %5328 = load i64, i64* %PC.i600
  %5329 = add i64 %5328, 4
  store i64 %5329, i64* %PC.i600
  %5330 = bitcast i8* %5326 to double*
  %5331 = load double, double* %5330, align 1
  %5332 = getelementptr inbounds i8, i8* %5326, i64 8
  %5333 = bitcast i8* %5332 to i64*
  %5334 = load i64, i64* %5333, align 1
  %5335 = bitcast i8* %5327 to double*
  %5336 = load double, double* %5335, align 1
  %5337 = fadd double %5331, %5336
  %5338 = bitcast i8* %5325 to double*
  store double %5337, double* %5338, align 1
  %5339 = getelementptr inbounds i8, i8* %5325, i64 8
  %5340 = bitcast i8* %5339 to i64*
  store i64 %5334, i64* %5340, align 1
  store %struct.Memory* %loadMem_432e18, %struct.Memory** %MEMORY
  %loadMem_432e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 33
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %5343 to i64*
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 5
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %RCX.i599 = bitcast %union.anon* %5346 to i64*
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5348 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5347, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %5348 to %union.vec128_t*
  %5349 = bitcast %union.vec128_t* %XMM2.i to i8*
  %5350 = load i64, i64* %PC.i598
  %5351 = add i64 %5350, 4
  store i64 %5351, i64* %PC.i598
  %5352 = bitcast i8* %5349 to double*
  %5353 = load double, double* %5352, align 1
  %5354 = call double @llvm.trunc.f64(double %5353)
  %5355 = call double @llvm.fabs.f64(double %5354)
  %5356 = fcmp ogt double %5355, 0x41DFFFFFFFC00000
  %5357 = fptosi double %5354 to i32
  %5358 = zext i32 %5357 to i64
  %5359 = select i1 %5356, i64 2147483648, i64 %5358
  store i64 %5359, i64* %RCX.i599, align 8
  store %struct.Memory* %loadMem_432e1c, %struct.Memory** %MEMORY
  %loadMem_432e20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5361 = getelementptr inbounds %struct.GPR, %struct.GPR* %5360, i32 0, i32 33
  %5362 = getelementptr inbounds %struct.Reg, %struct.Reg* %5361, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %5362 to i64*
  %5363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5364 = getelementptr inbounds %struct.GPR, %struct.GPR* %5363, i32 0, i32 5
  %5365 = getelementptr inbounds %struct.Reg, %struct.Reg* %5364, i32 0, i32 0
  %ECX.i596 = bitcast %union.anon* %5365 to i32*
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5367 = getelementptr inbounds %struct.GPR, %struct.GPR* %5366, i32 0, i32 15
  %5368 = getelementptr inbounds %struct.Reg, %struct.Reg* %5367, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %5368 to i64*
  %5369 = load i64, i64* %RBP.i597
  %5370 = sub i64 %5369, 40
  %5371 = load i32, i32* %ECX.i596
  %5372 = zext i32 %5371 to i64
  %5373 = load i64, i64* %PC.i595
  %5374 = add i64 %5373, 3
  store i64 %5374, i64* %PC.i595
  %5375 = inttoptr i64 %5370 to i32*
  store i32 %5371, i32* %5375
  store %struct.Memory* %loadMem_432e20, %struct.Memory** %MEMORY
  %loadMem_432e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5377 = getelementptr inbounds %struct.GPR, %struct.GPR* %5376, i32 0, i32 33
  %5378 = getelementptr inbounds %struct.Reg, %struct.Reg* %5377, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %5378 to i64*
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5380 = getelementptr inbounds %struct.GPR, %struct.GPR* %5379, i32 0, i32 1
  %5381 = getelementptr inbounds %struct.Reg, %struct.Reg* %5380, i32 0, i32 0
  %RAX.i594 = bitcast %union.anon* %5381 to i64*
  %5382 = load i64, i64* %PC.i593
  %5383 = add i64 %5382, 8
  store i64 %5383, i64* %PC.i593
  %5384 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %5384, i64* %RAX.i594, align 8
  store %struct.Memory* %loadMem_432e23, %struct.Memory** %MEMORY
  %loadMem_432e2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5386 = getelementptr inbounds %struct.GPR, %struct.GPR* %5385, i32 0, i32 33
  %5387 = getelementptr inbounds %struct.Reg, %struct.Reg* %5386, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %5387 to i64*
  %5388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5389 = getelementptr inbounds %struct.GPR, %struct.GPR* %5388, i32 0, i32 1
  %5390 = getelementptr inbounds %struct.Reg, %struct.Reg* %5389, i32 0, i32 0
  %RAX.i591 = bitcast %union.anon* %5390 to i64*
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5392 = getelementptr inbounds %struct.GPR, %struct.GPR* %5391, i32 0, i32 5
  %5393 = getelementptr inbounds %struct.Reg, %struct.Reg* %5392, i32 0, i32 0
  %RCX.i592 = bitcast %union.anon* %5393 to i64*
  %5394 = load i64, i64* %RAX.i591
  %5395 = add i64 %5394, 2440
  %5396 = load i64, i64* %PC.i590
  %5397 = add i64 %5396, 6
  store i64 %5397, i64* %PC.i590
  %5398 = inttoptr i64 %5395 to i32*
  %5399 = load i32, i32* %5398
  %5400 = zext i32 %5399 to i64
  store i64 %5400, i64* %RCX.i592, align 8
  store %struct.Memory* %loadMem_432e2b, %struct.Memory** %MEMORY
  %loadMem_432e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5402 = getelementptr inbounds %struct.GPR, %struct.GPR* %5401, i32 0, i32 33
  %5403 = getelementptr inbounds %struct.Reg, %struct.Reg* %5402, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %5403 to i64*
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5405 = getelementptr inbounds %struct.GPR, %struct.GPR* %5404, i32 0, i32 1
  %5406 = getelementptr inbounds %struct.Reg, %struct.Reg* %5405, i32 0, i32 0
  %RAX.i589 = bitcast %union.anon* %5406 to i64*
  %5407 = load i64, i64* %PC.i588
  %5408 = add i64 %5407, 8
  store i64 %5408, i64* %PC.i588
  %5409 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5409, i64* %RAX.i589, align 8
  store %struct.Memory* %loadMem_432e31, %struct.Memory** %MEMORY
  %loadMem_432e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5411 = getelementptr inbounds %struct.GPR, %struct.GPR* %5410, i32 0, i32 33
  %5412 = getelementptr inbounds %struct.Reg, %struct.Reg* %5411, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %5412 to i64*
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5414 = getelementptr inbounds %struct.GPR, %struct.GPR* %5413, i32 0, i32 1
  %5415 = getelementptr inbounds %struct.Reg, %struct.Reg* %5414, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %5415 to i64*
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5417 = getelementptr inbounds %struct.GPR, %struct.GPR* %5416, i32 0, i32 7
  %5418 = getelementptr inbounds %struct.Reg, %struct.Reg* %5417, i32 0, i32 0
  %RDX.i587 = bitcast %union.anon* %5418 to i64*
  %5419 = load i64, i64* %RAX.i586
  %5420 = load i64, i64* %PC.i585
  %5421 = add i64 %5420, 2
  store i64 %5421, i64* %PC.i585
  %5422 = inttoptr i64 %5419 to i32*
  %5423 = load i32, i32* %5422
  %5424 = zext i32 %5423 to i64
  store i64 %5424, i64* %RDX.i587, align 8
  store %struct.Memory* %loadMem_432e39, %struct.Memory** %MEMORY
  %loadMem_432e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5426 = getelementptr inbounds %struct.GPR, %struct.GPR* %5425, i32 0, i32 33
  %5427 = getelementptr inbounds %struct.Reg, %struct.Reg* %5426, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %5427 to i64*
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5429 = getelementptr inbounds %struct.GPR, %struct.GPR* %5428, i32 0, i32 7
  %5430 = getelementptr inbounds %struct.Reg, %struct.Reg* %5429, i32 0, i32 0
  %RDX.i584 = bitcast %union.anon* %5430 to i64*
  %5431 = load i64, i64* %RDX.i584
  %5432 = load i64, i64* %PC.i583
  %5433 = add i64 %5432, 3
  store i64 %5433, i64* %PC.i583
  %5434 = trunc i64 %5431 to i32
  %5435 = sub i32 %5434, 1
  %5436 = zext i32 %5435 to i64
  store i64 %5436, i64* %RDX.i584, align 8
  %5437 = icmp ult i32 %5434, 1
  %5438 = zext i1 %5437 to i8
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5438, i8* %5439, align 1
  %5440 = and i32 %5435, 255
  %5441 = call i32 @llvm.ctpop.i32(i32 %5440)
  %5442 = trunc i32 %5441 to i8
  %5443 = and i8 %5442, 1
  %5444 = xor i8 %5443, 1
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5444, i8* %5445, align 1
  %5446 = xor i64 1, %5431
  %5447 = trunc i64 %5446 to i32
  %5448 = xor i32 %5447, %5435
  %5449 = lshr i32 %5448, 4
  %5450 = trunc i32 %5449 to i8
  %5451 = and i8 %5450, 1
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5451, i8* %5452, align 1
  %5453 = icmp eq i32 %5435, 0
  %5454 = zext i1 %5453 to i8
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5454, i8* %5455, align 1
  %5456 = lshr i32 %5435, 31
  %5457 = trunc i32 %5456 to i8
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5457, i8* %5458, align 1
  %5459 = lshr i32 %5434, 31
  %5460 = xor i32 %5456, %5459
  %5461 = add i32 %5460, %5459
  %5462 = icmp eq i32 %5461, 2
  %5463 = zext i1 %5462 to i8
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5463, i8* %5464, align 1
  store %struct.Memory* %loadMem_432e3b, %struct.Memory** %MEMORY
  %loadMem_432e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5466 = getelementptr inbounds %struct.GPR, %struct.GPR* %5465, i32 0, i32 33
  %5467 = getelementptr inbounds %struct.Reg, %struct.Reg* %5466, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %5467 to i64*
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5469 = getelementptr inbounds %struct.GPR, %struct.GPR* %5468, i32 0, i32 1
  %5470 = getelementptr inbounds %struct.Reg, %struct.Reg* %5469, i32 0, i32 0
  %RAX.i582 = bitcast %union.anon* %5470 to i64*
  %5471 = load i64, i64* %PC.i581
  %5472 = add i64 %5471, 8
  store i64 %5472, i64* %PC.i581
  %5473 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %5473, i64* %RAX.i582, align 8
  store %struct.Memory* %loadMem_432e3e, %struct.Memory** %MEMORY
  %loadMem_432e46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5475 = getelementptr inbounds %struct.GPR, %struct.GPR* %5474, i32 0, i32 33
  %5476 = getelementptr inbounds %struct.Reg, %struct.Reg* %5475, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %5476 to i64*
  %5477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5478 = getelementptr inbounds %struct.GPR, %struct.GPR* %5477, i32 0, i32 1
  %5479 = getelementptr inbounds %struct.Reg, %struct.Reg* %5478, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %5479 to i64*
  %5480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5481 = getelementptr inbounds %struct.GPR, %struct.GPR* %5480, i32 0, i32 9
  %5482 = getelementptr inbounds %struct.Reg, %struct.Reg* %5481, i32 0, i32 0
  %RSI.i580 = bitcast %union.anon* %5482 to i64*
  %5483 = load i64, i64* %RAX.i579
  %5484 = add i64 %5483, 20
  %5485 = load i64, i64* %PC.i578
  %5486 = add i64 %5485, 3
  store i64 %5486, i64* %PC.i578
  %5487 = inttoptr i64 %5484 to i32*
  %5488 = load i32, i32* %5487
  %5489 = zext i32 %5488 to i64
  store i64 %5489, i64* %RSI.i580, align 8
  store %struct.Memory* %loadMem_432e46, %struct.Memory** %MEMORY
  %loadMem_432e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5491 = getelementptr inbounds %struct.GPR, %struct.GPR* %5490, i32 0, i32 33
  %5492 = getelementptr inbounds %struct.Reg, %struct.Reg* %5491, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %5492 to i64*
  %5493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5494 = getelementptr inbounds %struct.GPR, %struct.GPR* %5493, i32 0, i32 9
  %5495 = getelementptr inbounds %struct.Reg, %struct.Reg* %5494, i32 0, i32 0
  %RSI.i577 = bitcast %union.anon* %5495 to i64*
  %5496 = load i64, i64* %RSI.i577
  %5497 = load i64, i64* %PC.i576
  %5498 = add i64 %5497, 3
  store i64 %5498, i64* %PC.i576
  %5499 = trunc i64 %5496 to i32
  %5500 = add i32 1, %5499
  %5501 = zext i32 %5500 to i64
  store i64 %5501, i64* %RSI.i577, align 8
  %5502 = icmp ult i32 %5500, %5499
  %5503 = icmp ult i32 %5500, 1
  %5504 = or i1 %5502, %5503
  %5505 = zext i1 %5504 to i8
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5505, i8* %5506, align 1
  %5507 = and i32 %5500, 255
  %5508 = call i32 @llvm.ctpop.i32(i32 %5507)
  %5509 = trunc i32 %5508 to i8
  %5510 = and i8 %5509, 1
  %5511 = xor i8 %5510, 1
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5511, i8* %5512, align 1
  %5513 = xor i64 1, %5496
  %5514 = trunc i64 %5513 to i32
  %5515 = xor i32 %5514, %5500
  %5516 = lshr i32 %5515, 4
  %5517 = trunc i32 %5516 to i8
  %5518 = and i8 %5517, 1
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5518, i8* %5519, align 1
  %5520 = icmp eq i32 %5500, 0
  %5521 = zext i1 %5520 to i8
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5521, i8* %5522, align 1
  %5523 = lshr i32 %5500, 31
  %5524 = trunc i32 %5523 to i8
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5524, i8* %5525, align 1
  %5526 = lshr i32 %5499, 31
  %5527 = xor i32 %5523, %5526
  %5528 = add i32 %5527, %5523
  %5529 = icmp eq i32 %5528, 2
  %5530 = zext i1 %5529 to i8
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5530, i8* %5531, align 1
  store %struct.Memory* %loadMem_432e49, %struct.Memory** %MEMORY
  %loadMem_432e4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5533 = getelementptr inbounds %struct.GPR, %struct.GPR* %5532, i32 0, i32 33
  %5534 = getelementptr inbounds %struct.Reg, %struct.Reg* %5533, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %5534 to i64*
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 9
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %ESI.i574 = bitcast %union.anon* %5537 to i32*
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 7
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %RDX.i575 = bitcast %union.anon* %5540 to i64*
  %5541 = load i64, i64* %RDX.i575
  %5542 = load i32, i32* %ESI.i574
  %5543 = zext i32 %5542 to i64
  %5544 = load i64, i64* %PC.i573
  %5545 = add i64 %5544, 3
  store i64 %5545, i64* %PC.i573
  %5546 = shl i64 %5541, 32
  %5547 = ashr exact i64 %5546, 32
  %5548 = shl i64 %5543, 32
  %5549 = ashr exact i64 %5548, 32
  %5550 = mul i64 %5549, %5547
  %5551 = trunc i64 %5550 to i32
  %5552 = and i64 %5550, 4294967295
  store i64 %5552, i64* %RDX.i575, align 8
  %5553 = shl i64 %5550, 32
  %5554 = ashr exact i64 %5553, 32
  %5555 = icmp ne i64 %5554, %5550
  %5556 = zext i1 %5555 to i8
  %5557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5556, i8* %5557, align 1
  %5558 = and i32 %5551, 255
  %5559 = call i32 @llvm.ctpop.i32(i32 %5558)
  %5560 = trunc i32 %5559 to i8
  %5561 = and i8 %5560, 1
  %5562 = xor i8 %5561, 1
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5562, i8* %5563, align 1
  %5564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5564, align 1
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5565, align 1
  %5566 = lshr i32 %5551, 31
  %5567 = trunc i32 %5566 to i8
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5567, i8* %5568, align 1
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5556, i8* %5569, align 1
  store %struct.Memory* %loadMem_432e4c, %struct.Memory** %MEMORY
  %loadMem_432e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5571 = getelementptr inbounds %struct.GPR, %struct.GPR* %5570, i32 0, i32 33
  %5572 = getelementptr inbounds %struct.Reg, %struct.Reg* %5571, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %5572 to i64*
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5574 = getelementptr inbounds %struct.GPR, %struct.GPR* %5573, i32 0, i32 7
  %5575 = getelementptr inbounds %struct.Reg, %struct.Reg* %5574, i32 0, i32 0
  %EDX.i571 = bitcast %union.anon* %5575 to i32*
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 5
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %RCX.i572 = bitcast %union.anon* %5578 to i64*
  %5579 = load i64, i64* %RCX.i572
  %5580 = load i32, i32* %EDX.i571
  %5581 = zext i32 %5580 to i64
  %5582 = load i64, i64* %PC.i570
  %5583 = add i64 %5582, 2
  store i64 %5583, i64* %PC.i570
  %5584 = trunc i64 %5579 to i32
  %5585 = sub i32 %5584, %5580
  %5586 = zext i32 %5585 to i64
  store i64 %5586, i64* %RCX.i572, align 8
  %5587 = icmp ult i32 %5584, %5580
  %5588 = zext i1 %5587 to i8
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5588, i8* %5589, align 1
  %5590 = and i32 %5585, 255
  %5591 = call i32 @llvm.ctpop.i32(i32 %5590)
  %5592 = trunc i32 %5591 to i8
  %5593 = and i8 %5592, 1
  %5594 = xor i8 %5593, 1
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5594, i8* %5595, align 1
  %5596 = xor i64 %5581, %5579
  %5597 = trunc i64 %5596 to i32
  %5598 = xor i32 %5597, %5585
  %5599 = lshr i32 %5598, 4
  %5600 = trunc i32 %5599 to i8
  %5601 = and i8 %5600, 1
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5601, i8* %5602, align 1
  %5603 = icmp eq i32 %5585, 0
  %5604 = zext i1 %5603 to i8
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5604, i8* %5605, align 1
  %5606 = lshr i32 %5585, 31
  %5607 = trunc i32 %5606 to i8
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5607, i8* %5608, align 1
  %5609 = lshr i32 %5584, 31
  %5610 = lshr i32 %5580, 31
  %5611 = xor i32 %5610, %5609
  %5612 = xor i32 %5606, %5609
  %5613 = add i32 %5612, %5611
  %5614 = icmp eq i32 %5613, 2
  %5615 = zext i1 %5614 to i8
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5615, i8* %5616, align 1
  store %struct.Memory* %loadMem_432e4f, %struct.Memory** %MEMORY
  %loadMem_432e51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5618 = getelementptr inbounds %struct.GPR, %struct.GPR* %5617, i32 0, i32 33
  %5619 = getelementptr inbounds %struct.Reg, %struct.Reg* %5618, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %5619 to i64*
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5621 = getelementptr inbounds %struct.GPR, %struct.GPR* %5620, i32 0, i32 5
  %5622 = getelementptr inbounds %struct.Reg, %struct.Reg* %5621, i32 0, i32 0
  %ECX.i568 = bitcast %union.anon* %5622 to i32*
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 1
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %RAX.i569 = bitcast %union.anon* %5625 to i64*
  %5626 = load i32, i32* %ECX.i568
  %5627 = zext i32 %5626 to i64
  %5628 = load i64, i64* %PC.i567
  %5629 = add i64 %5628, 2
  store i64 %5629, i64* %PC.i567
  %5630 = and i64 %5627, 4294967295
  store i64 %5630, i64* %RAX.i569, align 8
  store %struct.Memory* %loadMem_432e51, %struct.Memory** %MEMORY
  %loadMem_432e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5632 = getelementptr inbounds %struct.GPR, %struct.GPR* %5631, i32 0, i32 33
  %5633 = getelementptr inbounds %struct.Reg, %struct.Reg* %5632, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %5633 to i64*
  %5634 = load i64, i64* %PC.i566
  %5635 = add i64 %5634, 1
  store i64 %5635, i64* %PC.i566
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5638 = bitcast %union.anon* %5637 to i32*
  %5639 = load i32, i32* %5638, align 8
  %5640 = sext i32 %5639 to i64
  %5641 = lshr i64 %5640, 32
  store i64 %5641, i64* %5636, align 8
  store %struct.Memory* %loadMem_432e53, %struct.Memory** %MEMORY
  %loadMem_432e54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 33
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %5644 to i64*
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 15
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %5647 to i64*
  %5648 = load i64, i64* %RBP.i564
  %5649 = sub i64 %5648, 40
  %5650 = load i64, i64* %PC.i563
  %5651 = add i64 %5650, 3
  store i64 %5651, i64* %PC.i563
  %5652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5653 = bitcast %union.anon* %5652 to i32*
  %5654 = load i32, i32* %5653, align 8
  %5655 = zext i32 %5654 to i64
  %5656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5657 = bitcast %union.anon* %5656 to i32*
  %5658 = load i32, i32* %5657, align 8
  %5659 = zext i32 %5658 to i64
  %5660 = inttoptr i64 %5649 to i32*
  %5661 = load i32, i32* %5660
  %5662 = sext i32 %5661 to i64
  %5663 = shl i64 %5659, 32
  %5664 = or i64 %5663, %5655
  %5665 = sdiv i64 %5664, %5662
  %5666 = shl i64 %5665, 32
  %5667 = ashr exact i64 %5666, 32
  %5668 = icmp eq i64 %5665, %5667
  br i1 %5668, label %5673, label %5669

; <label>:5669:                                   ; preds = %block_432dda
  %5670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5671 = load i64, i64* %5670, align 8
  %5672 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5671, %struct.Memory* %loadMem_432e54)
  br label %routine_idivl_MINUS0x28__rbp_.exit

; <label>:5673:                                   ; preds = %block_432dda
  %5674 = srem i64 %5664, %5662
  %5675 = getelementptr inbounds %union.anon, %union.anon* %5652, i64 0, i32 0
  %5676 = and i64 %5665, 4294967295
  store i64 %5676, i64* %5675, align 8
  %5677 = getelementptr inbounds %union.anon, %union.anon* %5656, i64 0, i32 0
  %5678 = and i64 %5674, 4294967295
  store i64 %5678, i64* %5677, align 8
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5679, align 1
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5680, align 1
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5681, align 1
  %5682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5682, align 1
  %5683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5683, align 1
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5684, align 1
  br label %routine_idivl_MINUS0x28__rbp_.exit

routine_idivl_MINUS0x28__rbp_.exit:               ; preds = %5669, %5673
  %5685 = phi %struct.Memory* [ %5672, %5669 ], [ %loadMem_432e54, %5673 ]
  store %struct.Memory* %5685, %struct.Memory** %MEMORY
  %loadMem_432e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5687 = getelementptr inbounds %struct.GPR, %struct.GPR* %5686, i32 0, i32 33
  %5688 = getelementptr inbounds %struct.Reg, %struct.Reg* %5687, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %5688 to i64*
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5690 = getelementptr inbounds %struct.GPR, %struct.GPR* %5689, i32 0, i32 1
  %5691 = getelementptr inbounds %struct.Reg, %struct.Reg* %5690, i32 0, i32 0
  %RAX.i562 = bitcast %union.anon* %5691 to i64*
  %5692 = load i64, i64* %RAX.i562
  %5693 = load i64, i64* %PC.i561
  %5694 = add i64 %5693, 3
  store i64 %5694, i64* %PC.i561
  %5695 = trunc i64 %5692 to i32
  %5696 = sub i32 %5695, 1
  %5697 = zext i32 %5696 to i64
  store i64 %5697, i64* %RAX.i562, align 8
  %5698 = icmp ult i32 %5695, 1
  %5699 = zext i1 %5698 to i8
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5699, i8* %5700, align 1
  %5701 = and i32 %5696, 255
  %5702 = call i32 @llvm.ctpop.i32(i32 %5701)
  %5703 = trunc i32 %5702 to i8
  %5704 = and i8 %5703, 1
  %5705 = xor i8 %5704, 1
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5705, i8* %5706, align 1
  %5707 = xor i64 1, %5692
  %5708 = trunc i64 %5707 to i32
  %5709 = xor i32 %5708, %5696
  %5710 = lshr i32 %5709, 4
  %5711 = trunc i32 %5710 to i8
  %5712 = and i8 %5711, 1
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5712, i8* %5713, align 1
  %5714 = icmp eq i32 %5696, 0
  %5715 = zext i1 %5714 to i8
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5715, i8* %5716, align 1
  %5717 = lshr i32 %5696, 31
  %5718 = trunc i32 %5717 to i8
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5718, i8* %5719, align 1
  %5720 = lshr i32 %5695, 31
  %5721 = xor i32 %5717, %5720
  %5722 = add i32 %5721, %5720
  %5723 = icmp eq i32 %5722, 2
  %5724 = zext i1 %5723 to i8
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5724, i8* %5725, align 1
  store %struct.Memory* %loadMem_432e57, %struct.Memory** %MEMORY
  %loadMem_432e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5727 = getelementptr inbounds %struct.GPR, %struct.GPR* %5726, i32 0, i32 33
  %5728 = getelementptr inbounds %struct.Reg, %struct.Reg* %5727, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %5728 to i64*
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5730 = getelementptr inbounds %struct.GPR, %struct.GPR* %5729, i32 0, i32 11
  %5731 = getelementptr inbounds %struct.Reg, %struct.Reg* %5730, i32 0, i32 0
  %RDI.i560 = bitcast %union.anon* %5731 to i64*
  %5732 = load i64, i64* %PC.i559
  %5733 = add i64 %5732, 8
  store i64 %5733, i64* %PC.i559
  %5734 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %5734, i64* %RDI.i560, align 8
  store %struct.Memory* %loadMem_432e5a, %struct.Memory** %MEMORY
  %loadMem_432e62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5736 = getelementptr inbounds %struct.GPR, %struct.GPR* %5735, i32 0, i32 33
  %5737 = getelementptr inbounds %struct.Reg, %struct.Reg* %5736, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %5737 to i64*
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5739 = getelementptr inbounds %struct.GPR, %struct.GPR* %5738, i32 0, i32 1
  %5740 = getelementptr inbounds %struct.Reg, %struct.Reg* %5739, i32 0, i32 0
  %EAX.i557 = bitcast %union.anon* %5740 to i32*
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5742 = getelementptr inbounds %struct.GPR, %struct.GPR* %5741, i32 0, i32 11
  %5743 = getelementptr inbounds %struct.Reg, %struct.Reg* %5742, i32 0, i32 0
  %RDI.i558 = bitcast %union.anon* %5743 to i64*
  %5744 = load i64, i64* %RDI.i558
  %5745 = add i64 %5744, 1236
  %5746 = load i32, i32* %EAX.i557
  %5747 = zext i32 %5746 to i64
  %5748 = load i64, i64* %PC.i556
  %5749 = add i64 %5748, 6
  store i64 %5749, i64* %PC.i556
  %5750 = inttoptr i64 %5745 to i32*
  store i32 %5746, i32* %5750
  store %struct.Memory* %loadMem_432e62, %struct.Memory** %MEMORY
  %loadMem_432e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5752 = getelementptr inbounds %struct.GPR, %struct.GPR* %5751, i32 0, i32 33
  %5753 = getelementptr inbounds %struct.Reg, %struct.Reg* %5752, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %5753 to i64*
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 1
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %RAX.i555 = bitcast %union.anon* %5756 to i64*
  %5757 = load i64, i64* %PC.i554
  %5758 = add i64 %5757, 7
  store i64 %5758, i64* %PC.i554
  %5759 = load i32, i32* bitcast (%G_0x6cc018_type* @G_0x6cc018 to i32*)
  %5760 = zext i32 %5759 to i64
  store i64 %5760, i64* %RAX.i555, align 8
  store %struct.Memory* %loadMem_432e68, %struct.Memory** %MEMORY
  %loadMem_432e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 33
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %5763 to i64*
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5765 = getelementptr inbounds %struct.GPR, %struct.GPR* %5764, i32 0, i32 11
  %5766 = getelementptr inbounds %struct.Reg, %struct.Reg* %5765, i32 0, i32 0
  %RDI.i553 = bitcast %union.anon* %5766 to i64*
  %5767 = load i64, i64* %PC.i552
  %5768 = add i64 %5767, 8
  store i64 %5768, i64* %PC.i552
  %5769 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %5769, i64* %RDI.i553, align 8
  store %struct.Memory* %loadMem_432e6f, %struct.Memory** %MEMORY
  %loadMem_432e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5771 = getelementptr inbounds %struct.GPR, %struct.GPR* %5770, i32 0, i32 33
  %5772 = getelementptr inbounds %struct.Reg, %struct.Reg* %5771, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %5772 to i64*
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5774 = getelementptr inbounds %struct.GPR, %struct.GPR* %5773, i32 0, i32 1
  %5775 = getelementptr inbounds %struct.Reg, %struct.Reg* %5774, i32 0, i32 0
  %RAX.i550 = bitcast %union.anon* %5775 to i64*
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5777 = getelementptr inbounds %struct.GPR, %struct.GPR* %5776, i32 0, i32 11
  %5778 = getelementptr inbounds %struct.Reg, %struct.Reg* %5777, i32 0, i32 0
  %RDI.i551 = bitcast %union.anon* %5778 to i64*
  %5779 = load i64, i64* %RAX.i550
  %5780 = load i64, i64* %RDI.i551
  %5781 = add i64 %5780, 1236
  %5782 = load i64, i64* %PC.i549
  %5783 = add i64 %5782, 6
  store i64 %5783, i64* %PC.i549
  %5784 = trunc i64 %5779 to i32
  %5785 = inttoptr i64 %5781 to i32*
  %5786 = load i32, i32* %5785
  %5787 = sub i32 %5784, %5786
  %5788 = zext i32 %5787 to i64
  store i64 %5788, i64* %RAX.i550, align 8
  %5789 = icmp ult i32 %5784, %5786
  %5790 = zext i1 %5789 to i8
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5790, i8* %5791, align 1
  %5792 = and i32 %5787, 255
  %5793 = call i32 @llvm.ctpop.i32(i32 %5792)
  %5794 = trunc i32 %5793 to i8
  %5795 = and i8 %5794, 1
  %5796 = xor i8 %5795, 1
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5796, i8* %5797, align 1
  %5798 = xor i32 %5786, %5784
  %5799 = xor i32 %5798, %5787
  %5800 = lshr i32 %5799, 4
  %5801 = trunc i32 %5800 to i8
  %5802 = and i8 %5801, 1
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5802, i8* %5803, align 1
  %5804 = icmp eq i32 %5787, 0
  %5805 = zext i1 %5804 to i8
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5805, i8* %5806, align 1
  %5807 = lshr i32 %5787, 31
  %5808 = trunc i32 %5807 to i8
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5808, i8* %5809, align 1
  %5810 = lshr i32 %5784, 31
  %5811 = lshr i32 %5786, 31
  %5812 = xor i32 %5811, %5810
  %5813 = xor i32 %5807, %5810
  %5814 = add i32 %5813, %5812
  %5815 = icmp eq i32 %5814, 2
  %5816 = zext i1 %5815 to i8
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5816, i8* %5817, align 1
  store %struct.Memory* %loadMem_432e77, %struct.Memory** %MEMORY
  %loadMem_432e7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5819 = getelementptr inbounds %struct.GPR, %struct.GPR* %5818, i32 0, i32 33
  %5820 = getelementptr inbounds %struct.Reg, %struct.Reg* %5819, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %5820 to i64*
  %5821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5822 = getelementptr inbounds %struct.GPR, %struct.GPR* %5821, i32 0, i32 1
  %5823 = getelementptr inbounds %struct.Reg, %struct.Reg* %5822, i32 0, i32 0
  %EAX.i547 = bitcast %union.anon* %5823 to i32*
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5825 = getelementptr inbounds %struct.GPR, %struct.GPR* %5824, i32 0, i32 1
  %5826 = getelementptr inbounds %struct.Reg, %struct.Reg* %5825, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %5826 to i64*
  %5827 = load i32, i32* %EAX.i547
  %5828 = zext i32 %5827 to i64
  %5829 = load i64, i64* %PC.i546
  %5830 = add i64 %5829, 3
  store i64 %5830, i64* %PC.i546
  %5831 = shl i64 %5828, 32
  %5832 = ashr exact i64 %5831, 32
  %5833 = mul i64 -2, %5832
  %5834 = trunc i64 %5833 to i32
  %5835 = and i64 %5833, 4294967295
  store i64 %5835, i64* %RAX.i548, align 8
  %5836 = shl i64 %5833, 32
  %5837 = ashr exact i64 %5836, 32
  %5838 = icmp ne i64 %5837, %5833
  %5839 = zext i1 %5838 to i8
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5839, i8* %5840, align 1
  %5841 = and i32 %5834, 255
  %5842 = call i32 @llvm.ctpop.i32(i32 %5841)
  %5843 = trunc i32 %5842 to i8
  %5844 = and i8 %5843, 1
  %5845 = xor i8 %5844, 1
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5845, i8* %5846, align 1
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5847, align 1
  %5848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5848, align 1
  %5849 = lshr i32 %5834, 31
  %5850 = trunc i32 %5849 to i8
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5850, i8* %5851, align 1
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5839, i8* %5852, align 1
  store %struct.Memory* %loadMem_432e7d, %struct.Memory** %MEMORY
  %loadMem_432e83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5854 = getelementptr inbounds %struct.GPR, %struct.GPR* %5853, i32 0, i32 33
  %5855 = getelementptr inbounds %struct.Reg, %struct.Reg* %5854, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %5855 to i64*
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5857 = getelementptr inbounds %struct.GPR, %struct.GPR* %5856, i32 0, i32 11
  %5858 = getelementptr inbounds %struct.Reg, %struct.Reg* %5857, i32 0, i32 0
  %RDI.i545 = bitcast %union.anon* %5858 to i64*
  %5859 = load i64, i64* %PC.i544
  %5860 = add i64 %5859, 8
  store i64 %5860, i64* %PC.i544
  %5861 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5861, i64* %RDI.i545, align 8
  store %struct.Memory* %loadMem_432e83, %struct.Memory** %MEMORY
  %loadMem_432e8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5863 = getelementptr inbounds %struct.GPR, %struct.GPR* %5862, i32 0, i32 33
  %5864 = getelementptr inbounds %struct.Reg, %struct.Reg* %5863, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %5864 to i64*
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 1
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %EAX.i542 = bitcast %union.anon* %5867 to i32*
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 11
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %RDI.i543 = bitcast %union.anon* %5870 to i64*
  %5871 = load i64, i64* %RDI.i543
  %5872 = add i64 %5871, 72436
  %5873 = load i32, i32* %EAX.i542
  %5874 = zext i32 %5873 to i64
  %5875 = load i64, i64* %PC.i541
  %5876 = add i64 %5875, 6
  store i64 %5876, i64* %PC.i541
  %5877 = inttoptr i64 %5872 to i32*
  store i32 %5873, i32* %5877
  store %struct.Memory* %loadMem_432e8b, %struct.Memory** %MEMORY
  %loadMem_432e91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5879 = getelementptr inbounds %struct.GPR, %struct.GPR* %5878, i32 0, i32 33
  %5880 = getelementptr inbounds %struct.Reg, %struct.Reg* %5879, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %5880 to i64*
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5882 = getelementptr inbounds %struct.GPR, %struct.GPR* %5881, i32 0, i32 11
  %5883 = getelementptr inbounds %struct.Reg, %struct.Reg* %5882, i32 0, i32 0
  %RDI.i540 = bitcast %union.anon* %5883 to i64*
  %5884 = load i64, i64* %PC.i539
  %5885 = add i64 %5884, 8
  store i64 %5885, i64* %PC.i539
  %5886 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5886, i64* %RDI.i540, align 8
  store %struct.Memory* %loadMem_432e91, %struct.Memory** %MEMORY
  %loadMem_432e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5888 = getelementptr inbounds %struct.GPR, %struct.GPR* %5887, i32 0, i32 33
  %5889 = getelementptr inbounds %struct.Reg, %struct.Reg* %5888, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %5889 to i64*
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5891 = getelementptr inbounds %struct.GPR, %struct.GPR* %5890, i32 0, i32 1
  %5892 = getelementptr inbounds %struct.Reg, %struct.Reg* %5891, i32 0, i32 0
  %RAX.i537 = bitcast %union.anon* %5892 to i64*
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5894 = getelementptr inbounds %struct.GPR, %struct.GPR* %5893, i32 0, i32 11
  %5895 = getelementptr inbounds %struct.Reg, %struct.Reg* %5894, i32 0, i32 0
  %RDI.i538 = bitcast %union.anon* %5895 to i64*
  %5896 = load i64, i64* %RDI.i538
  %5897 = add i64 %5896, 72436
  %5898 = load i64, i64* %PC.i536
  %5899 = add i64 %5898, 6
  store i64 %5899, i64* %PC.i536
  %5900 = inttoptr i64 %5897 to i32*
  %5901 = load i32, i32* %5900
  %5902 = zext i32 %5901 to i64
  store i64 %5902, i64* %RAX.i537, align 8
  store %struct.Memory* %loadMem_432e99, %struct.Memory** %MEMORY
  %loadMem_432e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5904 = getelementptr inbounds %struct.GPR, %struct.GPR* %5903, i32 0, i32 33
  %5905 = getelementptr inbounds %struct.Reg, %struct.Reg* %5904, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %5905 to i64*
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5907 = getelementptr inbounds %struct.GPR, %struct.GPR* %5906, i32 0, i32 11
  %5908 = getelementptr inbounds %struct.Reg, %struct.Reg* %5907, i32 0, i32 0
  %RDI.i535 = bitcast %union.anon* %5908 to i64*
  %5909 = load i64, i64* %PC.i534
  %5910 = add i64 %5909, 8
  store i64 %5910, i64* %PC.i534
  %5911 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5911, i64* %RDI.i535, align 8
  store %struct.Memory* %loadMem_432e9f, %struct.Memory** %MEMORY
  %loadMem_432ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5913 = getelementptr inbounds %struct.GPR, %struct.GPR* %5912, i32 0, i32 33
  %5914 = getelementptr inbounds %struct.Reg, %struct.Reg* %5913, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %5914 to i64*
  %5915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5916 = getelementptr inbounds %struct.GPR, %struct.GPR* %5915, i32 0, i32 1
  %5917 = getelementptr inbounds %struct.Reg, %struct.Reg* %5916, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %5917 to i64*
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5919 = getelementptr inbounds %struct.GPR, %struct.GPR* %5918, i32 0, i32 11
  %5920 = getelementptr inbounds %struct.Reg, %struct.Reg* %5919, i32 0, i32 0
  %RDI.i533 = bitcast %union.anon* %5920 to i64*
  %5921 = load i64, i64* %RAX.i532
  %5922 = load i64, i64* %RDI.i533
  %5923 = add i64 %5922, 72448
  %5924 = load i64, i64* %PC.i531
  %5925 = add i64 %5924, 6
  store i64 %5925, i64* %PC.i531
  %5926 = trunc i64 %5921 to i32
  %5927 = inttoptr i64 %5923 to i32*
  %5928 = load i32, i32* %5927
  %5929 = add i32 %5928, %5926
  %5930 = zext i32 %5929 to i64
  store i64 %5930, i64* %RAX.i532, align 8
  %5931 = icmp ult i32 %5929, %5926
  %5932 = icmp ult i32 %5929, %5928
  %5933 = or i1 %5931, %5932
  %5934 = zext i1 %5933 to i8
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5934, i8* %5935, align 1
  %5936 = and i32 %5929, 255
  %5937 = call i32 @llvm.ctpop.i32(i32 %5936)
  %5938 = trunc i32 %5937 to i8
  %5939 = and i8 %5938, 1
  %5940 = xor i8 %5939, 1
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5940, i8* %5941, align 1
  %5942 = xor i32 %5928, %5926
  %5943 = xor i32 %5942, %5929
  %5944 = lshr i32 %5943, 4
  %5945 = trunc i32 %5944 to i8
  %5946 = and i8 %5945, 1
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5946, i8* %5947, align 1
  %5948 = icmp eq i32 %5929, 0
  %5949 = zext i1 %5948 to i8
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5949, i8* %5950, align 1
  %5951 = lshr i32 %5929, 31
  %5952 = trunc i32 %5951 to i8
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5952, i8* %5953, align 1
  %5954 = lshr i32 %5926, 31
  %5955 = lshr i32 %5928, 31
  %5956 = xor i32 %5951, %5954
  %5957 = xor i32 %5951, %5955
  %5958 = add i32 %5956, %5957
  %5959 = icmp eq i32 %5958, 2
  %5960 = zext i1 %5959 to i8
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5960, i8* %5961, align 1
  store %struct.Memory* %loadMem_432ea7, %struct.Memory** %MEMORY
  %loadMem_432ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5963 = getelementptr inbounds %struct.GPR, %struct.GPR* %5962, i32 0, i32 33
  %5964 = getelementptr inbounds %struct.Reg, %struct.Reg* %5963, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %5964 to i64*
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5966 = getelementptr inbounds %struct.GPR, %struct.GPR* %5965, i32 0, i32 1
  %5967 = getelementptr inbounds %struct.Reg, %struct.Reg* %5966, i32 0, i32 0
  %EAX.i529 = bitcast %union.anon* %5967 to i32*
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5969 = getelementptr inbounds %struct.GPR, %struct.GPR* %5968, i32 0, i32 11
  %5970 = getelementptr inbounds %struct.Reg, %struct.Reg* %5969, i32 0, i32 0
  %RDI.i530 = bitcast %union.anon* %5970 to i64*
  %5971 = load i64, i64* %RDI.i530
  %5972 = add i64 %5971, 72448
  %5973 = load i32, i32* %EAX.i529
  %5974 = zext i32 %5973 to i64
  %5975 = load i64, i64* %PC.i528
  %5976 = add i64 %5975, 6
  store i64 %5976, i64* %PC.i528
  %5977 = inttoptr i64 %5972 to i32*
  store i32 %5973, i32* %5977
  store %struct.Memory* %loadMem_432ead, %struct.Memory** %MEMORY
  %loadMem_432eb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5979 = getelementptr inbounds %struct.GPR, %struct.GPR* %5978, i32 0, i32 33
  %5980 = getelementptr inbounds %struct.Reg, %struct.Reg* %5979, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %5980 to i64*
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5982 = getelementptr inbounds %struct.GPR, %struct.GPR* %5981, i32 0, i32 11
  %5983 = getelementptr inbounds %struct.Reg, %struct.Reg* %5982, i32 0, i32 0
  %RDI.i527 = bitcast %union.anon* %5983 to i64*
  %5984 = load i64, i64* %PC.i526
  %5985 = add i64 %5984, 8
  store i64 %5985, i64* %PC.i526
  %5986 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5986, i64* %RDI.i527, align 8
  store %struct.Memory* %loadMem_432eb3, %struct.Memory** %MEMORY
  %loadMem_432ebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5988 = getelementptr inbounds %struct.GPR, %struct.GPR* %5987, i32 0, i32 33
  %5989 = getelementptr inbounds %struct.Reg, %struct.Reg* %5988, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %5989 to i64*
  %5990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5991 = getelementptr inbounds %struct.GPR, %struct.GPR* %5990, i32 0, i32 1
  %5992 = getelementptr inbounds %struct.Reg, %struct.Reg* %5991, i32 0, i32 0
  %RAX.i524 = bitcast %union.anon* %5992 to i64*
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5994 = getelementptr inbounds %struct.GPR, %struct.GPR* %5993, i32 0, i32 11
  %5995 = getelementptr inbounds %struct.Reg, %struct.Reg* %5994, i32 0, i32 0
  %RDI.i525 = bitcast %union.anon* %5995 to i64*
  %5996 = load i64, i64* %RDI.i525
  %5997 = add i64 %5996, 72436
  %5998 = load i64, i64* %PC.i523
  %5999 = add i64 %5998, 6
  store i64 %5999, i64* %PC.i523
  %6000 = inttoptr i64 %5997 to i32*
  %6001 = load i32, i32* %6000
  %6002 = zext i32 %6001 to i64
  store i64 %6002, i64* %RAX.i524, align 8
  store %struct.Memory* %loadMem_432ebb, %struct.Memory** %MEMORY
  %loadMem_432ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6004 = getelementptr inbounds %struct.GPR, %struct.GPR* %6003, i32 0, i32 33
  %6005 = getelementptr inbounds %struct.Reg, %struct.Reg* %6004, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %6005 to i64*
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6007 = getelementptr inbounds %struct.GPR, %struct.GPR* %6006, i32 0, i32 11
  %6008 = getelementptr inbounds %struct.Reg, %struct.Reg* %6007, i32 0, i32 0
  %RDI.i522 = bitcast %union.anon* %6008 to i64*
  %6009 = load i64, i64* %PC.i521
  %6010 = add i64 %6009, 8
  store i64 %6010, i64* %PC.i521
  %6011 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6011, i64* %RDI.i522, align 8
  store %struct.Memory* %loadMem_432ec1, %struct.Memory** %MEMORY
  %loadMem_432ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 33
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %6014 to i64*
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6016 = getelementptr inbounds %struct.GPR, %struct.GPR* %6015, i32 0, i32 1
  %6017 = getelementptr inbounds %struct.Reg, %struct.Reg* %6016, i32 0, i32 0
  %RAX.i519 = bitcast %union.anon* %6017 to i64*
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6019 = getelementptr inbounds %struct.GPR, %struct.GPR* %6018, i32 0, i32 11
  %6020 = getelementptr inbounds %struct.Reg, %struct.Reg* %6019, i32 0, i32 0
  %RDI.i520 = bitcast %union.anon* %6020 to i64*
  %6021 = load i64, i64* %RAX.i519
  %6022 = load i64, i64* %RDI.i520
  %6023 = add i64 %6022, 72452
  %6024 = load i64, i64* %PC.i518
  %6025 = add i64 %6024, 6
  store i64 %6025, i64* %PC.i518
  %6026 = trunc i64 %6021 to i32
  %6027 = inttoptr i64 %6023 to i32*
  %6028 = load i32, i32* %6027
  %6029 = add i32 %6028, %6026
  %6030 = zext i32 %6029 to i64
  store i64 %6030, i64* %RAX.i519, align 8
  %6031 = icmp ult i32 %6029, %6026
  %6032 = icmp ult i32 %6029, %6028
  %6033 = or i1 %6031, %6032
  %6034 = zext i1 %6033 to i8
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6034, i8* %6035, align 1
  %6036 = and i32 %6029, 255
  %6037 = call i32 @llvm.ctpop.i32(i32 %6036)
  %6038 = trunc i32 %6037 to i8
  %6039 = and i8 %6038, 1
  %6040 = xor i8 %6039, 1
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6040, i8* %6041, align 1
  %6042 = xor i32 %6028, %6026
  %6043 = xor i32 %6042, %6029
  %6044 = lshr i32 %6043, 4
  %6045 = trunc i32 %6044 to i8
  %6046 = and i8 %6045, 1
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6046, i8* %6047, align 1
  %6048 = icmp eq i32 %6029, 0
  %6049 = zext i1 %6048 to i8
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6049, i8* %6050, align 1
  %6051 = lshr i32 %6029, 31
  %6052 = trunc i32 %6051 to i8
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6052, i8* %6053, align 1
  %6054 = lshr i32 %6026, 31
  %6055 = lshr i32 %6028, 31
  %6056 = xor i32 %6051, %6054
  %6057 = xor i32 %6051, %6055
  %6058 = add i32 %6056, %6057
  %6059 = icmp eq i32 %6058, 2
  %6060 = zext i1 %6059 to i8
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6060, i8* %6061, align 1
  store %struct.Memory* %loadMem_432ec9, %struct.Memory** %MEMORY
  %loadMem_432ecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6063 = getelementptr inbounds %struct.GPR, %struct.GPR* %6062, i32 0, i32 33
  %6064 = getelementptr inbounds %struct.Reg, %struct.Reg* %6063, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %6064 to i64*
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6066 = getelementptr inbounds %struct.GPR, %struct.GPR* %6065, i32 0, i32 1
  %6067 = getelementptr inbounds %struct.Reg, %struct.Reg* %6066, i32 0, i32 0
  %EAX.i516 = bitcast %union.anon* %6067 to i32*
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6069 = getelementptr inbounds %struct.GPR, %struct.GPR* %6068, i32 0, i32 11
  %6070 = getelementptr inbounds %struct.Reg, %struct.Reg* %6069, i32 0, i32 0
  %RDI.i517 = bitcast %union.anon* %6070 to i64*
  %6071 = load i64, i64* %RDI.i517
  %6072 = add i64 %6071, 72452
  %6073 = load i32, i32* %EAX.i516
  %6074 = zext i32 %6073 to i64
  %6075 = load i64, i64* %PC.i515
  %6076 = add i64 %6075, 6
  store i64 %6076, i64* %PC.i515
  %6077 = inttoptr i64 %6072 to i32*
  store i32 %6073, i32* %6077
  store %struct.Memory* %loadMem_432ecf, %struct.Memory** %MEMORY
  br label %block_.L_432ed5

block_.L_432ed5:                                  ; preds = %routine_idivl_MINUS0x28__rbp_.exit, %block_432db5, %block_432da0, %block_.L_432d86
  %loadMem_432ed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6079 = getelementptr inbounds %struct.GPR, %struct.GPR* %6078, i32 0, i32 33
  %6080 = getelementptr inbounds %struct.Reg, %struct.Reg* %6079, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %6080 to i64*
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6082 = getelementptr inbounds %struct.GPR, %struct.GPR* %6081, i32 0, i32 1
  %6083 = getelementptr inbounds %struct.Reg, %struct.Reg* %6082, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %6083 to i64*
  %6084 = load i64, i64* %PC.i513
  %6085 = add i64 %6084, 8
  store i64 %6085, i64* %PC.i513
  %6086 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6086, i64* %RAX.i514, align 8
  store %struct.Memory* %loadMem_432ed5, %struct.Memory** %MEMORY
  %loadMem_432edd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6088 = getelementptr inbounds %struct.GPR, %struct.GPR* %6087, i32 0, i32 33
  %6089 = getelementptr inbounds %struct.Reg, %struct.Reg* %6088, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %6089 to i64*
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 1
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %RAX.i512 = bitcast %union.anon* %6092 to i64*
  %6093 = load i64, i64* %RAX.i512
  %6094 = add i64 %6093, 24
  %6095 = load i64, i64* %PC.i511
  %6096 = add i64 %6095, 4
  store i64 %6096, i64* %PC.i511
  %6097 = inttoptr i64 %6094 to i32*
  %6098 = load i32, i32* %6097
  %6099 = sub i32 %6098, 2
  %6100 = icmp ult i32 %6098, 2
  %6101 = zext i1 %6100 to i8
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6101, i8* %6102, align 1
  %6103 = and i32 %6099, 255
  %6104 = call i32 @llvm.ctpop.i32(i32 %6103)
  %6105 = trunc i32 %6104 to i8
  %6106 = and i8 %6105, 1
  %6107 = xor i8 %6106, 1
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6107, i8* %6108, align 1
  %6109 = xor i32 %6098, 2
  %6110 = xor i32 %6109, %6099
  %6111 = lshr i32 %6110, 4
  %6112 = trunc i32 %6111 to i8
  %6113 = and i8 %6112, 1
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6113, i8* %6114, align 1
  %6115 = icmp eq i32 %6099, 0
  %6116 = zext i1 %6115 to i8
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6116, i8* %6117, align 1
  %6118 = lshr i32 %6099, 31
  %6119 = trunc i32 %6118 to i8
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6119, i8* %6120, align 1
  %6121 = lshr i32 %6098, 31
  %6122 = xor i32 %6118, %6121
  %6123 = add i32 %6122, %6121
  %6124 = icmp eq i32 %6123, 2
  %6125 = zext i1 %6124 to i8
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6125, i8* %6126, align 1
  store %struct.Memory* %loadMem_432edd, %struct.Memory** %MEMORY
  %loadMem_432ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6128 = getelementptr inbounds %struct.GPR, %struct.GPR* %6127, i32 0, i32 33
  %6129 = getelementptr inbounds %struct.Reg, %struct.Reg* %6128, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %6129 to i64*
  %6130 = load i64, i64* %PC.i510
  %6131 = add i64 %6130, 565
  %6132 = load i64, i64* %PC.i510
  %6133 = add i64 %6132, 6
  %6134 = load i64, i64* %PC.i510
  %6135 = add i64 %6134, 6
  store i64 %6135, i64* %PC.i510
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6137 = load i8, i8* %6136, align 1
  %6138 = icmp eq i8 %6137, 0
  %6139 = zext i1 %6138 to i8
  store i8 %6139, i8* %BRANCH_TAKEN, align 1
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6141 = select i1 %6138, i64 %6131, i64 %6133
  store i64 %6141, i64* %6140, align 8
  store %struct.Memory* %loadMem_432ee1, %struct.Memory** %MEMORY
  %loadBr_432ee1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432ee1 = icmp eq i8 %loadBr_432ee1, 1
  br i1 %cmpBr_432ee1, label %block_.L_433116, label %block_432ee7

block_432ee7:                                     ; preds = %block_.L_432ed5
  %loadMem_432ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6143 = getelementptr inbounds %struct.GPR, %struct.GPR* %6142, i32 0, i32 33
  %6144 = getelementptr inbounds %struct.Reg, %struct.Reg* %6143, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %6144 to i64*
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6146 = getelementptr inbounds %struct.GPR, %struct.GPR* %6145, i32 0, i32 1
  %6147 = getelementptr inbounds %struct.Reg, %struct.Reg* %6146, i32 0, i32 0
  %RAX.i509 = bitcast %union.anon* %6147 to i64*
  %6148 = load i64, i64* %PC.i508
  %6149 = add i64 %6148, 8
  store i64 %6149, i64* %PC.i508
  %6150 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6150, i64* %RAX.i509, align 8
  store %struct.Memory* %loadMem_432ee7, %struct.Memory** %MEMORY
  %loadMem_432eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6152 = getelementptr inbounds %struct.GPR, %struct.GPR* %6151, i32 0, i32 33
  %6153 = getelementptr inbounds %struct.Reg, %struct.Reg* %6152, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %6153 to i64*
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6155 = getelementptr inbounds %struct.GPR, %struct.GPR* %6154, i32 0, i32 1
  %6156 = getelementptr inbounds %struct.Reg, %struct.Reg* %6155, i32 0, i32 0
  %RAX.i507 = bitcast %union.anon* %6156 to i64*
  %6157 = load i64, i64* %RAX.i507
  %6158 = add i64 %6157, 3236
  %6159 = load i64, i64* %PC.i506
  %6160 = add i64 %6159, 7
  store i64 %6160, i64* %PC.i506
  %6161 = inttoptr i64 %6158 to i32*
  %6162 = load i32, i32* %6161
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6163, align 1
  %6164 = and i32 %6162, 255
  %6165 = call i32 @llvm.ctpop.i32(i32 %6164)
  %6166 = trunc i32 %6165 to i8
  %6167 = and i8 %6166, 1
  %6168 = xor i8 %6167, 1
  %6169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6168, i8* %6169, align 1
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6170, align 1
  %6171 = icmp eq i32 %6162, 0
  %6172 = zext i1 %6171 to i8
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6172, i8* %6173, align 1
  %6174 = lshr i32 %6162, 31
  %6175 = trunc i32 %6174 to i8
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6175, i8* %6176, align 1
  %6177 = lshr i32 %6162, 31
  %6178 = xor i32 %6174, %6177
  %6179 = add i32 %6178, %6177
  %6180 = icmp eq i32 %6179, 2
  %6181 = zext i1 %6180 to i8
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6181, i8* %6182, align 1
  store %struct.Memory* %loadMem_432eef, %struct.Memory** %MEMORY
  %loadMem_432ef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 33
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %6185 to i64*
  %6186 = load i64, i64* %PC.i505
  %6187 = add i64 %6186, 539
  %6188 = load i64, i64* %PC.i505
  %6189 = add i64 %6188, 6
  %6190 = load i64, i64* %PC.i505
  %6191 = add i64 %6190, 6
  store i64 %6191, i64* %PC.i505
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6193 = load i8, i8* %6192, align 1
  store i8 %6193, i8* %BRANCH_TAKEN, align 1
  %6194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6195 = icmp ne i8 %6193, 0
  %6196 = select i1 %6195, i64 %6187, i64 %6189
  store i64 %6196, i64* %6194, align 8
  store %struct.Memory* %loadMem_432ef6, %struct.Memory** %MEMORY
  %loadBr_432ef6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432ef6 = icmp eq i8 %loadBr_432ef6, 1
  br i1 %cmpBr_432ef6, label %block_.L_433111, label %block_432efc

block_432efc:                                     ; preds = %block_432ee7
  %loadMem_432efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6198 = getelementptr inbounds %struct.GPR, %struct.GPR* %6197, i32 0, i32 33
  %6199 = getelementptr inbounds %struct.Reg, %struct.Reg* %6198, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %6199 to i64*
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6201 = getelementptr inbounds %struct.GPR, %struct.GPR* %6200, i32 0, i32 1
  %6202 = getelementptr inbounds %struct.Reg, %struct.Reg* %6201, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %6202 to i64*
  %6203 = load i64, i64* %PC.i503
  %6204 = add i64 %6203, 8
  store i64 %6204, i64* %PC.i503
  %6205 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6205, i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_432efc, %struct.Memory** %MEMORY
  %loadMem_432f04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6207 = getelementptr inbounds %struct.GPR, %struct.GPR* %6206, i32 0, i32 33
  %6208 = getelementptr inbounds %struct.Reg, %struct.Reg* %6207, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %6208 to i64*
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6210 = getelementptr inbounds %struct.GPR, %struct.GPR* %6209, i32 0, i32 1
  %6211 = getelementptr inbounds %struct.Reg, %struct.Reg* %6210, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %6211 to i64*
  %6212 = load i64, i64* %RAX.i502
  %6213 = add i64 %6212, 1224
  %6214 = load i64, i64* %PC.i501
  %6215 = add i64 %6214, 7
  store i64 %6215, i64* %PC.i501
  %6216 = inttoptr i64 %6213 to i32*
  %6217 = load i32, i32* %6216
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6218, align 1
  %6219 = and i32 %6217, 255
  %6220 = call i32 @llvm.ctpop.i32(i32 %6219)
  %6221 = trunc i32 %6220 to i8
  %6222 = and i8 %6221, 1
  %6223 = xor i8 %6222, 1
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6223, i8* %6224, align 1
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6225, align 1
  %6226 = icmp eq i32 %6217, 0
  %6227 = zext i1 %6226 to i8
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6227, i8* %6228, align 1
  %6229 = lshr i32 %6217, 31
  %6230 = trunc i32 %6229 to i8
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6230, i8* %6231, align 1
  %6232 = lshr i32 %6217, 31
  %6233 = xor i32 %6229, %6232
  %6234 = add i32 %6233, %6232
  %6235 = icmp eq i32 %6234, 2
  %6236 = zext i1 %6235 to i8
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6236, i8* %6237, align 1
  store %struct.Memory* %loadMem_432f04, %struct.Memory** %MEMORY
  %loadMem_432f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6239 = getelementptr inbounds %struct.GPR, %struct.GPR* %6238, i32 0, i32 33
  %6240 = getelementptr inbounds %struct.Reg, %struct.Reg* %6239, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %6240 to i64*
  %6241 = load i64, i64* %PC.i500
  %6242 = add i64 %6241, 105
  %6243 = load i64, i64* %PC.i500
  %6244 = add i64 %6243, 6
  %6245 = load i64, i64* %PC.i500
  %6246 = add i64 %6245, 6
  store i64 %6246, i64* %PC.i500
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6248 = load i8, i8* %6247, align 1
  %6249 = icmp eq i8 %6248, 0
  %6250 = zext i1 %6249 to i8
  store i8 %6250, i8* %BRANCH_TAKEN, align 1
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6252 = select i1 %6249, i64 %6242, i64 %6244
  store i64 %6252, i64* %6251, align 8
  store %struct.Memory* %loadMem_432f0b, %struct.Memory** %MEMORY
  %loadBr_432f0b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432f0b = icmp eq i8 %loadBr_432f0b, 1
  br i1 %cmpBr_432f0b, label %block_.L_432f74, label %block_432f11

block_432f11:                                     ; preds = %block_432efc
  %loadMem_432f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6254 = getelementptr inbounds %struct.GPR, %struct.GPR* %6253, i32 0, i32 33
  %6255 = getelementptr inbounds %struct.Reg, %struct.Reg* %6254, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %6255 to i64*
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6257 = getelementptr inbounds %struct.GPR, %struct.GPR* %6256, i32 0, i32 1
  %6258 = getelementptr inbounds %struct.Reg, %struct.Reg* %6257, i32 0, i32 0
  %RAX.i499 = bitcast %union.anon* %6258 to i64*
  %6259 = load i64, i64* %PC.i498
  %6260 = add i64 %6259, 8
  store i64 %6260, i64* %PC.i498
  %6261 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6261, i64* %RAX.i499, align 8
  store %struct.Memory* %loadMem_432f11, %struct.Memory** %MEMORY
  %loadMem_432f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6263 = getelementptr inbounds %struct.GPR, %struct.GPR* %6262, i32 0, i32 33
  %6264 = getelementptr inbounds %struct.Reg, %struct.Reg* %6263, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6264 to i64*
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6266 = getelementptr inbounds %struct.GPR, %struct.GPR* %6265, i32 0, i32 1
  %6267 = getelementptr inbounds %struct.Reg, %struct.Reg* %6266, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %6267 to i64*
  %6268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6269 = getelementptr inbounds %struct.GPR, %struct.GPR* %6268, i32 0, i32 5
  %6270 = getelementptr inbounds %struct.Reg, %struct.Reg* %6269, i32 0, i32 0
  %RCX.i497 = bitcast %union.anon* %6270 to i64*
  %6271 = load i64, i64* %RAX.i496
  %6272 = add i64 %6271, 8
  %6273 = load i64, i64* %PC.i495
  %6274 = add i64 %6273, 3
  store i64 %6274, i64* %PC.i495
  %6275 = inttoptr i64 %6272 to i32*
  %6276 = load i32, i32* %6275
  %6277 = zext i32 %6276 to i64
  store i64 %6277, i64* %RCX.i497, align 8
  store %struct.Memory* %loadMem_432f19, %struct.Memory** %MEMORY
  %loadMem_432f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6279 = getelementptr inbounds %struct.GPR, %struct.GPR* %6278, i32 0, i32 33
  %6280 = getelementptr inbounds %struct.Reg, %struct.Reg* %6279, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %6280 to i64*
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6282 = getelementptr inbounds %struct.GPR, %struct.GPR* %6281, i32 0, i32 1
  %6283 = getelementptr inbounds %struct.Reg, %struct.Reg* %6282, i32 0, i32 0
  %RAX.i494 = bitcast %union.anon* %6283 to i64*
  %6284 = load i64, i64* %PC.i493
  %6285 = add i64 %6284, 8
  store i64 %6285, i64* %PC.i493
  %6286 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6286, i64* %RAX.i494, align 8
  store %struct.Memory* %loadMem_432f1c, %struct.Memory** %MEMORY
  %loadMem_432f24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6288 = getelementptr inbounds %struct.GPR, %struct.GPR* %6287, i32 0, i32 33
  %6289 = getelementptr inbounds %struct.Reg, %struct.Reg* %6288, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %6289 to i64*
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6291 = getelementptr inbounds %struct.GPR, %struct.GPR* %6290, i32 0, i32 1
  %6292 = getelementptr inbounds %struct.Reg, %struct.Reg* %6291, i32 0, i32 0
  %RAX.i491 = bitcast %union.anon* %6292 to i64*
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6294 = getelementptr inbounds %struct.GPR, %struct.GPR* %6293, i32 0, i32 7
  %6295 = getelementptr inbounds %struct.Reg, %struct.Reg* %6294, i32 0, i32 0
  %RDX.i492 = bitcast %union.anon* %6295 to i64*
  %6296 = load i64, i64* %RAX.i491
  %6297 = add i64 %6296, 8
  %6298 = load i64, i64* %PC.i490
  %6299 = add i64 %6298, 3
  store i64 %6299, i64* %PC.i490
  %6300 = inttoptr i64 %6297 to i32*
  %6301 = load i32, i32* %6300
  %6302 = zext i32 %6301 to i64
  store i64 %6302, i64* %RDX.i492, align 8
  store %struct.Memory* %loadMem_432f24, %struct.Memory** %MEMORY
  %loadMem_432f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 33
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %6305 to i64*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 7
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %RDX.i489 = bitcast %union.anon* %6308 to i64*
  %6309 = load i64, i64* %RDX.i489
  %6310 = load i64, i64* %PC.i488
  %6311 = add i64 %6310, 3
  store i64 %6311, i64* %PC.i488
  %6312 = trunc i64 %6309 to i32
  %6313 = sub i32 %6312, 1
  %6314 = zext i32 %6313 to i64
  store i64 %6314, i64* %RDX.i489, align 8
  %6315 = icmp ult i32 %6312, 1
  %6316 = zext i1 %6315 to i8
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6316, i8* %6317, align 1
  %6318 = and i32 %6313, 255
  %6319 = call i32 @llvm.ctpop.i32(i32 %6318)
  %6320 = trunc i32 %6319 to i8
  %6321 = and i8 %6320, 1
  %6322 = xor i8 %6321, 1
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6322, i8* %6323, align 1
  %6324 = xor i64 1, %6309
  %6325 = trunc i64 %6324 to i32
  %6326 = xor i32 %6325, %6313
  %6327 = lshr i32 %6326, 4
  %6328 = trunc i32 %6327 to i8
  %6329 = and i8 %6328, 1
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6329, i8* %6330, align 1
  %6331 = icmp eq i32 %6313, 0
  %6332 = zext i1 %6331 to i8
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6332, i8* %6333, align 1
  %6334 = lshr i32 %6313, 31
  %6335 = trunc i32 %6334 to i8
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6335, i8* %6336, align 1
  %6337 = lshr i32 %6312, 31
  %6338 = xor i32 %6334, %6337
  %6339 = add i32 %6338, %6337
  %6340 = icmp eq i32 %6339, 2
  %6341 = zext i1 %6340 to i8
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6341, i8* %6342, align 1
  store %struct.Memory* %loadMem_432f27, %struct.Memory** %MEMORY
  %loadMem_432f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6344 = getelementptr inbounds %struct.GPR, %struct.GPR* %6343, i32 0, i32 33
  %6345 = getelementptr inbounds %struct.Reg, %struct.Reg* %6344, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %6345 to i64*
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6347 = getelementptr inbounds %struct.GPR, %struct.GPR* %6346, i32 0, i32 1
  %6348 = getelementptr inbounds %struct.Reg, %struct.Reg* %6347, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %6348 to i64*
  %6349 = load i64, i64* %PC.i486
  %6350 = add i64 %6349, 8
  store i64 %6350, i64* %PC.i486
  %6351 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6351, i64* %RAX.i487, align 8
  store %struct.Memory* %loadMem_432f2a, %struct.Memory** %MEMORY
  %loadMem_432f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6353 = getelementptr inbounds %struct.GPR, %struct.GPR* %6352, i32 0, i32 33
  %6354 = getelementptr inbounds %struct.Reg, %struct.Reg* %6353, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %6354 to i64*
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6356 = getelementptr inbounds %struct.GPR, %struct.GPR* %6355, i32 0, i32 1
  %6357 = getelementptr inbounds %struct.Reg, %struct.Reg* %6356, i32 0, i32 0
  %RAX.i484 = bitcast %union.anon* %6357 to i64*
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6359 = getelementptr inbounds %struct.GPR, %struct.GPR* %6358, i32 0, i32 7
  %6360 = getelementptr inbounds %struct.Reg, %struct.Reg* %6359, i32 0, i32 0
  %RDX.i485 = bitcast %union.anon* %6360 to i64*
  %6361 = load i64, i64* %RDX.i485
  %6362 = load i64, i64* %RAX.i484
  %6363 = add i64 %6362, 1236
  %6364 = load i64, i64* %PC.i483
  %6365 = add i64 %6364, 7
  store i64 %6365, i64* %PC.i483
  %6366 = inttoptr i64 %6363 to i32*
  %6367 = load i32, i32* %6366
  %6368 = shl i64 %6361, 32
  %6369 = ashr exact i64 %6368, 32
  %6370 = sext i32 %6367 to i64
  %6371 = mul i64 %6370, %6369
  %6372 = trunc i64 %6371 to i32
  %6373 = and i64 %6371, 4294967295
  store i64 %6373, i64* %RDX.i485, align 8
  %6374 = shl i64 %6371, 32
  %6375 = ashr exact i64 %6374, 32
  %6376 = icmp ne i64 %6375, %6371
  %6377 = zext i1 %6376 to i8
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6377, i8* %6378, align 1
  %6379 = and i32 %6372, 255
  %6380 = call i32 @llvm.ctpop.i32(i32 %6379)
  %6381 = trunc i32 %6380 to i8
  %6382 = and i8 %6381, 1
  %6383 = xor i8 %6382, 1
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6383, i8* %6384, align 1
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6385, align 1
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6386, align 1
  %6387 = lshr i32 %6372, 31
  %6388 = trunc i32 %6387 to i8
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6388, i8* %6389, align 1
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6377, i8* %6390, align 1
  store %struct.Memory* %loadMem_432f32, %struct.Memory** %MEMORY
  %loadMem_432f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6392 = getelementptr inbounds %struct.GPR, %struct.GPR* %6391, i32 0, i32 33
  %6393 = getelementptr inbounds %struct.Reg, %struct.Reg* %6392, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %6393 to i64*
  %6394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6395 = getelementptr inbounds %struct.GPR, %struct.GPR* %6394, i32 0, i32 7
  %6396 = getelementptr inbounds %struct.Reg, %struct.Reg* %6395, i32 0, i32 0
  %EDX.i481 = bitcast %union.anon* %6396 to i32*
  %6397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6398 = getelementptr inbounds %struct.GPR, %struct.GPR* %6397, i32 0, i32 5
  %6399 = getelementptr inbounds %struct.Reg, %struct.Reg* %6398, i32 0, i32 0
  %RCX.i482 = bitcast %union.anon* %6399 to i64*
  %6400 = load i64, i64* %RCX.i482
  %6401 = load i32, i32* %EDX.i481
  %6402 = zext i32 %6401 to i64
  %6403 = load i64, i64* %PC.i480
  %6404 = add i64 %6403, 2
  store i64 %6404, i64* %PC.i480
  %6405 = trunc i64 %6400 to i32
  %6406 = add i32 %6401, %6405
  %6407 = zext i32 %6406 to i64
  store i64 %6407, i64* %RCX.i482, align 8
  %6408 = icmp ult i32 %6406, %6405
  %6409 = icmp ult i32 %6406, %6401
  %6410 = or i1 %6408, %6409
  %6411 = zext i1 %6410 to i8
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6411, i8* %6412, align 1
  %6413 = and i32 %6406, 255
  %6414 = call i32 @llvm.ctpop.i32(i32 %6413)
  %6415 = trunc i32 %6414 to i8
  %6416 = and i8 %6415, 1
  %6417 = xor i8 %6416, 1
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6417, i8* %6418, align 1
  %6419 = xor i64 %6402, %6400
  %6420 = trunc i64 %6419 to i32
  %6421 = xor i32 %6420, %6406
  %6422 = lshr i32 %6421, 4
  %6423 = trunc i32 %6422 to i8
  %6424 = and i8 %6423, 1
  %6425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6424, i8* %6425, align 1
  %6426 = icmp eq i32 %6406, 0
  %6427 = zext i1 %6426 to i8
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6427, i8* %6428, align 1
  %6429 = lshr i32 %6406, 31
  %6430 = trunc i32 %6429 to i8
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6430, i8* %6431, align 1
  %6432 = lshr i32 %6405, 31
  %6433 = lshr i32 %6401, 31
  %6434 = xor i32 %6429, %6432
  %6435 = xor i32 %6429, %6433
  %6436 = add i32 %6434, %6435
  %6437 = icmp eq i32 %6436, 2
  %6438 = zext i1 %6437 to i8
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6438, i8* %6439, align 1
  store %struct.Memory* %loadMem_432f39, %struct.Memory** %MEMORY
  %loadMem_432f3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6441 = getelementptr inbounds %struct.GPR, %struct.GPR* %6440, i32 0, i32 33
  %6442 = getelementptr inbounds %struct.Reg, %struct.Reg* %6441, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %6442 to i64*
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6444 = getelementptr inbounds %struct.GPR, %struct.GPR* %6443, i32 0, i32 5
  %6445 = getelementptr inbounds %struct.Reg, %struct.Reg* %6444, i32 0, i32 0
  %ECX.i478 = bitcast %union.anon* %6445 to i32*
  %6446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6447 = getelementptr inbounds %struct.GPR, %struct.GPR* %6446, i32 0, i32 15
  %6448 = getelementptr inbounds %struct.Reg, %struct.Reg* %6447, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %6448 to i64*
  %6449 = load i64, i64* %RBP.i479
  %6450 = sub i64 %6449, 28
  %6451 = load i32, i32* %ECX.i478
  %6452 = zext i32 %6451 to i64
  %6453 = load i64, i64* %PC.i477
  %6454 = add i64 %6453, 3
  store i64 %6454, i64* %PC.i477
  %6455 = inttoptr i64 %6450 to i32*
  store i32 %6451, i32* %6455
  store %struct.Memory* %loadMem_432f3b, %struct.Memory** %MEMORY
  %loadMem_432f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6457 = getelementptr inbounds %struct.GPR, %struct.GPR* %6456, i32 0, i32 33
  %6458 = getelementptr inbounds %struct.Reg, %struct.Reg* %6457, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %6458 to i64*
  %6459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6460 = getelementptr inbounds %struct.GPR, %struct.GPR* %6459, i32 0, i32 1
  %6461 = getelementptr inbounds %struct.Reg, %struct.Reg* %6460, i32 0, i32 0
  %RAX.i476 = bitcast %union.anon* %6461 to i64*
  %6462 = load i64, i64* %PC.i475
  %6463 = add i64 %6462, 8
  store i64 %6463, i64* %PC.i475
  %6464 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6464, i64* %RAX.i476, align 8
  store %struct.Memory* %loadMem_432f3e, %struct.Memory** %MEMORY
  %loadMem_432f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6466 = getelementptr inbounds %struct.GPR, %struct.GPR* %6465, i32 0, i32 33
  %6467 = getelementptr inbounds %struct.Reg, %struct.Reg* %6466, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %6467 to i64*
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6469 = getelementptr inbounds %struct.GPR, %struct.GPR* %6468, i32 0, i32 1
  %6470 = getelementptr inbounds %struct.Reg, %struct.Reg* %6469, i32 0, i32 0
  %RAX.i473 = bitcast %union.anon* %6470 to i64*
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6472 = getelementptr inbounds %struct.GPR, %struct.GPR* %6471, i32 0, i32 5
  %6473 = getelementptr inbounds %struct.Reg, %struct.Reg* %6472, i32 0, i32 0
  %RCX.i474 = bitcast %union.anon* %6473 to i64*
  %6474 = load i64, i64* %RAX.i473
  %6475 = add i64 %6474, 8
  %6476 = load i64, i64* %PC.i472
  %6477 = add i64 %6476, 3
  store i64 %6477, i64* %PC.i472
  %6478 = inttoptr i64 %6475 to i32*
  %6479 = load i32, i32* %6478
  %6480 = zext i32 %6479 to i64
  store i64 %6480, i64* %RCX.i474, align 8
  store %struct.Memory* %loadMem_432f46, %struct.Memory** %MEMORY
  %loadMem_432f49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6482 = getelementptr inbounds %struct.GPR, %struct.GPR* %6481, i32 0, i32 33
  %6483 = getelementptr inbounds %struct.Reg, %struct.Reg* %6482, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %6483 to i64*
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6485 = getelementptr inbounds %struct.GPR, %struct.GPR* %6484, i32 0, i32 5
  %6486 = getelementptr inbounds %struct.Reg, %struct.Reg* %6485, i32 0, i32 0
  %RCX.i471 = bitcast %union.anon* %6486 to i64*
  %6487 = load i64, i64* %RCX.i471
  %6488 = load i64, i64* %PC.i470
  %6489 = add i64 %6488, 3
  store i64 %6489, i64* %PC.i470
  %6490 = trunc i64 %6487 to i32
  %6491 = sub i32 %6490, 1
  %6492 = zext i32 %6491 to i64
  store i64 %6492, i64* %RCX.i471, align 8
  %6493 = icmp ult i32 %6490, 1
  %6494 = zext i1 %6493 to i8
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6494, i8* %6495, align 1
  %6496 = and i32 %6491, 255
  %6497 = call i32 @llvm.ctpop.i32(i32 %6496)
  %6498 = trunc i32 %6497 to i8
  %6499 = and i8 %6498, 1
  %6500 = xor i8 %6499, 1
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6500, i8* %6501, align 1
  %6502 = xor i64 1, %6487
  %6503 = trunc i64 %6502 to i32
  %6504 = xor i32 %6503, %6491
  %6505 = lshr i32 %6504, 4
  %6506 = trunc i32 %6505 to i8
  %6507 = and i8 %6506, 1
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6507, i8* %6508, align 1
  %6509 = icmp eq i32 %6491, 0
  %6510 = zext i1 %6509 to i8
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6510, i8* %6511, align 1
  %6512 = lshr i32 %6491, 31
  %6513 = trunc i32 %6512 to i8
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6513, i8* %6514, align 1
  %6515 = lshr i32 %6490, 31
  %6516 = xor i32 %6512, %6515
  %6517 = add i32 %6516, %6515
  %6518 = icmp eq i32 %6517, 2
  %6519 = zext i1 %6518 to i8
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6519, i8* %6520, align 1
  store %struct.Memory* %loadMem_432f49, %struct.Memory** %MEMORY
  %loadMem_432f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6522 = getelementptr inbounds %struct.GPR, %struct.GPR* %6521, i32 0, i32 33
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %6523 to i64*
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6525 = getelementptr inbounds %struct.GPR, %struct.GPR* %6524, i32 0, i32 5
  %6526 = getelementptr inbounds %struct.Reg, %struct.Reg* %6525, i32 0, i32 0
  %ECX.i468 = bitcast %union.anon* %6526 to i32*
  %6527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6528 = getelementptr inbounds %struct.GPR, %struct.GPR* %6527, i32 0, i32 15
  %6529 = getelementptr inbounds %struct.Reg, %struct.Reg* %6528, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %6529 to i64*
  %6530 = load i64, i64* %RBP.i469
  %6531 = sub i64 %6530, 32
  %6532 = load i32, i32* %ECX.i468
  %6533 = zext i32 %6532 to i64
  %6534 = load i64, i64* %PC.i467
  %6535 = add i64 %6534, 3
  store i64 %6535, i64* %PC.i467
  %6536 = inttoptr i64 %6531 to i32*
  store i32 %6532, i32* %6536
  store %struct.Memory* %loadMem_432f4c, %struct.Memory** %MEMORY
  %loadMem_432f4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6538 = getelementptr inbounds %struct.GPR, %struct.GPR* %6537, i32 0, i32 33
  %6539 = getelementptr inbounds %struct.Reg, %struct.Reg* %6538, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %6539 to i64*
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6541 = getelementptr inbounds %struct.GPR, %struct.GPR* %6540, i32 0, i32 1
  %6542 = getelementptr inbounds %struct.Reg, %struct.Reg* %6541, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %6542 to i64*
  %6543 = load i64, i64* %PC.i465
  %6544 = add i64 %6543, 8
  store i64 %6544, i64* %PC.i465
  %6545 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6545, i64* %RAX.i466, align 8
  store %struct.Memory* %loadMem_432f4f, %struct.Memory** %MEMORY
  %loadMem_432f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6547 = getelementptr inbounds %struct.GPR, %struct.GPR* %6546, i32 0, i32 33
  %6548 = getelementptr inbounds %struct.Reg, %struct.Reg* %6547, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %6548 to i64*
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6550 = getelementptr inbounds %struct.GPR, %struct.GPR* %6549, i32 0, i32 1
  %6551 = getelementptr inbounds %struct.Reg, %struct.Reg* %6550, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %6551 to i64*
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6553 = getelementptr inbounds %struct.GPR, %struct.GPR* %6552, i32 0, i32 5
  %6554 = getelementptr inbounds %struct.Reg, %struct.Reg* %6553, i32 0, i32 0
  %RCX.i464 = bitcast %union.anon* %6554 to i64*
  %6555 = load i64, i64* %RAX.i463
  %6556 = add i64 %6555, 8
  %6557 = load i64, i64* %PC.i462
  %6558 = add i64 %6557, 3
  store i64 %6558, i64* %PC.i462
  %6559 = inttoptr i64 %6556 to i32*
  %6560 = load i32, i32* %6559
  %6561 = zext i32 %6560 to i64
  store i64 %6561, i64* %RCX.i464, align 8
  store %struct.Memory* %loadMem_432f57, %struct.Memory** %MEMORY
  %loadMem_432f5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6563 = getelementptr inbounds %struct.GPR, %struct.GPR* %6562, i32 0, i32 33
  %6564 = getelementptr inbounds %struct.Reg, %struct.Reg* %6563, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6564 to i64*
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6566 = getelementptr inbounds %struct.GPR, %struct.GPR* %6565, i32 0, i32 5
  %6567 = getelementptr inbounds %struct.Reg, %struct.Reg* %6566, i32 0, i32 0
  %RCX.i461 = bitcast %union.anon* %6567 to i64*
  %6568 = load i64, i64* %RCX.i461
  %6569 = load i64, i64* %PC.i460
  %6570 = add i64 %6569, 3
  store i64 %6570, i64* %PC.i460
  %6571 = trunc i64 %6568 to i32
  %6572 = sub i32 %6571, 1
  %6573 = zext i32 %6572 to i64
  store i64 %6573, i64* %RCX.i461, align 8
  %6574 = icmp ult i32 %6571, 1
  %6575 = zext i1 %6574 to i8
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6575, i8* %6576, align 1
  %6577 = and i32 %6572, 255
  %6578 = call i32 @llvm.ctpop.i32(i32 %6577)
  %6579 = trunc i32 %6578 to i8
  %6580 = and i8 %6579, 1
  %6581 = xor i8 %6580, 1
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6581, i8* %6582, align 1
  %6583 = xor i64 1, %6568
  %6584 = trunc i64 %6583 to i32
  %6585 = xor i32 %6584, %6572
  %6586 = lshr i32 %6585, 4
  %6587 = trunc i32 %6586 to i8
  %6588 = and i8 %6587, 1
  %6589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6588, i8* %6589, align 1
  %6590 = icmp eq i32 %6572, 0
  %6591 = zext i1 %6590 to i8
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6591, i8* %6592, align 1
  %6593 = lshr i32 %6572, 31
  %6594 = trunc i32 %6593 to i8
  %6595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6594, i8* %6595, align 1
  %6596 = lshr i32 %6571, 31
  %6597 = xor i32 %6593, %6596
  %6598 = add i32 %6597, %6596
  %6599 = icmp eq i32 %6598, 2
  %6600 = zext i1 %6599 to i8
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6600, i8* %6601, align 1
  store %struct.Memory* %loadMem_432f5a, %struct.Memory** %MEMORY
  %loadMem_432f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6603 = getelementptr inbounds %struct.GPR, %struct.GPR* %6602, i32 0, i32 33
  %6604 = getelementptr inbounds %struct.Reg, %struct.Reg* %6603, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %6604 to i64*
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6606 = getelementptr inbounds %struct.GPR, %struct.GPR* %6605, i32 0, i32 1
  %6607 = getelementptr inbounds %struct.Reg, %struct.Reg* %6606, i32 0, i32 0
  %RAX.i459 = bitcast %union.anon* %6607 to i64*
  %6608 = load i64, i64* %PC.i458
  %6609 = add i64 %6608, 8
  store i64 %6609, i64* %PC.i458
  %6610 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6610, i64* %RAX.i459, align 8
  store %struct.Memory* %loadMem_432f5d, %struct.Memory** %MEMORY
  %loadMem_432f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6612 = getelementptr inbounds %struct.GPR, %struct.GPR* %6611, i32 0, i32 33
  %6613 = getelementptr inbounds %struct.Reg, %struct.Reg* %6612, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %6613 to i64*
  %6614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6615 = getelementptr inbounds %struct.GPR, %struct.GPR* %6614, i32 0, i32 1
  %6616 = getelementptr inbounds %struct.Reg, %struct.Reg* %6615, i32 0, i32 0
  %RAX.i456 = bitcast %union.anon* %6616 to i64*
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6618 = getelementptr inbounds %struct.GPR, %struct.GPR* %6617, i32 0, i32 5
  %6619 = getelementptr inbounds %struct.Reg, %struct.Reg* %6618, i32 0, i32 0
  %RCX.i457 = bitcast %union.anon* %6619 to i64*
  %6620 = load i64, i64* %RCX.i457
  %6621 = load i64, i64* %RAX.i456
  %6622 = add i64 %6621, 1236
  %6623 = load i64, i64* %PC.i455
  %6624 = add i64 %6623, 7
  store i64 %6624, i64* %PC.i455
  %6625 = inttoptr i64 %6622 to i32*
  %6626 = load i32, i32* %6625
  %6627 = shl i64 %6620, 32
  %6628 = ashr exact i64 %6627, 32
  %6629 = sext i32 %6626 to i64
  %6630 = mul i64 %6629, %6628
  %6631 = trunc i64 %6630 to i32
  %6632 = and i64 %6630, 4294967295
  store i64 %6632, i64* %RCX.i457, align 8
  %6633 = shl i64 %6630, 32
  %6634 = ashr exact i64 %6633, 32
  %6635 = icmp ne i64 %6634, %6630
  %6636 = zext i1 %6635 to i8
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6636, i8* %6637, align 1
  %6638 = and i32 %6631, 255
  %6639 = call i32 @llvm.ctpop.i32(i32 %6638)
  %6640 = trunc i32 %6639 to i8
  %6641 = and i8 %6640, 1
  %6642 = xor i8 %6641, 1
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6642, i8* %6643, align 1
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6644, align 1
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6645, align 1
  %6646 = lshr i32 %6631, 31
  %6647 = trunc i32 %6646 to i8
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6647, i8* %6648, align 1
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6636, i8* %6649, align 1
  store %struct.Memory* %loadMem_432f65, %struct.Memory** %MEMORY
  %loadMem_432f6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6651 = getelementptr inbounds %struct.GPR, %struct.GPR* %6650, i32 0, i32 33
  %6652 = getelementptr inbounds %struct.Reg, %struct.Reg* %6651, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %6652 to i64*
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6654 = getelementptr inbounds %struct.GPR, %struct.GPR* %6653, i32 0, i32 5
  %6655 = getelementptr inbounds %struct.Reg, %struct.Reg* %6654, i32 0, i32 0
  %ECX.i453 = bitcast %union.anon* %6655 to i32*
  %6656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6657 = getelementptr inbounds %struct.GPR, %struct.GPR* %6656, i32 0, i32 15
  %6658 = getelementptr inbounds %struct.Reg, %struct.Reg* %6657, i32 0, i32 0
  %RBP.i454 = bitcast %union.anon* %6658 to i64*
  %6659 = load i64, i64* %RBP.i454
  %6660 = sub i64 %6659, 36
  %6661 = load i32, i32* %ECX.i453
  %6662 = zext i32 %6661 to i64
  %6663 = load i64, i64* %PC.i452
  %6664 = add i64 %6663, 3
  store i64 %6664, i64* %PC.i452
  %6665 = inttoptr i64 %6660 to i32*
  store i32 %6661, i32* %6665
  store %struct.Memory* %loadMem_432f6c, %struct.Memory** %MEMORY
  %loadMem_432f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6667 = getelementptr inbounds %struct.GPR, %struct.GPR* %6666, i32 0, i32 33
  %6668 = getelementptr inbounds %struct.Reg, %struct.Reg* %6667, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %6668 to i64*
  %6669 = load i64, i64* %PC.i451
  %6670 = add i64 %6669, 407
  %6671 = load i64, i64* %PC.i451
  %6672 = add i64 %6671, 5
  store i64 %6672, i64* %PC.i451
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6670, i64* %6673, align 8
  store %struct.Memory* %loadMem_432f6f, %struct.Memory** %MEMORY
  br label %block_.L_433106

block_.L_432f74:                                  ; preds = %block_432efc
  %loadMem_432f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6675 = getelementptr inbounds %struct.GPR, %struct.GPR* %6674, i32 0, i32 33
  %6676 = getelementptr inbounds %struct.Reg, %struct.Reg* %6675, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %6676 to i64*
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6678 = getelementptr inbounds %struct.GPR, %struct.GPR* %6677, i32 0, i32 1
  %6679 = getelementptr inbounds %struct.Reg, %struct.Reg* %6678, i32 0, i32 0
  %RAX.i450 = bitcast %union.anon* %6679 to i64*
  %6680 = load i64, i64* %PC.i449
  %6681 = add i64 %6680, 8
  store i64 %6681, i64* %PC.i449
  %6682 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6682, i64* %RAX.i450, align 8
  store %struct.Memory* %loadMem_432f74, %struct.Memory** %MEMORY
  %loadMem_432f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6684 = getelementptr inbounds %struct.GPR, %struct.GPR* %6683, i32 0, i32 33
  %6685 = getelementptr inbounds %struct.Reg, %struct.Reg* %6684, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %6685 to i64*
  %6686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6687 = getelementptr inbounds %struct.GPR, %struct.GPR* %6686, i32 0, i32 1
  %6688 = getelementptr inbounds %struct.Reg, %struct.Reg* %6687, i32 0, i32 0
  %RAX.i447 = bitcast %union.anon* %6688 to i64*
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6690 = getelementptr inbounds %struct.GPR, %struct.GPR* %6689, i32 0, i32 5
  %6691 = getelementptr inbounds %struct.Reg, %struct.Reg* %6690, i32 0, i32 0
  %RCX.i448 = bitcast %union.anon* %6691 to i64*
  %6692 = load i64, i64* %RAX.i447
  %6693 = add i64 %6692, 1224
  %6694 = load i64, i64* %PC.i446
  %6695 = add i64 %6694, 6
  store i64 %6695, i64* %PC.i446
  %6696 = inttoptr i64 %6693 to i32*
  %6697 = load i32, i32* %6696
  %6698 = zext i32 %6697 to i64
  store i64 %6698, i64* %RCX.i448, align 8
  store %struct.Memory* %loadMem_432f7c, %struct.Memory** %MEMORY
  %loadMem_432f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6700 = getelementptr inbounds %struct.GPR, %struct.GPR* %6699, i32 0, i32 33
  %6701 = getelementptr inbounds %struct.Reg, %struct.Reg* %6700, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %6701 to i64*
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6703 = getelementptr inbounds %struct.GPR, %struct.GPR* %6702, i32 0, i32 1
  %6704 = getelementptr inbounds %struct.Reg, %struct.Reg* %6703, i32 0, i32 0
  %RAX.i445 = bitcast %union.anon* %6704 to i64*
  %6705 = load i64, i64* %PC.i444
  %6706 = add i64 %6705, 8
  store i64 %6706, i64* %PC.i444
  %6707 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6707, i64* %RAX.i445, align 8
  store %struct.Memory* %loadMem_432f82, %struct.Memory** %MEMORY
  %loadMem_432f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 33
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %6710 to i64*
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6712 = getelementptr inbounds %struct.GPR, %struct.GPR* %6711, i32 0, i32 1
  %6713 = getelementptr inbounds %struct.Reg, %struct.Reg* %6712, i32 0, i32 0
  %RAX.i442 = bitcast %union.anon* %6713 to i64*
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6715 = getelementptr inbounds %struct.GPR, %struct.GPR* %6714, i32 0, i32 7
  %6716 = getelementptr inbounds %struct.Reg, %struct.Reg* %6715, i32 0, i32 0
  %RDX.i443 = bitcast %union.anon* %6716 to i64*
  %6717 = load i64, i64* %RAX.i442
  %6718 = add i64 %6717, 1236
  %6719 = load i64, i64* %PC.i441
  %6720 = add i64 %6719, 6
  store i64 %6720, i64* %PC.i441
  %6721 = inttoptr i64 %6718 to i32*
  %6722 = load i32, i32* %6721
  %6723 = zext i32 %6722 to i64
  store i64 %6723, i64* %RDX.i443, align 8
  store %struct.Memory* %loadMem_432f8a, %struct.Memory** %MEMORY
  %loadMem_432f90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6725 = getelementptr inbounds %struct.GPR, %struct.GPR* %6724, i32 0, i32 33
  %6726 = getelementptr inbounds %struct.Reg, %struct.Reg* %6725, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %6726 to i64*
  %6727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6728 = getelementptr inbounds %struct.GPR, %struct.GPR* %6727, i32 0, i32 7
  %6729 = getelementptr inbounds %struct.Reg, %struct.Reg* %6728, i32 0, i32 0
  %RDX.i440 = bitcast %union.anon* %6729 to i64*
  %6730 = load i64, i64* %RDX.i440
  %6731 = load i64, i64* %PC.i439
  %6732 = add i64 %6731, 3
  store i64 %6732, i64* %PC.i439
  %6733 = trunc i64 %6730 to i32
  %6734 = add i32 1, %6733
  %6735 = zext i32 %6734 to i64
  store i64 %6735, i64* %RDX.i440, align 8
  %6736 = icmp ult i32 %6734, %6733
  %6737 = icmp ult i32 %6734, 1
  %6738 = or i1 %6736, %6737
  %6739 = zext i1 %6738 to i8
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6739, i8* %6740, align 1
  %6741 = and i32 %6734, 255
  %6742 = call i32 @llvm.ctpop.i32(i32 %6741)
  %6743 = trunc i32 %6742 to i8
  %6744 = and i8 %6743, 1
  %6745 = xor i8 %6744, 1
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6745, i8* %6746, align 1
  %6747 = xor i64 1, %6730
  %6748 = trunc i64 %6747 to i32
  %6749 = xor i32 %6748, %6734
  %6750 = lshr i32 %6749, 4
  %6751 = trunc i32 %6750 to i8
  %6752 = and i8 %6751, 1
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6752, i8* %6753, align 1
  %6754 = icmp eq i32 %6734, 0
  %6755 = zext i1 %6754 to i8
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6755, i8* %6756, align 1
  %6757 = lshr i32 %6734, 31
  %6758 = trunc i32 %6757 to i8
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6758, i8* %6759, align 1
  %6760 = lshr i32 %6733, 31
  %6761 = xor i32 %6757, %6760
  %6762 = add i32 %6761, %6757
  %6763 = icmp eq i32 %6762, 2
  %6764 = zext i1 %6763 to i8
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6764, i8* %6765, align 1
  store %struct.Memory* %loadMem_432f90, %struct.Memory** %MEMORY
  %loadMem_432f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 33
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %6768 to i64*
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6770 = getelementptr inbounds %struct.GPR, %struct.GPR* %6769, i32 0, i32 7
  %6771 = getelementptr inbounds %struct.Reg, %struct.Reg* %6770, i32 0, i32 0
  %EDX.i437 = bitcast %union.anon* %6771 to i32*
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6773 = getelementptr inbounds %struct.GPR, %struct.GPR* %6772, i32 0, i32 5
  %6774 = getelementptr inbounds %struct.Reg, %struct.Reg* %6773, i32 0, i32 0
  %RCX.i438 = bitcast %union.anon* %6774 to i64*
  %6775 = load i64, i64* %RCX.i438
  %6776 = load i32, i32* %EDX.i437
  %6777 = zext i32 %6776 to i64
  %6778 = load i64, i64* %PC.i436
  %6779 = add i64 %6778, 3
  store i64 %6779, i64* %PC.i436
  %6780 = shl i64 %6775, 32
  %6781 = ashr exact i64 %6780, 32
  %6782 = shl i64 %6777, 32
  %6783 = ashr exact i64 %6782, 32
  %6784 = mul i64 %6783, %6781
  %6785 = trunc i64 %6784 to i32
  %6786 = and i64 %6784, 4294967295
  store i64 %6786, i64* %RCX.i438, align 8
  %6787 = shl i64 %6784, 32
  %6788 = ashr exact i64 %6787, 32
  %6789 = icmp ne i64 %6788, %6784
  %6790 = zext i1 %6789 to i8
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6790, i8* %6791, align 1
  %6792 = and i32 %6785, 255
  %6793 = call i32 @llvm.ctpop.i32(i32 %6792)
  %6794 = trunc i32 %6793 to i8
  %6795 = and i8 %6794, 1
  %6796 = xor i8 %6795, 1
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6796, i8* %6797, align 1
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6798, align 1
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6799, align 1
  %6800 = lshr i32 %6785, 31
  %6801 = trunc i32 %6800 to i8
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6801, i8* %6802, align 1
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6790, i8* %6803, align 1
  store %struct.Memory* %loadMem_432f93, %struct.Memory** %MEMORY
  %loadMem_432f96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6805 = getelementptr inbounds %struct.GPR, %struct.GPR* %6804, i32 0, i32 33
  %6806 = getelementptr inbounds %struct.Reg, %struct.Reg* %6805, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %6806 to i64*
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6808 = getelementptr inbounds %struct.GPR, %struct.GPR* %6807, i32 0, i32 5
  %6809 = getelementptr inbounds %struct.Reg, %struct.Reg* %6808, i32 0, i32 0
  %ECX.i434 = bitcast %union.anon* %6809 to i32*
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6811 = getelementptr inbounds %struct.GPR, %struct.GPR* %6810, i32 0, i32 15
  %6812 = getelementptr inbounds %struct.Reg, %struct.Reg* %6811, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %6812 to i64*
  %6813 = load i64, i64* %RBP.i435
  %6814 = sub i64 %6813, 24
  %6815 = load i32, i32* %ECX.i434
  %6816 = zext i32 %6815 to i64
  %6817 = load i64, i64* %PC.i433
  %6818 = add i64 %6817, 3
  store i64 %6818, i64* %PC.i433
  %6819 = inttoptr i64 %6814 to i32*
  store i32 %6815, i32* %6819
  store %struct.Memory* %loadMem_432f96, %struct.Memory** %MEMORY
  %loadMem_432f99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6821 = getelementptr inbounds %struct.GPR, %struct.GPR* %6820, i32 0, i32 33
  %6822 = getelementptr inbounds %struct.Reg, %struct.Reg* %6821, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %6822 to i64*
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 1
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %RAX.i432 = bitcast %union.anon* %6825 to i64*
  %6826 = load i64, i64* %PC.i431
  %6827 = add i64 %6826, 8
  store i64 %6827, i64* %PC.i431
  %6828 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %6828, i64* %RAX.i432, align 8
  store %struct.Memory* %loadMem_432f99, %struct.Memory** %MEMORY
  %loadMem_432fa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 33
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %6831 to i64*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 1
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %6834 to i64*
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 5
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %RCX.i430 = bitcast %union.anon* %6837 to i64*
  %6838 = load i64, i64* %RAX.i429
  %6839 = add i64 %6838, 1236
  %6840 = load i64, i64* %PC.i428
  %6841 = add i64 %6840, 6
  store i64 %6841, i64* %PC.i428
  %6842 = inttoptr i64 %6839 to i32*
  %6843 = load i32, i32* %6842
  %6844 = zext i32 %6843 to i64
  store i64 %6844, i64* %RCX.i430, align 8
  store %struct.Memory* %loadMem_432fa1, %struct.Memory** %MEMORY
  %loadMem_432fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 33
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 5
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %RCX.i427 = bitcast %union.anon* %6850 to i64*
  %6851 = load i64, i64* %RCX.i427
  %6852 = load i64, i64* %PC.i426
  %6853 = add i64 %6852, 3
  store i64 %6853, i64* %PC.i426
  %6854 = trunc i64 %6851 to i32
  %6855 = add i32 1, %6854
  %6856 = zext i32 %6855 to i64
  store i64 %6856, i64* %RCX.i427, align 8
  %6857 = icmp ult i32 %6855, %6854
  %6858 = icmp ult i32 %6855, 1
  %6859 = or i1 %6857, %6858
  %6860 = zext i1 %6859 to i8
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6860, i8* %6861, align 1
  %6862 = and i32 %6855, 255
  %6863 = call i32 @llvm.ctpop.i32(i32 %6862)
  %6864 = trunc i32 %6863 to i8
  %6865 = and i8 %6864, 1
  %6866 = xor i8 %6865, 1
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6866, i8* %6867, align 1
  %6868 = xor i64 1, %6851
  %6869 = trunc i64 %6868 to i32
  %6870 = xor i32 %6869, %6855
  %6871 = lshr i32 %6870, 4
  %6872 = trunc i32 %6871 to i8
  %6873 = and i8 %6872, 1
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6873, i8* %6874, align 1
  %6875 = icmp eq i32 %6855, 0
  %6876 = zext i1 %6875 to i8
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6876, i8* %6877, align 1
  %6878 = lshr i32 %6855, 31
  %6879 = trunc i32 %6878 to i8
  %6880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6879, i8* %6880, align 1
  %6881 = lshr i32 %6854, 31
  %6882 = xor i32 %6878, %6881
  %6883 = add i32 %6882, %6878
  %6884 = icmp eq i32 %6883, 2
  %6885 = zext i1 %6884 to i8
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6885, i8* %6886, align 1
  store %struct.Memory* %loadMem_432fa7, %struct.Memory** %MEMORY
  %loadMem_432faa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 33
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %6889 to i64*
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 5
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %ECX.i424 = bitcast %union.anon* %6892 to i32*
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6894 = getelementptr inbounds %struct.GPR, %struct.GPR* %6893, i32 0, i32 15
  %6895 = getelementptr inbounds %struct.Reg, %struct.Reg* %6894, i32 0, i32 0
  %RBP.i425 = bitcast %union.anon* %6895 to i64*
  %6896 = load i64, i64* %RBP.i425
  %6897 = sub i64 %6896, 20
  %6898 = load i32, i32* %ECX.i424
  %6899 = zext i32 %6898 to i64
  %6900 = load i64, i64* %PC.i423
  %6901 = add i64 %6900, 3
  store i64 %6901, i64* %PC.i423
  %6902 = inttoptr i64 %6897 to i32*
  store i32 %6898, i32* %6902
  store %struct.Memory* %loadMem_432faa, %struct.Memory** %MEMORY
  %loadMem_432fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 33
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %6905 to i64*
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6907 = getelementptr inbounds %struct.GPR, %struct.GPR* %6906, i32 0, i32 1
  %6908 = getelementptr inbounds %struct.Reg, %struct.Reg* %6907, i32 0, i32 0
  %RAX.i422 = bitcast %union.anon* %6908 to i64*
  %6909 = load i64, i64* %PC.i421
  %6910 = add i64 %6909, 8
  store i64 %6910, i64* %PC.i421
  %6911 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6911, i64* %RAX.i422, align 8
  store %struct.Memory* %loadMem_432fad, %struct.Memory** %MEMORY
  %loadMem_432fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6913 = getelementptr inbounds %struct.GPR, %struct.GPR* %6912, i32 0, i32 33
  %6914 = getelementptr inbounds %struct.Reg, %struct.Reg* %6913, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %6914 to i64*
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6916 = getelementptr inbounds %struct.GPR, %struct.GPR* %6915, i32 0, i32 1
  %6917 = getelementptr inbounds %struct.Reg, %struct.Reg* %6916, i32 0, i32 0
  %RAX.i420 = bitcast %union.anon* %6917 to i64*
  %6918 = load i64, i64* %RAX.i420
  %6919 = load i64, i64* %PC.i419
  %6920 = add i64 %6919, 3
  store i64 %6920, i64* %PC.i419
  %6921 = inttoptr i64 %6918 to i32*
  %6922 = load i32, i32* %6921
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6923, align 1
  %6924 = and i32 %6922, 255
  %6925 = call i32 @llvm.ctpop.i32(i32 %6924)
  %6926 = trunc i32 %6925 to i8
  %6927 = and i8 %6926, 1
  %6928 = xor i8 %6927, 1
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6928, i8* %6929, align 1
  %6930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6930, align 1
  %6931 = icmp eq i32 %6922, 0
  %6932 = zext i1 %6931 to i8
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6932, i8* %6933, align 1
  %6934 = lshr i32 %6922, 31
  %6935 = trunc i32 %6934 to i8
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6935, i8* %6936, align 1
  %6937 = lshr i32 %6922, 31
  %6938 = xor i32 %6934, %6937
  %6939 = add i32 %6938, %6937
  %6940 = icmp eq i32 %6939, 2
  %6941 = zext i1 %6940 to i8
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6941, i8* %6942, align 1
  store %struct.Memory* %loadMem_432fb5, %struct.Memory** %MEMORY
  %loadMem_432fb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6944 = getelementptr inbounds %struct.GPR, %struct.GPR* %6943, i32 0, i32 33
  %6945 = getelementptr inbounds %struct.Reg, %struct.Reg* %6944, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %6945 to i64*
  %6946 = load i64, i64* %PC.i418
  %6947 = add i64 %6946, 25
  %6948 = load i64, i64* %PC.i418
  %6949 = add i64 %6948, 6
  %6950 = load i64, i64* %PC.i418
  %6951 = add i64 %6950, 6
  store i64 %6951, i64* %PC.i418
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6953 = load i8, i8* %6952, align 1
  %6954 = icmp eq i8 %6953, 0
  %6955 = zext i1 %6954 to i8
  store i8 %6955, i8* %BRANCH_TAKEN, align 1
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6957 = select i1 %6954, i64 %6947, i64 %6949
  store i64 %6957, i64* %6956, align 8
  store %struct.Memory* %loadMem_432fb8, %struct.Memory** %MEMORY
  %loadBr_432fb8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_432fb8 = icmp eq i8 %loadBr_432fb8, 1
  br i1 %cmpBr_432fb8, label %block_.L_432fd1, label %block_432fbe

block_432fbe:                                     ; preds = %block_.L_432f74
  %loadMem_432fbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 33
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %6960 to i64*
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6962 = getelementptr inbounds %struct.GPR, %struct.GPR* %6961, i32 0, i32 1
  %6963 = getelementptr inbounds %struct.Reg, %struct.Reg* %6962, i32 0, i32 0
  %RAX.i416 = bitcast %union.anon* %6963 to i64*
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 15
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %6966 to i64*
  %6967 = load i64, i64* %RBP.i417
  %6968 = sub i64 %6967, 24
  %6969 = load i64, i64* %PC.i415
  %6970 = add i64 %6969, 3
  store i64 %6970, i64* %PC.i415
  %6971 = inttoptr i64 %6968 to i32*
  %6972 = load i32, i32* %6971
  %6973 = zext i32 %6972 to i64
  store i64 %6973, i64* %RAX.i416, align 8
  store %struct.Memory* %loadMem_432fbe, %struct.Memory** %MEMORY
  %loadMem_432fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 33
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %6976 to i64*
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 5
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %RCX.i413 = bitcast %union.anon* %6979 to i64*
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 15
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %6982 to i64*
  %6983 = load i64, i64* %RBP.i414
  %6984 = sub i64 %6983, 20
  %6985 = load i64, i64* %PC.i412
  %6986 = add i64 %6985, 3
  store i64 %6986, i64* %PC.i412
  %6987 = inttoptr i64 %6984 to i32*
  %6988 = load i32, i32* %6987
  %6989 = zext i32 %6988 to i64
  store i64 %6989, i64* %RCX.i413, align 8
  store %struct.Memory* %loadMem_432fc1, %struct.Memory** %MEMORY
  %loadMem_432fc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 33
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %6992 to i64*
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 5
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %RCX.i411 = bitcast %union.anon* %6995 to i64*
  %6996 = load i64, i64* %RCX.i411
  %6997 = load i64, i64* %PC.i410
  %6998 = add i64 %6997, 3
  store i64 %6998, i64* %PC.i410
  %6999 = trunc i64 %6996 to i32
  %7000 = sub i32 %6999, 1
  %7001 = zext i32 %7000 to i64
  store i64 %7001, i64* %RCX.i411, align 8
  %7002 = icmp ult i32 %6999, 1
  %7003 = zext i1 %7002 to i8
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7003, i8* %7004, align 1
  %7005 = and i32 %7000, 255
  %7006 = call i32 @llvm.ctpop.i32(i32 %7005)
  %7007 = trunc i32 %7006 to i8
  %7008 = and i8 %7007, 1
  %7009 = xor i8 %7008, 1
  %7010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7009, i8* %7010, align 1
  %7011 = xor i64 1, %6996
  %7012 = trunc i64 %7011 to i32
  %7013 = xor i32 %7012, %7000
  %7014 = lshr i32 %7013, 4
  %7015 = trunc i32 %7014 to i8
  %7016 = and i8 %7015, 1
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7016, i8* %7017, align 1
  %7018 = icmp eq i32 %7000, 0
  %7019 = zext i1 %7018 to i8
  %7020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7019, i8* %7020, align 1
  %7021 = lshr i32 %7000, 31
  %7022 = trunc i32 %7021 to i8
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7022, i8* %7023, align 1
  %7024 = lshr i32 %6999, 31
  %7025 = xor i32 %7021, %7024
  %7026 = add i32 %7025, %7024
  %7027 = icmp eq i32 %7026, 2
  %7028 = zext i1 %7027 to i8
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7028, i8* %7029, align 1
  store %struct.Memory* %loadMem_432fc4, %struct.Memory** %MEMORY
  %loadMem_432fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7031 = getelementptr inbounds %struct.GPR, %struct.GPR* %7030, i32 0, i32 33
  %7032 = getelementptr inbounds %struct.Reg, %struct.Reg* %7031, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %7032 to i64*
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7034 = getelementptr inbounds %struct.GPR, %struct.GPR* %7033, i32 0, i32 5
  %7035 = getelementptr inbounds %struct.Reg, %struct.Reg* %7034, i32 0, i32 0
  %ECX.i408 = bitcast %union.anon* %7035 to i32*
  %7036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7037 = getelementptr inbounds %struct.GPR, %struct.GPR* %7036, i32 0, i32 1
  %7038 = getelementptr inbounds %struct.Reg, %struct.Reg* %7037, i32 0, i32 0
  %RAX.i409 = bitcast %union.anon* %7038 to i64*
  %7039 = load i64, i64* %RAX.i409
  %7040 = load i32, i32* %ECX.i408
  %7041 = zext i32 %7040 to i64
  %7042 = load i64, i64* %PC.i407
  %7043 = add i64 %7042, 2
  store i64 %7043, i64* %PC.i407
  %7044 = trunc i64 %7039 to i32
  %7045 = sub i32 %7044, %7040
  %7046 = zext i32 %7045 to i64
  store i64 %7046, i64* %RAX.i409, align 8
  %7047 = icmp ult i32 %7044, %7040
  %7048 = zext i1 %7047 to i8
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7048, i8* %7049, align 1
  %7050 = and i32 %7045, 255
  %7051 = call i32 @llvm.ctpop.i32(i32 %7050)
  %7052 = trunc i32 %7051 to i8
  %7053 = and i8 %7052, 1
  %7054 = xor i8 %7053, 1
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7054, i8* %7055, align 1
  %7056 = xor i64 %7041, %7039
  %7057 = trunc i64 %7056 to i32
  %7058 = xor i32 %7057, %7045
  %7059 = lshr i32 %7058, 4
  %7060 = trunc i32 %7059 to i8
  %7061 = and i8 %7060, 1
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7061, i8* %7062, align 1
  %7063 = icmp eq i32 %7045, 0
  %7064 = zext i1 %7063 to i8
  %7065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7064, i8* %7065, align 1
  %7066 = lshr i32 %7045, 31
  %7067 = trunc i32 %7066 to i8
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7067, i8* %7068, align 1
  %7069 = lshr i32 %7044, 31
  %7070 = lshr i32 %7040, 31
  %7071 = xor i32 %7070, %7069
  %7072 = xor i32 %7066, %7069
  %7073 = add i32 %7072, %7071
  %7074 = icmp eq i32 %7073, 2
  %7075 = zext i1 %7074 to i8
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7075, i8* %7076, align 1
  store %struct.Memory* %loadMem_432fc7, %struct.Memory** %MEMORY
  %loadMem_432fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7078 = getelementptr inbounds %struct.GPR, %struct.GPR* %7077, i32 0, i32 33
  %7079 = getelementptr inbounds %struct.Reg, %struct.Reg* %7078, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %7079 to i64*
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7081 = getelementptr inbounds %struct.GPR, %struct.GPR* %7080, i32 0, i32 1
  %7082 = getelementptr inbounds %struct.Reg, %struct.Reg* %7081, i32 0, i32 0
  %EAX.i405 = bitcast %union.anon* %7082 to i32*
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7084 = getelementptr inbounds %struct.GPR, %struct.GPR* %7083, i32 0, i32 15
  %7085 = getelementptr inbounds %struct.Reg, %struct.Reg* %7084, i32 0, i32 0
  %RBP.i406 = bitcast %union.anon* %7085 to i64*
  %7086 = load i64, i64* %RBP.i406
  %7087 = sub i64 %7086, 108
  %7088 = load i32, i32* %EAX.i405
  %7089 = zext i32 %7088 to i64
  %7090 = load i64, i64* %PC.i404
  %7091 = add i64 %7090, 3
  store i64 %7091, i64* %PC.i404
  %7092 = inttoptr i64 %7087 to i32*
  store i32 %7088, i32* %7092
  store %struct.Memory* %loadMem_432fc9, %struct.Memory** %MEMORY
  %loadMem_432fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 33
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %7095 to i64*
  %7096 = load i64, i64* %PC.i403
  %7097 = add i64 %7096, 11
  %7098 = load i64, i64* %PC.i403
  %7099 = add i64 %7098, 5
  store i64 %7099, i64* %PC.i403
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7097, i64* %7100, align 8
  store %struct.Memory* %loadMem_432fcc, %struct.Memory** %MEMORY
  br label %block_.L_432fd7

block_.L_432fd1:                                  ; preds = %block_.L_432f74
  %loadMem_432fd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7102 = getelementptr inbounds %struct.GPR, %struct.GPR* %7101, i32 0, i32 33
  %7103 = getelementptr inbounds %struct.Reg, %struct.Reg* %7102, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %7103 to i64*
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7105 = getelementptr inbounds %struct.GPR, %struct.GPR* %7104, i32 0, i32 1
  %7106 = getelementptr inbounds %struct.Reg, %struct.Reg* %7105, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %7106 to i64*
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7108 = getelementptr inbounds %struct.GPR, %struct.GPR* %7107, i32 0, i32 15
  %7109 = getelementptr inbounds %struct.Reg, %struct.Reg* %7108, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %7109 to i64*
  %7110 = load i64, i64* %RBP.i402
  %7111 = sub i64 %7110, 24
  %7112 = load i64, i64* %PC.i400
  %7113 = add i64 %7112, 3
  store i64 %7113, i64* %PC.i400
  %7114 = inttoptr i64 %7111 to i32*
  %7115 = load i32, i32* %7114
  %7116 = zext i32 %7115 to i64
  store i64 %7116, i64* %RAX.i401, align 8
  store %struct.Memory* %loadMem_432fd1, %struct.Memory** %MEMORY
  %loadMem_432fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7118 = getelementptr inbounds %struct.GPR, %struct.GPR* %7117, i32 0, i32 33
  %7119 = getelementptr inbounds %struct.Reg, %struct.Reg* %7118, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %7119 to i64*
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7121 = getelementptr inbounds %struct.GPR, %struct.GPR* %7120, i32 0, i32 1
  %7122 = getelementptr inbounds %struct.Reg, %struct.Reg* %7121, i32 0, i32 0
  %EAX.i398 = bitcast %union.anon* %7122 to i32*
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7124 = getelementptr inbounds %struct.GPR, %struct.GPR* %7123, i32 0, i32 15
  %7125 = getelementptr inbounds %struct.Reg, %struct.Reg* %7124, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %7125 to i64*
  %7126 = load i64, i64* %RBP.i399
  %7127 = sub i64 %7126, 108
  %7128 = load i32, i32* %EAX.i398
  %7129 = zext i32 %7128 to i64
  %7130 = load i64, i64* %PC.i397
  %7131 = add i64 %7130, 3
  store i64 %7131, i64* %PC.i397
  %7132 = inttoptr i64 %7127 to i32*
  store i32 %7128, i32* %7132
  store %struct.Memory* %loadMem_432fd4, %struct.Memory** %MEMORY
  br label %block_.L_432fd7

block_.L_432fd7:                                  ; preds = %block_.L_432fd1, %block_432fbe
  %loadMem_432fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7134 = getelementptr inbounds %struct.GPR, %struct.GPR* %7133, i32 0, i32 33
  %7135 = getelementptr inbounds %struct.Reg, %struct.Reg* %7134, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %7135 to i64*
  %7136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7137 = getelementptr inbounds %struct.GPR, %struct.GPR* %7136, i32 0, i32 1
  %7138 = getelementptr inbounds %struct.Reg, %struct.Reg* %7137, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %7138 to i64*
  %7139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7140 = getelementptr inbounds %struct.GPR, %struct.GPR* %7139, i32 0, i32 15
  %7141 = getelementptr inbounds %struct.Reg, %struct.Reg* %7140, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %7141 to i64*
  %7142 = load i64, i64* %RBP.i396
  %7143 = sub i64 %7142, 108
  %7144 = load i64, i64* %PC.i394
  %7145 = add i64 %7144, 3
  store i64 %7145, i64* %PC.i394
  %7146 = inttoptr i64 %7143 to i32*
  %7147 = load i32, i32* %7146
  %7148 = zext i32 %7147 to i64
  store i64 %7148, i64* %RAX.i395, align 8
  store %struct.Memory* %loadMem_432fd7, %struct.Memory** %MEMORY
  %loadMem_432fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7150 = getelementptr inbounds %struct.GPR, %struct.GPR* %7149, i32 0, i32 33
  %7151 = getelementptr inbounds %struct.Reg, %struct.Reg* %7150, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %7151 to i64*
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7153 = getelementptr inbounds %struct.GPR, %struct.GPR* %7152, i32 0, i32 1
  %7154 = getelementptr inbounds %struct.Reg, %struct.Reg* %7153, i32 0, i32 0
  %EAX.i392 = bitcast %union.anon* %7154 to i32*
  %7155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7156 = getelementptr inbounds %struct.GPR, %struct.GPR* %7155, i32 0, i32 15
  %7157 = getelementptr inbounds %struct.Reg, %struct.Reg* %7156, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %7157 to i64*
  %7158 = load i64, i64* %RBP.i393
  %7159 = sub i64 %7158, 28
  %7160 = load i32, i32* %EAX.i392
  %7161 = zext i32 %7160 to i64
  %7162 = load i64, i64* %PC.i391
  %7163 = add i64 %7162, 3
  store i64 %7163, i64* %PC.i391
  %7164 = inttoptr i64 %7159 to i32*
  store i32 %7160, i32* %7164
  store %struct.Memory* %loadMem_432fda, %struct.Memory** %MEMORY
  %loadMem_432fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7166 = getelementptr inbounds %struct.GPR, %struct.GPR* %7165, i32 0, i32 33
  %7167 = getelementptr inbounds %struct.Reg, %struct.Reg* %7166, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %7167 to i64*
  %7168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7169 = getelementptr inbounds %struct.GPR, %struct.GPR* %7168, i32 0, i32 5
  %7170 = getelementptr inbounds %struct.Reg, %struct.Reg* %7169, i32 0, i32 0
  %RCX.i390 = bitcast %union.anon* %7170 to i64*
  %7171 = load i64, i64* %PC.i389
  %7172 = add i64 %7171, 8
  store i64 %7172, i64* %PC.i389
  %7173 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7173, i64* %RCX.i390, align 8
  store %struct.Memory* %loadMem_432fdd, %struct.Memory** %MEMORY
  %loadMem_432fe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7175 = getelementptr inbounds %struct.GPR, %struct.GPR* %7174, i32 0, i32 33
  %7176 = getelementptr inbounds %struct.Reg, %struct.Reg* %7175, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %7176 to i64*
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7178 = getelementptr inbounds %struct.GPR, %struct.GPR* %7177, i32 0, i32 1
  %7179 = getelementptr inbounds %struct.Reg, %struct.Reg* %7178, i32 0, i32 0
  %RAX.i387 = bitcast %union.anon* %7179 to i64*
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 5
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %RCX.i388 = bitcast %union.anon* %7182 to i64*
  %7183 = load i64, i64* %RCX.i388
  %7184 = load i64, i64* %PC.i386
  %7185 = add i64 %7184, 2
  store i64 %7185, i64* %PC.i386
  %7186 = inttoptr i64 %7183 to i32*
  %7187 = load i32, i32* %7186
  %7188 = zext i32 %7187 to i64
  store i64 %7188, i64* %RAX.i387, align 8
  store %struct.Memory* %loadMem_432fe5, %struct.Memory** %MEMORY
  %loadMem_432fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7190 = getelementptr inbounds %struct.GPR, %struct.GPR* %7189, i32 0, i32 33
  %7191 = getelementptr inbounds %struct.Reg, %struct.Reg* %7190, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %7191 to i64*
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7193 = getelementptr inbounds %struct.GPR, %struct.GPR* %7192, i32 0, i32 5
  %7194 = getelementptr inbounds %struct.Reg, %struct.Reg* %7193, i32 0, i32 0
  %RCX.i385 = bitcast %union.anon* %7194 to i64*
  %7195 = load i64, i64* %PC.i384
  %7196 = add i64 %7195, 8
  store i64 %7196, i64* %PC.i384
  %7197 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7197, i64* %RCX.i385, align 8
  store %struct.Memory* %loadMem_432fe7, %struct.Memory** %MEMORY
  %loadMem_432fef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 33
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %7200 to i64*
  %7201 = load i64, i64* %PC.i383
  %7202 = add i64 %7201, 1
  store i64 %7202, i64* %PC.i383
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7205 = bitcast %union.anon* %7204 to i32*
  %7206 = load i32, i32* %7205, align 8
  %7207 = sext i32 %7206 to i64
  %7208 = lshr i64 %7207, 32
  store i64 %7208, i64* %7203, align 8
  store %struct.Memory* %loadMem_432fef, %struct.Memory** %MEMORY
  %loadMem_432ff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7210 = getelementptr inbounds %struct.GPR, %struct.GPR* %7209, i32 0, i32 33
  %7211 = getelementptr inbounds %struct.Reg, %struct.Reg* %7210, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %7211 to i64*
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7213 = getelementptr inbounds %struct.GPR, %struct.GPR* %7212, i32 0, i32 5
  %7214 = getelementptr inbounds %struct.Reg, %struct.Reg* %7213, i32 0, i32 0
  %RCX.i378 = bitcast %union.anon* %7214 to i64*
  %7215 = load i64, i64* %RCX.i378
  %7216 = add i64 %7215, 1224
  %7217 = load i64, i64* %PC.i377
  %7218 = add i64 %7217, 6
  store i64 %7218, i64* %PC.i377
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7220 = bitcast %union.anon* %7219 to i32*
  %7221 = load i32, i32* %7220, align 8
  %7222 = zext i32 %7221 to i64
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7224 = bitcast %union.anon* %7223 to i32*
  %7225 = load i32, i32* %7224, align 8
  %7226 = zext i32 %7225 to i64
  %7227 = inttoptr i64 %7216 to i32*
  %7228 = load i32, i32* %7227
  %7229 = sext i32 %7228 to i64
  %7230 = shl i64 %7226, 32
  %7231 = or i64 %7230, %7222
  %7232 = sdiv i64 %7231, %7229
  %7233 = shl i64 %7232, 32
  %7234 = ashr exact i64 %7233, 32
  %7235 = icmp eq i64 %7232, %7234
  br i1 %7235, label %7240, label %7236

; <label>:7236:                                   ; preds = %block_.L_432fd7
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7238 = load i64, i64* %7237, align 8
  %7239 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7238, %struct.Memory* %loadMem_432ff0)
  br label %routine_idivl_0x4c8__rcx_.exit379

; <label>:7240:                                   ; preds = %block_.L_432fd7
  %7241 = srem i64 %7231, %7229
  %7242 = getelementptr inbounds %union.anon, %union.anon* %7219, i64 0, i32 0
  %7243 = and i64 %7232, 4294967295
  store i64 %7243, i64* %7242, align 8
  %7244 = getelementptr inbounds %union.anon, %union.anon* %7223, i64 0, i32 0
  %7245 = and i64 %7241, 4294967295
  store i64 %7245, i64* %7244, align 8
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7246, align 1
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7247, align 1
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7248, align 1
  %7249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7249, align 1
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7250, align 1
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7251, align 1
  br label %routine_idivl_0x4c8__rcx_.exit379

routine_idivl_0x4c8__rcx_.exit379:                ; preds = %7236, %7240
  %7252 = phi %struct.Memory* [ %7239, %7236 ], [ %loadMem_432ff0, %7240 ]
  store %struct.Memory* %7252, %struct.Memory** %MEMORY
  %loadMem_432ff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7254 = getelementptr inbounds %struct.GPR, %struct.GPR* %7253, i32 0, i32 33
  %7255 = getelementptr inbounds %struct.Reg, %struct.Reg* %7254, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %7255 to i64*
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7257 = getelementptr inbounds %struct.GPR, %struct.GPR* %7256, i32 0, i32 5
  %7258 = getelementptr inbounds %struct.Reg, %struct.Reg* %7257, i32 0, i32 0
  %RCX.i376 = bitcast %union.anon* %7258 to i64*
  %7259 = load i64, i64* %PC.i375
  %7260 = add i64 %7259, 8
  store i64 %7260, i64* %PC.i375
  %7261 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7261, i64* %RCX.i376, align 8
  store %struct.Memory* %loadMem_432ff6, %struct.Memory** %MEMORY
  %loadMem_432ffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7263 = getelementptr inbounds %struct.GPR, %struct.GPR* %7262, i32 0, i32 33
  %7264 = getelementptr inbounds %struct.Reg, %struct.Reg* %7263, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %7264 to i64*
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 5
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %RCX.i373 = bitcast %union.anon* %7267 to i64*
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 9
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %RSI.i374 = bitcast %union.anon* %7270 to i64*
  %7271 = load i64, i64* %RCX.i373
  %7272 = add i64 %7271, 8
  %7273 = load i64, i64* %PC.i372
  %7274 = add i64 %7273, 3
  store i64 %7274, i64* %PC.i372
  %7275 = inttoptr i64 %7272 to i32*
  %7276 = load i32, i32* %7275
  %7277 = zext i32 %7276 to i64
  store i64 %7277, i64* %RSI.i374, align 8
  store %struct.Memory* %loadMem_432ffe, %struct.Memory** %MEMORY
  %loadMem_433001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7279 = getelementptr inbounds %struct.GPR, %struct.GPR* %7278, i32 0, i32 33
  %7280 = getelementptr inbounds %struct.Reg, %struct.Reg* %7279, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %7280 to i64*
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 5
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %RCX.i371 = bitcast %union.anon* %7283 to i64*
  %7284 = load i64, i64* %PC.i370
  %7285 = add i64 %7284, 8
  store i64 %7285, i64* %PC.i370
  %7286 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7286, i64* %RCX.i371, align 8
  store %struct.Memory* %loadMem_433001, %struct.Memory** %MEMORY
  %loadMem_433009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 33
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 1
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %EAX.i368 = bitcast %union.anon* %7292 to i32*
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7294 = getelementptr inbounds %struct.GPR, %struct.GPR* %7293, i32 0, i32 15
  %7295 = getelementptr inbounds %struct.Reg, %struct.Reg* %7294, i32 0, i32 0
  %RBP.i369 = bitcast %union.anon* %7295 to i64*
  %7296 = load i64, i64* %RBP.i369
  %7297 = sub i64 %7296, 112
  %7298 = load i32, i32* %EAX.i368
  %7299 = zext i32 %7298 to i64
  %7300 = load i64, i64* %PC.i367
  %7301 = add i64 %7300, 3
  store i64 %7301, i64* %PC.i367
  %7302 = inttoptr i64 %7297 to i32*
  store i32 %7298, i32* %7302
  store %struct.Memory* %loadMem_433009, %struct.Memory** %MEMORY
  %loadMem_43300c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7304 = getelementptr inbounds %struct.GPR, %struct.GPR* %7303, i32 0, i32 33
  %7305 = getelementptr inbounds %struct.Reg, %struct.Reg* %7304, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %7305 to i64*
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7307 = getelementptr inbounds %struct.GPR, %struct.GPR* %7306, i32 0, i32 9
  %7308 = getelementptr inbounds %struct.Reg, %struct.Reg* %7307, i32 0, i32 0
  %ESI.i365 = bitcast %union.anon* %7308 to i32*
  %7309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7310 = getelementptr inbounds %struct.GPR, %struct.GPR* %7309, i32 0, i32 1
  %7311 = getelementptr inbounds %struct.Reg, %struct.Reg* %7310, i32 0, i32 0
  %RAX.i366 = bitcast %union.anon* %7311 to i64*
  %7312 = load i32, i32* %ESI.i365
  %7313 = zext i32 %7312 to i64
  %7314 = load i64, i64* %PC.i364
  %7315 = add i64 %7314, 2
  store i64 %7315, i64* %PC.i364
  %7316 = and i64 %7313, 4294967295
  store i64 %7316, i64* %RAX.i366, align 8
  store %struct.Memory* %loadMem_43300c, %struct.Memory** %MEMORY
  %loadMem_43300e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7318 = getelementptr inbounds %struct.GPR, %struct.GPR* %7317, i32 0, i32 33
  %7319 = getelementptr inbounds %struct.Reg, %struct.Reg* %7318, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %7319 to i64*
  %7320 = load i64, i64* %PC.i363
  %7321 = add i64 %7320, 1
  store i64 %7321, i64* %PC.i363
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7324 = bitcast %union.anon* %7323 to i32*
  %7325 = load i32, i32* %7324, align 8
  %7326 = sext i32 %7325 to i64
  %7327 = lshr i64 %7326, 32
  store i64 %7327, i64* %7322, align 8
  store %struct.Memory* %loadMem_43300e, %struct.Memory** %MEMORY
  %loadMem_43300f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7329 = getelementptr inbounds %struct.GPR, %struct.GPR* %7328, i32 0, i32 33
  %7330 = getelementptr inbounds %struct.Reg, %struct.Reg* %7329, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %7330 to i64*
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7332 = getelementptr inbounds %struct.GPR, %struct.GPR* %7331, i32 0, i32 5
  %7333 = getelementptr inbounds %struct.Reg, %struct.Reg* %7332, i32 0, i32 0
  %RCX.i359 = bitcast %union.anon* %7333 to i64*
  %7334 = load i64, i64* %RCX.i359
  %7335 = add i64 %7334, 1224
  %7336 = load i64, i64* %PC.i358
  %7337 = add i64 %7336, 6
  store i64 %7337, i64* %PC.i358
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7339 = bitcast %union.anon* %7338 to i32*
  %7340 = load i32, i32* %7339, align 8
  %7341 = zext i32 %7340 to i64
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7343 = bitcast %union.anon* %7342 to i32*
  %7344 = load i32, i32* %7343, align 8
  %7345 = zext i32 %7344 to i64
  %7346 = inttoptr i64 %7335 to i32*
  %7347 = load i32, i32* %7346
  %7348 = sext i32 %7347 to i64
  %7349 = shl i64 %7345, 32
  %7350 = or i64 %7349, %7341
  %7351 = sdiv i64 %7350, %7348
  %7352 = shl i64 %7351, 32
  %7353 = ashr exact i64 %7352, 32
  %7354 = icmp eq i64 %7351, %7353
  br i1 %7354, label %7359, label %7355

; <label>:7355:                                   ; preds = %routine_idivl_0x4c8__rcx_.exit379
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7357 = load i64, i64* %7356, align 8
  %7358 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7357, %struct.Memory* %loadMem_43300f)
  br label %routine_idivl_0x4c8__rcx_.exit

; <label>:7359:                                   ; preds = %routine_idivl_0x4c8__rcx_.exit379
  %7360 = srem i64 %7350, %7348
  %7361 = getelementptr inbounds %union.anon, %union.anon* %7338, i64 0, i32 0
  %7362 = and i64 %7351, 4294967295
  store i64 %7362, i64* %7361, align 8
  %7363 = getelementptr inbounds %union.anon, %union.anon* %7342, i64 0, i32 0
  %7364 = and i64 %7360, 4294967295
  store i64 %7364, i64* %7363, align 8
  %7365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7365, align 1
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7366, align 1
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7367, align 1
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7368, align 1
  %7369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7369, align 1
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7370, align 1
  br label %routine_idivl_0x4c8__rcx_.exit

routine_idivl_0x4c8__rcx_.exit:                   ; preds = %7355, %7359
  %7371 = phi %struct.Memory* [ %7358, %7355 ], [ %loadMem_43300f, %7359 ]
  store %struct.Memory* %7371, %struct.Memory** %MEMORY
  %loadMem_433015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7373 = getelementptr inbounds %struct.GPR, %struct.GPR* %7372, i32 0, i32 33
  %7374 = getelementptr inbounds %struct.Reg, %struct.Reg* %7373, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %7374 to i64*
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7376 = getelementptr inbounds %struct.GPR, %struct.GPR* %7375, i32 0, i32 9
  %7377 = getelementptr inbounds %struct.Reg, %struct.Reg* %7376, i32 0, i32 0
  %RSI.i356 = bitcast %union.anon* %7377 to i64*
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7379 = getelementptr inbounds %struct.GPR, %struct.GPR* %7378, i32 0, i32 15
  %7380 = getelementptr inbounds %struct.Reg, %struct.Reg* %7379, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %7380 to i64*
  %7381 = load i64, i64* %RBP.i357
  %7382 = sub i64 %7381, 112
  %7383 = load i64, i64* %PC.i355
  %7384 = add i64 %7383, 3
  store i64 %7384, i64* %PC.i355
  %7385 = inttoptr i64 %7382 to i32*
  %7386 = load i32, i32* %7385
  %7387 = zext i32 %7386 to i64
  store i64 %7387, i64* %RSI.i356, align 8
  store %struct.Memory* %loadMem_433015, %struct.Memory** %MEMORY
  %loadMem_433018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 33
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %7390 to i64*
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7392 = getelementptr inbounds %struct.GPR, %struct.GPR* %7391, i32 0, i32 1
  %7393 = getelementptr inbounds %struct.Reg, %struct.Reg* %7392, i32 0, i32 0
  %EAX.i354 = bitcast %union.anon* %7393 to i32*
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7395 = getelementptr inbounds %struct.GPR, %struct.GPR* %7394, i32 0, i32 9
  %7396 = getelementptr inbounds %struct.Reg, %struct.Reg* %7395, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %7396 to i32*
  %7397 = load i32, i32* %ESI.i
  %7398 = zext i32 %7397 to i64
  %7399 = load i32, i32* %EAX.i354
  %7400 = zext i32 %7399 to i64
  %7401 = load i64, i64* %PC.i353
  %7402 = add i64 %7401, 2
  store i64 %7402, i64* %PC.i353
  %7403 = sub i32 %7397, %7399
  %7404 = icmp ult i32 %7397, %7399
  %7405 = zext i1 %7404 to i8
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7405, i8* %7406, align 1
  %7407 = and i32 %7403, 255
  %7408 = call i32 @llvm.ctpop.i32(i32 %7407)
  %7409 = trunc i32 %7408 to i8
  %7410 = and i8 %7409, 1
  %7411 = xor i8 %7410, 1
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7411, i8* %7412, align 1
  %7413 = xor i64 %7400, %7398
  %7414 = trunc i64 %7413 to i32
  %7415 = xor i32 %7414, %7403
  %7416 = lshr i32 %7415, 4
  %7417 = trunc i32 %7416 to i8
  %7418 = and i8 %7417, 1
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7418, i8* %7419, align 1
  %7420 = icmp eq i32 %7403, 0
  %7421 = zext i1 %7420 to i8
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7421, i8* %7422, align 1
  %7423 = lshr i32 %7403, 31
  %7424 = trunc i32 %7423 to i8
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7424, i8* %7425, align 1
  %7426 = lshr i32 %7397, 31
  %7427 = lshr i32 %7399, 31
  %7428 = xor i32 %7427, %7426
  %7429 = xor i32 %7423, %7426
  %7430 = add i32 %7429, %7428
  %7431 = icmp eq i32 %7430, 2
  %7432 = zext i1 %7431 to i8
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7432, i8* %7433, align 1
  store %struct.Memory* %loadMem_433018, %struct.Memory** %MEMORY
  %loadMem_43301a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7435 = getelementptr inbounds %struct.GPR, %struct.GPR* %7434, i32 0, i32 33
  %7436 = getelementptr inbounds %struct.Reg, %struct.Reg* %7435, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %7436 to i64*
  %7437 = load i64, i64* %PC.i352
  %7438 = add i64 %7437, 157
  %7439 = load i64, i64* %PC.i352
  %7440 = add i64 %7439, 6
  %7441 = load i64, i64* %PC.i352
  %7442 = add i64 %7441, 6
  store i64 %7442, i64* %PC.i352
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7444 = load i8, i8* %7443, align 1
  %7445 = icmp ne i8 %7444, 0
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7447 = load i8, i8* %7446, align 1
  %7448 = icmp ne i8 %7447, 0
  %7449 = xor i1 %7445, %7448
  %7450 = zext i1 %7449 to i8
  store i8 %7450, i8* %BRANCH_TAKEN, align 1
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7452 = select i1 %7449, i64 %7438, i64 %7440
  store i64 %7452, i64* %7451, align 8
  store %struct.Memory* %loadMem_43301a, %struct.Memory** %MEMORY
  %loadBr_43301a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43301a = icmp eq i8 %loadBr_43301a, 1
  br i1 %cmpBr_43301a, label %block_.L_4330b7, label %block_433020

block_433020:                                     ; preds = %routine_idivl_0x4c8__rcx_.exit
  %loadMem_433020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7454 = getelementptr inbounds %struct.GPR, %struct.GPR* %7453, i32 0, i32 33
  %7455 = getelementptr inbounds %struct.Reg, %struct.Reg* %7454, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %7455 to i64*
  %7456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7457 = getelementptr inbounds %struct.GPR, %struct.GPR* %7456, i32 0, i32 1
  %7458 = getelementptr inbounds %struct.Reg, %struct.Reg* %7457, i32 0, i32 0
  %RAX.i351 = bitcast %union.anon* %7458 to i64*
  %7459 = load i64, i64* %PC.i350
  %7460 = add i64 %7459, 8
  store i64 %7460, i64* %PC.i350
  %7461 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7461, i64* %RAX.i351, align 8
  store %struct.Memory* %loadMem_433020, %struct.Memory** %MEMORY
  %loadMem_433028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 33
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %7464 to i64*
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7466 = getelementptr inbounds %struct.GPR, %struct.GPR* %7465, i32 0, i32 1
  %7467 = getelementptr inbounds %struct.Reg, %struct.Reg* %7466, i32 0, i32 0
  %RAX.i349 = bitcast %union.anon* %7467 to i64*
  %7468 = load i64, i64* %RAX.i349
  %7469 = load i64, i64* %PC.i348
  %7470 = add i64 %7469, 3
  store i64 %7470, i64* %PC.i348
  %7471 = inttoptr i64 %7468 to i32*
  %7472 = load i32, i32* %7471
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7473, align 1
  %7474 = and i32 %7472, 255
  %7475 = call i32 @llvm.ctpop.i32(i32 %7474)
  %7476 = trunc i32 %7475 to i8
  %7477 = and i8 %7476, 1
  %7478 = xor i8 %7477, 1
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7478, i8* %7479, align 1
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7480, align 1
  %7481 = icmp eq i32 %7472, 0
  %7482 = zext i1 %7481 to i8
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7482, i8* %7483, align 1
  %7484 = lshr i32 %7472, 31
  %7485 = trunc i32 %7484 to i8
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7485, i8* %7486, align 1
  %7487 = lshr i32 %7472, 31
  %7488 = xor i32 %7484, %7487
  %7489 = add i32 %7488, %7487
  %7490 = icmp eq i32 %7489, 2
  %7491 = zext i1 %7490 to i8
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7491, i8* %7492, align 1
  store %struct.Memory* %loadMem_433028, %struct.Memory** %MEMORY
  %loadMem_43302b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 33
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %7495 to i64*
  %7496 = load i64, i64* %PC.i347
  %7497 = add i64 %7496, 90
  %7498 = load i64, i64* %PC.i347
  %7499 = add i64 %7498, 6
  %7500 = load i64, i64* %PC.i347
  %7501 = add i64 %7500, 6
  store i64 %7501, i64* %PC.i347
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7503 = load i8, i8* %7502, align 1
  store i8 %7503, i8* %BRANCH_TAKEN, align 1
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7505 = icmp ne i8 %7503, 0
  %7506 = select i1 %7505, i64 %7497, i64 %7499
  store i64 %7506, i64* %7504, align 8
  store %struct.Memory* %loadMem_43302b, %struct.Memory** %MEMORY
  %loadBr_43302b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43302b = icmp eq i8 %loadBr_43302b, 1
  br i1 %cmpBr_43302b, label %block_.L_433085, label %block_433031

block_433031:                                     ; preds = %block_433020
  %loadMem_433031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7508 = getelementptr inbounds %struct.GPR, %struct.GPR* %7507, i32 0, i32 33
  %7509 = getelementptr inbounds %struct.Reg, %struct.Reg* %7508, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %7509 to i64*
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7511 = getelementptr inbounds %struct.GPR, %struct.GPR* %7510, i32 0, i32 1
  %7512 = getelementptr inbounds %struct.Reg, %struct.Reg* %7511, i32 0, i32 0
  %RAX.i346 = bitcast %union.anon* %7512 to i64*
  %7513 = load i64, i64* %PC.i345
  %7514 = add i64 %7513, 8
  store i64 %7514, i64* %PC.i345
  %7515 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7515, i64* %RAX.i346, align 8
  store %struct.Memory* %loadMem_433031, %struct.Memory** %MEMORY
  %loadMem_433039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7517 = getelementptr inbounds %struct.GPR, %struct.GPR* %7516, i32 0, i32 33
  %7518 = getelementptr inbounds %struct.Reg, %struct.Reg* %7517, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %7518 to i64*
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7520 = getelementptr inbounds %struct.GPR, %struct.GPR* %7519, i32 0, i32 1
  %7521 = getelementptr inbounds %struct.Reg, %struct.Reg* %7520, i32 0, i32 0
  %RAX.i343 = bitcast %union.anon* %7521 to i64*
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7523 = getelementptr inbounds %struct.GPR, %struct.GPR* %7522, i32 0, i32 5
  %7524 = getelementptr inbounds %struct.Reg, %struct.Reg* %7523, i32 0, i32 0
  %RCX.i344 = bitcast %union.anon* %7524 to i64*
  %7525 = load i64, i64* %RAX.i343
  %7526 = add i64 %7525, 8
  %7527 = load i64, i64* %PC.i342
  %7528 = add i64 %7527, 3
  store i64 %7528, i64* %PC.i342
  %7529 = inttoptr i64 %7526 to i32*
  %7530 = load i32, i32* %7529
  %7531 = zext i32 %7530 to i64
  store i64 %7531, i64* %RCX.i344, align 8
  store %struct.Memory* %loadMem_433039, %struct.Memory** %MEMORY
  %loadMem_43303c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7533 = getelementptr inbounds %struct.GPR, %struct.GPR* %7532, i32 0, i32 33
  %7534 = getelementptr inbounds %struct.Reg, %struct.Reg* %7533, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %7534 to i64*
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7536 = getelementptr inbounds %struct.GPR, %struct.GPR* %7535, i32 0, i32 1
  %7537 = getelementptr inbounds %struct.Reg, %struct.Reg* %7536, i32 0, i32 0
  %RAX.i341 = bitcast %union.anon* %7537 to i64*
  %7538 = load i64, i64* %PC.i340
  %7539 = add i64 %7538, 8
  store i64 %7539, i64* %PC.i340
  %7540 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7540, i64* %RAX.i341, align 8
  store %struct.Memory* %loadMem_43303c, %struct.Memory** %MEMORY
  %loadMem_433044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7542 = getelementptr inbounds %struct.GPR, %struct.GPR* %7541, i32 0, i32 33
  %7543 = getelementptr inbounds %struct.Reg, %struct.Reg* %7542, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %7543 to i64*
  %7544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7545 = getelementptr inbounds %struct.GPR, %struct.GPR* %7544, i32 0, i32 1
  %7546 = getelementptr inbounds %struct.Reg, %struct.Reg* %7545, i32 0, i32 0
  %RAX.i338 = bitcast %union.anon* %7546 to i64*
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7548 = getelementptr inbounds %struct.GPR, %struct.GPR* %7547, i32 0, i32 5
  %7549 = getelementptr inbounds %struct.Reg, %struct.Reg* %7548, i32 0, i32 0
  %RCX.i339 = bitcast %union.anon* %7549 to i64*
  %7550 = load i64, i64* %RCX.i339
  %7551 = load i64, i64* %RAX.i338
  %7552 = load i64, i64* %PC.i337
  %7553 = add i64 %7552, 2
  store i64 %7553, i64* %PC.i337
  %7554 = trunc i64 %7550 to i32
  %7555 = inttoptr i64 %7551 to i32*
  %7556 = load i32, i32* %7555
  %7557 = sub i32 %7554, %7556
  %7558 = zext i32 %7557 to i64
  store i64 %7558, i64* %RCX.i339, align 8
  %7559 = icmp ult i32 %7554, %7556
  %7560 = zext i1 %7559 to i8
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7560, i8* %7561, align 1
  %7562 = and i32 %7557, 255
  %7563 = call i32 @llvm.ctpop.i32(i32 %7562)
  %7564 = trunc i32 %7563 to i8
  %7565 = and i8 %7564, 1
  %7566 = xor i8 %7565, 1
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7566, i8* %7567, align 1
  %7568 = xor i32 %7556, %7554
  %7569 = xor i32 %7568, %7557
  %7570 = lshr i32 %7569, 4
  %7571 = trunc i32 %7570 to i8
  %7572 = and i8 %7571, 1
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7572, i8* %7573, align 1
  %7574 = icmp eq i32 %7557, 0
  %7575 = zext i1 %7574 to i8
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7575, i8* %7576, align 1
  %7577 = lshr i32 %7557, 31
  %7578 = trunc i32 %7577 to i8
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7578, i8* %7579, align 1
  %7580 = lshr i32 %7554, 31
  %7581 = lshr i32 %7556, 31
  %7582 = xor i32 %7581, %7580
  %7583 = xor i32 %7577, %7580
  %7584 = add i32 %7583, %7582
  %7585 = icmp eq i32 %7584, 2
  %7586 = zext i1 %7585 to i8
  %7587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7586, i8* %7587, align 1
  store %struct.Memory* %loadMem_433044, %struct.Memory** %MEMORY
  %loadMem_433046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7589 = getelementptr inbounds %struct.GPR, %struct.GPR* %7588, i32 0, i32 33
  %7590 = getelementptr inbounds %struct.Reg, %struct.Reg* %7589, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %7590 to i64*
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 1
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %7593 to i64*
  %7594 = load i64, i64* %PC.i335
  %7595 = add i64 %7594, 8
  store i64 %7595, i64* %PC.i335
  %7596 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7596, i64* %RAX.i336, align 8
  store %struct.Memory* %loadMem_433046, %struct.Memory** %MEMORY
  %loadMem_43304e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7598 = getelementptr inbounds %struct.GPR, %struct.GPR* %7597, i32 0, i32 33
  %7599 = getelementptr inbounds %struct.Reg, %struct.Reg* %7598, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %7599 to i64*
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7601 = getelementptr inbounds %struct.GPR, %struct.GPR* %7600, i32 0, i32 1
  %7602 = getelementptr inbounds %struct.Reg, %struct.Reg* %7601, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %7602 to i64*
  %7603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7604 = getelementptr inbounds %struct.GPR, %struct.GPR* %7603, i32 0, i32 7
  %7605 = getelementptr inbounds %struct.Reg, %struct.Reg* %7604, i32 0, i32 0
  %RDX.i334 = bitcast %union.anon* %7605 to i64*
  %7606 = load i64, i64* %RAX.i333
  %7607 = add i64 %7606, 8
  %7608 = load i64, i64* %PC.i332
  %7609 = add i64 %7608, 3
  store i64 %7609, i64* %PC.i332
  %7610 = inttoptr i64 %7607 to i32*
  %7611 = load i32, i32* %7610
  %7612 = zext i32 %7611 to i64
  store i64 %7612, i64* %RDX.i334, align 8
  store %struct.Memory* %loadMem_43304e, %struct.Memory** %MEMORY
  %loadMem_433051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 33
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %7615 to i64*
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7617 = getelementptr inbounds %struct.GPR, %struct.GPR* %7616, i32 0, i32 1
  %7618 = getelementptr inbounds %struct.Reg, %struct.Reg* %7617, i32 0, i32 0
  %RAX.i331 = bitcast %union.anon* %7618 to i64*
  %7619 = load i64, i64* %PC.i330
  %7620 = add i64 %7619, 8
  store i64 %7620, i64* %PC.i330
  %7621 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7621, i64* %RAX.i331, align 8
  store %struct.Memory* %loadMem_433051, %struct.Memory** %MEMORY
  %loadMem_433059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7623 = getelementptr inbounds %struct.GPR, %struct.GPR* %7622, i32 0, i32 33
  %7624 = getelementptr inbounds %struct.Reg, %struct.Reg* %7623, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %7624 to i64*
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7626 = getelementptr inbounds %struct.GPR, %struct.GPR* %7625, i32 0, i32 1
  %7627 = getelementptr inbounds %struct.Reg, %struct.Reg* %7626, i32 0, i32 0
  %RAX.i328 = bitcast %union.anon* %7627 to i64*
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7629 = getelementptr inbounds %struct.GPR, %struct.GPR* %7628, i32 0, i32 7
  %7630 = getelementptr inbounds %struct.Reg, %struct.Reg* %7629, i32 0, i32 0
  %RDX.i329 = bitcast %union.anon* %7630 to i64*
  %7631 = load i64, i64* %RDX.i329
  %7632 = load i64, i64* %RAX.i328
  %7633 = load i64, i64* %PC.i327
  %7634 = add i64 %7633, 2
  store i64 %7634, i64* %PC.i327
  %7635 = trunc i64 %7631 to i32
  %7636 = inttoptr i64 %7632 to i32*
  %7637 = load i32, i32* %7636
  %7638 = sub i32 %7635, %7637
  %7639 = zext i32 %7638 to i64
  store i64 %7639, i64* %RDX.i329, align 8
  %7640 = icmp ult i32 %7635, %7637
  %7641 = zext i1 %7640 to i8
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7641, i8* %7642, align 1
  %7643 = and i32 %7638, 255
  %7644 = call i32 @llvm.ctpop.i32(i32 %7643)
  %7645 = trunc i32 %7644 to i8
  %7646 = and i8 %7645, 1
  %7647 = xor i8 %7646, 1
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7647, i8* %7648, align 1
  %7649 = xor i32 %7637, %7635
  %7650 = xor i32 %7649, %7638
  %7651 = lshr i32 %7650, 4
  %7652 = trunc i32 %7651 to i8
  %7653 = and i8 %7652, 1
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7653, i8* %7654, align 1
  %7655 = icmp eq i32 %7638, 0
  %7656 = zext i1 %7655 to i8
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7656, i8* %7657, align 1
  %7658 = lshr i32 %7638, 31
  %7659 = trunc i32 %7658 to i8
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7659, i8* %7660, align 1
  %7661 = lshr i32 %7635, 31
  %7662 = lshr i32 %7637, 31
  %7663 = xor i32 %7662, %7661
  %7664 = xor i32 %7658, %7661
  %7665 = add i32 %7664, %7663
  %7666 = icmp eq i32 %7665, 2
  %7667 = zext i1 %7666 to i8
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7667, i8* %7668, align 1
  store %struct.Memory* %loadMem_433059, %struct.Memory** %MEMORY
  %loadMem_43305b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 33
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %7671 to i64*
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7673 = getelementptr inbounds %struct.GPR, %struct.GPR* %7672, i32 0, i32 7
  %7674 = getelementptr inbounds %struct.Reg, %struct.Reg* %7673, i32 0, i32 0
  %RDX.i326 = bitcast %union.anon* %7674 to i64*
  %7675 = load i64, i64* %RDX.i326
  %7676 = load i64, i64* %PC.i325
  %7677 = add i64 %7676, 3
  store i64 %7677, i64* %PC.i325
  %7678 = trunc i64 %7675 to i32
  %7679 = sub i32 %7678, 1
  %7680 = zext i32 %7679 to i64
  store i64 %7680, i64* %RDX.i326, align 8
  %7681 = icmp ult i32 %7678, 1
  %7682 = zext i1 %7681 to i8
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7682, i8* %7683, align 1
  %7684 = and i32 %7679, 255
  %7685 = call i32 @llvm.ctpop.i32(i32 %7684)
  %7686 = trunc i32 %7685 to i8
  %7687 = and i8 %7686, 1
  %7688 = xor i8 %7687, 1
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7688, i8* %7689, align 1
  %7690 = xor i64 1, %7675
  %7691 = trunc i64 %7690 to i32
  %7692 = xor i32 %7691, %7679
  %7693 = lshr i32 %7692, 4
  %7694 = trunc i32 %7693 to i8
  %7695 = and i8 %7694, 1
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7695, i8* %7696, align 1
  %7697 = icmp eq i32 %7679, 0
  %7698 = zext i1 %7697 to i8
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7698, i8* %7699, align 1
  %7700 = lshr i32 %7679, 31
  %7701 = trunc i32 %7700 to i8
  %7702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7701, i8* %7702, align 1
  %7703 = lshr i32 %7678, 31
  %7704 = xor i32 %7700, %7703
  %7705 = add i32 %7704, %7703
  %7706 = icmp eq i32 %7705, 2
  %7707 = zext i1 %7706 to i8
  %7708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7707, i8* %7708, align 1
  store %struct.Memory* %loadMem_43305b, %struct.Memory** %MEMORY
  %loadMem_43305e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7710 = getelementptr inbounds %struct.GPR, %struct.GPR* %7709, i32 0, i32 33
  %7711 = getelementptr inbounds %struct.Reg, %struct.Reg* %7710, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %7711 to i64*
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7713 = getelementptr inbounds %struct.GPR, %struct.GPR* %7712, i32 0, i32 1
  %7714 = getelementptr inbounds %struct.Reg, %struct.Reg* %7713, i32 0, i32 0
  %RAX.i324 = bitcast %union.anon* %7714 to i64*
  %7715 = load i64, i64* %PC.i323
  %7716 = add i64 %7715, 8
  store i64 %7716, i64* %PC.i323
  %7717 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7717, i64* %RAX.i324, align 8
  store %struct.Memory* %loadMem_43305e, %struct.Memory** %MEMORY
  %loadMem_433066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7719 = getelementptr inbounds %struct.GPR, %struct.GPR* %7718, i32 0, i32 33
  %7720 = getelementptr inbounds %struct.Reg, %struct.Reg* %7719, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %7720 to i64*
  %7721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7722 = getelementptr inbounds %struct.GPR, %struct.GPR* %7721, i32 0, i32 1
  %7723 = getelementptr inbounds %struct.Reg, %struct.Reg* %7722, i32 0, i32 0
  %RAX.i321 = bitcast %union.anon* %7723 to i64*
  %7724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7725 = getelementptr inbounds %struct.GPR, %struct.GPR* %7724, i32 0, i32 7
  %7726 = getelementptr inbounds %struct.Reg, %struct.Reg* %7725, i32 0, i32 0
  %RDX.i322 = bitcast %union.anon* %7726 to i64*
  %7727 = load i64, i64* %RDX.i322
  %7728 = load i64, i64* %RAX.i321
  %7729 = add i64 %7728, 1236
  %7730 = load i64, i64* %PC.i320
  %7731 = add i64 %7730, 7
  store i64 %7731, i64* %PC.i320
  %7732 = inttoptr i64 %7729 to i32*
  %7733 = load i32, i32* %7732
  %7734 = shl i64 %7727, 32
  %7735 = ashr exact i64 %7734, 32
  %7736 = sext i32 %7733 to i64
  %7737 = mul i64 %7736, %7735
  %7738 = trunc i64 %7737 to i32
  %7739 = and i64 %7737, 4294967295
  store i64 %7739, i64* %RDX.i322, align 8
  %7740 = shl i64 %7737, 32
  %7741 = ashr exact i64 %7740, 32
  %7742 = icmp ne i64 %7741, %7737
  %7743 = zext i1 %7742 to i8
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7743, i8* %7744, align 1
  %7745 = and i32 %7738, 255
  %7746 = call i32 @llvm.ctpop.i32(i32 %7745)
  %7747 = trunc i32 %7746 to i8
  %7748 = and i8 %7747, 1
  %7749 = xor i8 %7748, 1
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7749, i8* %7750, align 1
  %7751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7751, align 1
  %7752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7752, align 1
  %7753 = lshr i32 %7738, 31
  %7754 = trunc i32 %7753 to i8
  %7755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7754, i8* %7755, align 1
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7743, i8* %7756, align 1
  store %struct.Memory* %loadMem_433066, %struct.Memory** %MEMORY
  %loadMem_43306d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7758 = getelementptr inbounds %struct.GPR, %struct.GPR* %7757, i32 0, i32 33
  %7759 = getelementptr inbounds %struct.Reg, %struct.Reg* %7758, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %7759 to i64*
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7761 = getelementptr inbounds %struct.GPR, %struct.GPR* %7760, i32 0, i32 7
  %7762 = getelementptr inbounds %struct.Reg, %struct.Reg* %7761, i32 0, i32 0
  %EDX.i318 = bitcast %union.anon* %7762 to i32*
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7764 = getelementptr inbounds %struct.GPR, %struct.GPR* %7763, i32 0, i32 5
  %7765 = getelementptr inbounds %struct.Reg, %struct.Reg* %7764, i32 0, i32 0
  %RCX.i319 = bitcast %union.anon* %7765 to i64*
  %7766 = load i64, i64* %RCX.i319
  %7767 = load i32, i32* %EDX.i318
  %7768 = zext i32 %7767 to i64
  %7769 = load i64, i64* %PC.i317
  %7770 = add i64 %7769, 2
  store i64 %7770, i64* %PC.i317
  %7771 = trunc i64 %7766 to i32
  %7772 = add i32 %7767, %7771
  %7773 = zext i32 %7772 to i64
  store i64 %7773, i64* %RCX.i319, align 8
  %7774 = icmp ult i32 %7772, %7771
  %7775 = icmp ult i32 %7772, %7767
  %7776 = or i1 %7774, %7775
  %7777 = zext i1 %7776 to i8
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7777, i8* %7778, align 1
  %7779 = and i32 %7772, 255
  %7780 = call i32 @llvm.ctpop.i32(i32 %7779)
  %7781 = trunc i32 %7780 to i8
  %7782 = and i8 %7781, 1
  %7783 = xor i8 %7782, 1
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7783, i8* %7784, align 1
  %7785 = xor i64 %7768, %7766
  %7786 = trunc i64 %7785 to i32
  %7787 = xor i32 %7786, %7772
  %7788 = lshr i32 %7787, 4
  %7789 = trunc i32 %7788 to i8
  %7790 = and i8 %7789, 1
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7790, i8* %7791, align 1
  %7792 = icmp eq i32 %7772, 0
  %7793 = zext i1 %7792 to i8
  %7794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7793, i8* %7794, align 1
  %7795 = lshr i32 %7772, 31
  %7796 = trunc i32 %7795 to i8
  %7797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7796, i8* %7797, align 1
  %7798 = lshr i32 %7771, 31
  %7799 = lshr i32 %7767, 31
  %7800 = xor i32 %7795, %7798
  %7801 = xor i32 %7795, %7799
  %7802 = add i32 %7800, %7801
  %7803 = icmp eq i32 %7802, 2
  %7804 = zext i1 %7803 to i8
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7804, i8* %7805, align 1
  store %struct.Memory* %loadMem_43306d, %struct.Memory** %MEMORY
  %loadMem_43306f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7807 = getelementptr inbounds %struct.GPR, %struct.GPR* %7806, i32 0, i32 33
  %7808 = getelementptr inbounds %struct.Reg, %struct.Reg* %7807, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %7808 to i64*
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7810 = getelementptr inbounds %struct.GPR, %struct.GPR* %7809, i32 0, i32 1
  %7811 = getelementptr inbounds %struct.Reg, %struct.Reg* %7810, i32 0, i32 0
  %RAX.i316 = bitcast %union.anon* %7811 to i64*
  %7812 = load i64, i64* %PC.i315
  %7813 = add i64 %7812, 8
  store i64 %7813, i64* %PC.i315
  %7814 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7814, i64* %RAX.i316, align 8
  store %struct.Memory* %loadMem_43306f, %struct.Memory** %MEMORY
  %loadMem_433077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7816 = getelementptr inbounds %struct.GPR, %struct.GPR* %7815, i32 0, i32 33
  %7817 = getelementptr inbounds %struct.Reg, %struct.Reg* %7816, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %7817 to i64*
  %7818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7819 = getelementptr inbounds %struct.GPR, %struct.GPR* %7818, i32 0, i32 1
  %7820 = getelementptr inbounds %struct.Reg, %struct.Reg* %7819, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %7820 to i64*
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7822 = getelementptr inbounds %struct.GPR, %struct.GPR* %7821, i32 0, i32 5
  %7823 = getelementptr inbounds %struct.Reg, %struct.Reg* %7822, i32 0, i32 0
  %RCX.i314 = bitcast %union.anon* %7823 to i64*
  %7824 = load i64, i64* %RCX.i314
  %7825 = load i64, i64* %RAX.i313
  %7826 = add i64 %7825, 1236
  %7827 = load i64, i64* %PC.i312
  %7828 = add i64 %7827, 6
  store i64 %7828, i64* %PC.i312
  %7829 = trunc i64 %7824 to i32
  %7830 = inttoptr i64 %7826 to i32*
  %7831 = load i32, i32* %7830
  %7832 = add i32 %7831, %7829
  %7833 = zext i32 %7832 to i64
  store i64 %7833, i64* %RCX.i314, align 8
  %7834 = icmp ult i32 %7832, %7829
  %7835 = icmp ult i32 %7832, %7831
  %7836 = or i1 %7834, %7835
  %7837 = zext i1 %7836 to i8
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7837, i8* %7838, align 1
  %7839 = and i32 %7832, 255
  %7840 = call i32 @llvm.ctpop.i32(i32 %7839)
  %7841 = trunc i32 %7840 to i8
  %7842 = and i8 %7841, 1
  %7843 = xor i8 %7842, 1
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7843, i8* %7844, align 1
  %7845 = xor i32 %7831, %7829
  %7846 = xor i32 %7845, %7832
  %7847 = lshr i32 %7846, 4
  %7848 = trunc i32 %7847 to i8
  %7849 = and i8 %7848, 1
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7849, i8* %7850, align 1
  %7851 = icmp eq i32 %7832, 0
  %7852 = zext i1 %7851 to i8
  %7853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7852, i8* %7853, align 1
  %7854 = lshr i32 %7832, 31
  %7855 = trunc i32 %7854 to i8
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7855, i8* %7856, align 1
  %7857 = lshr i32 %7829, 31
  %7858 = lshr i32 %7831, 31
  %7859 = xor i32 %7854, %7857
  %7860 = xor i32 %7854, %7858
  %7861 = add i32 %7859, %7860
  %7862 = icmp eq i32 %7861, 2
  %7863 = zext i1 %7862 to i8
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7863, i8* %7864, align 1
  store %struct.Memory* %loadMem_433077, %struct.Memory** %MEMORY
  %loadMem_43307d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7866 = getelementptr inbounds %struct.GPR, %struct.GPR* %7865, i32 0, i32 33
  %7867 = getelementptr inbounds %struct.Reg, %struct.Reg* %7866, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %7867 to i64*
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7869 = getelementptr inbounds %struct.GPR, %struct.GPR* %7868, i32 0, i32 5
  %7870 = getelementptr inbounds %struct.Reg, %struct.Reg* %7869, i32 0, i32 0
  %ECX.i310 = bitcast %union.anon* %7870 to i32*
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7872 = getelementptr inbounds %struct.GPR, %struct.GPR* %7871, i32 0, i32 15
  %7873 = getelementptr inbounds %struct.Reg, %struct.Reg* %7872, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %7873 to i64*
  %7874 = load i64, i64* %RBP.i311
  %7875 = sub i64 %7874, 28
  %7876 = load i32, i32* %ECX.i310
  %7877 = zext i32 %7876 to i64
  %7878 = load i64, i64* %PC.i309
  %7879 = add i64 %7878, 3
  store i64 %7879, i64* %PC.i309
  %7880 = inttoptr i64 %7875 to i32*
  store i32 %7876, i32* %7880
  store %struct.Memory* %loadMem_43307d, %struct.Memory** %MEMORY
  %loadMem_433080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 33
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %7883 to i64*
  %7884 = load i64, i64* %PC.i308
  %7885 = add i64 %7884, 50
  %7886 = load i64, i64* %PC.i308
  %7887 = add i64 %7886, 5
  store i64 %7887, i64* %PC.i308
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7885, i64* %7888, align 8
  store %struct.Memory* %loadMem_433080, %struct.Memory** %MEMORY
  br label %block_.L_4330b2

block_.L_433085:                                  ; preds = %block_433020
  %loadMem_433085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7890 = getelementptr inbounds %struct.GPR, %struct.GPR* %7889, i32 0, i32 33
  %7891 = getelementptr inbounds %struct.Reg, %struct.Reg* %7890, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %7891 to i64*
  %7892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7893 = getelementptr inbounds %struct.GPR, %struct.GPR* %7892, i32 0, i32 1
  %7894 = getelementptr inbounds %struct.Reg, %struct.Reg* %7893, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %7894 to i64*
  %7895 = load i64, i64* %PC.i306
  %7896 = add i64 %7895, 8
  store i64 %7896, i64* %PC.i306
  %7897 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7897, i64* %RAX.i307, align 8
  store %struct.Memory* %loadMem_433085, %struct.Memory** %MEMORY
  %loadMem_43308d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7899 = getelementptr inbounds %struct.GPR, %struct.GPR* %7898, i32 0, i32 33
  %7900 = getelementptr inbounds %struct.Reg, %struct.Reg* %7899, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %7900 to i64*
  %7901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7902 = getelementptr inbounds %struct.GPR, %struct.GPR* %7901, i32 0, i32 1
  %7903 = getelementptr inbounds %struct.Reg, %struct.Reg* %7902, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %7903 to i64*
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7905 = getelementptr inbounds %struct.GPR, %struct.GPR* %7904, i32 0, i32 5
  %7906 = getelementptr inbounds %struct.Reg, %struct.Reg* %7905, i32 0, i32 0
  %RCX.i305 = bitcast %union.anon* %7906 to i64*
  %7907 = load i64, i64* %RAX.i304
  %7908 = add i64 %7907, 8
  %7909 = load i64, i64* %PC.i303
  %7910 = add i64 %7909, 3
  store i64 %7910, i64* %PC.i303
  %7911 = inttoptr i64 %7908 to i32*
  %7912 = load i32, i32* %7911
  %7913 = zext i32 %7912 to i64
  store i64 %7913, i64* %RCX.i305, align 8
  store %struct.Memory* %loadMem_43308d, %struct.Memory** %MEMORY
  %loadMem_433090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7915 = getelementptr inbounds %struct.GPR, %struct.GPR* %7914, i32 0, i32 33
  %7916 = getelementptr inbounds %struct.Reg, %struct.Reg* %7915, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %7916 to i64*
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7918 = getelementptr inbounds %struct.GPR, %struct.GPR* %7917, i32 0, i32 1
  %7919 = getelementptr inbounds %struct.Reg, %struct.Reg* %7918, i32 0, i32 0
  %RAX.i302 = bitcast %union.anon* %7919 to i64*
  %7920 = load i64, i64* %PC.i301
  %7921 = add i64 %7920, 8
  store i64 %7921, i64* %PC.i301
  %7922 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7922, i64* %RAX.i302, align 8
  store %struct.Memory* %loadMem_433090, %struct.Memory** %MEMORY
  %loadMem_433098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 33
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %7925 to i64*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 1
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %RAX.i299 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 7
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %RDX.i300 = bitcast %union.anon* %7931 to i64*
  %7932 = load i64, i64* %RAX.i299
  %7933 = add i64 %7932, 8
  %7934 = load i64, i64* %PC.i298
  %7935 = add i64 %7934, 3
  store i64 %7935, i64* %PC.i298
  %7936 = inttoptr i64 %7933 to i32*
  %7937 = load i32, i32* %7936
  %7938 = zext i32 %7937 to i64
  store i64 %7938, i64* %RDX.i300, align 8
  store %struct.Memory* %loadMem_433098, %struct.Memory** %MEMORY
  %loadMem_43309b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7940 = getelementptr inbounds %struct.GPR, %struct.GPR* %7939, i32 0, i32 33
  %7941 = getelementptr inbounds %struct.Reg, %struct.Reg* %7940, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %7941 to i64*
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7943 = getelementptr inbounds %struct.GPR, %struct.GPR* %7942, i32 0, i32 7
  %7944 = getelementptr inbounds %struct.Reg, %struct.Reg* %7943, i32 0, i32 0
  %RDX.i297 = bitcast %union.anon* %7944 to i64*
  %7945 = load i64, i64* %RDX.i297
  %7946 = load i64, i64* %PC.i296
  %7947 = add i64 %7946, 3
  store i64 %7947, i64* %PC.i296
  %7948 = trunc i64 %7945 to i32
  %7949 = sub i32 %7948, 1
  %7950 = zext i32 %7949 to i64
  store i64 %7950, i64* %RDX.i297, align 8
  %7951 = icmp ult i32 %7948, 1
  %7952 = zext i1 %7951 to i8
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7952, i8* %7953, align 1
  %7954 = and i32 %7949, 255
  %7955 = call i32 @llvm.ctpop.i32(i32 %7954)
  %7956 = trunc i32 %7955 to i8
  %7957 = and i8 %7956, 1
  %7958 = xor i8 %7957, 1
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7958, i8* %7959, align 1
  %7960 = xor i64 1, %7945
  %7961 = trunc i64 %7960 to i32
  %7962 = xor i32 %7961, %7949
  %7963 = lshr i32 %7962, 4
  %7964 = trunc i32 %7963 to i8
  %7965 = and i8 %7964, 1
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7965, i8* %7966, align 1
  %7967 = icmp eq i32 %7949, 0
  %7968 = zext i1 %7967 to i8
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7968, i8* %7969, align 1
  %7970 = lshr i32 %7949, 31
  %7971 = trunc i32 %7970 to i8
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7971, i8* %7972, align 1
  %7973 = lshr i32 %7948, 31
  %7974 = xor i32 %7970, %7973
  %7975 = add i32 %7974, %7973
  %7976 = icmp eq i32 %7975, 2
  %7977 = zext i1 %7976 to i8
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7977, i8* %7978, align 1
  store %struct.Memory* %loadMem_43309b, %struct.Memory** %MEMORY
  %loadMem_43309e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7980 = getelementptr inbounds %struct.GPR, %struct.GPR* %7979, i32 0, i32 33
  %7981 = getelementptr inbounds %struct.Reg, %struct.Reg* %7980, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %7981 to i64*
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 1
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %7984 to i64*
  %7985 = load i64, i64* %PC.i294
  %7986 = add i64 %7985, 8
  store i64 %7986, i64* %PC.i294
  %7987 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %7987, i64* %RAX.i295, align 8
  store %struct.Memory* %loadMem_43309e, %struct.Memory** %MEMORY
  %loadMem_4330a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 33
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %7990 to i64*
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7992 = getelementptr inbounds %struct.GPR, %struct.GPR* %7991, i32 0, i32 1
  %7993 = getelementptr inbounds %struct.Reg, %struct.Reg* %7992, i32 0, i32 0
  %RAX.i292 = bitcast %union.anon* %7993 to i64*
  %7994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7995 = getelementptr inbounds %struct.GPR, %struct.GPR* %7994, i32 0, i32 7
  %7996 = getelementptr inbounds %struct.Reg, %struct.Reg* %7995, i32 0, i32 0
  %RDX.i293 = bitcast %union.anon* %7996 to i64*
  %7997 = load i64, i64* %RDX.i293
  %7998 = load i64, i64* %RAX.i292
  %7999 = add i64 %7998, 1236
  %8000 = load i64, i64* %PC.i291
  %8001 = add i64 %8000, 7
  store i64 %8001, i64* %PC.i291
  %8002 = inttoptr i64 %7999 to i32*
  %8003 = load i32, i32* %8002
  %8004 = shl i64 %7997, 32
  %8005 = ashr exact i64 %8004, 32
  %8006 = sext i32 %8003 to i64
  %8007 = mul i64 %8006, %8005
  %8008 = trunc i64 %8007 to i32
  %8009 = and i64 %8007, 4294967295
  store i64 %8009, i64* %RDX.i293, align 8
  %8010 = shl i64 %8007, 32
  %8011 = ashr exact i64 %8010, 32
  %8012 = icmp ne i64 %8011, %8007
  %8013 = zext i1 %8012 to i8
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8013, i8* %8014, align 1
  %8015 = and i32 %8008, 255
  %8016 = call i32 @llvm.ctpop.i32(i32 %8015)
  %8017 = trunc i32 %8016 to i8
  %8018 = and i8 %8017, 1
  %8019 = xor i8 %8018, 1
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8019, i8* %8020, align 1
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8021, align 1
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8022, align 1
  %8023 = lshr i32 %8008, 31
  %8024 = trunc i32 %8023 to i8
  %8025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8024, i8* %8025, align 1
  %8026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8013, i8* %8026, align 1
  store %struct.Memory* %loadMem_4330a6, %struct.Memory** %MEMORY
  %loadMem_4330ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8028 = getelementptr inbounds %struct.GPR, %struct.GPR* %8027, i32 0, i32 33
  %8029 = getelementptr inbounds %struct.Reg, %struct.Reg* %8028, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %8029 to i64*
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8031 = getelementptr inbounds %struct.GPR, %struct.GPR* %8030, i32 0, i32 7
  %8032 = getelementptr inbounds %struct.Reg, %struct.Reg* %8031, i32 0, i32 0
  %EDX.i289 = bitcast %union.anon* %8032 to i32*
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8034 = getelementptr inbounds %struct.GPR, %struct.GPR* %8033, i32 0, i32 5
  %8035 = getelementptr inbounds %struct.Reg, %struct.Reg* %8034, i32 0, i32 0
  %RCX.i290 = bitcast %union.anon* %8035 to i64*
  %8036 = load i64, i64* %RCX.i290
  %8037 = load i32, i32* %EDX.i289
  %8038 = zext i32 %8037 to i64
  %8039 = load i64, i64* %PC.i288
  %8040 = add i64 %8039, 2
  store i64 %8040, i64* %PC.i288
  %8041 = trunc i64 %8036 to i32
  %8042 = add i32 %8037, %8041
  %8043 = zext i32 %8042 to i64
  store i64 %8043, i64* %RCX.i290, align 8
  %8044 = icmp ult i32 %8042, %8041
  %8045 = icmp ult i32 %8042, %8037
  %8046 = or i1 %8044, %8045
  %8047 = zext i1 %8046 to i8
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8047, i8* %8048, align 1
  %8049 = and i32 %8042, 255
  %8050 = call i32 @llvm.ctpop.i32(i32 %8049)
  %8051 = trunc i32 %8050 to i8
  %8052 = and i8 %8051, 1
  %8053 = xor i8 %8052, 1
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8053, i8* %8054, align 1
  %8055 = xor i64 %8038, %8036
  %8056 = trunc i64 %8055 to i32
  %8057 = xor i32 %8056, %8042
  %8058 = lshr i32 %8057, 4
  %8059 = trunc i32 %8058 to i8
  %8060 = and i8 %8059, 1
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8060, i8* %8061, align 1
  %8062 = icmp eq i32 %8042, 0
  %8063 = zext i1 %8062 to i8
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8063, i8* %8064, align 1
  %8065 = lshr i32 %8042, 31
  %8066 = trunc i32 %8065 to i8
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8066, i8* %8067, align 1
  %8068 = lshr i32 %8041, 31
  %8069 = lshr i32 %8037, 31
  %8070 = xor i32 %8065, %8068
  %8071 = xor i32 %8065, %8069
  %8072 = add i32 %8070, %8071
  %8073 = icmp eq i32 %8072, 2
  %8074 = zext i1 %8073 to i8
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8074, i8* %8075, align 1
  store %struct.Memory* %loadMem_4330ad, %struct.Memory** %MEMORY
  %loadMem_4330af = load %struct.Memory*, %struct.Memory** %MEMORY
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8077 = getelementptr inbounds %struct.GPR, %struct.GPR* %8076, i32 0, i32 33
  %8078 = getelementptr inbounds %struct.Reg, %struct.Reg* %8077, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %8078 to i64*
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8080 = getelementptr inbounds %struct.GPR, %struct.GPR* %8079, i32 0, i32 5
  %8081 = getelementptr inbounds %struct.Reg, %struct.Reg* %8080, i32 0, i32 0
  %ECX.i286 = bitcast %union.anon* %8081 to i32*
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8083 = getelementptr inbounds %struct.GPR, %struct.GPR* %8082, i32 0, i32 15
  %8084 = getelementptr inbounds %struct.Reg, %struct.Reg* %8083, i32 0, i32 0
  %RBP.i287 = bitcast %union.anon* %8084 to i64*
  %8085 = load i64, i64* %RBP.i287
  %8086 = sub i64 %8085, 28
  %8087 = load i32, i32* %ECX.i286
  %8088 = zext i32 %8087 to i64
  %8089 = load i64, i64* %PC.i285
  %8090 = add i64 %8089, 3
  store i64 %8090, i64* %PC.i285
  %8091 = inttoptr i64 %8086 to i32*
  store i32 %8087, i32* %8091
  store %struct.Memory* %loadMem_4330af, %struct.Memory** %MEMORY
  br label %block_.L_4330b2

block_.L_4330b2:                                  ; preds = %block_.L_433085, %block_433031
  %loadMem_4330b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8093 = getelementptr inbounds %struct.GPR, %struct.GPR* %8092, i32 0, i32 33
  %8094 = getelementptr inbounds %struct.Reg, %struct.Reg* %8093, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %8094 to i64*
  %8095 = load i64, i64* %PC.i284
  %8096 = add i64 %8095, 5
  %8097 = load i64, i64* %PC.i284
  %8098 = add i64 %8097, 5
  store i64 %8098, i64* %PC.i284
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8096, i64* %8099, align 8
  store %struct.Memory* %loadMem_4330b2, %struct.Memory** %MEMORY
  br label %block_.L_4330b7

block_.L_4330b7:                                  ; preds = %block_.L_4330b2, %routine_idivl_0x4c8__rcx_.exit
  %loadMem_4330b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8101 = getelementptr inbounds %struct.GPR, %struct.GPR* %8100, i32 0, i32 33
  %8102 = getelementptr inbounds %struct.Reg, %struct.Reg* %8101, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %8102 to i64*
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8104 = getelementptr inbounds %struct.GPR, %struct.GPR* %8103, i32 0, i32 1
  %8105 = getelementptr inbounds %struct.Reg, %struct.Reg* %8104, i32 0, i32 0
  %RAX.i283 = bitcast %union.anon* %8105 to i64*
  %8106 = load i64, i64* %PC.i282
  %8107 = add i64 %8106, 8
  store i64 %8107, i64* %PC.i282
  %8108 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8108, i64* %RAX.i283, align 8
  store %struct.Memory* %loadMem_4330b7, %struct.Memory** %MEMORY
  %loadMem_4330bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8110 = getelementptr inbounds %struct.GPR, %struct.GPR* %8109, i32 0, i32 33
  %8111 = getelementptr inbounds %struct.Reg, %struct.Reg* %8110, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %8111 to i64*
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8113 = getelementptr inbounds %struct.GPR, %struct.GPR* %8112, i32 0, i32 1
  %8114 = getelementptr inbounds %struct.Reg, %struct.Reg* %8113, i32 0, i32 0
  %RAX.i281 = bitcast %union.anon* %8114 to i64*
  %8115 = load i64, i64* %RAX.i281
  %8116 = load i64, i64* %PC.i280
  %8117 = add i64 %8116, 3
  store i64 %8117, i64* %PC.i280
  %8118 = inttoptr i64 %8115 to i32*
  %8119 = load i32, i32* %8118
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8120, align 1
  %8121 = and i32 %8119, 255
  %8122 = call i32 @llvm.ctpop.i32(i32 %8121)
  %8123 = trunc i32 %8122 to i8
  %8124 = and i8 %8123, 1
  %8125 = xor i8 %8124, 1
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8125, i8* %8126, align 1
  %8127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8127, align 1
  %8128 = icmp eq i32 %8119, 0
  %8129 = zext i1 %8128 to i8
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8129, i8* %8130, align 1
  %8131 = lshr i32 %8119, 31
  %8132 = trunc i32 %8131 to i8
  %8133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8132, i8* %8133, align 1
  %8134 = lshr i32 %8119, 31
  %8135 = xor i32 %8131, %8134
  %8136 = add i32 %8135, %8134
  %8137 = icmp eq i32 %8136, 2
  %8138 = zext i1 %8137 to i8
  %8139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8138, i8* %8139, align 1
  store %struct.Memory* %loadMem_4330bf, %struct.Memory** %MEMORY
  %loadMem_4330c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8141 = getelementptr inbounds %struct.GPR, %struct.GPR* %8140, i32 0, i32 33
  %8142 = getelementptr inbounds %struct.Reg, %struct.Reg* %8141, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %8142 to i64*
  %8143 = load i64, i64* %PC.i279
  %8144 = add i64 %8143, 35
  %8145 = load i64, i64* %PC.i279
  %8146 = add i64 %8145, 6
  %8147 = load i64, i64* %PC.i279
  %8148 = add i64 %8147, 6
  store i64 %8148, i64* %PC.i279
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8150 = load i8, i8* %8149, align 1
  %8151 = icmp eq i8 %8150, 0
  %8152 = zext i1 %8151 to i8
  store i8 %8152, i8* %BRANCH_TAKEN, align 1
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8154 = select i1 %8151, i64 %8144, i64 %8146
  store i64 %8154, i64* %8153, align 8
  store %struct.Memory* %loadMem_4330c2, %struct.Memory** %MEMORY
  %loadBr_4330c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4330c2 = icmp eq i8 %loadBr_4330c2, 1
  br i1 %cmpBr_4330c2, label %block_.L_4330e5, label %block_4330c8

block_4330c8:                                     ; preds = %block_.L_4330b7
  %loadMem_4330c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8156 = getelementptr inbounds %struct.GPR, %struct.GPR* %8155, i32 0, i32 33
  %8157 = getelementptr inbounds %struct.Reg, %struct.Reg* %8156, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %8157 to i64*
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8159 = getelementptr inbounds %struct.GPR, %struct.GPR* %8158, i32 0, i32 1
  %8160 = getelementptr inbounds %struct.Reg, %struct.Reg* %8159, i32 0, i32 0
  %RAX.i277 = bitcast %union.anon* %8160 to i64*
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8162 = getelementptr inbounds %struct.GPR, %struct.GPR* %8161, i32 0, i32 15
  %8163 = getelementptr inbounds %struct.Reg, %struct.Reg* %8162, i32 0, i32 0
  %RBP.i278 = bitcast %union.anon* %8163 to i64*
  %8164 = load i64, i64* %RBP.i278
  %8165 = sub i64 %8164, 28
  %8166 = load i64, i64* %PC.i276
  %8167 = add i64 %8166, 3
  store i64 %8167, i64* %PC.i276
  %8168 = inttoptr i64 %8165 to i32*
  %8169 = load i32, i32* %8168
  %8170 = zext i32 %8169 to i64
  store i64 %8170, i64* %RAX.i277, align 8
  store %struct.Memory* %loadMem_4330c8, %struct.Memory** %MEMORY
  %loadMem_4330cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8172 = getelementptr inbounds %struct.GPR, %struct.GPR* %8171, i32 0, i32 33
  %8173 = getelementptr inbounds %struct.Reg, %struct.Reg* %8172, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %8173 to i64*
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8175 = getelementptr inbounds %struct.GPR, %struct.GPR* %8174, i32 0, i32 5
  %8176 = getelementptr inbounds %struct.Reg, %struct.Reg* %8175, i32 0, i32 0
  %RCX.i274 = bitcast %union.anon* %8176 to i64*
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8178 = getelementptr inbounds %struct.GPR, %struct.GPR* %8177, i32 0, i32 15
  %8179 = getelementptr inbounds %struct.Reg, %struct.Reg* %8178, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %8179 to i64*
  %8180 = load i64, i64* %RBP.i275
  %8181 = sub i64 %8180, 20
  %8182 = load i64, i64* %PC.i273
  %8183 = add i64 %8182, 3
  store i64 %8183, i64* %PC.i273
  %8184 = inttoptr i64 %8181 to i32*
  %8185 = load i32, i32* %8184
  %8186 = zext i32 %8185 to i64
  store i64 %8186, i64* %RCX.i274, align 8
  store %struct.Memory* %loadMem_4330cb, %struct.Memory** %MEMORY
  %loadMem_4330ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8188 = getelementptr inbounds %struct.GPR, %struct.GPR* %8187, i32 0, i32 33
  %8189 = getelementptr inbounds %struct.Reg, %struct.Reg* %8188, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %8189 to i64*
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8191 = getelementptr inbounds %struct.GPR, %struct.GPR* %8190, i32 0, i32 5
  %8192 = getelementptr inbounds %struct.Reg, %struct.Reg* %8191, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %8192 to i64*
  %8193 = load i64, i64* %RCX.i272
  %8194 = load i64, i64* %PC.i271
  %8195 = add i64 %8194, 3
  store i64 %8195, i64* %PC.i271
  %8196 = trunc i64 %8193 to i32
  %8197 = sub i32 %8196, 1
  %8198 = zext i32 %8197 to i64
  store i64 %8198, i64* %RCX.i272, align 8
  %8199 = icmp ult i32 %8196, 1
  %8200 = zext i1 %8199 to i8
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8200, i8* %8201, align 1
  %8202 = and i32 %8197, 255
  %8203 = call i32 @llvm.ctpop.i32(i32 %8202)
  %8204 = trunc i32 %8203 to i8
  %8205 = and i8 %8204, 1
  %8206 = xor i8 %8205, 1
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8206, i8* %8207, align 1
  %8208 = xor i64 1, %8193
  %8209 = trunc i64 %8208 to i32
  %8210 = xor i32 %8209, %8197
  %8211 = lshr i32 %8210, 4
  %8212 = trunc i32 %8211 to i8
  %8213 = and i8 %8212, 1
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8213, i8* %8214, align 1
  %8215 = icmp eq i32 %8197, 0
  %8216 = zext i1 %8215 to i8
  %8217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8216, i8* %8217, align 1
  %8218 = lshr i32 %8197, 31
  %8219 = trunc i32 %8218 to i8
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8219, i8* %8220, align 1
  %8221 = lshr i32 %8196, 31
  %8222 = xor i32 %8218, %8221
  %8223 = add i32 %8222, %8221
  %8224 = icmp eq i32 %8223, 2
  %8225 = zext i1 %8224 to i8
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8225, i8* %8226, align 1
  store %struct.Memory* %loadMem_4330ce, %struct.Memory** %MEMORY
  %loadMem_4330d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8228 = getelementptr inbounds %struct.GPR, %struct.GPR* %8227, i32 0, i32 33
  %8229 = getelementptr inbounds %struct.Reg, %struct.Reg* %8228, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %8229 to i64*
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8231 = getelementptr inbounds %struct.GPR, %struct.GPR* %8230, i32 0, i32 5
  %8232 = getelementptr inbounds %struct.Reg, %struct.Reg* %8231, i32 0, i32 0
  %RCX.i270 = bitcast %union.anon* %8232 to i64*
  %8233 = load i64, i64* %RCX.i270
  %8234 = load i64, i64* %PC.i269
  %8235 = add i64 %8234, 2
  store i64 %8235, i64* %PC.i269
  %8236 = trunc i64 %8233 to i32
  %8237 = shl i32 %8236, 1
  %8238 = icmp slt i32 %8236, 0
  %8239 = icmp slt i32 %8237, 0
  %8240 = xor i1 %8238, %8239
  %8241 = zext i32 %8237 to i64
  store i64 %8241, i64* %RCX.i270, align 8
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8243 = zext i1 %8238 to i8
  store i8 %8243, i8* %8242, align 1
  %8244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8245 = and i32 %8237, 254
  %8246 = call i32 @llvm.ctpop.i32(i32 %8245)
  %8247 = trunc i32 %8246 to i8
  %8248 = and i8 %8247, 1
  %8249 = xor i8 %8248, 1
  store i8 %8249, i8* %8244, align 1
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8250, align 1
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8252 = icmp eq i32 %8237, 0
  %8253 = zext i1 %8252 to i8
  store i8 %8253, i8* %8251, align 1
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8255 = lshr i32 %8237, 31
  %8256 = trunc i32 %8255 to i8
  store i8 %8256, i8* %8254, align 1
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8258 = zext i1 %8240 to i8
  store i8 %8258, i8* %8257, align 1
  store %struct.Memory* %loadMem_4330d1, %struct.Memory** %MEMORY
  %loadMem_4330d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8260 = getelementptr inbounds %struct.GPR, %struct.GPR* %8259, i32 0, i32 33
  %8261 = getelementptr inbounds %struct.Reg, %struct.Reg* %8260, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %8261 to i64*
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 5
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %ECX.i267 = bitcast %union.anon* %8264 to i32*
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8266 = getelementptr inbounds %struct.GPR, %struct.GPR* %8265, i32 0, i32 1
  %8267 = getelementptr inbounds %struct.Reg, %struct.Reg* %8266, i32 0, i32 0
  %RAX.i268 = bitcast %union.anon* %8267 to i64*
  %8268 = load i64, i64* %RAX.i268
  %8269 = load i32, i32* %ECX.i267
  %8270 = zext i32 %8269 to i64
  %8271 = load i64, i64* %PC.i266
  %8272 = add i64 %8271, 2
  store i64 %8272, i64* %PC.i266
  %8273 = trunc i64 %8268 to i32
  %8274 = add i32 %8269, %8273
  %8275 = zext i32 %8274 to i64
  store i64 %8275, i64* %RAX.i268, align 8
  %8276 = icmp ult i32 %8274, %8273
  %8277 = icmp ult i32 %8274, %8269
  %8278 = or i1 %8276, %8277
  %8279 = zext i1 %8278 to i8
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8279, i8* %8280, align 1
  %8281 = and i32 %8274, 255
  %8282 = call i32 @llvm.ctpop.i32(i32 %8281)
  %8283 = trunc i32 %8282 to i8
  %8284 = and i8 %8283, 1
  %8285 = xor i8 %8284, 1
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8285, i8* %8286, align 1
  %8287 = xor i64 %8270, %8268
  %8288 = trunc i64 %8287 to i32
  %8289 = xor i32 %8288, %8274
  %8290 = lshr i32 %8289, 4
  %8291 = trunc i32 %8290 to i8
  %8292 = and i8 %8291, 1
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8292, i8* %8293, align 1
  %8294 = icmp eq i32 %8274, 0
  %8295 = zext i1 %8294 to i8
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8295, i8* %8296, align 1
  %8297 = lshr i32 %8274, 31
  %8298 = trunc i32 %8297 to i8
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8298, i8* %8299, align 1
  %8300 = lshr i32 %8273, 31
  %8301 = lshr i32 %8269, 31
  %8302 = xor i32 %8297, %8300
  %8303 = xor i32 %8297, %8301
  %8304 = add i32 %8302, %8303
  %8305 = icmp eq i32 %8304, 2
  %8306 = zext i1 %8305 to i8
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8306, i8* %8307, align 1
  store %struct.Memory* %loadMem_4330d4, %struct.Memory** %MEMORY
  %loadMem_4330d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8309 = getelementptr inbounds %struct.GPR, %struct.GPR* %8308, i32 0, i32 33
  %8310 = getelementptr inbounds %struct.Reg, %struct.Reg* %8309, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %8310 to i64*
  %8311 = load i64, i64* %PC.i265
  %8312 = add i64 %8311, 1
  store i64 %8312, i64* %PC.i265
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8315 = bitcast %union.anon* %8314 to i32*
  %8316 = load i32, i32* %8315, align 8
  %8317 = sext i32 %8316 to i64
  %8318 = lshr i64 %8317, 32
  store i64 %8318, i64* %8313, align 8
  store %struct.Memory* %loadMem_4330d6, %struct.Memory** %MEMORY
  %loadMem_4330d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8320 = getelementptr inbounds %struct.GPR, %struct.GPR* %8319, i32 0, i32 33
  %8321 = getelementptr inbounds %struct.Reg, %struct.Reg* %8320, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %8321 to i64*
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8323 = getelementptr inbounds %struct.GPR, %struct.GPR* %8322, i32 0, i32 15
  %8324 = getelementptr inbounds %struct.Reg, %struct.Reg* %8323, i32 0, i32 0
  %RBP.i261 = bitcast %union.anon* %8324 to i64*
  %8325 = load i64, i64* %RBP.i261
  %8326 = sub i64 %8325, 20
  %8327 = load i64, i64* %PC.i260
  %8328 = add i64 %8327, 3
  store i64 %8328, i64* %PC.i260
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8330 = bitcast %union.anon* %8329 to i32*
  %8331 = load i32, i32* %8330, align 8
  %8332 = zext i32 %8331 to i64
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8334 = bitcast %union.anon* %8333 to i32*
  %8335 = load i32, i32* %8334, align 8
  %8336 = zext i32 %8335 to i64
  %8337 = inttoptr i64 %8326 to i32*
  %8338 = load i32, i32* %8337
  %8339 = sext i32 %8338 to i64
  %8340 = shl i64 %8336, 32
  %8341 = or i64 %8340, %8332
  %8342 = sdiv i64 %8341, %8339
  %8343 = shl i64 %8342, 32
  %8344 = ashr exact i64 %8343, 32
  %8345 = icmp eq i64 %8342, %8344
  br i1 %8345, label %8350, label %8346

; <label>:8346:                                   ; preds = %block_4330c8
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8348 = load i64, i64* %8347, align 8
  %8349 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8348, %struct.Memory* %loadMem_4330d7)
  br label %routine_idivl_MINUS0x14__rbp_.exit262

; <label>:8350:                                   ; preds = %block_4330c8
  %8351 = srem i64 %8341, %8339
  %8352 = getelementptr inbounds %union.anon, %union.anon* %8329, i64 0, i32 0
  %8353 = and i64 %8342, 4294967295
  store i64 %8353, i64* %8352, align 8
  %8354 = getelementptr inbounds %union.anon, %union.anon* %8333, i64 0, i32 0
  %8355 = and i64 %8351, 4294967295
  store i64 %8355, i64* %8354, align 8
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8356, align 1
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8357, align 1
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8358, align 1
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8359, align 1
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8360, align 1
  %8361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8361, align 1
  br label %routine_idivl_MINUS0x14__rbp_.exit262

routine_idivl_MINUS0x14__rbp_.exit262:            ; preds = %8346, %8350
  %8362 = phi %struct.Memory* [ %8349, %8346 ], [ %loadMem_4330d7, %8350 ]
  store %struct.Memory* %8362, %struct.Memory** %MEMORY
  %loadMem_4330da = load %struct.Memory*, %struct.Memory** %MEMORY
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8364 = getelementptr inbounds %struct.GPR, %struct.GPR* %8363, i32 0, i32 33
  %8365 = getelementptr inbounds %struct.Reg, %struct.Reg* %8364, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %8365 to i64*
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8367 = getelementptr inbounds %struct.GPR, %struct.GPR* %8366, i32 0, i32 1
  %8368 = getelementptr inbounds %struct.Reg, %struct.Reg* %8367, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %8368 to i64*
  %8369 = load i64, i64* %RAX.i259
  %8370 = load i64, i64* %PC.i258
  %8371 = add i64 %8370, 3
  store i64 %8371, i64* %PC.i258
  %8372 = trunc i64 %8369 to i32
  %8373 = sub i32 %8372, 1
  %8374 = zext i32 %8373 to i64
  store i64 %8374, i64* %RAX.i259, align 8
  %8375 = icmp ult i32 %8372, 1
  %8376 = zext i1 %8375 to i8
  %8377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8376, i8* %8377, align 1
  %8378 = and i32 %8373, 255
  %8379 = call i32 @llvm.ctpop.i32(i32 %8378)
  %8380 = trunc i32 %8379 to i8
  %8381 = and i8 %8380, 1
  %8382 = xor i8 %8381, 1
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8382, i8* %8383, align 1
  %8384 = xor i64 1, %8369
  %8385 = trunc i64 %8384 to i32
  %8386 = xor i32 %8385, %8373
  %8387 = lshr i32 %8386, 4
  %8388 = trunc i32 %8387 to i8
  %8389 = and i8 %8388, 1
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8389, i8* %8390, align 1
  %8391 = icmp eq i32 %8373, 0
  %8392 = zext i1 %8391 to i8
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8392, i8* %8393, align 1
  %8394 = lshr i32 %8373, 31
  %8395 = trunc i32 %8394 to i8
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8395, i8* %8396, align 1
  %8397 = lshr i32 %8372, 31
  %8398 = xor i32 %8394, %8397
  %8399 = add i32 %8398, %8397
  %8400 = icmp eq i32 %8399, 2
  %8401 = zext i1 %8400 to i8
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8401, i8* %8402, align 1
  store %struct.Memory* %loadMem_4330da, %struct.Memory** %MEMORY
  %loadMem_4330dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8404 = getelementptr inbounds %struct.GPR, %struct.GPR* %8403, i32 0, i32 33
  %8405 = getelementptr inbounds %struct.Reg, %struct.Reg* %8404, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %8405 to i64*
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 1
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %EAX.i256 = bitcast %union.anon* %8408 to i32*
  %8409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8410 = getelementptr inbounds %struct.GPR, %struct.GPR* %8409, i32 0, i32 15
  %8411 = getelementptr inbounds %struct.Reg, %struct.Reg* %8410, i32 0, i32 0
  %RBP.i257 = bitcast %union.anon* %8411 to i64*
  %8412 = load i64, i64* %RBP.i257
  %8413 = sub i64 %8412, 32
  %8414 = load i32, i32* %EAX.i256
  %8415 = zext i32 %8414 to i64
  %8416 = load i64, i64* %PC.i255
  %8417 = add i64 %8416, 3
  store i64 %8417, i64* %PC.i255
  %8418 = inttoptr i64 %8413 to i32*
  store i32 %8414, i32* %8418
  store %struct.Memory* %loadMem_4330dd, %struct.Memory** %MEMORY
  %loadMem_4330e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8420 = getelementptr inbounds %struct.GPR, %struct.GPR* %8419, i32 0, i32 33
  %8421 = getelementptr inbounds %struct.Reg, %struct.Reg* %8420, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %8421 to i64*
  %8422 = load i64, i64* %PC.i254
  %8423 = add i64 %8422, 26
  %8424 = load i64, i64* %PC.i254
  %8425 = add i64 %8424, 5
  store i64 %8425, i64* %PC.i254
  %8426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8423, i64* %8426, align 8
  store %struct.Memory* %loadMem_4330e0, %struct.Memory** %MEMORY
  br label %block_.L_4330fa

block_.L_4330e5:                                  ; preds = %block_.L_4330b7
  %loadMem_4330e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 33
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %8429 to i64*
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 1
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %8432 to i64*
  %8433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8434 = getelementptr inbounds %struct.GPR, %struct.GPR* %8433, i32 0, i32 15
  %8435 = getelementptr inbounds %struct.Reg, %struct.Reg* %8434, i32 0, i32 0
  %RBP.i253 = bitcast %union.anon* %8435 to i64*
  %8436 = load i64, i64* %RBP.i253
  %8437 = sub i64 %8436, 28
  %8438 = load i64, i64* %PC.i251
  %8439 = add i64 %8438, 3
  store i64 %8439, i64* %PC.i251
  %8440 = inttoptr i64 %8437 to i32*
  %8441 = load i32, i32* %8440
  %8442 = zext i32 %8441 to i64
  store i64 %8442, i64* %RAX.i252, align 8
  store %struct.Memory* %loadMem_4330e5, %struct.Memory** %MEMORY
  %loadMem_4330e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 33
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %8445 to i64*
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8447 = getelementptr inbounds %struct.GPR, %struct.GPR* %8446, i32 0, i32 5
  %8448 = getelementptr inbounds %struct.Reg, %struct.Reg* %8447, i32 0, i32 0
  %RCX.i249 = bitcast %union.anon* %8448 to i64*
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8450 = getelementptr inbounds %struct.GPR, %struct.GPR* %8449, i32 0, i32 15
  %8451 = getelementptr inbounds %struct.Reg, %struct.Reg* %8450, i32 0, i32 0
  %RBP.i250 = bitcast %union.anon* %8451 to i64*
  %8452 = load i64, i64* %RBP.i250
  %8453 = sub i64 %8452, 20
  %8454 = load i64, i64* %PC.i248
  %8455 = add i64 %8454, 3
  store i64 %8455, i64* %PC.i248
  %8456 = inttoptr i64 %8453 to i32*
  %8457 = load i32, i32* %8456
  %8458 = zext i32 %8457 to i64
  store i64 %8458, i64* %RCX.i249, align 8
  store %struct.Memory* %loadMem_4330e8, %struct.Memory** %MEMORY
  %loadMem_4330eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8460 = getelementptr inbounds %struct.GPR, %struct.GPR* %8459, i32 0, i32 33
  %8461 = getelementptr inbounds %struct.Reg, %struct.Reg* %8460, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %8461 to i64*
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8463 = getelementptr inbounds %struct.GPR, %struct.GPR* %8462, i32 0, i32 5
  %8464 = getelementptr inbounds %struct.Reg, %struct.Reg* %8463, i32 0, i32 0
  %RCX.i247 = bitcast %union.anon* %8464 to i64*
  %8465 = load i64, i64* %RCX.i247
  %8466 = load i64, i64* %PC.i246
  %8467 = add i64 %8466, 3
  store i64 %8467, i64* %PC.i246
  %8468 = trunc i64 %8465 to i32
  %8469 = sub i32 %8468, 1
  %8470 = zext i32 %8469 to i64
  store i64 %8470, i64* %RCX.i247, align 8
  %8471 = icmp ult i32 %8468, 1
  %8472 = zext i1 %8471 to i8
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8472, i8* %8473, align 1
  %8474 = and i32 %8469, 255
  %8475 = call i32 @llvm.ctpop.i32(i32 %8474)
  %8476 = trunc i32 %8475 to i8
  %8477 = and i8 %8476, 1
  %8478 = xor i8 %8477, 1
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8478, i8* %8479, align 1
  %8480 = xor i64 1, %8465
  %8481 = trunc i64 %8480 to i32
  %8482 = xor i32 %8481, %8469
  %8483 = lshr i32 %8482, 4
  %8484 = trunc i32 %8483 to i8
  %8485 = and i8 %8484, 1
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8485, i8* %8486, align 1
  %8487 = icmp eq i32 %8469, 0
  %8488 = zext i1 %8487 to i8
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8488, i8* %8489, align 1
  %8490 = lshr i32 %8469, 31
  %8491 = trunc i32 %8490 to i8
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8491, i8* %8492, align 1
  %8493 = lshr i32 %8468, 31
  %8494 = xor i32 %8490, %8493
  %8495 = add i32 %8494, %8493
  %8496 = icmp eq i32 %8495, 2
  %8497 = zext i1 %8496 to i8
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8497, i8* %8498, align 1
  store %struct.Memory* %loadMem_4330eb, %struct.Memory** %MEMORY
  %loadMem_4330ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 33
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %8501 to i64*
  %8502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8503 = getelementptr inbounds %struct.GPR, %struct.GPR* %8502, i32 0, i32 5
  %8504 = getelementptr inbounds %struct.Reg, %struct.Reg* %8503, i32 0, i32 0
  %ECX.i244 = bitcast %union.anon* %8504 to i32*
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8506 = getelementptr inbounds %struct.GPR, %struct.GPR* %8505, i32 0, i32 1
  %8507 = getelementptr inbounds %struct.Reg, %struct.Reg* %8506, i32 0, i32 0
  %RAX.i245 = bitcast %union.anon* %8507 to i64*
  %8508 = load i64, i64* %RAX.i245
  %8509 = load i32, i32* %ECX.i244
  %8510 = zext i32 %8509 to i64
  %8511 = load i64, i64* %PC.i243
  %8512 = add i64 %8511, 2
  store i64 %8512, i64* %PC.i243
  %8513 = trunc i64 %8508 to i32
  %8514 = add i32 %8509, %8513
  %8515 = zext i32 %8514 to i64
  store i64 %8515, i64* %RAX.i245, align 8
  %8516 = icmp ult i32 %8514, %8513
  %8517 = icmp ult i32 %8514, %8509
  %8518 = or i1 %8516, %8517
  %8519 = zext i1 %8518 to i8
  %8520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8519, i8* %8520, align 1
  %8521 = and i32 %8514, 255
  %8522 = call i32 @llvm.ctpop.i32(i32 %8521)
  %8523 = trunc i32 %8522 to i8
  %8524 = and i8 %8523, 1
  %8525 = xor i8 %8524, 1
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8525, i8* %8526, align 1
  %8527 = xor i64 %8510, %8508
  %8528 = trunc i64 %8527 to i32
  %8529 = xor i32 %8528, %8514
  %8530 = lshr i32 %8529, 4
  %8531 = trunc i32 %8530 to i8
  %8532 = and i8 %8531, 1
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8532, i8* %8533, align 1
  %8534 = icmp eq i32 %8514, 0
  %8535 = zext i1 %8534 to i8
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8535, i8* %8536, align 1
  %8537 = lshr i32 %8514, 31
  %8538 = trunc i32 %8537 to i8
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8538, i8* %8539, align 1
  %8540 = lshr i32 %8513, 31
  %8541 = lshr i32 %8509, 31
  %8542 = xor i32 %8537, %8540
  %8543 = xor i32 %8537, %8541
  %8544 = add i32 %8542, %8543
  %8545 = icmp eq i32 %8544, 2
  %8546 = zext i1 %8545 to i8
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8546, i8* %8547, align 1
  store %struct.Memory* %loadMem_4330ee, %struct.Memory** %MEMORY
  %loadMem_4330f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8549 = getelementptr inbounds %struct.GPR, %struct.GPR* %8548, i32 0, i32 33
  %8550 = getelementptr inbounds %struct.Reg, %struct.Reg* %8549, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %8550 to i64*
  %8551 = load i64, i64* %PC.i242
  %8552 = add i64 %8551, 1
  store i64 %8552, i64* %PC.i242
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8555 = bitcast %union.anon* %8554 to i32*
  %8556 = load i32, i32* %8555, align 8
  %8557 = sext i32 %8556 to i64
  %8558 = lshr i64 %8557, 32
  store i64 %8558, i64* %8553, align 8
  store %struct.Memory* %loadMem_4330f0, %struct.Memory** %MEMORY
  %loadMem_4330f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8560 = getelementptr inbounds %struct.GPR, %struct.GPR* %8559, i32 0, i32 33
  %8561 = getelementptr inbounds %struct.Reg, %struct.Reg* %8560, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %8561 to i64*
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8563 = getelementptr inbounds %struct.GPR, %struct.GPR* %8562, i32 0, i32 15
  %8564 = getelementptr inbounds %struct.Reg, %struct.Reg* %8563, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %8564 to i64*
  %8565 = load i64, i64* %RBP.i239
  %8566 = sub i64 %8565, 20
  %8567 = load i64, i64* %PC.i238
  %8568 = add i64 %8567, 3
  store i64 %8568, i64* %PC.i238
  %8569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8570 = bitcast %union.anon* %8569 to i32*
  %8571 = load i32, i32* %8570, align 8
  %8572 = zext i32 %8571 to i64
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8574 = bitcast %union.anon* %8573 to i32*
  %8575 = load i32, i32* %8574, align 8
  %8576 = zext i32 %8575 to i64
  %8577 = inttoptr i64 %8566 to i32*
  %8578 = load i32, i32* %8577
  %8579 = sext i32 %8578 to i64
  %8580 = shl i64 %8576, 32
  %8581 = or i64 %8580, %8572
  %8582 = sdiv i64 %8581, %8579
  %8583 = shl i64 %8582, 32
  %8584 = ashr exact i64 %8583, 32
  %8585 = icmp eq i64 %8582, %8584
  br i1 %8585, label %8590, label %8586

; <label>:8586:                                   ; preds = %block_.L_4330e5
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8588 = load i64, i64* %8587, align 8
  %8589 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8588, %struct.Memory* %loadMem_4330f1)
  br label %routine_idivl_MINUS0x14__rbp_.exit

; <label>:8590:                                   ; preds = %block_.L_4330e5
  %8591 = srem i64 %8581, %8579
  %8592 = getelementptr inbounds %union.anon, %union.anon* %8569, i64 0, i32 0
  %8593 = and i64 %8582, 4294967295
  store i64 %8593, i64* %8592, align 8
  %8594 = getelementptr inbounds %union.anon, %union.anon* %8573, i64 0, i32 0
  %8595 = and i64 %8591, 4294967295
  store i64 %8595, i64* %8594, align 8
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8596, align 1
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8597, align 1
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8598, align 1
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8599, align 1
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8600, align 1
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8601, align 1
  br label %routine_idivl_MINUS0x14__rbp_.exit

routine_idivl_MINUS0x14__rbp_.exit:               ; preds = %8586, %8590
  %8602 = phi %struct.Memory* [ %8589, %8586 ], [ %loadMem_4330f1, %8590 ]
  store %struct.Memory* %8602, %struct.Memory** %MEMORY
  %loadMem_4330f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8604 = getelementptr inbounds %struct.GPR, %struct.GPR* %8603, i32 0, i32 33
  %8605 = getelementptr inbounds %struct.Reg, %struct.Reg* %8604, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %8605 to i64*
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8607 = getelementptr inbounds %struct.GPR, %struct.GPR* %8606, i32 0, i32 1
  %8608 = getelementptr inbounds %struct.Reg, %struct.Reg* %8607, i32 0, i32 0
  %RAX.i237 = bitcast %union.anon* %8608 to i64*
  %8609 = load i64, i64* %RAX.i237
  %8610 = load i64, i64* %PC.i236
  %8611 = add i64 %8610, 3
  store i64 %8611, i64* %PC.i236
  %8612 = trunc i64 %8609 to i32
  %8613 = sub i32 %8612, 1
  %8614 = zext i32 %8613 to i64
  store i64 %8614, i64* %RAX.i237, align 8
  %8615 = icmp ult i32 %8612, 1
  %8616 = zext i1 %8615 to i8
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8616, i8* %8617, align 1
  %8618 = and i32 %8613, 255
  %8619 = call i32 @llvm.ctpop.i32(i32 %8618)
  %8620 = trunc i32 %8619 to i8
  %8621 = and i8 %8620, 1
  %8622 = xor i8 %8621, 1
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8622, i8* %8623, align 1
  %8624 = xor i64 1, %8609
  %8625 = trunc i64 %8624 to i32
  %8626 = xor i32 %8625, %8613
  %8627 = lshr i32 %8626, 4
  %8628 = trunc i32 %8627 to i8
  %8629 = and i8 %8628, 1
  %8630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8629, i8* %8630, align 1
  %8631 = icmp eq i32 %8613, 0
  %8632 = zext i1 %8631 to i8
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8632, i8* %8633, align 1
  %8634 = lshr i32 %8613, 31
  %8635 = trunc i32 %8634 to i8
  %8636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8635, i8* %8636, align 1
  %8637 = lshr i32 %8612, 31
  %8638 = xor i32 %8634, %8637
  %8639 = add i32 %8638, %8637
  %8640 = icmp eq i32 %8639, 2
  %8641 = zext i1 %8640 to i8
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8641, i8* %8642, align 1
  store %struct.Memory* %loadMem_4330f4, %struct.Memory** %MEMORY
  %loadMem_4330f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 33
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 1
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %EAX.i234 = bitcast %union.anon* %8648 to i32*
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 15
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %8651 to i64*
  %8652 = load i64, i64* %RBP.i235
  %8653 = sub i64 %8652, 32
  %8654 = load i32, i32* %EAX.i234
  %8655 = zext i32 %8654 to i64
  %8656 = load i64, i64* %PC.i233
  %8657 = add i64 %8656, 3
  store i64 %8657, i64* %PC.i233
  %8658 = inttoptr i64 %8653 to i32*
  store i32 %8654, i32* %8658
  store %struct.Memory* %loadMem_4330f7, %struct.Memory** %MEMORY
  br label %block_.L_4330fa

block_.L_4330fa:                                  ; preds = %routine_idivl_MINUS0x14__rbp_.exit, %routine_idivl_MINUS0x14__rbp_.exit262
  %loadMem_4330fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 33
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %8661 to i64*
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8663 = getelementptr inbounds %struct.GPR, %struct.GPR* %8662, i32 0, i32 1
  %8664 = getelementptr inbounds %struct.Reg, %struct.Reg* %8663, i32 0, i32 0
  %RAX.i231 = bitcast %union.anon* %8664 to i64*
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8666 = getelementptr inbounds %struct.GPR, %struct.GPR* %8665, i32 0, i32 15
  %8667 = getelementptr inbounds %struct.Reg, %struct.Reg* %8666, i32 0, i32 0
  %RBP.i232 = bitcast %union.anon* %8667 to i64*
  %8668 = load i64, i64* %RBP.i232
  %8669 = sub i64 %8668, 28
  %8670 = load i64, i64* %PC.i230
  %8671 = add i64 %8670, 3
  store i64 %8671, i64* %PC.i230
  %8672 = inttoptr i64 %8669 to i32*
  %8673 = load i32, i32* %8672
  %8674 = zext i32 %8673 to i64
  store i64 %8674, i64* %RAX.i231, align 8
  store %struct.Memory* %loadMem_4330fa, %struct.Memory** %MEMORY
  %loadMem_4330fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8676 = getelementptr inbounds %struct.GPR, %struct.GPR* %8675, i32 0, i32 33
  %8677 = getelementptr inbounds %struct.Reg, %struct.Reg* %8676, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %8677 to i64*
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8679 = getelementptr inbounds %struct.GPR, %struct.GPR* %8678, i32 0, i32 1
  %8680 = getelementptr inbounds %struct.Reg, %struct.Reg* %8679, i32 0, i32 0
  %RAX.i228 = bitcast %union.anon* %8680 to i64*
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8682 = getelementptr inbounds %struct.GPR, %struct.GPR* %8681, i32 0, i32 15
  %8683 = getelementptr inbounds %struct.Reg, %struct.Reg* %8682, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %8683 to i64*
  %8684 = load i64, i64* %RAX.i228
  %8685 = load i64, i64* %RBP.i229
  %8686 = sub i64 %8685, 32
  %8687 = load i64, i64* %PC.i227
  %8688 = add i64 %8687, 3
  store i64 %8688, i64* %PC.i227
  %8689 = trunc i64 %8684 to i32
  %8690 = inttoptr i64 %8686 to i32*
  %8691 = load i32, i32* %8690
  %8692 = sub i32 %8689, %8691
  %8693 = zext i32 %8692 to i64
  store i64 %8693, i64* %RAX.i228, align 8
  %8694 = icmp ult i32 %8689, %8691
  %8695 = zext i1 %8694 to i8
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8695, i8* %8696, align 1
  %8697 = and i32 %8692, 255
  %8698 = call i32 @llvm.ctpop.i32(i32 %8697)
  %8699 = trunc i32 %8698 to i8
  %8700 = and i8 %8699, 1
  %8701 = xor i8 %8700, 1
  %8702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8701, i8* %8702, align 1
  %8703 = xor i32 %8691, %8689
  %8704 = xor i32 %8703, %8692
  %8705 = lshr i32 %8704, 4
  %8706 = trunc i32 %8705 to i8
  %8707 = and i8 %8706, 1
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8707, i8* %8708, align 1
  %8709 = icmp eq i32 %8692, 0
  %8710 = zext i1 %8709 to i8
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8710, i8* %8711, align 1
  %8712 = lshr i32 %8692, 31
  %8713 = trunc i32 %8712 to i8
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8713, i8* %8714, align 1
  %8715 = lshr i32 %8689, 31
  %8716 = lshr i32 %8691, 31
  %8717 = xor i32 %8716, %8715
  %8718 = xor i32 %8712, %8715
  %8719 = add i32 %8718, %8717
  %8720 = icmp eq i32 %8719, 2
  %8721 = zext i1 %8720 to i8
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8721, i8* %8722, align 1
  store %struct.Memory* %loadMem_4330fd, %struct.Memory** %MEMORY
  %loadMem_433100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 33
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %8725 to i64*
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 1
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %RAX.i226 = bitcast %union.anon* %8728 to i64*
  %8729 = load i64, i64* %RAX.i226
  %8730 = load i64, i64* %PC.i225
  %8731 = add i64 %8730, 3
  store i64 %8731, i64* %PC.i225
  %8732 = trunc i64 %8729 to i32
  %8733 = sub i32 %8732, 1
  %8734 = zext i32 %8733 to i64
  store i64 %8734, i64* %RAX.i226, align 8
  %8735 = icmp ult i32 %8732, 1
  %8736 = zext i1 %8735 to i8
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8736, i8* %8737, align 1
  %8738 = and i32 %8733, 255
  %8739 = call i32 @llvm.ctpop.i32(i32 %8738)
  %8740 = trunc i32 %8739 to i8
  %8741 = and i8 %8740, 1
  %8742 = xor i8 %8741, 1
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8742, i8* %8743, align 1
  %8744 = xor i64 1, %8729
  %8745 = trunc i64 %8744 to i32
  %8746 = xor i32 %8745, %8733
  %8747 = lshr i32 %8746, 4
  %8748 = trunc i32 %8747 to i8
  %8749 = and i8 %8748, 1
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8749, i8* %8750, align 1
  %8751 = icmp eq i32 %8733, 0
  %8752 = zext i1 %8751 to i8
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8752, i8* %8753, align 1
  %8754 = lshr i32 %8733, 31
  %8755 = trunc i32 %8754 to i8
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8755, i8* %8756, align 1
  %8757 = lshr i32 %8732, 31
  %8758 = xor i32 %8754, %8757
  %8759 = add i32 %8758, %8757
  %8760 = icmp eq i32 %8759, 2
  %8761 = zext i1 %8760 to i8
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8761, i8* %8762, align 1
  store %struct.Memory* %loadMem_433100, %struct.Memory** %MEMORY
  %loadMem_433103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8764 = getelementptr inbounds %struct.GPR, %struct.GPR* %8763, i32 0, i32 33
  %8765 = getelementptr inbounds %struct.Reg, %struct.Reg* %8764, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %8765 to i64*
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8767 = getelementptr inbounds %struct.GPR, %struct.GPR* %8766, i32 0, i32 1
  %8768 = getelementptr inbounds %struct.Reg, %struct.Reg* %8767, i32 0, i32 0
  %EAX.i223 = bitcast %union.anon* %8768 to i32*
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8770 = getelementptr inbounds %struct.GPR, %struct.GPR* %8769, i32 0, i32 15
  %8771 = getelementptr inbounds %struct.Reg, %struct.Reg* %8770, i32 0, i32 0
  %RBP.i224 = bitcast %union.anon* %8771 to i64*
  %8772 = load i64, i64* %RBP.i224
  %8773 = sub i64 %8772, 36
  %8774 = load i32, i32* %EAX.i223
  %8775 = zext i32 %8774 to i64
  %8776 = load i64, i64* %PC.i222
  %8777 = add i64 %8776, 3
  store i64 %8777, i64* %PC.i222
  %8778 = inttoptr i64 %8773 to i32*
  store i32 %8774, i32* %8778
  store %struct.Memory* %loadMem_433103, %struct.Memory** %MEMORY
  br label %block_.L_433106

block_.L_433106:                                  ; preds = %block_.L_4330fa, %block_432f11
  %loadMem_433106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8780 = getelementptr inbounds %struct.GPR, %struct.GPR* %8779, i32 0, i32 33
  %8781 = getelementptr inbounds %struct.Reg, %struct.Reg* %8780, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %8781 to i64*
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8783 = getelementptr inbounds %struct.GPR, %struct.GPR* %8782, i32 0, i32 11
  %8784 = getelementptr inbounds %struct.Reg, %struct.Reg* %8783, i32 0, i32 0
  %RDI.i220 = bitcast %union.anon* %8784 to i64*
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8786 = getelementptr inbounds %struct.GPR, %struct.GPR* %8785, i32 0, i32 15
  %8787 = getelementptr inbounds %struct.Reg, %struct.Reg* %8786, i32 0, i32 0
  %RBP.i221 = bitcast %union.anon* %8787 to i64*
  %8788 = load i64, i64* %RBP.i221
  %8789 = sub i64 %8788, 32
  %8790 = load i64, i64* %PC.i219
  %8791 = add i64 %8790, 3
  store i64 %8791, i64* %PC.i219
  %8792 = inttoptr i64 %8789 to i32*
  %8793 = load i32, i32* %8792
  %8794 = zext i32 %8793 to i64
  store i64 %8794, i64* %RDI.i220, align 8
  store %struct.Memory* %loadMem_433106, %struct.Memory** %MEMORY
  %loadMem_433109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8796 = getelementptr inbounds %struct.GPR, %struct.GPR* %8795, i32 0, i32 33
  %8797 = getelementptr inbounds %struct.Reg, %struct.Reg* %8796, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %8797 to i64*
  %8798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8799 = getelementptr inbounds %struct.GPR, %struct.GPR* %8798, i32 0, i32 9
  %8800 = getelementptr inbounds %struct.Reg, %struct.Reg* %8799, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %8800 to i64*
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8802 = getelementptr inbounds %struct.GPR, %struct.GPR* %8801, i32 0, i32 15
  %8803 = getelementptr inbounds %struct.Reg, %struct.Reg* %8802, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %8803 to i64*
  %8804 = load i64, i64* %RBP.i218
  %8805 = sub i64 %8804, 36
  %8806 = load i64, i64* %PC.i217
  %8807 = add i64 %8806, 3
  store i64 %8807, i64* %PC.i217
  %8808 = inttoptr i64 %8805 to i32*
  %8809 = load i32, i32* %8808
  %8810 = zext i32 %8809 to i64
  store i64 %8810, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_433109, %struct.Memory** %MEMORY
  %loadMem1_43310c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8812 = getelementptr inbounds %struct.GPR, %struct.GPR* %8811, i32 0, i32 33
  %8813 = getelementptr inbounds %struct.Reg, %struct.Reg* %8812, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %8813 to i64*
  %8814 = load i64, i64* %PC.i216
  %8815 = add i64 %8814, 300932
  %8816 = load i64, i64* %PC.i216
  %8817 = add i64 %8816, 5
  %8818 = load i64, i64* %PC.i216
  %8819 = add i64 %8818, 5
  store i64 %8819, i64* %PC.i216
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8821 = load i64, i64* %8820, align 8
  %8822 = add i64 %8821, -8
  %8823 = inttoptr i64 %8822 to i64*
  store i64 %8817, i64* %8823
  store i64 %8822, i64* %8820, align 8
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8815, i64* %8824, align 8
  store %struct.Memory* %loadMem1_43310c, %struct.Memory** %MEMORY
  %loadMem2_43310c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43310c = load i64, i64* %3
  %call2_43310c = call %struct.Memory* @sub_47c890.rc_init_GOP(%struct.State* %0, i64 %loadPC_43310c, %struct.Memory* %loadMem2_43310c)
  store %struct.Memory* %call2_43310c, %struct.Memory** %MEMORY
  br label %block_.L_433111

block_.L_433111:                                  ; preds = %block_.L_433106, %block_432ee7
  %loadMem_433111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 33
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %8827 to i64*
  %8828 = load i64, i64* %PC.i215
  %8829 = add i64 %8828, 5
  %8830 = load i64, i64* %PC.i215
  %8831 = add i64 %8830, 5
  store i64 %8831, i64* %PC.i215
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8829, i64* %8832, align 8
  store %struct.Memory* %loadMem_433111, %struct.Memory** %MEMORY
  br label %block_.L_433116

block_.L_433116:                                  ; preds = %block_.L_433111, %block_.L_432ed5
  %loadMem_433116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8834 = getelementptr inbounds %struct.GPR, %struct.GPR* %8833, i32 0, i32 33
  %8835 = getelementptr inbounds %struct.Reg, %struct.Reg* %8834, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %8835 to i64*
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 1
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %8838 to i64*
  %8839 = load i64, i64* %PC.i213
  %8840 = add i64 %8839, 8
  store i64 %8840, i64* %PC.i213
  %8841 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8841, i64* %RAX.i214, align 8
  store %struct.Memory* %loadMem_433116, %struct.Memory** %MEMORY
  %loadMem_43311e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8843 = getelementptr inbounds %struct.GPR, %struct.GPR* %8842, i32 0, i32 33
  %8844 = getelementptr inbounds %struct.Reg, %struct.Reg* %8843, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %8844 to i64*
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8846 = getelementptr inbounds %struct.GPR, %struct.GPR* %8845, i32 0, i32 1
  %8847 = getelementptr inbounds %struct.Reg, %struct.Reg* %8846, i32 0, i32 0
  %RAX.i211 = bitcast %union.anon* %8847 to i64*
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8849 = getelementptr inbounds %struct.GPR, %struct.GPR* %8848, i32 0, i32 5
  %8850 = getelementptr inbounds %struct.Reg, %struct.Reg* %8849, i32 0, i32 0
  %RCX.i212 = bitcast %union.anon* %8850 to i64*
  %8851 = load i64, i64* %RAX.i211
  %8852 = load i64, i64* %PC.i210
  %8853 = add i64 %8852, 2
  store i64 %8853, i64* %PC.i210
  %8854 = inttoptr i64 %8851 to i32*
  %8855 = load i32, i32* %8854
  %8856 = zext i32 %8855 to i64
  store i64 %8856, i64* %RCX.i212, align 8
  store %struct.Memory* %loadMem_43311e, %struct.Memory** %MEMORY
  %loadMem_433120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8858 = getelementptr inbounds %struct.GPR, %struct.GPR* %8857, i32 0, i32 33
  %8859 = getelementptr inbounds %struct.Reg, %struct.Reg* %8858, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %8859 to i64*
  %8860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8861 = getelementptr inbounds %struct.GPR, %struct.GPR* %8860, i32 0, i32 5
  %8862 = getelementptr inbounds %struct.Reg, %struct.Reg* %8861, i32 0, i32 0
  %RCX.i209 = bitcast %union.anon* %8862 to i64*
  %8863 = load i64, i64* %RCX.i209
  %8864 = load i64, i64* %PC.i208
  %8865 = add i64 %8864, 7
  store i64 %8865, i64* %PC.i208
  %8866 = trunc i64 %8863 to i32
  %8867 = load i32, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  %8868 = sub i32 %8866, %8867
  %8869 = zext i32 %8868 to i64
  store i64 %8869, i64* %RCX.i209, align 8
  %8870 = icmp ult i32 %8866, %8867
  %8871 = zext i1 %8870 to i8
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8871, i8* %8872, align 1
  %8873 = and i32 %8868, 255
  %8874 = call i32 @llvm.ctpop.i32(i32 %8873)
  %8875 = trunc i32 %8874 to i8
  %8876 = and i8 %8875, 1
  %8877 = xor i8 %8876, 1
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8877, i8* %8878, align 1
  %8879 = xor i32 %8867, %8866
  %8880 = xor i32 %8879, %8868
  %8881 = lshr i32 %8880, 4
  %8882 = trunc i32 %8881 to i8
  %8883 = and i8 %8882, 1
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8883, i8* %8884, align 1
  %8885 = icmp eq i32 %8868, 0
  %8886 = zext i1 %8885 to i8
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8886, i8* %8887, align 1
  %8888 = lshr i32 %8868, 31
  %8889 = trunc i32 %8888 to i8
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8889, i8* %8890, align 1
  %8891 = lshr i32 %8866, 31
  %8892 = lshr i32 %8867, 31
  %8893 = xor i32 %8892, %8891
  %8894 = xor i32 %8888, %8891
  %8895 = add i32 %8894, %8893
  %8896 = icmp eq i32 %8895, 2
  %8897 = zext i1 %8896 to i8
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8897, i8* %8898, align 1
  store %struct.Memory* %loadMem_433120, %struct.Memory** %MEMORY
  %loadMem_433127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8900 = getelementptr inbounds %struct.GPR, %struct.GPR* %8899, i32 0, i32 33
  %8901 = getelementptr inbounds %struct.Reg, %struct.Reg* %8900, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %8901 to i64*
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8903 = getelementptr inbounds %struct.GPR, %struct.GPR* %8902, i32 0, i32 1
  %8904 = getelementptr inbounds %struct.Reg, %struct.Reg* %8903, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %8904 to i64*
  %8905 = load i64, i64* %PC.i206
  %8906 = add i64 %8905, 8
  store i64 %8906, i64* %PC.i206
  %8907 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %8907, i64* %RAX.i207, align 8
  store %struct.Memory* %loadMem_433127, %struct.Memory** %MEMORY
  %loadMem_43312f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8909 = getelementptr inbounds %struct.GPR, %struct.GPR* %8908, i32 0, i32 33
  %8910 = getelementptr inbounds %struct.Reg, %struct.Reg* %8909, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %8910 to i64*
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8912 = getelementptr inbounds %struct.GPR, %struct.GPR* %8911, i32 0, i32 1
  %8913 = getelementptr inbounds %struct.Reg, %struct.Reg* %8912, i32 0, i32 0
  %RAX.i204 = bitcast %union.anon* %8913 to i64*
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8915 = getelementptr inbounds %struct.GPR, %struct.GPR* %8914, i32 0, i32 7
  %8916 = getelementptr inbounds %struct.Reg, %struct.Reg* %8915, i32 0, i32 0
  %RDX.i205 = bitcast %union.anon* %8916 to i64*
  %8917 = load i64, i64* %RAX.i204
  %8918 = add i64 %8917, 2912
  %8919 = load i64, i64* %PC.i203
  %8920 = add i64 %8919, 6
  store i64 %8920, i64* %PC.i203
  %8921 = inttoptr i64 %8918 to i32*
  %8922 = load i32, i32* %8921
  %8923 = zext i32 %8922 to i64
  store i64 %8923, i64* %RDX.i205, align 8
  store %struct.Memory* %loadMem_43312f, %struct.Memory** %MEMORY
  %loadMem_433135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8925 = getelementptr inbounds %struct.GPR, %struct.GPR* %8924, i32 0, i32 33
  %8926 = getelementptr inbounds %struct.Reg, %struct.Reg* %8925, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %8926 to i64*
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8928 = getelementptr inbounds %struct.GPR, %struct.GPR* %8927, i32 0, i32 7
  %8929 = getelementptr inbounds %struct.Reg, %struct.Reg* %8928, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %8929 to i64*
  %8930 = load i64, i64* %RDX.i
  %8931 = load i64, i64* %PC.i202
  %8932 = add i64 %8931, 3
  store i64 %8932, i64* %PC.i202
  %8933 = trunc i64 %8930 to i32
  %8934 = add i32 1, %8933
  %8935 = zext i32 %8934 to i64
  store i64 %8935, i64* %RDX.i, align 8
  %8936 = icmp ult i32 %8934, %8933
  %8937 = icmp ult i32 %8934, 1
  %8938 = or i1 %8936, %8937
  %8939 = zext i1 %8938 to i8
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8939, i8* %8940, align 1
  %8941 = and i32 %8934, 255
  %8942 = call i32 @llvm.ctpop.i32(i32 %8941)
  %8943 = trunc i32 %8942 to i8
  %8944 = and i8 %8943, 1
  %8945 = xor i8 %8944, 1
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8945, i8* %8946, align 1
  %8947 = xor i64 1, %8930
  %8948 = trunc i64 %8947 to i32
  %8949 = xor i32 %8948, %8934
  %8950 = lshr i32 %8949, 4
  %8951 = trunc i32 %8950 to i8
  %8952 = and i8 %8951, 1
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8952, i8* %8953, align 1
  %8954 = icmp eq i32 %8934, 0
  %8955 = zext i1 %8954 to i8
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8955, i8* %8956, align 1
  %8957 = lshr i32 %8934, 31
  %8958 = trunc i32 %8957 to i8
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8958, i8* %8959, align 1
  %8960 = lshr i32 %8933, 31
  %8961 = xor i32 %8957, %8960
  %8962 = add i32 %8961, %8957
  %8963 = icmp eq i32 %8962, 2
  %8964 = zext i1 %8963 to i8
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8964, i8* %8965, align 1
  store %struct.Memory* %loadMem_433135, %struct.Memory** %MEMORY
  %loadMem_433138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8967 = getelementptr inbounds %struct.GPR, %struct.GPR* %8966, i32 0, i32 33
  %8968 = getelementptr inbounds %struct.Reg, %struct.Reg* %8967, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %8968 to i64*
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8970 = getelementptr inbounds %struct.GPR, %struct.GPR* %8969, i32 0, i32 5
  %8971 = getelementptr inbounds %struct.Reg, %struct.Reg* %8970, i32 0, i32 0
  %ECX.i200 = bitcast %union.anon* %8971 to i32*
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8973 = getelementptr inbounds %struct.GPR, %struct.GPR* %8972, i32 0, i32 1
  %8974 = getelementptr inbounds %struct.Reg, %struct.Reg* %8973, i32 0, i32 0
  %RAX.i201 = bitcast %union.anon* %8974 to i64*
  %8975 = load i32, i32* %ECX.i200
  %8976 = zext i32 %8975 to i64
  %8977 = load i64, i64* %PC.i199
  %8978 = add i64 %8977, 2
  store i64 %8978, i64* %PC.i199
  %8979 = and i64 %8976, 4294967295
  store i64 %8979, i64* %RAX.i201, align 8
  store %struct.Memory* %loadMem_433138, %struct.Memory** %MEMORY
  %loadMem_43313a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8981 = getelementptr inbounds %struct.GPR, %struct.GPR* %8980, i32 0, i32 33
  %8982 = getelementptr inbounds %struct.Reg, %struct.Reg* %8981, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %8982 to i64*
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8984 = getelementptr inbounds %struct.GPR, %struct.GPR* %8983, i32 0, i32 7
  %8985 = getelementptr inbounds %struct.Reg, %struct.Reg* %8984, i32 0, i32 0
  %EDX.i197 = bitcast %union.anon* %8985 to i32*
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8987 = getelementptr inbounds %struct.GPR, %struct.GPR* %8986, i32 0, i32 15
  %8988 = getelementptr inbounds %struct.Reg, %struct.Reg* %8987, i32 0, i32 0
  %RBP.i198 = bitcast %union.anon* %8988 to i64*
  %8989 = load i64, i64* %RBP.i198
  %8990 = sub i64 %8989, 116
  %8991 = load i32, i32* %EDX.i197
  %8992 = zext i32 %8991 to i64
  %8993 = load i64, i64* %PC.i196
  %8994 = add i64 %8993, 3
  store i64 %8994, i64* %PC.i196
  %8995 = inttoptr i64 %8990 to i32*
  store i32 %8991, i32* %8995
  store %struct.Memory* %loadMem_43313a, %struct.Memory** %MEMORY
  %loadMem_43313d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8997 = getelementptr inbounds %struct.GPR, %struct.GPR* %8996, i32 0, i32 33
  %8998 = getelementptr inbounds %struct.Reg, %struct.Reg* %8997, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %8998 to i64*
  %8999 = load i64, i64* %PC.i195
  %9000 = add i64 %8999, 1
  store i64 %9000, i64* %PC.i195
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9003 = bitcast %union.anon* %9002 to i32*
  %9004 = load i32, i32* %9003, align 8
  %9005 = sext i32 %9004 to i64
  %9006 = lshr i64 %9005, 32
  store i64 %9006, i64* %9001, align 8
  store %struct.Memory* %loadMem_43313d, %struct.Memory** %MEMORY
  %loadMem_43313e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9008 = getelementptr inbounds %struct.GPR, %struct.GPR* %9007, i32 0, i32 33
  %9009 = getelementptr inbounds %struct.Reg, %struct.Reg* %9008, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %9009 to i64*
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 5
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %RCX.i193 = bitcast %union.anon* %9012 to i64*
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 15
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %9015 to i64*
  %9016 = load i64, i64* %RBP.i194
  %9017 = sub i64 %9016, 116
  %9018 = load i64, i64* %PC.i192
  %9019 = add i64 %9018, 3
  store i64 %9019, i64* %PC.i192
  %9020 = inttoptr i64 %9017 to i32*
  %9021 = load i32, i32* %9020
  %9022 = zext i32 %9021 to i64
  store i64 %9022, i64* %RCX.i193, align 8
  store %struct.Memory* %loadMem_43313e, %struct.Memory** %MEMORY
  %loadMem_433141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9024 = getelementptr inbounds %struct.GPR, %struct.GPR* %9023, i32 0, i32 33
  %9025 = getelementptr inbounds %struct.Reg, %struct.Reg* %9024, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %9025 to i64*
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 5
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %ECX.i188 = bitcast %union.anon* %9028 to i32*
  %9029 = load i32, i32* %ECX.i188
  %9030 = zext i32 %9029 to i64
  %9031 = load i64, i64* %PC.i187
  %9032 = add i64 %9031, 2
  store i64 %9032, i64* %PC.i187
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9034 = bitcast %union.anon* %9033 to i32*
  %9035 = load i32, i32* %9034, align 8
  %9036 = zext i32 %9035 to i64
  %9037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9038 = bitcast %union.anon* %9037 to i32*
  %9039 = load i32, i32* %9038, align 8
  %9040 = zext i32 %9039 to i64
  %9041 = shl i64 %9030, 32
  %9042 = ashr exact i64 %9041, 32
  %9043 = shl i64 %9040, 32
  %9044 = or i64 %9043, %9036
  %9045 = sdiv i64 %9044, %9042
  %9046 = shl i64 %9045, 32
  %9047 = ashr exact i64 %9046, 32
  %9048 = icmp eq i64 %9045, %9047
  br i1 %9048, label %9053, label %9049

; <label>:9049:                                   ; preds = %block_.L_433116
  %9050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9051 = load i64, i64* %9050, align 8
  %9052 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9051, %struct.Memory* %loadMem_433141)
  br label %routine_idivl__ecx.exit

; <label>:9053:                                   ; preds = %block_.L_433116
  %9054 = srem i64 %9044, %9042
  %9055 = getelementptr inbounds %union.anon, %union.anon* %9033, i64 0, i32 0
  %9056 = and i64 %9045, 4294967295
  store i64 %9056, i64* %9055, align 8
  %9057 = getelementptr inbounds %union.anon, %union.anon* %9037, i64 0, i32 0
  %9058 = and i64 %9054, 4294967295
  store i64 %9058, i64* %9057, align 8
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9059, align 1
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9060, align 1
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9061, align 1
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9062, align 1
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9063, align 1
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9064, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %9049, %9053
  %9065 = phi %struct.Memory* [ %9052, %9049 ], [ %loadMem_433141, %9053 ]
  store %struct.Memory* %9065, %struct.Memory** %MEMORY
  %loadMem_433143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9067 = getelementptr inbounds %struct.GPR, %struct.GPR* %9066, i32 0, i32 33
  %9068 = getelementptr inbounds %struct.Reg, %struct.Reg* %9067, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %9068 to i64*
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9070 = getelementptr inbounds %struct.GPR, %struct.GPR* %9069, i32 0, i32 7
  %9071 = getelementptr inbounds %struct.Reg, %struct.Reg* %9070, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %9071 to i32*
  %9072 = load i32, i32* %EDX.i
  %9073 = zext i32 %9072 to i64
  %9074 = load i64, i64* %PC.i186
  %9075 = add i64 %9074, 3
  store i64 %9075, i64* %PC.i186
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9076, align 1
  %9077 = and i32 %9072, 255
  %9078 = call i32 @llvm.ctpop.i32(i32 %9077)
  %9079 = trunc i32 %9078 to i8
  %9080 = and i8 %9079, 1
  %9081 = xor i8 %9080, 1
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9081, i8* %9082, align 1
  %9083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9083, align 1
  %9084 = icmp eq i32 %9072, 0
  %9085 = zext i1 %9084 to i8
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9085, i8* %9086, align 1
  %9087 = lshr i32 %9072, 31
  %9088 = trunc i32 %9087 to i8
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9088, i8* %9089, align 1
  %9090 = lshr i32 %9072, 31
  %9091 = xor i32 %9087, %9090
  %9092 = add i32 %9091, %9090
  %9093 = icmp eq i32 %9092, 2
  %9094 = zext i1 %9093 to i8
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9094, i8* %9095, align 1
  store %struct.Memory* %loadMem_433143, %struct.Memory** %MEMORY
  %loadMem_433146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 33
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %9098 to i64*
  %9099 = load i64, i64* %PC.i185
  %9100 = add i64 %9099, 29
  %9101 = load i64, i64* %PC.i185
  %9102 = add i64 %9101, 6
  %9103 = load i64, i64* %PC.i185
  %9104 = add i64 %9103, 6
  store i64 %9104, i64* %PC.i185
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9106 = load i8, i8* %9105, align 1
  %9107 = icmp eq i8 %9106, 0
  %9108 = zext i1 %9107 to i8
  store i8 %9108, i8* %BRANCH_TAKEN, align 1
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9110 = select i1 %9107, i64 %9100, i64 %9102
  store i64 %9110, i64* %9109, align 8
  store %struct.Memory* %loadMem_433146, %struct.Memory** %MEMORY
  %loadBr_433146 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433146 = icmp eq i8 %loadBr_433146, 1
  br i1 %cmpBr_433146, label %block_.L_433163, label %block_43314c

block_43314c:                                     ; preds = %routine_idivl__ecx.exit
  %loadMem_43314c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9112 = getelementptr inbounds %struct.GPR, %struct.GPR* %9111, i32 0, i32 33
  %9113 = getelementptr inbounds %struct.Reg, %struct.Reg* %9112, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %9113 to i64*
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9115 = getelementptr inbounds %struct.GPR, %struct.GPR* %9114, i32 0, i32 1
  %9116 = getelementptr inbounds %struct.Reg, %struct.Reg* %9115, i32 0, i32 0
  %RAX.i184 = bitcast %union.anon* %9116 to i64*
  %9117 = load i64, i64* %PC.i183
  %9118 = add i64 %9117, 8
  store i64 %9118, i64* %PC.i183
  %9119 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9119, i64* %RAX.i184, align 8
  store %struct.Memory* %loadMem_43314c, %struct.Memory** %MEMORY
  %loadMem_433154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9121 = getelementptr inbounds %struct.GPR, %struct.GPR* %9120, i32 0, i32 33
  %9122 = getelementptr inbounds %struct.Reg, %struct.Reg* %9121, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %9122 to i64*
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9124 = getelementptr inbounds %struct.GPR, %struct.GPR* %9123, i32 0, i32 1
  %9125 = getelementptr inbounds %struct.Reg, %struct.Reg* %9124, i32 0, i32 0
  %RAX.i182 = bitcast %union.anon* %9125 to i64*
  %9126 = load i64, i64* %RAX.i182
  %9127 = add i64 %9126, 72384
  %9128 = load i64, i64* %PC.i181
  %9129 = add i64 %9128, 10
  store i64 %9129, i64* %PC.i181
  %9130 = inttoptr i64 %9127 to i32*
  store i32 0, i32* %9130
  store %struct.Memory* %loadMem_433154, %struct.Memory** %MEMORY
  %loadMem_43315e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9132 = getelementptr inbounds %struct.GPR, %struct.GPR* %9131, i32 0, i32 33
  %9133 = getelementptr inbounds %struct.Reg, %struct.Reg* %9132, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %9133 to i64*
  %9134 = load i64, i64* %PC.i180
  %9135 = add i64 %9134, 23
  %9136 = load i64, i64* %PC.i180
  %9137 = add i64 %9136, 5
  store i64 %9137, i64* %PC.i180
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9135, i64* %9138, align 8
  store %struct.Memory* %loadMem_43315e, %struct.Memory** %MEMORY
  br label %block_.L_433175

block_.L_433163:                                  ; preds = %routine_idivl__ecx.exit
  %loadMem_433163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9140 = getelementptr inbounds %struct.GPR, %struct.GPR* %9139, i32 0, i32 33
  %9141 = getelementptr inbounds %struct.Reg, %struct.Reg* %9140, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %9141 to i64*
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9143 = getelementptr inbounds %struct.GPR, %struct.GPR* %9142, i32 0, i32 1
  %9144 = getelementptr inbounds %struct.Reg, %struct.Reg* %9143, i32 0, i32 0
  %RAX.i179 = bitcast %union.anon* %9144 to i64*
  %9145 = load i64, i64* %PC.i178
  %9146 = add i64 %9145, 8
  store i64 %9146, i64* %PC.i178
  %9147 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9147, i64* %RAX.i179, align 8
  store %struct.Memory* %loadMem_433163, %struct.Memory** %MEMORY
  %loadMem_43316b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9149 = getelementptr inbounds %struct.GPR, %struct.GPR* %9148, i32 0, i32 33
  %9150 = getelementptr inbounds %struct.Reg, %struct.Reg* %9149, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %9150 to i64*
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9152 = getelementptr inbounds %struct.GPR, %struct.GPR* %9151, i32 0, i32 1
  %9153 = getelementptr inbounds %struct.Reg, %struct.Reg* %9152, i32 0, i32 0
  %RAX.i177 = bitcast %union.anon* %9153 to i64*
  %9154 = load i64, i64* %RAX.i177
  %9155 = add i64 %9154, 72384
  %9156 = load i64, i64* %PC.i176
  %9157 = add i64 %9156, 10
  store i64 %9157, i64* %PC.i176
  %9158 = inttoptr i64 %9155 to i32*
  store i32 1, i32* %9158
  store %struct.Memory* %loadMem_43316b, %struct.Memory** %MEMORY
  br label %block_.L_433175

block_.L_433175:                                  ; preds = %block_.L_433163, %block_43314c
  %loadMem_433175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9160 = getelementptr inbounds %struct.GPR, %struct.GPR* %9159, i32 0, i32 33
  %9161 = getelementptr inbounds %struct.Reg, %struct.Reg* %9160, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %9161 to i64*
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9163 = getelementptr inbounds %struct.GPR, %struct.GPR* %9162, i32 0, i32 1
  %9164 = getelementptr inbounds %struct.Reg, %struct.Reg* %9163, i32 0, i32 0
  %9165 = bitcast %union.anon* %9164 to %struct.anon.2*
  %AL.i175 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9165, i32 0, i32 0
  %9166 = load i64, i64* %PC.i174
  %9167 = add i64 %9166, 2
  store i64 %9167, i64* %PC.i174
  store i8 0, i8* %AL.i175, align 1
  store %struct.Memory* %loadMem_433175, %struct.Memory** %MEMORY
  %loadMem1_433177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9169 = getelementptr inbounds %struct.GPR, %struct.GPR* %9168, i32 0, i32 33
  %9170 = getelementptr inbounds %struct.Reg, %struct.Reg* %9169, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %9170 to i64*
  %9171 = load i64, i64* %PC.i173
  %9172 = add i64 %9171, -46167
  %9173 = load i64, i64* %PC.i173
  %9174 = add i64 %9173, 5
  %9175 = load i64, i64* %PC.i173
  %9176 = add i64 %9175, 5
  store i64 %9176, i64* %PC.i173
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9178 = load i64, i64* %9177, align 8
  %9179 = add i64 %9178, -8
  %9180 = inttoptr i64 %9179 to i64*
  store i64 %9174, i64* %9180
  store i64 %9179, i64* %9177, align 8
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9172, i64* %9181, align 8
  store %struct.Memory* %loadMem1_433177, %struct.Memory** %MEMORY
  %loadMem2_433177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433177 = load i64, i64* %3
  %call2_433177 = call %struct.Memory* @sub_427d20.encode_one_frame(%struct.State* %0, i64 %loadPC_433177, %struct.Memory* %loadMem2_433177)
  store %struct.Memory* %call2_433177, %struct.Memory** %MEMORY
  %loadMem_43317c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9183 = getelementptr inbounds %struct.GPR, %struct.GPR* %9182, i32 0, i32 33
  %9184 = getelementptr inbounds %struct.Reg, %struct.Reg* %9183, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %9184 to i64*
  %9185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9186 = getelementptr inbounds %struct.GPR, %struct.GPR* %9185, i32 0, i32 5
  %9187 = getelementptr inbounds %struct.Reg, %struct.Reg* %9186, i32 0, i32 0
  %RCX.i172 = bitcast %union.anon* %9187 to i64*
  %9188 = load i64, i64* %PC.i171
  %9189 = add i64 %9188, 8
  store i64 %9189, i64* %PC.i171
  %9190 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %9190, i64* %RCX.i172, align 8
  store %struct.Memory* %loadMem_43317c, %struct.Memory** %MEMORY
  %loadMem_433184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9192 = getelementptr inbounds %struct.GPR, %struct.GPR* %9191, i32 0, i32 33
  %9193 = getelementptr inbounds %struct.Reg, %struct.Reg* %9192, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %9193 to i64*
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9195 = getelementptr inbounds %struct.GPR, %struct.GPR* %9194, i32 0, i32 5
  %9196 = getelementptr inbounds %struct.Reg, %struct.Reg* %9195, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %9196 to i64*
  %9197 = load i64, i64* %RCX.i170
  %9198 = add i64 %9197, 3228
  %9199 = load i64, i64* %PC.i169
  %9200 = add i64 %9199, 7
  store i64 %9200, i64* %PC.i169
  %9201 = inttoptr i64 %9198 to i32*
  %9202 = load i32, i32* %9201
  %9203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9203, align 1
  %9204 = and i32 %9202, 255
  %9205 = call i32 @llvm.ctpop.i32(i32 %9204)
  %9206 = trunc i32 %9205 to i8
  %9207 = and i8 %9206, 1
  %9208 = xor i8 %9207, 1
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9208, i8* %9209, align 1
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9210, align 1
  %9211 = icmp eq i32 %9202, 0
  %9212 = zext i1 %9211 to i8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9212, i8* %9213, align 1
  %9214 = lshr i32 %9202, 31
  %9215 = trunc i32 %9214 to i8
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9215, i8* %9216, align 1
  %9217 = lshr i32 %9202, 31
  %9218 = xor i32 %9214, %9217
  %9219 = add i32 %9218, %9217
  %9220 = icmp eq i32 %9219, 2
  %9221 = zext i1 %9220 to i8
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9221, i8* %9222, align 1
  store %struct.Memory* %loadMem_433184, %struct.Memory** %MEMORY
  %loadMem_43318b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9224 = getelementptr inbounds %struct.GPR, %struct.GPR* %9223, i32 0, i32 33
  %9225 = getelementptr inbounds %struct.Reg, %struct.Reg* %9224, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %9225 to i64*
  %9226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9227 = getelementptr inbounds %struct.GPR, %struct.GPR* %9226, i32 0, i32 1
  %9228 = getelementptr inbounds %struct.Reg, %struct.Reg* %9227, i32 0, i32 0
  %EAX.i167 = bitcast %union.anon* %9228 to i32*
  %9229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9230 = getelementptr inbounds %struct.GPR, %struct.GPR* %9229, i32 0, i32 15
  %9231 = getelementptr inbounds %struct.Reg, %struct.Reg* %9230, i32 0, i32 0
  %RBP.i168 = bitcast %union.anon* %9231 to i64*
  %9232 = load i64, i64* %RBP.i168
  %9233 = sub i64 %9232, 120
  %9234 = load i32, i32* %EAX.i167
  %9235 = zext i32 %9234 to i64
  %9236 = load i64, i64* %PC.i166
  %9237 = add i64 %9236, 3
  store i64 %9237, i64* %PC.i166
  %9238 = inttoptr i64 %9233 to i32*
  store i32 %9234, i32* %9238
  store %struct.Memory* %loadMem_43318b, %struct.Memory** %MEMORY
  %loadMem_43318e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9240 = getelementptr inbounds %struct.GPR, %struct.GPR* %9239, i32 0, i32 33
  %9241 = getelementptr inbounds %struct.Reg, %struct.Reg* %9240, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %9241 to i64*
  %9242 = load i64, i64* %PC.i165
  %9243 = add i64 %9242, 11
  %9244 = load i64, i64* %PC.i165
  %9245 = add i64 %9244, 6
  %9246 = load i64, i64* %PC.i165
  %9247 = add i64 %9246, 6
  store i64 %9247, i64* %PC.i165
  %9248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9249 = load i8, i8* %9248, align 1
  store i8 %9249, i8* %BRANCH_TAKEN, align 1
  %9250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9251 = icmp ne i8 %9249, 0
  %9252 = select i1 %9251, i64 %9243, i64 %9245
  store i64 %9252, i64* %9250, align 8
  store %struct.Memory* %loadMem_43318e, %struct.Memory** %MEMORY
  %loadBr_43318e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43318e = icmp eq i8 %loadBr_43318e, 1
  br i1 %cmpBr_43318e, label %block_.L_433199, label %block_433194

block_433194:                                     ; preds = %block_.L_433175
  %loadMem1_433194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9254 = getelementptr inbounds %struct.GPR, %struct.GPR* %9253, i32 0, i32 33
  %9255 = getelementptr inbounds %struct.Reg, %struct.Reg* %9254, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %9255 to i64*
  %9256 = load i64, i64* %PC.i164
  %9257 = add i64 %9256, 7724
  %9258 = load i64, i64* %PC.i164
  %9259 = add i64 %9258, 5
  %9260 = load i64, i64* %PC.i164
  %9261 = add i64 %9260, 5
  store i64 %9261, i64* %PC.i164
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9263 = load i64, i64* %9262, align 8
  %9264 = add i64 %9263, -8
  %9265 = inttoptr i64 %9264 to i64*
  store i64 %9259, i64* %9265
  store i64 %9264, i64* %9262, align 8
  %9266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9257, i64* %9266, align 8
  store %struct.Memory* %loadMem1_433194, %struct.Memory** %MEMORY
  %loadMem2_433194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433194 = load i64, i64* %3
  %call2_433194 = call %struct.Memory* @sub_434fc0.report_frame_statistic(%struct.State* %0, i64 %loadPC_433194, %struct.Memory* %loadMem2_433194)
  store %struct.Memory* %call2_433194, %struct.Memory** %MEMORY
  br label %block_.L_433199

block_.L_433199:                                  ; preds = %block_433194, %block_.L_433175
  %loadMem_433199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9268 = getelementptr inbounds %struct.GPR, %struct.GPR* %9267, i32 0, i32 33
  %9269 = getelementptr inbounds %struct.Reg, %struct.Reg* %9268, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %9269 to i64*
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9271 = getelementptr inbounds %struct.GPR, %struct.GPR* %9270, i32 0, i32 1
  %9272 = getelementptr inbounds %struct.Reg, %struct.Reg* %9271, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %9272 to i64*
  %9273 = load i64, i64* %PC.i162
  %9274 = add i64 %9273, 8
  store i64 %9274, i64* %PC.i162
  %9275 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9275, i64* %RAX.i163, align 8
  store %struct.Memory* %loadMem_433199, %struct.Memory** %MEMORY
  %loadMem_4331a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 33
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %9278 to i64*
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9280 = getelementptr inbounds %struct.GPR, %struct.GPR* %9279, i32 0, i32 1
  %9281 = getelementptr inbounds %struct.Reg, %struct.Reg* %9280, i32 0, i32 0
  %RAX.i160 = bitcast %union.anon* %9281 to i64*
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9283 = getelementptr inbounds %struct.GPR, %struct.GPR* %9282, i32 0, i32 5
  %9284 = getelementptr inbounds %struct.Reg, %struct.Reg* %9283, i32 0, i32 0
  %RCX.i161 = bitcast %union.anon* %9284 to i64*
  %9285 = load i64, i64* %RAX.i160
  %9286 = add i64 %9285, 8
  %9287 = load i64, i64* %PC.i159
  %9288 = add i64 %9287, 3
  store i64 %9288, i64* %PC.i159
  %9289 = inttoptr i64 %9286 to i32*
  %9290 = load i32, i32* %9289
  %9291 = zext i32 %9290 to i64
  store i64 %9291, i64* %RCX.i161, align 8
  store %struct.Memory* %loadMem_4331a1, %struct.Memory** %MEMORY
  %loadMem_4331a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9293 = getelementptr inbounds %struct.GPR, %struct.GPR* %9292, i32 0, i32 33
  %9294 = getelementptr inbounds %struct.Reg, %struct.Reg* %9293, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %9294 to i64*
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9296 = getelementptr inbounds %struct.GPR, %struct.GPR* %9295, i32 0, i32 5
  %9297 = getelementptr inbounds %struct.Reg, %struct.Reg* %9296, i32 0, i32 0
  %RCX.i158 = bitcast %union.anon* %9297 to i64*
  %9298 = load i64, i64* %RCX.i158
  %9299 = load i64, i64* %PC.i157
  %9300 = add i64 %9299, 3
  store i64 %9300, i64* %PC.i157
  %9301 = trunc i64 %9298 to i32
  %9302 = add i32 1, %9301
  %9303 = zext i32 %9302 to i64
  store i64 %9303, i64* %RCX.i158, align 8
  %9304 = icmp ult i32 %9302, %9301
  %9305 = icmp ult i32 %9302, 1
  %9306 = or i1 %9304, %9305
  %9307 = zext i1 %9306 to i8
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9307, i8* %9308, align 1
  %9309 = and i32 %9302, 255
  %9310 = call i32 @llvm.ctpop.i32(i32 %9309)
  %9311 = trunc i32 %9310 to i8
  %9312 = and i8 %9311, 1
  %9313 = xor i8 %9312, 1
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9313, i8* %9314, align 1
  %9315 = xor i64 1, %9298
  %9316 = trunc i64 %9315 to i32
  %9317 = xor i32 %9316, %9302
  %9318 = lshr i32 %9317, 4
  %9319 = trunc i32 %9318 to i8
  %9320 = and i8 %9319, 1
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9320, i8* %9321, align 1
  %9322 = icmp eq i32 %9302, 0
  %9323 = zext i1 %9322 to i8
  %9324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9323, i8* %9324, align 1
  %9325 = lshr i32 %9302, 31
  %9326 = trunc i32 %9325 to i8
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9326, i8* %9327, align 1
  %9328 = lshr i32 %9301, 31
  %9329 = xor i32 %9325, %9328
  %9330 = add i32 %9329, %9325
  %9331 = icmp eq i32 %9330, 2
  %9332 = zext i1 %9331 to i8
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9332, i8* %9333, align 1
  store %struct.Memory* %loadMem_4331a4, %struct.Memory** %MEMORY
  %loadMem_4331a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 33
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %9336 to i64*
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 5
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %ECX.i155 = bitcast %union.anon* %9339 to i32*
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 1
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %RAX.i156 = bitcast %union.anon* %9342 to i64*
  %9343 = load i64, i64* %RAX.i156
  %9344 = add i64 %9343, 8
  %9345 = load i32, i32* %ECX.i155
  %9346 = zext i32 %9345 to i64
  %9347 = load i64, i64* %PC.i154
  %9348 = add i64 %9347, 3
  store i64 %9348, i64* %PC.i154
  %9349 = inttoptr i64 %9344 to i32*
  store i32 %9345, i32* %9349
  store %struct.Memory* %loadMem_4331a7, %struct.Memory** %MEMORY
  %loadMem_4331aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9351 = getelementptr inbounds %struct.GPR, %struct.GPR* %9350, i32 0, i32 33
  %9352 = getelementptr inbounds %struct.Reg, %struct.Reg* %9351, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %9352 to i64*
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9354 = getelementptr inbounds %struct.GPR, %struct.GPR* %9353, i32 0, i32 1
  %9355 = getelementptr inbounds %struct.Reg, %struct.Reg* %9354, i32 0, i32 0
  %RAX.i153 = bitcast %union.anon* %9355 to i64*
  %9356 = load i64, i64* %PC.i152
  %9357 = add i64 %9356, 8
  store i64 %9357, i64* %PC.i152
  %9358 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9358, i64* %RAX.i153, align 8
  store %struct.Memory* %loadMem_4331aa, %struct.Memory** %MEMORY
  %loadMem_4331b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9360 = getelementptr inbounds %struct.GPR, %struct.GPR* %9359, i32 0, i32 33
  %9361 = getelementptr inbounds %struct.Reg, %struct.Reg* %9360, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %9361 to i64*
  %9362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9363 = getelementptr inbounds %struct.GPR, %struct.GPR* %9362, i32 0, i32 1
  %9364 = getelementptr inbounds %struct.Reg, %struct.Reg* %9363, i32 0, i32 0
  %RAX.i150 = bitcast %union.anon* %9364 to i64*
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9366 = getelementptr inbounds %struct.GPR, %struct.GPR* %9365, i32 0, i32 5
  %9367 = getelementptr inbounds %struct.Reg, %struct.Reg* %9366, i32 0, i32 0
  %RCX.i151 = bitcast %union.anon* %9367 to i64*
  %9368 = load i64, i64* %RAX.i150
  %9369 = add i64 %9368, 8
  %9370 = load i64, i64* %PC.i149
  %9371 = add i64 %9370, 3
  store i64 %9371, i64* %PC.i149
  %9372 = inttoptr i64 %9369 to i32*
  %9373 = load i32, i32* %9372
  %9374 = zext i32 %9373 to i64
  store i64 %9374, i64* %RCX.i151, align 8
  store %struct.Memory* %loadMem_4331b2, %struct.Memory** %MEMORY
  %loadMem_4331b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9376 = getelementptr inbounds %struct.GPR, %struct.GPR* %9375, i32 0, i32 33
  %9377 = getelementptr inbounds %struct.Reg, %struct.Reg* %9376, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %9377 to i64*
  %9378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9379 = getelementptr inbounds %struct.GPR, %struct.GPR* %9378, i32 0, i32 1
  %9380 = getelementptr inbounds %struct.Reg, %struct.Reg* %9379, i32 0, i32 0
  %RAX.i148 = bitcast %union.anon* %9380 to i64*
  %9381 = load i64, i64* %PC.i147
  %9382 = add i64 %9381, 8
  store i64 %9382, i64* %PC.i147
  %9383 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9383, i64* %RAX.i148, align 8
  store %struct.Memory* %loadMem_4331b5, %struct.Memory** %MEMORY
  %loadMem_4331bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 33
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %9386 to i64*
  %9387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9388 = getelementptr inbounds %struct.GPR, %struct.GPR* %9387, i32 0, i32 5
  %9389 = getelementptr inbounds %struct.Reg, %struct.Reg* %9388, i32 0, i32 0
  %ECX.i145 = bitcast %union.anon* %9389 to i32*
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9391 = getelementptr inbounds %struct.GPR, %struct.GPR* %9390, i32 0, i32 1
  %9392 = getelementptr inbounds %struct.Reg, %struct.Reg* %9391, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %9392 to i64*
  %9393 = load i32, i32* %ECX.i145
  %9394 = zext i32 %9393 to i64
  %9395 = load i64, i64* %RAX.i146
  %9396 = add i64 %9395, 72376
  %9397 = load i64, i64* %PC.i144
  %9398 = add i64 %9397, 6
  store i64 %9398, i64* %PC.i144
  %9399 = inttoptr i64 %9396 to i32*
  %9400 = load i32, i32* %9399
  %9401 = sub i32 %9393, %9400
  %9402 = icmp ult i32 %9393, %9400
  %9403 = zext i1 %9402 to i8
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9403, i8* %9404, align 1
  %9405 = and i32 %9401, 255
  %9406 = call i32 @llvm.ctpop.i32(i32 %9405)
  %9407 = trunc i32 %9406 to i8
  %9408 = and i8 %9407, 1
  %9409 = xor i8 %9408, 1
  %9410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9409, i8* %9410, align 1
  %9411 = xor i32 %9400, %9393
  %9412 = xor i32 %9411, %9401
  %9413 = lshr i32 %9412, 4
  %9414 = trunc i32 %9413 to i8
  %9415 = and i8 %9414, 1
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9415, i8* %9416, align 1
  %9417 = icmp eq i32 %9401, 0
  %9418 = zext i1 %9417 to i8
  %9419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9418, i8* %9419, align 1
  %9420 = lshr i32 %9401, 31
  %9421 = trunc i32 %9420 to i8
  %9422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9421, i8* %9422, align 1
  %9423 = lshr i32 %9393, 31
  %9424 = lshr i32 %9400, 31
  %9425 = xor i32 %9424, %9423
  %9426 = xor i32 %9420, %9423
  %9427 = add i32 %9426, %9425
  %9428 = icmp eq i32 %9427, 2
  %9429 = zext i1 %9428 to i8
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9429, i8* %9430, align 1
  store %struct.Memory* %loadMem_4331bd, %struct.Memory** %MEMORY
  %loadMem_4331c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9432 = getelementptr inbounds %struct.GPR, %struct.GPR* %9431, i32 0, i32 33
  %9433 = getelementptr inbounds %struct.Reg, %struct.Reg* %9432, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %9433 to i64*
  %9434 = load i64, i64* %PC.i143
  %9435 = add i64 %9434, 25
  %9436 = load i64, i64* %PC.i143
  %9437 = add i64 %9436, 6
  %9438 = load i64, i64* %PC.i143
  %9439 = add i64 %9438, 6
  store i64 %9439, i64* %PC.i143
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9441 = load i8, i8* %9440, align 1
  %9442 = icmp ne i8 %9441, 0
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9444 = load i8, i8* %9443, align 1
  %9445 = icmp ne i8 %9444, 0
  %9446 = xor i1 %9442, %9445
  %9447 = xor i1 %9446, true
  %9448 = zext i1 %9447 to i8
  store i8 %9448, i8* %BRANCH_TAKEN, align 1
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9450 = select i1 %9446, i64 %9437, i64 %9435
  store i64 %9450, i64* %9449, align 8
  store %struct.Memory* %loadMem_4331c3, %struct.Memory** %MEMORY
  %loadBr_4331c3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4331c3 = icmp eq i8 %loadBr_4331c3, 1
  br i1 %cmpBr_4331c3, label %block_.L_4331dc, label %block_4331c9

block_4331c9:                                     ; preds = %block_.L_433199
  %loadMem_4331c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9452 = getelementptr inbounds %struct.GPR, %struct.GPR* %9451, i32 0, i32 33
  %9453 = getelementptr inbounds %struct.Reg, %struct.Reg* %9452, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %9453 to i64*
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9455 = getelementptr inbounds %struct.GPR, %struct.GPR* %9454, i32 0, i32 1
  %9456 = getelementptr inbounds %struct.Reg, %struct.Reg* %9455, i32 0, i32 0
  %RAX.i142 = bitcast %union.anon* %9456 to i64*
  %9457 = load i64, i64* %PC.i141
  %9458 = add i64 %9457, 8
  store i64 %9458, i64* %PC.i141
  %9459 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9459, i64* %RAX.i142, align 8
  store %struct.Memory* %loadMem_4331c9, %struct.Memory** %MEMORY
  %loadMem_4331d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9461 = getelementptr inbounds %struct.GPR, %struct.GPR* %9460, i32 0, i32 33
  %9462 = getelementptr inbounds %struct.Reg, %struct.Reg* %9461, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %9462 to i64*
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9464 = getelementptr inbounds %struct.GPR, %struct.GPR* %9463, i32 0, i32 1
  %9465 = getelementptr inbounds %struct.Reg, %struct.Reg* %9464, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %9465 to i64*
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9467 = getelementptr inbounds %struct.GPR, %struct.GPR* %9466, i32 0, i32 5
  %9468 = getelementptr inbounds %struct.Reg, %struct.Reg* %9467, i32 0, i32 0
  %RCX.i140 = bitcast %union.anon* %9468 to i64*
  %9469 = load i64, i64* %RAX.i139
  %9470 = add i64 %9469, 8
  %9471 = load i64, i64* %PC.i138
  %9472 = add i64 %9471, 3
  store i64 %9472, i64* %PC.i138
  %9473 = inttoptr i64 %9470 to i32*
  %9474 = load i32, i32* %9473
  %9475 = zext i32 %9474 to i64
  store i64 %9475, i64* %RCX.i140, align 8
  store %struct.Memory* %loadMem_4331d1, %struct.Memory** %MEMORY
  %loadMem_4331d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9477 = getelementptr inbounds %struct.GPR, %struct.GPR* %9476, i32 0, i32 33
  %9478 = getelementptr inbounds %struct.Reg, %struct.Reg* %9477, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %9478 to i64*
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9480 = getelementptr inbounds %struct.GPR, %struct.GPR* %9479, i32 0, i32 5
  %9481 = getelementptr inbounds %struct.Reg, %struct.Reg* %9480, i32 0, i32 0
  %ECX.i136 = bitcast %union.anon* %9481 to i32*
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 15
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %9484 to i64*
  %9485 = load i64, i64* %RBP.i137
  %9486 = sub i64 %9485, 124
  %9487 = load i32, i32* %ECX.i136
  %9488 = zext i32 %9487 to i64
  %9489 = load i64, i64* %PC.i135
  %9490 = add i64 %9489, 3
  store i64 %9490, i64* %PC.i135
  %9491 = inttoptr i64 %9486 to i32*
  store i32 %9487, i32* %9491
  store %struct.Memory* %loadMem_4331d4, %struct.Memory** %MEMORY
  %loadMem_4331d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9493 = getelementptr inbounds %struct.GPR, %struct.GPR* %9492, i32 0, i32 33
  %9494 = getelementptr inbounds %struct.Reg, %struct.Reg* %9493, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %9494 to i64*
  %9495 = load i64, i64* %PC.i134
  %9496 = add i64 %9495, 22
  %9497 = load i64, i64* %PC.i134
  %9498 = add i64 %9497, 5
  store i64 %9498, i64* %PC.i134
  %9499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9496, i64* %9499, align 8
  store %struct.Memory* %loadMem_4331d7, %struct.Memory** %MEMORY
  br label %block_.L_4331ed

block_.L_4331dc:                                  ; preds = %block_.L_433199
  %loadMem_4331dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9501 = getelementptr inbounds %struct.GPR, %struct.GPR* %9500, i32 0, i32 33
  %9502 = getelementptr inbounds %struct.Reg, %struct.Reg* %9501, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %9502 to i64*
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9504 = getelementptr inbounds %struct.GPR, %struct.GPR* %9503, i32 0, i32 1
  %9505 = getelementptr inbounds %struct.Reg, %struct.Reg* %9504, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %9505 to i64*
  %9506 = load i64, i64* %PC.i132
  %9507 = add i64 %9506, 8
  store i64 %9507, i64* %PC.i132
  %9508 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9508, i64* %RAX.i133, align 8
  store %struct.Memory* %loadMem_4331dc, %struct.Memory** %MEMORY
  %loadMem_4331e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 33
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %9511 to i64*
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9513 = getelementptr inbounds %struct.GPR, %struct.GPR* %9512, i32 0, i32 1
  %9514 = getelementptr inbounds %struct.Reg, %struct.Reg* %9513, i32 0, i32 0
  %RAX.i130 = bitcast %union.anon* %9514 to i64*
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 5
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %RCX.i131 = bitcast %union.anon* %9517 to i64*
  %9518 = load i64, i64* %RAX.i130
  %9519 = add i64 %9518, 72376
  %9520 = load i64, i64* %PC.i129
  %9521 = add i64 %9520, 6
  store i64 %9521, i64* %PC.i129
  %9522 = inttoptr i64 %9519 to i32*
  %9523 = load i32, i32* %9522
  %9524 = zext i32 %9523 to i64
  store i64 %9524, i64* %RCX.i131, align 8
  store %struct.Memory* %loadMem_4331e4, %struct.Memory** %MEMORY
  %loadMem_4331ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 33
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %9527 to i64*
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 5
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %ECX.i127 = bitcast %union.anon* %9530 to i32*
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9532 = getelementptr inbounds %struct.GPR, %struct.GPR* %9531, i32 0, i32 15
  %9533 = getelementptr inbounds %struct.Reg, %struct.Reg* %9532, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %9533 to i64*
  %9534 = load i64, i64* %RBP.i128
  %9535 = sub i64 %9534, 124
  %9536 = load i32, i32* %ECX.i127
  %9537 = zext i32 %9536 to i64
  %9538 = load i64, i64* %PC.i126
  %9539 = add i64 %9538, 3
  store i64 %9539, i64* %PC.i126
  %9540 = inttoptr i64 %9535 to i32*
  store i32 %9536, i32* %9540
  store %struct.Memory* %loadMem_4331ea, %struct.Memory** %MEMORY
  br label %block_.L_4331ed

block_.L_4331ed:                                  ; preds = %block_.L_4331dc, %block_4331c9
  %loadMem_4331ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9542 = getelementptr inbounds %struct.GPR, %struct.GPR* %9541, i32 0, i32 33
  %9543 = getelementptr inbounds %struct.Reg, %struct.Reg* %9542, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %9543 to i64*
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9545 = getelementptr inbounds %struct.GPR, %struct.GPR* %9544, i32 0, i32 1
  %9546 = getelementptr inbounds %struct.Reg, %struct.Reg* %9545, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %9546 to i64*
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9548 = getelementptr inbounds %struct.GPR, %struct.GPR* %9547, i32 0, i32 15
  %9549 = getelementptr inbounds %struct.Reg, %struct.Reg* %9548, i32 0, i32 0
  %RBP.i125 = bitcast %union.anon* %9549 to i64*
  %9550 = load i64, i64* %RBP.i125
  %9551 = sub i64 %9550, 124
  %9552 = load i64, i64* %PC.i123
  %9553 = add i64 %9552, 3
  store i64 %9553, i64* %PC.i123
  %9554 = inttoptr i64 %9551 to i32*
  %9555 = load i32, i32* %9554
  %9556 = zext i32 %9555 to i64
  store i64 %9556, i64* %RAX.i124, align 8
  store %struct.Memory* %loadMem_4331ed, %struct.Memory** %MEMORY
  %loadMem_4331f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9558 = getelementptr inbounds %struct.GPR, %struct.GPR* %9557, i32 0, i32 33
  %9559 = getelementptr inbounds %struct.Reg, %struct.Reg* %9558, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %9559 to i64*
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9561 = getelementptr inbounds %struct.GPR, %struct.GPR* %9560, i32 0, i32 5
  %9562 = getelementptr inbounds %struct.Reg, %struct.Reg* %9561, i32 0, i32 0
  %RCX.i122 = bitcast %union.anon* %9562 to i64*
  %9563 = load i64, i64* %PC.i121
  %9564 = add i64 %9563, 8
  store i64 %9564, i64* %PC.i121
  %9565 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9565, i64* %RCX.i122, align 8
  store %struct.Memory* %loadMem_4331f0, %struct.Memory** %MEMORY
  %loadMem_4331f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9567 = getelementptr inbounds %struct.GPR, %struct.GPR* %9566, i32 0, i32 33
  %9568 = getelementptr inbounds %struct.Reg, %struct.Reg* %9567, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %9568 to i64*
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9570 = getelementptr inbounds %struct.GPR, %struct.GPR* %9569, i32 0, i32 1
  %9571 = getelementptr inbounds %struct.Reg, %struct.Reg* %9570, i32 0, i32 0
  %EAX.i119 = bitcast %union.anon* %9571 to i32*
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 5
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %RCX.i120 = bitcast %union.anon* %9574 to i64*
  %9575 = load i64, i64* %RCX.i120
  %9576 = add i64 %9575, 8
  %9577 = load i32, i32* %EAX.i119
  %9578 = zext i32 %9577 to i64
  %9579 = load i64, i64* %PC.i118
  %9580 = add i64 %9579, 3
  store i64 %9580, i64* %PC.i118
  %9581 = inttoptr i64 %9576 to i32*
  store i32 %9577, i32* %9581
  store %struct.Memory* %loadMem_4331f8, %struct.Memory** %MEMORY
  %loadMem_4331fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9583 = getelementptr inbounds %struct.GPR, %struct.GPR* %9582, i32 0, i32 33
  %9584 = getelementptr inbounds %struct.Reg, %struct.Reg* %9583, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %9584 to i64*
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 1
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %9588 = bitcast %union.anon* %9587 to %struct.anon.2*
  %AL.i117 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9588, i32 0, i32 0
  %9589 = load i64, i64* %PC.i116
  %9590 = add i64 %9589, 2
  store i64 %9590, i64* %PC.i116
  store i8 0, i8* %AL.i117, align 1
  store %struct.Memory* %loadMem_4331fb, %struct.Memory** %MEMORY
  %loadMem1_4331fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9592 = getelementptr inbounds %struct.GPR, %struct.GPR* %9591, i32 0, i32 33
  %9593 = getelementptr inbounds %struct.Reg, %struct.Reg* %9592, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %9593 to i64*
  %9594 = load i64, i64* %PC.i115
  %9595 = add i64 %9594, -83133
  %9596 = load i64, i64* %PC.i115
  %9597 = add i64 %9596, 5
  %9598 = load i64, i64* %PC.i115
  %9599 = add i64 %9598, 5
  store i64 %9599, i64* %PC.i115
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9601 = load i64, i64* %9600, align 8
  %9602 = add i64 %9601, -8
  %9603 = inttoptr i64 %9602 to i64*
  store i64 %9597, i64* %9603
  store i64 %9602, i64* %9600, align 8
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9595, i64* %9604, align 8
  store %struct.Memory* %loadMem1_4331fd, %struct.Memory** %MEMORY
  %loadMem2_4331fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4331fd = load i64, i64* %3
  %call2_4331fd = call %struct.Memory* @sub_41ed40.encode_enhancement_layer(%struct.State* %0, i64 %loadPC_4331fd, %struct.Memory* %loadMem2_4331fd)
  store %struct.Memory* %call2_4331fd, %struct.Memory** %MEMORY
  %loadMem1_433202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9606 = getelementptr inbounds %struct.GPR, %struct.GPR* %9605, i32 0, i32 33
  %9607 = getelementptr inbounds %struct.Reg, %struct.Reg* %9606, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %9607 to i64*
  %9608 = load i64, i64* %PC.i114
  %9609 = add i64 %9608, 11630
  %9610 = load i64, i64* %PC.i114
  %9611 = add i64 %9610, 5
  %9612 = load i64, i64* %PC.i114
  %9613 = add i64 %9612, 5
  store i64 %9613, i64* %PC.i114
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9615 = load i64, i64* %9614, align 8
  %9616 = add i64 %9615, -8
  %9617 = inttoptr i64 %9616 to i64*
  store i64 %9611, i64* %9617
  store i64 %9616, i64* %9614, align 8
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9609, i64* %9618, align 8
  store %struct.Memory* %loadMem1_433202, %struct.Memory** %MEMORY
  %loadMem2_433202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433202 = load i64, i64* %3
  %call2_433202 = call %struct.Memory* @sub_435f70.process_2nd_IGOP(%struct.State* %0, i64 %loadPC_433202, %struct.Memory* %loadMem2_433202)
  store %struct.Memory* %call2_433202, %struct.Memory** %MEMORY
  %loadMem_433207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9620 = getelementptr inbounds %struct.GPR, %struct.GPR* %9619, i32 0, i32 33
  %9621 = getelementptr inbounds %struct.Reg, %struct.Reg* %9620, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %9621 to i64*
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9623 = getelementptr inbounds %struct.GPR, %struct.GPR* %9622, i32 0, i32 1
  %9624 = getelementptr inbounds %struct.Reg, %struct.Reg* %9623, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %9624 to i64*
  %9625 = load i64, i64* %PC.i112
  %9626 = add i64 %9625, 8
  store i64 %9626, i64* %PC.i112
  %9627 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9627, i64* %RAX.i113, align 8
  store %struct.Memory* %loadMem_433207, %struct.Memory** %MEMORY
  %loadMem_43320f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9629 = getelementptr inbounds %struct.GPR, %struct.GPR* %9628, i32 0, i32 33
  %9630 = getelementptr inbounds %struct.Reg, %struct.Reg* %9629, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %9630 to i64*
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9632 = getelementptr inbounds %struct.GPR, %struct.GPR* %9631, i32 0, i32 1
  %9633 = getelementptr inbounds %struct.Reg, %struct.Reg* %9632, i32 0, i32 0
  %RAX.i110 = bitcast %union.anon* %9633 to i64*
  %9634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9635 = getelementptr inbounds %struct.GPR, %struct.GPR* %9634, i32 0, i32 5
  %9636 = getelementptr inbounds %struct.Reg, %struct.Reg* %9635, i32 0, i32 0
  %RCX.i111 = bitcast %union.anon* %9636 to i64*
  %9637 = load i64, i64* %RAX.i110
  %9638 = load i64, i64* %PC.i109
  %9639 = add i64 %9638, 2
  store i64 %9639, i64* %PC.i109
  %9640 = inttoptr i64 %9637 to i32*
  %9641 = load i32, i32* %9640
  %9642 = zext i32 %9641 to i64
  store i64 %9642, i64* %RCX.i111, align 8
  store %struct.Memory* %loadMem_43320f, %struct.Memory** %MEMORY
  %loadMem_433211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9644 = getelementptr inbounds %struct.GPR, %struct.GPR* %9643, i32 0, i32 33
  %9645 = getelementptr inbounds %struct.Reg, %struct.Reg* %9644, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %9645 to i64*
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9647 = getelementptr inbounds %struct.GPR, %struct.GPR* %9646, i32 0, i32 5
  %9648 = getelementptr inbounds %struct.Reg, %struct.Reg* %9647, i32 0, i32 0
  %RCX.i108 = bitcast %union.anon* %9648 to i64*
  %9649 = load i64, i64* %RCX.i108
  %9650 = load i64, i64* %PC.i107
  %9651 = add i64 %9650, 3
  store i64 %9651, i64* %PC.i107
  %9652 = trunc i64 %9649 to i32
  %9653 = add i32 1, %9652
  %9654 = zext i32 %9653 to i64
  store i64 %9654, i64* %RCX.i108, align 8
  %9655 = icmp ult i32 %9653, %9652
  %9656 = icmp ult i32 %9653, 1
  %9657 = or i1 %9655, %9656
  %9658 = zext i1 %9657 to i8
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9658, i8* %9659, align 1
  %9660 = and i32 %9653, 255
  %9661 = call i32 @llvm.ctpop.i32(i32 %9660)
  %9662 = trunc i32 %9661 to i8
  %9663 = and i8 %9662, 1
  %9664 = xor i8 %9663, 1
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9664, i8* %9665, align 1
  %9666 = xor i64 1, %9649
  %9667 = trunc i64 %9666 to i32
  %9668 = xor i32 %9667, %9653
  %9669 = lshr i32 %9668, 4
  %9670 = trunc i32 %9669 to i8
  %9671 = and i8 %9670, 1
  %9672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9671, i8* %9672, align 1
  %9673 = icmp eq i32 %9653, 0
  %9674 = zext i1 %9673 to i8
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9674, i8* %9675, align 1
  %9676 = lshr i32 %9653, 31
  %9677 = trunc i32 %9676 to i8
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9677, i8* %9678, align 1
  %9679 = lshr i32 %9652, 31
  %9680 = xor i32 %9676, %9679
  %9681 = add i32 %9680, %9676
  %9682 = icmp eq i32 %9681, 2
  %9683 = zext i1 %9682 to i8
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9683, i8* %9684, align 1
  store %struct.Memory* %loadMem_433211, %struct.Memory** %MEMORY
  %loadMem_433214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9686 = getelementptr inbounds %struct.GPR, %struct.GPR* %9685, i32 0, i32 33
  %9687 = getelementptr inbounds %struct.Reg, %struct.Reg* %9686, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %9687 to i64*
  %9688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9689 = getelementptr inbounds %struct.GPR, %struct.GPR* %9688, i32 0, i32 5
  %9690 = getelementptr inbounds %struct.Reg, %struct.Reg* %9689, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %9690 to i32*
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9692 = getelementptr inbounds %struct.GPR, %struct.GPR* %9691, i32 0, i32 1
  %9693 = getelementptr inbounds %struct.Reg, %struct.Reg* %9692, i32 0, i32 0
  %RAX.i106 = bitcast %union.anon* %9693 to i64*
  %9694 = load i64, i64* %RAX.i106
  %9695 = load i32, i32* %ECX.i
  %9696 = zext i32 %9695 to i64
  %9697 = load i64, i64* %PC.i105
  %9698 = add i64 %9697, 2
  store i64 %9698, i64* %PC.i105
  %9699 = inttoptr i64 %9694 to i32*
  store i32 %9695, i32* %9699
  store %struct.Memory* %loadMem_433214, %struct.Memory** %MEMORY
  %loadMem_433216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9701 = getelementptr inbounds %struct.GPR, %struct.GPR* %9700, i32 0, i32 33
  %9702 = getelementptr inbounds %struct.Reg, %struct.Reg* %9701, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %9702 to i64*
  %9703 = load i64, i64* %PC.i104
  %9704 = add i64 %9703, -2088
  %9705 = load i64, i64* %PC.i104
  %9706 = add i64 %9705, 5
  store i64 %9706, i64* %PC.i104
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9704, i64* %9707, align 8
  store %struct.Memory* %loadMem_433216, %struct.Memory** %MEMORY
  br label %block_.L_4329ee

block_.L_43321b:                                  ; preds = %block_.L_4329ee
  %loadMem_43321b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9709 = getelementptr inbounds %struct.GPR, %struct.GPR* %9708, i32 0, i32 33
  %9710 = getelementptr inbounds %struct.Reg, %struct.Reg* %9709, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %9710 to i64*
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9712 = getelementptr inbounds %struct.GPR, %struct.GPR* %9711, i32 0, i32 1
  %9713 = getelementptr inbounds %struct.Reg, %struct.Reg* %9712, i32 0, i32 0
  %9714 = bitcast %union.anon* %9713 to %struct.anon.2*
  %AL.i103 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9714, i32 0, i32 0
  %9715 = load i64, i64* %PC.i102
  %9716 = add i64 %9715, 2
  store i64 %9716, i64* %PC.i102
  store i8 0, i8* %AL.i103, align 1
  store %struct.Memory* %loadMem_43321b, %struct.Memory** %MEMORY
  %loadMem1_43321d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9718 = getelementptr inbounds %struct.GPR, %struct.GPR* %9717, i32 0, i32 33
  %9719 = getelementptr inbounds %struct.Reg, %struct.Reg* %9718, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %9719 to i64*
  %9720 = load i64, i64* %PC.i101
  %9721 = add i64 %9720, -59485
  %9722 = load i64, i64* %PC.i101
  %9723 = add i64 %9722, 5
  %9724 = load i64, i64* %PC.i101
  %9725 = add i64 %9724, 5
  store i64 %9725, i64* %PC.i101
  %9726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9727 = load i64, i64* %9726, align 8
  %9728 = add i64 %9727, -8
  %9729 = inttoptr i64 %9728 to i64*
  store i64 %9723, i64* %9729
  store i64 %9728, i64* %9726, align 8
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9721, i64* %9730, align 8
  store %struct.Memory* %loadMem1_43321d, %struct.Memory** %MEMORY
  %loadMem2_43321d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43321d = load i64, i64* %3
  %call2_43321d = call %struct.Memory* @sub_4249c0.terminate_sequence(%struct.State* %0, i64 %loadPC_43321d, %struct.Memory* %loadMem2_43321d)
  store %struct.Memory* %call2_43321d, %struct.Memory** %MEMORY
  %loadMem_433222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9732 = getelementptr inbounds %struct.GPR, %struct.GPR* %9731, i32 0, i32 33
  %9733 = getelementptr inbounds %struct.Reg, %struct.Reg* %9732, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %9733 to i64*
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9735 = getelementptr inbounds %struct.GPR, %struct.GPR* %9734, i32 0, i32 1
  %9736 = getelementptr inbounds %struct.Reg, %struct.Reg* %9735, i32 0, i32 0
  %EAX.i99 = bitcast %union.anon* %9736 to i32*
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9738 = getelementptr inbounds %struct.GPR, %struct.GPR* %9737, i32 0, i32 15
  %9739 = getelementptr inbounds %struct.Reg, %struct.Reg* %9738, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %9739 to i64*
  %9740 = load i64, i64* %RBP.i100
  %9741 = sub i64 %9740, 128
  %9742 = load i32, i32* %EAX.i99
  %9743 = zext i32 %9742 to i64
  %9744 = load i64, i64* %PC.i98
  %9745 = add i64 %9744, 3
  store i64 %9745, i64* %PC.i98
  %9746 = inttoptr i64 %9741 to i32*
  store i32 %9742, i32* %9746
  store %struct.Memory* %loadMem_433222, %struct.Memory** %MEMORY
  %loadMem_433225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9748 = getelementptr inbounds %struct.GPR, %struct.GPR* %9747, i32 0, i32 33
  %9749 = getelementptr inbounds %struct.Reg, %struct.Reg* %9748, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %9749 to i64*
  %9750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9751 = getelementptr inbounds %struct.GPR, %struct.GPR* %9750, i32 0, i32 1
  %9752 = getelementptr inbounds %struct.Reg, %struct.Reg* %9751, i32 0, i32 0
  %9753 = bitcast %union.anon* %9752 to %struct.anon.2*
  %AL.i97 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9753, i32 0, i32 0
  %9754 = load i64, i64* %PC.i96
  %9755 = add i64 %9754, 2
  store i64 %9755, i64* %PC.i96
  store i8 0, i8* %AL.i97, align 1
  store %struct.Memory* %loadMem_433225, %struct.Memory** %MEMORY
  %loadMem1_433227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 33
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %9758 to i64*
  %9759 = load i64, i64* %PC.i95
  %9760 = add i64 %9759, 134457
  %9761 = load i64, i64* %PC.i95
  %9762 = add i64 %9761, 5
  %9763 = load i64, i64* %PC.i95
  %9764 = add i64 %9763, 5
  store i64 %9764, i64* %PC.i95
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9766 = load i64, i64* %9765, align 8
  %9767 = add i64 %9766, -8
  %9768 = inttoptr i64 %9767 to i64*
  store i64 %9762, i64* %9768
  store i64 %9767, i64* %9765, align 8
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9760, i64* %9769, align 8
  store %struct.Memory* %loadMem1_433227, %struct.Memory** %MEMORY
  %loadMem2_433227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433227 = load i64, i64* %3
  %call2_433227 = call %struct.Memory* @sub_453f60.flush_dpb(%struct.State* %0, i64 %loadPC_433227, %struct.Memory* %loadMem2_433227)
  store %struct.Memory* %call2_433227, %struct.Memory** %MEMORY
  %loadMem_43322c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9771 = getelementptr inbounds %struct.GPR, %struct.GPR* %9770, i32 0, i32 33
  %9772 = getelementptr inbounds %struct.Reg, %struct.Reg* %9771, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %9772 to i64*
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9774 = getelementptr inbounds %struct.GPR, %struct.GPR* %9773, i32 0, i32 11
  %9775 = getelementptr inbounds %struct.Reg, %struct.Reg* %9774, i32 0, i32 0
  %RDI.i94 = bitcast %union.anon* %9775 to i64*
  %9776 = load i64, i64* %PC.i93
  %9777 = add i64 %9776, 7
  store i64 %9777, i64* %PC.i93
  %9778 = load i32, i32* bitcast (%G_0x6f6e10_type* @G_0x6f6e10 to i32*)
  %9779 = zext i32 %9778 to i64
  store i64 %9779, i64* %RDI.i94, align 8
  store %struct.Memory* %loadMem_43322c, %struct.Memory** %MEMORY
  %loadMem1_433233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 33
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %9782 to i64*
  %9783 = load i64, i64* %PC.i92
  %9784 = add i64 %9783, -205187
  %9785 = load i64, i64* %PC.i92
  %9786 = add i64 %9785, 5
  %9787 = load i64, i64* %PC.i92
  %9788 = add i64 %9787, 5
  store i64 %9788, i64* %PC.i92
  %9789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9790 = load i64, i64* %9789, align 8
  %9791 = add i64 %9790, -8
  %9792 = inttoptr i64 %9791 to i64*
  store i64 %9786, i64* %9792
  store i64 %9791, i64* %9789, align 8
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9784, i64* %9793, align 8
  store %struct.Memory* %loadMem1_433233, %struct.Memory** %MEMORY
  %loadMem2_433233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433233 = load i64, i64* %3
  %call2_433233 = call %struct.Memory* @sub_4010b0.close_plt(%struct.State* %0, i64 %loadPC_433233, %struct.Memory* %loadMem2_433233)
  store %struct.Memory* %call2_433233, %struct.Memory** %MEMORY
  %loadMem_433238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9795 = getelementptr inbounds %struct.GPR, %struct.GPR* %9794, i32 0, i32 33
  %9796 = getelementptr inbounds %struct.Reg, %struct.Reg* %9795, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %9796 to i64*
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9798 = getelementptr inbounds %struct.GPR, %struct.GPR* %9797, i32 0, i32 11
  %9799 = getelementptr inbounds %struct.Reg, %struct.Reg* %9798, i32 0, i32 0
  %RDI.i91 = bitcast %union.anon* %9799 to i64*
  %9800 = load i64, i64* %PC.i90
  %9801 = add i64 %9800, 5
  store i64 %9801, i64* %PC.i90
  store i64 4294967295, i64* %RDI.i91, align 8
  store %struct.Memory* %loadMem_433238, %struct.Memory** %MEMORY
  %loadMem_43323d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9803 = getelementptr inbounds %struct.GPR, %struct.GPR* %9802, i32 0, i32 33
  %9804 = getelementptr inbounds %struct.Reg, %struct.Reg* %9803, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %9804 to i64*
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9806 = getelementptr inbounds %struct.GPR, %struct.GPR* %9805, i32 0, i32 11
  %9807 = getelementptr inbounds %struct.Reg, %struct.Reg* %9806, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %9807 to i32*
  %9808 = load i32, i32* %EDI.i
  %9809 = zext i32 %9808 to i64
  %9810 = load i64, i64* %PC.i89
  %9811 = add i64 %9810, 7
  store i64 %9811, i64* %PC.i89
  %9812 = load i32, i32* bitcast (%G_0x7242a4_type* @G_0x7242a4 to i32*)
  %9813 = sub i32 %9808, %9812
  %9814 = icmp ult i32 %9808, %9812
  %9815 = zext i1 %9814 to i8
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9815, i8* %9816, align 1
  %9817 = and i32 %9813, 255
  %9818 = call i32 @llvm.ctpop.i32(i32 %9817)
  %9819 = trunc i32 %9818 to i8
  %9820 = and i8 %9819, 1
  %9821 = xor i8 %9820, 1
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9821, i8* %9822, align 1
  %9823 = xor i32 %9812, %9808
  %9824 = xor i32 %9823, %9813
  %9825 = lshr i32 %9824, 4
  %9826 = trunc i32 %9825 to i8
  %9827 = and i8 %9826, 1
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9827, i8* %9828, align 1
  %9829 = icmp eq i32 %9813, 0
  %9830 = zext i1 %9829 to i8
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9830, i8* %9831, align 1
  %9832 = lshr i32 %9813, 31
  %9833 = trunc i32 %9832 to i8
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9833, i8* %9834, align 1
  %9835 = lshr i32 %9808, 31
  %9836 = lshr i32 %9812, 31
  %9837 = xor i32 %9836, %9835
  %9838 = xor i32 %9832, %9835
  %9839 = add i32 %9838, %9837
  %9840 = icmp eq i32 %9839, 2
  %9841 = zext i1 %9840 to i8
  %9842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9841, i8* %9842, align 1
  store %struct.Memory* %loadMem_43323d, %struct.Memory** %MEMORY
  %loadMem_433244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9844 = getelementptr inbounds %struct.GPR, %struct.GPR* %9843, i32 0, i32 33
  %9845 = getelementptr inbounds %struct.Reg, %struct.Reg* %9844, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %9845 to i64*
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9847 = getelementptr inbounds %struct.GPR, %struct.GPR* %9846, i32 0, i32 1
  %9848 = getelementptr inbounds %struct.Reg, %struct.Reg* %9847, i32 0, i32 0
  %EAX.i87 = bitcast %union.anon* %9848 to i32*
  %9849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9850 = getelementptr inbounds %struct.GPR, %struct.GPR* %9849, i32 0, i32 15
  %9851 = getelementptr inbounds %struct.Reg, %struct.Reg* %9850, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %9851 to i64*
  %9852 = load i64, i64* %RBP.i88
  %9853 = sub i64 %9852, 132
  %9854 = load i32, i32* %EAX.i87
  %9855 = zext i32 %9854 to i64
  %9856 = load i64, i64* %PC.i86
  %9857 = add i64 %9856, 6
  store i64 %9857, i64* %PC.i86
  %9858 = inttoptr i64 %9853 to i32*
  store i32 %9854, i32* %9858
  store %struct.Memory* %loadMem_433244, %struct.Memory** %MEMORY
  %loadMem_43324a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 33
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %9861 to i64*
  %9862 = load i64, i64* %PC.i85
  %9863 = add i64 %9862, 24
  %9864 = load i64, i64* %PC.i85
  %9865 = add i64 %9864, 6
  %9866 = load i64, i64* %PC.i85
  %9867 = add i64 %9866, 6
  store i64 %9867, i64* %PC.i85
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9869 = load i8, i8* %9868, align 1
  store i8 %9869, i8* %BRANCH_TAKEN, align 1
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9871 = icmp ne i8 %9869, 0
  %9872 = select i1 %9871, i64 %9863, i64 %9865
  store i64 %9872, i64* %9870, align 8
  store %struct.Memory* %loadMem_43324a, %struct.Memory** %MEMORY
  %loadBr_43324a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43324a = icmp eq i8 %loadBr_43324a, 1
  br i1 %cmpBr_43324a, label %block_.L_433262, label %block_433250

block_433250:                                     ; preds = %block_.L_43321b
  %loadMem_433250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9874 = getelementptr inbounds %struct.GPR, %struct.GPR* %9873, i32 0, i32 33
  %9875 = getelementptr inbounds %struct.Reg, %struct.Reg* %9874, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %9875 to i64*
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9877 = getelementptr inbounds %struct.GPR, %struct.GPR* %9876, i32 0, i32 11
  %9878 = getelementptr inbounds %struct.Reg, %struct.Reg* %9877, i32 0, i32 0
  %RDI.i84 = bitcast %union.anon* %9878 to i64*
  %9879 = load i64, i64* %PC.i83
  %9880 = add i64 %9879, 7
  store i64 %9880, i64* %PC.i83
  %9881 = load i32, i32* bitcast (%G_0x7242a4_type* @G_0x7242a4 to i32*)
  %9882 = zext i32 %9881 to i64
  store i64 %9882, i64* %RDI.i84, align 8
  store %struct.Memory* %loadMem_433250, %struct.Memory** %MEMORY
  %loadMem1_433257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9884 = getelementptr inbounds %struct.GPR, %struct.GPR* %9883, i32 0, i32 33
  %9885 = getelementptr inbounds %struct.Reg, %struct.Reg* %9884, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %9885 to i64*
  %9886 = load i64, i64* %PC.i82
  %9887 = add i64 %9886, -205223
  %9888 = load i64, i64* %PC.i82
  %9889 = add i64 %9888, 5
  %9890 = load i64, i64* %PC.i82
  %9891 = add i64 %9890, 5
  store i64 %9891, i64* %PC.i82
  %9892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9893 = load i64, i64* %9892, align 8
  %9894 = add i64 %9893, -8
  %9895 = inttoptr i64 %9894 to i64*
  store i64 %9889, i64* %9895
  store i64 %9894, i64* %9892, align 8
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9887, i64* %9896, align 8
  store %struct.Memory* %loadMem1_433257, %struct.Memory** %MEMORY
  %loadMem2_433257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433257 = load i64, i64* %3
  %call2_433257 = call %struct.Memory* @sub_4010b0.close_plt(%struct.State* %0, i64 %loadPC_433257, %struct.Memory* %loadMem2_433257)
  store %struct.Memory* %call2_433257, %struct.Memory** %MEMORY
  %loadMem_43325c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9898 = getelementptr inbounds %struct.GPR, %struct.GPR* %9897, i32 0, i32 33
  %9899 = getelementptr inbounds %struct.Reg, %struct.Reg* %9898, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %9899 to i64*
  %9900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9901 = getelementptr inbounds %struct.GPR, %struct.GPR* %9900, i32 0, i32 1
  %9902 = getelementptr inbounds %struct.Reg, %struct.Reg* %9901, i32 0, i32 0
  %EAX.i80 = bitcast %union.anon* %9902 to i32*
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9904 = getelementptr inbounds %struct.GPR, %struct.GPR* %9903, i32 0, i32 15
  %9905 = getelementptr inbounds %struct.Reg, %struct.Reg* %9904, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %9905 to i64*
  %9906 = load i64, i64* %RBP.i81
  %9907 = sub i64 %9906, 136
  %9908 = load i32, i32* %EAX.i80
  %9909 = zext i32 %9908 to i64
  %9910 = load i64, i64* %PC.i79
  %9911 = add i64 %9910, 6
  store i64 %9911, i64* %PC.i79
  %9912 = inttoptr i64 %9907 to i32*
  store i32 %9908, i32* %9912
  store %struct.Memory* %loadMem_43325c, %struct.Memory** %MEMORY
  br label %block_.L_433262

block_.L_433262:                                  ; preds = %block_433250, %block_.L_43321b
  %loadMem_433262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9914 = getelementptr inbounds %struct.GPR, %struct.GPR* %9913, i32 0, i32 33
  %9915 = getelementptr inbounds %struct.Reg, %struct.Reg* %9914, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %9915 to i64*
  %9916 = load i64, i64* %PC.i78
  %9917 = add i64 %9916, 9
  store i64 %9917, i64* %PC.i78
  %9918 = load i64, i64* bitcast (%G_0x723e20_type* @G_0x723e20 to i64*)
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9919, align 1
  %9920 = trunc i64 %9918 to i32
  %9921 = and i32 %9920, 255
  %9922 = call i32 @llvm.ctpop.i32(i32 %9921)
  %9923 = trunc i32 %9922 to i8
  %9924 = and i8 %9923, 1
  %9925 = xor i8 %9924, 1
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9925, i8* %9926, align 1
  %9927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9927, align 1
  %9928 = icmp eq i64 %9918, 0
  %9929 = zext i1 %9928 to i8
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9929, i8* %9930, align 1
  %9931 = lshr i64 %9918, 63
  %9932 = trunc i64 %9931 to i8
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9932, i8* %9933, align 1
  %9934 = lshr i64 %9918, 63
  %9935 = xor i64 %9931, %9934
  %9936 = add i64 %9935, %9934
  %9937 = icmp eq i64 %9936, 2
  %9938 = zext i1 %9937 to i8
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9938, i8* %9939, align 1
  store %struct.Memory* %loadMem_433262, %struct.Memory** %MEMORY
  %loadMem_43326b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9941 = getelementptr inbounds %struct.GPR, %struct.GPR* %9940, i32 0, i32 33
  %9942 = getelementptr inbounds %struct.Reg, %struct.Reg* %9941, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %9942 to i64*
  %9943 = load i64, i64* %PC.i77
  %9944 = add i64 %9943, 25
  %9945 = load i64, i64* %PC.i77
  %9946 = add i64 %9945, 6
  %9947 = load i64, i64* %PC.i77
  %9948 = add i64 %9947, 6
  store i64 %9948, i64* %PC.i77
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9950 = load i8, i8* %9949, align 1
  store i8 %9950, i8* %BRANCH_TAKEN, align 1
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9952 = icmp ne i8 %9950, 0
  %9953 = select i1 %9952, i64 %9944, i64 %9946
  store i64 %9953, i64* %9951, align 8
  store %struct.Memory* %loadMem_43326b, %struct.Memory** %MEMORY
  %loadBr_43326b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43326b = icmp eq i8 %loadBr_43326b, 1
  br i1 %cmpBr_43326b, label %block_.L_433284, label %block_433271

block_433271:                                     ; preds = %block_.L_433262
  %loadMem_433271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9955 = getelementptr inbounds %struct.GPR, %struct.GPR* %9954, i32 0, i32 33
  %9956 = getelementptr inbounds %struct.Reg, %struct.Reg* %9955, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %9956 to i64*
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9958 = getelementptr inbounds %struct.GPR, %struct.GPR* %9957, i32 0, i32 11
  %9959 = getelementptr inbounds %struct.Reg, %struct.Reg* %9958, i32 0, i32 0
  %RDI.i76 = bitcast %union.anon* %9959 to i64*
  %9960 = load i64, i64* %PC.i75
  %9961 = add i64 %9960, 8
  store i64 %9961, i64* %PC.i75
  %9962 = load i64, i64* bitcast (%G_0x723e20_type* @G_0x723e20 to i64*)
  store i64 %9962, i64* %RDI.i76, align 8
  store %struct.Memory* %loadMem_433271, %struct.Memory** %MEMORY
  %loadMem1_433279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9964 = getelementptr inbounds %struct.GPR, %struct.GPR* %9963, i32 0, i32 33
  %9965 = getelementptr inbounds %struct.Reg, %struct.Reg* %9964, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %9965 to i64*
  %9966 = load i64, i64* %PC.i74
  %9967 = add i64 %9966, -205401
  %9968 = load i64, i64* %PC.i74
  %9969 = add i64 %9968, 5
  %9970 = load i64, i64* %PC.i74
  %9971 = add i64 %9970, 5
  store i64 %9971, i64* %PC.i74
  %9972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9973 = load i64, i64* %9972, align 8
  %9974 = add i64 %9973, -8
  %9975 = inttoptr i64 %9974 to i64*
  store i64 %9969, i64* %9975
  store i64 %9974, i64* %9972, align 8
  %9976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9967, i64* %9976, align 8
  store %struct.Memory* %loadMem1_433279, %struct.Memory** %MEMORY
  %loadMem2_433279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433279 = load i64, i64* %3
  %call2_433279 = call %struct.Memory* @sub_401020.fclose_plt(%struct.State* %0, i64 %loadPC_433279, %struct.Memory* %loadMem2_433279)
  store %struct.Memory* %call2_433279, %struct.Memory** %MEMORY
  %loadMem_43327e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9978 = getelementptr inbounds %struct.GPR, %struct.GPR* %9977, i32 0, i32 33
  %9979 = getelementptr inbounds %struct.Reg, %struct.Reg* %9978, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %9979 to i64*
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9981 = getelementptr inbounds %struct.GPR, %struct.GPR* %9980, i32 0, i32 1
  %9982 = getelementptr inbounds %struct.Reg, %struct.Reg* %9981, i32 0, i32 0
  %EAX.i72 = bitcast %union.anon* %9982 to i32*
  %9983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9984 = getelementptr inbounds %struct.GPR, %struct.GPR* %9983, i32 0, i32 15
  %9985 = getelementptr inbounds %struct.Reg, %struct.Reg* %9984, i32 0, i32 0
  %RBP.i73 = bitcast %union.anon* %9985 to i64*
  %9986 = load i64, i64* %RBP.i73
  %9987 = sub i64 %9986, 140
  %9988 = load i32, i32* %EAX.i72
  %9989 = zext i32 %9988 to i64
  %9990 = load i64, i64* %PC.i71
  %9991 = add i64 %9990, 6
  store i64 %9991, i64* %PC.i71
  %9992 = inttoptr i64 %9987 to i32*
  store i32 %9988, i32* %9992
  store %struct.Memory* %loadMem_43327e, %struct.Memory** %MEMORY
  br label %block_.L_433284

block_.L_433284:                                  ; preds = %block_433271, %block_.L_433262
  %loadMem_433284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9994 = getelementptr inbounds %struct.GPR, %struct.GPR* %9993, i32 0, i32 33
  %9995 = getelementptr inbounds %struct.Reg, %struct.Reg* %9994, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %9995 to i64*
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9997 = getelementptr inbounds %struct.GPR, %struct.GPR* %9996, i32 0, i32 1
  %9998 = getelementptr inbounds %struct.Reg, %struct.Reg* %9997, i32 0, i32 0
  %9999 = bitcast %union.anon* %9998 to %struct.anon.2*
  %AL.i70 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9999, i32 0, i32 0
  %10000 = load i64, i64* %PC.i69
  %10001 = add i64 %10000, 2
  store i64 %10001, i64* %PC.i69
  store i8 0, i8* %AL.i70, align 1
  store %struct.Memory* %loadMem_433284, %struct.Memory** %MEMORY
  %loadMem1_433286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10003 = getelementptr inbounds %struct.GPR, %struct.GPR* %10002, i32 0, i32 33
  %10004 = getelementptr inbounds %struct.Reg, %struct.Reg* %10003, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %10004 to i64*
  %10005 = load i64, i64* %PC.i68
  %10006 = add i64 %10005, 176938
  %10007 = load i64, i64* %PC.i68
  %10008 = add i64 %10007, 5
  %10009 = load i64, i64* %PC.i68
  %10010 = add i64 %10009, 5
  store i64 %10010, i64* %PC.i68
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10012 = load i64, i64* %10011, align 8
  %10013 = add i64 %10012, -8
  %10014 = inttoptr i64 %10013 to i64*
  store i64 %10008, i64* %10014
  store i64 %10013, i64* %10011, align 8
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10006, i64* %10015, align 8
  store %struct.Memory* %loadMem1_433286, %struct.Memory** %MEMORY
  %loadMem2_433286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433286 = load i64, i64* %3
  %call2_433286 = call %struct.Memory* @sub_45e5b0.Clear_Motion_Search_Module(%struct.State* %0, i64 %loadPC_433286, %struct.Memory* %loadMem2_433286)
  store %struct.Memory* %call2_433286, %struct.Memory** %MEMORY
  %loadMem_43328b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10017 = getelementptr inbounds %struct.GPR, %struct.GPR* %10016, i32 0, i32 33
  %10018 = getelementptr inbounds %struct.Reg, %struct.Reg* %10017, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %10018 to i64*
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10020 = getelementptr inbounds %struct.GPR, %struct.GPR* %10019, i32 0, i32 1
  %10021 = getelementptr inbounds %struct.Reg, %struct.Reg* %10020, i32 0, i32 0
  %10022 = bitcast %union.anon* %10021 to %struct.anon.2*
  %AL.i67 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10022, i32 0, i32 0
  %10023 = load i64, i64* %PC.i66
  %10024 = add i64 %10023, 2
  store i64 %10024, i64* %PC.i66
  store i8 0, i8* %AL.i67, align 1
  store %struct.Memory* %loadMem_43328b, %struct.Memory** %MEMORY
  %loadMem1_43328d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10026 = getelementptr inbounds %struct.GPR, %struct.GPR* %10025, i32 0, i32 33
  %10027 = getelementptr inbounds %struct.Reg, %struct.Reg* %10026, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %10027 to i64*
  %10028 = load i64, i64* %PC.i65
  %10029 = add i64 %10028, -5837
  %10030 = load i64, i64* %PC.i65
  %10031 = add i64 %10030, 5
  %10032 = load i64, i64* %PC.i65
  %10033 = add i64 %10032, 5
  store i64 %10033, i64* %PC.i65
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10035 = load i64, i64* %10034, align 8
  %10036 = add i64 %10035, -8
  %10037 = inttoptr i64 %10036 to i64*
  store i64 %10031, i64* %10037
  store i64 %10036, i64* %10034, align 8
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10029, i64* %10038, align 8
  store %struct.Memory* %loadMem1_43328d, %struct.Memory** %MEMORY
  %loadMem2_43328d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43328d = load i64, i64* %3
  %call2_43328d = call %struct.Memory* @sub_431bc0.RandomIntraUninit(%struct.State* %0, i64 %loadPC_43328d, %struct.Memory* %loadMem2_43328d)
  store %struct.Memory* %call2_43328d, %struct.Memory** %MEMORY
  %loadMem_433292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10040 = getelementptr inbounds %struct.GPR, %struct.GPR* %10039, i32 0, i32 33
  %10041 = getelementptr inbounds %struct.Reg, %struct.Reg* %10040, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %10041 to i64*
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10043 = getelementptr inbounds %struct.GPR, %struct.GPR* %10042, i32 0, i32 1
  %10044 = getelementptr inbounds %struct.Reg, %struct.Reg* %10043, i32 0, i32 0
  %10045 = bitcast %union.anon* %10044 to %struct.anon.2*
  %AL.i64 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10045, i32 0, i32 0
  %10046 = load i64, i64* %PC.i63
  %10047 = add i64 %10046, 2
  store i64 %10047, i64* %PC.i63
  store i8 0, i8* %AL.i64, align 1
  store %struct.Memory* %loadMem_433292, %struct.Memory** %MEMORY
  %loadMem1_433294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10049 = getelementptr inbounds %struct.GPR, %struct.GPR* %10048, i32 0, i32 33
  %10050 = getelementptr inbounds %struct.Reg, %struct.Reg* %10049, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %10050 to i64*
  %10051 = load i64, i64* %PC.i62
  %10052 = add i64 %10051, -55828
  %10053 = load i64, i64* %PC.i62
  %10054 = add i64 %10053, 5
  %10055 = load i64, i64* %PC.i62
  %10056 = add i64 %10055, 5
  store i64 %10056, i64* %PC.i62
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10058 = load i64, i64* %10057, align 8
  %10059 = add i64 %10058, -8
  %10060 = inttoptr i64 %10059 to i64*
  store i64 %10054, i64* %10060
  store i64 %10059, i64* %10057, align 8
  %10061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10052, i64* %10061, align 8
  store %struct.Memory* %loadMem1_433294, %struct.Memory** %MEMORY
  %loadMem2_433294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433294 = load i64, i64* %3
  %call2_433294 = call %struct.Memory* @sub_425880.FmoUninit(%struct.State* %0, i64 %loadPC_433294, %struct.Memory* %loadMem2_433294)
  store %struct.Memory* %call2_433294, %struct.Memory** %MEMORY
  %loadMem_433299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10063 = getelementptr inbounds %struct.GPR, %struct.GPR* %10062, i32 0, i32 33
  %10064 = getelementptr inbounds %struct.Reg, %struct.Reg* %10063, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %10064 to i64*
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10066 = getelementptr inbounds %struct.GPR, %struct.GPR* %10065, i32 0, i32 5
  %10067 = getelementptr inbounds %struct.Reg, %struct.Reg* %10066, i32 0, i32 0
  %RCX.i61 = bitcast %union.anon* %10067 to i64*
  %10068 = load i64, i64* %PC.i60
  %10069 = add i64 %10068, 8
  store i64 %10069, i64* %PC.i60
  %10070 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %10070, i64* %RCX.i61, align 8
  store %struct.Memory* %loadMem_433299, %struct.Memory** %MEMORY
  %loadMem_4332a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10072 = getelementptr inbounds %struct.GPR, %struct.GPR* %10071, i32 0, i32 33
  %10073 = getelementptr inbounds %struct.Reg, %struct.Reg* %10072, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %10073 to i64*
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10075 = getelementptr inbounds %struct.GPR, %struct.GPR* %10074, i32 0, i32 5
  %10076 = getelementptr inbounds %struct.Reg, %struct.Reg* %10075, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %10076 to i64*
  %10077 = load i64, i64* %RCX.i
  %10078 = add i64 %10077, 1320
  %10079 = load i64, i64* %PC.i59
  %10080 = add i64 %10079, 7
  store i64 %10080, i64* %PC.i59
  %10081 = inttoptr i64 %10078 to i32*
  %10082 = load i32, i32* %10081
  %10083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10083, align 1
  %10084 = and i32 %10082, 255
  %10085 = call i32 @llvm.ctpop.i32(i32 %10084)
  %10086 = trunc i32 %10085 to i8
  %10087 = and i8 %10086, 1
  %10088 = xor i8 %10087, 1
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10088, i8* %10089, align 1
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10090, align 1
  %10091 = icmp eq i32 %10082, 0
  %10092 = zext i1 %10091 to i8
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10092, i8* %10093, align 1
  %10094 = lshr i32 %10082, 31
  %10095 = trunc i32 %10094 to i8
  %10096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10095, i8* %10096, align 1
  %10097 = lshr i32 %10082, 31
  %10098 = xor i32 %10094, %10097
  %10099 = add i32 %10098, %10097
  %10100 = icmp eq i32 %10099, 2
  %10101 = zext i1 %10100 to i8
  %10102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10101, i8* %10102, align 1
  store %struct.Memory* %loadMem_4332a1, %struct.Memory** %MEMORY
  %loadMem_4332a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10104 = getelementptr inbounds %struct.GPR, %struct.GPR* %10103, i32 0, i32 33
  %10105 = getelementptr inbounds %struct.Reg, %struct.Reg* %10104, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %10105 to i64*
  %10106 = load i64, i64* %PC.i58
  %10107 = add i64 %10106, 13
  %10108 = load i64, i64* %PC.i58
  %10109 = add i64 %10108, 6
  %10110 = load i64, i64* %PC.i58
  %10111 = add i64 %10110, 6
  store i64 %10111, i64* %PC.i58
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10113 = load i8, i8* %10112, align 1
  store i8 %10113, i8* %BRANCH_TAKEN, align 1
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10115 = icmp ne i8 %10113, 0
  %10116 = select i1 %10115, i64 %10107, i64 %10109
  store i64 %10116, i64* %10114, align 8
  store %struct.Memory* %loadMem_4332a8, %struct.Memory** %MEMORY
  %loadBr_4332a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4332a8 = icmp eq i8 %loadBr_4332a8, 1
  br i1 %cmpBr_4332a8, label %block_.L_4332b5, label %block_4332ae

block_4332ae:                                     ; preds = %block_.L_433284
  %loadMem_4332ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10118 = getelementptr inbounds %struct.GPR, %struct.GPR* %10117, i32 0, i32 33
  %10119 = getelementptr inbounds %struct.Reg, %struct.Reg* %10118, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %10119 to i64*
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10121 = getelementptr inbounds %struct.GPR, %struct.GPR* %10120, i32 0, i32 1
  %10122 = getelementptr inbounds %struct.Reg, %struct.Reg* %10121, i32 0, i32 0
  %10123 = bitcast %union.anon* %10122 to %struct.anon.2*
  %AL.i57 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10123, i32 0, i32 0
  %10124 = load i64, i64* %PC.i56
  %10125 = add i64 %10124, 2
  store i64 %10125, i64* %PC.i56
  store i8 0, i8* %AL.i57, align 1
  store %struct.Memory* %loadMem_4332ae, %struct.Memory** %MEMORY
  %loadMem1_4332b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10127 = getelementptr inbounds %struct.GPR, %struct.GPR* %10126, i32 0, i32 33
  %10128 = getelementptr inbounds %struct.Reg, %struct.Reg* %10127, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %10128 to i64*
  %10129 = load i64, i64* %PC.i55
  %10130 = add i64 %10129, -85184
  %10131 = load i64, i64* %PC.i55
  %10132 = add i64 %10131, 5
  %10133 = load i64, i64* %PC.i55
  %10134 = add i64 %10133, 5
  store i64 %10134, i64* %PC.i55
  %10135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10136 = load i64, i64* %10135, align 8
  %10137 = add i64 %10136, -8
  %10138 = inttoptr i64 %10137 to i64*
  store i64 %10132, i64* %10138
  store i64 %10137, i64* %10135, align 8
  %10139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10130, i64* %10139, align 8
  store %struct.Memory* %loadMem1_4332b0, %struct.Memory** %MEMORY
  %loadMem2_4332b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4332b0 = load i64, i64* %3
  %call2_4332b0 = call %struct.Memory* @sub_41e5f0.clear_gop_structure(%struct.State* %0, i64 %loadPC_4332b0, %struct.Memory* %loadMem2_4332b0)
  store %struct.Memory* %call2_4332b0, %struct.Memory** %MEMORY
  br label %block_.L_4332b5

block_.L_4332b5:                                  ; preds = %block_4332ae, %block_.L_433284
  %loadMem_4332b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10141 = getelementptr inbounds %struct.GPR, %struct.GPR* %10140, i32 0, i32 33
  %10142 = getelementptr inbounds %struct.Reg, %struct.Reg* %10141, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %10142 to i64*
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10144 = getelementptr inbounds %struct.GPR, %struct.GPR* %10143, i32 0, i32 1
  %10145 = getelementptr inbounds %struct.Reg, %struct.Reg* %10144, i32 0, i32 0
  %10146 = bitcast %union.anon* %10145 to %struct.anon.2*
  %AL.i54 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10146, i32 0, i32 0
  %10147 = load i64, i64* %PC.i53
  %10148 = add i64 %10147, 2
  store i64 %10148, i64* %PC.i53
  store i8 0, i8* %AL.i54, align 1
  store %struct.Memory* %loadMem_4332b5, %struct.Memory** %MEMORY
  %loadMem1_4332b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10150 = getelementptr inbounds %struct.GPR, %struct.GPR* %10149, i32 0, i32 33
  %10151 = getelementptr inbounds %struct.Reg, %struct.Reg* %10150, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %10151 to i64*
  %10152 = load i64, i64* %PC.i52
  %10153 = add i64 %10152, 322153
  %10154 = load i64, i64* %PC.i52
  %10155 = add i64 %10154, 5
  %10156 = load i64, i64* %PC.i52
  %10157 = add i64 %10156, 5
  store i64 %10157, i64* %PC.i52
  %10158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10159 = load i64, i64* %10158, align 8
  %10160 = add i64 %10159, -8
  %10161 = inttoptr i64 %10160 to i64*
  store i64 %10155, i64* %10161
  store i64 %10160, i64* %10158, align 8
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10153, i64* %10162, align 8
  store %struct.Memory* %loadMem1_4332b7, %struct.Memory** %MEMORY
  %loadMem2_4332b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4332b7 = load i64, i64* %3
  %call2_4332b7 = call %struct.Memory* @sub_481d20.clear_rdopt(%struct.State* %0, i64 %loadPC_4332b7, %struct.Memory* %loadMem2_4332b7)
  store %struct.Memory* %call2_4332b7, %struct.Memory** %MEMORY
  %loadMem_4332bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10164 = getelementptr inbounds %struct.GPR, %struct.GPR* %10163, i32 0, i32 33
  %10165 = getelementptr inbounds %struct.Reg, %struct.Reg* %10164, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %10165 to i64*
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10167 = getelementptr inbounds %struct.GPR, %struct.GPR* %10166, i32 0, i32 1
  %10168 = getelementptr inbounds %struct.Reg, %struct.Reg* %10167, i32 0, i32 0
  %10169 = bitcast %union.anon* %10168 to %struct.anon.2*
  %AL.i51 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10169, i32 0, i32 0
  %10170 = load i64, i64* %PC.i50
  %10171 = add i64 %10170, 2
  store i64 %10171, i64* %PC.i50
  store i8 0, i8* %AL.i51, align 1
  store %struct.Memory* %loadMem_4332bc, %struct.Memory** %MEMORY
  %loadMem1_4332be = load %struct.Memory*, %struct.Memory** %MEMORY
  %10172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10173 = getelementptr inbounds %struct.GPR, %struct.GPR* %10172, i32 0, i32 33
  %10174 = getelementptr inbounds %struct.Reg, %struct.Reg* %10173, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %10174 to i64*
  %10175 = load i64, i64* %PC.i49
  %10176 = add i64 %10175, -4846
  %10177 = load i64, i64* %PC.i49
  %10178 = add i64 %10177, 5
  %10179 = load i64, i64* %PC.i49
  %10180 = add i64 %10179, 5
  store i64 %10180, i64* %PC.i49
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10182 = load i64, i64* %10181, align 8
  %10183 = add i64 %10182, -8
  %10184 = inttoptr i64 %10183 to i64*
  store i64 %10178, i64* %10184
  store i64 %10183, i64* %10181, align 8
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10176, i64* %10185, align 8
  store %struct.Memory* %loadMem1_4332be, %struct.Memory** %MEMORY
  %loadMem2_4332be = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4332be = load i64, i64* %3
  %call2_4332be = call %struct.Memory* @sub_431fd0.calc_buffer(%struct.State* %0, i64 %loadPC_4332be, %struct.Memory* %loadMem2_4332be)
  store %struct.Memory* %call2_4332be, %struct.Memory** %MEMORY
  %loadMem1_4332c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10187 = getelementptr inbounds %struct.GPR, %struct.GPR* %10186, i32 0, i32 33
  %10188 = getelementptr inbounds %struct.Reg, %struct.Reg* %10187, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %10188 to i64*
  %10189 = load i64, i64* %PC.i48
  %10190 = add i64 %10189, 11677
  %10191 = load i64, i64* %PC.i48
  %10192 = add i64 %10191, 5
  %10193 = load i64, i64* %PC.i48
  %10194 = add i64 %10193, 5
  store i64 %10194, i64* %PC.i48
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10196 = load i64, i64* %10195, align 8
  %10197 = add i64 %10196, -8
  %10198 = inttoptr i64 %10197 to i64*
  store i64 %10192, i64* %10198
  store i64 %10197, i64* %10195, align 8
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10190, i64* %10199, align 8
  store %struct.Memory* %loadMem1_4332c3, %struct.Memory** %MEMORY
  %loadMem2_4332c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4332c3 = load i64, i64* %3
  %call2_4332c3 = call %struct.Memory* @sub_436060.report(%struct.State* %0, i64 %loadPC_4332c3, %struct.Memory* %loadMem2_4332c3)
  store %struct.Memory* %call2_4332c3, %struct.Memory** %MEMORY
  %loadMem_4332c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10201 = getelementptr inbounds %struct.GPR, %struct.GPR* %10200, i32 0, i32 33
  %10202 = getelementptr inbounds %struct.Reg, %struct.Reg* %10201, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %10202 to i64*
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10204 = getelementptr inbounds %struct.GPR, %struct.GPR* %10203, i32 0, i32 11
  %10205 = getelementptr inbounds %struct.Reg, %struct.Reg* %10204, i32 0, i32 0
  %RDI.i47 = bitcast %union.anon* %10205 to i64*
  %10206 = load i64, i64* %PC.i46
  %10207 = add i64 %10206, 8
  store i64 %10207, i64* %PC.i46
  %10208 = load i64, i64* bitcast (%G_0x711c40_type* @G_0x711c40 to i64*)
  store i64 %10208, i64* %RDI.i47, align 8
  store %struct.Memory* %loadMem_4332c8, %struct.Memory** %MEMORY
  %loadMem1_4332d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 33
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %10211 to i64*
  %10212 = load i64, i64* %PC.i45
  %10213 = add i64 %10212, 17040
  %10214 = load i64, i64* %PC.i45
  %10215 = add i64 %10214, 5
  %10216 = load i64, i64* %PC.i45
  %10217 = add i64 %10216, 5
  store i64 %10217, i64* %PC.i45
  %10218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10219 = load i64, i64* %10218, align 8
  %10220 = add i64 %10219, -8
  %10221 = inttoptr i64 %10220 to i64*
  store i64 %10215, i64* %10221
  store i64 %10220, i64* %10218, align 8
  %10222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10213, i64* %10222, align 8
  store %struct.Memory* %loadMem1_4332d0, %struct.Memory** %MEMORY
  %loadMem2_4332d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4332d0 = load i64, i64* %3
  %call2_4332d0 = call %struct.Memory* @sub_437560.free_picture(%struct.State* %0, i64 %loadPC_4332d0, %struct.Memory* %loadMem2_4332d0)
  store %struct.Memory* %call2_4332d0, %struct.Memory** %MEMORY
  %loadMem_4332d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10224 = getelementptr inbounds %struct.GPR, %struct.GPR* %10223, i32 0, i32 33
  %10225 = getelementptr inbounds %struct.Reg, %struct.Reg* %10224, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %10225 to i64*
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10227 = getelementptr inbounds %struct.GPR, %struct.GPR* %10226, i32 0, i32 11
  %10228 = getelementptr inbounds %struct.Reg, %struct.Reg* %10227, i32 0, i32 0
  %RDI.i44 = bitcast %union.anon* %10228 to i64*
  %10229 = load i64, i64* %PC.i43
  %10230 = add i64 %10229, 8
  store i64 %10230, i64* %PC.i43
  %10231 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %10231, i64* %RDI.i44, align 8
  store %struct.Memory* %loadMem_4332d5, %struct.Memory** %MEMORY
  %loadMem_4332dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10233 = getelementptr inbounds %struct.GPR, %struct.GPR* %10232, i32 0, i32 33
  %10234 = getelementptr inbounds %struct.Reg, %struct.Reg* %10233, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %10234 to i64*
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 11
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %RDI.i42 = bitcast %union.anon* %10237 to i64*
  %10238 = load i64, i64* %RDI.i42
  %10239 = add i64 %10238, 1296
  %10240 = load i64, i64* %PC.i41
  %10241 = add i64 %10240, 7
  store i64 %10241, i64* %PC.i41
  %10242 = inttoptr i64 %10239 to i32*
  %10243 = load i32, i32* %10242
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10244, align 1
  %10245 = and i32 %10243, 255
  %10246 = call i32 @llvm.ctpop.i32(i32 %10245)
  %10247 = trunc i32 %10246 to i8
  %10248 = and i8 %10247, 1
  %10249 = xor i8 %10248, 1
  %10250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10249, i8* %10250, align 1
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10251, align 1
  %10252 = icmp eq i32 %10243, 0
  %10253 = zext i1 %10252 to i8
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10253, i8* %10254, align 1
  %10255 = lshr i32 %10243, 31
  %10256 = trunc i32 %10255 to i8
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10256, i8* %10257, align 1
  %10258 = lshr i32 %10243, 31
  %10259 = xor i32 %10255, %10258
  %10260 = add i32 %10259, %10258
  %10261 = icmp eq i32 %10260, 2
  %10262 = zext i1 %10261 to i8
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10262, i8* %10263, align 1
  store %struct.Memory* %loadMem_4332dd, %struct.Memory** %MEMORY
  %loadMem_4332e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10265 = getelementptr inbounds %struct.GPR, %struct.GPR* %10264, i32 0, i32 33
  %10266 = getelementptr inbounds %struct.Reg, %struct.Reg* %10265, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %10266 to i64*
  %10267 = load i64, i64* %PC.i40
  %10268 = add i64 %10267, 32
  %10269 = load i64, i64* %PC.i40
  %10270 = add i64 %10269, 6
  %10271 = load i64, i64* %PC.i40
  %10272 = add i64 %10271, 6
  store i64 %10272, i64* %PC.i40
  %10273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10274 = load i8, i8* %10273, align 1
  store i8 %10274, i8* %BRANCH_TAKEN, align 1
  %10275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10276 = icmp ne i8 %10274, 0
  %10277 = select i1 %10276, i64 %10268, i64 %10270
  store i64 %10277, i64* %10275, align 8
  store %struct.Memory* %loadMem_4332e4, %struct.Memory** %MEMORY
  %loadBr_4332e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4332e4 = icmp eq i8 %loadBr_4332e4, 1
  br i1 %cmpBr_4332e4, label %block_.L_433304, label %block_4332ea

block_4332ea:                                     ; preds = %block_.L_4332b5
  %loadMem_4332ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10279 = getelementptr inbounds %struct.GPR, %struct.GPR* %10278, i32 0, i32 33
  %10280 = getelementptr inbounds %struct.Reg, %struct.Reg* %10279, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %10280 to i64*
  %10281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10282 = getelementptr inbounds %struct.GPR, %struct.GPR* %10281, i32 0, i32 11
  %10283 = getelementptr inbounds %struct.Reg, %struct.Reg* %10282, i32 0, i32 0
  %RDI.i39 = bitcast %union.anon* %10283 to i64*
  %10284 = load i64, i64* %PC.i38
  %10285 = add i64 %10284, 8
  store i64 %10285, i64* %PC.i38
  %10286 = load i64, i64* bitcast (%G_0x6d11c8_type* @G_0x6d11c8 to i64*)
  store i64 %10286, i64* %RDI.i39, align 8
  store %struct.Memory* %loadMem_4332ea, %struct.Memory** %MEMORY
  %loadMem1_4332f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10288 = getelementptr inbounds %struct.GPR, %struct.GPR* %10287, i32 0, i32 33
  %10289 = getelementptr inbounds %struct.Reg, %struct.Reg* %10288, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %10289 to i64*
  %10290 = load i64, i64* %PC.i37
  %10291 = add i64 %10290, 17006
  %10292 = load i64, i64* %PC.i37
  %10293 = add i64 %10292, 5
  %10294 = load i64, i64* %PC.i37
  %10295 = add i64 %10294, 5
  store i64 %10295, i64* %PC.i37
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10297 = load i64, i64* %10296, align 8
  %10298 = add i64 %10297, -8
  %10299 = inttoptr i64 %10298 to i64*
  store i64 %10293, i64* %10299
  store i64 %10298, i64* %10296, align 8
  %10300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10291, i64* %10300, align 8
  store %struct.Memory* %loadMem1_4332f2, %struct.Memory** %MEMORY
  %loadMem2_4332f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4332f2 = load i64, i64* %3
  %call2_4332f2 = call %struct.Memory* @sub_437560.free_picture(%struct.State* %0, i64 %loadPC_4332f2, %struct.Memory* %loadMem2_4332f2)
  store %struct.Memory* %call2_4332f2, %struct.Memory** %MEMORY
  %loadMem_4332f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10302 = getelementptr inbounds %struct.GPR, %struct.GPR* %10301, i32 0, i32 33
  %10303 = getelementptr inbounds %struct.Reg, %struct.Reg* %10302, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %10303 to i64*
  %10304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10305 = getelementptr inbounds %struct.GPR, %struct.GPR* %10304, i32 0, i32 11
  %10306 = getelementptr inbounds %struct.Reg, %struct.Reg* %10305, i32 0, i32 0
  %RDI.i36 = bitcast %union.anon* %10306 to i64*
  %10307 = load i64, i64* %PC.i35
  %10308 = add i64 %10307, 8
  store i64 %10308, i64* %PC.i35
  %10309 = load i64, i64* bitcast (%G_0x721df0_type* @G_0x721df0 to i64*)
  store i64 %10309, i64* %RDI.i36, align 8
  store %struct.Memory* %loadMem_4332f7, %struct.Memory** %MEMORY
  %loadMem1_4332ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10311 = getelementptr inbounds %struct.GPR, %struct.GPR* %10310, i32 0, i32 33
  %10312 = getelementptr inbounds %struct.Reg, %struct.Reg* %10311, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %10312 to i64*
  %10313 = load i64, i64* %PC.i34
  %10314 = add i64 %10313, 16993
  %10315 = load i64, i64* %PC.i34
  %10316 = add i64 %10315, 5
  %10317 = load i64, i64* %PC.i34
  %10318 = add i64 %10317, 5
  store i64 %10318, i64* %PC.i34
  %10319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10320 = load i64, i64* %10319, align 8
  %10321 = add i64 %10320, -8
  %10322 = inttoptr i64 %10321 to i64*
  store i64 %10316, i64* %10322
  store i64 %10321, i64* %10319, align 8
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10314, i64* %10323, align 8
  store %struct.Memory* %loadMem1_4332ff, %struct.Memory** %MEMORY
  %loadMem2_4332ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4332ff = load i64, i64* %3
  %call2_4332ff = call %struct.Memory* @sub_437560.free_picture(%struct.State* %0, i64 %loadPC_4332ff, %struct.Memory* %loadMem2_4332ff)
  store %struct.Memory* %call2_4332ff, %struct.Memory** %MEMORY
  br label %block_.L_433304

block_.L_433304:                                  ; preds = %block_4332ea, %block_.L_4332b5
  %loadMem_433304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10325 = getelementptr inbounds %struct.GPR, %struct.GPR* %10324, i32 0, i32 33
  %10326 = getelementptr inbounds %struct.Reg, %struct.Reg* %10325, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %10326 to i64*
  %10327 = load i64, i64* %PC.i33
  %10328 = add i64 %10327, 9
  store i64 %10328, i64* %PC.i33
  %10329 = load i64, i64* bitcast (%G_0x6d4758_type* @G_0x6d4758 to i64*)
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10330, align 1
  %10331 = trunc i64 %10329 to i32
  %10332 = and i32 %10331, 255
  %10333 = call i32 @llvm.ctpop.i32(i32 %10332)
  %10334 = trunc i32 %10333 to i8
  %10335 = and i8 %10334, 1
  %10336 = xor i8 %10335, 1
  %10337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10336, i8* %10337, align 1
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10338, align 1
  %10339 = icmp eq i64 %10329, 0
  %10340 = zext i1 %10339 to i8
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10340, i8* %10341, align 1
  %10342 = lshr i64 %10329, 63
  %10343 = trunc i64 %10342 to i8
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10343, i8* %10344, align 1
  %10345 = lshr i64 %10329, 63
  %10346 = xor i64 %10342, %10345
  %10347 = add i64 %10346, %10345
  %10348 = icmp eq i64 %10347, 2
  %10349 = zext i1 %10348 to i8
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10349, i8* %10350, align 1
  store %struct.Memory* %loadMem_433304, %struct.Memory** %MEMORY
  %loadMem_43330d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10352 = getelementptr inbounds %struct.GPR, %struct.GPR* %10351, i32 0, i32 33
  %10353 = getelementptr inbounds %struct.Reg, %struct.Reg* %10352, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %10353 to i64*
  %10354 = load i64, i64* %PC.i32
  %10355 = add i64 %10354, 19
  %10356 = load i64, i64* %PC.i32
  %10357 = add i64 %10356, 6
  %10358 = load i64, i64* %PC.i32
  %10359 = add i64 %10358, 6
  store i64 %10359, i64* %PC.i32
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10361 = load i8, i8* %10360, align 1
  store i8 %10361, i8* %BRANCH_TAKEN, align 1
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10363 = icmp ne i8 %10361, 0
  %10364 = select i1 %10363, i64 %10355, i64 %10357
  store i64 %10364, i64* %10362, align 8
  store %struct.Memory* %loadMem_43330d, %struct.Memory** %MEMORY
  %loadBr_43330d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43330d = icmp eq i8 %loadBr_43330d, 1
  br i1 %cmpBr_43330d, label %block_.L_433320, label %block_433313

block_433313:                                     ; preds = %block_.L_433304
  %loadMem_433313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 33
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %10367 to i64*
  %10368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10369 = getelementptr inbounds %struct.GPR, %struct.GPR* %10368, i32 0, i32 11
  %10370 = getelementptr inbounds %struct.Reg, %struct.Reg* %10369, i32 0, i32 0
  %RDI.i31 = bitcast %union.anon* %10370 to i64*
  %10371 = load i64, i64* %PC.i30
  %10372 = add i64 %10371, 8
  store i64 %10372, i64* %PC.i30
  %10373 = load i64, i64* bitcast (%G_0x6d4758_type* @G_0x6d4758 to i64*)
  store i64 %10373, i64* %RDI.i31, align 8
  store %struct.Memory* %loadMem_433313, %struct.Memory** %MEMORY
  %loadMem1_43331b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10375 = getelementptr inbounds %struct.GPR, %struct.GPR* %10374, i32 0, i32 33
  %10376 = getelementptr inbounds %struct.Reg, %struct.Reg* %10375, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %10376 to i64*
  %10377 = load i64, i64* %PC.i29
  %10378 = add i64 %10377, 16965
  %10379 = load i64, i64* %PC.i29
  %10380 = add i64 %10379, 5
  %10381 = load i64, i64* %PC.i29
  %10382 = add i64 %10381, 5
  store i64 %10382, i64* %PC.i29
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10384 = load i64, i64* %10383, align 8
  %10385 = add i64 %10384, -8
  %10386 = inttoptr i64 %10385 to i64*
  store i64 %10380, i64* %10386
  store i64 %10385, i64* %10383, align 8
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10378, i64* %10387, align 8
  store %struct.Memory* %loadMem1_43331b, %struct.Memory** %MEMORY
  %loadMem2_43331b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43331b = load i64, i64* %3
  %call2_43331b = call %struct.Memory* @sub_437560.free_picture(%struct.State* %0, i64 %loadPC_43331b, %struct.Memory* %loadMem2_43331b)
  store %struct.Memory* %call2_43331b, %struct.Memory** %MEMORY
  br label %block_.L_433320

block_.L_433320:                                  ; preds = %block_433313, %block_.L_433304
  %loadMem_433320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10389 = getelementptr inbounds %struct.GPR, %struct.GPR* %10388, i32 0, i32 33
  %10390 = getelementptr inbounds %struct.Reg, %struct.Reg* %10389, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %10390 to i64*
  %10391 = load i64, i64* %PC.i28
  %10392 = add i64 %10391, 9
  store i64 %10392, i64* %PC.i28
  %10393 = load i64, i64* bitcast (%G_0x6f80a8_type* @G_0x6f80a8 to i64*)
  %10394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10394, align 1
  %10395 = trunc i64 %10393 to i32
  %10396 = and i32 %10395, 255
  %10397 = call i32 @llvm.ctpop.i32(i32 %10396)
  %10398 = trunc i32 %10397 to i8
  %10399 = and i8 %10398, 1
  %10400 = xor i8 %10399, 1
  %10401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10400, i8* %10401, align 1
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10402, align 1
  %10403 = icmp eq i64 %10393, 0
  %10404 = zext i1 %10403 to i8
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10404, i8* %10405, align 1
  %10406 = lshr i64 %10393, 63
  %10407 = trunc i64 %10406 to i8
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10407, i8* %10408, align 1
  %10409 = lshr i64 %10393, 63
  %10410 = xor i64 %10406, %10409
  %10411 = add i64 %10410, %10409
  %10412 = icmp eq i64 %10411, 2
  %10413 = zext i1 %10412 to i8
  %10414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10413, i8* %10414, align 1
  store %struct.Memory* %loadMem_433320, %struct.Memory** %MEMORY
  %loadMem_433329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10416 = getelementptr inbounds %struct.GPR, %struct.GPR* %10415, i32 0, i32 33
  %10417 = getelementptr inbounds %struct.Reg, %struct.Reg* %10416, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %10417 to i64*
  %10418 = load i64, i64* %PC.i27
  %10419 = add i64 %10418, 19
  %10420 = load i64, i64* %PC.i27
  %10421 = add i64 %10420, 6
  %10422 = load i64, i64* %PC.i27
  %10423 = add i64 %10422, 6
  store i64 %10423, i64* %PC.i27
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10425 = load i8, i8* %10424, align 1
  store i8 %10425, i8* %BRANCH_TAKEN, align 1
  %10426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10427 = icmp ne i8 %10425, 0
  %10428 = select i1 %10427, i64 %10419, i64 %10421
  store i64 %10428, i64* %10426, align 8
  store %struct.Memory* %loadMem_433329, %struct.Memory** %MEMORY
  %loadBr_433329 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_433329 = icmp eq i8 %loadBr_433329, 1
  br i1 %cmpBr_433329, label %block_.L_43333c, label %block_43332f

block_43332f:                                     ; preds = %block_.L_433320
  %loadMem_43332f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10430 = getelementptr inbounds %struct.GPR, %struct.GPR* %10429, i32 0, i32 33
  %10431 = getelementptr inbounds %struct.Reg, %struct.Reg* %10430, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %10431 to i64*
  %10432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10433 = getelementptr inbounds %struct.GPR, %struct.GPR* %10432, i32 0, i32 11
  %10434 = getelementptr inbounds %struct.Reg, %struct.Reg* %10433, i32 0, i32 0
  %RDI.i26 = bitcast %union.anon* %10434 to i64*
  %10435 = load i64, i64* %PC.i25
  %10436 = add i64 %10435, 8
  store i64 %10436, i64* %PC.i25
  %10437 = load i64, i64* bitcast (%G_0x6f80a8_type* @G_0x6f80a8 to i64*)
  store i64 %10437, i64* %RDI.i26, align 8
  store %struct.Memory* %loadMem_43332f, %struct.Memory** %MEMORY
  %loadMem1_433337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10439 = getelementptr inbounds %struct.GPR, %struct.GPR* %10438, i32 0, i32 33
  %10440 = getelementptr inbounds %struct.Reg, %struct.Reg* %10439, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %10440 to i64*
  %10441 = load i64, i64* %PC.i24
  %10442 = add i64 %10441, 16937
  %10443 = load i64, i64* %PC.i24
  %10444 = add i64 %10443, 5
  %10445 = load i64, i64* %PC.i24
  %10446 = add i64 %10445, 5
  store i64 %10446, i64* %PC.i24
  %10447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10448 = load i64, i64* %10447, align 8
  %10449 = add i64 %10448, -8
  %10450 = inttoptr i64 %10449 to i64*
  store i64 %10444, i64* %10450
  store i64 %10449, i64* %10447, align 8
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10442, i64* %10451, align 8
  store %struct.Memory* %loadMem1_433337, %struct.Memory** %MEMORY
  %loadMem2_433337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433337 = load i64, i64* %3
  %call2_433337 = call %struct.Memory* @sub_437560.free_picture(%struct.State* %0, i64 %loadPC_433337, %struct.Memory* %loadMem2_433337)
  store %struct.Memory* %call2_433337, %struct.Memory** %MEMORY
  br label %block_.L_43333c

block_.L_43333c:                                  ; preds = %block_43332f, %block_.L_433320
  %loadMem_43333c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10453 = getelementptr inbounds %struct.GPR, %struct.GPR* %10452, i32 0, i32 33
  %10454 = getelementptr inbounds %struct.Reg, %struct.Reg* %10453, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %10454 to i64*
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10456 = getelementptr inbounds %struct.GPR, %struct.GPR* %10455, i32 0, i32 1
  %10457 = getelementptr inbounds %struct.Reg, %struct.Reg* %10456, i32 0, i32 0
  %10458 = bitcast %union.anon* %10457 to %struct.anon.2*
  %AL.i23 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10458, i32 0, i32 0
  %10459 = load i64, i64* %PC.i22
  %10460 = add i64 %10459, 2
  store i64 %10460, i64* %PC.i22
  store i8 0, i8* %AL.i23, align 1
  store %struct.Memory* %loadMem_43333c, %struct.Memory** %MEMORY
  %loadMem1_43333e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10462 = getelementptr inbounds %struct.GPR, %struct.GPR* %10461, i32 0, i32 33
  %10463 = getelementptr inbounds %struct.Reg, %struct.Reg* %10462, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %10463 to i64*
  %10464 = load i64, i64* %PC.i21
  %10465 = add i64 %10464, 99442
  %10466 = load i64, i64* %PC.i21
  %10467 = add i64 %10466, 5
  %10468 = load i64, i64* %PC.i21
  %10469 = add i64 %10468, 5
  store i64 %10469, i64* %PC.i21
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10471 = load i64, i64* %10470, align 8
  %10472 = add i64 %10471, -8
  %10473 = inttoptr i64 %10472 to i64*
  store i64 %10467, i64* %10473
  store i64 %10472, i64* %10470, align 8
  %10474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10465, i64* %10474, align 8
  store %struct.Memory* %loadMem1_43333e, %struct.Memory** %MEMORY
  %loadMem2_43333e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43333e = load i64, i64* %3
  %call2_43333e = call %struct.Memory* @sub_44b7b0.free_dpb(%struct.State* %0, i64 %loadPC_43333e, %struct.Memory* %loadMem2_43333e)
  store %struct.Memory* %call2_43333e, %struct.Memory** %MEMORY
  %loadMem_433343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10476 = getelementptr inbounds %struct.GPR, %struct.GPR* %10475, i32 0, i32 33
  %10477 = getelementptr inbounds %struct.Reg, %struct.Reg* %10476, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %10477 to i64*
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10479 = getelementptr inbounds %struct.GPR, %struct.GPR* %10478, i32 0, i32 11
  %10480 = getelementptr inbounds %struct.Reg, %struct.Reg* %10479, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %10480 to i64*
  %10481 = load i64, i64* %PC.i20
  %10482 = add i64 %10481, 8
  store i64 %10482, i64* %PC.i20
  %10483 = load i64, i64* bitcast (%G_0x6cc330_type* @G_0x6cc330 to i64*)
  store i64 %10483, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_433343, %struct.Memory** %MEMORY
  %loadMem1_43334b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10485 = getelementptr inbounds %struct.GPR, %struct.GPR* %10484, i32 0, i32 33
  %10486 = getelementptr inbounds %struct.Reg, %struct.Reg* %10485, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %10486 to i64*
  %10487 = load i64, i64* %PC.i19
  %10488 = add i64 %10487, 139429
  %10489 = load i64, i64* %PC.i19
  %10490 = add i64 %10489, 5
  %10491 = load i64, i64* %PC.i19
  %10492 = add i64 %10491, 5
  store i64 %10492, i64* %PC.i19
  %10493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10494 = load i64, i64* %10493, align 8
  %10495 = add i64 %10494, -8
  %10496 = inttoptr i64 %10495 to i64*
  store i64 %10490, i64* %10496
  store i64 %10495, i64* %10493, align 8
  %10497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10488, i64* %10497, align 8
  store %struct.Memory* %loadMem1_43334b, %struct.Memory** %MEMORY
  %loadMem2_43334b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43334b = load i64, i64* %3
  %call2_43334b = call %struct.Memory* @sub_4553f0.free_colocated(%struct.State* %0, i64 %loadPC_43334b, %struct.Memory* %loadMem2_43334b)
  store %struct.Memory* %call2_43334b, %struct.Memory** %MEMORY
  %loadMem_433350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10499 = getelementptr inbounds %struct.GPR, %struct.GPR* %10498, i32 0, i32 33
  %10500 = getelementptr inbounds %struct.Reg, %struct.Reg* %10499, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %10500 to i64*
  %10501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10502 = getelementptr inbounds %struct.GPR, %struct.GPR* %10501, i32 0, i32 1
  %10503 = getelementptr inbounds %struct.Reg, %struct.Reg* %10502, i32 0, i32 0
  %10504 = bitcast %union.anon* %10503 to %struct.anon.2*
  %AL.i18 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10504, i32 0, i32 0
  %10505 = load i64, i64* %PC.i17
  %10506 = add i64 %10505, 2
  store i64 %10506, i64* %PC.i17
  store i8 0, i8* %AL.i18, align 1
  store %struct.Memory* %loadMem_433350, %struct.Memory** %MEMORY
  %loadMem1_433352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10508 = getelementptr inbounds %struct.GPR, %struct.GPR* %10507, i32 0, i32 33
  %10509 = getelementptr inbounds %struct.Reg, %struct.Reg* %10508, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %10509 to i64*
  %10510 = load i64, i64* %PC.i16
  %10511 = add i64 %10510, 273598
  %10512 = load i64, i64* %PC.i16
  %10513 = add i64 %10512, 5
  %10514 = load i64, i64* %PC.i16
  %10515 = add i64 %10514, 5
  store i64 %10515, i64* %PC.i16
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10517 = load i64, i64* %10516, align 8
  %10518 = add i64 %10517, -8
  %10519 = inttoptr i64 %10518 to i64*
  store i64 %10513, i64* %10519
  store i64 %10518, i64* %10516, align 8
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10511, i64* %10520, align 8
  store %struct.Memory* %loadMem1_433352, %struct.Memory** %MEMORY
  %loadMem2_433352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433352 = load i64, i64* %3
  %call2_433352 = call %struct.Memory* @sub_476010.uninit_out_buffer(%struct.State* %0, i64 %loadPC_433352, %struct.Memory* %loadMem2_433352)
  store %struct.Memory* %call2_433352, %struct.Memory** %MEMORY
  %loadMem1_433357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10522 = getelementptr inbounds %struct.GPR, %struct.GPR* %10521, i32 0, i32 33
  %10523 = getelementptr inbounds %struct.Reg, %struct.Reg* %10522, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %10523 to i64*
  %10524 = load i64, i64* %PC.i15
  %10525 = add i64 %10524, 16953
  %10526 = load i64, i64* %PC.i15
  %10527 = add i64 %10526, 5
  %10528 = load i64, i64* %PC.i15
  %10529 = add i64 %10528, 5
  store i64 %10529, i64* %PC.i15
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10531 = load i64, i64* %10530, align 8
  %10532 = add i64 %10531, -8
  %10533 = inttoptr i64 %10532 to i64*
  store i64 %10527, i64* %10533
  store i64 %10532, i64* %10530, align 8
  %10534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10525, i64* %10534, align 8
  store %struct.Memory* %loadMem1_433357, %struct.Memory** %MEMORY
  %loadMem2_433357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433357 = load i64, i64* %3
  %call2_433357 = call %struct.Memory* @sub_437590.free_global_buffers(%struct.State* %0, i64 %loadPC_433357, %struct.Memory* %loadMem2_433357)
  store %struct.Memory* %call2_433357, %struct.Memory** %MEMORY
  %loadMem1_43335c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10536 = getelementptr inbounds %struct.GPR, %struct.GPR* %10535, i32 0, i32 33
  %10537 = getelementptr inbounds %struct.Reg, %struct.Reg* %10536, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %10537 to i64*
  %10538 = load i64, i64* %PC.i14
  %10539 = add i64 %10538, 18132
  %10540 = load i64, i64* %PC.i14
  %10541 = add i64 %10540, 5
  %10542 = load i64, i64* %PC.i14
  %10543 = add i64 %10542, 5
  store i64 %10543, i64* %PC.i14
  %10544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10545 = load i64, i64* %10544, align 8
  %10546 = add i64 %10545, -8
  %10547 = inttoptr i64 %10546 to i64*
  store i64 %10541, i64* %10547
  store i64 %10546, i64* %10544, align 8
  %10548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10539, i64* %10548, align 8
  store %struct.Memory* %loadMem1_43335c, %struct.Memory** %MEMORY
  %loadMem2_43335c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43335c = load i64, i64* %3
  %call2_43335c = call %struct.Memory* @sub_437a30.free_img(%struct.State* %0, i64 %loadPC_43335c, %struct.Memory* %loadMem2_43335c)
  store %struct.Memory* %call2_43335c, %struct.Memory** %MEMORY
  %loadMem_433361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10550 = getelementptr inbounds %struct.GPR, %struct.GPR* %10549, i32 0, i32 33
  %10551 = getelementptr inbounds %struct.Reg, %struct.Reg* %10550, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %10551 to i64*
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10553 = getelementptr inbounds %struct.GPR, %struct.GPR* %10552, i32 0, i32 1
  %10554 = getelementptr inbounds %struct.Reg, %struct.Reg* %10553, i32 0, i32 0
  %10555 = bitcast %union.anon* %10554 to %struct.anon.2*
  %AL.i13 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10555, i32 0, i32 0
  %10556 = load i64, i64* %PC.i12
  %10557 = add i64 %10556, 2
  store i64 %10557, i64* %PC.i12
  store i8 0, i8* %AL.i13, align 1
  store %struct.Memory* %loadMem_433361, %struct.Memory** %MEMORY
  %loadMem1_433363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10559 = getelementptr inbounds %struct.GPR, %struct.GPR* %10558, i32 0, i32 33
  %10560 = getelementptr inbounds %struct.Reg, %struct.Reg* %10559, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %10560 to i64*
  %10561 = load i64, i64* %PC.i11
  %10562 = add i64 %10561, -112771
  %10563 = load i64, i64* %PC.i11
  %10564 = add i64 %10563, 5
  %10565 = load i64, i64* %PC.i11
  %10566 = add i64 %10565, 5
  store i64 %10566, i64* %PC.i11
  %10567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10568 = load i64, i64* %10567, align 8
  %10569 = add i64 %10568, -8
  %10570 = inttoptr i64 %10569 to i64*
  store i64 %10564, i64* %10570
  store i64 %10569, i64* %10567, align 8
  %10571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10562, i64* %10571, align 8
  store %struct.Memory* %loadMem1_433363, %struct.Memory** %MEMORY
  %loadMem2_433363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433363 = load i64, i64* %3
  %call2_433363 = call %struct.Memory* @sub_417ae0.free_context_memory(%struct.State* %0, i64 %loadPC_433363, %struct.Memory* %loadMem2_433363)
  store %struct.Memory* %call2_433363, %struct.Memory** %MEMORY
  %loadMem_433368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10573 = getelementptr inbounds %struct.GPR, %struct.GPR* %10572, i32 0, i32 33
  %10574 = getelementptr inbounds %struct.Reg, %struct.Reg* %10573, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %10574 to i64*
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10576 = getelementptr inbounds %struct.GPR, %struct.GPR* %10575, i32 0, i32 1
  %10577 = getelementptr inbounds %struct.Reg, %struct.Reg* %10576, i32 0, i32 0
  %10578 = bitcast %union.anon* %10577 to %struct.anon.2*
  %AL.i10 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10578, i32 0, i32 0
  %10579 = load i64, i64* %PC.i9
  %10580 = add i64 %10579, 2
  store i64 %10580, i64* %PC.i9
  store i8 0, i8* %AL.i10, align 1
  store %struct.Memory* %loadMem_433368, %struct.Memory** %MEMORY
  %loadMem1_43336a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10582 = getelementptr inbounds %struct.GPR, %struct.GPR* %10581, i32 0, i32 33
  %10583 = getelementptr inbounds %struct.Reg, %struct.Reg* %10582, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %10583 to i64*
  %10584 = load i64, i64* %PC.i8
  %10585 = add i64 %10584, 270534
  %10586 = load i64, i64* %PC.i8
  %10587 = add i64 %10586, 5
  %10588 = load i64, i64* %PC.i8
  %10589 = add i64 %10588, 5
  store i64 %10589, i64* %PC.i8
  %10590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10591 = load i64, i64* %10590, align 8
  %10592 = add i64 %10591, -8
  %10593 = inttoptr i64 %10592 to i64*
  store i64 %10587, i64* %10593
  store i64 %10592, i64* %10590, align 8
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10585, i64* %10594, align 8
  store %struct.Memory* %loadMem1_43336a, %struct.Memory** %MEMORY
  %loadMem2_43336a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43336a = load i64, i64* %3
  %call2_43336a = call %struct.Memory* @sub_475430.FreeNalPayloadBuffer(%struct.State* %0, i64 %loadPC_43336a, %struct.Memory* %loadMem2_43336a)
  store %struct.Memory* %call2_43336a, %struct.Memory** %MEMORY
  %loadMem_43336f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 33
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %10597 to i64*
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10599 = getelementptr inbounds %struct.GPR, %struct.GPR* %10598, i32 0, i32 1
  %10600 = getelementptr inbounds %struct.Reg, %struct.Reg* %10599, i32 0, i32 0
  %10601 = bitcast %union.anon* %10600 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10601, i32 0, i32 0
  %10602 = load i64, i64* %PC.i7
  %10603 = add i64 %10602, 2
  store i64 %10603, i64* %PC.i7
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_43336f, %struct.Memory** %MEMORY
  %loadMem1_433371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10605 = getelementptr inbounds %struct.GPR, %struct.GPR* %10604, i32 0, i32 33
  %10606 = getelementptr inbounds %struct.Reg, %struct.Reg* %10605, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %10606 to i64*
  %10607 = load i64, i64* %PC.i6
  %10608 = add i64 %10607, 279103
  %10609 = load i64, i64* %PC.i6
  %10610 = add i64 %10609, 5
  %10611 = load i64, i64* %PC.i6
  %10612 = add i64 %10611, 5
  store i64 %10612, i64* %PC.i6
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10614 = load i64, i64* %10613, align 8
  %10615 = add i64 %10614, -8
  %10616 = inttoptr i64 %10615 to i64*
  store i64 %10610, i64* %10616
  store i64 %10615, i64* %10613, align 8
  %10617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10608, i64* %10617, align 8
  store %struct.Memory* %loadMem1_433371, %struct.Memory** %MEMORY
  %loadMem2_433371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_433371 = load i64, i64* %3
  %call2_433371 = call %struct.Memory* @sub_4775b0.FreeParameterSets(%struct.State* %0, i64 %loadPC_433371, %struct.Memory* %loadMem2_433371)
  store %struct.Memory* %call2_433371, %struct.Memory** %MEMORY
  %loadMem_433376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10619 = getelementptr inbounds %struct.GPR, %struct.GPR* %10618, i32 0, i32 33
  %10620 = getelementptr inbounds %struct.Reg, %struct.Reg* %10619, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %10620 to i64*
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10622 = getelementptr inbounds %struct.GPR, %struct.GPR* %10621, i32 0, i32 1
  %10623 = getelementptr inbounds %struct.Reg, %struct.Reg* %10622, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %10623 to i32*
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10625 = getelementptr inbounds %struct.GPR, %struct.GPR* %10624, i32 0, i32 1
  %10626 = getelementptr inbounds %struct.Reg, %struct.Reg* %10625, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %10626 to i64*
  %10627 = load i64, i64* %RAX.i
  %10628 = load i32, i32* %EAX.i
  %10629 = zext i32 %10628 to i64
  %10630 = load i64, i64* %PC.i5
  %10631 = add i64 %10630, 2
  store i64 %10631, i64* %PC.i5
  %10632 = xor i64 %10629, %10627
  %10633 = trunc i64 %10632 to i32
  %10634 = and i64 %10632, 4294967295
  store i64 %10634, i64* %RAX.i, align 8
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10635, align 1
  %10636 = and i32 %10633, 255
  %10637 = call i32 @llvm.ctpop.i32(i32 %10636)
  %10638 = trunc i32 %10637 to i8
  %10639 = and i8 %10638, 1
  %10640 = xor i8 %10639, 1
  %10641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10640, i8* %10641, align 1
  %10642 = icmp eq i32 %10633, 0
  %10643 = zext i1 %10642 to i8
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10643, i8* %10644, align 1
  %10645 = lshr i32 %10633, 31
  %10646 = trunc i32 %10645 to i8
  %10647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10646, i8* %10647, align 1
  %10648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10648, align 1
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10649, align 1
  store %struct.Memory* %loadMem_433376, %struct.Memory** %MEMORY
  %loadMem_433378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10651 = getelementptr inbounds %struct.GPR, %struct.GPR* %10650, i32 0, i32 33
  %10652 = getelementptr inbounds %struct.Reg, %struct.Reg* %10651, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %10652 to i64*
  %10653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10654 = getelementptr inbounds %struct.GPR, %struct.GPR* %10653, i32 0, i32 13
  %10655 = getelementptr inbounds %struct.Reg, %struct.Reg* %10654, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %10655 to i64*
  %10656 = load i64, i64* %RSP.i
  %10657 = load i64, i64* %PC.i4
  %10658 = add i64 %10657, 7
  store i64 %10658, i64* %PC.i4
  %10659 = add i64 144, %10656
  store i64 %10659, i64* %RSP.i, align 8
  %10660 = icmp ult i64 %10659, %10656
  %10661 = icmp ult i64 %10659, 144
  %10662 = or i1 %10660, %10661
  %10663 = zext i1 %10662 to i8
  %10664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10663, i8* %10664, align 1
  %10665 = trunc i64 %10659 to i32
  %10666 = and i32 %10665, 255
  %10667 = call i32 @llvm.ctpop.i32(i32 %10666)
  %10668 = trunc i32 %10667 to i8
  %10669 = and i8 %10668, 1
  %10670 = xor i8 %10669, 1
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10670, i8* %10671, align 1
  %10672 = xor i64 144, %10656
  %10673 = xor i64 %10672, %10659
  %10674 = lshr i64 %10673, 4
  %10675 = trunc i64 %10674 to i8
  %10676 = and i8 %10675, 1
  %10677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10676, i8* %10677, align 1
  %10678 = icmp eq i64 %10659, 0
  %10679 = zext i1 %10678 to i8
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10679, i8* %10680, align 1
  %10681 = lshr i64 %10659, 63
  %10682 = trunc i64 %10681 to i8
  %10683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10682, i8* %10683, align 1
  %10684 = lshr i64 %10656, 63
  %10685 = xor i64 %10681, %10684
  %10686 = add i64 %10685, %10681
  %10687 = icmp eq i64 %10686, 2
  %10688 = zext i1 %10687 to i8
  %10689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10688, i8* %10689, align 1
  store %struct.Memory* %loadMem_433378, %struct.Memory** %MEMORY
  %loadMem_43337f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10691 = getelementptr inbounds %struct.GPR, %struct.GPR* %10690, i32 0, i32 33
  %10692 = getelementptr inbounds %struct.Reg, %struct.Reg* %10691, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10692 to i64*
  %10693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10694 = getelementptr inbounds %struct.GPR, %struct.GPR* %10693, i32 0, i32 15
  %10695 = getelementptr inbounds %struct.Reg, %struct.Reg* %10694, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10695 to i64*
  %10696 = load i64, i64* %PC.i2
  %10697 = add i64 %10696, 1
  store i64 %10697, i64* %PC.i2
  %10698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10699 = load i64, i64* %10698, align 8
  %10700 = add i64 %10699, 8
  %10701 = inttoptr i64 %10699 to i64*
  %10702 = load i64, i64* %10701
  store i64 %10702, i64* %RBP.i3, align 8
  store i64 %10700, i64* %10698, align 8
  store %struct.Memory* %loadMem_43337f, %struct.Memory** %MEMORY
  %loadMem_433380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10704 = getelementptr inbounds %struct.GPR, %struct.GPR* %10703, i32 0, i32 33
  %10705 = getelementptr inbounds %struct.Reg, %struct.Reg* %10704, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10705 to i64*
  %10706 = load i64, i64* %PC.i1
  %10707 = add i64 %10706, 1
  store i64 %10707, i64* %PC.i1
  %10708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10710 = load i64, i64* %10709, align 8
  %10711 = inttoptr i64 %10710 to i64*
  %10712 = load i64, i64* %10711
  store i64 %10712, i64* %10708, align 8
  %10713 = add i64 %10710, 8
  store i64 %10713, i64* %10709, align 8
  store %struct.Memory* %loadMem_433380, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_433380
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 144
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 144
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 144, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__0x6f6e10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 -1, i32* bitcast (%G_0x6f6e10_type* @G_0x6f6e10 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__0x7242a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 -1, i32* bitcast (%G_0x7242a4_type* @G_0x7242a4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__0x723e20(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  store i64 0, i64* bitcast (%G_0x723e20_type* @G_0x723e20 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__0x70d198(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  store i64 0, i64* bitcast (%G_0x70d198_type* @G_0x70d198 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__0x6e51e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  store i64 0, i64* bitcast (%G_0x6e51e8_type* @G_0x6e51e8 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x70d194(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x70d194_type* @G_0x70d194 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Configure(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Init_QMatrix(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Init_QOffsetMatrix(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.AllocNalPayloadBuffer(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.init_poc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.GenerateParameterSets(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.init_img(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.malloc_picture(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x711c40(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x711c40_type* @G_0x711c40 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x510__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1296
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4327da(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x6d11c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6d11c8_type* @G_0x6d11c8 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x721df0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x721df0_type* @G_0x721df0 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb40__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432809(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x6d4758(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6d4758_type* @G_0x6d4758 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x6f80a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6f80a8_type* @G_0x6f80a8 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.init_rdopt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x528__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1320
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432859(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.init_gop_structure(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x528__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1320
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43284d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.interpret_gop_structure(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432854(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.create_pyramid(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432859(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.init_dpb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.init_out_buffer(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__0x6f9710(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  store i64 0, i64* bitcast (%G_0x6f9710_type* @G_0x6f9710 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__0x6f96a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  store i64 0, i64* bitcast (%G_0x6f96a0_type* @G_0x6f96a0 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__0x710a50(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  store i64 0, i64* bitcast (%G_0x710a50_type* @G_0x710a50 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__0x70fcf0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  store i64 0, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.init_global_buffers(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.create_context_memory(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Init_Motion_Search_Module(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.information_init(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xca4__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 3236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4328d6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.rc_init_seq(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xcdc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3292
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4328f2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.DefineThreshold(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6f8edc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6f8edc_type* @G_0x6f8edc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6cee50(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6cee50_type* @G_0x6cee50 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x722ca8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x722ca8_type* @G_0x722ca8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x725260(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x725260_type* @G_0x725260 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x988__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2440
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_432973(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x988__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x14__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4d4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x6cc018(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6cc018_type* @G_0x6cc018 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.PatchInputNoFrames(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb908___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb908_type* @G_0x6cb908 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x5d0__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 1488
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.start_sequence(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x18__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x5d4__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 1492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x5d0__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 1488
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x5d0__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 1488
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6cc020(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43321b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x11b30__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72496
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x4c8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432a77(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x4cc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1228
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x6cc020___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6cc020_type* @G_0x6cc020 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_0x4c8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 1224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl__edx__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432a8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RAX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11b00__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb40__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 2880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_432afb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b00__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11b04__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72452
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432b1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11b04__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 72452
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_432b52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432b63(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b04__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11b08__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72456
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x524__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1316
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_432b9e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x528__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1320
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432bc4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x4d4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 2
  %15 = icmp ult i32 %13, 2
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 2
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_432c6c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432c20(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432c34(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x722c98___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x722c98_type* @G_0x722c98 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x11b10__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72464
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432d2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b10__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11b10__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72464
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432cef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_0x4c8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_432cea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11b10__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432cef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x722c98___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x722c98_type* @G_0x722c98 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b10__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__esi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = and i64 %10, 4294967295
  %22 = shl i64 %20, 32
  %23 = or i64 %22, %16
  %24 = udiv i64 %23, %21
  %25 = and i64 %24, 4294967295
  %26 = icmp eq i64 %24, %25
  br i1 %26, label %31, label %27

; <label>:27:                                     ; preds = %block_400488
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = urem i64 %23, %21
  %33 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  store i64 %24, i64* %33, align 8
  %34 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %40, align 1
  br label %_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %27, %31
  %41 = phi %struct.Memory* [ %30, %27 ], [ %2, %31 ]
  ret %struct.Memory* %41
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11af4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72436
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x524__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1316
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432d86(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %13, 31
  %29 = xor i32 %25, %28
  %30 = add i32 %29, %28
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432d81(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x11af4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72436
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432d86(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.SetImgType(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_432ed5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_432ed5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x7eabe__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x7eabe__rip__type* @G_0x7eabe__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x7ea76__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x7ea76__rip__type* @G_0x7ea76__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl__ecx___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = sitofp i32 %12 to float
  %22 = bitcast i8* %11 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %17, i32 1
  %24 = getelementptr inbounds i8, i8* %11, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %20, i32 0
  %27 = bitcast i8* %18 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd__xmm2___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = fpext float %16 to double
  %18 = bitcast i8* %10 to double*
  store double %17, double* %18, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x4d4__rax____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm1___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm3___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM3 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RDX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x4d4__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 1236
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6cc018___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6cc018_type* @G_0x6cc018 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4d4__rdi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 1236
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0xfffffffe___eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  %18 = mul i64 -2, %17
  %19 = trunc i64 %18 to i32
  %20 = and i64 %18, 4294967295
  store i64 %20, i64* %RAX, align 8
  %21 = shl i64 %18, 32
  %22 = ashr exact i64 %21, 32
  %23 = icmp ne i64 %22, %18
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11af4__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11af4__rdi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11b00__rdi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 72448
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11b00__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11b04__rdi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 72452
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x11b04__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72452
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_433116(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xca4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433111(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_432f74(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x4d4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 1236
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x4d4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 1236
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RCX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_433106(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4c8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4d4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RCX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_432fd1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_432fd7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4330b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433085(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = sub i32 %16, %18
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RCX, align 8
  %21 = icmp ult i32 %16, %18
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %19, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %18, %16
  %31 = xor i32 %30, %19
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %19, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %16, 31
  %43 = lshr i32 %18, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = sub i32 %16, %18
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  %21 = icmp ult i32 %16, %18
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %19, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %18, %16
  %31 = xor i32 %30, %19
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %19, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %16, 31
  %43 = lshr i32 %18, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x4d4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 1236
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4330b2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4330b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4330e5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4330fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.rc_init_GOP(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_433116(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb60__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2912
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_433163(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11ac0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72384
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_433175(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x11ac0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72384
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.encode_one_frame(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xc9c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 3228
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433199(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.report_frame_statistic(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11ab8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 72376
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4331dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4331ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11ab8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.encode_enhancement_layer(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.process_2nd_IGOP(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4329ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.terminate_sequence(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.flush_dpb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6f6e10___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6f6e10_type* @G_0x6f6e10 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.close_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7242a4___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x7242a4_type* @G_0x7242a4 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433262(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a4___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a4_type* @G_0x7242a4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__0x723e20(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 9
  store i64 %7, i64* %PC
  %8 = load i64, i64* bitcast (%G_0x723e20_type* @G_0x723e20 to i64*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = trunc i64 %8 to i32
  %11 = and i32 %10, 255
  %12 = call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17, align 1
  %18 = icmp eq i64 %8, 0
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19, i8* %20, align 1
  %21 = lshr i64 %8, 63
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %8, 63
  %25 = xor i64 %21, %24
  %26 = add i64 %25, %24
  %27 = icmp eq i64 %26, 2
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433284(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x723e20___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x723e20_type* @G_0x723e20 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fclose_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Clear_Motion_Search_Module(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.RandomIntraUninit(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.FmoUninit(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4332b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.clear_gop_structure(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.clear_rdopt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.calc_buffer(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.report(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x711c40___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x711c40_type* @G_0x711c40 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.free_picture(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x510__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 1296
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433304(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d11c8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d11c8_type* @G_0x6d11c8 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x721df0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x721df0_type* @G_0x721df0 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__0x6d4758(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 9
  store i64 %7, i64* %PC
  %8 = load i64, i64* bitcast (%G_0x6d4758_type* @G_0x6d4758 to i64*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = trunc i64 %8 to i32
  %11 = and i32 %10, 255
  %12 = call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17, align 1
  %18 = icmp eq i64 %8, 0
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19, i8* %20, align 1
  %21 = lshr i64 %8, 63
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %8, 63
  %25 = xor i64 %21, %24
  %26 = add i64 %25, %24
  %27 = icmp eq i64 %26, 2
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_433320(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4758___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4758_type* @G_0x6d4758 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__0x6f80a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 9
  store i64 %7, i64* %PC
  %8 = load i64, i64* bitcast (%G_0x6f80a8_type* @G_0x6f80a8 to i64*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = trunc i64 %8 to i32
  %11 = and i32 %10, 255
  %12 = call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17, align 1
  %18 = icmp eq i64 %8, 0
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19, i8* %20, align 1
  %21 = lshr i64 %8, 63
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %8, 63
  %25 = xor i64 %21, %24
  %26 = add i64 %25, %24
  %27 = icmp eq i64 %26, 2
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43333c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f80a8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f80a8_type* @G_0x6f80a8 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.free_dpb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cc330___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cc330_type* @G_0x6cc330 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.free_colocated(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.uninit_out_buffer(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.free_global_buffers(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.free_img(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.free_context_memory(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.FreeNalPayloadBuffer(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.FreeParameterSets(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 144, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 144
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 144, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
