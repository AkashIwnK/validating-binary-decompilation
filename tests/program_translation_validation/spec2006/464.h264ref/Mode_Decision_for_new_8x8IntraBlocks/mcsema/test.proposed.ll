; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4a7680.intrapred_luma8x8(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_45f5b0.SATD8X8(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_49d6a0.store_coding_state_cs_cm(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4aa2f0.RDCost_for_8x8IntraBlocks(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_49d6c0.reset_coding_state_cs_cm(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_483520.RDCost_for_4x4Blocks_Chroma(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4aa740.dct_luma8x8(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40acc0.dct_chroma4x4(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x6cb8f8_type = type <{ [8 x i8] }>
@G_0x6cb8f8= global %G_0x6cb8f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cc5f8_type = type <{ [8 x i8] }>
@G_0x6cc5f8= global %G_0x6cc5f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6f6f90_type = type <{ [8 x i8] }>
@G_0x6f6f90= global %G_0x6f6f90_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
@G_0x70fcf0= global %G_0x70fcf0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x726418_type = type <{ [8 x i8] }>
@G_0x726418= global %G_0x726418_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xd203__rip__type = type <{ [8 x i8] }>
@G_0xd203__rip_= global %G_0xd203__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xd848__rip__type = type <{ [8 x i8] }>
@G_0xd848__rip_= global %G_0xd848__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6ccb00_type = type <{ [8 x i8] }>
@G__0x6ccb00= global %G__0x6ccb00_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6cd4f0_type = type <{ [8 x i8] }>
@G__0x6cd4f0= global %G__0x6cd4f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6d0920_type = type <{ [8 x i8] }>
@G__0x6d0920= global %G__0x6d0920_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6d2ec0_type = type <{ [8 x i8] }>
@G__0x6d2ec0= global %G__0x6d2ec0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6d40f0_type = type <{ [8 x i8] }>
@G__0x6d40f0= global %G__0x6d40f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6d4600_type = type <{ [8 x i8] }>
@G__0x6d4600= global %G__0x6d4600_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6f6fa0_type = type <{ [8 x i8] }>
@G__0x6f6fa0= global %G__0x6f6fa0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6f8f20_type = type <{ [8 x i8] }>
@G__0x6f8f20= global %G__0x6f8f20_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x7107b0_type = type <{ [8 x i8] }>
@G__0x7107b0= global %G__0x7107b0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x722ff0_type = type <{ [8 x i8] }>
@G__0x722ff0= global %G__0x722ff0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x723720_type = type <{ [8 x i8] }>
@G__0x723720= global %G__0x723720_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @Mode_Decision_for_new_8x8IntraBlocks(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .Mode_Decision_for_new_8x8IntraBlocks:	 RIP: 4a4000	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 4a4000	 Bytes: 1
  %loadMem_4a4000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4000 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4000)
  store %struct.Memory* %call_4a4000, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 4a4001	 Bytes: 3
  %loadMem_4a4001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4001 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4001)
  store %struct.Memory* %call_4a4001, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 4a4004	 Bytes: 1
  %loadMem_4a4004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4004 = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4004)
  store %struct.Memory* %call_4a4004, %struct.Memory** %MEMORY

  ; Code: subq $0x5c8, %rsp	 RIP: 4a4005	 Bytes: 7
  %loadMem_4a4005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4005 = call %struct.Memory* @routine_subq__0x5c8___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4005)
  store %struct.Memory* %call_4a4005, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %ecx	 RIP: 4a400c	 Bytes: 5
  %loadMem_4a400c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a400c = call %struct.Memory* @routine_movl__0xffffffff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a400c)
  store %struct.Memory* %call_4a400c, %struct.Memory** %MEMORY

  ; Code: xorl %r8d, %r8d	 RIP: 4a4011	 Bytes: 3
  %loadMem_4a4011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4011 = call %struct.Memory* @routine_xorl__r8d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4011)
  store %struct.Memory* %call_4a4011, %struct.Memory** %MEMORY

  ; Code: leaq -0x240(%rbp), %r9	 RIP: 4a4014	 Bytes: 7
  %loadMem_4a4014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4014 = call %struct.Memory* @routine_leaq_MINUS0x240__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4014)
  store %struct.Memory* %call_4a4014, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 4a401b	 Bytes: 5
  %loadMem_4a401b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a401b = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a401b)
  store %struct.Memory* %call_4a401b, %struct.Memory** %MEMORY

  ; Code: movsd 0xd848(%rip), %xmm1	 RIP: 4a4020	 Bytes: 8
  %loadMem_4a4020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4020 = call %struct.Memory* @routine_movsd_0xd848__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4020)
  store %struct.Memory* %call_4a4020, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edx	 RIP: 4a4028	 Bytes: 5
  %loadMem_4a4028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4028 = call %struct.Memory* @routine_movl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4028)
  store %struct.Memory* %call_4a4028, %struct.Memory** %MEMORY

  ; Code: xorps %xmm2, %xmm2	 RIP: 4a402d	 Bytes: 3
  %loadMem_4a402d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a402d = call %struct.Memory* @routine_xorps__xmm2___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a402d)
  store %struct.Memory* %call_4a402d, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0xc(%rbp)	 RIP: 4a4030	 Bytes: 3
  %loadMem_4a4030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4030 = call %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4030)
  store %struct.Memory* %call_4a4030, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x18(%rbp)	 RIP: 4a4033	 Bytes: 5
  %loadMem_4a4033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4033 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4033)
  store %struct.Memory* %call_4a4033, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x20(%rbp)	 RIP: 4a4038	 Bytes: 4
  %loadMem_4a4038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4038 = call %struct.Memory* @routine_movq__rsi__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4038)
  store %struct.Memory* %call_4a4038, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 4a403c	 Bytes: 7
  %loadMem_4a403c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a403c = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a403c)
  store %struct.Memory* %call_4a403c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4c(%rbp)	 RIP: 4a4043	 Bytes: 7
  %loadMem_4a4043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4043 = call %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4043)
  store %struct.Memory* %call_4a4043, %struct.Memory** %MEMORY

  ; Code: movsd %xmm2, -0x1d8(%rbp)	 RIP: 4a404a	 Bytes: 8
  %loadMem_4a404a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a404a = call %struct.Memory* @routine_movsd__xmm2__MINUS0x1d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a404a)
  store %struct.Memory* %call_4a404a, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edi	 RIP: 4a4052	 Bytes: 3
  %loadMem_4a4052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4052 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4052)
  store %struct.Memory* %call_4a4052, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x484(%rbp)	 RIP: 4a4055	 Bytes: 6
  %loadMem_4a4055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4055 = call %struct.Memory* @routine_movl__eax__MINUS0x484__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4055)
  store %struct.Memory* %call_4a4055, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a405b	 Bytes: 2
  %loadMem_4a405b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a405b = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a405b)
  store %struct.Memory* %call_4a405b, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x488(%rbp)	 RIP: 4a405d	 Bytes: 6
  %loadMem_4a405d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a405d = call %struct.Memory* @routine_movl__edx__MINUS0x488__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a405d)
  store %struct.Memory* %call_4a405d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a4063	 Bytes: 1
  %loadMem_4a4063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4063 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4063)
  store %struct.Memory* %call_4a4063, %struct.Memory** %MEMORY

  ; Code: movl -0x488(%rbp), %edi	 RIP: 4a4064	 Bytes: 6
  %loadMem_4a4064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4064 = call %struct.Memory* @routine_movl_MINUS0x488__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4064)
  store %struct.Memory* %call_4a4064, %struct.Memory** %MEMORY

  ; Code: idivl %edi	 RIP: 4a406a	 Bytes: 2
  %loadMem_4a406a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a406a = call %struct.Memory* @routine_idivl__edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a406a)
  store %struct.Memory* %call_4a406a, %struct.Memory** %MEMORY

  ; Code: shll $0x3, %edx	 RIP: 4a406c	 Bytes: 3
  %loadMem_4a406c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a406c = call %struct.Memory* @routine_shll__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a406c)
  store %struct.Memory* %call_4a406c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1e4(%rbp)	 RIP: 4a406f	 Bytes: 6
  %loadMem_4a406f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a406f = call %struct.Memory* @routine_movl__edx__MINUS0x1e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a406f)
  store %struct.Memory* %call_4a406f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a4075	 Bytes: 3
  %loadMem_4a4075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4075 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4075)
  store %struct.Memory* %call_4a4075, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a4078	 Bytes: 2
  %loadMem_4a4078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4078 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4078)
  store %struct.Memory* %call_4a4078, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a407a	 Bytes: 1
  %loadMem_4a407a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a407a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a407a)
  store %struct.Memory* %call_4a407a, %struct.Memory** %MEMORY

  ; Code: idivl %edi	 RIP: 4a407b	 Bytes: 2
  %loadMem_4a407b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a407b = call %struct.Memory* @routine_idivl__edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a407b)
  store %struct.Memory* %call_4a407b, %struct.Memory** %MEMORY

  ; Code: shll $0x3, %eax	 RIP: 4a407d	 Bytes: 3
  %loadMem_4a407d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a407d = call %struct.Memory* @routine_shll__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a407d)
  store %struct.Memory* %call_4a407d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e8(%rbp)	 RIP: 4a4080	 Bytes: 6
  %loadMem_4a4080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4080 = call %struct.Memory* @routine_movl__eax__MINUS0x1e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4080)
  store %struct.Memory* %call_4a4080, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a4086	 Bytes: 8
  %loadMem_4a4086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4086 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4086)
  store %struct.Memory* %call_4a4086, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rsi), %eax	 RIP: 4a408e	 Bytes: 6
  %loadMem_4a408e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a408e = call %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a408e)
  store %struct.Memory* %call_4a408e, %struct.Memory** %MEMORY

  ; Code: addl -0x1e4(%rbp), %eax	 RIP: 4a4094	 Bytes: 6
  %loadMem_4a4094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4094 = call %struct.Memory* @routine_addl_MINUS0x1e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4094)
  store %struct.Memory* %call_4a4094, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1ec(%rbp)	 RIP: 4a409a	 Bytes: 6
  %loadMem_4a409a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a409a = call %struct.Memory* @routine_movl__eax__MINUS0x1ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a409a)
  store %struct.Memory* %call_4a409a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a40a0	 Bytes: 8
  %loadMem_4a40a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40a0 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40a0)
  store %struct.Memory* %call_4a40a0, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rsi), %eax	 RIP: 4a40a8	 Bytes: 6
  %loadMem_4a40a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40a8 = call %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40a8)
  store %struct.Memory* %call_4a40a8, %struct.Memory** %MEMORY

  ; Code: addl -0x1e8(%rbp), %eax	 RIP: 4a40ae	 Bytes: 6
  %loadMem_4a40ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40ae = call %struct.Memory* @routine_addl_MINUS0x1e8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40ae)
  store %struct.Memory* %call_4a40ae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f0(%rbp)	 RIP: 4a40b4	 Bytes: 6
  %loadMem_4a40b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40b4 = call %struct.Memory* @routine_movl__eax__MINUS0x1f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40b4)
  store %struct.Memory* %call_4a40b4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a40ba	 Bytes: 8
  %loadMem_4a40ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40ba = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40ba)
  store %struct.Memory* %call_4a40ba, %struct.Memory** %MEMORY

  ; Code: movl 0xa8(%rsi), %eax	 RIP: 4a40c2	 Bytes: 6
  %loadMem_4a40c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40c2 = call %struct.Memory* @routine_movl_0xa8__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40c2)
  store %struct.Memory* %call_4a40c2, %struct.Memory** %MEMORY

  ; Code: addl -0x1e4(%rbp), %eax	 RIP: 4a40c8	 Bytes: 6
  %loadMem_4a40c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40c8 = call %struct.Memory* @routine_addl_MINUS0x1e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40c8)
  store %struct.Memory* %call_4a40c8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f4(%rbp)	 RIP: 4a40ce	 Bytes: 6
  %loadMem_4a40ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40ce = call %struct.Memory* @routine_movl__eax__MINUS0x1f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40ce)
  store %struct.Memory* %call_4a40ce, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a40d4	 Bytes: 8
  %loadMem_4a40d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40d4 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40d4)
  store %struct.Memory* %call_4a40d4, %struct.Memory** %MEMORY

  ; Code: movl 0xac(%rsi), %eax	 RIP: 4a40dc	 Bytes: 6
  %loadMem_4a40dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40dc = call %struct.Memory* @routine_movl_0xac__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40dc)
  store %struct.Memory* %call_4a40dc, %struct.Memory** %MEMORY

  ; Code: addl -0x1e8(%rbp), %eax	 RIP: 4a40e2	 Bytes: 6
  %loadMem_4a40e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40e2 = call %struct.Memory* @routine_addl_MINUS0x1e8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40e2)
  store %struct.Memory* %call_4a40e2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f8(%rbp)	 RIP: 4a40e8	 Bytes: 6
  %loadMem_4a40e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40e8 = call %struct.Memory* @routine_movl__eax__MINUS0x1f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40e8)
  store %struct.Memory* %call_4a40e8, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 4a40ee	 Bytes: 6
  %loadMem_4a40ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40ee = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40ee)
  store %struct.Memory* %call_4a40ee, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a40f4	 Bytes: 1
  %loadMem_4a40f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40f4 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40f4)
  store %struct.Memory* %call_4a40f4, %struct.Memory** %MEMORY

  ; Code: movl -0x484(%rbp), %r10d	 RIP: 4a40f5	 Bytes: 7
  %loadMem_4a40f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40f5 = call %struct.Memory* @routine_movl_MINUS0x484__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40f5)
  store %struct.Memory* %call_4a40f5, %struct.Memory** %MEMORY

  ; Code: idivl %r10d	 RIP: 4a40fc	 Bytes: 3
  %loadMem_4a40fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40fc = call %struct.Memory* @routine_idivl__r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40fc)
  store %struct.Memory* %call_4a40fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1fc(%rbp)	 RIP: 4a40ff	 Bytes: 6
  %loadMem_4a40ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a40ff = call %struct.Memory* @routine_movl__eax__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a40ff)
  store %struct.Memory* %call_4a40ff, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %eax	 RIP: 4a4105	 Bytes: 6
  %loadMem_4a4105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4105 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4105)
  store %struct.Memory* %call_4a4105, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a410b	 Bytes: 1
  %loadMem_4a410b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a410b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a410b)
  store %struct.Memory* %call_4a410b, %struct.Memory** %MEMORY

  ; Code: idivl %r10d	 RIP: 4a410c	 Bytes: 3
  %loadMem_4a410c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a410c = call %struct.Memory* @routine_idivl__r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a410c)
  store %struct.Memory* %call_4a410c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x200(%rbp)	 RIP: 4a410f	 Bytes: 6
  %loadMem_4a410f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a410f = call %struct.Memory* @routine_movl__eax__MINUS0x200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a410f)
  store %struct.Memory* %call_4a410f, %struct.Memory** %MEMORY

  ; Code: movsd %xmm1, -0x208(%rbp)	 RIP: 4a4115	 Bytes: 8
  %loadMem_4a4115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4115 = call %struct.Memory* @routine_movsd__xmm1__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4115)
  store %struct.Memory* %call_4a4115, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rsi	 RIP: 4a411d	 Bytes: 8
  %loadMem_4a411d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a411d = call %struct.Memory* @routine_movq_0x726418___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a411d)
  store %struct.Memory* %call_4a411d, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x210(%rbp)	 RIP: 4a4125	 Bytes: 7
  %loadMem_4a4125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4125 = call %struct.Memory* @routine_movq__rsi__MINUS0x210__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4125)
  store %struct.Memory* %call_4a4125, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a412c	 Bytes: 8
  %loadMem_4a412c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a412c = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a412c)
  store %struct.Memory* %call_4a412c, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rsi), %rsi	 RIP: 4a4134	 Bytes: 7
  %loadMem_4a4134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4134 = call %struct.Memory* @routine_movq_0x3758__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4134)
  store %struct.Memory* %call_4a4134, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 4a413b	 Bytes: 8
  %loadMem_4a413b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a413b = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a413b)
  store %struct.Memory* %call_4a413b, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%r11), %r11	 RIP: 4a4143	 Bytes: 4
  %loadMem_4a4143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4143 = call %struct.Memory* @routine_movslq_0xc__r11____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4143)
  store %struct.Memory* %call_4a4143, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %r11, %r11	 RIP: 4a4147	 Bytes: 7
  %loadMem_4a4147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4147 = call %struct.Memory* @routine_imulq__0x278___r11___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4147)
  store %struct.Memory* %call_4a4147, %struct.Memory** %MEMORY

  ; Code: addq %r11, %rsi	 RIP: 4a414e	 Bytes: 3
  %loadMem_4a414e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a414e = call %struct.Memory* @routine_addq__r11___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a414e)
  store %struct.Memory* %call_4a414e, %struct.Memory** %MEMORY

  ; Code: movl 0x20c(%rsi), %eax	 RIP: 4a4151	 Bytes: 6
  %loadMem_4a4151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4151 = call %struct.Memory* @routine_movl_0x20c__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4151)
  store %struct.Memory* %call_4a4151, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x278(%rbp)	 RIP: 4a4157	 Bytes: 6
  %loadMem_4a4157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4157 = call %struct.Memory* @routine_movl__eax__MINUS0x278__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4157)
  store %struct.Memory* %call_4a4157, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a415d	 Bytes: 8
  %loadMem_4a415d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a415d = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a415d)
  store %struct.Memory* %call_4a415d, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rsi), %edi	 RIP: 4a4165	 Bytes: 3
  %loadMem_4a4165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4165 = call %struct.Memory* @routine_movl_0xc__rsi____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4165)
  store %struct.Memory* %call_4a4165, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %eax	 RIP: 4a4168	 Bytes: 6
  %loadMem_4a4168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4168 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4168)
  store %struct.Memory* %call_4a4168, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a416e	 Bytes: 1
  %loadMem_4a416e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a416e = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a416e)
  store %struct.Memory* %call_4a416e, %struct.Memory** %MEMORY

  ; Code: idivl %r10d	 RIP: 4a416f	 Bytes: 3
  %loadMem_4a416f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a416f = call %struct.Memory* @routine_idivl__r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a416f)
  store %struct.Memory* %call_4a416f, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %ebx	 RIP: 4a4172	 Bytes: 6
  %loadMem_4a4172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4172 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4172)
  store %struct.Memory* %call_4a4172, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x48c(%rbp)	 RIP: 4a4178	 Bytes: 6
  %loadMem_4a4178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4178 = call %struct.Memory* @routine_movl__eax__MINUS0x48c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4178)
  store %struct.Memory* %call_4a4178, %struct.Memory** %MEMORY

  ; Code: movl %ebx, %eax	 RIP: 4a417e	 Bytes: 2
  %loadMem_4a417e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a417e = call %struct.Memory* @routine_movl__ebx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a417e)
  store %struct.Memory* %call_4a417e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a4180	 Bytes: 1
  %loadMem_4a4180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4180 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4180)
  store %struct.Memory* %call_4a4180, %struct.Memory** %MEMORY

  ; Code: idivl %r10d	 RIP: 4a4181	 Bytes: 3
  %loadMem_4a4181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4181 = call %struct.Memory* @routine_idivl__r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4181)
  store %struct.Memory* %call_4a4181, %struct.Memory** %MEMORY

  ; Code: movl -0x48c(%rbp), %esi	 RIP: 4a4184	 Bytes: 6
  %loadMem_4a4184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4184 = call %struct.Memory* @routine_movl_MINUS0x48c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4184)
  store %struct.Memory* %call_4a4184, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 4a418a	 Bytes: 2
  %loadMem_4a418a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a418a = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a418a)
  store %struct.Memory* %call_4a418a, %struct.Memory** %MEMORY

  ; Code: callq .getLuma4x4Neighbour	 RIP: 4a418c	 Bytes: 5
  %loadMem1_4a418c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a418c = call %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a418c, i64 -364380, i64 5, i64 5)
  store %struct.Memory* %call1_4a418c, %struct.Memory** %MEMORY

  %loadMem2_4a418c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a418c = load i64, i64* %3
  %call2_4a418c = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64  %loadPC_4a418c, %struct.Memory* %loadMem2_4a418c)
  store %struct.Memory* %call2_4a418c, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 4a4191	 Bytes: 2
  %loadMem_4a4191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4191 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4191)
  store %struct.Memory* %call_4a4191, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %r8d	 RIP: 4a4193	 Bytes: 6
  %loadMem_4a4193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4193 = call %struct.Memory* @routine_movl__0xffffffff___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4193)
  store %struct.Memory* %call_4a4193, %struct.Memory** %MEMORY

  ; Code: leaq -0x258(%rbp), %r9	 RIP: 4a4199	 Bytes: 7
  %loadMem_4a4199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4199 = call %struct.Memory* @routine_leaq_MINUS0x258__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4199)
  store %struct.Memory* %call_4a4199, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 4a41a0	 Bytes: 5
  %loadMem_4a41a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41a0 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41a0)
  store %struct.Memory* %call_4a41a0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 4a41a5	 Bytes: 8
  %loadMem_4a41a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41a5 = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41a5)
  store %struct.Memory* %call_4a41a5, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%r11), %edi	 RIP: 4a41ad	 Bytes: 4
  %loadMem_4a41ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41ad = call %struct.Memory* @routine_movl_0xc__r11____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41ad)
  store %struct.Memory* %call_4a41ad, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %edx	 RIP: 4a41b1	 Bytes: 6
  %loadMem_4a41b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41b1 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41b1)
  store %struct.Memory* %call_4a41b1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x490(%rbp)	 RIP: 4a41b7	 Bytes: 6
  %loadMem_4a41b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41b7 = call %struct.Memory* @routine_movl__eax__MINUS0x490__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41b7)
  store %struct.Memory* %call_4a41b7, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a41bd	 Bytes: 2
  %loadMem_4a41bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41bd = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41bd)
  store %struct.Memory* %call_4a41bd, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a41bf	 Bytes: 1
  %loadMem_4a41bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41bf = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41bf)
  store %struct.Memory* %call_4a41bf, %struct.Memory** %MEMORY

  ; Code: movl -0x490(%rbp), %esi	 RIP: 4a41c0	 Bytes: 6
  %loadMem_4a41c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41c0 = call %struct.Memory* @routine_movl_MINUS0x490__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41c0)
  store %struct.Memory* %call_4a41c0, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a41c6	 Bytes: 2
  %loadMem_4a41c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41c6 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41c6)
  store %struct.Memory* %call_4a41c6, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r10d	 RIP: 4a41c8	 Bytes: 7
  %loadMem_4a41c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41c8 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41c8)
  store %struct.Memory* %call_4a41c8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x494(%rbp)	 RIP: 4a41cf	 Bytes: 6
  %loadMem_4a41cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41cf = call %struct.Memory* @routine_movl__eax__MINUS0x494__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41cf)
  store %struct.Memory* %call_4a41cf, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a41d5	 Bytes: 3
  %loadMem_4a41d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41d5 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41d5)
  store %struct.Memory* %call_4a41d5, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a41d8	 Bytes: 1
  %loadMem_4a41d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41d8 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41d8)
  store %struct.Memory* %call_4a41d8, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a41d9	 Bytes: 2
  %loadMem_4a41d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41d9 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41d9)
  store %struct.Memory* %call_4a41d9, %struct.Memory** %MEMORY

  ; Code: movl -0x494(%rbp), %esi	 RIP: 4a41db	 Bytes: 6
  %loadMem_4a41db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41db = call %struct.Memory* @routine_movl_MINUS0x494__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41db)
  store %struct.Memory* %call_4a41db, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 4a41e1	 Bytes: 2
  %loadMem_4a41e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41e1 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41e1)
  store %struct.Memory* %call_4a41e1, %struct.Memory** %MEMORY

  ; Code: callq .getLuma4x4Neighbour	 RIP: 4a41e3	 Bytes: 5
  %loadMem1_4a41e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a41e3 = call %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a41e3, i64 -364467, i64 5, i64 5)
  store %struct.Memory* %call1_4a41e3, %struct.Memory** %MEMORY

  %loadMem2_4a41e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a41e3 = load i64, i64* %3
  %call2_4a41e3 = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64  %loadPC_4a41e3, %struct.Memory* %loadMem2_4a41e3)
  store %struct.Memory* %call2_4a41e3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %r9	 RIP: 4a41e8	 Bytes: 8
  %loadMem_4a41e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41e8 = call %struct.Memory* @routine_movq_0x6cb8f8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41e8)
  store %struct.Memory* %call_4a41e8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xd8(%r9)	 RIP: 4a41f0	 Bytes: 8
  %loadMem_4a41f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41f0 = call %struct.Memory* @routine_cmpl__0x0__0xd8__r9_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41f0)
  store %struct.Memory* %call_4a41f0, %struct.Memory** %MEMORY

  ; Code: je .L_4a4292	 RIP: 4a41f8	 Bytes: 6
  %loadMem_4a41f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41f8 = call %struct.Memory* @routine_je_.L_4a4292(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41f8, i8* %BRANCH_TAKEN, i64 154, i64 6, i64 6)
  store %struct.Memory* %call_4a41f8, %struct.Memory** %MEMORY

  %loadBr_4a41f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a41f8 = icmp eq i8 %loadBr_4a41f8, 1
  br i1 %cmpBr_4a41f8, label %block_.L_4a4292, label %block_4a41fe

block_4a41fe:
  ; Code: cmpl $0x0, -0x258(%rbp)	 RIP: 4a41fe	 Bytes: 7
  %loadMem_4a41fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a41fe = call %struct.Memory* @routine_cmpl__0x0__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a41fe)
  store %struct.Memory* %call_4a41fe, %struct.Memory** %MEMORY

  ; Code: je .L_4a422f	 RIP: 4a4205	 Bytes: 6
  %loadMem_4a4205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4205 = call %struct.Memory* @routine_je_.L_4a422f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4205, i8* %BRANCH_TAKEN, i64 42, i64 6, i64 6)
  store %struct.Memory* %call_4a4205, %struct.Memory** %MEMORY

  %loadBr_4a4205 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4205 = icmp eq i8 %loadBr_4a4205, 1
  br i1 %cmpBr_4a4205, label %block_.L_4a422f, label %block_4a420b

block_4a420b:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a420b	 Bytes: 8
  %loadMem_4a420b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a420b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a420b)
  store %struct.Memory* %call_4a420b, %struct.Memory** %MEMORY

  ; Code: movq 0x11868(%rax), %rax	 RIP: 4a4213	 Bytes: 7
  %loadMem_4a4213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4213 = call %struct.Memory* @routine_movq_0x11868__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4213)
  store %struct.Memory* %call_4a4213, %struct.Memory** %MEMORY

  ; Code: movslq -0x254(%rbp), %rcx	 RIP: 4a421a	 Bytes: 7
  %loadMem_4a421a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a421a = call %struct.Memory* @routine_movslq_MINUS0x254__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a421a)
  store %struct.Memory* %call_4a421a, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a4221	 Bytes: 3
  %loadMem_4a4221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4221 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4221)
  store %struct.Memory* %call_4a4221, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x498(%rbp)	 RIP: 4a4224	 Bytes: 6
  %loadMem_4a4224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4224 = call %struct.Memory* @routine_movl__edx__MINUS0x498__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4224)
  store %struct.Memory* %call_4a4224, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a423c	 RIP: 4a422a	 Bytes: 5
  %loadMem_4a422a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a422a = call %struct.Memory* @routine_jmpq_.L_4a423c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a422a, i64 18, i64 5)
  store %struct.Memory* %call_4a422a, %struct.Memory** %MEMORY

  br label %block_.L_4a423c

  ; Code: .L_4a422f:	 RIP: 4a422f	 Bytes: 0
block_.L_4a422f:

  ; Code: xorl %eax, %eax	 RIP: 4a422f	 Bytes: 2
  %loadMem_4a422f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a422f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a422f)
  store %struct.Memory* %call_4a422f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x498(%rbp)	 RIP: 4a4231	 Bytes: 6
  %loadMem_4a4231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4231 = call %struct.Memory* @routine_movl__eax__MINUS0x498__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4231)
  store %struct.Memory* %call_4a4231, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a423c	 RIP: 4a4237	 Bytes: 5
  %loadMem_4a4237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4237 = call %struct.Memory* @routine_jmpq_.L_4a423c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4237, i64 5, i64 5)
  store %struct.Memory* %call_4a4237, %struct.Memory** %MEMORY

  br label %block_.L_4a423c

  ; Code: .L_4a423c:	 RIP: 4a423c	 Bytes: 0
block_.L_4a423c:

  ; Code: movl -0x498(%rbp), %eax	 RIP: 4a423c	 Bytes: 6
  %loadMem_4a423c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a423c = call %struct.Memory* @routine_movl_MINUS0x498__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a423c)
  store %struct.Memory* %call_4a423c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x258(%rbp)	 RIP: 4a4242	 Bytes: 6
  %loadMem_4a4242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4242 = call %struct.Memory* @routine_movl__eax__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4242)
  store %struct.Memory* %call_4a4242, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x240(%rbp)	 RIP: 4a4248	 Bytes: 7
  %loadMem_4a4248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4248 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4248)
  store %struct.Memory* %call_4a4248, %struct.Memory** %MEMORY

  ; Code: je .L_4a4279	 RIP: 4a424f	 Bytes: 6
  %loadMem_4a424f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a424f = call %struct.Memory* @routine_je_.L_4a4279(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a424f, i8* %BRANCH_TAKEN, i64 42, i64 6, i64 6)
  store %struct.Memory* %call_4a424f, %struct.Memory** %MEMORY

  %loadBr_4a424f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a424f = icmp eq i8 %loadBr_4a424f, 1
  br i1 %cmpBr_4a424f, label %block_.L_4a4279, label %block_4a4255

block_4a4255:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a4255	 Bytes: 8
  %loadMem_4a4255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4255 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4255)
  store %struct.Memory* %call_4a4255, %struct.Memory** %MEMORY

  ; Code: movq 0x11868(%rax), %rax	 RIP: 4a425d	 Bytes: 7
  %loadMem_4a425d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a425d = call %struct.Memory* @routine_movq_0x11868__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a425d)
  store %struct.Memory* %call_4a425d, %struct.Memory** %MEMORY

  ; Code: movslq -0x23c(%rbp), %rcx	 RIP: 4a4264	 Bytes: 7
  %loadMem_4a4264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4264 = call %struct.Memory* @routine_movslq_MINUS0x23c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4264)
  store %struct.Memory* %call_4a4264, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a426b	 Bytes: 3
  %loadMem_4a426b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a426b = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a426b)
  store %struct.Memory* %call_4a426b, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x49c(%rbp)	 RIP: 4a426e	 Bytes: 6
  %loadMem_4a426e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a426e = call %struct.Memory* @routine_movl__edx__MINUS0x49c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a426e)
  store %struct.Memory* %call_4a426e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4286	 RIP: 4a4274	 Bytes: 5
  %loadMem_4a4274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4274 = call %struct.Memory* @routine_jmpq_.L_4a4286(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4274, i64 18, i64 5)
  store %struct.Memory* %call_4a4274, %struct.Memory** %MEMORY

  br label %block_.L_4a4286

  ; Code: .L_4a4279:	 RIP: 4a4279	 Bytes: 0
block_.L_4a4279:

  ; Code: xorl %eax, %eax	 RIP: 4a4279	 Bytes: 2
  %loadMem_4a4279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4279 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4279)
  store %struct.Memory* %call_4a4279, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x49c(%rbp)	 RIP: 4a427b	 Bytes: 6
  %loadMem_4a427b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a427b = call %struct.Memory* @routine_movl__eax__MINUS0x49c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a427b)
  store %struct.Memory* %call_4a427b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4286	 RIP: 4a4281	 Bytes: 5
  %loadMem_4a4281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4281 = call %struct.Memory* @routine_jmpq_.L_4a4286(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4281, i64 5, i64 5)
  store %struct.Memory* %call_4a4281, %struct.Memory** %MEMORY

  br label %block_.L_4a4286

  ; Code: .L_4a4286:	 RIP: 4a4286	 Bytes: 0
block_.L_4a4286:

  ; Code: movl -0x49c(%rbp), %eax	 RIP: 4a4286	 Bytes: 6
  %loadMem_4a4286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4286 = call %struct.Memory* @routine_movl_MINUS0x49c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4286)
  store %struct.Memory* %call_4a4286, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x240(%rbp)	 RIP: 4a428c	 Bytes: 6
  %loadMem_4a428c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a428c = call %struct.Memory* @routine_movl__eax__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a428c)
  store %struct.Memory* %call_4a428c, %struct.Memory** %MEMORY

  ; Code: .L_4a4292:	 RIP: 4a4292	 Bytes: 0
  br label %block_.L_4a4292
block_.L_4a4292:

  ; Code: movl $0x2, %eax	 RIP: 4a4292	 Bytes: 5
  %loadMem_4a4292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4292 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4292)
  store %struct.Memory* %call_4a4292, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %ecx	 RIP: 4a4297	 Bytes: 3
  %loadMem_4a4297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4297 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4297)
  store %struct.Memory* %call_4a4297, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4a0(%rbp)	 RIP: 4a429a	 Bytes: 6
  %loadMem_4a429a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a429a = call %struct.Memory* @routine_movl__eax__MINUS0x4a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a429a)
  store %struct.Memory* %call_4a429a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4a42a0	 Bytes: 2
  %loadMem_4a42a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42a0 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42a0)
  store %struct.Memory* %call_4a42a0, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a42a2	 Bytes: 1
  %loadMem_4a42a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42a2 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42a2)
  store %struct.Memory* %call_4a42a2, %struct.Memory** %MEMORY

  ; Code: movl -0x4a0(%rbp), %ecx	 RIP: 4a42a3	 Bytes: 6
  %loadMem_4a42a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42a3 = call %struct.Memory* @routine_movl_MINUS0x4a0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42a3)
  store %struct.Memory* %call_4a42a3, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a42a9	 Bytes: 2
  %loadMem_4a42a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42a9 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42a9)
  store %struct.Memory* %call_4a42a9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4a42ab	 Bytes: 3
  %loadMem_4a42ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42ab = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42ab)
  store %struct.Memory* %call_4a42ab, %struct.Memory** %MEMORY

  ; Code: je .L_4a430e	 RIP: 4a42ae	 Bytes: 6
  %loadMem_4a42ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42ae = call %struct.Memory* @routine_je_.L_4a430e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42ae, i8* %BRANCH_TAKEN, i64 96, i64 6, i64 6)
  store %struct.Memory* %call_4a42ae, %struct.Memory** %MEMORY

  %loadBr_4a42ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a42ae = icmp eq i8 %loadBr_4a42ae, 1
  br i1 %cmpBr_4a42ae, label %block_.L_4a430e, label %block_4a42b4

block_4a42b4:
  ; Code: cmpl $0x0, -0x258(%rbp)	 RIP: 4a42b4	 Bytes: 7
  %loadMem_4a42b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42b4 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42b4)
  store %struct.Memory* %call_4a42b4, %struct.Memory** %MEMORY

  ; Code: je .L_4a42ed	 RIP: 4a42bb	 Bytes: 6
  %loadMem_4a42bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42bb = call %struct.Memory* @routine_je_.L_4a42ed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42bb, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_4a42bb, %struct.Memory** %MEMORY

  %loadBr_4a42bb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a42bb = icmp eq i8 %loadBr_4a42bb, 1
  br i1 %cmpBr_4a42bb, label %block_.L_4a42ed, label %block_4a42c1

block_4a42c1:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a42c1	 Bytes: 8
  %loadMem_4a42c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42c1 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42c1)
  store %struct.Memory* %call_4a42c1, %struct.Memory** %MEMORY

  ; Code: movq 0x70(%rax), %rax	 RIP: 4a42c9	 Bytes: 4
  %loadMem_4a42c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42c9 = call %struct.Memory* @routine_movq_0x70__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42c9)
  store %struct.Memory* %call_4a42c9, %struct.Memory** %MEMORY

  ; Code: movslq -0x248(%rbp), %rcx	 RIP: 4a42cd	 Bytes: 7
  %loadMem_4a42cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42cd = call %struct.Memory* @routine_movslq_MINUS0x248__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42cd)
  store %struct.Memory* %call_4a42cd, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a42d4	 Bytes: 4
  %loadMem_4a42d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42d4 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42d4)
  store %struct.Memory* %call_4a42d4, %struct.Memory** %MEMORY

  ; Code: movslq -0x244(%rbp), %rcx	 RIP: 4a42d8	 Bytes: 7
  %loadMem_4a42d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42d8 = call %struct.Memory* @routine_movslq_MINUS0x244__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42d8)
  store %struct.Memory* %call_4a42d8, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a42df	 Bytes: 3
  %loadMem_4a42df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42df = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42df)
  store %struct.Memory* %call_4a42df, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x4a4(%rbp)	 RIP: 4a42e2	 Bytes: 6
  %loadMem_4a42e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42e2 = call %struct.Memory* @routine_movl__edx__MINUS0x4a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42e2)
  store %struct.Memory* %call_4a42e2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a42fd	 RIP: 4a42e8	 Bytes: 5
  %loadMem_4a42e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42e8 = call %struct.Memory* @routine_jmpq_.L_4a42fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42e8, i64 21, i64 5)
  store %struct.Memory* %call_4a42e8, %struct.Memory** %MEMORY

  br label %block_.L_4a42fd

  ; Code: .L_4a42ed:	 RIP: 4a42ed	 Bytes: 0
block_.L_4a42ed:

  ; Code: movl $0xffffffff, %eax	 RIP: 4a42ed	 Bytes: 5
  %loadMem_4a42ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42ed = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42ed)
  store %struct.Memory* %call_4a42ed, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4a4(%rbp)	 RIP: 4a42f2	 Bytes: 6
  %loadMem_4a42f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42f2 = call %struct.Memory* @routine_movl__eax__MINUS0x4a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42f2)
  store %struct.Memory* %call_4a42f2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a42fd	 RIP: 4a42f8	 Bytes: 5
  %loadMem_4a42f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42f8 = call %struct.Memory* @routine_jmpq_.L_4a42fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42f8, i64 5, i64 5)
  store %struct.Memory* %call_4a42f8, %struct.Memory** %MEMORY

  br label %block_.L_4a42fd

  ; Code: .L_4a42fd:	 RIP: 4a42fd	 Bytes: 0
block_.L_4a42fd:

  ; Code: movl -0x4a4(%rbp), %eax	 RIP: 4a42fd	 Bytes: 6
  %loadMem_4a42fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a42fd = call %struct.Memory* @routine_movl_MINUS0x4a4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a42fd)
  store %struct.Memory* %call_4a42fd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x220(%rbp)	 RIP: 4a4303	 Bytes: 6
  %loadMem_4a4303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4303 = call %struct.Memory* @routine_movl__eax__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4303)
  store %struct.Memory* %call_4a4303, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4363	 RIP: 4a4309	 Bytes: 5
  %loadMem_4a4309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4309 = call %struct.Memory* @routine_jmpq_.L_4a4363(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4309, i64 90, i64 5)
  store %struct.Memory* %call_4a4309, %struct.Memory** %MEMORY

  br label %block_.L_4a4363

  ; Code: .L_4a430e:	 RIP: 4a430e	 Bytes: 0
block_.L_4a430e:

  ; Code: cmpl $0x0, -0x258(%rbp)	 RIP: 4a430e	 Bytes: 7
  %loadMem_4a430e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a430e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a430e)
  store %struct.Memory* %call_4a430e, %struct.Memory** %MEMORY

  ; Code: je .L_4a4347	 RIP: 4a4315	 Bytes: 6
  %loadMem_4a4315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4315 = call %struct.Memory* @routine_je_.L_4a4347(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4315, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_4a4315, %struct.Memory** %MEMORY

  %loadBr_4a4315 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4315 = icmp eq i8 %loadBr_4a4315, 1
  br i1 %cmpBr_4a4315, label %block_.L_4a4347, label %block_4a431b

block_4a431b:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a431b	 Bytes: 8
  %loadMem_4a431b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a431b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a431b)
  store %struct.Memory* %call_4a431b, %struct.Memory** %MEMORY

  ; Code: movq 0x68(%rax), %rax	 RIP: 4a4323	 Bytes: 4
  %loadMem_4a4323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4323 = call %struct.Memory* @routine_movq_0x68__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4323)
  store %struct.Memory* %call_4a4323, %struct.Memory** %MEMORY

  ; Code: movslq -0x248(%rbp), %rcx	 RIP: 4a4327	 Bytes: 7
  %loadMem_4a4327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4327 = call %struct.Memory* @routine_movslq_MINUS0x248__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4327)
  store %struct.Memory* %call_4a4327, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a432e	 Bytes: 4
  %loadMem_4a432e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a432e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a432e)
  store %struct.Memory* %call_4a432e, %struct.Memory** %MEMORY

  ; Code: movslq -0x244(%rbp), %rcx	 RIP: 4a4332	 Bytes: 7
  %loadMem_4a4332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4332 = call %struct.Memory* @routine_movslq_MINUS0x244__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4332)
  store %struct.Memory* %call_4a4332, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a4339	 Bytes: 3
  %loadMem_4a4339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4339 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4339)
  store %struct.Memory* %call_4a4339, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x4a8(%rbp)	 RIP: 4a433c	 Bytes: 6
  %loadMem_4a433c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a433c = call %struct.Memory* @routine_movl__edx__MINUS0x4a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a433c)
  store %struct.Memory* %call_4a433c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4357	 RIP: 4a4342	 Bytes: 5
  %loadMem_4a4342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4342 = call %struct.Memory* @routine_jmpq_.L_4a4357(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4342, i64 21, i64 5)
  store %struct.Memory* %call_4a4342, %struct.Memory** %MEMORY

  br label %block_.L_4a4357

  ; Code: .L_4a4347:	 RIP: 4a4347	 Bytes: 0
block_.L_4a4347:

  ; Code: movl $0xffffffff, %eax	 RIP: 4a4347	 Bytes: 5
  %loadMem_4a4347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4347 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4347)
  store %struct.Memory* %call_4a4347, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4a8(%rbp)	 RIP: 4a434c	 Bytes: 6
  %loadMem_4a434c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a434c = call %struct.Memory* @routine_movl__eax__MINUS0x4a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a434c)
  store %struct.Memory* %call_4a434c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4357	 RIP: 4a4352	 Bytes: 5
  %loadMem_4a4352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4352 = call %struct.Memory* @routine_jmpq_.L_4a4357(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4352, i64 5, i64 5)
  store %struct.Memory* %call_4a4352, %struct.Memory** %MEMORY

  br label %block_.L_4a4357

  ; Code: .L_4a4357:	 RIP: 4a4357	 Bytes: 0
block_.L_4a4357:

  ; Code: movl -0x4a8(%rbp), %eax	 RIP: 4a4357	 Bytes: 6
  %loadMem_4a4357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4357 = call %struct.Memory* @routine_movl_MINUS0x4a8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4357)
  store %struct.Memory* %call_4a4357, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x220(%rbp)	 RIP: 4a435d	 Bytes: 6
  %loadMem_4a435d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a435d = call %struct.Memory* @routine_movl__eax__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a435d)
  store %struct.Memory* %call_4a435d, %struct.Memory** %MEMORY

  ; Code: .L_4a4363:	 RIP: 4a4363	 Bytes: 0
  br label %block_.L_4a4363
block_.L_4a4363:

  ; Code: movl $0x2, %eax	 RIP: 4a4363	 Bytes: 5
  %loadMem_4a4363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4363 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4363)
  store %struct.Memory* %call_4a4363, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %ecx	 RIP: 4a4368	 Bytes: 3
  %loadMem_4a4368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4368 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4368)
  store %struct.Memory* %call_4a4368, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4ac(%rbp)	 RIP: 4a436b	 Bytes: 6
  %loadMem_4a436b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a436b = call %struct.Memory* @routine_movl__eax__MINUS0x4ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a436b)
  store %struct.Memory* %call_4a436b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4a4371	 Bytes: 2
  %loadMem_4a4371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4371 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4371)
  store %struct.Memory* %call_4a4371, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a4373	 Bytes: 1
  %loadMem_4a4373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4373 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4373)
  store %struct.Memory* %call_4a4373, %struct.Memory** %MEMORY

  ; Code: movl -0x4ac(%rbp), %ecx	 RIP: 4a4374	 Bytes: 6
  %loadMem_4a4374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4374 = call %struct.Memory* @routine_movl_MINUS0x4ac__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4374)
  store %struct.Memory* %call_4a4374, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a437a	 Bytes: 2
  %loadMem_4a437a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a437a = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a437a)
  store %struct.Memory* %call_4a437a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 4a437c	 Bytes: 3
  %loadMem_4a437c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a437c = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a437c)
  store %struct.Memory* %call_4a437c, %struct.Memory** %MEMORY

  ; Code: je .L_4a43df	 RIP: 4a437f	 Bytes: 6
  %loadMem_4a437f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a437f = call %struct.Memory* @routine_je_.L_4a43df(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a437f, i8* %BRANCH_TAKEN, i64 96, i64 6, i64 6)
  store %struct.Memory* %call_4a437f, %struct.Memory** %MEMORY

  %loadBr_4a437f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a437f = icmp eq i8 %loadBr_4a437f, 1
  br i1 %cmpBr_4a437f, label %block_.L_4a43df, label %block_4a4385

block_4a4385:
  ; Code: cmpl $0x0, -0x240(%rbp)	 RIP: 4a4385	 Bytes: 7
  %loadMem_4a4385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4385 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4385)
  store %struct.Memory* %call_4a4385, %struct.Memory** %MEMORY

  ; Code: je .L_4a43be	 RIP: 4a438c	 Bytes: 6
  %loadMem_4a438c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a438c = call %struct.Memory* @routine_je_.L_4a43be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a438c, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_4a438c, %struct.Memory** %MEMORY

  %loadBr_4a438c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a438c = icmp eq i8 %loadBr_4a438c, 1
  br i1 %cmpBr_4a438c, label %block_.L_4a43be, label %block_4a4392

block_4a4392:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a4392	 Bytes: 8
  %loadMem_4a4392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4392 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4392)
  store %struct.Memory* %call_4a4392, %struct.Memory** %MEMORY

  ; Code: movq 0x70(%rax), %rax	 RIP: 4a439a	 Bytes: 4
  %loadMem_4a439a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a439a = call %struct.Memory* @routine_movq_0x70__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a439a)
  store %struct.Memory* %call_4a439a, %struct.Memory** %MEMORY

  ; Code: movslq -0x230(%rbp), %rcx	 RIP: 4a439e	 Bytes: 7
  %loadMem_4a439e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a439e = call %struct.Memory* @routine_movslq_MINUS0x230__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a439e)
  store %struct.Memory* %call_4a439e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a43a5	 Bytes: 4
  %loadMem_4a43a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43a5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43a5)
  store %struct.Memory* %call_4a43a5, %struct.Memory** %MEMORY

  ; Code: movslq -0x22c(%rbp), %rcx	 RIP: 4a43a9	 Bytes: 7
  %loadMem_4a43a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43a9 = call %struct.Memory* @routine_movslq_MINUS0x22c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43a9)
  store %struct.Memory* %call_4a43a9, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a43b0	 Bytes: 3
  %loadMem_4a43b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43b0 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43b0)
  store %struct.Memory* %call_4a43b0, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x4b0(%rbp)	 RIP: 4a43b3	 Bytes: 6
  %loadMem_4a43b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43b3 = call %struct.Memory* @routine_movl__edx__MINUS0x4b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43b3)
  store %struct.Memory* %call_4a43b3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a43ce	 RIP: 4a43b9	 Bytes: 5
  %loadMem_4a43b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43b9 = call %struct.Memory* @routine_jmpq_.L_4a43ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43b9, i64 21, i64 5)
  store %struct.Memory* %call_4a43b9, %struct.Memory** %MEMORY

  br label %block_.L_4a43ce

  ; Code: .L_4a43be:	 RIP: 4a43be	 Bytes: 0
block_.L_4a43be:

  ; Code: movl $0xffffffff, %eax	 RIP: 4a43be	 Bytes: 5
  %loadMem_4a43be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43be = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43be)
  store %struct.Memory* %call_4a43be, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4b0(%rbp)	 RIP: 4a43c3	 Bytes: 6
  %loadMem_4a43c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43c3 = call %struct.Memory* @routine_movl__eax__MINUS0x4b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43c3)
  store %struct.Memory* %call_4a43c3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a43ce	 RIP: 4a43c9	 Bytes: 5
  %loadMem_4a43c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43c9 = call %struct.Memory* @routine_jmpq_.L_4a43ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43c9, i64 5, i64 5)
  store %struct.Memory* %call_4a43c9, %struct.Memory** %MEMORY

  br label %block_.L_4a43ce

  ; Code: .L_4a43ce:	 RIP: 4a43ce	 Bytes: 0
block_.L_4a43ce:

  ; Code: movl -0x4b0(%rbp), %eax	 RIP: 4a43ce	 Bytes: 6
  %loadMem_4a43ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43ce = call %struct.Memory* @routine_movl_MINUS0x4b0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43ce)
  store %struct.Memory* %call_4a43ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x224(%rbp)	 RIP: 4a43d4	 Bytes: 6
  %loadMem_4a43d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43d4 = call %struct.Memory* @routine_movl__eax__MINUS0x224__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43d4)
  store %struct.Memory* %call_4a43d4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4434	 RIP: 4a43da	 Bytes: 5
  %loadMem_4a43da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43da = call %struct.Memory* @routine_jmpq_.L_4a4434(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43da, i64 90, i64 5)
  store %struct.Memory* %call_4a43da, %struct.Memory** %MEMORY

  br label %block_.L_4a4434

  ; Code: .L_4a43df:	 RIP: 4a43df	 Bytes: 0
block_.L_4a43df:

  ; Code: cmpl $0x0, -0x240(%rbp)	 RIP: 4a43df	 Bytes: 7
  %loadMem_4a43df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43df = call %struct.Memory* @routine_cmpl__0x0__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43df)
  store %struct.Memory* %call_4a43df, %struct.Memory** %MEMORY

  ; Code: je .L_4a4418	 RIP: 4a43e6	 Bytes: 6
  %loadMem_4a43e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43e6 = call %struct.Memory* @routine_je_.L_4a4418(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43e6, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_4a43e6, %struct.Memory** %MEMORY

  %loadBr_4a43e6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a43e6 = icmp eq i8 %loadBr_4a43e6, 1
  br i1 %cmpBr_4a43e6, label %block_.L_4a4418, label %block_4a43ec

block_4a43ec:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a43ec	 Bytes: 8
  %loadMem_4a43ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43ec = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43ec)
  store %struct.Memory* %call_4a43ec, %struct.Memory** %MEMORY

  ; Code: movq 0x68(%rax), %rax	 RIP: 4a43f4	 Bytes: 4
  %loadMem_4a43f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43f4 = call %struct.Memory* @routine_movq_0x68__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43f4)
  store %struct.Memory* %call_4a43f4, %struct.Memory** %MEMORY

  ; Code: movslq -0x230(%rbp), %rcx	 RIP: 4a43f8	 Bytes: 7
  %loadMem_4a43f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43f8 = call %struct.Memory* @routine_movslq_MINUS0x230__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43f8)
  store %struct.Memory* %call_4a43f8, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a43ff	 Bytes: 4
  %loadMem_4a43ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a43ff = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a43ff)
  store %struct.Memory* %call_4a43ff, %struct.Memory** %MEMORY

  ; Code: movslq -0x22c(%rbp), %rcx	 RIP: 4a4403	 Bytes: 7
  %loadMem_4a4403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4403 = call %struct.Memory* @routine_movslq_MINUS0x22c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4403)
  store %struct.Memory* %call_4a4403, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a440a	 Bytes: 3
  %loadMem_4a440a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a440a = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a440a)
  store %struct.Memory* %call_4a440a, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x4b4(%rbp)	 RIP: 4a440d	 Bytes: 6
  %loadMem_4a440d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a440d = call %struct.Memory* @routine_movl__edx__MINUS0x4b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a440d)
  store %struct.Memory* %call_4a440d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4428	 RIP: 4a4413	 Bytes: 5
  %loadMem_4a4413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4413 = call %struct.Memory* @routine_jmpq_.L_4a4428(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4413, i64 21, i64 5)
  store %struct.Memory* %call_4a4413, %struct.Memory** %MEMORY

  br label %block_.L_4a4428

  ; Code: .L_4a4418:	 RIP: 4a4418	 Bytes: 0
block_.L_4a4418:

  ; Code: movl $0xffffffff, %eax	 RIP: 4a4418	 Bytes: 5
  %loadMem_4a4418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4418 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4418)
  store %struct.Memory* %call_4a4418, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4b4(%rbp)	 RIP: 4a441d	 Bytes: 6
  %loadMem_4a441d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a441d = call %struct.Memory* @routine_movl__eax__MINUS0x4b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a441d)
  store %struct.Memory* %call_4a441d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4428	 RIP: 4a4423	 Bytes: 5
  %loadMem_4a4423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4423 = call %struct.Memory* @routine_jmpq_.L_4a4428(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4423, i64 5, i64 5)
  store %struct.Memory* %call_4a4423, %struct.Memory** %MEMORY

  br label %block_.L_4a4428

  ; Code: .L_4a4428:	 RIP: 4a4428	 Bytes: 0
block_.L_4a4428:

  ; Code: movl -0x4b4(%rbp), %eax	 RIP: 4a4428	 Bytes: 6
  %loadMem_4a4428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4428 = call %struct.Memory* @routine_movl_MINUS0x4b4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4428)
  store %struct.Memory* %call_4a4428, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x224(%rbp)	 RIP: 4a442e	 Bytes: 6
  %loadMem_4a442e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a442e = call %struct.Memory* @routine_movl__eax__MINUS0x224__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a442e)
  store %struct.Memory* %call_4a442e, %struct.Memory** %MEMORY

  ; Code: .L_4a4434:	 RIP: 4a4434	 Bytes: 0
  br label %block_.L_4a4434
block_.L_4a4434:

  ; Code: cmpl $0x0, -0x220(%rbp)	 RIP: 4a4434	 Bytes: 7
  %loadMem_4a4434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4434 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4434)
  store %struct.Memory* %call_4a4434, %struct.Memory** %MEMORY

  ; Code: jl .L_4a444e	 RIP: 4a443b	 Bytes: 6
  %loadMem_4a443b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a443b = call %struct.Memory* @routine_jl_.L_4a444e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a443b, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a443b, %struct.Memory** %MEMORY

  %loadBr_4a443b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a443b = icmp eq i8 %loadBr_4a443b, 1
  br i1 %cmpBr_4a443b, label %block_.L_4a444e, label %block_4a4441

block_4a4441:
  ; Code: cmpl $0x0, -0x224(%rbp)	 RIP: 4a4441	 Bytes: 7
  %loadMem_4a4441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4441 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x224__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4441)
  store %struct.Memory* %call_4a4441, %struct.Memory** %MEMORY

  ; Code: jge .L_4a445e	 RIP: 4a4448	 Bytes: 6
  %loadMem_4a4448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4448 = call %struct.Memory* @routine_jge_.L_4a445e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4448, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_4a4448, %struct.Memory** %MEMORY

  %loadBr_4a4448 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4448 = icmp eq i8 %loadBr_4a4448, 1
  br i1 %cmpBr_4a4448, label %block_.L_4a445e, label %block_.L_4a444e

  ; Code: .L_4a444e:	 RIP: 4a444e	 Bytes: 0
block_.L_4a444e:

  ; Code: movl $0x2, %eax	 RIP: 4a444e	 Bytes: 5
  %loadMem_4a444e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a444e = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a444e)
  store %struct.Memory* %call_4a444e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4b8(%rbp)	 RIP: 4a4453	 Bytes: 6
  %loadMem_4a4453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4453 = call %struct.Memory* @routine_movl__eax__MINUS0x4b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4453)
  store %struct.Memory* %call_4a4453, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4499	 RIP: 4a4459	 Bytes: 5
  %loadMem_4a4459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4459 = call %struct.Memory* @routine_jmpq_.L_4a4499(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4459, i64 64, i64 5)
  store %struct.Memory* %call_4a4459, %struct.Memory** %MEMORY

  br label %block_.L_4a4499

  ; Code: .L_4a445e:	 RIP: 4a445e	 Bytes: 0
block_.L_4a445e:

  ; Code: movl -0x220(%rbp), %eax	 RIP: 4a445e	 Bytes: 6
  %loadMem_4a445e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a445e = call %struct.Memory* @routine_movl_MINUS0x220__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a445e)
  store %struct.Memory* %call_4a445e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x224(%rbp), %eax	 RIP: 4a4464	 Bytes: 6
  %loadMem_4a4464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4464 = call %struct.Memory* @routine_cmpl_MINUS0x224__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4464)
  store %struct.Memory* %call_4a4464, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4481	 RIP: 4a446a	 Bytes: 6
  %loadMem_4a446a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a446a = call %struct.Memory* @routine_jge_.L_4a4481(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a446a, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_4a446a, %struct.Memory** %MEMORY

  %loadBr_4a446a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a446a = icmp eq i8 %loadBr_4a446a, 1
  br i1 %cmpBr_4a446a, label %block_.L_4a4481, label %block_4a4470

block_4a4470:
  ; Code: movl -0x220(%rbp), %eax	 RIP: 4a4470	 Bytes: 6
  %loadMem_4a4470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4470 = call %struct.Memory* @routine_movl_MINUS0x220__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4470)
  store %struct.Memory* %call_4a4470, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4bc(%rbp)	 RIP: 4a4476	 Bytes: 6
  %loadMem_4a4476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4476 = call %struct.Memory* @routine_movl__eax__MINUS0x4bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4476)
  store %struct.Memory* %call_4a4476, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a448d	 RIP: 4a447c	 Bytes: 5
  %loadMem_4a447c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a447c = call %struct.Memory* @routine_jmpq_.L_4a448d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a447c, i64 17, i64 5)
  store %struct.Memory* %call_4a447c, %struct.Memory** %MEMORY

  br label %block_.L_4a448d

  ; Code: .L_4a4481:	 RIP: 4a4481	 Bytes: 0
block_.L_4a4481:

  ; Code: movl -0x224(%rbp), %eax	 RIP: 4a4481	 Bytes: 6
  %loadMem_4a4481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4481 = call %struct.Memory* @routine_movl_MINUS0x224__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4481)
  store %struct.Memory* %call_4a4481, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4bc(%rbp)	 RIP: 4a4487	 Bytes: 6
  %loadMem_4a4487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4487 = call %struct.Memory* @routine_movl__eax__MINUS0x4bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4487)
  store %struct.Memory* %call_4a4487, %struct.Memory** %MEMORY

  ; Code: .L_4a448d:	 RIP: 4a448d	 Bytes: 0
  br label %block_.L_4a448d
block_.L_4a448d:

  ; Code: movl -0x4bc(%rbp), %eax	 RIP: 4a448d	 Bytes: 6
  %loadMem_4a448d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a448d = call %struct.Memory* @routine_movl_MINUS0x4bc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a448d)
  store %struct.Memory* %call_4a448d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4b8(%rbp)	 RIP: 4a4493	 Bytes: 6
  %loadMem_4a4493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4493 = call %struct.Memory* @routine_movl__eax__MINUS0x4b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4493)
  store %struct.Memory* %call_4a4493, %struct.Memory** %MEMORY

  ; Code: .L_4a4499:	 RIP: 4a4499	 Bytes: 0
  br label %block_.L_4a4499
block_.L_4a4499:

  ; Code: movl -0x4b8(%rbp), %eax	 RIP: 4a4499	 Bytes: 6
  %loadMem_4a4499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4499 = call %struct.Memory* @routine_movl_MINUS0x4b8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4499)
  store %struct.Memory* %call_4a4499, %struct.Memory** %MEMORY

  ; Code: leaq -0x214(%rbp), %rdx	 RIP: 4a449f	 Bytes: 7
  %loadMem_4a449f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a449f = call %struct.Memory* @routine_leaq_MINUS0x214__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a449f)
  store %struct.Memory* %call_4a449f, %struct.Memory** %MEMORY

  ; Code: leaq -0x218(%rbp), %rcx	 RIP: 4a44a6	 Bytes: 7
  %loadMem_4a44a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44a6 = call %struct.Memory* @routine_leaq_MINUS0x218__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44a6)
  store %struct.Memory* %call_4a44a6, %struct.Memory** %MEMORY

  ; Code: leaq -0x21c(%rbp), %r8	 RIP: 4a44ad	 Bytes: 7
  %loadMem_4a44ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44ad = call %struct.Memory* @routine_leaq_MINUS0x21c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44ad)
  store %struct.Memory* %call_4a44ad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x228(%rbp)	 RIP: 4a44b4	 Bytes: 6
  %loadMem_4a44b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44b4 = call %struct.Memory* @routine_movl__eax__MINUS0x228__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44b4)
  store %struct.Memory* %call_4a44b4, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 4a44ba	 Bytes: 4
  %loadMem_4a44ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44ba = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44ba)
  store %struct.Memory* %call_4a44ba, %struct.Memory** %MEMORY

  ; Code: movl $0x7fffffff, (%rsi)	 RIP: 4a44be	 Bytes: 6
  %loadMem_4a44be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44be = call %struct.Memory* @routine_movl__0x7fffffff____rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44be)
  store %struct.Memory* %call_4a44be, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %edi	 RIP: 4a44c4	 Bytes: 6
  %loadMem_4a44c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44c4 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44c4)
  store %struct.Memory* %call_4a44c4, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a44ca	 Bytes: 6
  %loadMem_4a44ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44ca = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44ca)
  store %struct.Memory* %call_4a44ca, %struct.Memory** %MEMORY

  ; Code: callq .intrapred_luma8x8	 RIP: 4a44d0	 Bytes: 5
  %loadMem1_4a44d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a44d0 = call %struct.Memory* @routine_callq_.intrapred_luma8x8(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a44d0, i64 12720, i64 5, i64 5)
  store %struct.Memory* %call1_4a44d0, %struct.Memory** %MEMORY

  %loadMem2_4a44d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a44d0 = load i64, i64* %3
  %call2_4a44d0 = call %struct.Memory* @sub_4a7680.intrapred_luma8x8(%struct.State* %0, i64  %loadPC_4a44d0, %struct.Memory* %loadMem2_4a44d0)
  store %struct.Memory* %call2_4a44d0, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 4a44d5	 Bytes: 7
  %loadMem_4a44d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44d5 = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44d5)
  store %struct.Memory* %call_4a44d5, %struct.Memory** %MEMORY

  ; Code: .L_4a44dc:	 RIP: 4a44dc	 Bytes: 0
  br label %block_.L_4a44dc
block_.L_4a44dc:

  ; Code: cmpl $0x9, -0x24(%rbp)	 RIP: 4a44dc	 Bytes: 4
  %loadMem_4a44dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44dc = call %struct.Memory* @routine_cmpl__0x9__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44dc)
  store %struct.Memory* %call_4a44dc, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5f1f	 RIP: 4a44e0	 Bytes: 6
  %loadMem_4a44e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44e0 = call %struct.Memory* @routine_jge_.L_4a5f1f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44e0, i8* %BRANCH_TAKEN, i64 6719, i64 6, i64 6)
  store %struct.Memory* %call_4a44e0, %struct.Memory** %MEMORY

  %loadBr_4a44e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a44e0 = icmp eq i8 %loadBr_4a44e0, 1
  br i1 %cmpBr_4a44e0, label %block_.L_4a5f1f, label %block_4a44e6

block_4a44e6:
  ; Code: cmpl $0x2, -0x24(%rbp)	 RIP: 4a44e6	 Bytes: 4
  %loadMem_4a44e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44e6 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44e6)
  store %struct.Memory* %call_4a44e6, %struct.Memory** %MEMORY

  ; Code: je .L_4a4549	 RIP: 4a44ea	 Bytes: 6
  %loadMem_4a44ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44ea = call %struct.Memory* @routine_je_.L_4a4549(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44ea, i8* %BRANCH_TAKEN, i64 95, i64 6, i64 6)
  store %struct.Memory* %call_4a44ea, %struct.Memory** %MEMORY

  %loadBr_4a44ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a44ea = icmp eq i8 %loadBr_4a44ea, 1
  br i1 %cmpBr_4a44ea, label %block_.L_4a4549, label %block_4a44f0

block_4a44f0:
  ; Code: cmpl $0x0, -0x24(%rbp)	 RIP: 4a44f0	 Bytes: 4
  %loadMem_4a44f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44f0 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44f0)
  store %struct.Memory* %call_4a44f0, %struct.Memory** %MEMORY

  ; Code: je .L_4a450e	 RIP: 4a44f4	 Bytes: 6
  %loadMem_4a44f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44f4 = call %struct.Memory* @routine_je_.L_4a450e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44f4, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_4a44f4, %struct.Memory** %MEMORY

  %loadBr_4a44f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a44f4 = icmp eq i8 %loadBr_4a44f4, 1
  br i1 %cmpBr_4a44f4, label %block_.L_4a450e, label %block_4a44fa

block_4a44fa:
  ; Code: cmpl $0x7, -0x24(%rbp)	 RIP: 4a44fa	 Bytes: 4
  %loadMem_4a44fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44fa = call %struct.Memory* @routine_cmpl__0x7__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44fa)
  store %struct.Memory* %call_4a44fa, %struct.Memory** %MEMORY

  ; Code: je .L_4a450e	 RIP: 4a44fe	 Bytes: 6
  %loadMem_4a44fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a44fe = call %struct.Memory* @routine_je_.L_4a450e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a44fe, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_4a44fe, %struct.Memory** %MEMORY

  %loadBr_4a44fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a44fe = icmp eq i8 %loadBr_4a44fe, 1
  br i1 %cmpBr_4a44fe, label %block_.L_4a450e, label %block_4a4504

block_4a4504:
  ; Code: cmpl $0x3, -0x24(%rbp)	 RIP: 4a4504	 Bytes: 4
  %loadMem_4a4504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4504 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4504)
  store %struct.Memory* %call_4a4504, %struct.Memory** %MEMORY

  ; Code: jne .L_4a451b	 RIP: 4a4508	 Bytes: 6
  %loadMem_4a4508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4508 = call %struct.Memory* @routine_jne_.L_4a451b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4508, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a4508, %struct.Memory** %MEMORY

  %loadBr_4a4508 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4508 = icmp eq i8 %loadBr_4a4508, 1
  br i1 %cmpBr_4a4508, label %block_.L_4a451b, label %block_.L_4a450e

  ; Code: .L_4a450e:	 RIP: 4a450e	 Bytes: 0
block_.L_4a450e:

  ; Code: cmpl $0x0, -0x218(%rbp)	 RIP: 4a450e	 Bytes: 7
  %loadMem_4a450e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a450e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a450e)
  store %struct.Memory* %call_4a450e, %struct.Memory** %MEMORY

  ; Code: jne .L_4a4549	 RIP: 4a4515	 Bytes: 6
  %loadMem_4a4515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4515 = call %struct.Memory* @routine_jne_.L_4a4549(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4515, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_4a4515, %struct.Memory** %MEMORY

  %loadBr_4a4515 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4515 = icmp eq i8 %loadBr_4a4515, 1
  br i1 %cmpBr_4a4515, label %block_.L_4a4549, label %block_.L_4a451b

  ; Code: .L_4a451b:	 RIP: 4a451b	 Bytes: 0
block_.L_4a451b:

  ; Code: cmpl $0x1, -0x24(%rbp)	 RIP: 4a451b	 Bytes: 4
  %loadMem_4a451b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a451b = call %struct.Memory* @routine_cmpl__0x1__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a451b)
  store %struct.Memory* %call_4a451b, %struct.Memory** %MEMORY

  ; Code: je .L_4a452f	 RIP: 4a451f	 Bytes: 6
  %loadMem_4a451f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a451f = call %struct.Memory* @routine_je_.L_4a452f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a451f, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_4a451f, %struct.Memory** %MEMORY

  %loadBr_4a451f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a451f = icmp eq i8 %loadBr_4a451f, 1
  br i1 %cmpBr_4a451f, label %block_.L_4a452f, label %block_4a4525

block_4a4525:
  ; Code: cmpl $0x8, -0x24(%rbp)	 RIP: 4a4525	 Bytes: 4
  %loadMem_4a4525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4525 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4525)
  store %struct.Memory* %call_4a4525, %struct.Memory** %MEMORY

  ; Code: jne .L_4a453c	 RIP: 4a4529	 Bytes: 6
  %loadMem_4a4529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4529 = call %struct.Memory* @routine_jne_.L_4a453c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4529, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a4529, %struct.Memory** %MEMORY

  %loadBr_4a4529 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4529 = icmp eq i8 %loadBr_4a4529, 1
  br i1 %cmpBr_4a4529, label %block_.L_4a453c, label %block_.L_4a452f

  ; Code: .L_4a452f:	 RIP: 4a452f	 Bytes: 0
block_.L_4a452f:

  ; Code: cmpl $0x0, -0x214(%rbp)	 RIP: 4a452f	 Bytes: 7
  %loadMem_4a452f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a452f = call %struct.Memory* @routine_cmpl__0x0__MINUS0x214__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a452f)
  store %struct.Memory* %call_4a452f, %struct.Memory** %MEMORY

  ; Code: jne .L_4a4549	 RIP: 4a4536	 Bytes: 6
  %loadMem_4a4536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4536 = call %struct.Memory* @routine_jne_.L_4a4549(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4536, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a4536, %struct.Memory** %MEMORY

  %loadBr_4a4536 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4536 = icmp eq i8 %loadBr_4a4536, 1
  br i1 %cmpBr_4a4536, label %block_.L_4a4549, label %block_.L_4a453c

  ; Code: .L_4a453c:	 RIP: 4a453c	 Bytes: 0
block_.L_4a453c:

  ; Code: cmpl $0x0, -0x21c(%rbp)	 RIP: 4a453c	 Bytes: 7
  %loadMem_4a453c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a453c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x21c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a453c)
  store %struct.Memory* %call_4a453c, %struct.Memory** %MEMORY

  ; Code: je .L_4a5f0c	 RIP: 4a4543	 Bytes: 6
  %loadMem_4a4543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4543 = call %struct.Memory* @routine_je_.L_4a5f0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4543, i8* %BRANCH_TAKEN, i64 6601, i64 6, i64 6)
  store %struct.Memory* %call_4a4543, %struct.Memory** %MEMORY

  %loadBr_4a4543 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4543 = icmp eq i8 %loadBr_4a4543, 1
  br i1 %cmpBr_4a4543, label %block_.L_4a5f0c, label %block_.L_4a4549

  ; Code: .L_4a4549:	 RIP: 4a4549	 Bytes: 0
block_.L_4a4549:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 4a4549	 Bytes: 8
  %loadMem_4a4549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4549 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4549)
  store %struct.Memory* %call_4a4549, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x9a0(%rax)	 RIP: 4a4551	 Bytes: 7
  %loadMem_4a4551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4551 = call %struct.Memory* @routine_cmpl__0x0__0x9a0__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4551)
  store %struct.Memory* %call_4a4551, %struct.Memory** %MEMORY

  ; Code: jne .L_4a4692	 RIP: 4a4558	 Bytes: 6
  %loadMem_4a4558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4558 = call %struct.Memory* @routine_jne_.L_4a4692(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4558, i8* %BRANCH_TAKEN, i64 314, i64 6, i64 6)
  store %struct.Memory* %call_4a4558, %struct.Memory** %MEMORY

  %loadBr_4a4558 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4558 = icmp eq i8 %loadBr_4a4558, 1
  br i1 %cmpBr_4a4558, label %block_.L_4a4692, label %block_4a455e

block_4a455e:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a455e	 Bytes: 7
  %loadMem_4a455e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a455e = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a455e)
  store %struct.Memory* %call_4a455e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x34(%rbp)	 RIP: 4a4565	 Bytes: 7
  %loadMem_4a4565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4565 = call %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4565)
  store %struct.Memory* %call_4a4565, %struct.Memory** %MEMORY

  ; Code: .L_4a456c:	 RIP: 4a456c	 Bytes: 0
  br label %block_.L_4a456c
block_.L_4a456c:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a456c	 Bytes: 4
  %loadMem_4a456c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a456c = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a456c)
  store %struct.Memory* %call_4a456c, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4611	 RIP: 4a4570	 Bytes: 6
  %loadMem_4a4570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4570 = call %struct.Memory* @routine_jge_.L_4a4611(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4570, i8* %BRANCH_TAKEN, i64 161, i64 6, i64 6)
  store %struct.Memory* %call_4a4570, %struct.Memory** %MEMORY

  %loadBr_4a4570 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4570 = icmp eq i8 %loadBr_4a4570, 1
  br i1 %cmpBr_4a4570, label %block_.L_4a4611, label %block_4a4576

block_4a4576:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4576	 Bytes: 7
  %loadMem_4a4576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4576 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4576)
  store %struct.Memory* %call_4a4576, %struct.Memory** %MEMORY

  ; Code: .L_4a457d:	 RIP: 4a457d	 Bytes: 0
  br label %block_.L_4a457d
block_.L_4a457d:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a457d	 Bytes: 4
  %loadMem_4a457d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a457d = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a457d)
  store %struct.Memory* %call_4a457d, %struct.Memory** %MEMORY

  ; Code: jge .L_4a45fe	 RIP: 4a4581	 Bytes: 6
  %loadMem_4a4581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4581 = call %struct.Memory* @routine_jge_.L_4a45fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4581, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_4a4581, %struct.Memory** %MEMORY

  %loadBr_4a4581 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4581 = icmp eq i8 %loadBr_4a4581, 1
  br i1 %cmpBr_4a4581, label %block_.L_4a45fe, label %block_4a4587

block_4a4587:
  ; Code: movq -0x210(%rbp), %rax	 RIP: 4a4587	 Bytes: 7
  %loadMem_4a4587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4587 = call %struct.Memory* @routine_movq_MINUS0x210__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4587)
  store %struct.Memory* %call_4a4587, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %ecx	 RIP: 4a458e	 Bytes: 6
  %loadMem_4a458e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a458e = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a458e)
  store %struct.Memory* %call_4a458e, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %ecx	 RIP: 4a4594	 Bytes: 3
  %loadMem_4a4594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4594 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4594)
  store %struct.Memory* %call_4a4594, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a4597	 Bytes: 3
  %loadMem_4a4597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4597 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4597)
  store %struct.Memory* %call_4a4597, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a459a	 Bytes: 4
  %loadMem_4a459a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a459a = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a459a)
  store %struct.Memory* %call_4a459a, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %ecx	 RIP: 4a459e	 Bytes: 6
  %loadMem_4a459e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a459e = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a459e)
  store %struct.Memory* %call_4a459e, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %ecx	 RIP: 4a45a4	 Bytes: 3
  %loadMem_4a45a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45a4 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45a4)
  store %struct.Memory* %call_4a45a4, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a45a7	 Bytes: 3
  %loadMem_4a45a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45a7 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45a7)
  store %struct.Memory* %call_4a45a7, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 4a45aa	 Bytes: 4
  %loadMem_4a45aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45aa = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45aa)
  store %struct.Memory* %call_4a45aa, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a45ae	 Bytes: 8
  %loadMem_4a45ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45ae = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45ae)
  store %struct.Memory* %call_4a45ae, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rax	 RIP: 4a45b6	 Bytes: 6
  %loadMem_4a45b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45b6 = call %struct.Memory* @routine_addq__0x1cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45b6)
  store %struct.Memory* %call_4a45b6, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdx	 RIP: 4a45bc	 Bytes: 4
  %loadMem_4a45bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45bc = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45bc)
  store %struct.Memory* %call_4a45bc, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdx	 RIP: 4a45c0	 Bytes: 4
  %loadMem_4a45c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45c0 = call %struct.Memory* @routine_shlq__0x7___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45c0)
  store %struct.Memory* %call_4a45c0, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4a45c4	 Bytes: 3
  %loadMem_4a45c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45c4 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45c4)
  store %struct.Memory* %call_4a45c4, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a45c7	 Bytes: 4
  %loadMem_4a45c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45c7 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45c7)
  store %struct.Memory* %call_4a45c7, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4a45cb	 Bytes: 4
  %loadMem_4a45cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45cb = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45cb)
  store %struct.Memory* %call_4a45cb, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4a45cf	 Bytes: 3
  %loadMem_4a45cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45cf = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45cf)
  store %struct.Memory* %call_4a45cf, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a45d2	 Bytes: 4
  %loadMem_4a45d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45d2 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45d2)
  store %struct.Memory* %call_4a45d2, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4a45d6	 Bytes: 4
  %loadMem_4a45d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45d6 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45d6)
  store %struct.Memory* %call_4a45d6, %struct.Memory** %MEMORY

  ; Code: subl %esi, %ecx	 RIP: 4a45da	 Bytes: 2
  %loadMem_4a45da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45da = call %struct.Memory* @routine_subl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45da)
  store %struct.Memory* %call_4a45da, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 4a45dc	 Bytes: 4
  %loadMem_4a45dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45dc = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45dc)
  store %struct.Memory* %call_4a45dc, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x150(%rbp,%rax,4)	 RIP: 4a45e0	 Bytes: 7
  %loadMem_4a45e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45e0 = call %struct.Memory* @routine_movl__ecx__MINUS0x150__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45e0)
  store %struct.Memory* %call_4a45e0, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a45e7	 Bytes: 3
  %loadMem_4a45e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45e7 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45e7)
  store %struct.Memory* %call_4a45e7, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a45ea	 Bytes: 3
  %loadMem_4a45ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45ea = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45ea)
  store %struct.Memory* %call_4a45ea, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a45ed	 Bytes: 3
  %loadMem_4a45ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45ed = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45ed)
  store %struct.Memory* %call_4a45ed, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %eax	 RIP: 4a45f0	 Bytes: 3
  %loadMem_4a45f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45f0 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45f0)
  store %struct.Memory* %call_4a45f0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a45f3	 Bytes: 3
  %loadMem_4a45f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45f3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45f3)
  store %struct.Memory* %call_4a45f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x34(%rbp)	 RIP: 4a45f6	 Bytes: 3
  %loadMem_4a45f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45f6 = call %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45f6)
  store %struct.Memory* %call_4a45f6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a457d	 RIP: 4a45f9	 Bytes: 5
  %loadMem_4a45f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45f9 = call %struct.Memory* @routine_jmpq_.L_4a457d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45f9, i64 -124, i64 5)
  store %struct.Memory* %call_4a45f9, %struct.Memory** %MEMORY

  br label %block_.L_4a457d

  ; Code: .L_4a45fe:	 RIP: 4a45fe	 Bytes: 0
block_.L_4a45fe:

  ; Code: jmpq .L_4a4603	 RIP: 4a45fe	 Bytes: 5
  %loadMem_4a45fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a45fe = call %struct.Memory* @routine_jmpq_.L_4a4603(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a45fe, i64 5, i64 5)
  store %struct.Memory* %call_4a45fe, %struct.Memory** %MEMORY

  br label %block_.L_4a4603

  ; Code: .L_4a4603:	 RIP: 4a4603	 Bytes: 0
block_.L_4a4603:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a4603	 Bytes: 3
  %loadMem_4a4603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4603 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4603)
  store %struct.Memory* %call_4a4603, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4606	 Bytes: 3
  %loadMem_4a4606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4606 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4606)
  store %struct.Memory* %call_4a4606, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a4609	 Bytes: 3
  %loadMem_4a4609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4609 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4609)
  store %struct.Memory* %call_4a4609, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a456c	 RIP: 4a460c	 Bytes: 5
  %loadMem_4a460c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a460c = call %struct.Memory* @routine_jmpq_.L_4a456c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a460c, i64 -160, i64 5)
  store %struct.Memory* %call_4a460c, %struct.Memory** %MEMORY

  br label %block_.L_4a456c

  ; Code: .L_4a4611:	 RIP: 4a4611	 Bytes: 0
block_.L_4a4611:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 4a4611	 Bytes: 3
  %loadMem_4a4611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4611 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4611)
  store %struct.Memory* %call_4a4611, %struct.Memory** %MEMORY

  ; Code: cmpl -0x228(%rbp), %eax	 RIP: 4a4614	 Bytes: 6
  %loadMem_4a4614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4614 = call %struct.Memory* @routine_cmpl_MINUS0x228__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4614)
  store %struct.Memory* %call_4a4614, %struct.Memory** %MEMORY

  ; Code: jne .L_4a462d	 RIP: 4a461a	 Bytes: 6
  %loadMem_4a461a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a461a = call %struct.Memory* @routine_jne_.L_4a462d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a461a, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a461a, %struct.Memory** %MEMORY

  %loadBr_4a461a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a461a = icmp eq i8 %loadBr_4a461a, 1
  br i1 %cmpBr_4a461a, label %block_.L_4a462d, label %block_4a4620

block_4a4620:
  ; Code: xorl %eax, %eax	 RIP: 4a4620	 Bytes: 2
  %loadMem_4a4620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4620 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4620)
  store %struct.Memory* %call_4a4620, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c0(%rbp)	 RIP: 4a4622	 Bytes: 6
  %loadMem_4a4622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4622 = call %struct.Memory* @routine_movl__eax__MINUS0x4c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4622)
  store %struct.Memory* %call_4a4622, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4649	 RIP: 4a4628	 Bytes: 5
  %loadMem_4a4628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4628 = call %struct.Memory* @routine_jmpq_.L_4a4649(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4628, i64 33, i64 5)
  store %struct.Memory* %call_4a4628, %struct.Memory** %MEMORY

  br label %block_.L_4a4649

  ; Code: .L_4a462d:	 RIP: 4a462d	 Bytes: 0
block_.L_4a462d:

  ; Code: movsd 0xd203(%rip), %xmm0	 RIP: 4a462d	 Bytes: 8
  %loadMem_4a462d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a462d = call %struct.Memory* @routine_movsd_0xd203__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a462d)
  store %struct.Memory* %call_4a462d, %struct.Memory** %MEMORY

  ; Code: mulsd -0x18(%rbp), %xmm0	 RIP: 4a4635	 Bytes: 5
  %loadMem_4a4635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4635 = call %struct.Memory* @routine_mulsd_MINUS0x18__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4635)
  store %struct.Memory* %call_4a4635, %struct.Memory** %MEMORY

  ; Code: callq .floor_plt	 RIP: 4a463a	 Bytes: 5
  %loadMem1_4a463a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a463a = call %struct.Memory* @routine_callq_.floor_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a463a, i64 -668810, i64 5, i64 5)
  store %struct.Memory* %call1_4a463a, %struct.Memory** %MEMORY

  %loadMem2_4a463a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a463a = load i64, i64* %3
  %call2_4a463a = call %struct.Memory* @ext_floor(%struct.State* %0, i64  %loadPC_4a463a, %struct.Memory* %loadMem2_4a463a)
  store %struct.Memory* %call2_4a463a, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %eax	 RIP: 4a463f	 Bytes: 4
  %loadMem_4a463f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a463f = call %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a463f)
  store %struct.Memory* %call_4a463f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c0(%rbp)	 RIP: 4a4643	 Bytes: 6
  %loadMem_4a4643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4643 = call %struct.Memory* @routine_movl__eax__MINUS0x4c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4643)
  store %struct.Memory* %call_4a4643, %struct.Memory** %MEMORY

  ; Code: .L_4a4649:	 RIP: 4a4649	 Bytes: 0
  br label %block_.L_4a4649
block_.L_4a4649:

  ; Code: movl -0x4c0(%rbp), %eax	 RIP: 4a4649	 Bytes: 6
  %loadMem_4a4649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4649 = call %struct.Memory* @routine_movl_MINUS0x4c0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4649)
  store %struct.Memory* %call_4a4649, %struct.Memory** %MEMORY

  ; Code: leaq -0x150(%rbp), %rdi	 RIP: 4a464f	 Bytes: 7
  %loadMem_4a464f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a464f = call %struct.Memory* @routine_leaq_MINUS0x150__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a464f)
  store %struct.Memory* %call_4a464f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 4a4656	 Bytes: 3
  %loadMem_4a4656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4656 = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4656)
  store %struct.Memory* %call_4a4656, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 4a4659	 Bytes: 8
  %loadMem_4a4659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4659 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4659)
  store %struct.Memory* %call_4a4659, %struct.Memory** %MEMORY

  ; Code: movl 0x18(%rcx), %esi	 RIP: 4a4661	 Bytes: 3
  %loadMem_4a4661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4661 = call %struct.Memory* @routine_movl_0x18__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4661)
  store %struct.Memory* %call_4a4661, %struct.Memory** %MEMORY

  ; Code: callq .SATD8X8	 RIP: 4a4664	 Bytes: 5
  %loadMem1_4a4664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4664 = call %struct.Memory* @routine_callq_.SATD8X8(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4664, i64 -282804, i64 5, i64 5)
  store %struct.Memory* %call1_4a4664, %struct.Memory** %MEMORY

  %loadMem2_4a4664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4664 = load i64, i64* %3
  %call2_4a4664 = call %struct.Memory* @sub_45f5b0.SATD8X8(%struct.State* %0, i64  %loadPC_4a4664, %struct.Memory* %loadMem2_4a4664)
  store %struct.Memory* %call2_4a4664, %struct.Memory** %MEMORY

  ; Code: addl -0x40(%rbp), %eax	 RIP: 4a4669	 Bytes: 3
  %loadMem_4a4669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4669 = call %struct.Memory* @routine_addl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4669)
  store %struct.Memory* %call_4a4669, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 4a466c	 Bytes: 3
  %loadMem_4a466c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a466c = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a466c)
  store %struct.Memory* %call_4a466c, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %eax	 RIP: 4a466f	 Bytes: 3
  %loadMem_4a466f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a466f = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a466f)
  store %struct.Memory* %call_4a466f, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 4a4672	 Bytes: 4
  %loadMem_4a4672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4672 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4672)
  store %struct.Memory* %call_4a4672, %struct.Memory** %MEMORY

  ; Code: cmpl (%rcx), %eax	 RIP: 4a4676	 Bytes: 2
  %loadMem_4a4676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4676 = call %struct.Memory* @routine_cmpl___rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4676)
  store %struct.Memory* %call_4a4676, %struct.Memory** %MEMORY

  ; Code: jge .L_4a468d	 RIP: 4a4678	 Bytes: 6
  %loadMem_4a4678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4678 = call %struct.Memory* @routine_jge_.L_4a468d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4678, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4a4678, %struct.Memory** %MEMORY

  %loadBr_4a4678 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4678 = icmp eq i8 %loadBr_4a4678, 1
  br i1 %cmpBr_4a4678, label %block_.L_4a468d, label %block_4a467e

block_4a467e:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 4a467e	 Bytes: 3
  %loadMem_4a467e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a467e = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a467e)
  store %struct.Memory* %call_4a467e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 4a4681	 Bytes: 3
  %loadMem_4a4681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4681 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4681)
  store %struct.Memory* %call_4a4681, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %eax	 RIP: 4a4684	 Bytes: 3
  %loadMem_4a4684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4684 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4684)
  store %struct.Memory* %call_4a4684, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 4a4687	 Bytes: 4
  %loadMem_4a4687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4687 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4687)
  store %struct.Memory* %call_4a4687, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 4a468b	 Bytes: 2
  %loadMem_4a468b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a468b = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a468b)
  store %struct.Memory* %call_4a468b, %struct.Memory** %MEMORY

  ; Code: .L_4a468d:	 RIP: 4a468d	 Bytes: 0
  br label %block_.L_4a468d
block_.L_4a468d:

  ; Code: jmpq .L_4a5f07	 RIP: 4a468d	 Bytes: 5
  %loadMem_4a468d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a468d = call %struct.Memory* @routine_jmpq_.L_4a5f07(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a468d, i64 6266, i64 5)
  store %struct.Memory* %call_4a468d, %struct.Memory** %MEMORY

  br label %block_.L_4a5f07

  ; Code: .L_4a4692:	 RIP: 4a4692	 Bytes: 0
block_.L_4a4692:

  ; Code: movq 0x6cb900, %rax	 RIP: 4a4692	 Bytes: 8
  %loadMem_4a4692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4692 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4692)
  store %struct.Memory* %call_4a4692, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 4a469a	 Bytes: 7
  %loadMem_4a469a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a469a = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a469a)
  store %struct.Memory* %call_4a469a, %struct.Memory** %MEMORY

  ; Code: jne .L_4a496f	 RIP: 4a46a1	 Bytes: 6
  %loadMem_4a46a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46a1 = call %struct.Memory* @routine_jne_.L_4a496f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46a1, i8* %BRANCH_TAKEN, i64 718, i64 6, i64 6)
  store %struct.Memory* %call_4a46a1, %struct.Memory** %MEMORY

  %loadBr_4a46a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a46a1 = icmp eq i8 %loadBr_4a46a1, 1
  br i1 %cmpBr_4a46a1, label %block_.L_4a496f, label %block_4a46a7

block_4a46a7:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a46a7	 Bytes: 7
  %loadMem_4a46a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46a7 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46a7)
  store %struct.Memory* %call_4a46a7, %struct.Memory** %MEMORY

  ; Code: .L_4a46ae:	 RIP: 4a46ae	 Bytes: 0
  br label %block_.L_4a46ae
block_.L_4a46ae:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a46ae	 Bytes: 4
  %loadMem_4a46ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46ae = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46ae)
  store %struct.Memory* %call_4a46ae, %struct.Memory** %MEMORY

  ; Code: jge .L_4a47bc	 RIP: 4a46b2	 Bytes: 6
  %loadMem_4a46b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46b2 = call %struct.Memory* @routine_jge_.L_4a47bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46b2, i8* %BRANCH_TAKEN, i64 266, i64 6, i64 6)
  store %struct.Memory* %call_4a46b2, %struct.Memory** %MEMORY

  %loadBr_4a46b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a46b2 = icmp eq i8 %loadBr_4a46b2, 1
  br i1 %cmpBr_4a46b2, label %block_.L_4a47bc, label %block_4a46b8

block_4a46b8:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a46b8	 Bytes: 7
  %loadMem_4a46b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46b8 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46b8)
  store %struct.Memory* %call_4a46b8, %struct.Memory** %MEMORY

  ; Code: .L_4a46bf:	 RIP: 4a46bf	 Bytes: 0
  br label %block_.L_4a46bf
block_.L_4a46bf:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a46bf	 Bytes: 4
  %loadMem_4a46bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46bf = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46bf)
  store %struct.Memory* %call_4a46bf, %struct.Memory** %MEMORY

  ; Code: jge .L_4a47a9	 RIP: 4a46c3	 Bytes: 6
  %loadMem_4a46c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46c3 = call %struct.Memory* @routine_jge_.L_4a47a9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46c3, i8* %BRANCH_TAKEN, i64 230, i64 6, i64 6)
  store %struct.Memory* %call_4a46c3, %struct.Memory** %MEMORY

  %loadBr_4a46c3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a46c3 = icmp eq i8 %loadBr_4a46c3, 1
  br i1 %cmpBr_4a46c3, label %block_.L_4a47a9, label %block_4a46c9

block_4a46c9:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a46c9	 Bytes: 8
  %loadMem_4a46c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46c9 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46c9)
  store %struct.Memory* %call_4a46c9, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rax	 RIP: 4a46d1	 Bytes: 6
  %loadMem_4a46d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46d1 = call %struct.Memory* @routine_addq__0x1cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46d1)
  store %struct.Memory* %call_4a46d1, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rcx	 RIP: 4a46d7	 Bytes: 4
  %loadMem_4a46d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46d7 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46d7)
  store %struct.Memory* %call_4a46d7, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rcx	 RIP: 4a46db	 Bytes: 4
  %loadMem_4a46db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46db = call %struct.Memory* @routine_shlq__0x7___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46db)
  store %struct.Memory* %call_4a46db, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a46df	 Bytes: 3
  %loadMem_4a46df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46df = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46df)
  store %struct.Memory* %call_4a46df, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a46e2	 Bytes: 4
  %loadMem_4a46e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46e2 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46e2)
  store %struct.Memory* %call_4a46e2, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a46e6	 Bytes: 4
  %loadMem_4a46e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46e6 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46e6)
  store %struct.Memory* %call_4a46e6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a46ea	 Bytes: 3
  %loadMem_4a46ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46ea = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46ea)
  store %struct.Memory* %call_4a46ea, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a46ed	 Bytes: 4
  %loadMem_4a46ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46ed = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46ed)
  store %struct.Memory* %call_4a46ed, %struct.Memory** %MEMORY

  ; Code: movw (%rax,%rcx,2), %dx	 RIP: 4a46f1	 Bytes: 4
  %loadMem_4a46f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46f1 = call %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46f1)
  store %struct.Memory* %call_4a46f1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a46f5	 Bytes: 8
  %loadMem_4a46f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46f5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46f5)
  store %struct.Memory* %call_4a46f5, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rax	 RIP: 4a46fd	 Bytes: 6
  %loadMem_4a46fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a46fd = call %struct.Memory* @routine_addq__0x3138___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a46fd)
  store %struct.Memory* %call_4a46fd, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a4703	 Bytes: 6
  %loadMem_4a4703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4703 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4703)
  store %struct.Memory* %call_4a4703, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a4709	 Bytes: 3
  %loadMem_4a4709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4709 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4709)
  store %struct.Memory* %call_4a4709, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a470c	 Bytes: 3
  %loadMem_4a470c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a470c = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a470c)
  store %struct.Memory* %call_4a470c, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4a470f	 Bytes: 4
  %loadMem_4a470f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a470f = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a470f)
  store %struct.Memory* %call_4a470f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4713	 Bytes: 3
  %loadMem_4a4713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4713 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4713)
  store %struct.Memory* %call_4a4713, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a4716	 Bytes: 6
  %loadMem_4a4716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4716 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4716)
  store %struct.Memory* %call_4a4716, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a471c	 Bytes: 3
  %loadMem_4a471c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a471c = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a471c)
  store %struct.Memory* %call_4a471c, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a471f	 Bytes: 3
  %loadMem_4a471f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a471f = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a471f)
  store %struct.Memory* %call_4a471f, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rax,%rcx,2)	 RIP: 4a4722	 Bytes: 4
  %loadMem_4a4722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4722 = call %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4722)
  store %struct.Memory* %call_4a4722, %struct.Memory** %MEMORY

  ; Code: movq -0x210(%rbp), %rax	 RIP: 4a4726	 Bytes: 7
  %loadMem_4a4726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4726 = call %struct.Memory* @routine_movq_MINUS0x210__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4726)
  store %struct.Memory* %call_4a4726, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %esi	 RIP: 4a472d	 Bytes: 6
  %loadMem_4a472d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a472d = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a472d)
  store %struct.Memory* %call_4a472d, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a4733	 Bytes: 3
  %loadMem_4a4733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4733 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4733)
  store %struct.Memory* %call_4a4733, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a4736	 Bytes: 3
  %loadMem_4a4736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4736 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4736)
  store %struct.Memory* %call_4a4736, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a4739	 Bytes: 4
  %loadMem_4a4739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4739 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4739)
  store %struct.Memory* %call_4a4739, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %esi	 RIP: 4a473d	 Bytes: 6
  %loadMem_4a473d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a473d = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a473d)
  store %struct.Memory* %call_4a473d, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a4743	 Bytes: 3
  %loadMem_4a4743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4743 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4743)
  store %struct.Memory* %call_4a4743, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a4746	 Bytes: 3
  %loadMem_4a4746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4746 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4746)
  store %struct.Memory* %call_4a4746, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %esi	 RIP: 4a4749	 Bytes: 4
  %loadMem_4a4749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4749 = call %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4749)
  store %struct.Memory* %call_4a4749, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a474d	 Bytes: 8
  %loadMem_4a474d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a474d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a474d)
  store %struct.Memory* %call_4a474d, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rax	 RIP: 4a4755	 Bytes: 6
  %loadMem_4a4755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4755 = call %struct.Memory* @routine_addq__0x1cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4755)
  store %struct.Memory* %call_4a4755, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rcx	 RIP: 4a475b	 Bytes: 4
  %loadMem_4a475b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a475b = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a475b)
  store %struct.Memory* %call_4a475b, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rcx	 RIP: 4a475f	 Bytes: 4
  %loadMem_4a475f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a475f = call %struct.Memory* @routine_shlq__0x7___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a475f)
  store %struct.Memory* %call_4a475f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4763	 Bytes: 3
  %loadMem_4a4763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4763 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4763)
  store %struct.Memory* %call_4a4763, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4766	 Bytes: 4
  %loadMem_4a4766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4766 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4766)
  store %struct.Memory* %call_4a4766, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a476a	 Bytes: 4
  %loadMem_4a476a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a476a = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a476a)
  store %struct.Memory* %call_4a476a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a476e	 Bytes: 3
  %loadMem_4a476e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a476e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a476e)
  store %struct.Memory* %call_4a476e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4771	 Bytes: 4
  %loadMem_4a4771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4771 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4771)
  store %struct.Memory* %call_4a4771, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %edi	 RIP: 4a4775	 Bytes: 4
  %loadMem_4a4775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4775 = call %struct.Memory* @routine_movzwl___rax__rcx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4775)
  store %struct.Memory* %call_4a4775, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 4a4779	 Bytes: 2
  %loadMem_4a4779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4779 = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4779)
  store %struct.Memory* %call_4a4779, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a477b	 Bytes: 8
  %loadMem_4a477b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a477b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a477b)
  store %struct.Memory* %call_4a477b, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4a4783	 Bytes: 6
  %loadMem_4a4783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4783 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4783)
  store %struct.Memory* %call_4a4783, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4789	 Bytes: 4
  %loadMem_4a4789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4789 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4789)
  store %struct.Memory* %call_4a4789, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a478d	 Bytes: 4
  %loadMem_4a478d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a478d = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a478d)
  store %struct.Memory* %call_4a478d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4791	 Bytes: 3
  %loadMem_4a4791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4791 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4791)
  store %struct.Memory* %call_4a4791, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4794	 Bytes: 4
  %loadMem_4a4794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4794 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4794)
  store %struct.Memory* %call_4a4794, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4a4798	 Bytes: 3
  %loadMem_4a4798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4798 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4798)
  store %struct.Memory* %call_4a4798, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a479b	 Bytes: 3
  %loadMem_4a479b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a479b = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a479b)
  store %struct.Memory* %call_4a479b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a479e	 Bytes: 3
  %loadMem_4a479e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a479e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a479e)
  store %struct.Memory* %call_4a479e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a47a1	 Bytes: 3
  %loadMem_4a47a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47a1 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47a1)
  store %struct.Memory* %call_4a47a1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a46bf	 RIP: 4a47a4	 Bytes: 5
  %loadMem_4a47a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47a4 = call %struct.Memory* @routine_jmpq_.L_4a46bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47a4, i64 -229, i64 5)
  store %struct.Memory* %call_4a47a4, %struct.Memory** %MEMORY

  br label %block_.L_4a46bf

  ; Code: .L_4a47a9:	 RIP: 4a47a9	 Bytes: 0
block_.L_4a47a9:

  ; Code: jmpq .L_4a47ae	 RIP: 4a47a9	 Bytes: 5
  %loadMem_4a47a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47a9 = call %struct.Memory* @routine_jmpq_.L_4a47ae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47a9, i64 5, i64 5)
  store %struct.Memory* %call_4a47a9, %struct.Memory** %MEMORY

  br label %block_.L_4a47ae

  ; Code: .L_4a47ae:	 RIP: 4a47ae	 Bytes: 0
block_.L_4a47ae:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a47ae	 Bytes: 3
  %loadMem_4a47ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47ae = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47ae)
  store %struct.Memory* %call_4a47ae, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a47b1	 Bytes: 3
  %loadMem_4a47b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47b1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47b1)
  store %struct.Memory* %call_4a47b1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a47b4	 Bytes: 3
  %loadMem_4a47b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47b4 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47b4)
  store %struct.Memory* %call_4a47b4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a46ae	 RIP: 4a47b7	 Bytes: 5
  %loadMem_4a47b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47b7 = call %struct.Memory* @routine_jmpq_.L_4a46ae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47b7, i64 -265, i64 5)
  store %struct.Memory* %call_4a47b7, %struct.Memory** %MEMORY

  br label %block_.L_4a46ae

  ; Code: .L_4a47bc:	 RIP: 4a47bc	 Bytes: 0
block_.L_4a47bc:

  ; Code: movb $0x0, %al	 RIP: 4a47bc	 Bytes: 2
  %loadMem_4a47bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47bc = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47bc)
  store %struct.Memory* %call_4a47bc, %struct.Memory** %MEMORY

  ; Code: callq .store_coding_state_cs_cm	 RIP: 4a47be	 Bytes: 5
  %loadMem1_4a47be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a47be = call %struct.Memory* @routine_callq_.store_coding_state_cs_cm(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a47be, i64 -28958, i64 5, i64 5)
  store %struct.Memory* %call1_4a47be, %struct.Memory** %MEMORY

  %loadMem2_4a47be = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a47be = load i64, i64* %3
  %call2_4a47be = call %struct.Memory* @sub_49d6a0.store_coding_state_cs_cm(%struct.State* %0, i64  %loadPC_4a47be, %struct.Memory* %loadMem2_4a47be)
  store %struct.Memory* %call2_4a47be, %struct.Memory** %MEMORY

  ; Code: leaq -0x48(%rbp), %rdi	 RIP: 4a47c3	 Bytes: 4
  %loadMem_4a47c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47c3 = call %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47c3)
  store %struct.Memory* %call_4a47c3, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4a47c7	 Bytes: 3
  %loadMem_4a47c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47c7 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47c7)
  store %struct.Memory* %call_4a47c7, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %edx	 RIP: 4a47ca	 Bytes: 3
  %loadMem_4a47ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47ca = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47ca)
  store %struct.Memory* %call_4a47ca, %struct.Memory** %MEMORY

  ; Code: movsd -0x18(%rbp), %xmm0	 RIP: 4a47cd	 Bytes: 5
  %loadMem_4a47cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47cd = call %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47cd)
  store %struct.Memory* %call_4a47cd, %struct.Memory** %MEMORY

  ; Code: movsd -0x208(%rbp), %xmm1	 RIP: 4a47d2	 Bytes: 8
  %loadMem_4a47d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47d2 = call %struct.Memory* @routine_movsd_MINUS0x208__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47d2)
  store %struct.Memory* %call_4a47d2, %struct.Memory** %MEMORY

  ; Code: movl -0x228(%rbp), %ecx	 RIP: 4a47da	 Bytes: 6
  %loadMem_4a47da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47da = call %struct.Memory* @routine_movl_MINUS0x228__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47da)
  store %struct.Memory* %call_4a47da, %struct.Memory** %MEMORY

  ; Code: callq .RDCost_for_8x8IntraBlocks	 RIP: 4a47e0	 Bytes: 5
  %loadMem1_4a47e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a47e0 = call %struct.Memory* @routine_callq_.RDCost_for_8x8IntraBlocks(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a47e0, i64 23312, i64 5, i64 5)
  store %struct.Memory* %call1_4a47e0, %struct.Memory** %MEMORY

  %loadMem2_4a47e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a47e0 = load i64, i64* %3
  %call2_4a47e0 = call %struct.Memory* @sub_4aa2f0.RDCost_for_8x8IntraBlocks(%struct.State* %0, i64  %loadPC_4a47e0, %struct.Memory* %loadMem2_4a47e0)
  store %struct.Memory* %call2_4a47e0, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x1d8(%rbp)	 RIP: 4a47e5	 Bytes: 8
  %loadMem_4a47e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47e5 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x1d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47e5)
  store %struct.Memory* %call_4a47e5, %struct.Memory** %MEMORY

  ; Code: movsd -0x208(%rbp), %xmm1	 RIP: 4a47ed	 Bytes: 8
  %loadMem_4a47ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47ed = call %struct.Memory* @routine_movsd_MINUS0x208__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47ed)
  store %struct.Memory* %call_4a47ed, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 4a47f5	 Bytes: 4
  %loadMem_4a47f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47f5 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47f5)
  store %struct.Memory* %call_4a47f5, %struct.Memory** %MEMORY

  ; Code: jbe .L_4a4963	 RIP: 4a47f9	 Bytes: 6
  %loadMem_4a47f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47f9 = call %struct.Memory* @routine_jbe_.L_4a4963(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47f9, i8* %BRANCH_TAKEN, i64 362, i64 6, i64 6)
  store %struct.Memory* %call_4a47f9, %struct.Memory** %MEMORY

  %loadBr_4a47f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a47f9 = icmp eq i8 %loadBr_4a47f9, 1
  br i1 %cmpBr_4a47f9, label %block_.L_4a4963, label %block_4a47ff

block_4a47ff:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a47ff	 Bytes: 7
  %loadMem_4a47ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a47ff = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a47ff)
  store %struct.Memory* %call_4a47ff, %struct.Memory** %MEMORY

  ; Code: .L_4a4806:	 RIP: 4a4806	 Bytes: 0
  br label %block_.L_4a4806
block_.L_4a4806:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4a4806	 Bytes: 4
  %loadMem_4a4806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4806 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4806)
  store %struct.Memory* %call_4a4806, %struct.Memory** %MEMORY

  ; Code: jge .L_4a48bb	 RIP: 4a480a	 Bytes: 6
  %loadMem_4a480a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a480a = call %struct.Memory* @routine_jge_.L_4a48bb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a480a, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_4a480a, %struct.Memory** %MEMORY

  %loadBr_4a480a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a480a = icmp eq i8 %loadBr_4a480a, 1
  br i1 %cmpBr_4a480a, label %block_.L_4a48bb, label %block_4a4810

block_4a4810:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4810	 Bytes: 7
  %loadMem_4a4810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4810 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4810)
  store %struct.Memory* %call_4a4810, %struct.Memory** %MEMORY

  ; Code: .L_4a4817:	 RIP: 4a4817	 Bytes: 0
  br label %block_.L_4a4817
block_.L_4a4817:

  ; Code: cmpl $0x41, -0x2c(%rbp)	 RIP: 4a4817	 Bytes: 4
  %loadMem_4a4817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4817 = call %struct.Memory* @routine_cmpl__0x41__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4817)
  store %struct.Memory* %call_4a4817, %struct.Memory** %MEMORY

  ; Code: jge .L_4a48a8	 RIP: 4a481b	 Bytes: 6
  %loadMem_4a481b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a481b = call %struct.Memory* @routine_jge_.L_4a48a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a481b, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_4a481b, %struct.Memory** %MEMORY

  %loadBr_4a481b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a481b = icmp eq i8 %loadBr_4a481b, 1
  br i1 %cmpBr_4a481b, label %block_.L_4a48a8, label %block_4a4821

block_4a4821:
  ; Code: movl $0x0, -0x34(%rbp)	 RIP: 4a4821	 Bytes: 7
  %loadMem_4a4821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4821 = call %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4821)
  store %struct.Memory* %call_4a4821, %struct.Memory** %MEMORY

  ; Code: .L_4a4828:	 RIP: 4a4828	 Bytes: 0
  br label %block_.L_4a4828
block_.L_4a4828:

  ; Code: cmpl $0x4, -0x34(%rbp)	 RIP: 4a4828	 Bytes: 4
  %loadMem_4a4828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4828 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4828)
  store %struct.Memory* %call_4a4828, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4895	 RIP: 4a482c	 Bytes: 6
  %loadMem_4a482c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a482c = call %struct.Memory* @routine_jge_.L_4a4895(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a482c, i8* %BRANCH_TAKEN, i64 105, i64 6, i64 6)
  store %struct.Memory* %call_4a482c, %struct.Memory** %MEMORY

  %loadBr_4a482c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a482c = icmp eq i8 %loadBr_4a482c, 1
  br i1 %cmpBr_4a482c, label %block_.L_4a4895, label %block_4a4832

block_4a4832:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a4832	 Bytes: 8
  %loadMem_4a4832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4832 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4832)
  store %struct.Memory* %call_4a4832, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 4a483a	 Bytes: 7
  %loadMem_4a483a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a483a = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a483a)
  store %struct.Memory* %call_4a483a, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4a4841	 Bytes: 4
  %loadMem_4a4841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4841 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4841)
  store %struct.Memory* %call_4a4841, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a4845	 Bytes: 4
  %loadMem_4a4845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4845 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4845)
  store %struct.Memory* %call_4a4845, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rcx	 RIP: 4a4849	 Bytes: 4
  %loadMem_4a4849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4849 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4849)
  store %struct.Memory* %call_4a4849, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a484d	 Bytes: 4
  %loadMem_4a484d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a484d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a484d)
  store %struct.Memory* %call_4a484d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4851	 Bytes: 4
  %loadMem_4a4851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4851 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4851)
  store %struct.Memory* %call_4a4851, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a4855	 Bytes: 4
  %loadMem_4a4855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4855 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4855)
  store %struct.Memory* %call_4a4855, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4859	 Bytes: 4
  %loadMem_4a4859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4859 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4859)
  store %struct.Memory* %call_4a4859, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a485d	 Bytes: 3
  %loadMem_4a485d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a485d = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a485d)
  store %struct.Memory* %call_4a485d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc5f8, %rax	 RIP: 4a4860	 Bytes: 8
  %loadMem_4a4860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4860 = call %struct.Memory* @routine_movq_0x6cc5f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4860)
  store %struct.Memory* %call_4a4860, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4a4868	 Bytes: 4
  %loadMem_4a4868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4868 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4868)
  store %struct.Memory* %call_4a4868, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a486c	 Bytes: 4
  %loadMem_4a486c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a486c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a486c)
  store %struct.Memory* %call_4a486c, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rcx	 RIP: 4a4870	 Bytes: 4
  %loadMem_4a4870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4870 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4870)
  store %struct.Memory* %call_4a4870, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a4874	 Bytes: 4
  %loadMem_4a4874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4874 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4874)
  store %struct.Memory* %call_4a4874, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4878	 Bytes: 4
  %loadMem_4a4878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4878 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4878)
  store %struct.Memory* %call_4a4878, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a487c	 Bytes: 4
  %loadMem_4a487c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a487c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a487c)
  store %struct.Memory* %call_4a487c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4880	 Bytes: 4
  %loadMem_4a4880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4880 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4880)
  store %struct.Memory* %call_4a4880, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a4884	 Bytes: 3
  %loadMem_4a4884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4884 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4884)
  store %struct.Memory* %call_4a4884, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %eax	 RIP: 4a4887	 Bytes: 3
  %loadMem_4a4887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4887 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4887)
  store %struct.Memory* %call_4a4887, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a488a	 Bytes: 3
  %loadMem_4a488a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a488a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a488a)
  store %struct.Memory* %call_4a488a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x34(%rbp)	 RIP: 4a488d	 Bytes: 3
  %loadMem_4a488d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a488d = call %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a488d)
  store %struct.Memory* %call_4a488d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4828	 RIP: 4a4890	 Bytes: 5
  %loadMem_4a4890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4890 = call %struct.Memory* @routine_jmpq_.L_4a4828(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4890, i64 -104, i64 5)
  store %struct.Memory* %call_4a4890, %struct.Memory** %MEMORY

  br label %block_.L_4a4828

  ; Code: .L_4a4895:	 RIP: 4a4895	 Bytes: 0
block_.L_4a4895:

  ; Code: jmpq .L_4a489a	 RIP: 4a4895	 Bytes: 5
  %loadMem_4a4895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4895 = call %struct.Memory* @routine_jmpq_.L_4a489a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4895, i64 5, i64 5)
  store %struct.Memory* %call_4a4895, %struct.Memory** %MEMORY

  br label %block_.L_4a489a

  ; Code: .L_4a489a:	 RIP: 4a489a	 Bytes: 0
block_.L_4a489a:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a489a	 Bytes: 3
  %loadMem_4a489a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a489a = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a489a)
  store %struct.Memory* %call_4a489a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a489d	 Bytes: 3
  %loadMem_4a489d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a489d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a489d)
  store %struct.Memory* %call_4a489d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a48a0	 Bytes: 3
  %loadMem_4a48a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48a0 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48a0)
  store %struct.Memory* %call_4a48a0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4817	 RIP: 4a48a3	 Bytes: 5
  %loadMem_4a48a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48a3 = call %struct.Memory* @routine_jmpq_.L_4a4817(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48a3, i64 -140, i64 5)
  store %struct.Memory* %call_4a48a3, %struct.Memory** %MEMORY

  br label %block_.L_4a4817

  ; Code: .L_4a48a8:	 RIP: 4a48a8	 Bytes: 0
block_.L_4a48a8:

  ; Code: jmpq .L_4a48ad	 RIP: 4a48a8	 Bytes: 5
  %loadMem_4a48a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48a8 = call %struct.Memory* @routine_jmpq_.L_4a48ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48a8, i64 5, i64 5)
  store %struct.Memory* %call_4a48a8, %struct.Memory** %MEMORY

  br label %block_.L_4a48ad

  ; Code: .L_4a48ad:	 RIP: 4a48ad	 Bytes: 0
block_.L_4a48ad:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a48ad	 Bytes: 3
  %loadMem_4a48ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48ad = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48ad)
  store %struct.Memory* %call_4a48ad, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a48b0	 Bytes: 3
  %loadMem_4a48b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48b0 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48b0)
  store %struct.Memory* %call_4a48b0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a48b3	 Bytes: 3
  %loadMem_4a48b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48b3 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48b3)
  store %struct.Memory* %call_4a48b3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4806	 RIP: 4a48b6	 Bytes: 5
  %loadMem_4a48b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48b6 = call %struct.Memory* @routine_jmpq_.L_4a4806(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48b6, i64 -176, i64 5)
  store %struct.Memory* %call_4a48b6, %struct.Memory** %MEMORY

  br label %block_.L_4a4806

  ; Code: .L_4a48bb:	 RIP: 4a48bb	 Bytes: 0
block_.L_4a48bb:

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4a48bb	 Bytes: 7
  %loadMem_4a48bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48bb = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48bb)
  store %struct.Memory* %call_4a48bb, %struct.Memory** %MEMORY

  ; Code: .L_4a48c2:	 RIP: 4a48c2	 Bytes: 0
  br label %block_.L_4a48c2
block_.L_4a48c2:

  ; Code: cmpl $0x8, -0x3c(%rbp)	 RIP: 4a48c2	 Bytes: 4
  %loadMem_4a48c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48c2 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48c2)
  store %struct.Memory* %call_4a48c2, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4947	 RIP: 4a48c6	 Bytes: 6
  %loadMem_4a48c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48c6 = call %struct.Memory* @routine_jge_.L_4a4947(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48c6, i8* %BRANCH_TAKEN, i64 129, i64 6, i64 6)
  store %struct.Memory* %call_4a48c6, %struct.Memory** %MEMORY

  %loadBr_4a48c6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a48c6 = icmp eq i8 %loadBr_4a48c6, 1
  br i1 %cmpBr_4a48c6, label %block_.L_4a4947, label %block_4a48cc

block_4a48cc:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 4a48cc	 Bytes: 7
  %loadMem_4a48cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48cc = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48cc)
  store %struct.Memory* %call_4a48cc, %struct.Memory** %MEMORY

  ; Code: .L_4a48d3:	 RIP: 4a48d3	 Bytes: 0
  br label %block_.L_4a48d3
block_.L_4a48d3:

  ; Code: cmpl $0x8, -0x38(%rbp)	 RIP: 4a48d3	 Bytes: 4
  %loadMem_4a48d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48d3 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48d3)
  store %struct.Memory* %call_4a48d3, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4934	 RIP: 4a48d7	 Bytes: 6
  %loadMem_4a48d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48d7 = call %struct.Memory* @routine_jge_.L_4a4934(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48d7, i8* %BRANCH_TAKEN, i64 93, i64 6, i64 6)
  store %struct.Memory* %call_4a48d7, %struct.Memory** %MEMORY

  %loadBr_4a48d7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a48d7 = icmp eq i8 %loadBr_4a48d7, 1
  br i1 %cmpBr_4a48d7, label %block_.L_4a4934, label %block_4a48dd

block_4a48dd:
  ; Code: leaq -0x1d0(%rbp), %rax	 RIP: 4a48dd	 Bytes: 7
  %loadMem_4a48dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48dd = call %struct.Memory* @routine_leaq_MINUS0x1d0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48dd)
  store %struct.Memory* %call_4a48dd, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rcx	 RIP: 4a48e4	 Bytes: 8
  %loadMem_4a48e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48e4 = call %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48e4)
  store %struct.Memory* %call_4a48e4, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rcx), %rcx	 RIP: 4a48ec	 Bytes: 7
  %loadMem_4a48ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48ec = call %struct.Memory* @routine_movq_0x1918__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48ec)
  store %struct.Memory* %call_4a48ec, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %edx	 RIP: 4a48f3	 Bytes: 6
  %loadMem_4a48f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48f3 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48f3)
  store %struct.Memory* %call_4a48f3, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edx	 RIP: 4a48f9	 Bytes: 3
  %loadMem_4a48f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48f9 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48f9)
  store %struct.Memory* %call_4a48f9, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4a48fc	 Bytes: 3
  %loadMem_4a48fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48fc = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48fc)
  store %struct.Memory* %call_4a48fc, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4a48ff	 Bytes: 4
  %loadMem_4a48ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a48ff = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a48ff)
  store %struct.Memory* %call_4a48ff, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %edx	 RIP: 4a4903	 Bytes: 6
  %loadMem_4a4903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4903 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4903)
  store %struct.Memory* %call_4a4903, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %edx	 RIP: 4a4909	 Bytes: 3
  %loadMem_4a4909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4909 = call %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4909)
  store %struct.Memory* %call_4a4909, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4a490c	 Bytes: 3
  %loadMem_4a490c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a490c = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a490c)
  store %struct.Memory* %call_4a490c, %struct.Memory** %MEMORY

  ; Code: movw (%rcx,%rsi,2), %di	 RIP: 4a490f	 Bytes: 4
  %loadMem_4a490f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a490f = call %struct.Memory* @routine_movw___rcx__rsi_2____di(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a490f)
  store %struct.Memory* %call_4a490f, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 4a4913	 Bytes: 4
  %loadMem_4a4913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4913 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4913)
  store %struct.Memory* %call_4a4913, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a4917	 Bytes: 4
  %loadMem_4a4917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4917 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4917)
  store %struct.Memory* %call_4a4917, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a491b	 Bytes: 3
  %loadMem_4a491b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a491b = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a491b)
  store %struct.Memory* %call_4a491b, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 4a491e	 Bytes: 4
  %loadMem_4a491e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a491e = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a491e)
  store %struct.Memory* %call_4a491e, %struct.Memory** %MEMORY

  ; Code: movw %di, (%rax,%rcx,2)	 RIP: 4a4922	 Bytes: 4
  %loadMem_4a4922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4922 = call %struct.Memory* @routine_movw__di____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4922)
  store %struct.Memory* %call_4a4922, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4a4926	 Bytes: 3
  %loadMem_4a4926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4926 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4926)
  store %struct.Memory* %call_4a4926, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4929	 Bytes: 3
  %loadMem_4a4929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4929 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4929)
  store %struct.Memory* %call_4a4929, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4a492c	 Bytes: 3
  %loadMem_4a492c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a492c = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a492c)
  store %struct.Memory* %call_4a492c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a48d3	 RIP: 4a492f	 Bytes: 5
  %loadMem_4a492f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a492f = call %struct.Memory* @routine_jmpq_.L_4a48d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a492f, i64 -92, i64 5)
  store %struct.Memory* %call_4a492f, %struct.Memory** %MEMORY

  br label %block_.L_4a48d3

  ; Code: .L_4a4934:	 RIP: 4a4934	 Bytes: 0
block_.L_4a4934:

  ; Code: jmpq .L_4a4939	 RIP: 4a4934	 Bytes: 5
  %loadMem_4a4934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4934 = call %struct.Memory* @routine_jmpq_.L_4a4939(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4934, i64 5, i64 5)
  store %struct.Memory* %call_4a4934, %struct.Memory** %MEMORY

  br label %block_.L_4a4939

  ; Code: .L_4a4939:	 RIP: 4a4939	 Bytes: 0
block_.L_4a4939:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4a4939	 Bytes: 3
  %loadMem_4a4939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4939 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4939)
  store %struct.Memory* %call_4a4939, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a493c	 Bytes: 3
  %loadMem_4a493c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a493c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a493c)
  store %struct.Memory* %call_4a493c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4a493f	 Bytes: 3
  %loadMem_4a493f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a493f = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a493f)
  store %struct.Memory* %call_4a493f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a48c2	 RIP: 4a4942	 Bytes: 5
  %loadMem_4a4942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4942 = call %struct.Memory* @routine_jmpq_.L_4a48c2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4942, i64 -128, i64 5)
  store %struct.Memory* %call_4a4942, %struct.Memory** %MEMORY

  br label %block_.L_4a48c2

  ; Code: .L_4a4947:	 RIP: 4a4947	 Bytes: 0
block_.L_4a4947:

  ; Code: movl -0x48(%rbp), %eax	 RIP: 4a4947	 Bytes: 3
  %loadMem_4a4947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4947 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4947)
  store %struct.Memory* %call_4a4947, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 4a494a	 Bytes: 3
  %loadMem_4a494a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a494a = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a494a)
  store %struct.Memory* %call_4a494a, %struct.Memory** %MEMORY

  ; Code: movsd -0x1d8(%rbp), %xmm0	 RIP: 4a494d	 Bytes: 8
  %loadMem_4a494d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a494d = call %struct.Memory* @routine_movsd_MINUS0x1d8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a494d)
  store %struct.Memory* %call_4a494d, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x208(%rbp)	 RIP: 4a4955	 Bytes: 8
  %loadMem_4a4955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4955 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4955)
  store %struct.Memory* %call_4a4955, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 4a495d	 Bytes: 3
  %loadMem_4a495d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a495d = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a495d)
  store %struct.Memory* %call_4a495d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 4a4960	 Bytes: 3
  %loadMem_4a4960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4960 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4960)
  store %struct.Memory* %call_4a4960, %struct.Memory** %MEMORY

  ; Code: .L_4a4963:	 RIP: 4a4963	 Bytes: 0
  br label %block_.L_4a4963
block_.L_4a4963:

  ; Code: movb $0x0, %al	 RIP: 4a4963	 Bytes: 2
  %loadMem_4a4963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4963 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4963)
  store %struct.Memory* %call_4a4963, %struct.Memory** %MEMORY

  ; Code: callq .reset_coding_state_cs_cm	 RIP: 4a4965	 Bytes: 5
  %loadMem1_4a4965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4965 = call %struct.Memory* @routine_callq_.reset_coding_state_cs_cm(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4965, i64 -29349, i64 5, i64 5)
  store %struct.Memory* %call1_4a4965, %struct.Memory** %MEMORY

  %loadMem2_4a4965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4965 = load i64, i64* %3
  %call2_4a4965 = call %struct.Memory* @sub_49d6c0.reset_coding_state_cs_cm(%struct.State* %0, i64  %loadPC_4a4965, %struct.Memory* %loadMem2_4a4965)
  store %struct.Memory* %call2_4a4965, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5f02	 RIP: 4a496a	 Bytes: 5
  %loadMem_4a496a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a496a = call %struct.Memory* @routine_jmpq_.L_4a5f02(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a496a, i64 5528, i64 5)
  store %struct.Memory* %call_4a496a, %struct.Memory** %MEMORY

  br label %block_.L_4a5f02

  ; Code: .L_4a496f:	 RIP: 4a496f	 Bytes: 0
block_.L_4a496f:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a496f	 Bytes: 7
  %loadMem_4a496f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a496f = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a496f)
  store %struct.Memory* %call_4a496f, %struct.Memory** %MEMORY

  ; Code: .L_4a4976:	 RIP: 4a4976	 Bytes: 0
  br label %block_.L_4a4976
block_.L_4a4976:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a4976	 Bytes: 4
  %loadMem_4a4976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4976 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4976)
  store %struct.Memory* %call_4a4976, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4bc7	 RIP: 4a497a	 Bytes: 6
  %loadMem_4a497a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a497a = call %struct.Memory* @routine_jge_.L_4a4bc7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a497a, i8* %BRANCH_TAKEN, i64 589, i64 6, i64 6)
  store %struct.Memory* %call_4a497a, %struct.Memory** %MEMORY

  %loadBr_4a497a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a497a = icmp eq i8 %loadBr_4a497a, 1
  br i1 %cmpBr_4a497a, label %block_.L_4a4bc7, label %block_4a4980

block_4a4980:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4980	 Bytes: 7
  %loadMem_4a4980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4980 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4980)
  store %struct.Memory* %call_4a4980, %struct.Memory** %MEMORY

  ; Code: .L_4a4987:	 RIP: 4a4987	 Bytes: 0
  br label %block_.L_4a4987
block_.L_4a4987:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a4987	 Bytes: 4
  %loadMem_4a4987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4987 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4987)
  store %struct.Memory* %call_4a4987, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4bb4	 RIP: 4a498b	 Bytes: 6
  %loadMem_4a498b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a498b = call %struct.Memory* @routine_jge_.L_4a4bb4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a498b, i8* %BRANCH_TAKEN, i64 553, i64 6, i64 6)
  store %struct.Memory* %call_4a498b, %struct.Memory** %MEMORY

  %loadBr_4a498b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a498b = icmp eq i8 %loadBr_4a498b, 1
  br i1 %cmpBr_4a498b, label %block_.L_4a4bb4, label %block_4a4991

block_4a4991:
  ; Code: movq $0x723720, %rax	 RIP: 4a4991	 Bytes: 10
  %loadMem_4a4991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4991 = call %struct.Memory* @routine_movq__0x723720___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4991)
  store %struct.Memory* %call_4a4991, %struct.Memory** %MEMORY

  ; Code: movq $0x6d40f0, %rcx	 RIP: 4a499b	 Bytes: 10
  %loadMem_4a499b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a499b = call %struct.Memory* @routine_movq__0x6d40f0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a499b)
  store %struct.Memory* %call_4a499b, %struct.Memory** %MEMORY

  ; Code: movq $0x6f6fa0, %rdx	 RIP: 4a49a5	 Bytes: 10
  %loadMem_4a49a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49a5 = call %struct.Memory* @routine_movq__0x6f6fa0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49a5)
  store %struct.Memory* %call_4a49a5, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rsi	 RIP: 4a49af	 Bytes: 8
  %loadMem_4a49af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49af = call %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49af)
  store %struct.Memory* %call_4a49af, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 4a49b7	 Bytes: 3
  %loadMem_4a49b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49b7 = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49b7)
  store %struct.Memory* %call_4a49b7, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %edi	 RIP: 4a49ba	 Bytes: 6
  %loadMem_4a49ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49ba = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49ba)
  store %struct.Memory* %call_4a49ba, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 4a49c0	 Bytes: 3
  %loadMem_4a49c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49c0 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49c0)
  store %struct.Memory* %call_4a49c0, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a49c3	 Bytes: 3
  %loadMem_4a49c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49c3 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49c3)
  store %struct.Memory* %call_4a49c3, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 4a49c6	 Bytes: 4
  %loadMem_4a49c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49c6 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49c6)
  store %struct.Memory* %call_4a49c6, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %edi	 RIP: 4a49ca	 Bytes: 6
  %loadMem_4a49ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49ca = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49ca)
  store %struct.Memory* %call_4a49ca, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4a49d0	 Bytes: 3
  %loadMem_4a49d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49d0 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49d0)
  store %struct.Memory* %call_4a49d0, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a49d3	 Bytes: 3
  %loadMem_4a49d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49d3 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49d3)
  store %struct.Memory* %call_4a49d3, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 4a49d6	 Bytes: 5
  %loadMem_4a49d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49d6 = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49d6)
  store %struct.Memory* %call_4a49d6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a49db	 Bytes: 8
  %loadMem_4a49db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49db = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49db)
  store %struct.Memory* %call_4a49db, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 4a49e3	 Bytes: 7
  %loadMem_4a49e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49e3 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49e3)
  store %struct.Memory* %call_4a49e3, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %r8	 RIP: 4a49ea	 Bytes: 7
  %loadMem_4a49ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49ea = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49ea)
  store %struct.Memory* %call_4a49ea, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 4a49f1	 Bytes: 4
  %loadMem_4a49f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49f1 = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49f1)
  store %struct.Memory* %call_4a49f1, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4a49f5	 Bytes: 3
  %loadMem_4a49f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49f5 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49f5)
  store %struct.Memory* %call_4a49f5, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r9d	 RIP: 4a49f8	 Bytes: 7
  %loadMem_4a49f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49f8 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49f8)
  store %struct.Memory* %call_4a49f8, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 4a49ff	 Bytes: 4
  %loadMem_4a49ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a49ff = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a49ff)
  store %struct.Memory* %call_4a49ff, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 4a4a03	 Bytes: 3
  %loadMem_4a4a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a03 = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a03)
  store %struct.Memory* %call_4a4a03, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 4a4a06	 Bytes: 4
  %loadMem_4a4a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a06 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a06)
  store %struct.Memory* %call_4a4a06, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4a4a0a	 Bytes: 3
  %loadMem_4a4a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a0a = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a0a)
  store %struct.Memory* %call_4a4a0a, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r9d	 RIP: 4a4a0d	 Bytes: 7
  %loadMem_4a4a0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a0d = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a0d)
  store %struct.Memory* %call_4a4a0d, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 4a4a14	 Bytes: 4
  %loadMem_4a4a14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a14 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a14)
  store %struct.Memory* %call_4a4a14, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 4a4a18	 Bytes: 3
  %loadMem_4a4a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a18 = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a18)
  store %struct.Memory* %call_4a4a18, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 4a4a1b	 Bytes: 5
  %loadMem_4a4a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a1b = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a1b)
  store %struct.Memory* %call_4a4a1b, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 4a4a20	 Bytes: 3
  %loadMem_4a4a20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a20 = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a20)
  store %struct.Memory* %call_4a4a20, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x264(%rbp)	 RIP: 4a4a23	 Bytes: 6
  %loadMem_4a4a23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a23 = call %struct.Memory* @routine_movl__edi__MINUS0x264__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a23)
  store %struct.Memory* %call_4a4a23, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rsi	 RIP: 4a4a29	 Bytes: 8
  %loadMem_4a4a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a29 = call %struct.Memory* @routine_movq_0x726418___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a29)
  store %struct.Memory* %call_4a4a29, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %edi	 RIP: 4a4a31	 Bytes: 6
  %loadMem_4a4a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a31 = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a31)
  store %struct.Memory* %call_4a4a31, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 4a4a37	 Bytes: 3
  %loadMem_4a4a37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a37 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a37)
  store %struct.Memory* %call_4a4a37, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a4a3a	 Bytes: 3
  %loadMem_4a4a3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a3a = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a3a)
  store %struct.Memory* %call_4a4a3a, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 4a4a3d	 Bytes: 4
  %loadMem_4a4a3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a3d = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a3d)
  store %struct.Memory* %call_4a4a3d, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %edi	 RIP: 4a4a41	 Bytes: 6
  %loadMem_4a4a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a41 = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a41)
  store %struct.Memory* %call_4a4a41, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4a4a47	 Bytes: 3
  %loadMem_4a4a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a47 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a47)
  store %struct.Memory* %call_4a4a47, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a4a4a	 Bytes: 3
  %loadMem_4a4a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a4a = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a4a)
  store %struct.Memory* %call_4a4a4a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 4a4a4d	 Bytes: 5
  %loadMem_4a4a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a4d = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a4d)
  store %struct.Memory* %call_4a4a4d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a4a52	 Bytes: 8
  %loadMem_4a4a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a52 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a52)
  store %struct.Memory* %call_4a4a52, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rsi	 RIP: 4a4a5a	 Bytes: 7
  %loadMem_4a4a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a5a = call %struct.Memory* @routine_addq__0x1cb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a5a)
  store %struct.Memory* %call_4a4a5a, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %r8	 RIP: 4a4a61	 Bytes: 4
  %loadMem_4a4a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a61 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a61)
  store %struct.Memory* %call_4a4a61, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %r8	 RIP: 4a4a65	 Bytes: 4
  %loadMem_4a4a65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a65 = call %struct.Memory* @routine_shlq__0x7___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a65)
  store %struct.Memory* %call_4a4a65, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4a4a69	 Bytes: 3
  %loadMem_4a4a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a69 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a69)
  store %struct.Memory* %call_4a4a69, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %r8	 RIP: 4a4a6c	 Bytes: 4
  %loadMem_4a4a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a6c = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a6c)
  store %struct.Memory* %call_4a4a6c, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 4a4a70	 Bytes: 4
  %loadMem_4a4a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a70 = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a70)
  store %struct.Memory* %call_4a4a70, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4a4a74	 Bytes: 3
  %loadMem_4a4a74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a74 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a74)
  store %struct.Memory* %call_4a4a74, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %r8	 RIP: 4a4a77	 Bytes: 4
  %loadMem_4a4a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a77 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a77)
  store %struct.Memory* %call_4a4a77, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 4a4a7b	 Bytes: 5
  %loadMem_4a4a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a7b = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a7b)
  store %struct.Memory* %call_4a4a7b, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 4a4a80	 Bytes: 3
  %loadMem_4a4a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a80 = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a80)
  store %struct.Memory* %call_4a4a80, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x260(%rbp)	 RIP: 4a4a83	 Bytes: 6
  %loadMem_4a4a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a83 = call %struct.Memory* @routine_movl__edi__MINUS0x260__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a83)
  store %struct.Memory* %call_4a4a83, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rsi	 RIP: 4a4a89	 Bytes: 8
  %loadMem_4a4a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a89 = call %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a89)
  store %struct.Memory* %call_4a4a89, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rsi), %rsi	 RIP: 4a4a91	 Bytes: 4
  %loadMem_4a4a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a91 = call %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a91)
  store %struct.Memory* %call_4a4a91, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %edi	 RIP: 4a4a95	 Bytes: 6
  %loadMem_4a4a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a95 = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a95)
  store %struct.Memory* %call_4a4a95, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 4a4a9b	 Bytes: 3
  %loadMem_4a4a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a9b = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a9b)
  store %struct.Memory* %call_4a4a9b, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a4a9e	 Bytes: 3
  %loadMem_4a4a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4a9e = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4a9e)
  store %struct.Memory* %call_4a4a9e, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 4a4aa1	 Bytes: 4
  %loadMem_4a4aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4aa1 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4aa1)
  store %struct.Memory* %call_4a4aa1, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %edi	 RIP: 4a4aa5	 Bytes: 6
  %loadMem_4a4aa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4aa5 = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4aa5)
  store %struct.Memory* %call_4a4aa5, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4a4aab	 Bytes: 3
  %loadMem_4a4aab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4aab = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4aab)
  store %struct.Memory* %call_4a4aab, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a4aae	 Bytes: 3
  %loadMem_4a4aae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4aae = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4aae)
  store %struct.Memory* %call_4a4aae, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 4a4ab1	 Bytes: 5
  %loadMem_4a4ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ab1 = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ab1)
  store %struct.Memory* %call_4a4ab1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a4ab6	 Bytes: 8
  %loadMem_4a4ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ab6 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ab6)
  store %struct.Memory* %call_4a4ab6, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 4a4abe	 Bytes: 7
  %loadMem_4a4abe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4abe = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4abe)
  store %struct.Memory* %call_4a4abe, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rsi	 RIP: 4a4ac5	 Bytes: 7
  %loadMem_4a4ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ac5 = call %struct.Memory* @routine_addq__0x800___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ac5)
  store %struct.Memory* %call_4a4ac5, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %r8	 RIP: 4a4acc	 Bytes: 7
  %loadMem_4a4acc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4acc = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4acc)
  store %struct.Memory* %call_4a4acc, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 4a4ad3	 Bytes: 4
  %loadMem_4a4ad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ad3 = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ad3)
  store %struct.Memory* %call_4a4ad3, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4a4ad7	 Bytes: 3
  %loadMem_4a4ad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ad7 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ad7)
  store %struct.Memory* %call_4a4ad7, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r9d	 RIP: 4a4ada	 Bytes: 7
  %loadMem_4a4ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ada = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ada)
  store %struct.Memory* %call_4a4ada, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 4a4ae1	 Bytes: 4
  %loadMem_4a4ae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ae1 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ae1)
  store %struct.Memory* %call_4a4ae1, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 4a4ae5	 Bytes: 3
  %loadMem_4a4ae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ae5 = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ae5)
  store %struct.Memory* %call_4a4ae5, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 4a4ae8	 Bytes: 4
  %loadMem_4a4ae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ae8 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ae8)
  store %struct.Memory* %call_4a4ae8, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4a4aec	 Bytes: 3
  %loadMem_4a4aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4aec = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4aec)
  store %struct.Memory* %call_4a4aec, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r9d	 RIP: 4a4aef	 Bytes: 7
  %loadMem_4a4aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4aef = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4aef)
  store %struct.Memory* %call_4a4aef, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 4a4af6	 Bytes: 4
  %loadMem_4a4af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4af6 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4af6)
  store %struct.Memory* %call_4a4af6, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 4a4afa	 Bytes: 3
  %loadMem_4a4afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4afa = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4afa)
  store %struct.Memory* %call_4a4afa, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 4a4afd	 Bytes: 5
  %loadMem_4a4afd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4afd = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4afd)
  store %struct.Memory* %call_4a4afd, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 4a4b02	 Bytes: 3
  %loadMem_4a4b02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b02 = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b02)
  store %struct.Memory* %call_4a4b02, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x25c(%rbp)	 RIP: 4a4b05	 Bytes: 6
  %loadMem_4a4b05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b05 = call %struct.Memory* @routine_movl__edi__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b05)
  store %struct.Memory* %call_4a4b05, %struct.Memory** %MEMORY

  ; Code: movl -0x25c(%rbp), %edi	 RIP: 4a4b0b	 Bytes: 6
  %loadMem_4a4b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b0b = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b0b)
  store %struct.Memory* %call_4a4b0b, %struct.Memory** %MEMORY

  ; Code: subl -0x264(%rbp), %edi	 RIP: 4a4b11	 Bytes: 6
  %loadMem_4a4b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b11 = call %struct.Memory* @routine_subl_MINUS0x264__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b11)
  store %struct.Memory* %call_4a4b11, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a4b17	 Bytes: 4
  %loadMem_4a4b17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b17 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b17)
  store %struct.Memory* %call_4a4b17, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a4b1b	 Bytes: 4
  %loadMem_4a4b1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b1b = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b1b)
  store %struct.Memory* %call_4a4b1b, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r8	 RIP: 4a4b1f	 Bytes: 3
  %loadMem_4a4b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b1f = call %struct.Memory* @routine_movq__rdx___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b1f)
  store %struct.Memory* %call_4a4b1f, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %r8	 RIP: 4a4b22	 Bytes: 3
  %loadMem_4a4b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b22 = call %struct.Memory* @routine_addq__rsi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b22)
  store %struct.Memory* %call_4a4b22, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a4b25	 Bytes: 4
  %loadMem_4a4b25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b25 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b25)
  store %struct.Memory* %call_4a4b25, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%r8,%rsi,4)	 RIP: 4a4b29	 Bytes: 4
  %loadMem_4a4b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b29 = call %struct.Memory* @routine_movl__edi____r8__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b29)
  store %struct.Memory* %call_4a4b29, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %edi	 RIP: 4a4b2d	 Bytes: 6
  %loadMem_4a4b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b2d = call %struct.Memory* @routine_movl_MINUS0x264__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b2d)
  store %struct.Memory* %call_4a4b2d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a4b33	 Bytes: 4
  %loadMem_4a4b33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b33 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b33)
  store %struct.Memory* %call_4a4b33, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a4b37	 Bytes: 4
  %loadMem_4a4b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b37 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b37)
  store %struct.Memory* %call_4a4b37, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a4b3b	 Bytes: 3
  %loadMem_4a4b3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b3b = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b3b)
  store %struct.Memory* %call_4a4b3b, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a4b3e	 Bytes: 4
  %loadMem_4a4b3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b3e = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b3e)
  store %struct.Memory* %call_4a4b3e, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %r9d	 RIP: 4a4b42	 Bytes: 4
  %loadMem_4a4b42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b42 = call %struct.Memory* @routine_movl___rdx__rsi_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b42)
  store %struct.Memory* %call_4a4b42, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4a4b46	 Bytes: 4
  %loadMem_4a4b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b46 = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b46)
  store %struct.Memory* %call_4a4b46, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %edi	 RIP: 4a4b4a	 Bytes: 3
  %loadMem_4a4b4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b4a = call %struct.Memory* @routine_addl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b4a)
  store %struct.Memory* %call_4a4b4a, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x270(%rbp)	 RIP: 4a4b4d	 Bytes: 6
  %loadMem_4a4b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b4d = call %struct.Memory* @routine_movl__edi__MINUS0x270__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b4d)
  store %struct.Memory* %call_4a4b4d, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %edi	 RIP: 4a4b53	 Bytes: 6
  %loadMem_4a4b53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b53 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b53)
  store %struct.Memory* %call_4a4b53, %struct.Memory** %MEMORY

  ; Code: subl -0x270(%rbp), %edi	 RIP: 4a4b59	 Bytes: 6
  %loadMem_4a4b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b59 = call %struct.Memory* @routine_subl_MINUS0x270__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b59)
  store %struct.Memory* %call_4a4b59, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a4b5f	 Bytes: 4
  %loadMem_4a4b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b5f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b5f)
  store %struct.Memory* %call_4a4b5f, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a4b63	 Bytes: 4
  %loadMem_4a4b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b63 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b63)
  store %struct.Memory* %call_4a4b63, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 4a4b67	 Bytes: 3
  %loadMem_4a4b67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b67 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b67)
  store %struct.Memory* %call_4a4b67, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4a4b6a	 Bytes: 3
  %loadMem_4a4b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b6a = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b6a)
  store %struct.Memory* %call_4a4b6a, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a4b6d	 Bytes: 4
  %loadMem_4a4b6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b6d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b6d)
  store %struct.Memory* %call_4a4b6d, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rsi,%rdx,4)	 RIP: 4a4b71	 Bytes: 3
  %loadMem_4a4b71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b71 = call %struct.Memory* @routine_movl__edi____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b71)
  store %struct.Memory* %call_4a4b71, %struct.Memory** %MEMORY

  ; Code: movl -0x270(%rbp), %edi	 RIP: 4a4b74	 Bytes: 6
  %loadMem_4a4b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b74 = call %struct.Memory* @routine_movl_MINUS0x270__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b74)
  store %struct.Memory* %call_4a4b74, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a4b7a	 Bytes: 4
  %loadMem_4a4b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b7a = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b7a)
  store %struct.Memory* %call_4a4b7a, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a4b7e	 Bytes: 4
  %loadMem_4a4b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b7e = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b7e)
  store %struct.Memory* %call_4a4b7e, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a4b82	 Bytes: 3
  %loadMem_4a4b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b82 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b82)
  store %struct.Memory* %call_4a4b82, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a4b85	 Bytes: 4
  %loadMem_4a4b85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b85 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b85)
  store %struct.Memory* %call_4a4b85, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %r9d	 RIP: 4a4b89	 Bytes: 4
  %loadMem_4a4b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b89 = call %struct.Memory* @routine_movl___rcx__rdx_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b89)
  store %struct.Memory* %call_4a4b89, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4a4b8d	 Bytes: 4
  %loadMem_4a4b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b8d = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b8d)
  store %struct.Memory* %call_4a4b8d, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %edi	 RIP: 4a4b91	 Bytes: 3
  %loadMem_4a4b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b91 = call %struct.Memory* @routine_addl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b91)
  store %struct.Memory* %call_4a4b91, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4b94	 Bytes: 4
  %loadMem_4a4b94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b94 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b94)
  store %struct.Memory* %call_4a4b94, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a4b98	 Bytes: 4
  %loadMem_4a4b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b98 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b98)
  store %struct.Memory* %call_4a4b98, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4b9c	 Bytes: 3
  %loadMem_4a4b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b9c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b9c)
  store %struct.Memory* %call_4a4b9c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4b9f	 Bytes: 4
  %loadMem_4a4b9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4b9f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4b9f)
  store %struct.Memory* %call_4a4b9f, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 4a4ba3	 Bytes: 3
  %loadMem_4a4ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ba3 = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ba3)
  store %struct.Memory* %call_4a4ba3, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a4ba6	 Bytes: 3
  %loadMem_4a4ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ba6 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ba6)
  store %struct.Memory* %call_4a4ba6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4ba9	 Bytes: 3
  %loadMem_4a4ba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ba9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ba9)
  store %struct.Memory* %call_4a4ba9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a4bac	 Bytes: 3
  %loadMem_4a4bac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bac = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bac)
  store %struct.Memory* %call_4a4bac, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4987	 RIP: 4a4baf	 Bytes: 5
  %loadMem_4a4baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4baf = call %struct.Memory* @routine_jmpq_.L_4a4987(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4baf, i64 -552, i64 5)
  store %struct.Memory* %call_4a4baf, %struct.Memory** %MEMORY

  br label %block_.L_4a4987

  ; Code: .L_4a4bb4:	 RIP: 4a4bb4	 Bytes: 0
block_.L_4a4bb4:

  ; Code: jmpq .L_4a4bb9	 RIP: 4a4bb4	 Bytes: 5
  %loadMem_4a4bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bb4 = call %struct.Memory* @routine_jmpq_.L_4a4bb9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bb4, i64 5, i64 5)
  store %struct.Memory* %call_4a4bb4, %struct.Memory** %MEMORY

  br label %block_.L_4a4bb9

  ; Code: .L_4a4bb9:	 RIP: 4a4bb9	 Bytes: 0
block_.L_4a4bb9:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a4bb9	 Bytes: 3
  %loadMem_4a4bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bb9 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bb9)
  store %struct.Memory* %call_4a4bb9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4bbc	 Bytes: 3
  %loadMem_4a4bbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bbc = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bbc)
  store %struct.Memory* %call_4a4bbc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a4bbf	 Bytes: 3
  %loadMem_4a4bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bbf = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bbf)
  store %struct.Memory* %call_4a4bbf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4976	 RIP: 4a4bc2	 Bytes: 5
  %loadMem_4a4bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bc2 = call %struct.Memory* @routine_jmpq_.L_4a4976(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bc2, i64 -588, i64 5)
  store %struct.Memory* %call_4a4bc2, %struct.Memory** %MEMORY

  br label %block_.L_4a4976

  ; Code: .L_4a4bc7:	 RIP: 4a4bc7	 Bytes: 0
block_.L_4a4bc7:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a4bc7	 Bytes: 7
  %loadMem_4a4bc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bc7 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bc7)
  store %struct.Memory* %call_4a4bc7, %struct.Memory** %MEMORY

  ; Code: .L_4a4bce:	 RIP: 4a4bce	 Bytes: 0
  br label %block_.L_4a4bce
block_.L_4a4bce:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a4bce	 Bytes: 4
  %loadMem_4a4bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bce = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bce)
  store %struct.Memory* %call_4a4bce, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4c46	 RIP: 4a4bd2	 Bytes: 6
  %loadMem_4a4bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bd2 = call %struct.Memory* @routine_jge_.L_4a4c46(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bd2, i8* %BRANCH_TAKEN, i64 116, i64 6, i64 6)
  store %struct.Memory* %call_4a4bd2, %struct.Memory** %MEMORY

  %loadBr_4a4bd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4bd2 = icmp eq i8 %loadBr_4a4bd2, 1
  br i1 %cmpBr_4a4bd2, label %block_.L_4a4c46, label %block_4a4bd8

block_4a4bd8:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4bd8	 Bytes: 7
  %loadMem_4a4bd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bd8 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bd8)
  store %struct.Memory* %call_4a4bd8, %struct.Memory** %MEMORY

  ; Code: .L_4a4bdf:	 RIP: 4a4bdf	 Bytes: 0
  br label %block_.L_4a4bdf
block_.L_4a4bdf:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a4bdf	 Bytes: 4
  %loadMem_4a4bdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bdf = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bdf)
  store %struct.Memory* %call_4a4bdf, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4c33	 RIP: 4a4be3	 Bytes: 6
  %loadMem_4a4be3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4be3 = call %struct.Memory* @routine_jge_.L_4a4c33(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4be3, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_4a4be3, %struct.Memory** %MEMORY

  %loadBr_4a4be3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4be3 = icmp eq i8 %loadBr_4a4be3, 1
  br i1 %cmpBr_4a4be3, label %block_.L_4a4c33, label %block_4a4be9

block_4a4be9:
  ; Code: movq $0x723720, %rax	 RIP: 4a4be9	 Bytes: 10
  %loadMem_4a4be9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4be9 = call %struct.Memory* @routine_movq__0x723720___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4be9)
  store %struct.Memory* %call_4a4be9, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4bf3	 Bytes: 4
  %loadMem_4a4bf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bf3 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bf3)
  store %struct.Memory* %call_4a4bf3, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a4bf7	 Bytes: 4
  %loadMem_4a4bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bf7 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bf7)
  store %struct.Memory* %call_4a4bf7, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4bfb	 Bytes: 3
  %loadMem_4a4bfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bfb = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bfb)
  store %struct.Memory* %call_4a4bfb, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4bfe	 Bytes: 4
  %loadMem_4a4bfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4bfe = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4bfe)
  store %struct.Memory* %call_4a4bfe, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a4c02	 Bytes: 3
  %loadMem_4a4c02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c02 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c02)
  store %struct.Memory* %call_4a4c02, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a4c05	 Bytes: 8
  %loadMem_4a4c05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c05 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c05)
  store %struct.Memory* %call_4a4c05, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4a4c0d	 Bytes: 6
  %loadMem_4a4c0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c0d = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c0d)
  store %struct.Memory* %call_4a4c0d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4c13	 Bytes: 4
  %loadMem_4a4c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c13 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c13)
  store %struct.Memory* %call_4a4c13, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a4c17	 Bytes: 4
  %loadMem_4a4c17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c17 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c17)
  store %struct.Memory* %call_4a4c17, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4c1b	 Bytes: 3
  %loadMem_4a4c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c1b = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c1b)
  store %struct.Memory* %call_4a4c1b, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4c1e	 Bytes: 4
  %loadMem_4a4c1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c1e = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c1e)
  store %struct.Memory* %call_4a4c1e, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a4c22	 Bytes: 3
  %loadMem_4a4c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c22 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c22)
  store %struct.Memory* %call_4a4c22, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a4c25	 Bytes: 3
  %loadMem_4a4c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c25 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c25)
  store %struct.Memory* %call_4a4c25, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4c28	 Bytes: 3
  %loadMem_4a4c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c28 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c28)
  store %struct.Memory* %call_4a4c28, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a4c2b	 Bytes: 3
  %loadMem_4a4c2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c2b = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c2b)
  store %struct.Memory* %call_4a4c2b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4bdf	 RIP: 4a4c2e	 Bytes: 5
  %loadMem_4a4c2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c2e = call %struct.Memory* @routine_jmpq_.L_4a4bdf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c2e, i64 -79, i64 5)
  store %struct.Memory* %call_4a4c2e, %struct.Memory** %MEMORY

  br label %block_.L_4a4bdf

  ; Code: .L_4a4c33:	 RIP: 4a4c33	 Bytes: 0
block_.L_4a4c33:

  ; Code: jmpq .L_4a4c38	 RIP: 4a4c33	 Bytes: 5
  %loadMem_4a4c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c33 = call %struct.Memory* @routine_jmpq_.L_4a4c38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c33, i64 5, i64 5)
  store %struct.Memory* %call_4a4c33, %struct.Memory** %MEMORY

  br label %block_.L_4a4c38

  ; Code: .L_4a4c38:	 RIP: 4a4c38	 Bytes: 0
block_.L_4a4c38:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a4c38	 Bytes: 3
  %loadMem_4a4c38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c38 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c38)
  store %struct.Memory* %call_4a4c38, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4c3b	 Bytes: 3
  %loadMem_4a4c3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c3b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c3b)
  store %struct.Memory* %call_4a4c3b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a4c3e	 Bytes: 3
  %loadMem_4a4c3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c3e = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c3e)
  store %struct.Memory* %call_4a4c3e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4bce	 RIP: 4a4c41	 Bytes: 5
  %loadMem_4a4c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c41 = call %struct.Memory* @routine_jmpq_.L_4a4bce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c41, i64 -115, i64 5)
  store %struct.Memory* %call_4a4c41, %struct.Memory** %MEMORY

  br label %block_.L_4a4bce

  ; Code: .L_4a4c46:	 RIP: 4a4c46	 Bytes: 0
block_.L_4a4c46:

  ; Code: movb $0x0, %al	 RIP: 4a4c46	 Bytes: 2
  %loadMem_4a4c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c46 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c46)
  store %struct.Memory* %call_4a4c46, %struct.Memory** %MEMORY

  ; Code: callq .store_coding_state_cs_cm	 RIP: 4a4c48	 Bytes: 5
  %loadMem1_4a4c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4c48 = call %struct.Memory* @routine_callq_.store_coding_state_cs_cm(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4c48, i64 -30120, i64 5, i64 5)
  store %struct.Memory* %call1_4a4c48, %struct.Memory** %MEMORY

  %loadMem2_4a4c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4c48 = load i64, i64* %3
  %call2_4a4c48 = call %struct.Memory* @sub_49d6a0.store_coding_state_cs_cm(%struct.State* %0, i64  %loadPC_4a4c48, %struct.Memory* %loadMem2_4a4c48)
  store %struct.Memory* %call2_4a4c48, %struct.Memory** %MEMORY

  ; Code: leaq -0x48(%rbp), %rdi	 RIP: 4a4c4d	 Bytes: 4
  %loadMem_4a4c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c4d = call %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c4d)
  store %struct.Memory* %call_4a4c4d, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4a4c51	 Bytes: 3
  %loadMem_4a4c51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c51 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c51)
  store %struct.Memory* %call_4a4c51, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %edx	 RIP: 4a4c54	 Bytes: 3
  %loadMem_4a4c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c54 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c54)
  store %struct.Memory* %call_4a4c54, %struct.Memory** %MEMORY

  ; Code: movsd -0x18(%rbp), %xmm0	 RIP: 4a4c57	 Bytes: 5
  %loadMem_4a4c57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c57 = call %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c57)
  store %struct.Memory* %call_4a4c57, %struct.Memory** %MEMORY

  ; Code: movsd -0x208(%rbp), %xmm1	 RIP: 4a4c5c	 Bytes: 8
  %loadMem_4a4c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c5c = call %struct.Memory* @routine_movsd_MINUS0x208__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c5c)
  store %struct.Memory* %call_4a4c5c, %struct.Memory** %MEMORY

  ; Code: movl -0x228(%rbp), %ecx	 RIP: 4a4c64	 Bytes: 6
  %loadMem_4a4c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c64 = call %struct.Memory* @routine_movl_MINUS0x228__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c64)
  store %struct.Memory* %call_4a4c64, %struct.Memory** %MEMORY

  ; Code: callq .RDCost_for_8x8IntraBlocks	 RIP: 4a4c6a	 Bytes: 5
  %loadMem1_4a4c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4c6a = call %struct.Memory* @routine_callq_.RDCost_for_8x8IntraBlocks(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4c6a, i64 22150, i64 5, i64 5)
  store %struct.Memory* %call1_4a4c6a, %struct.Memory** %MEMORY

  %loadMem2_4a4c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4c6a = load i64, i64* %3
  %call2_4a4c6a = call %struct.Memory* @sub_4aa2f0.RDCost_for_8x8IntraBlocks(%struct.State* %0, i64  %loadPC_4a4c6a, %struct.Memory* %loadMem2_4a4c6a)
  store %struct.Memory* %call2_4a4c6a, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %ecx	 RIP: 4a4c6f	 Bytes: 4
  %loadMem_4a4c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c6f = call %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c6f)
  store %struct.Memory* %call_4a4c6f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x268(%rbp)	 RIP: 4a4c73	 Bytes: 6
  %loadMem_4a4c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c73 = call %struct.Memory* @routine_movl__ecx__MINUS0x268__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c73)
  store %struct.Memory* %call_4a4c73, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4a4c79	 Bytes: 2
  %loadMem_4a4c79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c79 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c79)
  store %struct.Memory* %call_4a4c79, %struct.Memory** %MEMORY

  ; Code: callq .reset_coding_state_cs_cm	 RIP: 4a4c7b	 Bytes: 5
  %loadMem1_4a4c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4c7b = call %struct.Memory* @routine_callq_.reset_coding_state_cs_cm(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4c7b, i64 -30139, i64 5, i64 5)
  store %struct.Memory* %call1_4a4c7b, %struct.Memory** %MEMORY

  %loadMem2_4a4c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4c7b = load i64, i64* %3
  %call2_4a4c7b = call %struct.Memory* @sub_49d6c0.reset_coding_state_cs_cm(%struct.State* %0, i64  %loadPC_4a4c7b, %struct.Memory* %loadMem2_4a4c7b)
  store %struct.Memory* %call2_4a4c7b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a4c80	 Bytes: 7
  %loadMem_4a4c80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c80 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c80)
  store %struct.Memory* %call_4a4c80, %struct.Memory** %MEMORY

  ; Code: .L_4a4c87:	 RIP: 4a4c87	 Bytes: 0
  br label %block_.L_4a4c87
block_.L_4a4c87:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a4c87	 Bytes: 4
  %loadMem_4a4c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c87 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c87)
  store %struct.Memory* %call_4a4c87, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4d00	 RIP: 4a4c8b	 Bytes: 6
  %loadMem_4a4c8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c8b = call %struct.Memory* @routine_jge_.L_4a4d00(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c8b, i8* %BRANCH_TAKEN, i64 117, i64 6, i64 6)
  store %struct.Memory* %call_4a4c8b, %struct.Memory** %MEMORY

  %loadBr_4a4c8b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4c8b = icmp eq i8 %loadBr_4a4c8b, 1
  br i1 %cmpBr_4a4c8b, label %block_.L_4a4d00, label %block_4a4c91

block_4a4c91:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4c91	 Bytes: 7
  %loadMem_4a4c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c91 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c91)
  store %struct.Memory* %call_4a4c91, %struct.Memory** %MEMORY

  ; Code: .L_4a4c98:	 RIP: 4a4c98	 Bytes: 0
  br label %block_.L_4a4c98
block_.L_4a4c98:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a4c98	 Bytes: 4
  %loadMem_4a4c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c98 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c98)
  store %struct.Memory* %call_4a4c98, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4ced	 RIP: 4a4c9c	 Bytes: 6
  %loadMem_4a4c9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4c9c = call %struct.Memory* @routine_jge_.L_4a4ced(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4c9c, i8* %BRANCH_TAKEN, i64 81, i64 6, i64 6)
  store %struct.Memory* %call_4a4c9c, %struct.Memory** %MEMORY

  %loadBr_4a4c9c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4c9c = icmp eq i8 %loadBr_4a4c9c, 1
  br i1 %cmpBr_4a4c9c, label %block_.L_4a4ced, label %block_4a4ca2

block_4a4ca2:
  ; Code: movq $0x722ff0, %rax	 RIP: 4a4ca2	 Bytes: 10
  %loadMem_4a4ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ca2 = call %struct.Memory* @routine_movq__0x722ff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ca2)
  store %struct.Memory* %call_4a4ca2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a4cac	 Bytes: 8
  %loadMem_4a4cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cac = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cac)
  store %struct.Memory* %call_4a4cac, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 4a4cb4	 Bytes: 7
  %loadMem_4a4cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cb4 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cb4)
  store %struct.Memory* %call_4a4cb4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a4cbb	 Bytes: 4
  %loadMem_4a4cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cbb = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cbb)
  store %struct.Memory* %call_4a4cbb, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a4cbf	 Bytes: 4
  %loadMem_4a4cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cbf = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cbf)
  store %struct.Memory* %call_4a4cbf, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a4cc3	 Bytes: 3
  %loadMem_4a4cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cc3 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cc3)
  store %struct.Memory* %call_4a4cc3, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a4cc6	 Bytes: 4
  %loadMem_4a4cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cc6 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cc6)
  store %struct.Memory* %call_4a4cc6, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 4a4cca	 Bytes: 3
  %loadMem_4a4cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cca = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cca)
  store %struct.Memory* %call_4a4cca, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4ccd	 Bytes: 4
  %loadMem_4a4ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ccd = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ccd)
  store %struct.Memory* %call_4a4ccd, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a4cd1	 Bytes: 4
  %loadMem_4a4cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cd1 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cd1)
  store %struct.Memory* %call_4a4cd1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4cd5	 Bytes: 3
  %loadMem_4a4cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cd5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cd5)
  store %struct.Memory* %call_4a4cd5, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4cd8	 Bytes: 4
  %loadMem_4a4cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cd8 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cd8)
  store %struct.Memory* %call_4a4cd8, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4a4cdc	 Bytes: 3
  %loadMem_4a4cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cdc = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cdc)
  store %struct.Memory* %call_4a4cdc, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a4cdf	 Bytes: 3
  %loadMem_4a4cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cdf = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cdf)
  store %struct.Memory* %call_4a4cdf, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4ce2	 Bytes: 3
  %loadMem_4a4ce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ce2 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ce2)
  store %struct.Memory* %call_4a4ce2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a4ce5	 Bytes: 3
  %loadMem_4a4ce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ce5 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ce5)
  store %struct.Memory* %call_4a4ce5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4c98	 RIP: 4a4ce8	 Bytes: 5
  %loadMem_4a4ce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ce8 = call %struct.Memory* @routine_jmpq_.L_4a4c98(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ce8, i64 -80, i64 5)
  store %struct.Memory* %call_4a4ce8, %struct.Memory** %MEMORY

  br label %block_.L_4a4c98

  ; Code: .L_4a4ced:	 RIP: 4a4ced	 Bytes: 0
block_.L_4a4ced:

  ; Code: jmpq .L_4a4cf2	 RIP: 4a4ced	 Bytes: 5
  %loadMem_4a4ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ced = call %struct.Memory* @routine_jmpq_.L_4a4cf2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ced, i64 5, i64 5)
  store %struct.Memory* %call_4a4ced, %struct.Memory** %MEMORY

  br label %block_.L_4a4cf2

  ; Code: .L_4a4cf2:	 RIP: 4a4cf2	 Bytes: 0
block_.L_4a4cf2:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a4cf2	 Bytes: 3
  %loadMem_4a4cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cf2 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cf2)
  store %struct.Memory* %call_4a4cf2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4cf5	 Bytes: 3
  %loadMem_4a4cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cf5 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cf5)
  store %struct.Memory* %call_4a4cf5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a4cf8	 Bytes: 3
  %loadMem_4a4cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cf8 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cf8)
  store %struct.Memory* %call_4a4cf8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4c87	 RIP: 4a4cfb	 Bytes: 5
  %loadMem_4a4cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4cfb = call %struct.Memory* @routine_jmpq_.L_4a4c87(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4cfb, i64 -116, i64 5)
  store %struct.Memory* %call_4a4cfb, %struct.Memory** %MEMORY

  br label %block_.L_4a4c87

  ; Code: .L_4a4d00:	 RIP: 4a4d00	 Bytes: 0
block_.L_4a4d00:

  ; Code: movb $0x0, %al	 RIP: 4a4d00	 Bytes: 2
  %loadMem_4a4d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d00 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d00)
  store %struct.Memory* %call_4a4d00, %struct.Memory** %MEMORY

  ; Code: callq .store_coding_state_cs_cm	 RIP: 4a4d02	 Bytes: 5
  %loadMem1_4a4d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4d02 = call %struct.Memory* @routine_callq_.store_coding_state_cs_cm(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4d02, i64 -30306, i64 5, i64 5)
  store %struct.Memory* %call1_4a4d02, %struct.Memory** %MEMORY

  %loadMem2_4a4d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4d02 = load i64, i64* %3
  %call2_4a4d02 = call %struct.Memory* @sub_49d6a0.store_coding_state_cs_cm(%struct.State* %0, i64  %loadPC_4a4d02, %struct.Memory* %loadMem2_4a4d02)
  store %struct.Memory* %call2_4a4d02, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x274(%rbp)	 RIP: 4a4d07	 Bytes: 10
  %loadMem_4a4d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d07 = call %struct.Memory* @routine_movl__0x0__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d07)
  store %struct.Memory* %call_4a4d07, %struct.Memory** %MEMORY

  ; Code: .L_4a4d11:	 RIP: 4a4d11	 Bytes: 0
  br label %block_.L_4a4d11
block_.L_4a4d11:

  ; Code: cmpl $0x4, -0x274(%rbp)	 RIP: 4a4d11	 Bytes: 7
  %loadMem_4a4d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d11 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d11)
  store %struct.Memory* %call_4a4d11, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4fb4	 RIP: 4a4d18	 Bytes: 6
  %loadMem_4a4d18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d18 = call %struct.Memory* @routine_jge_.L_4a4fb4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d18, i8* %BRANCH_TAKEN, i64 668, i64 6, i64 6)
  store %struct.Memory* %call_4a4d18, %struct.Memory** %MEMORY

  %loadBr_4a4d18 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4d18 = icmp eq i8 %loadBr_4a4d18, 1
  br i1 %cmpBr_4a4d18, label %block_.L_4a4fb4, label %block_4a4d1e

block_4a4d1e:
  ; Code: movl $0x2, %eax	 RIP: 4a4d1e	 Bytes: 5
  %loadMem_4a4d1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d1e = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d1e)
  store %struct.Memory* %call_4a4d1e, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %ecx	 RIP: 4a4d23	 Bytes: 6
  %loadMem_4a4d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d23 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d23)
  store %struct.Memory* %call_4a4d23, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c4(%rbp)	 RIP: 4a4d29	 Bytes: 6
  %loadMem_4a4d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d29 = call %struct.Memory* @routine_movl__eax__MINUS0x4c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d29)
  store %struct.Memory* %call_4a4d29, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4a4d2f	 Bytes: 2
  %loadMem_4a4d2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d2f = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d2f)
  store %struct.Memory* %call_4a4d2f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a4d31	 Bytes: 1
  %loadMem_4a4d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d31 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d31)
  store %struct.Memory* %call_4a4d31, %struct.Memory** %MEMORY

  ; Code: movl -0x4c4(%rbp), %ecx	 RIP: 4a4d32	 Bytes: 6
  %loadMem_4a4d32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d32 = call %struct.Memory* @routine_movl_MINUS0x4c4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d32)
  store %struct.Memory* %call_4a4d32, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a4d38	 Bytes: 2
  %loadMem_4a4d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d38 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d38)
  store %struct.Memory* %call_4a4d38, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %edx	 RIP: 4a4d3a	 Bytes: 3
  %loadMem_4a4d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d3a = call %struct.Memory* @routine_shll__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d3a)
  store %struct.Memory* %call_4a4d3a, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1dc(%rbp)	 RIP: 4a4d3d	 Bytes: 6
  %loadMem_4a4d3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d3d = call %struct.Memory* @routine_movl__edx__MINUS0x1dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d3d)
  store %struct.Memory* %call_4a4d3d, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edx	 RIP: 4a4d43	 Bytes: 6
  %loadMem_4a4d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d43 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d43)
  store %struct.Memory* %call_4a4d43, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a4d49	 Bytes: 2
  %loadMem_4a4d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d49 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d49)
  store %struct.Memory* %call_4a4d49, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a4d4b	 Bytes: 1
  %loadMem_4a4d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d4b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d4b)
  store %struct.Memory* %call_4a4d4b, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a4d4c	 Bytes: 2
  %loadMem_4a4d4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d4c = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d4c)
  store %struct.Memory* %call_4a4d4c, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 4a4d4e	 Bytes: 3
  %loadMem_4a4d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d4e = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d4e)
  store %struct.Memory* %call_4a4d4e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e0(%rbp)	 RIP: 4a4d51	 Bytes: 6
  %loadMem_4a4d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d51 = call %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d51)
  store %struct.Memory* %call_4a4d51, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a4d57	 Bytes: 7
  %loadMem_4a4d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d57 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d57)
  store %struct.Memory* %call_4a4d57, %struct.Memory** %MEMORY

  ; Code: .L_4a4d5e:	 RIP: 4a4d5e	 Bytes: 0
  br label %block_.L_4a4d5e
block_.L_4a4d5e:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4a4d5e	 Bytes: 4
  %loadMem_4a4d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d5e = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d5e)
  store %struct.Memory* %call_4a4d5e, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4de6	 RIP: 4a4d62	 Bytes: 6
  %loadMem_4a4d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d62 = call %struct.Memory* @routine_jge_.L_4a4de6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d62, i8* %BRANCH_TAKEN, i64 132, i64 6, i64 6)
  store %struct.Memory* %call_4a4d62, %struct.Memory** %MEMORY

  %loadBr_4a4d62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4d62 = icmp eq i8 %loadBr_4a4d62, 1
  br i1 %cmpBr_4a4d62, label %block_.L_4a4de6, label %block_4a4d68

block_4a4d68:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4d68	 Bytes: 7
  %loadMem_4a4d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d68 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d68)
  store %struct.Memory* %call_4a4d68, %struct.Memory** %MEMORY

  ; Code: .L_4a4d6f:	 RIP: 4a4d6f	 Bytes: 0
  br label %block_.L_4a4d6f
block_.L_4a4d6f:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4a4d6f	 Bytes: 4
  %loadMem_4a4d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d6f = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d6f)
  store %struct.Memory* %call_4a4d6f, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4dd3	 RIP: 4a4d73	 Bytes: 6
  %loadMem_4a4d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d73 = call %struct.Memory* @routine_jge_.L_4a4dd3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d73, i8* %BRANCH_TAKEN, i64 96, i64 6, i64 6)
  store %struct.Memory* %call_4a4d73, %struct.Memory** %MEMORY

  %loadBr_4a4d73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4d73 = icmp eq i8 %loadBr_4a4d73, 1
  br i1 %cmpBr_4a4d73, label %block_.L_4a4dd3, label %block_4a4d79

block_4a4d79:
  ; Code: movq $0x6f6fa0, %rax	 RIP: 4a4d79	 Bytes: 10
  %loadMem_4a4d79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d79 = call %struct.Memory* @routine_movq__0x6f6fa0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d79)
  store %struct.Memory* %call_4a4d79, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 4a4d83	 Bytes: 3
  %loadMem_4a4d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d83 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d83)
  store %struct.Memory* %call_4a4d83, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %ecx	 RIP: 4a4d86	 Bytes: 6
  %loadMem_4a4d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d86 = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d86)
  store %struct.Memory* %call_4a4d86, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a4d8c	 Bytes: 3
  %loadMem_4a4d8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d8c = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d8c)
  store %struct.Memory* %call_4a4d8c, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a4d8f	 Bytes: 4
  %loadMem_4a4d8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d8f = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d8f)
  store %struct.Memory* %call_4a4d8f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4a4d93	 Bytes: 3
  %loadMem_4a4d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d93 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d93)
  store %struct.Memory* %call_4a4d93, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %ecx	 RIP: 4a4d96	 Bytes: 3
  %loadMem_4a4d96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d96 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d96)
  store %struct.Memory* %call_4a4d96, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %ecx	 RIP: 4a4d99	 Bytes: 6
  %loadMem_4a4d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d99 = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d99)
  store %struct.Memory* %call_4a4d99, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a4d9f	 Bytes: 3
  %loadMem_4a4d9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4d9f = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4d9f)
  store %struct.Memory* %call_4a4d9f, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rdx,4), %ecx	 RIP: 4a4da2	 Bytes: 3
  %loadMem_4a4da2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4da2 = call %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4da2)
  store %struct.Memory* %call_4a4da2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a4da5	 Bytes: 8
  %loadMem_4a4da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4da5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4da5)
  store %struct.Memory* %call_4a4da5, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4a4dad	 Bytes: 6
  %loadMem_4a4dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dad = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dad)
  store %struct.Memory* %call_4a4dad, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a4db3	 Bytes: 4
  %loadMem_4a4db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4db3 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4db3)
  store %struct.Memory* %call_4a4db3, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a4db7	 Bytes: 4
  %loadMem_4a4db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4db7 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4db7)
  store %struct.Memory* %call_4a4db7, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4a4dbb	 Bytes: 3
  %loadMem_4a4dbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dbb = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dbb)
  store %struct.Memory* %call_4a4dbb, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a4dbe	 Bytes: 4
  %loadMem_4a4dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dbe = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dbe)
  store %struct.Memory* %call_4a4dbe, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax,%rdx,4)	 RIP: 4a4dc2	 Bytes: 3
  %loadMem_4a4dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dc2 = call %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dc2)
  store %struct.Memory* %call_4a4dc2, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a4dc5	 Bytes: 3
  %loadMem_4a4dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dc5 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dc5)
  store %struct.Memory* %call_4a4dc5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4dc8	 Bytes: 3
  %loadMem_4a4dc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dc8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dc8)
  store %struct.Memory* %call_4a4dc8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a4dcb	 Bytes: 3
  %loadMem_4a4dcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dcb = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dcb)
  store %struct.Memory* %call_4a4dcb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4d6f	 RIP: 4a4dce	 Bytes: 5
  %loadMem_4a4dce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dce = call %struct.Memory* @routine_jmpq_.L_4a4d6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dce, i64 -95, i64 5)
  store %struct.Memory* %call_4a4dce, %struct.Memory** %MEMORY

  br label %block_.L_4a4d6f

  ; Code: .L_4a4dd3:	 RIP: 4a4dd3	 Bytes: 0
block_.L_4a4dd3:

  ; Code: jmpq .L_4a4dd8	 RIP: 4a4dd3	 Bytes: 5
  %loadMem_4a4dd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dd3 = call %struct.Memory* @routine_jmpq_.L_4a4dd8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dd3, i64 5, i64 5)
  store %struct.Memory* %call_4a4dd3, %struct.Memory** %MEMORY

  br label %block_.L_4a4dd8

  ; Code: .L_4a4dd8:	 RIP: 4a4dd8	 Bytes: 0
block_.L_4a4dd8:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a4dd8	 Bytes: 3
  %loadMem_4a4dd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dd8 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dd8)
  store %struct.Memory* %call_4a4dd8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4ddb	 Bytes: 3
  %loadMem_4a4ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ddb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ddb)
  store %struct.Memory* %call_4a4ddb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a4dde	 Bytes: 3
  %loadMem_4a4dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dde = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dde)
  store %struct.Memory* %call_4a4dde, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4d5e	 RIP: 4a4de1	 Bytes: 5
  %loadMem_4a4de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4de1 = call %struct.Memory* @routine_jmpq_.L_4a4d5e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4de1, i64 -131, i64 5)
  store %struct.Memory* %call_4a4de1, %struct.Memory** %MEMORY

  br label %block_.L_4a4d5e

  ; Code: .L_4a4de6:	 RIP: 4a4de6	 Bytes: 0
block_.L_4a4de6:

  ; Code: xorl %edx, %edx	 RIP: 4a4de6	 Bytes: 2
  %loadMem_4a4de6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4de6 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4de6)
  store %struct.Memory* %call_4a4de6, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4a4de8	 Bytes: 3
  %loadMem_4a4de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4de8 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4de8)
  store %struct.Memory* %call_4a4de8, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 4a4deb	 Bytes: 3
  %loadMem_4a4deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4deb = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4deb)
  store %struct.Memory* %call_4a4deb, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %esi	 RIP: 4a4dee	 Bytes: 6
  %loadMem_4a4dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dee = call %struct.Memory* @routine_movl_MINUS0x274__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dee)
  store %struct.Memory* %call_4a4dee, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4a4df4	 Bytes: 2
  %loadMem_4a4df4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4df4 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4df4)
  store %struct.Memory* %call_4a4df4, %struct.Memory** %MEMORY

  ; Code: callq .RDCost_for_4x4Blocks_Chroma	 RIP: 4a4df6	 Bytes: 5
  %loadMem1_4a4df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4df6 = call %struct.Memory* @routine_callq_.RDCost_for_4x4Blocks_Chroma(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4df6, i64 -137430, i64 5, i64 5)
  store %struct.Memory* %call1_4a4df6, %struct.Memory** %MEMORY

  %loadMem2_4a4df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4df6 = load i64, i64* %3
  %call2_4a4df6 = call %struct.Memory* @sub_483520.RDCost_for_4x4Blocks_Chroma(%struct.State* %0, i64  %loadPC_4a4df6, %struct.Memory* %loadMem2_4a4df6)
  store %struct.Memory* %call2_4a4df6, %struct.Memory** %MEMORY

  ; Code: addl -0x268(%rbp), %eax	 RIP: 4a4dfb	 Bytes: 6
  %loadMem_4a4dfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4dfb = call %struct.Memory* @routine_addl_MINUS0x268__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4dfb)
  store %struct.Memory* %call_4a4dfb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x268(%rbp)	 RIP: 4a4e01	 Bytes: 6
  %loadMem_4a4e01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e01 = call %struct.Memory* @routine_movl__eax__MINUS0x268__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e01)
  store %struct.Memory* %call_4a4e01, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a4e07	 Bytes: 7
  %loadMem_4a4e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e07 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e07)
  store %struct.Memory* %call_4a4e07, %struct.Memory** %MEMORY

  ; Code: .L_4a4e0e:	 RIP: 4a4e0e	 Bytes: 0
  br label %block_.L_4a4e0e
block_.L_4a4e0e:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4a4e0e	 Bytes: 4
  %loadMem_4a4e0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e0e = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e0e)
  store %struct.Memory* %call_4a4e0e, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4ee7	 RIP: 4a4e12	 Bytes: 6
  %loadMem_4a4e12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e12 = call %struct.Memory* @routine_jge_.L_4a4ee7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e12, i8* %BRANCH_TAKEN, i64 213, i64 6, i64 6)
  store %struct.Memory* %call_4a4e12, %struct.Memory** %MEMORY

  %loadBr_4a4e12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4e12 = icmp eq i8 %loadBr_4a4e12, 1
  br i1 %cmpBr_4a4e12, label %block_.L_4a4ee7, label %block_4a4e18

block_4a4e18:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4e18	 Bytes: 7
  %loadMem_4a4e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e18 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e18)
  store %struct.Memory* %call_4a4e18, %struct.Memory** %MEMORY

  ; Code: .L_4a4e1f:	 RIP: 4a4e1f	 Bytes: 0
  br label %block_.L_4a4e1f
block_.L_4a4e1f:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4a4e1f	 Bytes: 4
  %loadMem_4a4e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e1f = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e1f)
  store %struct.Memory* %call_4a4e1f, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4ed4	 RIP: 4a4e23	 Bytes: 6
  %loadMem_4a4e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e23 = call %struct.Memory* @routine_jge_.L_4a4ed4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e23, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_4a4e23, %struct.Memory** %MEMORY

  %loadBr_4a4e23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4e23 = icmp eq i8 %loadBr_4a4e23, 1
  br i1 %cmpBr_4a4e23, label %block_.L_4a4ed4, label %block_4a4e29

block_4a4e29:
  ; Code: movq $0x6d40f0, %rax	 RIP: 4a4e29	 Bytes: 10
  %loadMem_4a4e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e29 = call %struct.Memory* @routine_movq__0x6d40f0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e29)
  store %struct.Memory* %call_4a4e29, %struct.Memory** %MEMORY

  ; Code: movq $0x6f8f20, %rcx	 RIP: 4a4e33	 Bytes: 10
  %loadMem_4a4e33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e33 = call %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e33)
  store %struct.Memory* %call_4a4e33, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a4e3d	 Bytes: 8
  %loadMem_4a4e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e3d = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e3d)
  store %struct.Memory* %call_4a4e3d, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rdx	 RIP: 4a4e45	 Bytes: 7
  %loadMem_4a4e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e45 = call %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e45)
  store %struct.Memory* %call_4a4e45, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a4e4c	 Bytes: 4
  %loadMem_4a4e4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e4c = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e4c)
  store %struct.Memory* %call_4a4e4c, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a4e50	 Bytes: 4
  %loadMem_4a4e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e50 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e50)
  store %struct.Memory* %call_4a4e50, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a4e54	 Bytes: 3
  %loadMem_4a4e54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e54 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e54)
  store %struct.Memory* %call_4a4e54, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a4e57	 Bytes: 4
  %loadMem_4a4e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e57 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e57)
  store %struct.Memory* %call_4a4e57, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %edi	 RIP: 4a4e5b	 Bytes: 3
  %loadMem_4a4e5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e5b = call %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e5b)
  store %struct.Memory* %call_4a4e5b, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %r8d	 RIP: 4a4e5e	 Bytes: 4
  %loadMem_4a4e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e5e = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e5e)
  store %struct.Memory* %call_4a4e5e, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %r8d	 RIP: 4a4e62	 Bytes: 7
  %loadMem_4a4e62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e62 = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e62)
  store %struct.Memory* %call_4a4e62, %struct.Memory** %MEMORY

  ; Code: movslq %r8d, %rdx	 RIP: 4a4e69	 Bytes: 3
  %loadMem_4a4e69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e69 = call %struct.Memory* @routine_movslq__r8d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e69)
  store %struct.Memory* %call_4a4e69, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a4e6c	 Bytes: 4
  %loadMem_4a4e6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e6c = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e6c)
  store %struct.Memory* %call_4a4e6c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a4e70	 Bytes: 3
  %loadMem_4a4e70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e70 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e70)
  store %struct.Memory* %call_4a4e70, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %r8d	 RIP: 4a4e73	 Bytes: 4
  %loadMem_4a4e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e73 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e73)
  store %struct.Memory* %call_4a4e73, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %r8d	 RIP: 4a4e77	 Bytes: 7
  %loadMem_4a4e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e77 = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e77)
  store %struct.Memory* %call_4a4e77, %struct.Memory** %MEMORY

  ; Code: movslq %r8d, %rdx	 RIP: 4a4e7e	 Bytes: 3
  %loadMem_4a4e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e7e = call %struct.Memory* @routine_movslq__r8d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e7e)
  store %struct.Memory* %call_4a4e7e, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rcx,%rdx,4)	 RIP: 4a4e81	 Bytes: 3
  %loadMem_4a4e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e81 = call %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e81)
  store %struct.Memory* %call_4a4e81, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %edi	 RIP: 4a4e84	 Bytes: 3
  %loadMem_4a4e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e84 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e84)
  store %struct.Memory* %call_4a4e84, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %edi	 RIP: 4a4e87	 Bytes: 6
  %loadMem_4a4e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e87 = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e87)
  store %struct.Memory* %call_4a4e87, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rcx	 RIP: 4a4e8d	 Bytes: 3
  %loadMem_4a4e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e8d = call %struct.Memory* @routine_movslq__edi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e8d)
  store %struct.Memory* %call_4a4e8d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a4e90	 Bytes: 4
  %loadMem_4a4e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e90 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e90)
  store %struct.Memory* %call_4a4e90, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4e94	 Bytes: 3
  %loadMem_4a4e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e94 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e94)
  store %struct.Memory* %call_4a4e94, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 4a4e97	 Bytes: 3
  %loadMem_4a4e97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e97 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e97)
  store %struct.Memory* %call_4a4e97, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %edi	 RIP: 4a4e9a	 Bytes: 6
  %loadMem_4a4e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4e9a = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4e9a)
  store %struct.Memory* %call_4a4e9a, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rcx	 RIP: 4a4ea0	 Bytes: 3
  %loadMem_4a4ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ea0 = call %struct.Memory* @routine_movslq__edi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ea0)
  store %struct.Memory* %call_4a4ea0, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 4a4ea3	 Bytes: 3
  %loadMem_4a4ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ea3 = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ea3)
  store %struct.Memory* %call_4a4ea3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a4ea6	 Bytes: 8
  %loadMem_4a4ea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ea6 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ea6)
  store %struct.Memory* %call_4a4ea6, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4a4eae	 Bytes: 6
  %loadMem_4a4eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4eae = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4eae)
  store %struct.Memory* %call_4a4eae, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a4eb4	 Bytes: 4
  %loadMem_4a4eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4eb4 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4eb4)
  store %struct.Memory* %call_4a4eb4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a4eb8	 Bytes: 4
  %loadMem_4a4eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4eb8 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4eb8)
  store %struct.Memory* %call_4a4eb8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4ebc	 Bytes: 3
  %loadMem_4a4ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ebc = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ebc)
  store %struct.Memory* %call_4a4ebc, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a4ebf	 Bytes: 4
  %loadMem_4a4ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ebf = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ebf)
  store %struct.Memory* %call_4a4ebf, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 4a4ec3	 Bytes: 3
  %loadMem_4a4ec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ec3 = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ec3)
  store %struct.Memory* %call_4a4ec3, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a4ec6	 Bytes: 3
  %loadMem_4a4ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ec6 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ec6)
  store %struct.Memory* %call_4a4ec6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4ec9	 Bytes: 3
  %loadMem_4a4ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ec9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ec9)
  store %struct.Memory* %call_4a4ec9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a4ecc	 Bytes: 3
  %loadMem_4a4ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ecc = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ecc)
  store %struct.Memory* %call_4a4ecc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4e1f	 RIP: 4a4ecf	 Bytes: 5
  %loadMem_4a4ecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ecf = call %struct.Memory* @routine_jmpq_.L_4a4e1f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ecf, i64 -176, i64 5)
  store %struct.Memory* %call_4a4ecf, %struct.Memory** %MEMORY

  br label %block_.L_4a4e1f

  ; Code: .L_4a4ed4:	 RIP: 4a4ed4	 Bytes: 0
block_.L_4a4ed4:

  ; Code: jmpq .L_4a4ed9	 RIP: 4a4ed4	 Bytes: 5
  %loadMem_4a4ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ed4 = call %struct.Memory* @routine_jmpq_.L_4a4ed9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ed4, i64 5, i64 5)
  store %struct.Memory* %call_4a4ed4, %struct.Memory** %MEMORY

  br label %block_.L_4a4ed9

  ; Code: .L_4a4ed9:	 RIP: 4a4ed9	 Bytes: 0
block_.L_4a4ed9:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a4ed9	 Bytes: 3
  %loadMem_4a4ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ed9 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ed9)
  store %struct.Memory* %call_4a4ed9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4edc	 Bytes: 3
  %loadMem_4a4edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4edc = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4edc)
  store %struct.Memory* %call_4a4edc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a4edf	 Bytes: 3
  %loadMem_4a4edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4edf = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4edf)
  store %struct.Memory* %call_4a4edf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4e0e	 RIP: 4a4ee2	 Bytes: 5
  %loadMem_4a4ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ee2 = call %struct.Memory* @routine_jmpq_.L_4a4e0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ee2, i64 -212, i64 5)
  store %struct.Memory* %call_4a4ee2, %struct.Memory** %MEMORY

  br label %block_.L_4a4e0e

  ; Code: .L_4a4ee7:	 RIP: 4a4ee7	 Bytes: 0
block_.L_4a4ee7:

  ; Code: movl $0x1, %edx	 RIP: 4a4ee7	 Bytes: 5
  %loadMem_4a4ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ee7 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ee7)
  store %struct.Memory* %call_4a4ee7, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4a4eec	 Bytes: 3
  %loadMem_4a4eec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4eec = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4eec)
  store %struct.Memory* %call_4a4eec, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %eax	 RIP: 4a4eef	 Bytes: 3
  %loadMem_4a4eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4eef = call %struct.Memory* @routine_addl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4eef)
  store %struct.Memory* %call_4a4eef, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %esi	 RIP: 4a4ef2	 Bytes: 6
  %loadMem_4a4ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ef2 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ef2)
  store %struct.Memory* %call_4a4ef2, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4a4ef8	 Bytes: 2
  %loadMem_4a4ef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ef8 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ef8)
  store %struct.Memory* %call_4a4ef8, %struct.Memory** %MEMORY

  ; Code: callq .RDCost_for_4x4Blocks_Chroma	 RIP: 4a4efa	 Bytes: 5
  %loadMem1_4a4efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4efa = call %struct.Memory* @routine_callq_.RDCost_for_4x4Blocks_Chroma(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4efa, i64 -137690, i64 5, i64 5)
  store %struct.Memory* %call1_4a4efa, %struct.Memory** %MEMORY

  %loadMem2_4a4efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4efa = load i64, i64* %3
  %call2_4a4efa = call %struct.Memory* @sub_483520.RDCost_for_4x4Blocks_Chroma(%struct.State* %0, i64  %loadPC_4a4efa, %struct.Memory* %loadMem2_4a4efa)
  store %struct.Memory* %call2_4a4efa, %struct.Memory** %MEMORY

  ; Code: addl -0x268(%rbp), %eax	 RIP: 4a4eff	 Bytes: 6
  %loadMem_4a4eff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4eff = call %struct.Memory* @routine_addl_MINUS0x268__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4eff)
  store %struct.Memory* %call_4a4eff, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x268(%rbp)	 RIP: 4a4f05	 Bytes: 6
  %loadMem_4a4f05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f05 = call %struct.Memory* @routine_movl__eax__MINUS0x268__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f05)
  store %struct.Memory* %call_4a4f05, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a4f0b	 Bytes: 7
  %loadMem_4a4f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f0b = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f0b)
  store %struct.Memory* %call_4a4f0b, %struct.Memory** %MEMORY

  ; Code: .L_4a4f12:	 RIP: 4a4f12	 Bytes: 0
  br label %block_.L_4a4f12
block_.L_4a4f12:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4a4f12	 Bytes: 4
  %loadMem_4a4f12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f12 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f12)
  store %struct.Memory* %call_4a4f12, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4f9b	 RIP: 4a4f16	 Bytes: 6
  %loadMem_4a4f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f16 = call %struct.Memory* @routine_jge_.L_4a4f9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f16, i8* %BRANCH_TAKEN, i64 133, i64 6, i64 6)
  store %struct.Memory* %call_4a4f16, %struct.Memory** %MEMORY

  %loadBr_4a4f16 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4f16 = icmp eq i8 %loadBr_4a4f16, 1
  br i1 %cmpBr_4a4f16, label %block_.L_4a4f9b, label %block_4a4f1c

block_4a4f1c:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4f1c	 Bytes: 7
  %loadMem_4a4f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f1c = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f1c)
  store %struct.Memory* %call_4a4f1c, %struct.Memory** %MEMORY

  ; Code: .L_4a4f23:	 RIP: 4a4f23	 Bytes: 0
  br label %block_.L_4a4f23
block_.L_4a4f23:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4a4f23	 Bytes: 4
  %loadMem_4a4f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f23 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f23)
  store %struct.Memory* %call_4a4f23, %struct.Memory** %MEMORY

  ; Code: jge .L_4a4f88	 RIP: 4a4f27	 Bytes: 6
  %loadMem_4a4f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f27 = call %struct.Memory* @routine_jge_.L_4a4f88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f27, i8* %BRANCH_TAKEN, i64 97, i64 6, i64 6)
  store %struct.Memory* %call_4a4f27, %struct.Memory** %MEMORY

  %loadBr_4a4f27 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4f27 = icmp eq i8 %loadBr_4a4f27, 1
  br i1 %cmpBr_4a4f27, label %block_.L_4a4f88, label %block_4a4f2d

block_4a4f2d:
  ; Code: movq $0x6d2ec0, %rax	 RIP: 4a4f2d	 Bytes: 10
  %loadMem_4a4f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f2d = call %struct.Memory* @routine_movq__0x6d2ec0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f2d)
  store %struct.Memory* %call_4a4f2d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a4f37	 Bytes: 8
  %loadMem_4a4f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f37 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f37)
  store %struct.Memory* %call_4a4f37, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 4a4f3f	 Bytes: 7
  %loadMem_4a4f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f3f = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f3f)
  store %struct.Memory* %call_4a4f3f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a4f46	 Bytes: 4
  %loadMem_4a4f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f46 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f46)
  store %struct.Memory* %call_4a4f46, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a4f4a	 Bytes: 4
  %loadMem_4a4f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f4a = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f4a)
  store %struct.Memory* %call_4a4f4a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a4f4e	 Bytes: 3
  %loadMem_4a4f4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f4e = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f4e)
  store %struct.Memory* %call_4a4f4e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a4f51	 Bytes: 4
  %loadMem_4a4f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f51 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f51)
  store %struct.Memory* %call_4a4f51, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 4a4f55	 Bytes: 3
  %loadMem_4a4f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f55 = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f55)
  store %struct.Memory* %call_4a4f55, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %edi	 RIP: 4a4f58	 Bytes: 3
  %loadMem_4a4f58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f58 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f58)
  store %struct.Memory* %call_4a4f58, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %edi	 RIP: 4a4f5b	 Bytes: 6
  %loadMem_4a4f5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f5b = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f5b)
  store %struct.Memory* %call_4a4f5b, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rcx	 RIP: 4a4f61	 Bytes: 3
  %loadMem_4a4f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f61 = call %struct.Memory* @routine_movslq__edi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f61)
  store %struct.Memory* %call_4a4f61, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a4f64	 Bytes: 4
  %loadMem_4a4f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f64 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f64)
  store %struct.Memory* %call_4a4f64, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a4f68	 Bytes: 3
  %loadMem_4a4f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f68 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f68)
  store %struct.Memory* %call_4a4f68, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 4a4f6b	 Bytes: 3
  %loadMem_4a4f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f6b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f6b)
  store %struct.Memory* %call_4a4f6b, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %edi	 RIP: 4a4f6e	 Bytes: 6
  %loadMem_4a4f6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f6e = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f6e)
  store %struct.Memory* %call_4a4f6e, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rcx	 RIP: 4a4f74	 Bytes: 3
  %loadMem_4a4f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f74 = call %struct.Memory* @routine_movslq__edi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f74)
  store %struct.Memory* %call_4a4f74, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4a4f77	 Bytes: 3
  %loadMem_4a4f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f77 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f77)
  store %struct.Memory* %call_4a4f77, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a4f7a	 Bytes: 3
  %loadMem_4a4f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f7a = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f7a)
  store %struct.Memory* %call_4a4f7a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4f7d	 Bytes: 3
  %loadMem_4a4f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f7d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f7d)
  store %struct.Memory* %call_4a4f7d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a4f80	 Bytes: 3
  %loadMem_4a4f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f80 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f80)
  store %struct.Memory* %call_4a4f80, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4f23	 RIP: 4a4f83	 Bytes: 5
  %loadMem_4a4f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f83 = call %struct.Memory* @routine_jmpq_.L_4a4f23(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f83, i64 -96, i64 5)
  store %struct.Memory* %call_4a4f83, %struct.Memory** %MEMORY

  br label %block_.L_4a4f23

  ; Code: .L_4a4f88:	 RIP: 4a4f88	 Bytes: 0
block_.L_4a4f88:

  ; Code: jmpq .L_4a4f8d	 RIP: 4a4f88	 Bytes: 5
  %loadMem_4a4f88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f88 = call %struct.Memory* @routine_jmpq_.L_4a4f8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f88, i64 5, i64 5)
  store %struct.Memory* %call_4a4f88, %struct.Memory** %MEMORY

  br label %block_.L_4a4f8d

  ; Code: .L_4a4f8d:	 RIP: 4a4f8d	 Bytes: 0
block_.L_4a4f8d:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a4f8d	 Bytes: 3
  %loadMem_4a4f8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f8d = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f8d)
  store %struct.Memory* %call_4a4f8d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4f90	 Bytes: 3
  %loadMem_4a4f90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f90 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f90)
  store %struct.Memory* %call_4a4f90, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a4f93	 Bytes: 3
  %loadMem_4a4f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f93 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f93)
  store %struct.Memory* %call_4a4f93, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4f12	 RIP: 4a4f96	 Bytes: 5
  %loadMem_4a4f96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f96 = call %struct.Memory* @routine_jmpq_.L_4a4f12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f96, i64 -132, i64 5)
  store %struct.Memory* %call_4a4f96, %struct.Memory** %MEMORY

  br label %block_.L_4a4f12

  ; Code: .L_4a4f9b:	 RIP: 4a4f9b	 Bytes: 0
block_.L_4a4f9b:

  ; Code: jmpq .L_4a4fa0	 RIP: 4a4f9b	 Bytes: 5
  %loadMem_4a4f9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4f9b = call %struct.Memory* @routine_jmpq_.L_4a4fa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4f9b, i64 5, i64 5)
  store %struct.Memory* %call_4a4f9b, %struct.Memory** %MEMORY

  br label %block_.L_4a4fa0

  ; Code: .L_4a4fa0:	 RIP: 4a4fa0	 Bytes: 0
block_.L_4a4fa0:

  ; Code: movl -0x274(%rbp), %eax	 RIP: 4a4fa0	 Bytes: 6
  %loadMem_4a4fa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fa0 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fa0)
  store %struct.Memory* %call_4a4fa0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a4fa6	 Bytes: 3
  %loadMem_4a4fa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fa6 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fa6)
  store %struct.Memory* %call_4a4fa6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x274(%rbp)	 RIP: 4a4fa9	 Bytes: 6
  %loadMem_4a4fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fa9 = call %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fa9)
  store %struct.Memory* %call_4a4fa9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4d11	 RIP: 4a4faf	 Bytes: 5
  %loadMem_4a4faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4faf = call %struct.Memory* @routine_jmpq_.L_4a4d11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4faf, i64 -670, i64 5)
  store %struct.Memory* %call_4a4faf, %struct.Memory** %MEMORY

  br label %block_.L_4a4d11

  ; Code: .L_4a4fb4:	 RIP: 4a4fb4	 Bytes: 0
block_.L_4a4fb4:

  ; Code: movb $0x0, %al	 RIP: 4a4fb4	 Bytes: 2
  %loadMem_4a4fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fb4 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fb4)
  store %struct.Memory* %call_4a4fb4, %struct.Memory** %MEMORY

  ; Code: callq .reset_coding_state_cs_cm	 RIP: 4a4fb6	 Bytes: 5
  %loadMem1_4a4fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a4fb6 = call %struct.Memory* @routine_callq_.reset_coding_state_cs_cm(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a4fb6, i64 -30966, i64 5, i64 5)
  store %struct.Memory* %call1_4a4fb6, %struct.Memory** %MEMORY

  %loadMem2_4a4fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a4fb6 = load i64, i64* %3
  %call2_4a4fb6 = call %struct.Memory* @sub_49d6c0.reset_coding_state_cs_cm(%struct.State* %0, i64  %loadPC_4a4fb6, %struct.Memory* %loadMem2_4a4fb6)
  store %struct.Memory* %call2_4a4fb6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a4fbb	 Bytes: 7
  %loadMem_4a4fbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fbb = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fbb)
  store %struct.Memory* %call_4a4fbb, %struct.Memory** %MEMORY

  ; Code: .L_4a4fc2:	 RIP: 4a4fc2	 Bytes: 0
  br label %block_.L_4a4fc2
block_.L_4a4fc2:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a4fc2	 Bytes: 4
  %loadMem_4a4fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fc2 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fc2)
  store %struct.Memory* %call_4a4fc2, %struct.Memory** %MEMORY

  ; Code: jge .L_4a564a	 RIP: 4a4fc6	 Bytes: 6
  %loadMem_4a4fc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fc6 = call %struct.Memory* @routine_jge_.L_4a564a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fc6, i8* %BRANCH_TAKEN, i64 1668, i64 6, i64 6)
  store %struct.Memory* %call_4a4fc6, %struct.Memory** %MEMORY

  %loadBr_4a4fc6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4fc6 = icmp eq i8 %loadBr_4a4fc6, 1
  br i1 %cmpBr_4a4fc6, label %block_.L_4a564a, label %block_4a4fcc

block_4a4fcc:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a4fcc	 Bytes: 7
  %loadMem_4a4fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fcc = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fcc)
  store %struct.Memory* %call_4a4fcc, %struct.Memory** %MEMORY

  ; Code: .L_4a4fd3:	 RIP: 4a4fd3	 Bytes: 0
  br label %block_.L_4a4fd3
block_.L_4a4fd3:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a4fd3	 Bytes: 4
  %loadMem_4a4fd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fd3 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fd3)
  store %struct.Memory* %call_4a4fd3, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5637	 RIP: 4a4fd7	 Bytes: 6
  %loadMem_4a4fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fd7 = call %struct.Memory* @routine_jge_.L_4a5637(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fd7, i8* %BRANCH_TAKEN, i64 1632, i64 6, i64 6)
  store %struct.Memory* %call_4a4fd7, %struct.Memory** %MEMORY

  %loadBr_4a4fd7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a4fd7 = icmp eq i8 %loadBr_4a4fd7, 1
  br i1 %cmpBr_4a4fd7, label %block_.L_4a5637, label %block_4a4fdd

block_4a4fdd:
  ; Code: xorl %eax, %eax	 RIP: 4a4fdd	 Bytes: 2
  %loadMem_4a4fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fdd = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fdd)
  store %struct.Memory* %call_4a4fdd, %struct.Memory** %MEMORY

  ; Code: movq $0x6f8f20, %rcx	 RIP: 4a4fdf	 Bytes: 10
  %loadMem_4a4fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fdf = call %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fdf)
  store %struct.Memory* %call_4a4fdf, %struct.Memory** %MEMORY

  ; Code: movq $0x6d2ec0, %rdx	 RIP: 4a4fe9	 Bytes: 10
  %loadMem_4a4fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4fe9 = call %struct.Memory* @routine_movq__0x6d2ec0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4fe9)
  store %struct.Memory* %call_4a4fe9, %struct.Memory** %MEMORY

  ; Code: movq $0x722ff0, %rsi	 RIP: 4a4ff3	 Bytes: 10
  %loadMem_4a4ff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ff3 = call %struct.Memory* @routine_movq__0x722ff0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ff3)
  store %struct.Memory* %call_4a4ff3, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4a4ffd	 Bytes: 4
  %loadMem_4a4ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a4ffd = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a4ffd)
  store %struct.Memory* %call_4a4ffd, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 4a5001	 Bytes: 4
  %loadMem_4a5001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5001 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5001)
  store %struct.Memory* %call_4a5001, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a5005	 Bytes: 3
  %loadMem_4a5005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5005 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5005)
  store %struct.Memory* %call_4a5005, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 4a5008	 Bytes: 4
  %loadMem_4a5008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5008 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5008)
  store %struct.Memory* %call_4a5008, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdi,4), %r8d	 RIP: 4a500c	 Bytes: 4
  %loadMem_4a500c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a500c = call %struct.Memory* @routine_movl___rsi__rdi_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a500c)
  store %struct.Memory* %call_4a500c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a5010	 Bytes: 4
  %loadMem_4a5010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5010 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5010)
  store %struct.Memory* %call_4a5010, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a5014	 Bytes: 4
  %loadMem_4a5014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5014 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5014)
  store %struct.Memory* %call_4a5014, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 4a5018	 Bytes: 3
  %loadMem_4a5018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5018 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5018)
  store %struct.Memory* %call_4a5018, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 4a501b	 Bytes: 3
  %loadMem_4a501b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a501b = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a501b)
  store %struct.Memory* %call_4a501b, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a501e	 Bytes: 4
  %loadMem_4a501e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a501e = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a501e)
  store %struct.Memory* %call_4a501e, %struct.Memory** %MEMORY

  ; Code: movl (%rdi,%rsi,4), %r9d	 RIP: 4a5022	 Bytes: 4
  %loadMem_4a5022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5022 = call %struct.Memory* @routine_movl___rdi__rsi_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5022)
  store %struct.Memory* %call_4a5022, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4a5026	 Bytes: 4
  %loadMem_4a5026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5026 = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5026)
  store %struct.Memory* %call_4a5026, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %r8d	 RIP: 4a502a	 Bytes: 3
  %loadMem_4a502a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a502a = call %struct.Memory* @routine_subl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a502a)
  store %struct.Memory* %call_4a502a, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x270(%rbp)	 RIP: 4a502d	 Bytes: 7
  %loadMem_4a502d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a502d = call %struct.Memory* @routine_movl__r8d__MINUS0x270__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a502d)
  store %struct.Memory* %call_4a502d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a5034	 Bytes: 4
  %loadMem_4a5034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5034 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5034)
  store %struct.Memory* %call_4a5034, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a5038	 Bytes: 4
  %loadMem_4a5038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5038 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5038)
  store %struct.Memory* %call_4a5038, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a503c	 Bytes: 3
  %loadMem_4a503c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a503c = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a503c)
  store %struct.Memory* %call_4a503c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a503f	 Bytes: 4
  %loadMem_4a503f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a503f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a503f)
  store %struct.Memory* %call_4a503f, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %r8d	 RIP: 4a5043	 Bytes: 4
  %loadMem_4a5043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5043 = call %struct.Memory* @routine_movl___rdx__rsi_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5043)
  store %struct.Memory* %call_4a5043, %struct.Memory** %MEMORY

  ; Code: addl -0x270(%rbp), %r8d	 RIP: 4a5047	 Bytes: 7
  %loadMem_4a5047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5047 = call %struct.Memory* @routine_addl_MINUS0x270__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5047)
  store %struct.Memory* %call_4a5047, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x260(%rbp)	 RIP: 4a504e	 Bytes: 7
  %loadMem_4a504e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a504e = call %struct.Memory* @routine_movl__r8d__MINUS0x260__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a504e)
  store %struct.Memory* %call_4a504e, %struct.Memory** %MEMORY

  ; Code: movl -0x270(%rbp), %r8d	 RIP: 4a5055	 Bytes: 7
  %loadMem_4a5055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5055 = call %struct.Memory* @routine_movl_MINUS0x270__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5055)
  store %struct.Memory* %call_4a5055, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a505c	 Bytes: 4
  %loadMem_4a505c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a505c = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a505c)
  store %struct.Memory* %call_4a505c, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a5060	 Bytes: 4
  %loadMem_4a5060 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5060 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5060)
  store %struct.Memory* %call_4a5060, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 4a5064	 Bytes: 3
  %loadMem_4a5064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5064 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5064)
  store %struct.Memory* %call_4a5064, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4a5067	 Bytes: 3
  %loadMem_4a5067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5067 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5067)
  store %struct.Memory* %call_4a5067, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a506a	 Bytes: 4
  %loadMem_4a506a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a506a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a506a)
  store %struct.Memory* %call_4a506a, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %r9d	 RIP: 4a506e	 Bytes: 4
  %loadMem_4a506e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a506e = call %struct.Memory* @routine_movl___rsi__rdx_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a506e)
  store %struct.Memory* %call_4a506e, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4a5072	 Bytes: 4
  %loadMem_4a5072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5072 = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5072)
  store %struct.Memory* %call_4a5072, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %r8d	 RIP: 4a5076	 Bytes: 3
  %loadMem_4a5076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5076 = call %struct.Memory* @routine_subl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5076)
  store %struct.Memory* %call_4a5076, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x264(%rbp)	 RIP: 4a5079	 Bytes: 7
  %loadMem_4a5079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5079 = call %struct.Memory* @routine_movl__r8d__MINUS0x264__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5079)
  store %struct.Memory* %call_4a5079, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %r8d	 RIP: 4a5080	 Bytes: 7
  %loadMem_4a5080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5080 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5080)
  store %struct.Memory* %call_4a5080, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a5087	 Bytes: 4
  %loadMem_4a5087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5087 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5087)
  store %struct.Memory* %call_4a5087, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a508b	 Bytes: 4
  %loadMem_4a508b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a508b = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a508b)
  store %struct.Memory* %call_4a508b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a508f	 Bytes: 3
  %loadMem_4a508f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a508f = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a508f)
  store %struct.Memory* %call_4a508f, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a5092	 Bytes: 4
  %loadMem_4a5092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5092 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5092)
  store %struct.Memory* %call_4a5092, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %r8d	 RIP: 4a5096	 Bytes: 4
  %loadMem_4a5096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5096 = call %struct.Memory* @routine_addl___rcx__rdx_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5096)
  store %struct.Memory* %call_4a5096, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x25c(%rbp)	 RIP: 4a509a	 Bytes: 7
  %loadMem_4a509a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a509a = call %struct.Memory* @routine_movl__r8d__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a509a)
  store %struct.Memory* %call_4a509a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a50a1	 Bytes: 8
  %loadMem_4a50a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50a1 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50a1)
  store %struct.Memory* %call_4a50a1, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rcx), %r8d	 RIP: 4a50a9	 Bytes: 7
  %loadMem_4a50a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50a9 = call %struct.Memory* @routine_movl_0x11bf0__rcx____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50a9)
  store %struct.Memory* %call_4a50a9, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %r9d	 RIP: 4a50b0	 Bytes: 7
  %loadMem_4a50b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50b0 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50b0)
  store %struct.Memory* %call_4a50b0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a50b7	 Bytes: 8
  %loadMem_4a50b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50b7 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50b7)
  store %struct.Memory* %call_4a50b7, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a50bf	 Bytes: 7
  %loadMem_4a50bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50bf = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50bf)
  store %struct.Memory* %call_4a50bf, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a50c6	 Bytes: 7
  %loadMem_4a50c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50c6 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50c6)
  store %struct.Memory* %call_4a50c6, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a50cd	 Bytes: 4
  %loadMem_4a50cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50cd = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50cd)
  store %struct.Memory* %call_4a50cd, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a50d1	 Bytes: 3
  %loadMem_4a50d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50d1 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50d1)
  store %struct.Memory* %call_4a50d1, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r10d	 RIP: 4a50d4	 Bytes: 7
  %loadMem_4a50d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50d4 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50d4)
  store %struct.Memory* %call_4a50d4, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r10d	 RIP: 4a50db	 Bytes: 4
  %loadMem_4a50db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50db = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50db)
  store %struct.Memory* %call_4a50db, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdx	 RIP: 4a50df	 Bytes: 3
  %loadMem_4a50df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50df = call %struct.Memory* @routine_movslq__r10d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50df)
  store %struct.Memory* %call_4a50df, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a50e2	 Bytes: 4
  %loadMem_4a50e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50e2 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50e2)
  store %struct.Memory* %call_4a50e2, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a50e6	 Bytes: 3
  %loadMem_4a50e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50e6 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50e6)
  store %struct.Memory* %call_4a50e6, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r10d	 RIP: 4a50e9	 Bytes: 7
  %loadMem_4a50e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50e9 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50e9)
  store %struct.Memory* %call_4a50e9, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r10d	 RIP: 4a50f0	 Bytes: 4
  %loadMem_4a50f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50f0 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50f0)
  store %struct.Memory* %call_4a50f0, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdx	 RIP: 4a50f4	 Bytes: 3
  %loadMem_4a50f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50f4 = call %struct.Memory* @routine_movslq__r10d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50f4)
  store %struct.Memory* %call_4a50f4, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %r10d	 RIP: 4a50f7	 Bytes: 5
  %loadMem_4a50f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50f7 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50f7)
  store %struct.Memory* %call_4a50f7, %struct.Memory** %MEMORY

  ; Code: addl %r10d, %r9d	 RIP: 4a50fc	 Bytes: 3
  %loadMem_4a50fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50fc = call %struct.Memory* @routine_addl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50fc)
  store %struct.Memory* %call_4a50fc, %struct.Memory** %MEMORY

  ; Code: cmpl %r9d, %eax	 RIP: 4a50ff	 Bytes: 3
  %loadMem_4a50ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a50ff = call %struct.Memory* @routine_cmpl__r9d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a50ff)
  store %struct.Memory* %call_4a50ff, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x4c8(%rbp)	 RIP: 4a5102	 Bytes: 7
  %loadMem_4a5102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5102 = call %struct.Memory* @routine_movl__r8d__MINUS0x4c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5102)
  store %struct.Memory* %call_4a5102, %struct.Memory** %MEMORY

  ; Code: jle .L_4a511c	 RIP: 4a5109	 Bytes: 6
  %loadMem_4a5109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5109 = call %struct.Memory* @routine_jle_.L_4a511c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5109, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a5109, %struct.Memory** %MEMORY

  %loadBr_4a5109 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5109 = icmp eq i8 %loadBr_4a5109, 1
  br i1 %cmpBr_4a5109, label %block_.L_4a511c, label %block_4a510f

block_4a510f:
  ; Code: xorl %eax, %eax	 RIP: 4a510f	 Bytes: 2
  %loadMem_4a510f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a510f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a510f)
  store %struct.Memory* %call_4a510f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4cc(%rbp)	 RIP: 4a5111	 Bytes: 6
  %loadMem_4a5111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5111 = call %struct.Memory* @routine_movl__eax__MINUS0x4cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5111)
  store %struct.Memory* %call_4a5111, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a516a	 RIP: 4a5117	 Bytes: 5
  %loadMem_4a5117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5117 = call %struct.Memory* @routine_jmpq_.L_4a516a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5117, i64 83, i64 5)
  store %struct.Memory* %call_4a5117, %struct.Memory** %MEMORY

  br label %block_.L_4a516a

  ; Code: .L_4a511c:	 RIP: 4a511c	 Bytes: 0
block_.L_4a511c:

  ; Code: movl -0x264(%rbp), %eax	 RIP: 4a511c	 Bytes: 6
  %loadMem_4a511c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a511c = call %struct.Memory* @routine_movl_MINUS0x264__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a511c)
  store %struct.Memory* %call_4a511c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a5122	 Bytes: 8
  %loadMem_4a5122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5122 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5122)
  store %struct.Memory* %call_4a5122, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a512a	 Bytes: 7
  %loadMem_4a512a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a512a = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a512a)
  store %struct.Memory* %call_4a512a, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a5131	 Bytes: 7
  %loadMem_4a5131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5131 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5131)
  store %struct.Memory* %call_4a5131, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a5138	 Bytes: 4
  %loadMem_4a5138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5138 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5138)
  store %struct.Memory* %call_4a5138, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a513c	 Bytes: 3
  %loadMem_4a513c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a513c = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a513c)
  store %struct.Memory* %call_4a513c, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a513f	 Bytes: 6
  %loadMem_4a513f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a513f = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a513f)
  store %struct.Memory* %call_4a513f, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a5145	 Bytes: 3
  %loadMem_4a5145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5145 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5145)
  store %struct.Memory* %call_4a5145, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5148	 Bytes: 3
  %loadMem_4a5148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5148 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5148)
  store %struct.Memory* %call_4a5148, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a514b	 Bytes: 4
  %loadMem_4a514b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a514b = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a514b)
  store %struct.Memory* %call_4a514b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a514f	 Bytes: 3
  %loadMem_4a514f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a514f = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a514f)
  store %struct.Memory* %call_4a514f, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a5152	 Bytes: 6
  %loadMem_4a5152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5152 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5152)
  store %struct.Memory* %call_4a5152, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a5158	 Bytes: 3
  %loadMem_4a5158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5158 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5158)
  store %struct.Memory* %call_4a5158, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a515b	 Bytes: 3
  %loadMem_4a515b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a515b = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a515b)
  store %struct.Memory* %call_4a515b, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a515e	 Bytes: 4
  %loadMem_4a515e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a515e = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a515e)
  store %struct.Memory* %call_4a515e, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a5162	 Bytes: 2
  %loadMem_4a5162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5162 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5162)
  store %struct.Memory* %call_4a5162, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4cc(%rbp)	 RIP: 4a5164	 Bytes: 6
  %loadMem_4a5164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5164 = call %struct.Memory* @routine_movl__eax__MINUS0x4cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5164)
  store %struct.Memory* %call_4a5164, %struct.Memory** %MEMORY

  ; Code: .L_4a516a:	 RIP: 4a516a	 Bytes: 0
  br label %block_.L_4a516a
block_.L_4a516a:

  ; Code: movl -0x4cc(%rbp), %eax	 RIP: 4a516a	 Bytes: 6
  %loadMem_4a516a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a516a = call %struct.Memory* @routine_movl_MINUS0x4cc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a516a)
  store %struct.Memory* %call_4a516a, %struct.Memory** %MEMORY

  ; Code: movl -0x4c8(%rbp), %ecx	 RIP: 4a5170	 Bytes: 6
  %loadMem_4a5170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5170 = call %struct.Memory* @routine_movl_MINUS0x4c8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5170)
  store %struct.Memory* %call_4a5170, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4a5176	 Bytes: 2
  %loadMem_4a5176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5176 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5176)
  store %struct.Memory* %call_4a5176, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5197	 RIP: 4a5178	 Bytes: 6
  %loadMem_4a5178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5178 = call %struct.Memory* @routine_jge_.L_4a5197(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5178, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4a5178, %struct.Memory** %MEMORY

  %loadBr_4a5178 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5178 = icmp eq i8 %loadBr_4a5178, 1
  br i1 %cmpBr_4a5178, label %block_.L_4a5197, label %block_4a517e

block_4a517e:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a517e	 Bytes: 8
  %loadMem_4a517e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a517e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a517e)
  store %struct.Memory* %call_4a517e, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 4a5186	 Bytes: 6
  %loadMem_4a5186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5186 = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5186)
  store %struct.Memory* %call_4a5186, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x4d0(%rbp)	 RIP: 4a518c	 Bytes: 6
  %loadMem_4a518c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a518c = call %struct.Memory* @routine_movl__ecx__MINUS0x4d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a518c)
  store %struct.Memory* %call_4a518c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5250	 RIP: 4a5192	 Bytes: 5
  %loadMem_4a5192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5192 = call %struct.Memory* @routine_jmpq_.L_4a5250(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5192, i64 190, i64 5)
  store %struct.Memory* %call_4a5192, %struct.Memory** %MEMORY

  br label %block_.L_4a5250

  ; Code: .L_4a5197:	 RIP: 4a5197	 Bytes: 0
block_.L_4a5197:

  ; Code: xorl %eax, %eax	 RIP: 4a5197	 Bytes: 2
  %loadMem_4a5197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5197 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5197)
  store %struct.Memory* %call_4a5197, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %ecx	 RIP: 4a5199	 Bytes: 6
  %loadMem_4a5199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5199 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5199)
  store %struct.Memory* %call_4a5199, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a519f	 Bytes: 8
  %loadMem_4a519f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a519f = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a519f)
  store %struct.Memory* %call_4a519f, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rdx	 RIP: 4a51a7	 Bytes: 7
  %loadMem_4a51a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51a7 = call %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51a7)
  store %struct.Memory* %call_4a51a7, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rsi	 RIP: 4a51ae	 Bytes: 7
  %loadMem_4a51ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51ae = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51ae)
  store %struct.Memory* %call_4a51ae, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 4a51b5	 Bytes: 4
  %loadMem_4a51b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51b5 = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51b5)
  store %struct.Memory* %call_4a51b5, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a51b9	 Bytes: 3
  %loadMem_4a51b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51b9 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51b9)
  store %struct.Memory* %call_4a51b9, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %edi	 RIP: 4a51bc	 Bytes: 6
  %loadMem_4a51bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51bc = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51bc)
  store %struct.Memory* %call_4a51bc, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4a51c2	 Bytes: 3
  %loadMem_4a51c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51c2 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51c2)
  store %struct.Memory* %call_4a51c2, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 4a51c5	 Bytes: 3
  %loadMem_4a51c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51c5 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51c5)
  store %struct.Memory* %call_4a51c5, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 4a51c8	 Bytes: 4
  %loadMem_4a51c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51c8 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51c8)
  store %struct.Memory* %call_4a51c8, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a51cc	 Bytes: 3
  %loadMem_4a51cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51cc = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51cc)
  store %struct.Memory* %call_4a51cc, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %edi	 RIP: 4a51cf	 Bytes: 6
  %loadMem_4a51cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51cf = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51cf)
  store %struct.Memory* %call_4a51cf, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 4a51d5	 Bytes: 3
  %loadMem_4a51d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51d5 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51d5)
  store %struct.Memory* %call_4a51d5, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 4a51d8	 Bytes: 3
  %loadMem_4a51d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51d8 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51d8)
  store %struct.Memory* %call_4a51d8, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 4a51db	 Bytes: 4
  %loadMem_4a51db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51db = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51db)
  store %struct.Memory* %call_4a51db, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 4a51df	 Bytes: 2
  %loadMem_4a51df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51df = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51df)
  store %struct.Memory* %call_4a51df, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4a51e1	 Bytes: 2
  %loadMem_4a51e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51e1 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51e1)
  store %struct.Memory* %call_4a51e1, %struct.Memory** %MEMORY

  ; Code: jle .L_4a51f6	 RIP: 4a51e3	 Bytes: 6
  %loadMem_4a51e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51e3 = call %struct.Memory* @routine_jle_.L_4a51f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51e3, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a51e3, %struct.Memory** %MEMORY

  %loadBr_4a51e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a51e3 = icmp eq i8 %loadBr_4a51e3, 1
  br i1 %cmpBr_4a51e3, label %block_.L_4a51f6, label %block_4a51e9

block_4a51e9:
  ; Code: xorl %eax, %eax	 RIP: 4a51e9	 Bytes: 2
  %loadMem_4a51e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51e9 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51e9)
  store %struct.Memory* %call_4a51e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4d4(%rbp)	 RIP: 4a51eb	 Bytes: 6
  %loadMem_4a51eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51eb = call %struct.Memory* @routine_movl__eax__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51eb)
  store %struct.Memory* %call_4a51eb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5244	 RIP: 4a51f1	 Bytes: 5
  %loadMem_4a51f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51f1 = call %struct.Memory* @routine_jmpq_.L_4a5244(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51f1, i64 83, i64 5)
  store %struct.Memory* %call_4a51f1, %struct.Memory** %MEMORY

  br label %block_.L_4a5244

  ; Code: .L_4a51f6:	 RIP: 4a51f6	 Bytes: 0
block_.L_4a51f6:

  ; Code: movl -0x264(%rbp), %eax	 RIP: 4a51f6	 Bytes: 6
  %loadMem_4a51f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51f6 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51f6)
  store %struct.Memory* %call_4a51f6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a51fc	 Bytes: 8
  %loadMem_4a51fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a51fc = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a51fc)
  store %struct.Memory* %call_4a51fc, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a5204	 Bytes: 7
  %loadMem_4a5204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5204 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5204)
  store %struct.Memory* %call_4a5204, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a520b	 Bytes: 7
  %loadMem_4a520b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a520b = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a520b)
  store %struct.Memory* %call_4a520b, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a5212	 Bytes: 4
  %loadMem_4a5212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5212 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5212)
  store %struct.Memory* %call_4a5212, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a5216	 Bytes: 3
  %loadMem_4a5216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5216 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5216)
  store %struct.Memory* %call_4a5216, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a5219	 Bytes: 6
  %loadMem_4a5219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5219 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5219)
  store %struct.Memory* %call_4a5219, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a521f	 Bytes: 3
  %loadMem_4a521f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a521f = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a521f)
  store %struct.Memory* %call_4a521f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5222	 Bytes: 3
  %loadMem_4a5222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5222 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5222)
  store %struct.Memory* %call_4a5222, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a5225	 Bytes: 4
  %loadMem_4a5225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5225 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5225)
  store %struct.Memory* %call_4a5225, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a5229	 Bytes: 3
  %loadMem_4a5229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5229 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5229)
  store %struct.Memory* %call_4a5229, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a522c	 Bytes: 6
  %loadMem_4a522c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a522c = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a522c)
  store %struct.Memory* %call_4a522c, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a5232	 Bytes: 3
  %loadMem_4a5232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5232 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5232)
  store %struct.Memory* %call_4a5232, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5235	 Bytes: 3
  %loadMem_4a5235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5235 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5235)
  store %struct.Memory* %call_4a5235, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a5238	 Bytes: 4
  %loadMem_4a5238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5238 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5238)
  store %struct.Memory* %call_4a5238, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a523c	 Bytes: 2
  %loadMem_4a523c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a523c = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a523c)
  store %struct.Memory* %call_4a523c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4d4(%rbp)	 RIP: 4a523e	 Bytes: 6
  %loadMem_4a523e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a523e = call %struct.Memory* @routine_movl__eax__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a523e)
  store %struct.Memory* %call_4a523e, %struct.Memory** %MEMORY

  ; Code: .L_4a5244:	 RIP: 4a5244	 Bytes: 0
  br label %block_.L_4a5244
block_.L_4a5244:

  ; Code: movl -0x4d4(%rbp), %eax	 RIP: 4a5244	 Bytes: 6
  %loadMem_4a5244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5244 = call %struct.Memory* @routine_movl_MINUS0x4d4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5244)
  store %struct.Memory* %call_4a5244, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4d0(%rbp)	 RIP: 4a524a	 Bytes: 6
  %loadMem_4a524a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a524a = call %struct.Memory* @routine_movl__eax__MINUS0x4d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a524a)
  store %struct.Memory* %call_4a524a, %struct.Memory** %MEMORY

  ; Code: .L_4a5250:	 RIP: 4a5250	 Bytes: 0
  br label %block_.L_4a5250
block_.L_4a5250:

  ; Code: movl -0x4d0(%rbp), %eax	 RIP: 4a5250	 Bytes: 6
  %loadMem_4a5250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5250 = call %struct.Memory* @routine_movl_MINUS0x4d0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5250)
  store %struct.Memory* %call_4a5250, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 4a5256	 Bytes: 2
  %loadMem_4a5256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5256 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5256)
  store %struct.Memory* %call_4a5256, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 4a5258	 Bytes: 3
  %loadMem_4a5258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5258 = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5258)
  store %struct.Memory* %call_4a5258, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rsi	 RIP: 4a525b	 Bytes: 8
  %loadMem_4a525b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a525b = call %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a525b)
  store %struct.Memory* %call_4a525b, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rsi), %rsi	 RIP: 4a5263	 Bytes: 7
  %loadMem_4a5263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5263 = call %struct.Memory* @routine_movq_0x1940__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5263)
  store %struct.Memory* %call_4a5263, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 4a526a	 Bytes: 3
  %loadMem_4a526a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a526a = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a526a)
  store %struct.Memory* %call_4a526a, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %eax	 RIP: 4a526d	 Bytes: 6
  %loadMem_4a526d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a526d = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a526d)
  store %struct.Memory* %call_4a526d, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 4a5273	 Bytes: 3
  %loadMem_4a5273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5273 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5273)
  store %struct.Memory* %call_4a5273, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4a5276	 Bytes: 3
  %loadMem_4a5276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5276 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5276)
  store %struct.Memory* %call_4a5276, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 4a5279	 Bytes: 4
  %loadMem_4a5279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5279 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5279)
  store %struct.Memory* %call_4a5279, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 4a527d	 Bytes: 6
  %loadMem_4a527d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a527d = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a527d)
  store %struct.Memory* %call_4a527d, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 4a5283	 Bytes: 3
  %loadMem_4a5283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5283 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5283)
  store %struct.Memory* %call_4a5283, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4a5286	 Bytes: 3
  %loadMem_4a5286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5286 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5286)
  store %struct.Memory* %call_4a5286, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi,%rdi,2)	 RIP: 4a5289	 Bytes: 4
  %loadMem_4a5289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5289 = call %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5289)
  store %struct.Memory* %call_4a5289, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a528d	 Bytes: 8
  %loadMem_4a528d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a528d = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a528d)
  store %struct.Memory* %call_4a528d, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rsi), %eax	 RIP: 4a5295	 Bytes: 6
  %loadMem_4a5295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5295 = call %struct.Memory* @routine_movl_0x11bec__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5295)
  store %struct.Memory* %call_4a5295, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %r8d	 RIP: 4a529b	 Bytes: 7
  %loadMem_4a529b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a529b = call %struct.Memory* @routine_movl_MINUS0x260__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a529b)
  store %struct.Memory* %call_4a529b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a52a2	 Bytes: 8
  %loadMem_4a52a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52a2 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52a2)
  store %struct.Memory* %call_4a52a2, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rsi	 RIP: 4a52aa	 Bytes: 7
  %loadMem_4a52aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52aa = call %struct.Memory* @routine_addq__0x1cb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52aa)
  store %struct.Memory* %call_4a52aa, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdi	 RIP: 4a52b1	 Bytes: 4
  %loadMem_4a52b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52b1 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52b1)
  store %struct.Memory* %call_4a52b1, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdi	 RIP: 4a52b5	 Bytes: 4
  %loadMem_4a52b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52b5 = call %struct.Memory* @routine_shlq__0x7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52b5)
  store %struct.Memory* %call_4a52b5, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a52b9	 Bytes: 3
  %loadMem_4a52b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52b9 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52b9)
  store %struct.Memory* %call_4a52b9, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 4a52bc	 Bytes: 4
  %loadMem_4a52bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52bc = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52bc)
  store %struct.Memory* %call_4a52bc, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 4a52c0	 Bytes: 4
  %loadMem_4a52c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52c0 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52c0)
  store %struct.Memory* %call_4a52c0, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a52c4	 Bytes: 3
  %loadMem_4a52c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52c4 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52c4)
  store %struct.Memory* %call_4a52c4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4a52c7	 Bytes: 4
  %loadMem_4a52c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52c7 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52c7)
  store %struct.Memory* %call_4a52c7, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 4a52cb	 Bytes: 5
  %loadMem_4a52cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52cb = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52cb)
  store %struct.Memory* %call_4a52cb, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %r8d	 RIP: 4a52d0	 Bytes: 3
  %loadMem_4a52d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52d0 = call %struct.Memory* @routine_addl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52d0)
  store %struct.Memory* %call_4a52d0, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %ecx	 RIP: 4a52d3	 Bytes: 3
  %loadMem_4a52d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52d3 = call %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52d3)
  store %struct.Memory* %call_4a52d3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4d8(%rbp)	 RIP: 4a52d6	 Bytes: 6
  %loadMem_4a52d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52d6 = call %struct.Memory* @routine_movl__eax__MINUS0x4d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52d6)
  store %struct.Memory* %call_4a52d6, %struct.Memory** %MEMORY

  ; Code: jle .L_4a52ef	 RIP: 4a52dc	 Bytes: 6
  %loadMem_4a52dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52dc = call %struct.Memory* @routine_jle_.L_4a52ef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52dc, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a52dc, %struct.Memory** %MEMORY

  %loadBr_4a52dc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a52dc = icmp eq i8 %loadBr_4a52dc, 1
  br i1 %cmpBr_4a52dc, label %block_.L_4a52ef, label %block_4a52e2

block_4a52e2:
  ; Code: xorl %eax, %eax	 RIP: 4a52e2	 Bytes: 2
  %loadMem_4a52e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52e2 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52e2)
  store %struct.Memory* %call_4a52e2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4dc(%rbp)	 RIP: 4a52e4	 Bytes: 6
  %loadMem_4a52e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52e4 = call %struct.Memory* @routine_movl__eax__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52e4)
  store %struct.Memory* %call_4a52e4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a532a	 RIP: 4a52ea	 Bytes: 5
  %loadMem_4a52ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52ea = call %struct.Memory* @routine_jmpq_.L_4a532a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52ea, i64 64, i64 5)
  store %struct.Memory* %call_4a52ea, %struct.Memory** %MEMORY

  br label %block_.L_4a532a

  ; Code: .L_4a52ef:	 RIP: 4a52ef	 Bytes: 0
block_.L_4a52ef:

  ; Code: movl -0x260(%rbp), %eax	 RIP: 4a52ef	 Bytes: 6
  %loadMem_4a52ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52ef = call %struct.Memory* @routine_movl_MINUS0x260__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52ef)
  store %struct.Memory* %call_4a52ef, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a52f5	 Bytes: 8
  %loadMem_4a52f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52f5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52f5)
  store %struct.Memory* %call_4a52f5, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rcx	 RIP: 4a52fd	 Bytes: 7
  %loadMem_4a52fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a52fd = call %struct.Memory* @routine_addq__0x1cb8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a52fd)
  store %struct.Memory* %call_4a52fd, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdx	 RIP: 4a5304	 Bytes: 4
  %loadMem_4a5304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5304 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5304)
  store %struct.Memory* %call_4a5304, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdx	 RIP: 4a5308	 Bytes: 4
  %loadMem_4a5308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5308 = call %struct.Memory* @routine_shlq__0x7___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5308)
  store %struct.Memory* %call_4a5308, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a530c	 Bytes: 3
  %loadMem_4a530c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a530c = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a530c)
  store %struct.Memory* %call_4a530c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a530f	 Bytes: 4
  %loadMem_4a530f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a530f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a530f)
  store %struct.Memory* %call_4a530f, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4a5313	 Bytes: 4
  %loadMem_4a5313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5313 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5313)
  store %struct.Memory* %call_4a5313, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a5317	 Bytes: 3
  %loadMem_4a5317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5317 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5317)
  store %struct.Memory* %call_4a5317, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a531a	 Bytes: 4
  %loadMem_4a531a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a531a = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a531a)
  store %struct.Memory* %call_4a531a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a531e	 Bytes: 4
  %loadMem_4a531e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a531e = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a531e)
  store %struct.Memory* %call_4a531e, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a5322	 Bytes: 2
  %loadMem_4a5322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5322 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5322)
  store %struct.Memory* %call_4a5322, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4dc(%rbp)	 RIP: 4a5324	 Bytes: 6
  %loadMem_4a5324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5324 = call %struct.Memory* @routine_movl__eax__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5324)
  store %struct.Memory* %call_4a5324, %struct.Memory** %MEMORY

  ; Code: .L_4a532a:	 RIP: 4a532a	 Bytes: 0
  br label %block_.L_4a532a
block_.L_4a532a:

  ; Code: movl -0x4dc(%rbp), %eax	 RIP: 4a532a	 Bytes: 6
  %loadMem_4a532a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a532a = call %struct.Memory* @routine_movl_MINUS0x4dc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a532a)
  store %struct.Memory* %call_4a532a, %struct.Memory** %MEMORY

  ; Code: movl -0x4d8(%rbp), %ecx	 RIP: 4a5330	 Bytes: 6
  %loadMem_4a5330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5330 = call %struct.Memory* @routine_movl_MINUS0x4d8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5330)
  store %struct.Memory* %call_4a5330, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4a5336	 Bytes: 2
  %loadMem_4a5336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5336 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5336)
  store %struct.Memory* %call_4a5336, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5357	 RIP: 4a5338	 Bytes: 6
  %loadMem_4a5338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5338 = call %struct.Memory* @routine_jge_.L_4a5357(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5338, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4a5338, %struct.Memory** %MEMORY

  %loadBr_4a5338 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5338 = icmp eq i8 %loadBr_4a5338, 1
  br i1 %cmpBr_4a5338, label %block_.L_4a5357, label %block_4a533e

block_4a533e:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a533e	 Bytes: 8
  %loadMem_4a533e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a533e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a533e)
  store %struct.Memory* %call_4a533e, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 4a5346	 Bytes: 6
  %loadMem_4a5346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5346 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5346)
  store %struct.Memory* %call_4a5346, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x4e0(%rbp)	 RIP: 4a534c	 Bytes: 6
  %loadMem_4a534c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a534c = call %struct.Memory* @routine_movl__ecx__MINUS0x4e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a534c)
  store %struct.Memory* %call_4a534c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a53ea	 RIP: 4a5352	 Bytes: 5
  %loadMem_4a5352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5352 = call %struct.Memory* @routine_jmpq_.L_4a53ea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5352, i64 152, i64 5)
  store %struct.Memory* %call_4a5352, %struct.Memory** %MEMORY

  br label %block_.L_4a53ea

  ; Code: .L_4a5357:	 RIP: 4a5357	 Bytes: 0
block_.L_4a5357:

  ; Code: xorl %eax, %eax	 RIP: 4a5357	 Bytes: 2
  %loadMem_4a5357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5357 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5357)
  store %struct.Memory* %call_4a5357, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %ecx	 RIP: 4a5359	 Bytes: 6
  %loadMem_4a5359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5359 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5359)
  store %struct.Memory* %call_4a5359, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a535f	 Bytes: 8
  %loadMem_4a535f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a535f = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a535f)
  store %struct.Memory* %call_4a535f, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rdx	 RIP: 4a5367	 Bytes: 7
  %loadMem_4a5367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5367 = call %struct.Memory* @routine_addq__0x1cb8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5367)
  store %struct.Memory* %call_4a5367, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rsi	 RIP: 4a536e	 Bytes: 4
  %loadMem_4a536e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a536e = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a536e)
  store %struct.Memory* %call_4a536e, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rsi	 RIP: 4a5372	 Bytes: 4
  %loadMem_4a5372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5372 = call %struct.Memory* @routine_shlq__0x7___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5372)
  store %struct.Memory* %call_4a5372, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a5376	 Bytes: 3
  %loadMem_4a5376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5376 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5376)
  store %struct.Memory* %call_4a5376, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a5379	 Bytes: 4
  %loadMem_4a5379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5379 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5379)
  store %struct.Memory* %call_4a5379, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 4a537d	 Bytes: 4
  %loadMem_4a537d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a537d = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a537d)
  store %struct.Memory* %call_4a537d, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a5381	 Bytes: 3
  %loadMem_4a5381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5381 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5381)
  store %struct.Memory* %call_4a5381, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a5384	 Bytes: 4
  %loadMem_4a5384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5384 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5384)
  store %struct.Memory* %call_4a5384, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 4a5388	 Bytes: 4
  %loadMem_4a5388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5388 = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5388)
  store %struct.Memory* %call_4a5388, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 4a538c	 Bytes: 2
  %loadMem_4a538c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a538c = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a538c)
  store %struct.Memory* %call_4a538c, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4a538e	 Bytes: 2
  %loadMem_4a538e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a538e = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a538e)
  store %struct.Memory* %call_4a538e, %struct.Memory** %MEMORY

  ; Code: jle .L_4a53a3	 RIP: 4a5390	 Bytes: 6
  %loadMem_4a5390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5390 = call %struct.Memory* @routine_jle_.L_4a53a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5390, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a5390, %struct.Memory** %MEMORY

  %loadBr_4a5390 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5390 = icmp eq i8 %loadBr_4a5390, 1
  br i1 %cmpBr_4a5390, label %block_.L_4a53a3, label %block_4a5396

block_4a5396:
  ; Code: xorl %eax, %eax	 RIP: 4a5396	 Bytes: 2
  %loadMem_4a5396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5396 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5396)
  store %struct.Memory* %call_4a5396, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4e4(%rbp)	 RIP: 4a5398	 Bytes: 6
  %loadMem_4a5398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5398 = call %struct.Memory* @routine_movl__eax__MINUS0x4e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5398)
  store %struct.Memory* %call_4a5398, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a53de	 RIP: 4a539e	 Bytes: 5
  %loadMem_4a539e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a539e = call %struct.Memory* @routine_jmpq_.L_4a53de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a539e, i64 64, i64 5)
  store %struct.Memory* %call_4a539e, %struct.Memory** %MEMORY

  br label %block_.L_4a53de

  ; Code: .L_4a53a3:	 RIP: 4a53a3	 Bytes: 0
block_.L_4a53a3:

  ; Code: movl -0x260(%rbp), %eax	 RIP: 4a53a3	 Bytes: 6
  %loadMem_4a53a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53a3 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53a3)
  store %struct.Memory* %call_4a53a3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a53a9	 Bytes: 8
  %loadMem_4a53a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53a9 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53a9)
  store %struct.Memory* %call_4a53a9, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rcx	 RIP: 4a53b1	 Bytes: 7
  %loadMem_4a53b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53b1 = call %struct.Memory* @routine_addq__0x1cb8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53b1)
  store %struct.Memory* %call_4a53b1, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdx	 RIP: 4a53b8	 Bytes: 4
  %loadMem_4a53b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53b8 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53b8)
  store %struct.Memory* %call_4a53b8, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdx	 RIP: 4a53bc	 Bytes: 4
  %loadMem_4a53bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53bc = call %struct.Memory* @routine_shlq__0x7___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53bc)
  store %struct.Memory* %call_4a53bc, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a53c0	 Bytes: 3
  %loadMem_4a53c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53c0 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53c0)
  store %struct.Memory* %call_4a53c0, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a53c3	 Bytes: 4
  %loadMem_4a53c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53c3 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53c3)
  store %struct.Memory* %call_4a53c3, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4a53c7	 Bytes: 4
  %loadMem_4a53c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53c7 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53c7)
  store %struct.Memory* %call_4a53c7, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a53cb	 Bytes: 3
  %loadMem_4a53cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53cb = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53cb)
  store %struct.Memory* %call_4a53cb, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a53ce	 Bytes: 4
  %loadMem_4a53ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53ce = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53ce)
  store %struct.Memory* %call_4a53ce, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a53d2	 Bytes: 4
  %loadMem_4a53d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53d2 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53d2)
  store %struct.Memory* %call_4a53d2, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a53d6	 Bytes: 2
  %loadMem_4a53d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53d6 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53d6)
  store %struct.Memory* %call_4a53d6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4e4(%rbp)	 RIP: 4a53d8	 Bytes: 6
  %loadMem_4a53d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53d8 = call %struct.Memory* @routine_movl__eax__MINUS0x4e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53d8)
  store %struct.Memory* %call_4a53d8, %struct.Memory** %MEMORY

  ; Code: .L_4a53de:	 RIP: 4a53de	 Bytes: 0
  br label %block_.L_4a53de
block_.L_4a53de:

  ; Code: movl -0x4e4(%rbp), %eax	 RIP: 4a53de	 Bytes: 6
  %loadMem_4a53de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53de = call %struct.Memory* @routine_movl_MINUS0x4e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53de)
  store %struct.Memory* %call_4a53de, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4e0(%rbp)	 RIP: 4a53e4	 Bytes: 6
  %loadMem_4a53e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53e4 = call %struct.Memory* @routine_movl__eax__MINUS0x4e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53e4)
  store %struct.Memory* %call_4a53e4, %struct.Memory** %MEMORY

  ; Code: .L_4a53ea:	 RIP: 4a53ea	 Bytes: 0
  br label %block_.L_4a53ea
block_.L_4a53ea:

  ; Code: movl -0x4e0(%rbp), %eax	 RIP: 4a53ea	 Bytes: 6
  %loadMem_4a53ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53ea = call %struct.Memory* @routine_movl_MINUS0x4e0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53ea)
  store %struct.Memory* %call_4a53ea, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 4a53f0	 Bytes: 2
  %loadMem_4a53f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53f0 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53f0)
  store %struct.Memory* %call_4a53f0, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 4a53f2	 Bytes: 3
  %loadMem_4a53f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53f2 = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53f2)
  store %struct.Memory* %call_4a53f2, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rsi	 RIP: 4a53f5	 Bytes: 8
  %loadMem_4a53f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53f5 = call %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53f5)
  store %struct.Memory* %call_4a53f5, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rsi), %rsi	 RIP: 4a53fd	 Bytes: 7
  %loadMem_4a53fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a53fd = call %struct.Memory* @routine_movq_0x1918__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a53fd)
  store %struct.Memory* %call_4a53fd, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %eax	 RIP: 4a5404	 Bytes: 6
  %loadMem_4a5404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5404 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5404)
  store %struct.Memory* %call_4a5404, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 4a540a	 Bytes: 3
  %loadMem_4a540a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a540a = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a540a)
  store %struct.Memory* %call_4a540a, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4a540d	 Bytes: 3
  %loadMem_4a540d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a540d = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a540d)
  store %struct.Memory* %call_4a540d, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 4a5410	 Bytes: 4
  %loadMem_4a5410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5410 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5410)
  store %struct.Memory* %call_4a5410, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 4a5414	 Bytes: 6
  %loadMem_4a5414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5414 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5414)
  store %struct.Memory* %call_4a5414, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 4a541a	 Bytes: 3
  %loadMem_4a541a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a541a = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a541a)
  store %struct.Memory* %call_4a541a, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4a541d	 Bytes: 3
  %loadMem_4a541d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a541d = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a541d)
  store %struct.Memory* %call_4a541d, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi,%rdi,2)	 RIP: 4a5420	 Bytes: 4
  %loadMem_4a5420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5420 = call %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5420)
  store %struct.Memory* %call_4a5420, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a5424	 Bytes: 8
  %loadMem_4a5424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5424 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5424)
  store %struct.Memory* %call_4a5424, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rsi), %eax	 RIP: 4a542c	 Bytes: 6
  %loadMem_4a542c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a542c = call %struct.Memory* @routine_movl_0x11bf0__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a542c)
  store %struct.Memory* %call_4a542c, %struct.Memory** %MEMORY

  ; Code: movl -0x25c(%rbp), %r8d	 RIP: 4a5432	 Bytes: 7
  %loadMem_4a5432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5432 = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5432)
  store %struct.Memory* %call_4a5432, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a5439	 Bytes: 8
  %loadMem_4a5439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5439 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5439)
  store %struct.Memory* %call_4a5439, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 4a5441	 Bytes: 7
  %loadMem_4a5441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5441 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5441)
  store %struct.Memory* %call_4a5441, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rsi	 RIP: 4a5448	 Bytes: 7
  %loadMem_4a5448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5448 = call %struct.Memory* @routine_addq__0x800___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5448)
  store %struct.Memory* %call_4a5448, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdi	 RIP: 4a544f	 Bytes: 7
  %loadMem_4a544f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a544f = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a544f)
  store %struct.Memory* %call_4a544f, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 4a5456	 Bytes: 4
  %loadMem_4a5456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5456 = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5456)
  store %struct.Memory* %call_4a5456, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a545a	 Bytes: 3
  %loadMem_4a545a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a545a = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a545a)
  store %struct.Memory* %call_4a545a, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r9d	 RIP: 4a545d	 Bytes: 7
  %loadMem_4a545d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a545d = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a545d)
  store %struct.Memory* %call_4a545d, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 4a5464	 Bytes: 4
  %loadMem_4a5464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5464 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5464)
  store %struct.Memory* %call_4a5464, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a5468	 Bytes: 3
  %loadMem_4a5468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5468 = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5468)
  store %struct.Memory* %call_4a5468, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 4a546b	 Bytes: 4
  %loadMem_4a546b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a546b = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a546b)
  store %struct.Memory* %call_4a546b, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a546f	 Bytes: 3
  %loadMem_4a546f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a546f = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a546f)
  store %struct.Memory* %call_4a546f, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r9d	 RIP: 4a5472	 Bytes: 7
  %loadMem_4a5472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5472 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5472)
  store %struct.Memory* %call_4a5472, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 4a5479	 Bytes: 4
  %loadMem_4a5479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5479 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5479)
  store %struct.Memory* %call_4a5479, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a547d	 Bytes: 3
  %loadMem_4a547d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a547d = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a547d)
  store %struct.Memory* %call_4a547d, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 4a5480	 Bytes: 5
  %loadMem_4a5480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5480 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5480)
  store %struct.Memory* %call_4a5480, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %r8d	 RIP: 4a5485	 Bytes: 3
  %loadMem_4a5485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5485 = call %struct.Memory* @routine_addl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5485)
  store %struct.Memory* %call_4a5485, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %ecx	 RIP: 4a5488	 Bytes: 3
  %loadMem_4a5488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5488 = call %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5488)
  store %struct.Memory* %call_4a5488, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4e8(%rbp)	 RIP: 4a548b	 Bytes: 6
  %loadMem_4a548b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a548b = call %struct.Memory* @routine_movl__eax__MINUS0x4e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a548b)
  store %struct.Memory* %call_4a548b, %struct.Memory** %MEMORY

  ; Code: jle .L_4a54a4	 RIP: 4a5491	 Bytes: 6
  %loadMem_4a5491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5491 = call %struct.Memory* @routine_jle_.L_4a54a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5491, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a5491, %struct.Memory** %MEMORY

  %loadBr_4a5491 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5491 = icmp eq i8 %loadBr_4a5491, 1
  br i1 %cmpBr_4a5491, label %block_.L_4a54a4, label %block_4a5497

block_4a5497:
  ; Code: xorl %eax, %eax	 RIP: 4a5497	 Bytes: 2
  %loadMem_4a5497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5497 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5497)
  store %struct.Memory* %call_4a5497, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4ec(%rbp)	 RIP: 4a5499	 Bytes: 6
  %loadMem_4a5499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5499 = call %struct.Memory* @routine_movl__eax__MINUS0x4ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5499)
  store %struct.Memory* %call_4a5499, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a54f9	 RIP: 4a549f	 Bytes: 5
  %loadMem_4a549f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a549f = call %struct.Memory* @routine_jmpq_.L_4a54f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a549f, i64 90, i64 5)
  store %struct.Memory* %call_4a549f, %struct.Memory** %MEMORY

  br label %block_.L_4a54f9

  ; Code: .L_4a54a4:	 RIP: 4a54a4	 Bytes: 0
block_.L_4a54a4:

  ; Code: movl -0x25c(%rbp), %eax	 RIP: 4a54a4	 Bytes: 6
  %loadMem_4a54a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54a4 = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54a4)
  store %struct.Memory* %call_4a54a4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a54aa	 Bytes: 8
  %loadMem_4a54aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54aa = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54aa)
  store %struct.Memory* %call_4a54aa, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a54b2	 Bytes: 7
  %loadMem_4a54b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54b2 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54b2)
  store %struct.Memory* %call_4a54b2, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rcx	 RIP: 4a54b9	 Bytes: 7
  %loadMem_4a54b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54b9 = call %struct.Memory* @routine_addq__0x800___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54b9)
  store %struct.Memory* %call_4a54b9, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a54c0	 Bytes: 7
  %loadMem_4a54c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54c0 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54c0)
  store %struct.Memory* %call_4a54c0, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a54c7	 Bytes: 4
  %loadMem_4a54c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54c7 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54c7)
  store %struct.Memory* %call_4a54c7, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a54cb	 Bytes: 3
  %loadMem_4a54cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54cb = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54cb)
  store %struct.Memory* %call_4a54cb, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a54ce	 Bytes: 6
  %loadMem_4a54ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54ce = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54ce)
  store %struct.Memory* %call_4a54ce, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a54d4	 Bytes: 3
  %loadMem_4a54d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54d4 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54d4)
  store %struct.Memory* %call_4a54d4, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a54d7	 Bytes: 3
  %loadMem_4a54d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54d7 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54d7)
  store %struct.Memory* %call_4a54d7, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a54da	 Bytes: 4
  %loadMem_4a54da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54da = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54da)
  store %struct.Memory* %call_4a54da, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a54de	 Bytes: 3
  %loadMem_4a54de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54de = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54de)
  store %struct.Memory* %call_4a54de, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a54e1	 Bytes: 6
  %loadMem_4a54e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54e1 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54e1)
  store %struct.Memory* %call_4a54e1, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a54e7	 Bytes: 3
  %loadMem_4a54e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54e7 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54e7)
  store %struct.Memory* %call_4a54e7, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a54ea	 Bytes: 3
  %loadMem_4a54ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54ea = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54ea)
  store %struct.Memory* %call_4a54ea, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a54ed	 Bytes: 4
  %loadMem_4a54ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54ed = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54ed)
  store %struct.Memory* %call_4a54ed, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a54f1	 Bytes: 2
  %loadMem_4a54f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54f1 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54f1)
  store %struct.Memory* %call_4a54f1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4ec(%rbp)	 RIP: 4a54f3	 Bytes: 6
  %loadMem_4a54f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54f3 = call %struct.Memory* @routine_movl__eax__MINUS0x4ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54f3)
  store %struct.Memory* %call_4a54f3, %struct.Memory** %MEMORY

  ; Code: .L_4a54f9:	 RIP: 4a54f9	 Bytes: 0
  br label %block_.L_4a54f9
block_.L_4a54f9:

  ; Code: movl -0x4ec(%rbp), %eax	 RIP: 4a54f9	 Bytes: 6
  %loadMem_4a54f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54f9 = call %struct.Memory* @routine_movl_MINUS0x4ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54f9)
  store %struct.Memory* %call_4a54f9, %struct.Memory** %MEMORY

  ; Code: movl -0x4e8(%rbp), %ecx	 RIP: 4a54ff	 Bytes: 6
  %loadMem_4a54ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a54ff = call %struct.Memory* @routine_movl_MINUS0x4e8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a54ff)
  store %struct.Memory* %call_4a54ff, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4a5505	 Bytes: 2
  %loadMem_4a5505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5505 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5505)
  store %struct.Memory* %call_4a5505, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5526	 RIP: 4a5507	 Bytes: 6
  %loadMem_4a5507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5507 = call %struct.Memory* @routine_jge_.L_4a5526(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5507, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4a5507, %struct.Memory** %MEMORY

  %loadBr_4a5507 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5507 = icmp eq i8 %loadBr_4a5507, 1
  br i1 %cmpBr_4a5507, label %block_.L_4a5526, label %block_4a550d

block_4a550d:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a550d	 Bytes: 8
  %loadMem_4a550d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a550d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a550d)
  store %struct.Memory* %call_4a550d, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 4a5515	 Bytes: 6
  %loadMem_4a5515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5515 = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5515)
  store %struct.Memory* %call_4a5515, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x4f0(%rbp)	 RIP: 4a551b	 Bytes: 6
  %loadMem_4a551b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a551b = call %struct.Memory* @routine_movl__ecx__MINUS0x4f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a551b)
  store %struct.Memory* %call_4a551b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a55ed	 RIP: 4a5521	 Bytes: 5
  %loadMem_4a5521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5521 = call %struct.Memory* @routine_jmpq_.L_4a55ed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5521, i64 204, i64 5)
  store %struct.Memory* %call_4a5521, %struct.Memory** %MEMORY

  br label %block_.L_4a55ed

  ; Code: .L_4a5526:	 RIP: 4a5526	 Bytes: 0
block_.L_4a5526:

  ; Code: xorl %eax, %eax	 RIP: 4a5526	 Bytes: 2
  %loadMem_4a5526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5526 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5526)
  store %struct.Memory* %call_4a5526, %struct.Memory** %MEMORY

  ; Code: movl -0x25c(%rbp), %ecx	 RIP: 4a5528	 Bytes: 6
  %loadMem_4a5528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5528 = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5528)
  store %struct.Memory* %call_4a5528, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a552e	 Bytes: 8
  %loadMem_4a552e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a552e = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a552e)
  store %struct.Memory* %call_4a552e, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rdx	 RIP: 4a5536	 Bytes: 7
  %loadMem_4a5536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5536 = call %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5536)
  store %struct.Memory* %call_4a5536, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rdx	 RIP: 4a553d	 Bytes: 7
  %loadMem_4a553d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a553d = call %struct.Memory* @routine_addq__0x800___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a553d)
  store %struct.Memory* %call_4a553d, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rsi	 RIP: 4a5544	 Bytes: 7
  %loadMem_4a5544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5544 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5544)
  store %struct.Memory* %call_4a5544, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 4a554b	 Bytes: 4
  %loadMem_4a554b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a554b = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a554b)
  store %struct.Memory* %call_4a554b, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a554f	 Bytes: 3
  %loadMem_4a554f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a554f = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a554f)
  store %struct.Memory* %call_4a554f, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %edi	 RIP: 4a5552	 Bytes: 6
  %loadMem_4a5552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5552 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5552)
  store %struct.Memory* %call_4a5552, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4a5558	 Bytes: 3
  %loadMem_4a5558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5558 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5558)
  store %struct.Memory* %call_4a5558, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 4a555b	 Bytes: 3
  %loadMem_4a555b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a555b = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a555b)
  store %struct.Memory* %call_4a555b, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 4a555e	 Bytes: 4
  %loadMem_4a555e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a555e = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a555e)
  store %struct.Memory* %call_4a555e, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a5562	 Bytes: 3
  %loadMem_4a5562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5562 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5562)
  store %struct.Memory* %call_4a5562, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %edi	 RIP: 4a5565	 Bytes: 6
  %loadMem_4a5565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5565 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5565)
  store %struct.Memory* %call_4a5565, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 4a556b	 Bytes: 3
  %loadMem_4a556b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a556b = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a556b)
  store %struct.Memory* %call_4a556b, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 4a556e	 Bytes: 3
  %loadMem_4a556e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a556e = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a556e)
  store %struct.Memory* %call_4a556e, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 4a5571	 Bytes: 4
  %loadMem_4a5571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5571 = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5571)
  store %struct.Memory* %call_4a5571, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 4a5575	 Bytes: 2
  %loadMem_4a5575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5575 = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5575)
  store %struct.Memory* %call_4a5575, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4a5577	 Bytes: 2
  %loadMem_4a5577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5577 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5577)
  store %struct.Memory* %call_4a5577, %struct.Memory** %MEMORY

  ; Code: jle .L_4a558c	 RIP: 4a5579	 Bytes: 6
  %loadMem_4a5579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5579 = call %struct.Memory* @routine_jle_.L_4a558c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5579, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a5579, %struct.Memory** %MEMORY

  %loadBr_4a5579 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5579 = icmp eq i8 %loadBr_4a5579, 1
  br i1 %cmpBr_4a5579, label %block_.L_4a558c, label %block_4a557f

block_4a557f:
  ; Code: xorl %eax, %eax	 RIP: 4a557f	 Bytes: 2
  %loadMem_4a557f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a557f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a557f)
  store %struct.Memory* %call_4a557f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4f4(%rbp)	 RIP: 4a5581	 Bytes: 6
  %loadMem_4a5581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5581 = call %struct.Memory* @routine_movl__eax__MINUS0x4f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5581)
  store %struct.Memory* %call_4a5581, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a55e1	 RIP: 4a5587	 Bytes: 5
  %loadMem_4a5587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5587 = call %struct.Memory* @routine_jmpq_.L_4a55e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5587, i64 90, i64 5)
  store %struct.Memory* %call_4a5587, %struct.Memory** %MEMORY

  br label %block_.L_4a55e1

  ; Code: .L_4a558c:	 RIP: 4a558c	 Bytes: 0
block_.L_4a558c:

  ; Code: movl -0x25c(%rbp), %eax	 RIP: 4a558c	 Bytes: 6
  %loadMem_4a558c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a558c = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a558c)
  store %struct.Memory* %call_4a558c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a5592	 Bytes: 8
  %loadMem_4a5592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5592 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5592)
  store %struct.Memory* %call_4a5592, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a559a	 Bytes: 7
  %loadMem_4a559a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a559a = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a559a)
  store %struct.Memory* %call_4a559a, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rcx	 RIP: 4a55a1	 Bytes: 7
  %loadMem_4a55a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55a1 = call %struct.Memory* @routine_addq__0x800___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55a1)
  store %struct.Memory* %call_4a55a1, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a55a8	 Bytes: 7
  %loadMem_4a55a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55a8 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55a8)
  store %struct.Memory* %call_4a55a8, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a55af	 Bytes: 4
  %loadMem_4a55af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55af = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55af)
  store %struct.Memory* %call_4a55af, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a55b3	 Bytes: 3
  %loadMem_4a55b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55b3 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55b3)
  store %struct.Memory* %call_4a55b3, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a55b6	 Bytes: 6
  %loadMem_4a55b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55b6 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55b6)
  store %struct.Memory* %call_4a55b6, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a55bc	 Bytes: 3
  %loadMem_4a55bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55bc = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55bc)
  store %struct.Memory* %call_4a55bc, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a55bf	 Bytes: 3
  %loadMem_4a55bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55bf = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55bf)
  store %struct.Memory* %call_4a55bf, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a55c2	 Bytes: 4
  %loadMem_4a55c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55c2 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55c2)
  store %struct.Memory* %call_4a55c2, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a55c6	 Bytes: 3
  %loadMem_4a55c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55c6 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55c6)
  store %struct.Memory* %call_4a55c6, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a55c9	 Bytes: 6
  %loadMem_4a55c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55c9 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55c9)
  store %struct.Memory* %call_4a55c9, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a55cf	 Bytes: 3
  %loadMem_4a55cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55cf = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55cf)
  store %struct.Memory* %call_4a55cf, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a55d2	 Bytes: 3
  %loadMem_4a55d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55d2 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55d2)
  store %struct.Memory* %call_4a55d2, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a55d5	 Bytes: 4
  %loadMem_4a55d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55d5 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55d5)
  store %struct.Memory* %call_4a55d5, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a55d9	 Bytes: 2
  %loadMem_4a55d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55d9 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55d9)
  store %struct.Memory* %call_4a55d9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4f4(%rbp)	 RIP: 4a55db	 Bytes: 6
  %loadMem_4a55db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55db = call %struct.Memory* @routine_movl__eax__MINUS0x4f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55db)
  store %struct.Memory* %call_4a55db, %struct.Memory** %MEMORY

  ; Code: .L_4a55e1:	 RIP: 4a55e1	 Bytes: 0
  br label %block_.L_4a55e1
block_.L_4a55e1:

  ; Code: movl -0x4f4(%rbp), %eax	 RIP: 4a55e1	 Bytes: 6
  %loadMem_4a55e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55e1 = call %struct.Memory* @routine_movl_MINUS0x4f4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55e1)
  store %struct.Memory* %call_4a55e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4f0(%rbp)	 RIP: 4a55e7	 Bytes: 6
  %loadMem_4a55e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55e7 = call %struct.Memory* @routine_movl__eax__MINUS0x4f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55e7)
  store %struct.Memory* %call_4a55e7, %struct.Memory** %MEMORY

  ; Code: .L_4a55ed:	 RIP: 4a55ed	 Bytes: 0
  br label %block_.L_4a55ed
block_.L_4a55ed:

  ; Code: movl -0x4f0(%rbp), %eax	 RIP: 4a55ed	 Bytes: 6
  %loadMem_4a55ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55ed = call %struct.Memory* @routine_movl_MINUS0x4f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55ed)
  store %struct.Memory* %call_4a55ed, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4a55f3	 Bytes: 3
  %loadMem_4a55f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55f3 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55f3)
  store %struct.Memory* %call_4a55f3, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rdx	 RIP: 4a55f6	 Bytes: 8
  %loadMem_4a55f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55f6 = call %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55f6)
  store %struct.Memory* %call_4a55f6, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rdx), %rdx	 RIP: 4a55fe	 Bytes: 7
  %loadMem_4a55fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a55fe = call %struct.Memory* @routine_movq_0x1940__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a55fe)
  store %struct.Memory* %call_4a55fe, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdx), %rdx	 RIP: 4a5605	 Bytes: 4
  %loadMem_4a5605 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5605 = call %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5605)
  store %struct.Memory* %call_4a5605, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %eax	 RIP: 4a5609	 Bytes: 6
  %loadMem_4a5609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5609 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5609)
  store %struct.Memory* %call_4a5609, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 4a560f	 Bytes: 3
  %loadMem_4a560f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a560f = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a560f)
  store %struct.Memory* %call_4a560f, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 4a5612	 Bytes: 3
  %loadMem_4a5612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5612 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5612)
  store %struct.Memory* %call_4a5612, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 4a5615	 Bytes: 4
  %loadMem_4a5615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5615 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5615)
  store %struct.Memory* %call_4a5615, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 4a5619	 Bytes: 6
  %loadMem_4a5619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5619 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5619)
  store %struct.Memory* %call_4a5619, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 4a561f	 Bytes: 3
  %loadMem_4a561f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a561f = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a561f)
  store %struct.Memory* %call_4a561f, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 4a5622	 Bytes: 3
  %loadMem_4a5622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5622 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5622)
  store %struct.Memory* %call_4a5622, %struct.Memory** %MEMORY

  ; Code: movw %cx, (%rdx,%rsi,2)	 RIP: 4a5625	 Bytes: 4
  %loadMem_4a5625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5625 = call %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5625)
  store %struct.Memory* %call_4a5625, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a5629	 Bytes: 3
  %loadMem_4a5629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5629 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5629)
  store %struct.Memory* %call_4a5629, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a562c	 Bytes: 3
  %loadMem_4a562c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a562c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a562c)
  store %struct.Memory* %call_4a562c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a562f	 Bytes: 3
  %loadMem_4a562f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a562f = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a562f)
  store %struct.Memory* %call_4a562f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4fd3	 RIP: 4a5632	 Bytes: 5
  %loadMem_4a5632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5632 = call %struct.Memory* @routine_jmpq_.L_4a4fd3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5632, i64 -1631, i64 5)
  store %struct.Memory* %call_4a5632, %struct.Memory** %MEMORY

  br label %block_.L_4a4fd3

  ; Code: .L_4a5637:	 RIP: 4a5637	 Bytes: 0
block_.L_4a5637:

  ; Code: jmpq .L_4a563c	 RIP: 4a5637	 Bytes: 5
  %loadMem_4a5637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5637 = call %struct.Memory* @routine_jmpq_.L_4a563c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5637, i64 5, i64 5)
  store %struct.Memory* %call_4a5637, %struct.Memory** %MEMORY

  br label %block_.L_4a563c

  ; Code: .L_4a563c:	 RIP: 4a563c	 Bytes: 0
block_.L_4a563c:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a563c	 Bytes: 3
  %loadMem_4a563c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a563c = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a563c)
  store %struct.Memory* %call_4a563c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a563f	 Bytes: 3
  %loadMem_4a563f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a563f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a563f)
  store %struct.Memory* %call_4a563f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a5642	 Bytes: 3
  %loadMem_4a5642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5642 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5642)
  store %struct.Memory* %call_4a5642, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a4fc2	 RIP: 4a5645	 Bytes: 5
  %loadMem_4a5645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5645 = call %struct.Memory* @routine_jmpq_.L_4a4fc2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5645, i64 -1667, i64 5)
  store %struct.Memory* %call_4a5645, %struct.Memory** %MEMORY

  br label %block_.L_4a4fc2

  ; Code: .L_4a564a:	 RIP: 4a564a	 Bytes: 0
block_.L_4a564a:

  ; Code: movl $0x0, -0x26c(%rbp)	 RIP: 4a564a	 Bytes: 10
  %loadMem_4a564a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a564a = call %struct.Memory* @routine_movl__0x0__MINUS0x26c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a564a)
  store %struct.Memory* %call_4a564a, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4a5654	 Bytes: 7
  %loadMem_4a5654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5654 = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5654)
  store %struct.Memory* %call_4a5654, %struct.Memory** %MEMORY

  ; Code: .L_4a565b:	 RIP: 4a565b	 Bytes: 0
  br label %block_.L_4a565b
block_.L_4a565b:

  ; Code: cmpl $0x8, -0x3c(%rbp)	 RIP: 4a565b	 Bytes: 4
  %loadMem_4a565b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a565b = call %struct.Memory* @routine_cmpl__0x8__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a565b)
  store %struct.Memory* %call_4a565b, %struct.Memory** %MEMORY

  ; Code: jge .L_4a58a2	 RIP: 4a565f	 Bytes: 6
  %loadMem_4a565f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a565f = call %struct.Memory* @routine_jge_.L_4a58a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a565f, i8* %BRANCH_TAKEN, i64 579, i64 6, i64 6)
  store %struct.Memory* %call_4a565f, %struct.Memory** %MEMORY

  %loadBr_4a565f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a565f = icmp eq i8 %loadBr_4a565f, 1
  br i1 %cmpBr_4a565f, label %block_.L_4a58a2, label %block_4a5665

block_4a5665:
  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 4a5665	 Bytes: 6
  %loadMem_4a5665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5665 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5665)
  store %struct.Memory* %call_4a5665, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4a566b	 Bytes: 3
  %loadMem_4a566b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a566b = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a566b)
  store %struct.Memory* %call_4a566b, %struct.Memory** %MEMORY

  ; Code: .L_4a566e:	 RIP: 4a566e	 Bytes: 0
  br label %block_.L_4a566e
block_.L_4a566e:

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4a566e	 Bytes: 3
  %loadMem_4a566e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a566e = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a566e)
  store %struct.Memory* %call_4a566e, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %ecx	 RIP: 4a5671	 Bytes: 6
  %loadMem_4a5671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5671 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5671)
  store %struct.Memory* %call_4a5671, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %ecx	 RIP: 4a5677	 Bytes: 3
  %loadMem_4a5677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5677 = call %struct.Memory* @routine_addl__0x8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5677)
  store %struct.Memory* %call_4a5677, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4a567a	 Bytes: 2
  %loadMem_4a567a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a567a = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a567a)
  store %struct.Memory* %call_4a567a, %struct.Memory** %MEMORY

  ; Code: jge .L_4a588f	 RIP: 4a567c	 Bytes: 6
  %loadMem_4a567c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a567c = call %struct.Memory* @routine_jge_.L_4a588f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a567c, i8* %BRANCH_TAKEN, i64 531, i64 6, i64 6)
  store %struct.Memory* %call_4a567c, %struct.Memory** %MEMORY

  %loadBr_4a567c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a567c = icmp eq i8 %loadBr_4a567c, 1
  br i1 %cmpBr_4a567c, label %block_.L_4a588f, label %block_4a5682

block_4a5682:
  ; Code: movq 0x726418, %rax	 RIP: 4a5682	 Bytes: 8
  %loadMem_4a5682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5682 = call %struct.Memory* @routine_movq_0x726418___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5682)
  store %struct.Memory* %call_4a5682, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %ecx	 RIP: 4a568a	 Bytes: 6
  %loadMem_4a568a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a568a = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a568a)
  store %struct.Memory* %call_4a568a, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %ecx	 RIP: 4a5690	 Bytes: 3
  %loadMem_4a5690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5690 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5690)
  store %struct.Memory* %call_4a5690, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a5693	 Bytes: 3
  %loadMem_4a5693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5693 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5693)
  store %struct.Memory* %call_4a5693, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a5696	 Bytes: 4
  %loadMem_4a5696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5696 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5696)
  store %struct.Memory* %call_4a5696, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a569a	 Bytes: 4
  %loadMem_4a569a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a569a = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a569a)
  store %struct.Memory* %call_4a569a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 4a569e	 Bytes: 4
  %loadMem_4a569e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a569e = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a569e)
  store %struct.Memory* %call_4a569e, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4a56a2	 Bytes: 8
  %loadMem_4a56a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56a2 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56a2)
  store %struct.Memory* %call_4a56a2, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rax), %rax	 RIP: 4a56aa	 Bytes: 7
  %loadMem_4a56aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56aa = call %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56aa)
  store %struct.Memory* %call_4a56aa, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a56b1	 Bytes: 6
  %loadMem_4a56b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56b1 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56b1)
  store %struct.Memory* %call_4a56b1, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a56b7	 Bytes: 3
  %loadMem_4a56b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56b7 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56b7)
  store %struct.Memory* %call_4a56b7, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a56ba	 Bytes: 3
  %loadMem_4a56ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56ba = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56ba)
  store %struct.Memory* %call_4a56ba, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a56bd	 Bytes: 4
  %loadMem_4a56bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56bd = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56bd)
  store %struct.Memory* %call_4a56bd, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a56c1	 Bytes: 4
  %loadMem_4a56c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56c1 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56c1)
  store %struct.Memory* %call_4a56c1, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4a56c5	 Bytes: 4
  %loadMem_4a56c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56c5 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56c5)
  store %struct.Memory* %call_4a56c5, %struct.Memory** %MEMORY

  ; Code: subl %esi, %ecx	 RIP: 4a56c9	 Bytes: 2
  %loadMem_4a56c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56c9 = call %struct.Memory* @routine_subl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56c9)
  store %struct.Memory* %call_4a56c9, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rax	 RIP: 4a56cb	 Bytes: 8
  %loadMem_4a56cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56cb = call %struct.Memory* @routine_movq_0x726418___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56cb)
  store %struct.Memory* %call_4a56cb, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a56d3	 Bytes: 6
  %loadMem_4a56d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56d3 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56d3)
  store %struct.Memory* %call_4a56d3, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a56d9	 Bytes: 3
  %loadMem_4a56d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56d9 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56d9)
  store %struct.Memory* %call_4a56d9, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a56dc	 Bytes: 3
  %loadMem_4a56dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56dc = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56dc)
  store %struct.Memory* %call_4a56dc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a56df	 Bytes: 4
  %loadMem_4a56df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56df = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56df)
  store %struct.Memory* %call_4a56df, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a56e3	 Bytes: 4
  %loadMem_4a56e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56e3 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56e3)
  store %struct.Memory* %call_4a56e3, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4a56e7	 Bytes: 4
  %loadMem_4a56e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56e7 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56e7)
  store %struct.Memory* %call_4a56e7, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4a56eb	 Bytes: 8
  %loadMem_4a56eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56eb = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56eb)
  store %struct.Memory* %call_4a56eb, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rax), %rax	 RIP: 4a56f3	 Bytes: 7
  %loadMem_4a56f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56f3 = call %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56f3)
  store %struct.Memory* %call_4a56f3, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %edi	 RIP: 4a56fa	 Bytes: 6
  %loadMem_4a56fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a56fa = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a56fa)
  store %struct.Memory* %call_4a56fa, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edi	 RIP: 4a5700	 Bytes: 3
  %loadMem_4a5700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5700 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5700)
  store %struct.Memory* %call_4a5700, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 4a5703	 Bytes: 3
  %loadMem_4a5703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5703 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5703)
  store %struct.Memory* %call_4a5703, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a5706	 Bytes: 4
  %loadMem_4a5706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5706 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5706)
  store %struct.Memory* %call_4a5706, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a570a	 Bytes: 4
  %loadMem_4a570a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a570a = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a570a)
  store %struct.Memory* %call_4a570a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %edi	 RIP: 4a570e	 Bytes: 4
  %loadMem_4a570e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a570e = call %struct.Memory* @routine_movzwl___rax__rdx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a570e)
  store %struct.Memory* %call_4a570e, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 4a5712	 Bytes: 2
  %loadMem_4a5712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5712 = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5712)
  store %struct.Memory* %call_4a5712, %struct.Memory** %MEMORY

  ; Code: imull %esi, %ecx	 RIP: 4a5714	 Bytes: 3
  %loadMem_4a5714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5714 = call %struct.Memory* @routine_imull__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5714)
  store %struct.Memory* %call_4a5714, %struct.Memory** %MEMORY

  ; Code: addl -0x26c(%rbp), %ecx	 RIP: 4a5717	 Bytes: 6
  %loadMem_4a5717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5717 = call %struct.Memory* @routine_addl_MINUS0x26c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5717)
  store %struct.Memory* %call_4a5717, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x26c(%rbp)	 RIP: 4a571d	 Bytes: 6
  %loadMem_4a571d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a571d = call %struct.Memory* @routine_movl__ecx__MINUS0x26c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a571d)
  store %struct.Memory* %call_4a571d, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rax	 RIP: 4a5723	 Bytes: 8
  %loadMem_4a5723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5723 = call %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5723)
  store %struct.Memory* %call_4a5723, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4a572b	 Bytes: 3
  %loadMem_4a572b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a572b = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a572b)
  store %struct.Memory* %call_4a572b, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %ecx	 RIP: 4a572e	 Bytes: 6
  %loadMem_4a572e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a572e = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a572e)
  store %struct.Memory* %call_4a572e, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %ecx	 RIP: 4a5734	 Bytes: 3
  %loadMem_4a5734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5734 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5734)
  store %struct.Memory* %call_4a5734, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a5737	 Bytes: 3
  %loadMem_4a5737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5737 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5737)
  store %struct.Memory* %call_4a5737, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a573a	 Bytes: 4
  %loadMem_4a573a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a573a = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a573a)
  store %struct.Memory* %call_4a573a, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a573e	 Bytes: 4
  %loadMem_4a573e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a573e = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a573e)
  store %struct.Memory* %call_4a573e, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 4a5742	 Bytes: 4
  %loadMem_4a5742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5742 = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5742)
  store %struct.Memory* %call_4a5742, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4a5746	 Bytes: 8
  %loadMem_4a5746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5746 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5746)
  store %struct.Memory* %call_4a5746, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 4a574e	 Bytes: 7
  %loadMem_4a574e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a574e = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a574e)
  store %struct.Memory* %call_4a574e, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4a5755	 Bytes: 3
  %loadMem_4a5755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5755 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5755)
  store %struct.Memory* %call_4a5755, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a5758	 Bytes: 6
  %loadMem_4a5758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5758 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5758)
  store %struct.Memory* %call_4a5758, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a575e	 Bytes: 3
  %loadMem_4a575e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a575e = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a575e)
  store %struct.Memory* %call_4a575e, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5761	 Bytes: 3
  %loadMem_4a5761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5761 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5761)
  store %struct.Memory* %call_4a5761, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a5764	 Bytes: 4
  %loadMem_4a5764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5764 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5764)
  store %struct.Memory* %call_4a5764, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a5768	 Bytes: 4
  %loadMem_4a5768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5768 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5768)
  store %struct.Memory* %call_4a5768, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4a576c	 Bytes: 4
  %loadMem_4a576c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a576c = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a576c)
  store %struct.Memory* %call_4a576c, %struct.Memory** %MEMORY

  ; Code: subl %esi, %ecx	 RIP: 4a5770	 Bytes: 2
  %loadMem_4a5770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5770 = call %struct.Memory* @routine_subl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5770)
  store %struct.Memory* %call_4a5770, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rax	 RIP: 4a5772	 Bytes: 8
  %loadMem_4a5772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5772 = call %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5772)
  store %struct.Memory* %call_4a5772, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4a577a	 Bytes: 3
  %loadMem_4a577a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a577a = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a577a)
  store %struct.Memory* %call_4a577a, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a577d	 Bytes: 6
  %loadMem_4a577d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a577d = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a577d)
  store %struct.Memory* %call_4a577d, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a5783	 Bytes: 3
  %loadMem_4a5783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5783 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5783)
  store %struct.Memory* %call_4a5783, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5786	 Bytes: 3
  %loadMem_4a5786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5786 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5786)
  store %struct.Memory* %call_4a5786, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a5789	 Bytes: 4
  %loadMem_4a5789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5789 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5789)
  store %struct.Memory* %call_4a5789, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a578d	 Bytes: 4
  %loadMem_4a578d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a578d = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a578d)
  store %struct.Memory* %call_4a578d, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4a5791	 Bytes: 4
  %loadMem_4a5791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5791 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5791)
  store %struct.Memory* %call_4a5791, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4a5795	 Bytes: 8
  %loadMem_4a5795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5795 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5795)
  store %struct.Memory* %call_4a5795, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 4a579d	 Bytes: 7
  %loadMem_4a579d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a579d = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a579d)
  store %struct.Memory* %call_4a579d, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 4a57a4	 Bytes: 3
  %loadMem_4a57a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57a4 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57a4)
  store %struct.Memory* %call_4a57a4, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %edi	 RIP: 4a57a7	 Bytes: 6
  %loadMem_4a57a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57a7 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57a7)
  store %struct.Memory* %call_4a57a7, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edi	 RIP: 4a57ad	 Bytes: 3
  %loadMem_4a57ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57ad = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57ad)
  store %struct.Memory* %call_4a57ad, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 4a57b0	 Bytes: 3
  %loadMem_4a57b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57b0 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57b0)
  store %struct.Memory* %call_4a57b0, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a57b3	 Bytes: 4
  %loadMem_4a57b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57b3 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57b3)
  store %struct.Memory* %call_4a57b3, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a57b7	 Bytes: 4
  %loadMem_4a57b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57b7 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57b7)
  store %struct.Memory* %call_4a57b7, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %edi	 RIP: 4a57bb	 Bytes: 4
  %loadMem_4a57bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57bb = call %struct.Memory* @routine_movzwl___rax__rdx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57bb)
  store %struct.Memory* %call_4a57bb, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 4a57bf	 Bytes: 2
  %loadMem_4a57bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57bf = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57bf)
  store %struct.Memory* %call_4a57bf, %struct.Memory** %MEMORY

  ; Code: imull %esi, %ecx	 RIP: 4a57c1	 Bytes: 3
  %loadMem_4a57c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57c1 = call %struct.Memory* @routine_imull__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57c1)
  store %struct.Memory* %call_4a57c1, %struct.Memory** %MEMORY

  ; Code: addl -0x26c(%rbp), %ecx	 RIP: 4a57c4	 Bytes: 6
  %loadMem_4a57c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57c4 = call %struct.Memory* @routine_addl_MINUS0x26c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57c4)
  store %struct.Memory* %call_4a57c4, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x26c(%rbp)	 RIP: 4a57ca	 Bytes: 6
  %loadMem_4a57ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57ca = call %struct.Memory* @routine_movl__ecx__MINUS0x26c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57ca)
  store %struct.Memory* %call_4a57ca, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rax	 RIP: 4a57d0	 Bytes: 8
  %loadMem_4a57d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57d0 = call %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57d0)
  store %struct.Memory* %call_4a57d0, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4a57d8	 Bytes: 4
  %loadMem_4a57d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57d8 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57d8)
  store %struct.Memory* %call_4a57d8, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %ecx	 RIP: 4a57dc	 Bytes: 6
  %loadMem_4a57dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57dc = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57dc)
  store %struct.Memory* %call_4a57dc, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %ecx	 RIP: 4a57e2	 Bytes: 3
  %loadMem_4a57e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57e2 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57e2)
  store %struct.Memory* %call_4a57e2, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a57e5	 Bytes: 3
  %loadMem_4a57e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57e5 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57e5)
  store %struct.Memory* %call_4a57e5, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a57e8	 Bytes: 4
  %loadMem_4a57e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57e8 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57e8)
  store %struct.Memory* %call_4a57e8, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a57ec	 Bytes: 4
  %loadMem_4a57ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57ec = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57ec)
  store %struct.Memory* %call_4a57ec, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 4a57f0	 Bytes: 4
  %loadMem_4a57f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57f0 = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57f0)
  store %struct.Memory* %call_4a57f0, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4a57f4	 Bytes: 8
  %loadMem_4a57f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57f4 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57f4)
  store %struct.Memory* %call_4a57f4, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 4a57fc	 Bytes: 7
  %loadMem_4a57fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a57fc = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a57fc)
  store %struct.Memory* %call_4a57fc, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4a5803	 Bytes: 4
  %loadMem_4a5803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5803 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5803)
  store %struct.Memory* %call_4a5803, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a5807	 Bytes: 6
  %loadMem_4a5807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5807 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5807)
  store %struct.Memory* %call_4a5807, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a580d	 Bytes: 3
  %loadMem_4a580d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a580d = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a580d)
  store %struct.Memory* %call_4a580d, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5810	 Bytes: 3
  %loadMem_4a5810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5810 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5810)
  store %struct.Memory* %call_4a5810, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a5813	 Bytes: 4
  %loadMem_4a5813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5813 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5813)
  store %struct.Memory* %call_4a5813, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a5817	 Bytes: 4
  %loadMem_4a5817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5817 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5817)
  store %struct.Memory* %call_4a5817, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4a581b	 Bytes: 4
  %loadMem_4a581b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a581b = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a581b)
  store %struct.Memory* %call_4a581b, %struct.Memory** %MEMORY

  ; Code: subl %esi, %ecx	 RIP: 4a581f	 Bytes: 2
  %loadMem_4a581f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a581f = call %struct.Memory* @routine_subl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a581f)
  store %struct.Memory* %call_4a581f, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rax	 RIP: 4a5821	 Bytes: 8
  %loadMem_4a5821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5821 = call %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5821)
  store %struct.Memory* %call_4a5821, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4a5829	 Bytes: 4
  %loadMem_4a5829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5829 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5829)
  store %struct.Memory* %call_4a5829, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a582d	 Bytes: 6
  %loadMem_4a582d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a582d = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a582d)
  store %struct.Memory* %call_4a582d, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a5833	 Bytes: 3
  %loadMem_4a5833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5833 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5833)
  store %struct.Memory* %call_4a5833, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5836	 Bytes: 3
  %loadMem_4a5836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5836 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5836)
  store %struct.Memory* %call_4a5836, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a5839	 Bytes: 4
  %loadMem_4a5839 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5839 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5839)
  store %struct.Memory* %call_4a5839, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a583d	 Bytes: 4
  %loadMem_4a583d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a583d = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a583d)
  store %struct.Memory* %call_4a583d, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4a5841	 Bytes: 4
  %loadMem_4a5841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5841 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5841)
  store %struct.Memory* %call_4a5841, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4a5845	 Bytes: 8
  %loadMem_4a5845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5845 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5845)
  store %struct.Memory* %call_4a5845, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 4a584d	 Bytes: 7
  %loadMem_4a584d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a584d = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a584d)
  store %struct.Memory* %call_4a584d, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4a5854	 Bytes: 4
  %loadMem_4a5854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5854 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5854)
  store %struct.Memory* %call_4a5854, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %edi	 RIP: 4a5858	 Bytes: 6
  %loadMem_4a5858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5858 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5858)
  store %struct.Memory* %call_4a5858, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edi	 RIP: 4a585e	 Bytes: 3
  %loadMem_4a585e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a585e = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a585e)
  store %struct.Memory* %call_4a585e, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 4a5861	 Bytes: 3
  %loadMem_4a5861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5861 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5861)
  store %struct.Memory* %call_4a5861, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4a5864	 Bytes: 4
  %loadMem_4a5864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5864 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5864)
  store %struct.Memory* %call_4a5864, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4a5868	 Bytes: 4
  %loadMem_4a5868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5868 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5868)
  store %struct.Memory* %call_4a5868, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %edi	 RIP: 4a586c	 Bytes: 4
  %loadMem_4a586c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a586c = call %struct.Memory* @routine_movzwl___rax__rdx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a586c)
  store %struct.Memory* %call_4a586c, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 4a5870	 Bytes: 2
  %loadMem_4a5870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5870 = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5870)
  store %struct.Memory* %call_4a5870, %struct.Memory** %MEMORY

  ; Code: imull %esi, %ecx	 RIP: 4a5872	 Bytes: 3
  %loadMem_4a5872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5872 = call %struct.Memory* @routine_imull__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5872)
  store %struct.Memory* %call_4a5872, %struct.Memory** %MEMORY

  ; Code: addl -0x26c(%rbp), %ecx	 RIP: 4a5875	 Bytes: 6
  %loadMem_4a5875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5875 = call %struct.Memory* @routine_addl_MINUS0x26c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5875)
  store %struct.Memory* %call_4a5875, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x26c(%rbp)	 RIP: 4a587b	 Bytes: 6
  %loadMem_4a587b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a587b = call %struct.Memory* @routine_movl__ecx__MINUS0x26c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a587b)
  store %struct.Memory* %call_4a587b, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4a5881	 Bytes: 3
  %loadMem_4a5881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5881 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5881)
  store %struct.Memory* %call_4a5881, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5884	 Bytes: 3
  %loadMem_4a5884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5884 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5884)
  store %struct.Memory* %call_4a5884, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4a5887	 Bytes: 3
  %loadMem_4a5887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5887 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5887)
  store %struct.Memory* %call_4a5887, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a566e	 RIP: 4a588a	 Bytes: 5
  %loadMem_4a588a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a588a = call %struct.Memory* @routine_jmpq_.L_4a566e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a588a, i64 -540, i64 5)
  store %struct.Memory* %call_4a588a, %struct.Memory** %MEMORY

  br label %block_.L_4a566e

  ; Code: .L_4a588f:	 RIP: 4a588f	 Bytes: 0
block_.L_4a588f:

  ; Code: jmpq .L_4a5894	 RIP: 4a588f	 Bytes: 5
  %loadMem_4a588f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a588f = call %struct.Memory* @routine_jmpq_.L_4a5894(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a588f, i64 5, i64 5)
  store %struct.Memory* %call_4a588f, %struct.Memory** %MEMORY

  br label %block_.L_4a5894

  ; Code: .L_4a5894:	 RIP: 4a5894	 Bytes: 0
block_.L_4a5894:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4a5894	 Bytes: 3
  %loadMem_4a5894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5894 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5894)
  store %struct.Memory* %call_4a5894, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5897	 Bytes: 3
  %loadMem_4a5897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5897 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5897)
  store %struct.Memory* %call_4a5897, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4a589a	 Bytes: 3
  %loadMem_4a589a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a589a = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a589a)
  store %struct.Memory* %call_4a589a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a565b	 RIP: 4a589d	 Bytes: 5
  %loadMem_4a589d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a589d = call %struct.Memory* @routine_jmpq_.L_4a565b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a589d, i64 -578, i64 5)
  store %struct.Memory* %call_4a589d, %struct.Memory** %MEMORY

  br label %block_.L_4a565b

  ; Code: .L_4a58a2:	 RIP: 4a58a2	 Bytes: 0
block_.L_4a58a2:

  ; Code: cvtsi2sdl -0x26c(%rbp), %xmm0	 RIP: 4a58a2	 Bytes: 8
  %loadMem_4a58a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58a2 = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x26c__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58a2)
  store %struct.Memory* %call_4a58a2, %struct.Memory** %MEMORY

  ; Code: movsd -0x18(%rbp), %xmm1	 RIP: 4a58aa	 Bytes: 5
  %loadMem_4a58aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58aa = call %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58aa)
  store %struct.Memory* %call_4a58aa, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x268(%rbp), %xmm2	 RIP: 4a58af	 Bytes: 8
  %loadMem_4a58af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58af = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x268__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58af)
  store %struct.Memory* %call_4a58af, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 4a58b7	 Bytes: 4
  %loadMem_4a58b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58b7 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58b7)
  store %struct.Memory* %call_4a58b7, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 4a58bb	 Bytes: 4
  %loadMem_4a58bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58bb = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58bb)
  store %struct.Memory* %call_4a58bb, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x1d8(%rbp)	 RIP: 4a58bf	 Bytes: 8
  %loadMem_4a58bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58bf = call %struct.Memory* @routine_movsd__xmm0__MINUS0x1d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58bf)
  store %struct.Memory* %call_4a58bf, %struct.Memory** %MEMORY

  ; Code: movsd -0x1d8(%rbp), %xmm0	 RIP: 4a58c7	 Bytes: 8
  %loadMem_4a58c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58c7 = call %struct.Memory* @routine_movsd_MINUS0x1d8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58c7)
  store %struct.Memory* %call_4a58c7, %struct.Memory** %MEMORY

  ; Code: movsd -0x208(%rbp), %xmm1	 RIP: 4a58cf	 Bytes: 8
  %loadMem_4a58cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58cf = call %struct.Memory* @routine_movsd_MINUS0x208__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58cf)
  store %struct.Memory* %call_4a58cf, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 4a58d7	 Bytes: 4
  %loadMem_4a58d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58d7 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58d7)
  store %struct.Memory* %call_4a58d7, %struct.Memory** %MEMORY

  ; Code: jbe .L_4a5efd	 RIP: 4a58db	 Bytes: 6
  %loadMem_4a58db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58db = call %struct.Memory* @routine_jbe_.L_4a5efd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58db, i8* %BRANCH_TAKEN, i64 1570, i64 6, i64 6)
  store %struct.Memory* %call_4a58db, %struct.Memory** %MEMORY

  %loadBr_4a58db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a58db = icmp eq i8 %loadBr_4a58db, 1
  br i1 %cmpBr_4a58db, label %block_.L_4a5efd, label %block_4a58e1

block_4a58e1:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a58e1	 Bytes: 7
  %loadMem_4a58e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58e1 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58e1)
  store %struct.Memory* %call_4a58e1, %struct.Memory** %MEMORY

  ; Code: .L_4a58e8:	 RIP: 4a58e8	 Bytes: 0
  br label %block_.L_4a58e8
block_.L_4a58e8:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4a58e8	 Bytes: 4
  %loadMem_4a58e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58e8 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58e8)
  store %struct.Memory* %call_4a58e8, %struct.Memory** %MEMORY

  ; Code: jge .L_4a599d	 RIP: 4a58ec	 Bytes: 6
  %loadMem_4a58ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58ec = call %struct.Memory* @routine_jge_.L_4a599d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58ec, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_4a58ec, %struct.Memory** %MEMORY

  %loadBr_4a58ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a58ec = icmp eq i8 %loadBr_4a58ec, 1
  br i1 %cmpBr_4a58ec, label %block_.L_4a599d, label %block_4a58f2

block_4a58f2:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a58f2	 Bytes: 7
  %loadMem_4a58f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58f2 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58f2)
  store %struct.Memory* %call_4a58f2, %struct.Memory** %MEMORY

  ; Code: .L_4a58f9:	 RIP: 4a58f9	 Bytes: 0
  br label %block_.L_4a58f9
block_.L_4a58f9:

  ; Code: cmpl $0x41, -0x2c(%rbp)	 RIP: 4a58f9	 Bytes: 4
  %loadMem_4a58f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58f9 = call %struct.Memory* @routine_cmpl__0x41__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58f9)
  store %struct.Memory* %call_4a58f9, %struct.Memory** %MEMORY

  ; Code: jge .L_4a598a	 RIP: 4a58fd	 Bytes: 6
  %loadMem_4a58fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a58fd = call %struct.Memory* @routine_jge_.L_4a598a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a58fd, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_4a58fd, %struct.Memory** %MEMORY

  %loadBr_4a58fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a58fd = icmp eq i8 %loadBr_4a58fd, 1
  br i1 %cmpBr_4a58fd, label %block_.L_4a598a, label %block_4a5903

block_4a5903:
  ; Code: movl $0x0, -0x34(%rbp)	 RIP: 4a5903	 Bytes: 7
  %loadMem_4a5903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5903 = call %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5903)
  store %struct.Memory* %call_4a5903, %struct.Memory** %MEMORY

  ; Code: .L_4a590a:	 RIP: 4a590a	 Bytes: 0
  br label %block_.L_4a590a
block_.L_4a590a:

  ; Code: cmpl $0x4, -0x34(%rbp)	 RIP: 4a590a	 Bytes: 4
  %loadMem_4a590a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a590a = call %struct.Memory* @routine_cmpl__0x4__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a590a)
  store %struct.Memory* %call_4a590a, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5977	 RIP: 4a590e	 Bytes: 6
  %loadMem_4a590e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a590e = call %struct.Memory* @routine_jge_.L_4a5977(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a590e, i8* %BRANCH_TAKEN, i64 105, i64 6, i64 6)
  store %struct.Memory* %call_4a590e, %struct.Memory** %MEMORY

  %loadBr_4a590e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a590e = icmp eq i8 %loadBr_4a590e, 1
  br i1 %cmpBr_4a590e, label %block_.L_4a5977, label %block_4a5914

block_4a5914:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a5914	 Bytes: 8
  %loadMem_4a5914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5914 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5914)
  store %struct.Memory* %call_4a5914, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 4a591c	 Bytes: 7
  %loadMem_4a591c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a591c = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a591c)
  store %struct.Memory* %call_4a591c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4a5923	 Bytes: 4
  %loadMem_4a5923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5923 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5923)
  store %struct.Memory* %call_4a5923, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a5927	 Bytes: 4
  %loadMem_4a5927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5927 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5927)
  store %struct.Memory* %call_4a5927, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rcx	 RIP: 4a592b	 Bytes: 4
  %loadMem_4a592b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a592b = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a592b)
  store %struct.Memory* %call_4a592b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a592f	 Bytes: 4
  %loadMem_4a592f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a592f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a592f)
  store %struct.Memory* %call_4a592f, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a5933	 Bytes: 4
  %loadMem_4a5933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5933 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5933)
  store %struct.Memory* %call_4a5933, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a5937	 Bytes: 4
  %loadMem_4a5937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5937 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5937)
  store %struct.Memory* %call_4a5937, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a593b	 Bytes: 4
  %loadMem_4a593b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a593b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a593b)
  store %struct.Memory* %call_4a593b, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a593f	 Bytes: 3
  %loadMem_4a593f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a593f = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a593f)
  store %struct.Memory* %call_4a593f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc5f8, %rax	 RIP: 4a5942	 Bytes: 8
  %loadMem_4a5942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5942 = call %struct.Memory* @routine_movq_0x6cc5f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5942)
  store %struct.Memory* %call_4a5942, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4a594a	 Bytes: 4
  %loadMem_4a594a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a594a = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a594a)
  store %struct.Memory* %call_4a594a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a594e	 Bytes: 4
  %loadMem_4a594e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a594e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a594e)
  store %struct.Memory* %call_4a594e, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rcx	 RIP: 4a5952	 Bytes: 4
  %loadMem_4a5952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5952 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5952)
  store %struct.Memory* %call_4a5952, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a5956	 Bytes: 4
  %loadMem_4a5956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5956 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5956)
  store %struct.Memory* %call_4a5956, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a595a	 Bytes: 4
  %loadMem_4a595a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a595a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a595a)
  store %struct.Memory* %call_4a595a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a595e	 Bytes: 4
  %loadMem_4a595e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a595e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a595e)
  store %struct.Memory* %call_4a595e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a5962	 Bytes: 4
  %loadMem_4a5962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5962 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5962)
  store %struct.Memory* %call_4a5962, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a5966	 Bytes: 3
  %loadMem_4a5966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5966 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5966)
  store %struct.Memory* %call_4a5966, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %eax	 RIP: 4a5969	 Bytes: 3
  %loadMem_4a5969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5969 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5969)
  store %struct.Memory* %call_4a5969, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a596c	 Bytes: 3
  %loadMem_4a596c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a596c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a596c)
  store %struct.Memory* %call_4a596c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x34(%rbp)	 RIP: 4a596f	 Bytes: 3
  %loadMem_4a596f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a596f = call %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a596f)
  store %struct.Memory* %call_4a596f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a590a	 RIP: 4a5972	 Bytes: 5
  %loadMem_4a5972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5972 = call %struct.Memory* @routine_jmpq_.L_4a590a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5972, i64 -104, i64 5)
  store %struct.Memory* %call_4a5972, %struct.Memory** %MEMORY

  br label %block_.L_4a590a

  ; Code: .L_4a5977:	 RIP: 4a5977	 Bytes: 0
block_.L_4a5977:

  ; Code: jmpq .L_4a597c	 RIP: 4a5977	 Bytes: 5
  %loadMem_4a5977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5977 = call %struct.Memory* @routine_jmpq_.L_4a597c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5977, i64 5, i64 5)
  store %struct.Memory* %call_4a5977, %struct.Memory** %MEMORY

  br label %block_.L_4a597c

  ; Code: .L_4a597c:	 RIP: 4a597c	 Bytes: 0
block_.L_4a597c:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a597c	 Bytes: 3
  %loadMem_4a597c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a597c = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a597c)
  store %struct.Memory* %call_4a597c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a597f	 Bytes: 3
  %loadMem_4a597f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a597f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a597f)
  store %struct.Memory* %call_4a597f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a5982	 Bytes: 3
  %loadMem_4a5982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5982 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5982)
  store %struct.Memory* %call_4a5982, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a58f9	 RIP: 4a5985	 Bytes: 5
  %loadMem_4a5985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5985 = call %struct.Memory* @routine_jmpq_.L_4a58f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5985, i64 -140, i64 5)
  store %struct.Memory* %call_4a5985, %struct.Memory** %MEMORY

  br label %block_.L_4a58f9

  ; Code: .L_4a598a:	 RIP: 4a598a	 Bytes: 0
block_.L_4a598a:

  ; Code: jmpq .L_4a598f	 RIP: 4a598a	 Bytes: 5
  %loadMem_4a598a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a598a = call %struct.Memory* @routine_jmpq_.L_4a598f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a598a, i64 5, i64 5)
  store %struct.Memory* %call_4a598a, %struct.Memory** %MEMORY

  br label %block_.L_4a598f

  ; Code: .L_4a598f:	 RIP: 4a598f	 Bytes: 0
block_.L_4a598f:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a598f	 Bytes: 3
  %loadMem_4a598f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a598f = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a598f)
  store %struct.Memory* %call_4a598f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5992	 Bytes: 3
  %loadMem_4a5992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5992 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5992)
  store %struct.Memory* %call_4a5992, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a5995	 Bytes: 3
  %loadMem_4a5995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5995 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5995)
  store %struct.Memory* %call_4a5995, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a58e8	 RIP: 4a5998	 Bytes: 5
  %loadMem_4a5998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5998 = call %struct.Memory* @routine_jmpq_.L_4a58e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5998, i64 -176, i64 5)
  store %struct.Memory* %call_4a5998, %struct.Memory** %MEMORY

  br label %block_.L_4a58e8

  ; Code: .L_4a599d:	 RIP: 4a599d	 Bytes: 0
block_.L_4a599d:

  ; Code: movl $0x0, -0x274(%rbp)	 RIP: 4a599d	 Bytes: 10
  %loadMem_4a599d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a599d = call %struct.Memory* @routine_movl__0x0__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a599d)
  store %struct.Memory* %call_4a599d, %struct.Memory** %MEMORY

  ; Code: .L_4a59a7:	 RIP: 4a59a7	 Bytes: 0
  br label %block_.L_4a59a7
block_.L_4a59a7:

  ; Code: cmpl $0x4, -0x274(%rbp)	 RIP: 4a59a7	 Bytes: 7
  %loadMem_4a59a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59a7 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59a7)
  store %struct.Memory* %call_4a59a7, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5e55	 RIP: 4a59ae	 Bytes: 6
  %loadMem_4a59ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59ae = call %struct.Memory* @routine_jge_.L_4a5e55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59ae, i8* %BRANCH_TAKEN, i64 1191, i64 6, i64 6)
  store %struct.Memory* %call_4a59ae, %struct.Memory** %MEMORY

  %loadBr_4a59ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a59ae = icmp eq i8 %loadBr_4a59ae, 1
  br i1 %cmpBr_4a59ae, label %block_.L_4a5e55, label %block_4a59b4

block_4a59b4:
  ; Code: movl $0x2, %eax	 RIP: 4a59b4	 Bytes: 5
  %loadMem_4a59b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59b4 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59b4)
  store %struct.Memory* %call_4a59b4, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %ecx	 RIP: 4a59b9	 Bytes: 6
  %loadMem_4a59b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59b9 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59b9)
  store %struct.Memory* %call_4a59b9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4f8(%rbp)	 RIP: 4a59bf	 Bytes: 6
  %loadMem_4a59bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59bf = call %struct.Memory* @routine_movl__eax__MINUS0x4f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59bf)
  store %struct.Memory* %call_4a59bf, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4a59c5	 Bytes: 2
  %loadMem_4a59c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59c5 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59c5)
  store %struct.Memory* %call_4a59c5, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a59c7	 Bytes: 1
  %loadMem_4a59c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59c7 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59c7)
  store %struct.Memory* %call_4a59c7, %struct.Memory** %MEMORY

  ; Code: movl -0x4f8(%rbp), %ecx	 RIP: 4a59c8	 Bytes: 6
  %loadMem_4a59c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59c8 = call %struct.Memory* @routine_movl_MINUS0x4f8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59c8)
  store %struct.Memory* %call_4a59c8, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a59ce	 Bytes: 2
  %loadMem_4a59ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59ce = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59ce)
  store %struct.Memory* %call_4a59ce, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %edx	 RIP: 4a59d0	 Bytes: 3
  %loadMem_4a59d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59d0 = call %struct.Memory* @routine_shll__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59d0)
  store %struct.Memory* %call_4a59d0, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1dc(%rbp)	 RIP: 4a59d3	 Bytes: 6
  %loadMem_4a59d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59d3 = call %struct.Memory* @routine_movl__edx__MINUS0x1dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59d3)
  store %struct.Memory* %call_4a59d3, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edx	 RIP: 4a59d9	 Bytes: 6
  %loadMem_4a59d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59d9 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59d9)
  store %struct.Memory* %call_4a59d9, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a59df	 Bytes: 2
  %loadMem_4a59df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59df = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59df)
  store %struct.Memory* %call_4a59df, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a59e1	 Bytes: 1
  %loadMem_4a59e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59e1 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59e1)
  store %struct.Memory* %call_4a59e1, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a59e2	 Bytes: 2
  %loadMem_4a59e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59e2 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59e2)
  store %struct.Memory* %call_4a59e2, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 4a59e4	 Bytes: 3
  %loadMem_4a59e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59e4 = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59e4)
  store %struct.Memory* %call_4a59e4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e0(%rbp)	 RIP: 4a59e7	 Bytes: 6
  %loadMem_4a59e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59e7 = call %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59e7)
  store %struct.Memory* %call_4a59e7, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a59ed	 Bytes: 7
  %loadMem_4a59ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59ed = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59ed)
  store %struct.Memory* %call_4a59ed, %struct.Memory** %MEMORY

  ; Code: .L_4a59f4:	 RIP: 4a59f4	 Bytes: 0
  br label %block_.L_4a59f4
block_.L_4a59f4:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4a59f4	 Bytes: 4
  %loadMem_4a59f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59f4 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59f4)
  store %struct.Memory* %call_4a59f4, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5a93	 RIP: 4a59f8	 Bytes: 6
  %loadMem_4a59f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59f8 = call %struct.Memory* @routine_jge_.L_4a5a93(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59f8, i8* %BRANCH_TAKEN, i64 155, i64 6, i64 6)
  store %struct.Memory* %call_4a59f8, %struct.Memory** %MEMORY

  %loadBr_4a59f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a59f8 = icmp eq i8 %loadBr_4a59f8, 1
  br i1 %cmpBr_4a59f8, label %block_.L_4a5a93, label %block_4a59fe

block_4a59fe:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a59fe	 Bytes: 7
  %loadMem_4a59fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a59fe = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a59fe)
  store %struct.Memory* %call_4a59fe, %struct.Memory** %MEMORY

  ; Code: .L_4a5a05:	 RIP: 4a5a05	 Bytes: 0
  br label %block_.L_4a5a05
block_.L_4a5a05:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 4a5a05	 Bytes: 4
  %loadMem_4a5a05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a05 = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a05)
  store %struct.Memory* %call_4a5a05, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5a80	 RIP: 4a5a09	 Bytes: 6
  %loadMem_4a5a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a09 = call %struct.Memory* @routine_jge_.L_4a5a80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a09, i8* %BRANCH_TAKEN, i64 119, i64 6, i64 6)
  store %struct.Memory* %call_4a5a09, %struct.Memory** %MEMORY

  %loadBr_4a5a09 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5a09 = icmp eq i8 %loadBr_4a5a09, 1
  br i1 %cmpBr_4a5a09, label %block_.L_4a5a80, label %block_4a5a0f

block_4a5a0f:
  ; Code: movq $0x6ccb00, %rax	 RIP: 4a5a0f	 Bytes: 10
  %loadMem_4a5a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a0f = call %struct.Memory* @routine_movq__0x6ccb00___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a0f)
  store %struct.Memory* %call_4a5a0f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a5a19	 Bytes: 8
  %loadMem_4a5a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a19 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a19)
  store %struct.Memory* %call_4a5a19, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rcx), %rcx	 RIP: 4a5a21	 Bytes: 7
  %loadMem_4a5a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a21 = call %struct.Memory* @routine_movq_0x3738__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a21)
  store %struct.Memory* %call_4a5a21, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a5a28	 Bytes: 3
  %loadMem_4a5a28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a28 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a28)
  store %struct.Memory* %call_4a5a28, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %edx	 RIP: 4a5a2b	 Bytes: 3
  %loadMem_4a5a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a2b = call %struct.Memory* @routine_addl__0x4___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a2b)
  store %struct.Memory* %call_4a5a2b, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4a5a2e	 Bytes: 3
  %loadMem_4a5a2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a2e = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a2e)
  store %struct.Memory* %call_4a5a2e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4a5a31	 Bytes: 4
  %loadMem_4a5a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a31 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a31)
  store %struct.Memory* %call_4a5a31, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rsi	 RIP: 4a5a35	 Bytes: 7
  %loadMem_4a5a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a35 = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a35)
  store %struct.Memory* %call_4a5a35, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4a5a3c	 Bytes: 4
  %loadMem_4a5a3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a3c = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a3c)
  store %struct.Memory* %call_4a5a3c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a5a40	 Bytes: 4
  %loadMem_4a5a40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a40 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a40)
  store %struct.Memory* %call_4a5a40, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4a5a44	 Bytes: 4
  %loadMem_4a5a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a44 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a44)
  store %struct.Memory* %call_4a5a44, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a5a48	 Bytes: 4
  %loadMem_4a5a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a48 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a48)
  store %struct.Memory* %call_4a5a48, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rsi,4), %edx	 RIP: 4a5a4c	 Bytes: 3
  %loadMem_4a5a4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a4c = call %struct.Memory* @routine_movl___rcx__rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a4c)
  store %struct.Memory* %call_4a5a4c, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rcx	 RIP: 4a5a4f	 Bytes: 7
  %loadMem_4a5a4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a4f = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a4f)
  store %struct.Memory* %call_4a5a4f, %struct.Memory** %MEMORY

  ; Code: imulq $0x90, %rcx, %rcx	 RIP: 4a5a56	 Bytes: 7
  %loadMem_4a5a56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a56 = call %struct.Memory* @routine_imulq__0x90___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a56)
  store %struct.Memory* %call_4a5a56, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a5a5d	 Bytes: 3
  %loadMem_4a5a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a5d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a5d)
  store %struct.Memory* %call_4a5a5d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a5a60	 Bytes: 4
  %loadMem_4a5a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a60 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a60)
  store %struct.Memory* %call_4a5a60, %struct.Memory** %MEMORY

  ; Code: imulq $0x48, %rcx, %rcx	 RIP: 4a5a64	 Bytes: 4
  %loadMem_4a5a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a64 = call %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a64)
  store %struct.Memory* %call_4a5a64, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a5a68	 Bytes: 3
  %loadMem_4a5a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a68 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a68)
  store %struct.Memory* %call_4a5a68, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a5a6b	 Bytes: 4
  %loadMem_4a5a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a6b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a6b)
  store %struct.Memory* %call_4a5a6b, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a5a6f	 Bytes: 3
  %loadMem_4a5a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a6f = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a6f)
  store %struct.Memory* %call_4a5a6f, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a5a72	 Bytes: 3
  %loadMem_4a5a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a72 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a72)
  store %struct.Memory* %call_4a5a72, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5a75	 Bytes: 3
  %loadMem_4a5a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a75 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a75)
  store %struct.Memory* %call_4a5a75, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a5a78	 Bytes: 3
  %loadMem_4a5a78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a78 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a78)
  store %struct.Memory* %call_4a5a78, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5a05	 RIP: 4a5a7b	 Bytes: 5
  %loadMem_4a5a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a7b = call %struct.Memory* @routine_jmpq_.L_4a5a05(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a7b, i64 -118, i64 5)
  store %struct.Memory* %call_4a5a7b, %struct.Memory** %MEMORY

  br label %block_.L_4a5a05

  ; Code: .L_4a5a80:	 RIP: 4a5a80	 Bytes: 0
block_.L_4a5a80:

  ; Code: jmpq .L_4a5a85	 RIP: 4a5a80	 Bytes: 5
  %loadMem_4a5a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a80 = call %struct.Memory* @routine_jmpq_.L_4a5a85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a80, i64 5, i64 5)
  store %struct.Memory* %call_4a5a80, %struct.Memory** %MEMORY

  br label %block_.L_4a5a85

  ; Code: .L_4a5a85:	 RIP: 4a5a85	 Bytes: 0
block_.L_4a5a85:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a5a85	 Bytes: 3
  %loadMem_4a5a85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a85 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a85)
  store %struct.Memory* %call_4a5a85, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5a88	 Bytes: 3
  %loadMem_4a5a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a88 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a88)
  store %struct.Memory* %call_4a5a88, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a5a8b	 Bytes: 3
  %loadMem_4a5a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a8b = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a8b)
  store %struct.Memory* %call_4a5a8b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a59f4	 RIP: 4a5a8e	 Bytes: 5
  %loadMem_4a5a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a8e = call %struct.Memory* @routine_jmpq_.L_4a59f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a8e, i64 -154, i64 5)
  store %struct.Memory* %call_4a5a8e, %struct.Memory** %MEMORY

  br label %block_.L_4a59f4

  ; Code: .L_4a5a93:	 RIP: 4a5a93	 Bytes: 0
block_.L_4a5a93:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a5a93	 Bytes: 7
  %loadMem_4a5a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a93 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a93)
  store %struct.Memory* %call_4a5a93, %struct.Memory** %MEMORY

  ; Code: .L_4a5a9a:	 RIP: 4a5a9a	 Bytes: 0
  br label %block_.L_4a5a9a
block_.L_4a5a9a:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4a5a9a	 Bytes: 4
  %loadMem_4a5a9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a9a = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a9a)
  store %struct.Memory* %call_4a5a9a, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5b3f	 RIP: 4a5a9e	 Bytes: 6
  %loadMem_4a5a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5a9e = call %struct.Memory* @routine_jge_.L_4a5b3f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5a9e, i8* %BRANCH_TAKEN, i64 161, i64 6, i64 6)
  store %struct.Memory* %call_4a5a9e, %struct.Memory** %MEMORY

  %loadBr_4a5a9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5a9e = icmp eq i8 %loadBr_4a5a9e, 1
  br i1 %cmpBr_4a5a9e, label %block_.L_4a5b3f, label %block_4a5aa4

block_4a5aa4:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a5aa4	 Bytes: 7
  %loadMem_4a5aa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5aa4 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5aa4)
  store %struct.Memory* %call_4a5aa4, %struct.Memory** %MEMORY

  ; Code: .L_4a5aab:	 RIP: 4a5aab	 Bytes: 0
  br label %block_.L_4a5aab
block_.L_4a5aab:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 4a5aab	 Bytes: 4
  %loadMem_4a5aab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5aab = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5aab)
  store %struct.Memory* %call_4a5aab, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5b2c	 RIP: 4a5aaf	 Bytes: 6
  %loadMem_4a5aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5aaf = call %struct.Memory* @routine_jge_.L_4a5b2c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5aaf, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_4a5aaf, %struct.Memory** %MEMORY

  %loadBr_4a5aaf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5aaf = icmp eq i8 %loadBr_4a5aaf, 1
  br i1 %cmpBr_4a5aaf, label %block_.L_4a5b2c, label %block_4a5ab5

block_4a5ab5:
  ; Code: movq $0x6ccb00, %rax	 RIP: 4a5ab5	 Bytes: 10
  %loadMem_4a5ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ab5 = call %struct.Memory* @routine_movq__0x6ccb00___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ab5)
  store %struct.Memory* %call_4a5ab5, %struct.Memory** %MEMORY

  ; Code: addq $0x240, %rax	 RIP: 4a5abf	 Bytes: 6
  %loadMem_4a5abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5abf = call %struct.Memory* @routine_addq__0x240___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5abf)
  store %struct.Memory* %call_4a5abf, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a5ac5	 Bytes: 8
  %loadMem_4a5ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ac5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ac5)
  store %struct.Memory* %call_4a5ac5, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rcx), %rcx	 RIP: 4a5acd	 Bytes: 7
  %loadMem_4a5acd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5acd = call %struct.Memory* @routine_movq_0x3738__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5acd)
  store %struct.Memory* %call_4a5acd, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a5ad4	 Bytes: 3
  %loadMem_4a5ad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ad4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ad4)
  store %struct.Memory* %call_4a5ad4, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %edx	 RIP: 4a5ad7	 Bytes: 3
  %loadMem_4a5ad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ad7 = call %struct.Memory* @routine_addl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ad7)
  store %struct.Memory* %call_4a5ad7, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4a5ada	 Bytes: 3
  %loadMem_4a5ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ada = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ada)
  store %struct.Memory* %call_4a5ada, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4a5add	 Bytes: 4
  %loadMem_4a5add = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5add = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5add)
  store %struct.Memory* %call_4a5add, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rsi	 RIP: 4a5ae1	 Bytes: 7
  %loadMem_4a5ae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ae1 = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ae1)
  store %struct.Memory* %call_4a5ae1, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4a5ae8	 Bytes: 4
  %loadMem_4a5ae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ae8 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ae8)
  store %struct.Memory* %call_4a5ae8, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a5aec	 Bytes: 4
  %loadMem_4a5aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5aec = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5aec)
  store %struct.Memory* %call_4a5aec, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4a5af0	 Bytes: 4
  %loadMem_4a5af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5af0 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5af0)
  store %struct.Memory* %call_4a5af0, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a5af4	 Bytes: 4
  %loadMem_4a5af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5af4 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5af4)
  store %struct.Memory* %call_4a5af4, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rsi,4), %edx	 RIP: 4a5af8	 Bytes: 3
  %loadMem_4a5af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5af8 = call %struct.Memory* @routine_movl___rcx__rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5af8)
  store %struct.Memory* %call_4a5af8, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rcx	 RIP: 4a5afb	 Bytes: 7
  %loadMem_4a5afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5afb = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5afb)
  store %struct.Memory* %call_4a5afb, %struct.Memory** %MEMORY

  ; Code: imulq $0x90, %rcx, %rcx	 RIP: 4a5b02	 Bytes: 7
  %loadMem_4a5b02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b02 = call %struct.Memory* @routine_imulq__0x90___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b02)
  store %struct.Memory* %call_4a5b02, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a5b09	 Bytes: 3
  %loadMem_4a5b09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b09 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b09)
  store %struct.Memory* %call_4a5b09, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a5b0c	 Bytes: 4
  %loadMem_4a5b0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b0c = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b0c)
  store %struct.Memory* %call_4a5b0c, %struct.Memory** %MEMORY

  ; Code: imulq $0x48, %rcx, %rcx	 RIP: 4a5b10	 Bytes: 4
  %loadMem_4a5b10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b10 = call %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b10)
  store %struct.Memory* %call_4a5b10, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a5b14	 Bytes: 3
  %loadMem_4a5b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b14 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b14)
  store %struct.Memory* %call_4a5b14, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a5b17	 Bytes: 4
  %loadMem_4a5b17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b17 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b17)
  store %struct.Memory* %call_4a5b17, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a5b1b	 Bytes: 3
  %loadMem_4a5b1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b1b = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b1b)
  store %struct.Memory* %call_4a5b1b, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a5b1e	 Bytes: 3
  %loadMem_4a5b1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b1e = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b1e)
  store %struct.Memory* %call_4a5b1e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5b21	 Bytes: 3
  %loadMem_4a5b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b21 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b21)
  store %struct.Memory* %call_4a5b21, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a5b24	 Bytes: 3
  %loadMem_4a5b24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b24 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b24)
  store %struct.Memory* %call_4a5b24, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5aab	 RIP: 4a5b27	 Bytes: 5
  %loadMem_4a5b27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b27 = call %struct.Memory* @routine_jmpq_.L_4a5aab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b27, i64 -124, i64 5)
  store %struct.Memory* %call_4a5b27, %struct.Memory** %MEMORY

  br label %block_.L_4a5aab

  ; Code: .L_4a5b2c:	 RIP: 4a5b2c	 Bytes: 0
block_.L_4a5b2c:

  ; Code: jmpq .L_4a5b31	 RIP: 4a5b2c	 Bytes: 5
  %loadMem_4a5b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b2c = call %struct.Memory* @routine_jmpq_.L_4a5b31(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b2c, i64 5, i64 5)
  store %struct.Memory* %call_4a5b2c, %struct.Memory** %MEMORY

  br label %block_.L_4a5b31

  ; Code: .L_4a5b31:	 RIP: 4a5b31	 Bytes: 0
block_.L_4a5b31:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a5b31	 Bytes: 3
  %loadMem_4a5b31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b31 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b31)
  store %struct.Memory* %call_4a5b31, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5b34	 Bytes: 3
  %loadMem_4a5b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b34 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b34)
  store %struct.Memory* %call_4a5b34, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a5b37	 Bytes: 3
  %loadMem_4a5b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b37 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b37)
  store %struct.Memory* %call_4a5b37, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5a9a	 RIP: 4a5b3a	 Bytes: 5
  %loadMem_4a5b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b3a = call %struct.Memory* @routine_jmpq_.L_4a5a9a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b3a, i64 -160, i64 5)
  store %struct.Memory* %call_4a5b3a, %struct.Memory** %MEMORY

  br label %block_.L_4a5a9a

  ; Code: .L_4a5b3f:	 RIP: 4a5b3f	 Bytes: 0
block_.L_4a5b3f:

  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a5b3f	 Bytes: 7
  %loadMem_4a5b3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b3f = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b3f)
  store %struct.Memory* %call_4a5b3f, %struct.Memory** %MEMORY

  ; Code: .L_4a5b46:	 RIP: 4a5b46	 Bytes: 0
  br label %block_.L_4a5b46
block_.L_4a5b46:

  ; Code: cmpl $0x2, -0x2c(%rbp)	 RIP: 4a5b46	 Bytes: 4
  %loadMem_4a5b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b46 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b46)
  store %struct.Memory* %call_4a5b46, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5e3c	 RIP: 4a5b4a	 Bytes: 6
  %loadMem_4a5b4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b4a = call %struct.Memory* @routine_jge_.L_4a5e3c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b4a, i8* %BRANCH_TAKEN, i64 754, i64 6, i64 6)
  store %struct.Memory* %call_4a5b4a, %struct.Memory** %MEMORY

  %loadBr_4a5b4a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5b4a = icmp eq i8 %loadBr_4a5b4a, 1
  br i1 %cmpBr_4a5b4a, label %block_.L_4a5e3c, label %block_4a5b50

block_4a5b50:
  ; Code: movl $0x2, %eax	 RIP: 4a5b50	 Bytes: 5
  %loadMem_4a5b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b50 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b50)
  store %struct.Memory* %call_4a5b50, %struct.Memory** %MEMORY

  ; Code: movq $0x6d0920, %rcx	 RIP: 4a5b55	 Bytes: 10
  %loadMem_4a5b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b55 = call %struct.Memory* @routine_movq__0x6d0920___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b55)
  store %struct.Memory* %call_4a5b55, %struct.Memory** %MEMORY

  ; Code: movq $0x6cd4f0, %rdx	 RIP: 4a5b5f	 Bytes: 10
  %loadMem_4a5b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b5f = call %struct.Memory* @routine_movq__0x6cd4f0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b5f)
  store %struct.Memory* %call_4a5b5f, %struct.Memory** %MEMORY

  ; Code: movq $0x7107b0, %rsi	 RIP: 4a5b69	 Bytes: 10
  %loadMem_4a5b69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b69 = call %struct.Memory* @routine_movq__0x7107b0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b69)
  store %struct.Memory* %call_4a5b69, %struct.Memory** %MEMORY

  ; Code: movq $0x6d4600, %rdi	 RIP: 4a5b73	 Bytes: 10
  %loadMem_4a5b73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b73 = call %struct.Memory* @routine_movq__0x6d4600___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b73)
  store %struct.Memory* %call_4a5b73, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %r8	 RIP: 4a5b7d	 Bytes: 4
  %loadMem_4a5b7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b7d = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b7d)
  store %struct.Memory* %call_4a5b7d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 4a5b81	 Bytes: 4
  %loadMem_4a5b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b81 = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b81)
  store %struct.Memory* %call_4a5b81, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdi	 RIP: 4a5b85	 Bytes: 3
  %loadMem_4a5b85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b85 = call %struct.Memory* @routine_addq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b85)
  store %struct.Memory* %call_4a5b85, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r9d	 RIP: 4a5b88	 Bytes: 4
  %loadMem_4a5b88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b88 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b88)
  store %struct.Memory* %call_4a5b88, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4fc(%rbp)	 RIP: 4a5b8c	 Bytes: 6
  %loadMem_4a5b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b8c = call %struct.Memory* @routine_movl__eax__MINUS0x4fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b8c)
  store %struct.Memory* %call_4a5b8c, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %eax	 RIP: 4a5b92	 Bytes: 3
  %loadMem_4a5b92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b92 = call %struct.Memory* @routine_movl__r9d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b92)
  store %struct.Memory* %call_4a5b92, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x508(%rbp)	 RIP: 4a5b95	 Bytes: 7
  %loadMem_4a5b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b95 = call %struct.Memory* @routine_movq__rdx__MINUS0x508__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b95)
  store %struct.Memory* %call_4a5b95, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5b9c	 Bytes: 1
  %loadMem_4a5b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b9c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b9c)
  store %struct.Memory* %call_4a5b9c, %struct.Memory** %MEMORY

  ; Code: movl -0x4fc(%rbp), %r9d	 RIP: 4a5b9d	 Bytes: 7
  %loadMem_4a5b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5b9d = call %struct.Memory* @routine_movl_MINUS0x4fc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5b9d)
  store %struct.Memory* %call_4a5b9d, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5ba4	 Bytes: 3
  %loadMem_4a5ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ba4 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ba4)
  store %struct.Memory* %call_4a5ba4, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a5ba7	 Bytes: 3
  %loadMem_4a5ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ba7 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ba7)
  store %struct.Memory* %call_4a5ba7, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %r10d	 RIP: 4a5baa	 Bytes: 7
  %loadMem_4a5baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5baa = call %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5baa)
  store %struct.Memory* %call_4a5baa, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5bb1	 Bytes: 3
  %loadMem_4a5bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bb1 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bb1)
  store %struct.Memory* %call_4a5bb1, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x50c(%rbp)	 RIP: 4a5bb4	 Bytes: 6
  %loadMem_4a5bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bb4 = call %struct.Memory* @routine_movl__edx__MINUS0x50c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bb4)
  store %struct.Memory* %call_4a5bb4, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5bba	 Bytes: 1
  %loadMem_4a5bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bba = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bba)
  store %struct.Memory* %call_4a5bba, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5bbb	 Bytes: 3
  %loadMem_4a5bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bbb = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bbb)
  store %struct.Memory* %call_4a5bbb, %struct.Memory** %MEMORY

  ; Code: movl -0x50c(%rbp), %r10d	 RIP: 4a5bbe	 Bytes: 7
  %loadMem_4a5bbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bbe = call %struct.Memory* @routine_movl_MINUS0x50c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bbe)
  store %struct.Memory* %call_4a5bbe, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r10d	 RIP: 4a5bc5	 Bytes: 3
  %loadMem_4a5bc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bc5 = call %struct.Memory* @routine_addl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bc5)
  store %struct.Memory* %call_4a5bc5, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %r8	 RIP: 4a5bc8	 Bytes: 3
  %loadMem_4a5bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bc8 = call %struct.Memory* @routine_movslq__r10d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bc8)
  store %struct.Memory* %call_4a5bc8, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 4a5bcb	 Bytes: 4
  %loadMem_4a5bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bcb = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bcb)
  store %struct.Memory* %call_4a5bcb, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdi	 RIP: 4a5bcf	 Bytes: 3
  %loadMem_4a5bcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bcf = call %struct.Memory* @routine_addq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bcf)
  store %struct.Memory* %call_4a5bcf, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a5bd2	 Bytes: 3
  %loadMem_4a5bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bd2 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bd2)
  store %struct.Memory* %call_4a5bd2, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a5bd5	 Bytes: 2
  %loadMem_4a5bd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bd5 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bd5)
  store %struct.Memory* %call_4a5bd5, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5bd7	 Bytes: 1
  %loadMem_4a5bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bd7 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bd7)
  store %struct.Memory* %call_4a5bd7, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5bd8	 Bytes: 3
  %loadMem_4a5bd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bd8 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bd8)
  store %struct.Memory* %call_4a5bd8, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a5bdb	 Bytes: 3
  %loadMem_4a5bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bdb = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bdb)
  store %struct.Memory* %call_4a5bdb, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %r10d	 RIP: 4a5bde	 Bytes: 7
  %loadMem_4a5bde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bde = call %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bde)
  store %struct.Memory* %call_4a5bde, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x510(%rbp)	 RIP: 4a5be5	 Bytes: 6
  %loadMem_4a5be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5be5 = call %struct.Memory* @routine_movl__eax__MINUS0x510__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5be5)
  store %struct.Memory* %call_4a5be5, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5beb	 Bytes: 3
  %loadMem_4a5beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5beb = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5beb)
  store %struct.Memory* %call_4a5beb, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5bee	 Bytes: 1
  %loadMem_4a5bee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bee = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bee)
  store %struct.Memory* %call_4a5bee, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5bef	 Bytes: 3
  %loadMem_4a5bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bef = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bef)
  store %struct.Memory* %call_4a5bef, %struct.Memory** %MEMORY

  ; Code: movl -0x510(%rbp), %r10d	 RIP: 4a5bf2	 Bytes: 7
  %loadMem_4a5bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bf2 = call %struct.Memory* @routine_movl_MINUS0x510__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bf2)
  store %struct.Memory* %call_4a5bf2, %struct.Memory** %MEMORY

  ; Code: addl %eax, %r10d	 RIP: 4a5bf9	 Bytes: 3
  %loadMem_4a5bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bf9 = call %struct.Memory* @routine_addl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bf9)
  store %struct.Memory* %call_4a5bf9, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %r8	 RIP: 4a5bfc	 Bytes: 3
  %loadMem_4a5bfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bfc = call %struct.Memory* @routine_movslq__r10d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bfc)
  store %struct.Memory* %call_4a5bfc, %struct.Memory** %MEMORY

  ; Code: movl (%rdi,%r8,4), %eax	 RIP: 4a5bff	 Bytes: 4
  %loadMem_4a5bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5bff = call %struct.Memory* @routine_movl___rdi__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5bff)
  store %struct.Memory* %call_4a5bff, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4a5c03	 Bytes: 4
  %loadMem_4a5c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c03 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c03)
  store %struct.Memory* %call_4a5c03, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 4a5c07	 Bytes: 4
  %loadMem_4a5c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c07 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c07)
  store %struct.Memory* %call_4a5c07, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a5c0b	 Bytes: 3
  %loadMem_4a5c0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c0b = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c0b)
  store %struct.Memory* %call_4a5c0b, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r10d	 RIP: 4a5c0e	 Bytes: 4
  %loadMem_4a5c0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c0e = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c0e)
  store %struct.Memory* %call_4a5c0e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x514(%rbp)	 RIP: 4a5c12	 Bytes: 6
  %loadMem_4a5c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c12 = call %struct.Memory* @routine_movl__eax__MINUS0x514__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c12)
  store %struct.Memory* %call_4a5c12, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5c18	 Bytes: 3
  %loadMem_4a5c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c18 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c18)
  store %struct.Memory* %call_4a5c18, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5c1b	 Bytes: 1
  %loadMem_4a5c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c1b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c1b)
  store %struct.Memory* %call_4a5c1b, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5c1c	 Bytes: 3
  %loadMem_4a5c1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c1c = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c1c)
  store %struct.Memory* %call_4a5c1c, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a5c1f	 Bytes: 3
  %loadMem_4a5c1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c1f = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c1f)
  store %struct.Memory* %call_4a5c1f, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %r10d	 RIP: 4a5c22	 Bytes: 7
  %loadMem_4a5c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c22 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c22)
  store %struct.Memory* %call_4a5c22, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5c29	 Bytes: 3
  %loadMem_4a5c29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c29 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c29)
  store %struct.Memory* %call_4a5c29, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x518(%rbp)	 RIP: 4a5c2c	 Bytes: 6
  %loadMem_4a5c2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c2c = call %struct.Memory* @routine_movl__edx__MINUS0x518__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c2c)
  store %struct.Memory* %call_4a5c2c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5c32	 Bytes: 1
  %loadMem_4a5c32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c32 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c32)
  store %struct.Memory* %call_4a5c32, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5c33	 Bytes: 3
  %loadMem_4a5c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c33 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c33)
  store %struct.Memory* %call_4a5c33, %struct.Memory** %MEMORY

  ; Code: movl -0x518(%rbp), %r10d	 RIP: 4a5c36	 Bytes: 7
  %loadMem_4a5c36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c36 = call %struct.Memory* @routine_movl_MINUS0x518__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c36)
  store %struct.Memory* %call_4a5c36, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r10d	 RIP: 4a5c3d	 Bytes: 3
  %loadMem_4a5c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c3d = call %struct.Memory* @routine_addl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c3d)
  store %struct.Memory* %call_4a5c3d, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdi	 RIP: 4a5c40	 Bytes: 3
  %loadMem_4a5c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c40 = call %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c40)
  store %struct.Memory* %call_4a5c40, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 4a5c43	 Bytes: 4
  %loadMem_4a5c43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c43 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c43)
  store %struct.Memory* %call_4a5c43, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a5c47	 Bytes: 3
  %loadMem_4a5c47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c47 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c47)
  store %struct.Memory* %call_4a5c47, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a5c4a	 Bytes: 3
  %loadMem_4a5c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c4a = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c4a)
  store %struct.Memory* %call_4a5c4a, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a5c4d	 Bytes: 2
  %loadMem_4a5c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c4d = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c4d)
  store %struct.Memory* %call_4a5c4d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5c4f	 Bytes: 1
  %loadMem_4a5c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c4f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c4f)
  store %struct.Memory* %call_4a5c4f, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5c50	 Bytes: 3
  %loadMem_4a5c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c50 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c50)
  store %struct.Memory* %call_4a5c50, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a5c53	 Bytes: 3
  %loadMem_4a5c53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c53 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c53)
  store %struct.Memory* %call_4a5c53, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %r10d	 RIP: 4a5c56	 Bytes: 7
  %loadMem_4a5c56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c56 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c56)
  store %struct.Memory* %call_4a5c56, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x51c(%rbp)	 RIP: 4a5c5d	 Bytes: 6
  %loadMem_4a5c5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c5d = call %struct.Memory* @routine_movl__eax__MINUS0x51c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c5d)
  store %struct.Memory* %call_4a5c5d, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5c63	 Bytes: 3
  %loadMem_4a5c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c63 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c63)
  store %struct.Memory* %call_4a5c63, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5c66	 Bytes: 1
  %loadMem_4a5c66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c66 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c66)
  store %struct.Memory* %call_4a5c66, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5c67	 Bytes: 3
  %loadMem_4a5c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c67 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c67)
  store %struct.Memory* %call_4a5c67, %struct.Memory** %MEMORY

  ; Code: movl -0x51c(%rbp), %r10d	 RIP: 4a5c6a	 Bytes: 7
  %loadMem_4a5c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c6a = call %struct.Memory* @routine_movl_MINUS0x51c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c6a)
  store %struct.Memory* %call_4a5c6a, %struct.Memory** %MEMORY

  ; Code: addl %eax, %r10d	 RIP: 4a5c71	 Bytes: 3
  %loadMem_4a5c71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c71 = call %struct.Memory* @routine_addl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c71)
  store %struct.Memory* %call_4a5c71, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdi	 RIP: 4a5c74	 Bytes: 3
  %loadMem_4a5c74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c74 = call %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c74)
  store %struct.Memory* %call_4a5c74, %struct.Memory** %MEMORY

  ; Code: movl -0x514(%rbp), %eax	 RIP: 4a5c77	 Bytes: 6
  %loadMem_4a5c77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c77 = call %struct.Memory* @routine_movl_MINUS0x514__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c77)
  store %struct.Memory* %call_4a5c77, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsi,%rdi,4)	 RIP: 4a5c7d	 Bytes: 3
  %loadMem_4a5c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c7d = call %struct.Memory* @routine_movl__eax____rsi__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c7d)
  store %struct.Memory* %call_4a5c7d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a5c80	 Bytes: 4
  %loadMem_4a5c80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c80 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c80)
  store %struct.Memory* %call_4a5c80, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a5c84	 Bytes: 4
  %loadMem_4a5c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c84 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c84)
  store %struct.Memory* %call_4a5c84, %struct.Memory** %MEMORY

  ; Code: movq -0x508(%rbp), %rdi	 RIP: 4a5c88	 Bytes: 7
  %loadMem_4a5c88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c88 = call %struct.Memory* @routine_movq_MINUS0x508__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c88)
  store %struct.Memory* %call_4a5c88, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 4a5c8f	 Bytes: 3
  %loadMem_4a5c8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c8f = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c8f)
  store %struct.Memory* %call_4a5c8f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4a5c92	 Bytes: 3
  %loadMem_4a5c92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c92 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c92)
  store %struct.Memory* %call_4a5c92, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5c95	 Bytes: 1
  %loadMem_4a5c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c95 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c95)
  store %struct.Memory* %call_4a5c95, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5c96	 Bytes: 3
  %loadMem_4a5c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c96 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c96)
  store %struct.Memory* %call_4a5c96, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a5c99	 Bytes: 3
  %loadMem_4a5c99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c99 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c99)
  store %struct.Memory* %call_4a5c99, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %r10d	 RIP: 4a5c9c	 Bytes: 7
  %loadMem_4a5c9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5c9c = call %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5c9c)
  store %struct.Memory* %call_4a5c9c, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5ca3	 Bytes: 3
  %loadMem_4a5ca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ca3 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ca3)
  store %struct.Memory* %call_4a5ca3, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x520(%rbp)	 RIP: 4a5ca6	 Bytes: 6
  %loadMem_4a5ca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ca6 = call %struct.Memory* @routine_movl__edx__MINUS0x520__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ca6)
  store %struct.Memory* %call_4a5ca6, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5cac	 Bytes: 1
  %loadMem_4a5cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cac = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cac)
  store %struct.Memory* %call_4a5cac, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5cad	 Bytes: 3
  %loadMem_4a5cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cad = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cad)
  store %struct.Memory* %call_4a5cad, %struct.Memory** %MEMORY

  ; Code: movl -0x520(%rbp), %r10d	 RIP: 4a5cb0	 Bytes: 7
  %loadMem_4a5cb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cb0 = call %struct.Memory* @routine_movl_MINUS0x520__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cb0)
  store %struct.Memory* %call_4a5cb0, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r10d	 RIP: 4a5cb7	 Bytes: 3
  %loadMem_4a5cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cb7 = call %struct.Memory* @routine_addl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cb7)
  store %struct.Memory* %call_4a5cb7, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 4a5cba	 Bytes: 3
  %loadMem_4a5cba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cba = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cba)
  store %struct.Memory* %call_4a5cba, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 4a5cbd	 Bytes: 4
  %loadMem_4a5cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cbd = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cbd)
  store %struct.Memory* %call_4a5cbd, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 4a5cc1	 Bytes: 3
  %loadMem_4a5cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cc1 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cc1)
  store %struct.Memory* %call_4a5cc1, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a5cc4	 Bytes: 3
  %loadMem_4a5cc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cc4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cc4)
  store %struct.Memory* %call_4a5cc4, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a5cc7	 Bytes: 2
  %loadMem_4a5cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cc7 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cc7)
  store %struct.Memory* %call_4a5cc7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5cc9	 Bytes: 1
  %loadMem_4a5cc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cc9 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cc9)
  store %struct.Memory* %call_4a5cc9, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5cca	 Bytes: 3
  %loadMem_4a5cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cca = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cca)
  store %struct.Memory* %call_4a5cca, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a5ccd	 Bytes: 3
  %loadMem_4a5ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ccd = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ccd)
  store %struct.Memory* %call_4a5ccd, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %r10d	 RIP: 4a5cd0	 Bytes: 7
  %loadMem_4a5cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cd0 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cd0)
  store %struct.Memory* %call_4a5cd0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x524(%rbp)	 RIP: 4a5cd7	 Bytes: 6
  %loadMem_4a5cd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cd7 = call %struct.Memory* @routine_movl__eax__MINUS0x524__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cd7)
  store %struct.Memory* %call_4a5cd7, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5cdd	 Bytes: 3
  %loadMem_4a5cdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cdd = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cdd)
  store %struct.Memory* %call_4a5cdd, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5ce0	 Bytes: 1
  %loadMem_4a5ce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ce0 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ce0)
  store %struct.Memory* %call_4a5ce0, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5ce1	 Bytes: 3
  %loadMem_4a5ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ce1 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ce1)
  store %struct.Memory* %call_4a5ce1, %struct.Memory** %MEMORY

  ; Code: movl -0x524(%rbp), %r10d	 RIP: 4a5ce4	 Bytes: 7
  %loadMem_4a5ce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ce4 = call %struct.Memory* @routine_movl_MINUS0x524__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ce4)
  store %struct.Memory* %call_4a5ce4, %struct.Memory** %MEMORY

  ; Code: addl %eax, %r10d	 RIP: 4a5ceb	 Bytes: 3
  %loadMem_4a5ceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ceb = call %struct.Memory* @routine_addl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ceb)
  store %struct.Memory* %call_4a5ceb, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 4a5cee	 Bytes: 3
  %loadMem_4a5cee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cee = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cee)
  store %struct.Memory* %call_4a5cee, %struct.Memory** %MEMORY

  ; Code: movl (%rdi,%rsi,4), %eax	 RIP: 4a5cf1	 Bytes: 3
  %loadMem_4a5cf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cf1 = call %struct.Memory* @routine_movl___rdi__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cf1)
  store %struct.Memory* %call_4a5cf1, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a5cf4	 Bytes: 4
  %loadMem_4a5cf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cf4 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cf4)
  store %struct.Memory* %call_4a5cf4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a5cf8	 Bytes: 4
  %loadMem_4a5cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cf8 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cf8)
  store %struct.Memory* %call_4a5cf8, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 4a5cfc	 Bytes: 3
  %loadMem_4a5cfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cfc = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cfc)
  store %struct.Memory* %call_4a5cfc, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r10d	 RIP: 4a5cff	 Bytes: 4
  %loadMem_4a5cff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5cff = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5cff)
  store %struct.Memory* %call_4a5cff, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x528(%rbp)	 RIP: 4a5d03	 Bytes: 6
  %loadMem_4a5d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d03 = call %struct.Memory* @routine_movl__eax__MINUS0x528__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d03)
  store %struct.Memory* %call_4a5d03, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5d09	 Bytes: 3
  %loadMem_4a5d09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d09 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d09)
  store %struct.Memory* %call_4a5d09, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5d0c	 Bytes: 1
  %loadMem_4a5d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d0c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d0c)
  store %struct.Memory* %call_4a5d0c, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5d0d	 Bytes: 3
  %loadMem_4a5d0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d0d = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d0d)
  store %struct.Memory* %call_4a5d0d, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a5d10	 Bytes: 3
  %loadMem_4a5d10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d10 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d10)
  store %struct.Memory* %call_4a5d10, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %r10d	 RIP: 4a5d13	 Bytes: 7
  %loadMem_4a5d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d13 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d13)
  store %struct.Memory* %call_4a5d13, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5d1a	 Bytes: 3
  %loadMem_4a5d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d1a = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d1a)
  store %struct.Memory* %call_4a5d1a, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x52c(%rbp)	 RIP: 4a5d1d	 Bytes: 6
  %loadMem_4a5d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d1d = call %struct.Memory* @routine_movl__edx__MINUS0x52c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d1d)
  store %struct.Memory* %call_4a5d1d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5d23	 Bytes: 1
  %loadMem_4a5d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d23 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d23)
  store %struct.Memory* %call_4a5d23, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5d24	 Bytes: 3
  %loadMem_4a5d24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d24 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d24)
  store %struct.Memory* %call_4a5d24, %struct.Memory** %MEMORY

  ; Code: movl -0x52c(%rbp), %r10d	 RIP: 4a5d27	 Bytes: 7
  %loadMem_4a5d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d27 = call %struct.Memory* @routine_movl_MINUS0x52c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d27)
  store %struct.Memory* %call_4a5d27, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r10d	 RIP: 4a5d2e	 Bytes: 3
  %loadMem_4a5d2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d2e = call %struct.Memory* @routine_addl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d2e)
  store %struct.Memory* %call_4a5d2e, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 4a5d31	 Bytes: 3
  %loadMem_4a5d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d31 = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d31)
  store %struct.Memory* %call_4a5d31, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 4a5d34	 Bytes: 4
  %loadMem_4a5d34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d34 = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d34)
  store %struct.Memory* %call_4a5d34, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 4a5d38	 Bytes: 3
  %loadMem_4a5d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d38 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d38)
  store %struct.Memory* %call_4a5d38, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a5d3b	 Bytes: 3
  %loadMem_4a5d3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d3b = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d3b)
  store %struct.Memory* %call_4a5d3b, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a5d3e	 Bytes: 2
  %loadMem_4a5d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d3e = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d3e)
  store %struct.Memory* %call_4a5d3e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5d40	 Bytes: 1
  %loadMem_4a5d40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d40 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d40)
  store %struct.Memory* %call_4a5d40, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5d41	 Bytes: 3
  %loadMem_4a5d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d41 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d41)
  store %struct.Memory* %call_4a5d41, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a5d44	 Bytes: 3
  %loadMem_4a5d44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d44 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d44)
  store %struct.Memory* %call_4a5d44, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %r10d	 RIP: 4a5d47	 Bytes: 7
  %loadMem_4a5d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d47 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d47)
  store %struct.Memory* %call_4a5d47, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x530(%rbp)	 RIP: 4a5d4e	 Bytes: 6
  %loadMem_4a5d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d4e = call %struct.Memory* @routine_movl__eax__MINUS0x530__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d4e)
  store %struct.Memory* %call_4a5d4e, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4a5d54	 Bytes: 3
  %loadMem_4a5d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d54 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d54)
  store %struct.Memory* %call_4a5d54, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a5d57	 Bytes: 1
  %loadMem_4a5d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d57 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d57)
  store %struct.Memory* %call_4a5d57, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4a5d58	 Bytes: 3
  %loadMem_4a5d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d58 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d58)
  store %struct.Memory* %call_4a5d58, %struct.Memory** %MEMORY

  ; Code: movl -0x530(%rbp), %r10d	 RIP: 4a5d5b	 Bytes: 7
  %loadMem_4a5d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d5b = call %struct.Memory* @routine_movl_MINUS0x530__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d5b)
  store %struct.Memory* %call_4a5d5b, %struct.Memory** %MEMORY

  ; Code: addl %eax, %r10d	 RIP: 4a5d62	 Bytes: 3
  %loadMem_4a5d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d62 = call %struct.Memory* @routine_addl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d62)
  store %struct.Memory* %call_4a5d62, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 4a5d65	 Bytes: 3
  %loadMem_4a5d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d65 = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d65)
  store %struct.Memory* %call_4a5d65, %struct.Memory** %MEMORY

  ; Code: movl -0x528(%rbp), %eax	 RIP: 4a5d68	 Bytes: 6
  %loadMem_4a5d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d68 = call %struct.Memory* @routine_movl_MINUS0x528__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d68)
  store %struct.Memory* %call_4a5d68, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rsi,4)	 RIP: 4a5d6e	 Bytes: 3
  %loadMem_4a5d6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d6e = call %struct.Memory* @routine_movl__eax____rcx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d6e)
  store %struct.Memory* %call_4a5d6e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4a5d71	 Bytes: 7
  %loadMem_4a5d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d71 = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d71)
  store %struct.Memory* %call_4a5d71, %struct.Memory** %MEMORY

  ; Code: .L_4a5d78:	 RIP: 4a5d78	 Bytes: 0
  br label %block_.L_4a5d78
block_.L_4a5d78:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 4a5d78	 Bytes: 4
  %loadMem_4a5d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d78 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d78)
  store %struct.Memory* %call_4a5d78, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5e29	 RIP: 4a5d7c	 Bytes: 6
  %loadMem_4a5d7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d7c = call %struct.Memory* @routine_jge_.L_4a5e29(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d7c, i8* %BRANCH_TAKEN, i64 173, i64 6, i64 6)
  store %struct.Memory* %call_4a5d7c, %struct.Memory** %MEMORY

  %loadBr_4a5d7c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5d7c = icmp eq i8 %loadBr_4a5d7c, 1
  br i1 %cmpBr_4a5d7c, label %block_.L_4a5e29, label %block_4a5d82

block_4a5d82:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 4a5d82	 Bytes: 7
  %loadMem_4a5d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d82 = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d82)
  store %struct.Memory* %call_4a5d82, %struct.Memory** %MEMORY

  ; Code: .L_4a5d89:	 RIP: 4a5d89	 Bytes: 0
  br label %block_.L_4a5d89
block_.L_4a5d89:

  ; Code: cmpl $0x4, -0x38(%rbp)	 RIP: 4a5d89	 Bytes: 4
  %loadMem_4a5d89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d89 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d89)
  store %struct.Memory* %call_4a5d89, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5e16	 RIP: 4a5d8d	 Bytes: 6
  %loadMem_4a5d8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d8d = call %struct.Memory* @routine_jge_.L_4a5e16(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d8d, i8* %BRANCH_TAKEN, i64 137, i64 6, i64 6)
  store %struct.Memory* %call_4a5d8d, %struct.Memory** %MEMORY

  %loadBr_4a5d8d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5d8d = icmp eq i8 %loadBr_4a5d8d, 1
  br i1 %cmpBr_4a5d8d, label %block_.L_4a5e16, label %block_4a5d93

block_4a5d93:
  ; Code: leaq -0x480(%rbp), %rax	 RIP: 4a5d93	 Bytes: 7
  %loadMem_4a5d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d93 = call %struct.Memory* @routine_leaq_MINUS0x480__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d93)
  store %struct.Memory* %call_4a5d93, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rcx	 RIP: 4a5d9a	 Bytes: 8
  %loadMem_4a5d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5d9a = call %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5d9a)
  store %struct.Memory* %call_4a5d9a, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rcx), %rcx	 RIP: 4a5da2	 Bytes: 7
  %loadMem_4a5da2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5da2 = call %struct.Memory* @routine_movq_0x1940__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5da2)
  store %struct.Memory* %call_4a5da2, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a5da9	 Bytes: 4
  %loadMem_4a5da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5da9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5da9)
  store %struct.Memory* %call_4a5da9, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4a5dad	 Bytes: 4
  %loadMem_4a5dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dad = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dad)
  store %struct.Memory* %call_4a5dad, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a5db1	 Bytes: 6
  %loadMem_4a5db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5db1 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5db1)
  store %struct.Memory* %call_4a5db1, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a5db7	 Bytes: 3
  %loadMem_4a5db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5db7 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5db7)
  store %struct.Memory* %call_4a5db7, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %esi	 RIP: 4a5dba	 Bytes: 6
  %loadMem_4a5dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dba = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dba)
  store %struct.Memory* %call_4a5dba, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5dc0	 Bytes: 3
  %loadMem_4a5dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dc0 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dc0)
  store %struct.Memory* %call_4a5dc0, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4a5dc3	 Bytes: 4
  %loadMem_4a5dc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dc3 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dc3)
  store %struct.Memory* %call_4a5dc3, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %esi	 RIP: 4a5dc7	 Bytes: 6
  %loadMem_4a5dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dc7 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dc7)
  store %struct.Memory* %call_4a5dc7, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %esi	 RIP: 4a5dcd	 Bytes: 3
  %loadMem_4a5dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dcd = call %struct.Memory* @routine_addl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dcd)
  store %struct.Memory* %call_4a5dcd, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %esi	 RIP: 4a5dd0	 Bytes: 6
  %loadMem_4a5dd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dd0 = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dd0)
  store %struct.Memory* %call_4a5dd0, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5dd6	 Bytes: 3
  %loadMem_4a5dd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dd6 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dd6)
  store %struct.Memory* %call_4a5dd6, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a5dd9	 Bytes: 4
  %loadMem_4a5dd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dd9 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dd9)
  store %struct.Memory* %call_4a5dd9, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a5ddd	 Bytes: 4
  %loadMem_4a5ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ddd = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ddd)
  store %struct.Memory* %call_4a5ddd, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rcx	 RIP: 4a5de1	 Bytes: 4
  %loadMem_4a5de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5de1 = call %struct.Memory* @routine_shlq__0x8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5de1)
  store %struct.Memory* %call_4a5de1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a5de5	 Bytes: 3
  %loadMem_4a5de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5de5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5de5)
  store %struct.Memory* %call_4a5de5, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rcx	 RIP: 4a5de8	 Bytes: 7
  %loadMem_4a5de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5de8 = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5de8)
  store %struct.Memory* %call_4a5de8, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a5def	 Bytes: 4
  %loadMem_4a5def = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5def = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5def)
  store %struct.Memory* %call_4a5def, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a5df3	 Bytes: 3
  %loadMem_4a5df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5df3 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5df3)
  store %struct.Memory* %call_4a5df3, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 4a5df6	 Bytes: 4
  %loadMem_4a5df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5df6 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5df6)
  store %struct.Memory* %call_4a5df6, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a5dfa	 Bytes: 4
  %loadMem_4a5dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dfa = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dfa)
  store %struct.Memory* %call_4a5dfa, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a5dfe	 Bytes: 3
  %loadMem_4a5dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5dfe = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5dfe)
  store %struct.Memory* %call_4a5dfe, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 4a5e01	 Bytes: 4
  %loadMem_4a5e01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e01 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e01)
  store %struct.Memory* %call_4a5e01, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4a5e05	 Bytes: 3
  %loadMem_4a5e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e05 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e05)
  store %struct.Memory* %call_4a5e05, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4a5e08	 Bytes: 3
  %loadMem_4a5e08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e08 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e08)
  store %struct.Memory* %call_4a5e08, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5e0b	 Bytes: 3
  %loadMem_4a5e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e0b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e0b)
  store %struct.Memory* %call_4a5e0b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4a5e0e	 Bytes: 3
  %loadMem_4a5e0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e0e = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e0e)
  store %struct.Memory* %call_4a5e0e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5d89	 RIP: 4a5e11	 Bytes: 5
  %loadMem_4a5e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e11 = call %struct.Memory* @routine_jmpq_.L_4a5d89(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e11, i64 -136, i64 5)
  store %struct.Memory* %call_4a5e11, %struct.Memory** %MEMORY

  br label %block_.L_4a5d89

  ; Code: .L_4a5e16:	 RIP: 4a5e16	 Bytes: 0
block_.L_4a5e16:

  ; Code: jmpq .L_4a5e1b	 RIP: 4a5e16	 Bytes: 5
  %loadMem_4a5e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e16 = call %struct.Memory* @routine_jmpq_.L_4a5e1b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e16, i64 5, i64 5)
  store %struct.Memory* %call_4a5e16, %struct.Memory** %MEMORY

  br label %block_.L_4a5e1b

  ; Code: .L_4a5e1b:	 RIP: 4a5e1b	 Bytes: 0
block_.L_4a5e1b:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4a5e1b	 Bytes: 3
  %loadMem_4a5e1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e1b = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e1b)
  store %struct.Memory* %call_4a5e1b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5e1e	 Bytes: 3
  %loadMem_4a5e1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e1e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e1e)
  store %struct.Memory* %call_4a5e1e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4a5e21	 Bytes: 3
  %loadMem_4a5e21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e21 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e21)
  store %struct.Memory* %call_4a5e21, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5d78	 RIP: 4a5e24	 Bytes: 5
  %loadMem_4a5e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e24 = call %struct.Memory* @routine_jmpq_.L_4a5d78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e24, i64 -172, i64 5)
  store %struct.Memory* %call_4a5e24, %struct.Memory** %MEMORY

  br label %block_.L_4a5d78

  ; Code: .L_4a5e29:	 RIP: 4a5e29	 Bytes: 0
block_.L_4a5e29:

  ; Code: jmpq .L_4a5e2e	 RIP: 4a5e29	 Bytes: 5
  %loadMem_4a5e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e29 = call %struct.Memory* @routine_jmpq_.L_4a5e2e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e29, i64 5, i64 5)
  store %struct.Memory* %call_4a5e29, %struct.Memory** %MEMORY

  br label %block_.L_4a5e2e

  ; Code: .L_4a5e2e:	 RIP: 4a5e2e	 Bytes: 0
block_.L_4a5e2e:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a5e2e	 Bytes: 3
  %loadMem_4a5e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e2e = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e2e)
  store %struct.Memory* %call_4a5e2e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5e31	 Bytes: 3
  %loadMem_4a5e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e31 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e31)
  store %struct.Memory* %call_4a5e31, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a5e34	 Bytes: 3
  %loadMem_4a5e34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e34 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e34)
  store %struct.Memory* %call_4a5e34, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5b46	 RIP: 4a5e37	 Bytes: 5
  %loadMem_4a5e37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e37 = call %struct.Memory* @routine_jmpq_.L_4a5b46(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e37, i64 -753, i64 5)
  store %struct.Memory* %call_4a5e37, %struct.Memory** %MEMORY

  br label %block_.L_4a5b46

  ; Code: .L_4a5e3c:	 RIP: 4a5e3c	 Bytes: 0
block_.L_4a5e3c:

  ; Code: jmpq .L_4a5e41	 RIP: 4a5e3c	 Bytes: 5
  %loadMem_4a5e3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e3c = call %struct.Memory* @routine_jmpq_.L_4a5e41(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e3c, i64 5, i64 5)
  store %struct.Memory* %call_4a5e3c, %struct.Memory** %MEMORY

  br label %block_.L_4a5e41

  ; Code: .L_4a5e41:	 RIP: 4a5e41	 Bytes: 0
block_.L_4a5e41:

  ; Code: movl -0x274(%rbp), %eax	 RIP: 4a5e41	 Bytes: 6
  %loadMem_4a5e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e41 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e41)
  store %struct.Memory* %call_4a5e41, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5e47	 Bytes: 3
  %loadMem_4a5e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e47 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e47)
  store %struct.Memory* %call_4a5e47, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x274(%rbp)	 RIP: 4a5e4a	 Bytes: 6
  %loadMem_4a5e4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e4a = call %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e4a)
  store %struct.Memory* %call_4a5e4a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a59a7	 RIP: 4a5e50	 Bytes: 5
  %loadMem_4a5e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e50 = call %struct.Memory* @routine_jmpq_.L_4a59a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e50, i64 -1193, i64 5)
  store %struct.Memory* %call_4a5e50, %struct.Memory** %MEMORY

  br label %block_.L_4a59a7

  ; Code: .L_4a5e55:	 RIP: 4a5e55	 Bytes: 0
block_.L_4a5e55:

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4a5e55	 Bytes: 7
  %loadMem_4a5e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e55 = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e55)
  store %struct.Memory* %call_4a5e55, %struct.Memory** %MEMORY

  ; Code: .L_4a5e5c:	 RIP: 4a5e5c	 Bytes: 0
  br label %block_.L_4a5e5c
block_.L_4a5e5c:

  ; Code: cmpl $0x8, -0x3c(%rbp)	 RIP: 4a5e5c	 Bytes: 4
  %loadMem_4a5e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e5c = call %struct.Memory* @routine_cmpl__0x8__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e5c)
  store %struct.Memory* %call_4a5e5c, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5ee1	 RIP: 4a5e60	 Bytes: 6
  %loadMem_4a5e60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e60 = call %struct.Memory* @routine_jge_.L_4a5ee1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e60, i8* %BRANCH_TAKEN, i64 129, i64 6, i64 6)
  store %struct.Memory* %call_4a5e60, %struct.Memory** %MEMORY

  %loadBr_4a5e60 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5e60 = icmp eq i8 %loadBr_4a5e60, 1
  br i1 %cmpBr_4a5e60, label %block_.L_4a5ee1, label %block_4a5e66

block_4a5e66:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 4a5e66	 Bytes: 7
  %loadMem_4a5e66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e66 = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e66)
  store %struct.Memory* %call_4a5e66, %struct.Memory** %MEMORY

  ; Code: .L_4a5e6d:	 RIP: 4a5e6d	 Bytes: 0
  br label %block_.L_4a5e6d
block_.L_4a5e6d:

  ; Code: cmpl $0x8, -0x38(%rbp)	 RIP: 4a5e6d	 Bytes: 4
  %loadMem_4a5e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e6d = call %struct.Memory* @routine_cmpl__0x8__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e6d)
  store %struct.Memory* %call_4a5e6d, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5ece	 RIP: 4a5e71	 Bytes: 6
  %loadMem_4a5e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e71 = call %struct.Memory* @routine_jge_.L_4a5ece(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e71, i8* %BRANCH_TAKEN, i64 93, i64 6, i64 6)
  store %struct.Memory* %call_4a5e71, %struct.Memory** %MEMORY

  %loadBr_4a5e71 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5e71 = icmp eq i8 %loadBr_4a5e71, 1
  br i1 %cmpBr_4a5e71, label %block_.L_4a5ece, label %block_4a5e77

block_4a5e77:
  ; Code: leaq -0x1d0(%rbp), %rax	 RIP: 4a5e77	 Bytes: 7
  %loadMem_4a5e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e77 = call %struct.Memory* @routine_leaq_MINUS0x1d0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e77)
  store %struct.Memory* %call_4a5e77, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rcx	 RIP: 4a5e7e	 Bytes: 8
  %loadMem_4a5e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e7e = call %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e7e)
  store %struct.Memory* %call_4a5e7e, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rcx), %rcx	 RIP: 4a5e86	 Bytes: 7
  %loadMem_4a5e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e86 = call %struct.Memory* @routine_movq_0x1918__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e86)
  store %struct.Memory* %call_4a5e86, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %edx	 RIP: 4a5e8d	 Bytes: 6
  %loadMem_4a5e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e8d = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e8d)
  store %struct.Memory* %call_4a5e8d, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edx	 RIP: 4a5e93	 Bytes: 3
  %loadMem_4a5e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e93 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e93)
  store %struct.Memory* %call_4a5e93, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4a5e96	 Bytes: 3
  %loadMem_4a5e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e96 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e96)
  store %struct.Memory* %call_4a5e96, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4a5e99	 Bytes: 4
  %loadMem_4a5e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e99 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e99)
  store %struct.Memory* %call_4a5e99, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %edx	 RIP: 4a5e9d	 Bytes: 6
  %loadMem_4a5e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5e9d = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5e9d)
  store %struct.Memory* %call_4a5e9d, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %edx	 RIP: 4a5ea3	 Bytes: 3
  %loadMem_4a5ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ea3 = call %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ea3)
  store %struct.Memory* %call_4a5ea3, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4a5ea6	 Bytes: 3
  %loadMem_4a5ea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ea6 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ea6)
  store %struct.Memory* %call_4a5ea6, %struct.Memory** %MEMORY

  ; Code: movw (%rcx,%rsi,2), %di	 RIP: 4a5ea9	 Bytes: 4
  %loadMem_4a5ea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ea9 = call %struct.Memory* @routine_movw___rcx__rsi_2____di(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ea9)
  store %struct.Memory* %call_4a5ea9, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 4a5ead	 Bytes: 4
  %loadMem_4a5ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ead = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ead)
  store %struct.Memory* %call_4a5ead, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a5eb1	 Bytes: 4
  %loadMem_4a5eb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5eb1 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5eb1)
  store %struct.Memory* %call_4a5eb1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a5eb5	 Bytes: 3
  %loadMem_4a5eb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5eb5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5eb5)
  store %struct.Memory* %call_4a5eb5, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 4a5eb8	 Bytes: 4
  %loadMem_4a5eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5eb8 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5eb8)
  store %struct.Memory* %call_4a5eb8, %struct.Memory** %MEMORY

  ; Code: movw %di, (%rax,%rcx,2)	 RIP: 4a5ebc	 Bytes: 4
  %loadMem_4a5ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ebc = call %struct.Memory* @routine_movw__di____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ebc)
  store %struct.Memory* %call_4a5ebc, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4a5ec0	 Bytes: 3
  %loadMem_4a5ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ec0 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ec0)
  store %struct.Memory* %call_4a5ec0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5ec3	 Bytes: 3
  %loadMem_4a5ec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ec3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ec3)
  store %struct.Memory* %call_4a5ec3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4a5ec6	 Bytes: 3
  %loadMem_4a5ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ec6 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ec6)
  store %struct.Memory* %call_4a5ec6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5e6d	 RIP: 4a5ec9	 Bytes: 5
  %loadMem_4a5ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ec9 = call %struct.Memory* @routine_jmpq_.L_4a5e6d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ec9, i64 -92, i64 5)
  store %struct.Memory* %call_4a5ec9, %struct.Memory** %MEMORY

  br label %block_.L_4a5e6d

  ; Code: .L_4a5ece:	 RIP: 4a5ece	 Bytes: 0
block_.L_4a5ece:

  ; Code: jmpq .L_4a5ed3	 RIP: 4a5ece	 Bytes: 5
  %loadMem_4a5ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ece = call %struct.Memory* @routine_jmpq_.L_4a5ed3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ece, i64 5, i64 5)
  store %struct.Memory* %call_4a5ece, %struct.Memory** %MEMORY

  br label %block_.L_4a5ed3

  ; Code: .L_4a5ed3:	 RIP: 4a5ed3	 Bytes: 0
block_.L_4a5ed3:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4a5ed3	 Bytes: 3
  %loadMem_4a5ed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ed3 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ed3)
  store %struct.Memory* %call_4a5ed3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5ed6	 Bytes: 3
  %loadMem_4a5ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ed6 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ed6)
  store %struct.Memory* %call_4a5ed6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4a5ed9	 Bytes: 3
  %loadMem_4a5ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ed9 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ed9)
  store %struct.Memory* %call_4a5ed9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5e5c	 RIP: 4a5edc	 Bytes: 5
  %loadMem_4a5edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5edc = call %struct.Memory* @routine_jmpq_.L_4a5e5c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5edc, i64 -128, i64 5)
  store %struct.Memory* %call_4a5edc, %struct.Memory** %MEMORY

  br label %block_.L_4a5e5c

  ; Code: .L_4a5ee1:	 RIP: 4a5ee1	 Bytes: 0
block_.L_4a5ee1:

  ; Code: movl -0x48(%rbp), %eax	 RIP: 4a5ee1	 Bytes: 3
  %loadMem_4a5ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ee1 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ee1)
  store %struct.Memory* %call_4a5ee1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 4a5ee4	 Bytes: 3
  %loadMem_4a5ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ee4 = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ee4)
  store %struct.Memory* %call_4a5ee4, %struct.Memory** %MEMORY

  ; Code: movsd -0x1d8(%rbp), %xmm0	 RIP: 4a5ee7	 Bytes: 8
  %loadMem_4a5ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ee7 = call %struct.Memory* @routine_movsd_MINUS0x1d8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ee7)
  store %struct.Memory* %call_4a5ee7, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x208(%rbp)	 RIP: 4a5eef	 Bytes: 8
  %loadMem_4a5eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5eef = call %struct.Memory* @routine_movsd__xmm0__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5eef)
  store %struct.Memory* %call_4a5eef, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 4a5ef7	 Bytes: 3
  %loadMem_4a5ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ef7 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ef7)
  store %struct.Memory* %call_4a5ef7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 4a5efa	 Bytes: 3
  %loadMem_4a5efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5efa = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5efa)
  store %struct.Memory* %call_4a5efa, %struct.Memory** %MEMORY

  ; Code: .L_4a5efd:	 RIP: 4a5efd	 Bytes: 0
  br label %block_.L_4a5efd
block_.L_4a5efd:

  ; Code: jmpq .L_4a5f02	 RIP: 4a5efd	 Bytes: 5
  %loadMem_4a5efd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5efd = call %struct.Memory* @routine_jmpq_.L_4a5f02(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5efd, i64 5, i64 5)
  store %struct.Memory* %call_4a5efd, %struct.Memory** %MEMORY

  br label %block_.L_4a5f02

  ; Code: .L_4a5f02:	 RIP: 4a5f02	 Bytes: 0
block_.L_4a5f02:

  ; Code: jmpq .L_4a5f07	 RIP: 4a5f02	 Bytes: 5
  %loadMem_4a5f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f02 = call %struct.Memory* @routine_jmpq_.L_4a5f07(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f02, i64 5, i64 5)
  store %struct.Memory* %call_4a5f02, %struct.Memory** %MEMORY

  br label %block_.L_4a5f07

  ; Code: .L_4a5f07:	 RIP: 4a5f07	 Bytes: 0
block_.L_4a5f07:

  ; Code: jmpq .L_4a5f0c	 RIP: 4a5f07	 Bytes: 5
  %loadMem_4a5f07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f07 = call %struct.Memory* @routine_jmpq_.L_4a5f0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f07, i64 5, i64 5)
  store %struct.Memory* %call_4a5f07, %struct.Memory** %MEMORY

  br label %block_.L_4a5f0c

  ; Code: .L_4a5f0c:	 RIP: 4a5f0c	 Bytes: 0
block_.L_4a5f0c:

  ; Code: jmpq .L_4a5f11	 RIP: 4a5f0c	 Bytes: 5
  %loadMem_4a5f0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f0c = call %struct.Memory* @routine_jmpq_.L_4a5f11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f0c, i64 5, i64 5)
  store %struct.Memory* %call_4a5f0c, %struct.Memory** %MEMORY

  br label %block_.L_4a5f11

  ; Code: .L_4a5f11:	 RIP: 4a5f11	 Bytes: 0
block_.L_4a5f11:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 4a5f11	 Bytes: 3
  %loadMem_4a5f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f11 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f11)
  store %struct.Memory* %call_4a5f11, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a5f14	 Bytes: 3
  %loadMem_4a5f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f14 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f14)
  store %struct.Memory* %call_4a5f14, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 4a5f17	 Bytes: 3
  %loadMem_4a5f17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f17 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f17)
  store %struct.Memory* %call_4a5f17, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a44dc	 RIP: 4a5f1a	 Bytes: 5
  %loadMem_4a5f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f1a = call %struct.Memory* @routine_jmpq_.L_4a44dc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f1a, i64 -6718, i64 5)
  store %struct.Memory* %call_4a5f1a, %struct.Memory** %MEMORY

  br label %block_.L_4a44dc

  ; Code: .L_4a5f1f:	 RIP: 4a5f1f	 Bytes: 0
block_.L_4a5f1f:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 4a5f1f	 Bytes: 3
  %loadMem_4a5f1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f1f = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f1f)
  store %struct.Memory* %call_4a5f1f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a5f22	 Bytes: 8
  %loadMem_4a5f22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f22 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f22)
  store %struct.Memory* %call_4a5f22, %struct.Memory** %MEMORY

  ; Code: movq 0x70(%rcx), %rcx	 RIP: 4a5f2a	 Bytes: 4
  %loadMem_4a5f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f2a = call %struct.Memory* @routine_movq_0x70__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f2a)
  store %struct.Memory* %call_4a5f2a, %struct.Memory** %MEMORY

  ; Code: movslq -0x1fc(%rbp), %rdx	 RIP: 4a5f2e	 Bytes: 7
  %loadMem_4a5f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f2e = call %struct.Memory* @routine_movslq_MINUS0x1fc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f2e)
  store %struct.Memory* %call_4a5f2e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4a5f35	 Bytes: 4
  %loadMem_4a5f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f35 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f35)
  store %struct.Memory* %call_4a5f35, %struct.Memory** %MEMORY

  ; Code: movslq -0x200(%rbp), %rdx	 RIP: 4a5f39	 Bytes: 7
  %loadMem_4a5f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f39 = call %struct.Memory* @routine_movslq_MINUS0x200__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f39)
  store %struct.Memory* %call_4a5f39, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 4a5f40	 Bytes: 3
  %loadMem_4a5f40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f40 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f40)
  store %struct.Memory* %call_4a5f40, %struct.Memory** %MEMORY

  ; Code: movl -0x228(%rbp), %eax	 RIP: 4a5f43	 Bytes: 6
  %loadMem_4a5f43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f43 = call %struct.Memory* @routine_movl_MINUS0x228__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f43)
  store %struct.Memory* %call_4a5f43, %struct.Memory** %MEMORY

  ; Code: cmpl -0x28(%rbp), %eax	 RIP: 4a5f49	 Bytes: 3
  %loadMem_4a5f49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f49 = call %struct.Memory* @routine_cmpl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f49)
  store %struct.Memory* %call_4a5f49, %struct.Memory** %MEMORY

  ; Code: jne .L_4a5f62	 RIP: 4a5f4c	 Bytes: 6
  %loadMem_4a5f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f4c = call %struct.Memory* @routine_jne_.L_4a5f62(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f4c, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_4a5f4c, %struct.Memory** %MEMORY

  %loadBr_4a5f4c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5f4c = icmp eq i8 %loadBr_4a5f4c, 1
  br i1 %cmpBr_4a5f4c, label %block_.L_4a5f62, label %block_4a5f52

block_4a5f52:
  ; Code: movl $0xffffffff, %eax	 RIP: 4a5f52	 Bytes: 5
  %loadMem_4a5f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f52 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f52)
  store %struct.Memory* %call_4a5f52, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x534(%rbp)	 RIP: 4a5f57	 Bytes: 6
  %loadMem_4a5f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f57 = call %struct.Memory* @routine_movl__eax__MINUS0x534__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f57)
  store %struct.Memory* %call_4a5f57, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5f97	 RIP: 4a5f5d	 Bytes: 5
  %loadMem_4a5f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f5d = call %struct.Memory* @routine_jmpq_.L_4a5f97(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f5d, i64 58, i64 5)
  store %struct.Memory* %call_4a5f5d, %struct.Memory** %MEMORY

  br label %block_.L_4a5f97

  ; Code: .L_4a5f62:	 RIP: 4a5f62	 Bytes: 0
block_.L_4a5f62:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 4a5f62	 Bytes: 3
  %loadMem_4a5f62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f62 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f62)
  store %struct.Memory* %call_4a5f62, %struct.Memory** %MEMORY

  ; Code: cmpl -0x228(%rbp), %eax	 RIP: 4a5f65	 Bytes: 6
  %loadMem_4a5f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f65 = call %struct.Memory* @routine_cmpl_MINUS0x228__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f65)
  store %struct.Memory* %call_4a5f65, %struct.Memory** %MEMORY

  ; Code: jge .L_4a5f7f	 RIP: 4a5f6b	 Bytes: 6
  %loadMem_4a5f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f6b = call %struct.Memory* @routine_jge_.L_4a5f7f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f6b, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_4a5f6b, %struct.Memory** %MEMORY

  %loadBr_4a5f6b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5f6b = icmp eq i8 %loadBr_4a5f6b, 1
  br i1 %cmpBr_4a5f6b, label %block_.L_4a5f7f, label %block_4a5f71

block_4a5f71:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 4a5f71	 Bytes: 3
  %loadMem_4a5f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f71 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f71)
  store %struct.Memory* %call_4a5f71, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x538(%rbp)	 RIP: 4a5f74	 Bytes: 6
  %loadMem_4a5f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f74 = call %struct.Memory* @routine_movl__eax__MINUS0x538__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f74)
  store %struct.Memory* %call_4a5f74, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5f8b	 RIP: 4a5f7a	 Bytes: 5
  %loadMem_4a5f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f7a = call %struct.Memory* @routine_jmpq_.L_4a5f8b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f7a, i64 17, i64 5)
  store %struct.Memory* %call_4a5f7a, %struct.Memory** %MEMORY

  br label %block_.L_4a5f8b

  ; Code: .L_4a5f7f:	 RIP: 4a5f7f	 Bytes: 0
block_.L_4a5f7f:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 4a5f7f	 Bytes: 3
  %loadMem_4a5f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f7f = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f7f)
  store %struct.Memory* %call_4a5f7f, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 4a5f82	 Bytes: 3
  %loadMem_4a5f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f82 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f82)
  store %struct.Memory* %call_4a5f82, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x538(%rbp)	 RIP: 4a5f85	 Bytes: 6
  %loadMem_4a5f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f85 = call %struct.Memory* @routine_movl__eax__MINUS0x538__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f85)
  store %struct.Memory* %call_4a5f85, %struct.Memory** %MEMORY

  ; Code: .L_4a5f8b:	 RIP: 4a5f8b	 Bytes: 0
  br label %block_.L_4a5f8b
block_.L_4a5f8b:

  ; Code: movl -0x538(%rbp), %eax	 RIP: 4a5f8b	 Bytes: 6
  %loadMem_4a5f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f8b = call %struct.Memory* @routine_movl_MINUS0x538__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f8b)
  store %struct.Memory* %call_4a5f8b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x534(%rbp)	 RIP: 4a5f91	 Bytes: 6
  %loadMem_4a5f91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f91 = call %struct.Memory* @routine_movl__eax__MINUS0x534__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f91)
  store %struct.Memory* %call_4a5f91, %struct.Memory** %MEMORY

  ; Code: .L_4a5f97:	 RIP: 4a5f97	 Bytes: 0
  br label %block_.L_4a5f97
block_.L_4a5f97:

  ; Code: movl -0x534(%rbp), %eax	 RIP: 4a5f97	 Bytes: 6
  %loadMem_4a5f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f97 = call %struct.Memory* @routine_movl_MINUS0x534__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f97)
  store %struct.Memory* %call_4a5f97, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a5f9d	 Bytes: 8
  %loadMem_4a5f9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5f9d = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5f9d)
  store %struct.Memory* %call_4a5f9d, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rcx), %rcx	 RIP: 4a5fa5	 Bytes: 7
  %loadMem_4a5fa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fa5 = call %struct.Memory* @routine_movq_0x3758__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fa5)
  store %struct.Memory* %call_4a5fa5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a5fac	 Bytes: 8
  %loadMem_4a5fac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fac = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fac)
  store %struct.Memory* %call_4a5fac, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%rdx), %rdx	 RIP: 4a5fb4	 Bytes: 4
  %loadMem_4a5fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fb4 = call %struct.Memory* @routine_movslq_0xc__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fb4)
  store %struct.Memory* %call_4a5fb4, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rdx, %rdx	 RIP: 4a5fb8	 Bytes: 7
  %loadMem_4a5fb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fb8 = call %struct.Memory* @routine_imulq__0x278___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fb8)
  store %struct.Memory* %call_4a5fb8, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a5fbf	 Bytes: 3
  %loadMem_4a5fbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fbf = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fbf)
  store %struct.Memory* %call_4a5fbf, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4a5fc2	 Bytes: 3
  %loadMem_4a5fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fc2 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fc2)
  store %struct.Memory* %call_4a5fc2, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %esi	 RIP: 4a5fc5	 Bytes: 3
  %loadMem_4a5fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fc5 = call %struct.Memory* @routine_shll__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fc5)
  store %struct.Memory* %call_4a5fc5, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a5fc8	 Bytes: 3
  %loadMem_4a5fc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fc8 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fc8)
  store %struct.Memory* %call_4a5fc8, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x18c(%rcx,%rdx,4)	 RIP: 4a5fcb	 Bytes: 7
  %loadMem_4a5fcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fcb = call %struct.Memory* @routine_movl__eax__0x18c__rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fcb)
  store %struct.Memory* %call_4a5fcb, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a5fd2	 Bytes: 7
  %loadMem_4a5fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fd2 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fd2)
  store %struct.Memory* %call_4a5fd2, %struct.Memory** %MEMORY

  ; Code: .L_4a5fd9:	 RIP: 4a5fd9	 Bytes: 0
  br label %block_.L_4a5fd9
block_.L_4a5fd9:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4a5fd9	 Bytes: 4
  %loadMem_4a5fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fd9 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fd9)
  store %struct.Memory* %call_4a5fd9, %struct.Memory** %MEMORY

  ; Code: jge .L_4a60ac	 RIP: 4a5fdd	 Bytes: 6
  %loadMem_4a5fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fdd = call %struct.Memory* @routine_jge_.L_4a60ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fdd, i8* %BRANCH_TAKEN, i64 207, i64 6, i64 6)
  store %struct.Memory* %call_4a5fdd, %struct.Memory** %MEMORY

  %loadBr_4a5fdd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5fdd = icmp eq i8 %loadBr_4a5fdd, 1
  br i1 %cmpBr_4a5fdd, label %block_.L_4a60ac, label %block_4a5fe3

block_4a5fe3:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a5fe3	 Bytes: 7
  %loadMem_4a5fe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fe3 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fe3)
  store %struct.Memory* %call_4a5fe3, %struct.Memory** %MEMORY

  ; Code: .L_4a5fea:	 RIP: 4a5fea	 Bytes: 0
  br label %block_.L_4a5fea
block_.L_4a5fea:

  ; Code: cmpl $0x2, -0x2c(%rbp)	 RIP: 4a5fea	 Bytes: 4
  %loadMem_4a5fea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fea = call %struct.Memory* @routine_cmpl__0x2__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fea)
  store %struct.Memory* %call_4a5fea, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6099	 RIP: 4a5fee	 Bytes: 6
  %loadMem_4a5fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5fee = call %struct.Memory* @routine_jge_.L_4a6099(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5fee, i8* %BRANCH_TAKEN, i64 171, i64 6, i64 6)
  store %struct.Memory* %call_4a5fee, %struct.Memory** %MEMORY

  %loadBr_4a5fee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a5fee = icmp eq i8 %loadBr_4a5fee, 1
  br i1 %cmpBr_4a5fee, label %block_.L_4a6099, label %block_4a5ff4

block_4a5ff4:
  ; Code: movl $0x2, %eax	 RIP: 4a5ff4	 Bytes: 5
  %loadMem_4a5ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ff4 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ff4)
  store %struct.Memory* %call_4a5ff4, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %ecx	 RIP: 4a5ff9	 Bytes: 3
  %loadMem_4a5ff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ff9 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ff9)
  store %struct.Memory* %call_4a5ff9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a5ffc	 Bytes: 8
  %loadMem_4a5ffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a5ffc = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a5ffc)
  store %struct.Memory* %call_4a5ffc, %struct.Memory** %MEMORY

  ; Code: movq 0x70(%rdx), %rdx	 RIP: 4a6004	 Bytes: 4
  %loadMem_4a6004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6004 = call %struct.Memory* @routine_movq_0x70__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6004)
  store %struct.Memory* %call_4a6004, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %esi	 RIP: 4a6008	 Bytes: 3
  %loadMem_4a6008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6008 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6008)
  store %struct.Memory* %call_4a6008, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdi	 RIP: 4a600b	 Bytes: 8
  %loadMem_4a600b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a600b = call %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a600b)
  store %struct.Memory* %call_4a600b, %struct.Memory** %MEMORY

  ; Code: movl 0x88(%rdi), %r8d	 RIP: 4a6013	 Bytes: 7
  %loadMem_4a6013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6013 = call %struct.Memory* @routine_movl_0x88__rdi____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6013)
  store %struct.Memory* %call_4a6013, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %r8d	 RIP: 4a601a	 Bytes: 4
  %loadMem_4a601a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a601a = call %struct.Memory* @routine_shll__0x2___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a601a)
  store %struct.Memory* %call_4a601a, %struct.Memory** %MEMORY

  ; Code: addl %r8d, %esi	 RIP: 4a601e	 Bytes: 3
  %loadMem_4a601e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a601e = call %struct.Memory* @routine_addl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a601e)
  store %struct.Memory* %call_4a601e, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r8d	 RIP: 4a6021	 Bytes: 4
  %loadMem_4a6021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6021 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6021)
  store %struct.Memory* %call_4a6021, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53c(%rbp)	 RIP: 4a6025	 Bytes: 6
  %loadMem_4a6025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6025 = call %struct.Memory* @routine_movl__eax__MINUS0x53c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6025)
  store %struct.Memory* %call_4a6025, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %eax	 RIP: 4a602b	 Bytes: 3
  %loadMem_4a602b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a602b = call %struct.Memory* @routine_movl__r8d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a602b)
  store %struct.Memory* %call_4a602b, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x548(%rbp)	 RIP: 4a602e	 Bytes: 7
  %loadMem_4a602e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a602e = call %struct.Memory* @routine_movq__rdx__MINUS0x548__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a602e)
  store %struct.Memory* %call_4a602e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6035	 Bytes: 1
  %loadMem_4a6035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6035 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6035)
  store %struct.Memory* %call_4a6035, %struct.Memory** %MEMORY

  ; Code: movl -0x53c(%rbp), %r8d	 RIP: 4a6036	 Bytes: 7
  %loadMem_4a6036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6036 = call %struct.Memory* @routine_movl_MINUS0x53c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6036)
  store %struct.Memory* %call_4a6036, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 4a603d	 Bytes: 3
  %loadMem_4a603d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a603d = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a603d)
  store %struct.Memory* %call_4a603d, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a6040	 Bytes: 3
  %loadMem_4a6040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6040 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6040)
  store %struct.Memory* %call_4a6040, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 4a6043	 Bytes: 2
  %loadMem_4a6043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6043 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6043)
  store %struct.Memory* %call_4a6043, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 4a6045	 Bytes: 3
  %loadMem_4a6045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6045 = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6045)
  store %struct.Memory* %call_4a6045, %struct.Memory** %MEMORY

  ; Code: movq -0x548(%rbp), %r9	 RIP: 4a6048	 Bytes: 7
  %loadMem_4a6048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6048 = call %struct.Memory* @routine_movq_MINUS0x548__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6048)
  store %struct.Memory* %call_4a6048, %struct.Memory** %MEMORY

  ; Code: movq (%r9,%rdi,8), %rdi	 RIP: 4a604f	 Bytes: 4
  %loadMem_4a604f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a604f = call %struct.Memory* @routine_movq___r9__rdi_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a604f)
  store %struct.Memory* %call_4a604f, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edx	 RIP: 4a6053	 Bytes: 3
  %loadMem_4a6053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6053 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6053)
  store %struct.Memory* %call_4a6053, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r10	 RIP: 4a6056	 Bytes: 8
  %loadMem_4a6056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6056 = call %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6056)
  store %struct.Memory* %call_4a6056, %struct.Memory** %MEMORY

  ; Code: movl 0x8c(%r10), %esi	 RIP: 4a605e	 Bytes: 7
  %loadMem_4a605e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a605e = call %struct.Memory* @routine_movl_0x8c__r10____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a605e)
  store %struct.Memory* %call_4a605e, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %esi	 RIP: 4a6065	 Bytes: 3
  %loadMem_4a6065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6065 = call %struct.Memory* @routine_shll__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6065)
  store %struct.Memory* %call_4a6065, %struct.Memory** %MEMORY

  ; Code: addl %esi, %edx	 RIP: 4a6068	 Bytes: 2
  %loadMem_4a6068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6068 = call %struct.Memory* @routine_addl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6068)
  store %struct.Memory* %call_4a6068, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4a606a	 Bytes: 3
  %loadMem_4a606a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a606a = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a606a)
  store %struct.Memory* %call_4a606a, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 4a606d	 Bytes: 2
  %loadMem_4a606d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a606d = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a606d)
  store %struct.Memory* %call_4a606d, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x54c(%rbp)	 RIP: 4a606f	 Bytes: 6
  %loadMem_4a606f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a606f = call %struct.Memory* @routine_movl__edx__MINUS0x54c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a606f)
  store %struct.Memory* %call_4a606f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6075	 Bytes: 1
  %loadMem_4a6075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6075 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6075)
  store %struct.Memory* %call_4a6075, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 4a6076	 Bytes: 3
  %loadMem_4a6076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6076 = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6076)
  store %struct.Memory* %call_4a6076, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a6079	 Bytes: 3
  %loadMem_4a6079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6079 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6079)
  store %struct.Memory* %call_4a6079, %struct.Memory** %MEMORY

  ; Code: movl -0x54c(%rbp), %esi	 RIP: 4a607c	 Bytes: 6
  %loadMem_4a607c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a607c = call %struct.Memory* @routine_movl_MINUS0x54c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a607c)
  store %struct.Memory* %call_4a607c, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 4a6082	 Bytes: 2
  %loadMem_4a6082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6082 = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6082)
  store %struct.Memory* %call_4a6082, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %r10	 RIP: 4a6084	 Bytes: 3
  %loadMem_4a6084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6084 = call %struct.Memory* @routine_movslq__esi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6084)
  store %struct.Memory* %call_4a6084, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rdi,%r10,4)	 RIP: 4a6087	 Bytes: 4
  %loadMem_4a6087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6087 = call %struct.Memory* @routine_movl__ecx____rdi__r10_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6087)
  store %struct.Memory* %call_4a6087, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a608b	 Bytes: 3
  %loadMem_4a608b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a608b = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a608b)
  store %struct.Memory* %call_4a608b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a608e	 Bytes: 3
  %loadMem_4a608e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a608e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a608e)
  store %struct.Memory* %call_4a608e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a6091	 Bytes: 3
  %loadMem_4a6091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6091 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6091)
  store %struct.Memory* %call_4a6091, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5fea	 RIP: 4a6094	 Bytes: 5
  %loadMem_4a6094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6094 = call %struct.Memory* @routine_jmpq_.L_4a5fea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6094, i64 -170, i64 5)
  store %struct.Memory* %call_4a6094, %struct.Memory** %MEMORY

  br label %block_.L_4a5fea

  ; Code: .L_4a6099:	 RIP: 4a6099	 Bytes: 0
block_.L_4a6099:

  ; Code: jmpq .L_4a609e	 RIP: 4a6099	 Bytes: 5
  %loadMem_4a6099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6099 = call %struct.Memory* @routine_jmpq_.L_4a609e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6099, i64 5, i64 5)
  store %struct.Memory* %call_4a6099, %struct.Memory** %MEMORY

  br label %block_.L_4a609e

  ; Code: .L_4a609e:	 RIP: 4a609e	 Bytes: 0
block_.L_4a609e:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a609e	 Bytes: 3
  %loadMem_4a609e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a609e = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a609e)
  store %struct.Memory* %call_4a609e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a60a1	 Bytes: 3
  %loadMem_4a60a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60a1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60a1)
  store %struct.Memory* %call_4a60a1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a60a4	 Bytes: 3
  %loadMem_4a60a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60a4 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60a4)
  store %struct.Memory* %call_4a60a4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a5fd9	 RIP: 4a60a7	 Bytes: 5
  %loadMem_4a60a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60a7 = call %struct.Memory* @routine_jmpq_.L_4a5fd9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60a7, i64 -206, i64 5)
  store %struct.Memory* %call_4a60a7, %struct.Memory** %MEMORY

  br label %block_.L_4a5fd9

  ; Code: .L_4a60ac:	 RIP: 4a60ac	 Bytes: 0
block_.L_4a60ac:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 4a60ac	 Bytes: 8
  %loadMem_4a60ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60ac = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60ac)
  store %struct.Memory* %call_4a60ac, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x9a0(%rax)	 RIP: 4a60b4	 Bytes: 7
  %loadMem_4a60b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60b4 = call %struct.Memory* @routine_cmpl__0x0__0x9a0__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60b4)
  store %struct.Memory* %call_4a60b4, %struct.Memory** %MEMORY

  ; Code: jne .L_4a71c6	 RIP: 4a60bb	 Bytes: 6
  %loadMem_4a60bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60bb = call %struct.Memory* @routine_jne_.L_4a71c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60bb, i8* %BRANCH_TAKEN, i64 4363, i64 6, i64 6)
  store %struct.Memory* %call_4a60bb, %struct.Memory** %MEMORY

  %loadBr_4a60bb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a60bb = icmp eq i8 %loadBr_4a60bb, 1
  br i1 %cmpBr_4a60bb, label %block_.L_4a71c6, label %block_4a60c1

block_4a60c1:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a60c1	 Bytes: 8
  %loadMem_4a60c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60c1 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60c1)
  store %struct.Memory* %call_4a60c1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 4a60c9	 Bytes: 7
  %loadMem_4a60c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60c9 = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60c9)
  store %struct.Memory* %call_4a60c9, %struct.Memory** %MEMORY

  ; Code: jne .L_4a6204	 RIP: 4a60d0	 Bytes: 6
  %loadMem_4a60d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60d0 = call %struct.Memory* @routine_jne_.L_4a6204(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60d0, i8* %BRANCH_TAKEN, i64 308, i64 6, i64 6)
  store %struct.Memory* %call_4a60d0, %struct.Memory** %MEMORY

  %loadBr_4a60d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a60d0 = icmp eq i8 %loadBr_4a60d0, 1
  br i1 %cmpBr_4a60d0, label %block_.L_4a6204, label %block_4a60d6

block_4a60d6:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a60d6	 Bytes: 7
  %loadMem_4a60d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60d6 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60d6)
  store %struct.Memory* %call_4a60d6, %struct.Memory** %MEMORY

  ; Code: .L_4a60dd:	 RIP: 4a60dd	 Bytes: 0
  br label %block_.L_4a60dd
block_.L_4a60dd:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a60dd	 Bytes: 4
  %loadMem_4a60dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60dd = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60dd)
  store %struct.Memory* %call_4a60dd, %struct.Memory** %MEMORY

  ; Code: jge .L_4a61eb	 RIP: 4a60e1	 Bytes: 6
  %loadMem_4a60e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60e1 = call %struct.Memory* @routine_jge_.L_4a61eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60e1, i8* %BRANCH_TAKEN, i64 266, i64 6, i64 6)
  store %struct.Memory* %call_4a60e1, %struct.Memory** %MEMORY

  %loadBr_4a60e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a60e1 = icmp eq i8 %loadBr_4a60e1, 1
  br i1 %cmpBr_4a60e1, label %block_.L_4a61eb, label %block_4a60e7

block_4a60e7:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a60e7	 Bytes: 7
  %loadMem_4a60e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60e7 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60e7)
  store %struct.Memory* %call_4a60e7, %struct.Memory** %MEMORY

  ; Code: .L_4a60ee:	 RIP: 4a60ee	 Bytes: 0
  br label %block_.L_4a60ee
block_.L_4a60ee:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a60ee	 Bytes: 4
  %loadMem_4a60ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60ee = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60ee)
  store %struct.Memory* %call_4a60ee, %struct.Memory** %MEMORY

  ; Code: jge .L_4a61d8	 RIP: 4a60f2	 Bytes: 6
  %loadMem_4a60f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60f2 = call %struct.Memory* @routine_jge_.L_4a61d8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60f2, i8* %BRANCH_TAKEN, i64 230, i64 6, i64 6)
  store %struct.Memory* %call_4a60f2, %struct.Memory** %MEMORY

  %loadBr_4a60f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a60f2 = icmp eq i8 %loadBr_4a60f2, 1
  br i1 %cmpBr_4a60f2, label %block_.L_4a61d8, label %block_4a60f8

block_4a60f8:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a60f8	 Bytes: 8
  %loadMem_4a60f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a60f8 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a60f8)
  store %struct.Memory* %call_4a60f8, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rax	 RIP: 4a6100	 Bytes: 6
  %loadMem_4a6100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6100 = call %struct.Memory* @routine_addq__0x1cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6100)
  store %struct.Memory* %call_4a6100, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 4a6106	 Bytes: 4
  %loadMem_4a6106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6106 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6106)
  store %struct.Memory* %call_4a6106, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rcx	 RIP: 4a610a	 Bytes: 4
  %loadMem_4a610a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a610a = call %struct.Memory* @routine_shlq__0x7___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a610a)
  store %struct.Memory* %call_4a610a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a610e	 Bytes: 3
  %loadMem_4a610e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a610e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a610e)
  store %struct.Memory* %call_4a610e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a6111	 Bytes: 4
  %loadMem_4a6111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6111 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6111)
  store %struct.Memory* %call_4a6111, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a6115	 Bytes: 4
  %loadMem_4a6115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6115 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6115)
  store %struct.Memory* %call_4a6115, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a6119	 Bytes: 3
  %loadMem_4a6119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6119 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6119)
  store %struct.Memory* %call_4a6119, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a611c	 Bytes: 4
  %loadMem_4a611c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a611c = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a611c)
  store %struct.Memory* %call_4a611c, %struct.Memory** %MEMORY

  ; Code: movw (%rax,%rcx,2), %dx	 RIP: 4a6120	 Bytes: 4
  %loadMem_4a6120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6120 = call %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6120)
  store %struct.Memory* %call_4a6120, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a6124	 Bytes: 8
  %loadMem_4a6124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6124 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6124)
  store %struct.Memory* %call_4a6124, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rax	 RIP: 4a612c	 Bytes: 6
  %loadMem_4a612c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a612c = call %struct.Memory* @routine_addq__0x3138___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a612c)
  store %struct.Memory* %call_4a612c, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a6132	 Bytes: 6
  %loadMem_4a6132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6132 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6132)
  store %struct.Memory* %call_4a6132, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a6138	 Bytes: 3
  %loadMem_4a6138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6138 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6138)
  store %struct.Memory* %call_4a6138, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a613b	 Bytes: 3
  %loadMem_4a613b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a613b = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a613b)
  store %struct.Memory* %call_4a613b, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4a613e	 Bytes: 4
  %loadMem_4a613e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a613e = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a613e)
  store %struct.Memory* %call_4a613e, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a6142	 Bytes: 3
  %loadMem_4a6142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6142 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6142)
  store %struct.Memory* %call_4a6142, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a6145	 Bytes: 6
  %loadMem_4a6145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6145 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6145)
  store %struct.Memory* %call_4a6145, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a614b	 Bytes: 3
  %loadMem_4a614b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a614b = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a614b)
  store %struct.Memory* %call_4a614b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a614e	 Bytes: 3
  %loadMem_4a614e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a614e = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a614e)
  store %struct.Memory* %call_4a614e, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rax,%rcx,2)	 RIP: 4a6151	 Bytes: 4
  %loadMem_4a6151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6151 = call %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6151)
  store %struct.Memory* %call_4a6151, %struct.Memory** %MEMORY

  ; Code: movq -0x210(%rbp), %rax	 RIP: 4a6155	 Bytes: 7
  %loadMem_4a6155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6155 = call %struct.Memory* @routine_movq_MINUS0x210__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6155)
  store %struct.Memory* %call_4a6155, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %esi	 RIP: 4a615c	 Bytes: 6
  %loadMem_4a615c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a615c = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a615c)
  store %struct.Memory* %call_4a615c, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a6162	 Bytes: 3
  %loadMem_4a6162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6162 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6162)
  store %struct.Memory* %call_4a6162, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a6165	 Bytes: 3
  %loadMem_4a6165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6165 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6165)
  store %struct.Memory* %call_4a6165, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a6168	 Bytes: 4
  %loadMem_4a6168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6168 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6168)
  store %struct.Memory* %call_4a6168, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %esi	 RIP: 4a616c	 Bytes: 6
  %loadMem_4a616c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a616c = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a616c)
  store %struct.Memory* %call_4a616c, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a6172	 Bytes: 3
  %loadMem_4a6172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6172 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6172)
  store %struct.Memory* %call_4a6172, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a6175	 Bytes: 3
  %loadMem_4a6175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6175 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6175)
  store %struct.Memory* %call_4a6175, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %esi	 RIP: 4a6178	 Bytes: 4
  %loadMem_4a6178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6178 = call %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6178)
  store %struct.Memory* %call_4a6178, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a617c	 Bytes: 8
  %loadMem_4a617c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a617c = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a617c)
  store %struct.Memory* %call_4a617c, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rax	 RIP: 4a6184	 Bytes: 6
  %loadMem_4a6184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6184 = call %struct.Memory* @routine_addq__0x1cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6184)
  store %struct.Memory* %call_4a6184, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 4a618a	 Bytes: 4
  %loadMem_4a618a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a618a = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a618a)
  store %struct.Memory* %call_4a618a, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rcx	 RIP: 4a618e	 Bytes: 4
  %loadMem_4a618e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a618e = call %struct.Memory* @routine_shlq__0x7___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a618e)
  store %struct.Memory* %call_4a618e, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a6192	 Bytes: 3
  %loadMem_4a6192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6192 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6192)
  store %struct.Memory* %call_4a6192, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a6195	 Bytes: 4
  %loadMem_4a6195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6195 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6195)
  store %struct.Memory* %call_4a6195, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a6199	 Bytes: 4
  %loadMem_4a6199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6199 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6199)
  store %struct.Memory* %call_4a6199, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a619d	 Bytes: 3
  %loadMem_4a619d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a619d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a619d)
  store %struct.Memory* %call_4a619d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a61a0	 Bytes: 4
  %loadMem_4a61a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61a0 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61a0)
  store %struct.Memory* %call_4a61a0, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %edi	 RIP: 4a61a4	 Bytes: 4
  %loadMem_4a61a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61a4 = call %struct.Memory* @routine_movzwl___rax__rcx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61a4)
  store %struct.Memory* %call_4a61a4, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 4a61a8	 Bytes: 2
  %loadMem_4a61a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61a8 = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61a8)
  store %struct.Memory* %call_4a61a8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a61aa	 Bytes: 8
  %loadMem_4a61aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61aa = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61aa)
  store %struct.Memory* %call_4a61aa, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4a61b2	 Bytes: 6
  %loadMem_4a61b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61b2 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61b2)
  store %struct.Memory* %call_4a61b2, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a61b8	 Bytes: 4
  %loadMem_4a61b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61b8 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61b8)
  store %struct.Memory* %call_4a61b8, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a61bc	 Bytes: 4
  %loadMem_4a61bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61bc = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61bc)
  store %struct.Memory* %call_4a61bc, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a61c0	 Bytes: 3
  %loadMem_4a61c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61c0 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61c0)
  store %struct.Memory* %call_4a61c0, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a61c3	 Bytes: 4
  %loadMem_4a61c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61c3 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61c3)
  store %struct.Memory* %call_4a61c3, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4a61c7	 Bytes: 3
  %loadMem_4a61c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61c7 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61c7)
  store %struct.Memory* %call_4a61c7, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a61ca	 Bytes: 3
  %loadMem_4a61ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61ca = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61ca)
  store %struct.Memory* %call_4a61ca, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a61cd	 Bytes: 3
  %loadMem_4a61cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61cd = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61cd)
  store %struct.Memory* %call_4a61cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a61d0	 Bytes: 3
  %loadMem_4a61d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61d0 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61d0)
  store %struct.Memory* %call_4a61d0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a60ee	 RIP: 4a61d3	 Bytes: 5
  %loadMem_4a61d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61d3 = call %struct.Memory* @routine_jmpq_.L_4a60ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61d3, i64 -229, i64 5)
  store %struct.Memory* %call_4a61d3, %struct.Memory** %MEMORY

  br label %block_.L_4a60ee

  ; Code: .L_4a61d8:	 RIP: 4a61d8	 Bytes: 0
block_.L_4a61d8:

  ; Code: jmpq .L_4a61dd	 RIP: 4a61d8	 Bytes: 5
  %loadMem_4a61d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61d8 = call %struct.Memory* @routine_jmpq_.L_4a61dd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61d8, i64 5, i64 5)
  store %struct.Memory* %call_4a61d8, %struct.Memory** %MEMORY

  br label %block_.L_4a61dd

  ; Code: .L_4a61dd:	 RIP: 4a61dd	 Bytes: 0
block_.L_4a61dd:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a61dd	 Bytes: 3
  %loadMem_4a61dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61dd = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61dd)
  store %struct.Memory* %call_4a61dd, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a61e0	 Bytes: 3
  %loadMem_4a61e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61e0 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61e0)
  store %struct.Memory* %call_4a61e0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a61e3	 Bytes: 3
  %loadMem_4a61e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61e3 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61e3)
  store %struct.Memory* %call_4a61e3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a60dd	 RIP: 4a61e6	 Bytes: 5
  %loadMem_4a61e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61e6 = call %struct.Memory* @routine_jmpq_.L_4a60dd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61e6, i64 -265, i64 5)
  store %struct.Memory* %call_4a61e6, %struct.Memory** %MEMORY

  br label %block_.L_4a60dd

  ; Code: .L_4a61eb:	 RIP: 4a61eb	 Bytes: 0
block_.L_4a61eb:

  ; Code: leaq -0x44(%rbp), %rsi	 RIP: 4a61eb	 Bytes: 4
  %loadMem_4a61eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61eb = call %struct.Memory* @routine_leaq_MINUS0x44__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61eb)
  store %struct.Memory* %call_4a61eb, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 4a61ef	 Bytes: 5
  %loadMem_4a61ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61ef = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61ef)
  store %struct.Memory* %call_4a61ef, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edi	 RIP: 4a61f4	 Bytes: 3
  %loadMem_4a61f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61f4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61f4)
  store %struct.Memory* %call_4a61f4, %struct.Memory** %MEMORY

  ; Code: callq .dct_luma8x8	 RIP: 4a61f7	 Bytes: 5
  %loadMem1_4a61f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a61f7 = call %struct.Memory* @routine_callq_.dct_luma8x8(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a61f7, i64 17737, i64 5, i64 5)
  store %struct.Memory* %call1_4a61f7, %struct.Memory** %MEMORY

  %loadMem2_4a61f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a61f7 = load i64, i64* %3
  %call2_4a61f7 = call %struct.Memory* @sub_4aa740.dct_luma8x8(%struct.State* %0, i64  %loadPC_4a61f7, %struct.Memory* %loadMem2_4a61f7)
  store %struct.Memory* %call2_4a61f7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 4a61fc	 Bytes: 3
  %loadMem_4a61fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61fc = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61fc)
  store %struct.Memory* %call_4a61fc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a71c1	 RIP: 4a61ff	 Bytes: 5
  %loadMem_4a61ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a61ff = call %struct.Memory* @routine_jmpq_.L_4a71c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a61ff, i64 4034, i64 5)
  store %struct.Memory* %call_4a61ff, %struct.Memory** %MEMORY

  br label %block_.L_4a71c1

  ; Code: .L_4a6204:	 RIP: 4a6204	 Bytes: 0
block_.L_4a6204:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a6204	 Bytes: 7
  %loadMem_4a6204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6204 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6204)
  store %struct.Memory* %call_4a6204, %struct.Memory** %MEMORY

  ; Code: .L_4a620b:	 RIP: 4a620b	 Bytes: 0
  br label %block_.L_4a620b
block_.L_4a620b:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a620b	 Bytes: 4
  %loadMem_4a620b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a620b = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a620b)
  store %struct.Memory* %call_4a620b, %struct.Memory** %MEMORY

  ; Code: jge .L_4a64d9	 RIP: 4a620f	 Bytes: 6
  %loadMem_4a620f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a620f = call %struct.Memory* @routine_jge_.L_4a64d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a620f, i8* %BRANCH_TAKEN, i64 714, i64 6, i64 6)
  store %struct.Memory* %call_4a620f, %struct.Memory** %MEMORY

  %loadBr_4a620f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a620f = icmp eq i8 %loadBr_4a620f, 1
  br i1 %cmpBr_4a620f, label %block_.L_4a64d9, label %block_4a6215

block_4a6215:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a6215	 Bytes: 7
  %loadMem_4a6215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6215 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6215)
  store %struct.Memory* %call_4a6215, %struct.Memory** %MEMORY

  ; Code: .L_4a621c:	 RIP: 4a621c	 Bytes: 0
  br label %block_.L_4a621c
block_.L_4a621c:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a621c	 Bytes: 4
  %loadMem_4a621c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a621c = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a621c)
  store %struct.Memory* %call_4a621c, %struct.Memory** %MEMORY

  ; Code: jge .L_4a64c6	 RIP: 4a6220	 Bytes: 6
  %loadMem_4a6220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6220 = call %struct.Memory* @routine_jge_.L_4a64c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6220, i8* %BRANCH_TAKEN, i64 678, i64 6, i64 6)
  store %struct.Memory* %call_4a6220, %struct.Memory** %MEMORY

  %loadBr_4a6220 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6220 = icmp eq i8 %loadBr_4a6220, 1
  br i1 %cmpBr_4a6220, label %block_.L_4a64c6, label %block_4a6226

block_4a6226:
  ; Code: movq $0x723720, %rax	 RIP: 4a6226	 Bytes: 10
  %loadMem_4a6226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6226 = call %struct.Memory* @routine_movq__0x723720___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6226)
  store %struct.Memory* %call_4a6226, %struct.Memory** %MEMORY

  ; Code: movq $0x6d40f0, %rcx	 RIP: 4a6230	 Bytes: 10
  %loadMem_4a6230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6230 = call %struct.Memory* @routine_movq__0x6d40f0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6230)
  store %struct.Memory* %call_4a6230, %struct.Memory** %MEMORY

  ; Code: movq $0x6f6fa0, %rdx	 RIP: 4a623a	 Bytes: 10
  %loadMem_4a623a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a623a = call %struct.Memory* @routine_movq__0x6f6fa0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a623a)
  store %struct.Memory* %call_4a623a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a6244	 Bytes: 8
  %loadMem_4a6244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6244 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6244)
  store %struct.Memory* %call_4a6244, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rsi	 RIP: 4a624c	 Bytes: 7
  %loadMem_4a624c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a624c = call %struct.Memory* @routine_addq__0x1cb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a624c)
  store %struct.Memory* %call_4a624c, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdi	 RIP: 4a6253	 Bytes: 4
  %loadMem_4a6253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6253 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6253)
  store %struct.Memory* %call_4a6253, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdi	 RIP: 4a6257	 Bytes: 4
  %loadMem_4a6257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6257 = call %struct.Memory* @routine_shlq__0x7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6257)
  store %struct.Memory* %call_4a6257, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a625b	 Bytes: 3
  %loadMem_4a625b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a625b = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a625b)
  store %struct.Memory* %call_4a625b, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 4a625e	 Bytes: 4
  %loadMem_4a625e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a625e = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a625e)
  store %struct.Memory* %call_4a625e, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 4a6262	 Bytes: 4
  %loadMem_4a6262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6262 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6262)
  store %struct.Memory* %call_4a6262, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6266	 Bytes: 3
  %loadMem_4a6266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6266 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6266)
  store %struct.Memory* %call_4a6266, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4a6269	 Bytes: 4
  %loadMem_4a6269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6269 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6269)
  store %struct.Memory* %call_4a6269, %struct.Memory** %MEMORY

  ; Code: movw (%rsi,%rdi,2), %r8w	 RIP: 4a626d	 Bytes: 5
  %loadMem_4a626d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a626d = call %struct.Memory* @routine_movw___rsi__rdi_2____r8w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a626d)
  store %struct.Memory* %call_4a626d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a6272	 Bytes: 8
  %loadMem_4a6272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6272 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6272)
  store %struct.Memory* %call_4a6272, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rsi	 RIP: 4a627a	 Bytes: 7
  %loadMem_4a627a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a627a = call %struct.Memory* @routine_addq__0x3138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a627a)
  store %struct.Memory* %call_4a627a, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r9d	 RIP: 4a6281	 Bytes: 7
  %loadMem_4a6281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6281 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6281)
  store %struct.Memory* %call_4a6281, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 4a6288	 Bytes: 4
  %loadMem_4a6288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6288 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6288)
  store %struct.Memory* %call_4a6288, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a628c	 Bytes: 3
  %loadMem_4a628c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a628c = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a628c)
  store %struct.Memory* %call_4a628c, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 4a628f	 Bytes: 4
  %loadMem_4a628f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a628f = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a628f)
  store %struct.Memory* %call_4a628f, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6293	 Bytes: 3
  %loadMem_4a6293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6293 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6293)
  store %struct.Memory* %call_4a6293, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r9d	 RIP: 4a6296	 Bytes: 7
  %loadMem_4a6296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6296 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6296)
  store %struct.Memory* %call_4a6296, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 4a629d	 Bytes: 4
  %loadMem_4a629d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a629d = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a629d)
  store %struct.Memory* %call_4a629d, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a62a1	 Bytes: 3
  %loadMem_4a62a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62a1 = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62a1)
  store %struct.Memory* %call_4a62a1, %struct.Memory** %MEMORY

  ; Code: movw %r8w, (%rsi,%rdi,2)	 RIP: 4a62a4	 Bytes: 5
  %loadMem_4a62a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62a4 = call %struct.Memory* @routine_movw__r8w____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62a4)
  store %struct.Memory* %call_4a62a4, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rsi	 RIP: 4a62a9	 Bytes: 8
  %loadMem_4a62a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62a9 = call %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62a9)
  store %struct.Memory* %call_4a62a9, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 4a62b1	 Bytes: 3
  %loadMem_4a62b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62b1 = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62b1)
  store %struct.Memory* %call_4a62b1, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %r9d	 RIP: 4a62b4	 Bytes: 7
  %loadMem_4a62b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62b4 = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62b4)
  store %struct.Memory* %call_4a62b4, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 4a62bb	 Bytes: 4
  %loadMem_4a62bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62bb = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62bb)
  store %struct.Memory* %call_4a62bb, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a62bf	 Bytes: 3
  %loadMem_4a62bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62bf = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62bf)
  store %struct.Memory* %call_4a62bf, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 4a62c2	 Bytes: 4
  %loadMem_4a62c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62c2 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62c2)
  store %struct.Memory* %call_4a62c2, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %r9d	 RIP: 4a62c6	 Bytes: 7
  %loadMem_4a62c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62c6 = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62c6)
  store %struct.Memory* %call_4a62c6, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 4a62cd	 Bytes: 4
  %loadMem_4a62cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62cd = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62cd)
  store %struct.Memory* %call_4a62cd, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a62d1	 Bytes: 3
  %loadMem_4a62d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62d1 = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62d1)
  store %struct.Memory* %call_4a62d1, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 4a62d4	 Bytes: 5
  %loadMem_4a62d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62d4 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62d4)
  store %struct.Memory* %call_4a62d4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a62d9	 Bytes: 8
  %loadMem_4a62d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62d9 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62d9)
  store %struct.Memory* %call_4a62d9, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 4a62e1	 Bytes: 7
  %loadMem_4a62e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62e1 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62e1)
  store %struct.Memory* %call_4a62e1, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdi	 RIP: 4a62e8	 Bytes: 7
  %loadMem_4a62e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62e8 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62e8)
  store %struct.Memory* %call_4a62e8, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 4a62ef	 Bytes: 4
  %loadMem_4a62ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62ef = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62ef)
  store %struct.Memory* %call_4a62ef, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a62f3	 Bytes: 3
  %loadMem_4a62f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62f3 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62f3)
  store %struct.Memory* %call_4a62f3, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r10d	 RIP: 4a62f6	 Bytes: 7
  %loadMem_4a62f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62f6 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62f6)
  store %struct.Memory* %call_4a62f6, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r10d	 RIP: 4a62fd	 Bytes: 4
  %loadMem_4a62fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a62fd = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a62fd)
  store %struct.Memory* %call_4a62fd, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdi	 RIP: 4a6301	 Bytes: 3
  %loadMem_4a6301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6301 = call %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6301)
  store %struct.Memory* %call_4a6301, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 4a6304	 Bytes: 4
  %loadMem_4a6304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6304 = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6304)
  store %struct.Memory* %call_4a6304, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6308	 Bytes: 3
  %loadMem_4a6308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6308 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6308)
  store %struct.Memory* %call_4a6308, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r10d	 RIP: 4a630b	 Bytes: 7
  %loadMem_4a630b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a630b = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a630b)
  store %struct.Memory* %call_4a630b, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r10d	 RIP: 4a6312	 Bytes: 4
  %loadMem_4a6312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6312 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6312)
  store %struct.Memory* %call_4a6312, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdi	 RIP: 4a6316	 Bytes: 3
  %loadMem_4a6316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6316 = call %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6316)
  store %struct.Memory* %call_4a6316, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r10d	 RIP: 4a6319	 Bytes: 5
  %loadMem_4a6319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6319 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6319)
  store %struct.Memory* %call_4a6319, %struct.Memory** %MEMORY

  ; Code: subl %r10d, %r9d	 RIP: 4a631e	 Bytes: 3
  %loadMem_4a631e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a631e = call %struct.Memory* @routine_subl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a631e)
  store %struct.Memory* %call_4a631e, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x264(%rbp)	 RIP: 4a6321	 Bytes: 7
  %loadMem_4a6321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6321 = call %struct.Memory* @routine_movl__r9d__MINUS0x264__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6321)
  store %struct.Memory* %call_4a6321, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rsi	 RIP: 4a6328	 Bytes: 8
  %loadMem_4a6328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6328 = call %struct.Memory* @routine_movq_0x726418___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6328)
  store %struct.Memory* %call_4a6328, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %r9d	 RIP: 4a6330	 Bytes: 7
  %loadMem_4a6330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6330 = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6330)
  store %struct.Memory* %call_4a6330, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 4a6337	 Bytes: 4
  %loadMem_4a6337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6337 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6337)
  store %struct.Memory* %call_4a6337, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a633b	 Bytes: 3
  %loadMem_4a633b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a633b = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a633b)
  store %struct.Memory* %call_4a633b, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 4a633e	 Bytes: 4
  %loadMem_4a633e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a633e = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a633e)
  store %struct.Memory* %call_4a633e, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %r9d	 RIP: 4a6342	 Bytes: 7
  %loadMem_4a6342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6342 = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6342)
  store %struct.Memory* %call_4a6342, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 4a6349	 Bytes: 4
  %loadMem_4a6349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6349 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6349)
  store %struct.Memory* %call_4a6349, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a634d	 Bytes: 3
  %loadMem_4a634d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a634d = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a634d)
  store %struct.Memory* %call_4a634d, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 4a6350	 Bytes: 5
  %loadMem_4a6350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6350 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6350)
  store %struct.Memory* %call_4a6350, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a6355	 Bytes: 8
  %loadMem_4a6355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6355 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6355)
  store %struct.Memory* %call_4a6355, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rsi	 RIP: 4a635d	 Bytes: 7
  %loadMem_4a635d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a635d = call %struct.Memory* @routine_addq__0x1cb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a635d)
  store %struct.Memory* %call_4a635d, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdi	 RIP: 4a6364	 Bytes: 4
  %loadMem_4a6364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6364 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6364)
  store %struct.Memory* %call_4a6364, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdi	 RIP: 4a6368	 Bytes: 4
  %loadMem_4a6368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6368 = call %struct.Memory* @routine_shlq__0x7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6368)
  store %struct.Memory* %call_4a6368, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a636c	 Bytes: 3
  %loadMem_4a636c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a636c = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a636c)
  store %struct.Memory* %call_4a636c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 4a636f	 Bytes: 4
  %loadMem_4a636f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a636f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a636f)
  store %struct.Memory* %call_4a636f, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 4a6373	 Bytes: 4
  %loadMem_4a6373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6373 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6373)
  store %struct.Memory* %call_4a6373, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6377	 Bytes: 3
  %loadMem_4a6377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6377 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6377)
  store %struct.Memory* %call_4a6377, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4a637a	 Bytes: 4
  %loadMem_4a637a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a637a = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a637a)
  store %struct.Memory* %call_4a637a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r10d	 RIP: 4a637e	 Bytes: 5
  %loadMem_4a637e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a637e = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a637e)
  store %struct.Memory* %call_4a637e, %struct.Memory** %MEMORY

  ; Code: subl %r10d, %r9d	 RIP: 4a6383	 Bytes: 3
  %loadMem_4a6383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6383 = call %struct.Memory* @routine_subl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6383)
  store %struct.Memory* %call_4a6383, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x260(%rbp)	 RIP: 4a6386	 Bytes: 7
  %loadMem_4a6386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6386 = call %struct.Memory* @routine_movl__r9d__MINUS0x260__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6386)
  store %struct.Memory* %call_4a6386, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rsi	 RIP: 4a638d	 Bytes: 8
  %loadMem_4a638d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a638d = call %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a638d)
  store %struct.Memory* %call_4a638d, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rsi), %rsi	 RIP: 4a6395	 Bytes: 4
  %loadMem_4a6395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6395 = call %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6395)
  store %struct.Memory* %call_4a6395, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %r9d	 RIP: 4a6399	 Bytes: 7
  %loadMem_4a6399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6399 = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6399)
  store %struct.Memory* %call_4a6399, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 4a63a0	 Bytes: 4
  %loadMem_4a63a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63a0 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63a0)
  store %struct.Memory* %call_4a63a0, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a63a4	 Bytes: 3
  %loadMem_4a63a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63a4 = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63a4)
  store %struct.Memory* %call_4a63a4, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 4a63a7	 Bytes: 4
  %loadMem_4a63a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63a7 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63a7)
  store %struct.Memory* %call_4a63a7, %struct.Memory** %MEMORY

  ; Code: movl -0x1f4(%rbp), %r9d	 RIP: 4a63ab	 Bytes: 7
  %loadMem_4a63ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63ab = call %struct.Memory* @routine_movl_MINUS0x1f4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63ab)
  store %struct.Memory* %call_4a63ab, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 4a63b2	 Bytes: 4
  %loadMem_4a63b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63b2 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63b2)
  store %struct.Memory* %call_4a63b2, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a63b6	 Bytes: 3
  %loadMem_4a63b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63b6 = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63b6)
  store %struct.Memory* %call_4a63b6, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 4a63b9	 Bytes: 5
  %loadMem_4a63b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63b9 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63b9)
  store %struct.Memory* %call_4a63b9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a63be	 Bytes: 8
  %loadMem_4a63be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63be = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63be)
  store %struct.Memory* %call_4a63be, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 4a63c6	 Bytes: 7
  %loadMem_4a63c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63c6 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63c6)
  store %struct.Memory* %call_4a63c6, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rsi	 RIP: 4a63cd	 Bytes: 7
  %loadMem_4a63cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63cd = call %struct.Memory* @routine_addq__0x800___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63cd)
  store %struct.Memory* %call_4a63cd, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdi	 RIP: 4a63d4	 Bytes: 7
  %loadMem_4a63d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63d4 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63d4)
  store %struct.Memory* %call_4a63d4, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 4a63db	 Bytes: 4
  %loadMem_4a63db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63db = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63db)
  store %struct.Memory* %call_4a63db, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a63df	 Bytes: 3
  %loadMem_4a63df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63df = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63df)
  store %struct.Memory* %call_4a63df, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r10d	 RIP: 4a63e2	 Bytes: 7
  %loadMem_4a63e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63e2 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63e2)
  store %struct.Memory* %call_4a63e2, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r10d	 RIP: 4a63e9	 Bytes: 4
  %loadMem_4a63e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63e9 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63e9)
  store %struct.Memory* %call_4a63e9, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdi	 RIP: 4a63ed	 Bytes: 3
  %loadMem_4a63ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63ed = call %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63ed)
  store %struct.Memory* %call_4a63ed, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 4a63f0	 Bytes: 4
  %loadMem_4a63f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63f0 = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63f0)
  store %struct.Memory* %call_4a63f0, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a63f4	 Bytes: 3
  %loadMem_4a63f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63f4 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63f4)
  store %struct.Memory* %call_4a63f4, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r10d	 RIP: 4a63f7	 Bytes: 7
  %loadMem_4a63f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63f7 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63f7)
  store %struct.Memory* %call_4a63f7, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r10d	 RIP: 4a63fe	 Bytes: 4
  %loadMem_4a63fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a63fe = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a63fe)
  store %struct.Memory* %call_4a63fe, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdi	 RIP: 4a6402	 Bytes: 3
  %loadMem_4a6402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6402 = call %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6402)
  store %struct.Memory* %call_4a6402, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r10d	 RIP: 4a6405	 Bytes: 5
  %loadMem_4a6405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6405 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6405)
  store %struct.Memory* %call_4a6405, %struct.Memory** %MEMORY

  ; Code: subl %r10d, %r9d	 RIP: 4a640a	 Bytes: 3
  %loadMem_4a640a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a640a = call %struct.Memory* @routine_subl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a640a)
  store %struct.Memory* %call_4a640a, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x25c(%rbp)	 RIP: 4a640d	 Bytes: 7
  %loadMem_4a640d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a640d = call %struct.Memory* @routine_movl__r9d__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a640d)
  store %struct.Memory* %call_4a640d, %struct.Memory** %MEMORY

  ; Code: movl -0x25c(%rbp), %r9d	 RIP: 4a6414	 Bytes: 7
  %loadMem_4a6414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6414 = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6414)
  store %struct.Memory* %call_4a6414, %struct.Memory** %MEMORY

  ; Code: subl -0x264(%rbp), %r9d	 RIP: 4a641b	 Bytes: 7
  %loadMem_4a641b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a641b = call %struct.Memory* @routine_subl_MINUS0x264__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a641b)
  store %struct.Memory* %call_4a641b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a6422	 Bytes: 4
  %loadMem_4a6422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6422 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6422)
  store %struct.Memory* %call_4a6422, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a6426	 Bytes: 4
  %loadMem_4a6426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6426 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6426)
  store %struct.Memory* %call_4a6426, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 4a642a	 Bytes: 3
  %loadMem_4a642a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a642a = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a642a)
  store %struct.Memory* %call_4a642a, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 4a642d	 Bytes: 3
  %loadMem_4a642d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a642d = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a642d)
  store %struct.Memory* %call_4a642d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a6430	 Bytes: 4
  %loadMem_4a6430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6430 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6430)
  store %struct.Memory* %call_4a6430, %struct.Memory** %MEMORY

  ; Code: movl %r9d, (%rdi,%rsi,4)	 RIP: 4a6434	 Bytes: 4
  %loadMem_4a6434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6434 = call %struct.Memory* @routine_movl__r9d____rdi__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6434)
  store %struct.Memory* %call_4a6434, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %r9d	 RIP: 4a6438	 Bytes: 7
  %loadMem_4a6438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6438 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6438)
  store %struct.Memory* %call_4a6438, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a643f	 Bytes: 4
  %loadMem_4a643f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a643f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a643f)
  store %struct.Memory* %call_4a643f, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a6443	 Bytes: 4
  %loadMem_4a6443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6443 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6443)
  store %struct.Memory* %call_4a6443, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a6447	 Bytes: 3
  %loadMem_4a6447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6447 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6447)
  store %struct.Memory* %call_4a6447, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a644a	 Bytes: 4
  %loadMem_4a644a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a644a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a644a)
  store %struct.Memory* %call_4a644a, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %r10d	 RIP: 4a644e	 Bytes: 4
  %loadMem_4a644e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a644e = call %struct.Memory* @routine_movl___rdx__rsi_4____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a644e)
  store %struct.Memory* %call_4a644e, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r10d	 RIP: 4a6452	 Bytes: 4
  %loadMem_4a6452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6452 = call %struct.Memory* @routine_sarl__0x1___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6452)
  store %struct.Memory* %call_4a6452, %struct.Memory** %MEMORY

  ; Code: addl %r10d, %r9d	 RIP: 4a6456	 Bytes: 3
  %loadMem_4a6456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6456 = call %struct.Memory* @routine_addl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6456)
  store %struct.Memory* %call_4a6456, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x270(%rbp)	 RIP: 4a6459	 Bytes: 7
  %loadMem_4a6459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6459 = call %struct.Memory* @routine_movl__r9d__MINUS0x270__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6459)
  store %struct.Memory* %call_4a6459, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %r9d	 RIP: 4a6460	 Bytes: 7
  %loadMem_4a6460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6460 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6460)
  store %struct.Memory* %call_4a6460, %struct.Memory** %MEMORY

  ; Code: subl -0x270(%rbp), %r9d	 RIP: 4a6467	 Bytes: 7
  %loadMem_4a6467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6467 = call %struct.Memory* @routine_subl_MINUS0x270__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6467)
  store %struct.Memory* %call_4a6467, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a646e	 Bytes: 4
  %loadMem_4a646e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a646e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a646e)
  store %struct.Memory* %call_4a646e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a6472	 Bytes: 4
  %loadMem_4a6472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6472 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6472)
  store %struct.Memory* %call_4a6472, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 4a6476	 Bytes: 3
  %loadMem_4a6476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6476 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6476)
  store %struct.Memory* %call_4a6476, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4a6479	 Bytes: 3
  %loadMem_4a6479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6479 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6479)
  store %struct.Memory* %call_4a6479, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a647c	 Bytes: 4
  %loadMem_4a647c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a647c = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a647c)
  store %struct.Memory* %call_4a647c, %struct.Memory** %MEMORY

  ; Code: movl %r9d, (%rsi,%rdx,4)	 RIP: 4a6480	 Bytes: 4
  %loadMem_4a6480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6480 = call %struct.Memory* @routine_movl__r9d____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6480)
  store %struct.Memory* %call_4a6480, %struct.Memory** %MEMORY

  ; Code: movl -0x270(%rbp), %r9d	 RIP: 4a6484	 Bytes: 7
  %loadMem_4a6484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6484 = call %struct.Memory* @routine_movl_MINUS0x270__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6484)
  store %struct.Memory* %call_4a6484, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a648b	 Bytes: 4
  %loadMem_4a648b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a648b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a648b)
  store %struct.Memory* %call_4a648b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a648f	 Bytes: 4
  %loadMem_4a648f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a648f = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a648f)
  store %struct.Memory* %call_4a648f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6493	 Bytes: 3
  %loadMem_4a6493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6493 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6493)
  store %struct.Memory* %call_4a6493, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a6496	 Bytes: 4
  %loadMem_4a6496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6496 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6496)
  store %struct.Memory* %call_4a6496, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %r10d	 RIP: 4a649a	 Bytes: 4
  %loadMem_4a649a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a649a = call %struct.Memory* @routine_movl___rcx__rdx_4____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a649a)
  store %struct.Memory* %call_4a649a, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r10d	 RIP: 4a649e	 Bytes: 4
  %loadMem_4a649e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a649e = call %struct.Memory* @routine_sarl__0x1___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a649e)
  store %struct.Memory* %call_4a649e, %struct.Memory** %MEMORY

  ; Code: addl %r10d, %r9d	 RIP: 4a64a2	 Bytes: 3
  %loadMem_4a64a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64a2 = call %struct.Memory* @routine_addl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64a2)
  store %struct.Memory* %call_4a64a2, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a64a5	 Bytes: 4
  %loadMem_4a64a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64a5 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64a5)
  store %struct.Memory* %call_4a64a5, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a64a9	 Bytes: 4
  %loadMem_4a64a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64a9 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64a9)
  store %struct.Memory* %call_4a64a9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a64ad	 Bytes: 3
  %loadMem_4a64ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64ad = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64ad)
  store %struct.Memory* %call_4a64ad, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a64b0	 Bytes: 4
  %loadMem_4a64b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64b0 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64b0)
  store %struct.Memory* %call_4a64b0, %struct.Memory** %MEMORY

  ; Code: movl %r9d, (%rax,%rcx,4)	 RIP: 4a64b4	 Bytes: 4
  %loadMem_4a64b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64b4 = call %struct.Memory* @routine_movl__r9d____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64b4)
  store %struct.Memory* %call_4a64b4, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a64b8	 Bytes: 3
  %loadMem_4a64b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64b8 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64b8)
  store %struct.Memory* %call_4a64b8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a64bb	 Bytes: 3
  %loadMem_4a64bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64bb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64bb)
  store %struct.Memory* %call_4a64bb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a64be	 Bytes: 3
  %loadMem_4a64be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64be = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64be)
  store %struct.Memory* %call_4a64be, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a621c	 RIP: 4a64c1	 Bytes: 5
  %loadMem_4a64c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64c1 = call %struct.Memory* @routine_jmpq_.L_4a621c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64c1, i64 -677, i64 5)
  store %struct.Memory* %call_4a64c1, %struct.Memory** %MEMORY

  br label %block_.L_4a621c

  ; Code: .L_4a64c6:	 RIP: 4a64c6	 Bytes: 0
block_.L_4a64c6:

  ; Code: jmpq .L_4a64cb	 RIP: 4a64c6	 Bytes: 5
  %loadMem_4a64c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64c6 = call %struct.Memory* @routine_jmpq_.L_4a64cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64c6, i64 5, i64 5)
  store %struct.Memory* %call_4a64c6, %struct.Memory** %MEMORY

  br label %block_.L_4a64cb

  ; Code: .L_4a64cb:	 RIP: 4a64cb	 Bytes: 0
block_.L_4a64cb:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a64cb	 Bytes: 3
  %loadMem_4a64cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64cb = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64cb)
  store %struct.Memory* %call_4a64cb, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a64ce	 Bytes: 3
  %loadMem_4a64ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64ce = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64ce)
  store %struct.Memory* %call_4a64ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a64d1	 Bytes: 3
  %loadMem_4a64d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64d1 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64d1)
  store %struct.Memory* %call_4a64d1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a620b	 RIP: 4a64d4	 Bytes: 5
  %loadMem_4a64d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64d4 = call %struct.Memory* @routine_jmpq_.L_4a620b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64d4, i64 -713, i64 5)
  store %struct.Memory* %call_4a64d4, %struct.Memory** %MEMORY

  br label %block_.L_4a620b

  ; Code: .L_4a64d9:	 RIP: 4a64d9	 Bytes: 0
block_.L_4a64d9:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a64d9	 Bytes: 7
  %loadMem_4a64d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64d9 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64d9)
  store %struct.Memory* %call_4a64d9, %struct.Memory** %MEMORY

  ; Code: .L_4a64e0:	 RIP: 4a64e0	 Bytes: 0
  br label %block_.L_4a64e0
block_.L_4a64e0:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a64e0	 Bytes: 4
  %loadMem_4a64e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64e0 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64e0)
  store %struct.Memory* %call_4a64e0, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6558	 RIP: 4a64e4	 Bytes: 6
  %loadMem_4a64e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64e4 = call %struct.Memory* @routine_jge_.L_4a6558(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64e4, i8* %BRANCH_TAKEN, i64 116, i64 6, i64 6)
  store %struct.Memory* %call_4a64e4, %struct.Memory** %MEMORY

  %loadBr_4a64e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a64e4 = icmp eq i8 %loadBr_4a64e4, 1
  br i1 %cmpBr_4a64e4, label %block_.L_4a6558, label %block_4a64ea

block_4a64ea:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a64ea	 Bytes: 7
  %loadMem_4a64ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64ea = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64ea)
  store %struct.Memory* %call_4a64ea, %struct.Memory** %MEMORY

  ; Code: .L_4a64f1:	 RIP: 4a64f1	 Bytes: 0
  br label %block_.L_4a64f1
block_.L_4a64f1:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a64f1	 Bytes: 4
  %loadMem_4a64f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64f1 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64f1)
  store %struct.Memory* %call_4a64f1, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6545	 RIP: 4a64f5	 Bytes: 6
  %loadMem_4a64f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64f5 = call %struct.Memory* @routine_jge_.L_4a6545(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64f5, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_4a64f5, %struct.Memory** %MEMORY

  %loadBr_4a64f5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a64f5 = icmp eq i8 %loadBr_4a64f5, 1
  br i1 %cmpBr_4a64f5, label %block_.L_4a6545, label %block_4a64fb

block_4a64fb:
  ; Code: movq $0x723720, %rax	 RIP: 4a64fb	 Bytes: 10
  %loadMem_4a64fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a64fb = call %struct.Memory* @routine_movq__0x723720___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a64fb)
  store %struct.Memory* %call_4a64fb, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a6505	 Bytes: 4
  %loadMem_4a6505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6505 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6505)
  store %struct.Memory* %call_4a6505, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a6509	 Bytes: 4
  %loadMem_4a6509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6509 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6509)
  store %struct.Memory* %call_4a6509, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a650d	 Bytes: 3
  %loadMem_4a650d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a650d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a650d)
  store %struct.Memory* %call_4a650d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a6510	 Bytes: 4
  %loadMem_4a6510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6510 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6510)
  store %struct.Memory* %call_4a6510, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a6514	 Bytes: 3
  %loadMem_4a6514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6514 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6514)
  store %struct.Memory* %call_4a6514, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a6517	 Bytes: 8
  %loadMem_4a6517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6517 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6517)
  store %struct.Memory* %call_4a6517, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4a651f	 Bytes: 6
  %loadMem_4a651f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a651f = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a651f)
  store %struct.Memory* %call_4a651f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a6525	 Bytes: 4
  %loadMem_4a6525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6525 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6525)
  store %struct.Memory* %call_4a6525, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a6529	 Bytes: 4
  %loadMem_4a6529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6529 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6529)
  store %struct.Memory* %call_4a6529, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a652d	 Bytes: 3
  %loadMem_4a652d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a652d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a652d)
  store %struct.Memory* %call_4a652d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a6530	 Bytes: 4
  %loadMem_4a6530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6530 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6530)
  store %struct.Memory* %call_4a6530, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a6534	 Bytes: 3
  %loadMem_4a6534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6534 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6534)
  store %struct.Memory* %call_4a6534, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a6537	 Bytes: 3
  %loadMem_4a6537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6537 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6537)
  store %struct.Memory* %call_4a6537, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a653a	 Bytes: 3
  %loadMem_4a653a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a653a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a653a)
  store %struct.Memory* %call_4a653a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a653d	 Bytes: 3
  %loadMem_4a653d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a653d = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a653d)
  store %struct.Memory* %call_4a653d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a64f1	 RIP: 4a6540	 Bytes: 5
  %loadMem_4a6540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6540 = call %struct.Memory* @routine_jmpq_.L_4a64f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6540, i64 -79, i64 5)
  store %struct.Memory* %call_4a6540, %struct.Memory** %MEMORY

  br label %block_.L_4a64f1

  ; Code: .L_4a6545:	 RIP: 4a6545	 Bytes: 0
block_.L_4a6545:

  ; Code: jmpq .L_4a654a	 RIP: 4a6545	 Bytes: 5
  %loadMem_4a6545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6545 = call %struct.Memory* @routine_jmpq_.L_4a654a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6545, i64 5, i64 5)
  store %struct.Memory* %call_4a6545, %struct.Memory** %MEMORY

  br label %block_.L_4a654a

  ; Code: .L_4a654a:	 RIP: 4a654a	 Bytes: 0
block_.L_4a654a:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a654a	 Bytes: 3
  %loadMem_4a654a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a654a = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a654a)
  store %struct.Memory* %call_4a654a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a654d	 Bytes: 3
  %loadMem_4a654d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a654d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a654d)
  store %struct.Memory* %call_4a654d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a6550	 Bytes: 3
  %loadMem_4a6550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6550 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6550)
  store %struct.Memory* %call_4a6550, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a64e0	 RIP: 4a6553	 Bytes: 5
  %loadMem_4a6553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6553 = call %struct.Memory* @routine_jmpq_.L_4a64e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6553, i64 -115, i64 5)
  store %struct.Memory* %call_4a6553, %struct.Memory** %MEMORY

  br label %block_.L_4a64e0

  ; Code: .L_4a6558:	 RIP: 4a6558	 Bytes: 0
block_.L_4a6558:

  ; Code: leaq -0x44(%rbp), %rsi	 RIP: 4a6558	 Bytes: 4
  %loadMem_4a6558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6558 = call %struct.Memory* @routine_leaq_MINUS0x44__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6558)
  store %struct.Memory* %call_4a6558, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 4a655c	 Bytes: 5
  %loadMem_4a655c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a655c = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a655c)
  store %struct.Memory* %call_4a655c, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edi	 RIP: 4a6561	 Bytes: 3
  %loadMem_4a6561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6561 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6561)
  store %struct.Memory* %call_4a6561, %struct.Memory** %MEMORY

  ; Code: callq .dct_luma8x8	 RIP: 4a6564	 Bytes: 5
  %loadMem1_4a6564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a6564 = call %struct.Memory* @routine_callq_.dct_luma8x8(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a6564, i64 16860, i64 5, i64 5)
  store %struct.Memory* %call1_4a6564, %struct.Memory** %MEMORY

  %loadMem2_4a6564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a6564 = load i64, i64* %3
  %call2_4a6564 = call %struct.Memory* @sub_4aa740.dct_luma8x8(%struct.State* %0, i64  %loadPC_4a6564, %struct.Memory* %loadMem2_4a6564)
  store %struct.Memory* %call2_4a6564, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 4a6569	 Bytes: 3
  %loadMem_4a6569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6569 = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6569)
  store %struct.Memory* %call_4a6569, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a656c	 Bytes: 7
  %loadMem_4a656c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a656c = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a656c)
  store %struct.Memory* %call_4a656c, %struct.Memory** %MEMORY

  ; Code: .L_4a6573:	 RIP: 4a6573	 Bytes: 0
  br label %block_.L_4a6573
block_.L_4a6573:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a6573	 Bytes: 4
  %loadMem_4a6573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6573 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6573)
  store %struct.Memory* %call_4a6573, %struct.Memory** %MEMORY

  ; Code: jge .L_4a65ec	 RIP: 4a6577	 Bytes: 6
  %loadMem_4a6577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6577 = call %struct.Memory* @routine_jge_.L_4a65ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6577, i8* %BRANCH_TAKEN, i64 117, i64 6, i64 6)
  store %struct.Memory* %call_4a6577, %struct.Memory** %MEMORY

  %loadBr_4a6577 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6577 = icmp eq i8 %loadBr_4a6577, 1
  br i1 %cmpBr_4a6577, label %block_.L_4a65ec, label %block_4a657d

block_4a657d:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a657d	 Bytes: 7
  %loadMem_4a657d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a657d = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a657d)
  store %struct.Memory* %call_4a657d, %struct.Memory** %MEMORY

  ; Code: .L_4a6584:	 RIP: 4a6584	 Bytes: 0
  br label %block_.L_4a6584
block_.L_4a6584:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a6584	 Bytes: 4
  %loadMem_4a6584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6584 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6584)
  store %struct.Memory* %call_4a6584, %struct.Memory** %MEMORY

  ; Code: jge .L_4a65d9	 RIP: 4a6588	 Bytes: 6
  %loadMem_4a6588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6588 = call %struct.Memory* @routine_jge_.L_4a65d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6588, i8* %BRANCH_TAKEN, i64 81, i64 6, i64 6)
  store %struct.Memory* %call_4a6588, %struct.Memory** %MEMORY

  %loadBr_4a6588 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6588 = icmp eq i8 %loadBr_4a6588, 1
  br i1 %cmpBr_4a6588, label %block_.L_4a65d9, label %block_4a658e

block_4a658e:
  ; Code: movq $0x722ff0, %rax	 RIP: 4a658e	 Bytes: 10
  %loadMem_4a658e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a658e = call %struct.Memory* @routine_movq__0x722ff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a658e)
  store %struct.Memory* %call_4a658e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a6598	 Bytes: 8
  %loadMem_4a6598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6598 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6598)
  store %struct.Memory* %call_4a6598, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 4a65a0	 Bytes: 7
  %loadMem_4a65a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65a0 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65a0)
  store %struct.Memory* %call_4a65a0, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a65a7	 Bytes: 4
  %loadMem_4a65a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65a7 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65a7)
  store %struct.Memory* %call_4a65a7, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a65ab	 Bytes: 4
  %loadMem_4a65ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65ab = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65ab)
  store %struct.Memory* %call_4a65ab, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a65af	 Bytes: 3
  %loadMem_4a65af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65af = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65af)
  store %struct.Memory* %call_4a65af, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a65b2	 Bytes: 4
  %loadMem_4a65b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65b2 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65b2)
  store %struct.Memory* %call_4a65b2, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 4a65b6	 Bytes: 3
  %loadMem_4a65b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65b6 = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65b6)
  store %struct.Memory* %call_4a65b6, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a65b9	 Bytes: 4
  %loadMem_4a65b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65b9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65b9)
  store %struct.Memory* %call_4a65b9, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a65bd	 Bytes: 4
  %loadMem_4a65bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65bd = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65bd)
  store %struct.Memory* %call_4a65bd, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a65c1	 Bytes: 3
  %loadMem_4a65c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65c1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65c1)
  store %struct.Memory* %call_4a65c1, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a65c4	 Bytes: 4
  %loadMem_4a65c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65c4 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65c4)
  store %struct.Memory* %call_4a65c4, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4a65c8	 Bytes: 3
  %loadMem_4a65c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65c8 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65c8)
  store %struct.Memory* %call_4a65c8, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a65cb	 Bytes: 3
  %loadMem_4a65cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65cb = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65cb)
  store %struct.Memory* %call_4a65cb, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a65ce	 Bytes: 3
  %loadMem_4a65ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65ce = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65ce)
  store %struct.Memory* %call_4a65ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a65d1	 Bytes: 3
  %loadMem_4a65d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65d1 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65d1)
  store %struct.Memory* %call_4a65d1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6584	 RIP: 4a65d4	 Bytes: 5
  %loadMem_4a65d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65d4 = call %struct.Memory* @routine_jmpq_.L_4a6584(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65d4, i64 -80, i64 5)
  store %struct.Memory* %call_4a65d4, %struct.Memory** %MEMORY

  br label %block_.L_4a6584

  ; Code: .L_4a65d9:	 RIP: 4a65d9	 Bytes: 0
block_.L_4a65d9:

  ; Code: jmpq .L_4a65de	 RIP: 4a65d9	 Bytes: 5
  %loadMem_4a65d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65d9 = call %struct.Memory* @routine_jmpq_.L_4a65de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65d9, i64 5, i64 5)
  store %struct.Memory* %call_4a65d9, %struct.Memory** %MEMORY

  br label %block_.L_4a65de

  ; Code: .L_4a65de:	 RIP: 4a65de	 Bytes: 0
block_.L_4a65de:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a65de	 Bytes: 3
  %loadMem_4a65de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65de = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65de)
  store %struct.Memory* %call_4a65de, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a65e1	 Bytes: 3
  %loadMem_4a65e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65e1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65e1)
  store %struct.Memory* %call_4a65e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a65e4	 Bytes: 3
  %loadMem_4a65e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65e4 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65e4)
  store %struct.Memory* %call_4a65e4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6573	 RIP: 4a65e7	 Bytes: 5
  %loadMem_4a65e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65e7 = call %struct.Memory* @routine_jmpq_.L_4a6573(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65e7, i64 -116, i64 5)
  store %struct.Memory* %call_4a65e7, %struct.Memory** %MEMORY

  br label %block_.L_4a6573

  ; Code: .L_4a65ec:	 RIP: 4a65ec	 Bytes: 0
block_.L_4a65ec:

  ; Code: movl $0x0, -0x274(%rbp)	 RIP: 4a65ec	 Bytes: 10
  %loadMem_4a65ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65ec = call %struct.Memory* @routine_movl__0x0__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65ec)
  store %struct.Memory* %call_4a65ec, %struct.Memory** %MEMORY

  ; Code: .L_4a65f6:	 RIP: 4a65f6	 Bytes: 0
  br label %block_.L_4a65f6
block_.L_4a65f6:

  ; Code: cmpl $0x4, -0x274(%rbp)	 RIP: 4a65f6	 Bytes: 7
  %loadMem_4a65f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65f6 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65f6)
  store %struct.Memory* %call_4a65f6, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6b2d	 RIP: 4a65fd	 Bytes: 6
  %loadMem_4a65fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a65fd = call %struct.Memory* @routine_jge_.L_4a6b2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a65fd, i8* %BRANCH_TAKEN, i64 1328, i64 6, i64 6)
  store %struct.Memory* %call_4a65fd, %struct.Memory** %MEMORY

  %loadBr_4a65fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a65fd = icmp eq i8 %loadBr_4a65fd, 1
  br i1 %cmpBr_4a65fd, label %block_.L_4a6b2d, label %block_4a6603

block_4a6603:
  ; Code: movl $0x2, %eax	 RIP: 4a6603	 Bytes: 5
  %loadMem_4a6603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6603 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6603)
  store %struct.Memory* %call_4a6603, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %ecx	 RIP: 4a6608	 Bytes: 6
  %loadMem_4a6608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6608 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6608)
  store %struct.Memory* %call_4a6608, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x550(%rbp)	 RIP: 4a660e	 Bytes: 6
  %loadMem_4a660e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a660e = call %struct.Memory* @routine_movl__eax__MINUS0x550__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a660e)
  store %struct.Memory* %call_4a660e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4a6614	 Bytes: 2
  %loadMem_4a6614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6614 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6614)
  store %struct.Memory* %call_4a6614, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6616	 Bytes: 1
  %loadMem_4a6616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6616 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6616)
  store %struct.Memory* %call_4a6616, %struct.Memory** %MEMORY

  ; Code: movl -0x550(%rbp), %ecx	 RIP: 4a6617	 Bytes: 6
  %loadMem_4a6617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6617 = call %struct.Memory* @routine_movl_MINUS0x550__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6617)
  store %struct.Memory* %call_4a6617, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a661d	 Bytes: 2
  %loadMem_4a661d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a661d = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a661d)
  store %struct.Memory* %call_4a661d, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %edx	 RIP: 4a661f	 Bytes: 3
  %loadMem_4a661f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a661f = call %struct.Memory* @routine_shll__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a661f)
  store %struct.Memory* %call_4a661f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1dc(%rbp)	 RIP: 4a6622	 Bytes: 6
  %loadMem_4a6622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6622 = call %struct.Memory* @routine_movl__edx__MINUS0x1dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6622)
  store %struct.Memory* %call_4a6622, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edx	 RIP: 4a6628	 Bytes: 6
  %loadMem_4a6628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6628 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6628)
  store %struct.Memory* %call_4a6628, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a662e	 Bytes: 2
  %loadMem_4a662e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a662e = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a662e)
  store %struct.Memory* %call_4a662e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6630	 Bytes: 1
  %loadMem_4a6630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6630 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6630)
  store %struct.Memory* %call_4a6630, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a6631	 Bytes: 2
  %loadMem_4a6631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6631 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6631)
  store %struct.Memory* %call_4a6631, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 4a6633	 Bytes: 3
  %loadMem_4a6633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6633 = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6633)
  store %struct.Memory* %call_4a6633, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e0(%rbp)	 RIP: 4a6636	 Bytes: 6
  %loadMem_4a6636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6636 = call %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6636)
  store %struct.Memory* %call_4a6636, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a663c	 Bytes: 7
  %loadMem_4a663c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a663c = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a663c)
  store %struct.Memory* %call_4a663c, %struct.Memory** %MEMORY

  ; Code: .L_4a6643:	 RIP: 4a6643	 Bytes: 0
  br label %block_.L_4a6643
block_.L_4a6643:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4a6643	 Bytes: 4
  %loadMem_4a6643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6643 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6643)
  store %struct.Memory* %call_4a6643, %struct.Memory** %MEMORY

  ; Code: jge .L_4a66cb	 RIP: 4a6647	 Bytes: 6
  %loadMem_4a6647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6647 = call %struct.Memory* @routine_jge_.L_4a66cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6647, i8* %BRANCH_TAKEN, i64 132, i64 6, i64 6)
  store %struct.Memory* %call_4a6647, %struct.Memory** %MEMORY

  %loadBr_4a6647 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6647 = icmp eq i8 %loadBr_4a6647, 1
  br i1 %cmpBr_4a6647, label %block_.L_4a66cb, label %block_4a664d

block_4a664d:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a664d	 Bytes: 7
  %loadMem_4a664d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a664d = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a664d)
  store %struct.Memory* %call_4a664d, %struct.Memory** %MEMORY

  ; Code: .L_4a6654:	 RIP: 4a6654	 Bytes: 0
  br label %block_.L_4a6654
block_.L_4a6654:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4a6654	 Bytes: 4
  %loadMem_4a6654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6654 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6654)
  store %struct.Memory* %call_4a6654, %struct.Memory** %MEMORY

  ; Code: jge .L_4a66b8	 RIP: 4a6658	 Bytes: 6
  %loadMem_4a6658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6658 = call %struct.Memory* @routine_jge_.L_4a66b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6658, i8* %BRANCH_TAKEN, i64 96, i64 6, i64 6)
  store %struct.Memory* %call_4a6658, %struct.Memory** %MEMORY

  %loadBr_4a6658 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6658 = icmp eq i8 %loadBr_4a6658, 1
  br i1 %cmpBr_4a6658, label %block_.L_4a66b8, label %block_4a665e

block_4a665e:
  ; Code: movq $0x6f6fa0, %rax	 RIP: 4a665e	 Bytes: 10
  %loadMem_4a665e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a665e = call %struct.Memory* @routine_movq__0x6f6fa0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a665e)
  store %struct.Memory* %call_4a665e, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 4a6668	 Bytes: 3
  %loadMem_4a6668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6668 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6668)
  store %struct.Memory* %call_4a6668, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %ecx	 RIP: 4a666b	 Bytes: 6
  %loadMem_4a666b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a666b = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a666b)
  store %struct.Memory* %call_4a666b, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a6671	 Bytes: 3
  %loadMem_4a6671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6671 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6671)
  store %struct.Memory* %call_4a6671, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a6674	 Bytes: 4
  %loadMem_4a6674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6674 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6674)
  store %struct.Memory* %call_4a6674, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4a6678	 Bytes: 3
  %loadMem_4a6678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6678 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6678)
  store %struct.Memory* %call_4a6678, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %ecx	 RIP: 4a667b	 Bytes: 3
  %loadMem_4a667b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a667b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a667b)
  store %struct.Memory* %call_4a667b, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %ecx	 RIP: 4a667e	 Bytes: 6
  %loadMem_4a667e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a667e = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a667e)
  store %struct.Memory* %call_4a667e, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4a6684	 Bytes: 3
  %loadMem_4a6684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6684 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6684)
  store %struct.Memory* %call_4a6684, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rdx,4), %ecx	 RIP: 4a6687	 Bytes: 3
  %loadMem_4a6687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6687 = call %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6687)
  store %struct.Memory* %call_4a6687, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a668a	 Bytes: 8
  %loadMem_4a668a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a668a = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a668a)
  store %struct.Memory* %call_4a668a, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4a6692	 Bytes: 6
  %loadMem_4a6692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6692 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6692)
  store %struct.Memory* %call_4a6692, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a6698	 Bytes: 4
  %loadMem_4a6698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6698 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6698)
  store %struct.Memory* %call_4a6698, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a669c	 Bytes: 4
  %loadMem_4a669c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a669c = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a669c)
  store %struct.Memory* %call_4a669c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4a66a0	 Bytes: 3
  %loadMem_4a66a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66a0 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66a0)
  store %struct.Memory* %call_4a66a0, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a66a3	 Bytes: 4
  %loadMem_4a66a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66a3 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66a3)
  store %struct.Memory* %call_4a66a3, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax,%rdx,4)	 RIP: 4a66a7	 Bytes: 3
  %loadMem_4a66a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66a7 = call %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66a7)
  store %struct.Memory* %call_4a66a7, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a66aa	 Bytes: 3
  %loadMem_4a66aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66aa = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66aa)
  store %struct.Memory* %call_4a66aa, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a66ad	 Bytes: 3
  %loadMem_4a66ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66ad = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66ad)
  store %struct.Memory* %call_4a66ad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a66b0	 Bytes: 3
  %loadMem_4a66b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66b0 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66b0)
  store %struct.Memory* %call_4a66b0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6654	 RIP: 4a66b3	 Bytes: 5
  %loadMem_4a66b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66b3 = call %struct.Memory* @routine_jmpq_.L_4a6654(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66b3, i64 -95, i64 5)
  store %struct.Memory* %call_4a66b3, %struct.Memory** %MEMORY

  br label %block_.L_4a6654

  ; Code: .L_4a66b8:	 RIP: 4a66b8	 Bytes: 0
block_.L_4a66b8:

  ; Code: jmpq .L_4a66bd	 RIP: 4a66b8	 Bytes: 5
  %loadMem_4a66b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66b8 = call %struct.Memory* @routine_jmpq_.L_4a66bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66b8, i64 5, i64 5)
  store %struct.Memory* %call_4a66b8, %struct.Memory** %MEMORY

  br label %block_.L_4a66bd

  ; Code: .L_4a66bd:	 RIP: 4a66bd	 Bytes: 0
block_.L_4a66bd:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a66bd	 Bytes: 3
  %loadMem_4a66bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66bd = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66bd)
  store %struct.Memory* %call_4a66bd, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a66c0	 Bytes: 3
  %loadMem_4a66c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66c0 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66c0)
  store %struct.Memory* %call_4a66c0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a66c3	 Bytes: 3
  %loadMem_4a66c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66c3 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66c3)
  store %struct.Memory* %call_4a66c3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6643	 RIP: 4a66c6	 Bytes: 5
  %loadMem_4a66c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66c6 = call %struct.Memory* @routine_jmpq_.L_4a6643(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66c6, i64 -131, i64 5)
  store %struct.Memory* %call_4a66c6, %struct.Memory** %MEMORY

  br label %block_.L_4a6643

  ; Code: .L_4a66cb:	 RIP: 4a66cb	 Bytes: 0
block_.L_4a66cb:

  ; Code: xorl %edi, %edi	 RIP: 4a66cb	 Bytes: 2
  %loadMem_4a66cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66cb = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66cb)
  store %struct.Memory* %call_4a66cb, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4a66cd	 Bytes: 3
  %loadMem_4a66cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66cd = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66cd)
  store %struct.Memory* %call_4a66cd, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 4a66d0	 Bytes: 3
  %loadMem_4a66d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66d0 = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66d0)
  store %struct.Memory* %call_4a66d0, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edx	 RIP: 4a66d3	 Bytes: 6
  %loadMem_4a66d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66d3 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66d3)
  store %struct.Memory* %call_4a66d3, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 4a66d9	 Bytes: 2
  %loadMem_4a66d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66d9 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66d9)
  store %struct.Memory* %call_4a66d9, %struct.Memory** %MEMORY

  ; Code: callq .dct_chroma4x4	 RIP: 4a66db	 Bytes: 5
  %loadMem1_4a66db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a66db = call %struct.Memory* @routine_callq_.dct_chroma4x4(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a66db, i64 -637467, i64 5, i64 5)
  store %struct.Memory* %call1_4a66db, %struct.Memory** %MEMORY

  %loadMem2_4a66db = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a66db = load i64, i64* %3
  %call2_4a66db = call %struct.Memory* @sub_40acc0.dct_chroma4x4(%struct.State* %0, i64  %loadPC_4a66db, %struct.Memory* %loadMem2_4a66db)
  store %struct.Memory* %call2_4a66db, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edx	 RIP: 4a66e0	 Bytes: 5
  %loadMem_4a66e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66e0 = call %struct.Memory* @routine_movl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66e0)
  store %struct.Memory* %call_4a66e0, %struct.Memory** %MEMORY

  ; Code: movq $0x7107b0, %rcx	 RIP: 4a66e5	 Bytes: 10
  %loadMem_4a66e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66e5 = call %struct.Memory* @routine_movq__0x7107b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66e5)
  store %struct.Memory* %call_4a66e5, %struct.Memory** %MEMORY

  ; Code: movq $0x6d4600, %r8	 RIP: 4a66ef	 Bytes: 10
  %loadMem_4a66ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66ef = call %struct.Memory* @routine_movq__0x6d4600___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66ef)
  store %struct.Memory* %call_4a66ef, %struct.Memory** %MEMORY

  ; Code: movq $0x6d0920, %r9	 RIP: 4a66f9	 Bytes: 10
  %loadMem_4a66f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a66f9 = call %struct.Memory* @routine_movq__0x6d0920___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a66f9)
  store %struct.Memory* %call_4a66f9, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4a6703	 Bytes: 3
  %loadMem_4a6703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6703 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6703)
  store %struct.Memory* %call_4a6703, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x554(%rbp)	 RIP: 4a6706	 Bytes: 6
  %loadMem_4a6706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6706 = call %struct.Memory* @routine_movl__eax__MINUS0x554__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6706)
  store %struct.Memory* %call_4a6706, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 4a670c	 Bytes: 2
  %loadMem_4a670c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a670c = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a670c)
  store %struct.Memory* %call_4a670c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x558(%rbp)	 RIP: 4a670e	 Bytes: 6
  %loadMem_4a670e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a670e = call %struct.Memory* @routine_movl__edx__MINUS0x558__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a670e)
  store %struct.Memory* %call_4a670e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6714	 Bytes: 1
  %loadMem_4a6714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6714 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6714)
  store %struct.Memory* %call_4a6714, %struct.Memory** %MEMORY

  ; Code: movl -0x558(%rbp), %esi	 RIP: 4a6715	 Bytes: 6
  %loadMem_4a6715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6715 = call %struct.Memory* @routine_movl_MINUS0x558__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6715)
  store %struct.Memory* %call_4a6715, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a671b	 Bytes: 2
  %loadMem_4a671b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a671b = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a671b)
  store %struct.Memory* %call_4a671b, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a671d	 Bytes: 3
  %loadMem_4a671d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a671d = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a671d)
  store %struct.Memory* %call_4a671d, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a6720	 Bytes: 6
  %loadMem_4a6720 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6720 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6720)
  store %struct.Memory* %call_4a6720, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a6726	 Bytes: 2
  %loadMem_4a6726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6726 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6726)
  store %struct.Memory* %call_4a6726, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x55c(%rbp)	 RIP: 4a6728	 Bytes: 6
  %loadMem_4a6728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6728 = call %struct.Memory* @routine_movl__edx__MINUS0x55c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6728)
  store %struct.Memory* %call_4a6728, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a672e	 Bytes: 1
  %loadMem_4a672e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a672e = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a672e)
  store %struct.Memory* %call_4a672e, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a672f	 Bytes: 2
  %loadMem_4a672f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a672f = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a672f)
  store %struct.Memory* %call_4a672f, %struct.Memory** %MEMORY

  ; Code: movl -0x55c(%rbp), %edi	 RIP: 4a6731	 Bytes: 6
  %loadMem_4a6731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6731 = call %struct.Memory* @routine_movl_MINUS0x55c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6731)
  store %struct.Memory* %call_4a6731, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 4a6737	 Bytes: 2
  %loadMem_4a6737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6737 = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6737)
  store %struct.Memory* %call_4a6737, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r10	 RIP: 4a6739	 Bytes: 3
  %loadMem_4a6739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6739 = call %struct.Memory* @routine_movslq__edi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6739)
  store %struct.Memory* %call_4a6739, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r10	 RIP: 4a673c	 Bytes: 4
  %loadMem_4a673c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a673c = call %struct.Memory* @routine_shlq__0x4___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a673c)
  store %struct.Memory* %call_4a673c, %struct.Memory** %MEMORY

  ; Code: addq %r10, %r9	 RIP: 4a6740	 Bytes: 3
  %loadMem_4a6740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6740 = call %struct.Memory* @routine_addq__r10___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6740)
  store %struct.Memory* %call_4a6740, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a6743	 Bytes: 3
  %loadMem_4a6743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6743 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6743)
  store %struct.Memory* %call_4a6743, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a6746	 Bytes: 2
  %loadMem_4a6746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6746 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6746)
  store %struct.Memory* %call_4a6746, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6748	 Bytes: 1
  %loadMem_4a6748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6748 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6748)
  store %struct.Memory* %call_4a6748, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6749	 Bytes: 2
  %loadMem_4a6749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6749 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6749)
  store %struct.Memory* %call_4a6749, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a674b	 Bytes: 3
  %loadMem_4a674b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a674b = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a674b)
  store %struct.Memory* %call_4a674b, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a674e	 Bytes: 6
  %loadMem_4a674e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a674e = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a674e)
  store %struct.Memory* %call_4a674e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x560(%rbp)	 RIP: 4a6754	 Bytes: 6
  %loadMem_4a6754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6754 = call %struct.Memory* @routine_movl__eax__MINUS0x560__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6754)
  store %struct.Memory* %call_4a6754, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a675a	 Bytes: 2
  %loadMem_4a675a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a675a = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a675a)
  store %struct.Memory* %call_4a675a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a675c	 Bytes: 1
  %loadMem_4a675c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a675c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a675c)
  store %struct.Memory* %call_4a675c, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a675d	 Bytes: 2
  %loadMem_4a675d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a675d = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a675d)
  store %struct.Memory* %call_4a675d, %struct.Memory** %MEMORY

  ; Code: movl -0x560(%rbp), %edi	 RIP: 4a675f	 Bytes: 6
  %loadMem_4a675f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a675f = call %struct.Memory* @routine_movl_MINUS0x560__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a675f)
  store %struct.Memory* %call_4a675f, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 4a6765	 Bytes: 2
  %loadMem_4a6765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6765 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6765)
  store %struct.Memory* %call_4a6765, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r10	 RIP: 4a6767	 Bytes: 3
  %loadMem_4a6767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6767 = call %struct.Memory* @routine_movslq__edi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6767)
  store %struct.Memory* %call_4a6767, %struct.Memory** %MEMORY

  ; Code: movl -0x554(%rbp), %eax	 RIP: 4a676a	 Bytes: 6
  %loadMem_4a676a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a676a = call %struct.Memory* @routine_movl_MINUS0x554__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a676a)
  store %struct.Memory* %call_4a676a, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%r9,%r10,4)	 RIP: 4a6770	 Bytes: 4
  %loadMem_4a6770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6770 = call %struct.Memory* @routine_movl__eax____r9__r10_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6770)
  store %struct.Memory* %call_4a6770, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4a6774	 Bytes: 3
  %loadMem_4a6774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6774 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6774)
  store %struct.Memory* %call_4a6774, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6777	 Bytes: 1
  %loadMem_4a6777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6777 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6777)
  store %struct.Memory* %call_4a6777, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6778	 Bytes: 2
  %loadMem_4a6778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6778 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6778)
  store %struct.Memory* %call_4a6778, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a677a	 Bytes: 3
  %loadMem_4a677a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a677a = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a677a)
  store %struct.Memory* %call_4a677a, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a677d	 Bytes: 6
  %loadMem_4a677d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a677d = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a677d)
  store %struct.Memory* %call_4a677d, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a6783	 Bytes: 2
  %loadMem_4a6783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6783 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6783)
  store %struct.Memory* %call_4a6783, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x564(%rbp)	 RIP: 4a6785	 Bytes: 6
  %loadMem_4a6785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6785 = call %struct.Memory* @routine_movl__edx__MINUS0x564__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6785)
  store %struct.Memory* %call_4a6785, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a678b	 Bytes: 1
  %loadMem_4a678b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a678b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a678b)
  store %struct.Memory* %call_4a678b, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a678c	 Bytes: 2
  %loadMem_4a678c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a678c = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a678c)
  store %struct.Memory* %call_4a678c, %struct.Memory** %MEMORY

  ; Code: movl -0x564(%rbp), %edi	 RIP: 4a678e	 Bytes: 6
  %loadMem_4a678e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a678e = call %struct.Memory* @routine_movl_MINUS0x564__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a678e)
  store %struct.Memory* %call_4a678e, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 4a6794	 Bytes: 2
  %loadMem_4a6794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6794 = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6794)
  store %struct.Memory* %call_4a6794, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r9	 RIP: 4a6796	 Bytes: 3
  %loadMem_4a6796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6796 = call %struct.Memory* @routine_movslq__edi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6796)
  store %struct.Memory* %call_4a6796, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r9	 RIP: 4a6799	 Bytes: 4
  %loadMem_4a6799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6799 = call %struct.Memory* @routine_shlq__0x4___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6799)
  store %struct.Memory* %call_4a6799, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 4a679d	 Bytes: 3
  %loadMem_4a679d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a679d = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a679d)
  store %struct.Memory* %call_4a679d, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a67a0	 Bytes: 3
  %loadMem_4a67a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67a0 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67a0)
  store %struct.Memory* %call_4a67a0, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a67a3	 Bytes: 2
  %loadMem_4a67a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67a3 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67a3)
  store %struct.Memory* %call_4a67a3, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a67a5	 Bytes: 1
  %loadMem_4a67a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67a5 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67a5)
  store %struct.Memory* %call_4a67a5, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a67a6	 Bytes: 2
  %loadMem_4a67a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67a6 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67a6)
  store %struct.Memory* %call_4a67a6, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a67a8	 Bytes: 3
  %loadMem_4a67a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67a8 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67a8)
  store %struct.Memory* %call_4a67a8, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a67ab	 Bytes: 6
  %loadMem_4a67ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67ab = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67ab)
  store %struct.Memory* %call_4a67ab, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x568(%rbp)	 RIP: 4a67b1	 Bytes: 6
  %loadMem_4a67b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67b1 = call %struct.Memory* @routine_movl__eax__MINUS0x568__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67b1)
  store %struct.Memory* %call_4a67b1, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a67b7	 Bytes: 2
  %loadMem_4a67b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67b7 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67b7)
  store %struct.Memory* %call_4a67b7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a67b9	 Bytes: 1
  %loadMem_4a67b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67b9 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67b9)
  store %struct.Memory* %call_4a67b9, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a67ba	 Bytes: 2
  %loadMem_4a67ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67ba = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67ba)
  store %struct.Memory* %call_4a67ba, %struct.Memory** %MEMORY

  ; Code: movl -0x568(%rbp), %edi	 RIP: 4a67bc	 Bytes: 6
  %loadMem_4a67bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67bc = call %struct.Memory* @routine_movl_MINUS0x568__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67bc)
  store %struct.Memory* %call_4a67bc, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 4a67c2	 Bytes: 2
  %loadMem_4a67c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67c2 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67c2)
  store %struct.Memory* %call_4a67c2, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r9	 RIP: 4a67c4	 Bytes: 3
  %loadMem_4a67c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67c4 = call %struct.Memory* @routine_movslq__edi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67c4)
  store %struct.Memory* %call_4a67c4, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%r9,4), %eax	 RIP: 4a67c7	 Bytes: 4
  %loadMem_4a67c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67c7 = call %struct.Memory* @routine_movl___r8__r9_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67c7)
  store %struct.Memory* %call_4a67c7, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edi	 RIP: 4a67cb	 Bytes: 3
  %loadMem_4a67cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67cb = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67cb)
  store %struct.Memory* %call_4a67cb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x56c(%rbp)	 RIP: 4a67ce	 Bytes: 6
  %loadMem_4a67ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67ce = call %struct.Memory* @routine_movl__eax__MINUS0x56c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67ce)
  store %struct.Memory* %call_4a67ce, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a67d4	 Bytes: 2
  %loadMem_4a67d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67d4 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67d4)
  store %struct.Memory* %call_4a67d4, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a67d6	 Bytes: 1
  %loadMem_4a67d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67d6 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67d6)
  store %struct.Memory* %call_4a67d6, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a67d7	 Bytes: 2
  %loadMem_4a67d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67d7 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67d7)
  store %struct.Memory* %call_4a67d7, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a67d9	 Bytes: 3
  %loadMem_4a67d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67d9 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67d9)
  store %struct.Memory* %call_4a67d9, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a67dc	 Bytes: 6
  %loadMem_4a67dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67dc = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67dc)
  store %struct.Memory* %call_4a67dc, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a67e2	 Bytes: 2
  %loadMem_4a67e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67e2 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67e2)
  store %struct.Memory* %call_4a67e2, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x570(%rbp)	 RIP: 4a67e4	 Bytes: 6
  %loadMem_4a67e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67e4 = call %struct.Memory* @routine_movl__edx__MINUS0x570__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67e4)
  store %struct.Memory* %call_4a67e4, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a67ea	 Bytes: 1
  %loadMem_4a67ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67ea = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67ea)
  store %struct.Memory* %call_4a67ea, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a67eb	 Bytes: 2
  %loadMem_4a67eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67eb = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67eb)
  store %struct.Memory* %call_4a67eb, %struct.Memory** %MEMORY

  ; Code: movl -0x570(%rbp), %edi	 RIP: 4a67ed	 Bytes: 6
  %loadMem_4a67ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67ed = call %struct.Memory* @routine_movl_MINUS0x570__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67ed)
  store %struct.Memory* %call_4a67ed, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 4a67f3	 Bytes: 2
  %loadMem_4a67f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67f3 = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67f3)
  store %struct.Memory* %call_4a67f3, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a67f5	 Bytes: 3
  %loadMem_4a67f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67f5 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67f5)
  store %struct.Memory* %call_4a67f5, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 4a67f8	 Bytes: 4
  %loadMem_4a67f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67f8 = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67f8)
  store %struct.Memory* %call_4a67f8, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rcx	 RIP: 4a67fc	 Bytes: 3
  %loadMem_4a67fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67fc = call %struct.Memory* @routine_addq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67fc)
  store %struct.Memory* %call_4a67fc, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a67ff	 Bytes: 3
  %loadMem_4a67ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a67ff = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a67ff)
  store %struct.Memory* %call_4a67ff, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a6802	 Bytes: 2
  %loadMem_4a6802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6802 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6802)
  store %struct.Memory* %call_4a6802, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6804	 Bytes: 1
  %loadMem_4a6804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6804 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6804)
  store %struct.Memory* %call_4a6804, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6805	 Bytes: 2
  %loadMem_4a6805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6805 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6805)
  store %struct.Memory* %call_4a6805, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a6807	 Bytes: 3
  %loadMem_4a6807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6807 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6807)
  store %struct.Memory* %call_4a6807, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a680a	 Bytes: 6
  %loadMem_4a680a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a680a = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a680a)
  store %struct.Memory* %call_4a680a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x574(%rbp)	 RIP: 4a6810	 Bytes: 6
  %loadMem_4a6810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6810 = call %struct.Memory* @routine_movl__eax__MINUS0x574__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6810)
  store %struct.Memory* %call_4a6810, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a6816	 Bytes: 2
  %loadMem_4a6816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6816 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6816)
  store %struct.Memory* %call_4a6816, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6818	 Bytes: 1
  %loadMem_4a6818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6818 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6818)
  store %struct.Memory* %call_4a6818, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6819	 Bytes: 2
  %loadMem_4a6819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6819 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6819)
  store %struct.Memory* %call_4a6819, %struct.Memory** %MEMORY

  ; Code: movl -0x574(%rbp), %edi	 RIP: 4a681b	 Bytes: 6
  %loadMem_4a681b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a681b = call %struct.Memory* @routine_movl_MINUS0x574__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a681b)
  store %struct.Memory* %call_4a681b, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 4a6821	 Bytes: 2
  %loadMem_4a6821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6821 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6821)
  store %struct.Memory* %call_4a6821, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a6823	 Bytes: 3
  %loadMem_4a6823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6823 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6823)
  store %struct.Memory* %call_4a6823, %struct.Memory** %MEMORY

  ; Code: movl -0x56c(%rbp), %eax	 RIP: 4a6826	 Bytes: 6
  %loadMem_4a6826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6826 = call %struct.Memory* @routine_movl_MINUS0x56c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6826)
  store %struct.Memory* %call_4a6826, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%r8,4)	 RIP: 4a682c	 Bytes: 4
  %loadMem_4a682c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a682c = call %struct.Memory* @routine_movl__eax____rcx__r8_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a682c)
  store %struct.Memory* %call_4a682c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a6830	 Bytes: 7
  %loadMem_4a6830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6830 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6830)
  store %struct.Memory* %call_4a6830, %struct.Memory** %MEMORY

  ; Code: .L_4a6837:	 RIP: 4a6837	 Bytes: 0
  br label %block_.L_4a6837
block_.L_4a6837:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4a6837	 Bytes: 4
  %loadMem_4a6837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6837 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6837)
  store %struct.Memory* %call_4a6837, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6910	 RIP: 4a683b	 Bytes: 6
  %loadMem_4a683b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a683b = call %struct.Memory* @routine_jge_.L_4a6910(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a683b, i8* %BRANCH_TAKEN, i64 213, i64 6, i64 6)
  store %struct.Memory* %call_4a683b, %struct.Memory** %MEMORY

  %loadBr_4a683b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a683b = icmp eq i8 %loadBr_4a683b, 1
  br i1 %cmpBr_4a683b, label %block_.L_4a6910, label %block_4a6841

block_4a6841:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a6841	 Bytes: 7
  %loadMem_4a6841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6841 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6841)
  store %struct.Memory* %call_4a6841, %struct.Memory** %MEMORY

  ; Code: .L_4a6848:	 RIP: 4a6848	 Bytes: 0
  br label %block_.L_4a6848
block_.L_4a6848:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4a6848	 Bytes: 4
  %loadMem_4a6848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6848 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6848)
  store %struct.Memory* %call_4a6848, %struct.Memory** %MEMORY

  ; Code: jge .L_4a68fd	 RIP: 4a684c	 Bytes: 6
  %loadMem_4a684c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a684c = call %struct.Memory* @routine_jge_.L_4a68fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a684c, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_4a684c, %struct.Memory** %MEMORY

  %loadBr_4a684c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a684c = icmp eq i8 %loadBr_4a684c, 1
  br i1 %cmpBr_4a684c, label %block_.L_4a68fd, label %block_4a6852

block_4a6852:
  ; Code: movq $0x6d40f0, %rax	 RIP: 4a6852	 Bytes: 10
  %loadMem_4a6852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6852 = call %struct.Memory* @routine_movq__0x6d40f0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6852)
  store %struct.Memory* %call_4a6852, %struct.Memory** %MEMORY

  ; Code: movq $0x6f8f20, %rcx	 RIP: 4a685c	 Bytes: 10
  %loadMem_4a685c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a685c = call %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a685c)
  store %struct.Memory* %call_4a685c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a6866	 Bytes: 8
  %loadMem_4a6866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6866 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6866)
  store %struct.Memory* %call_4a6866, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rdx	 RIP: 4a686e	 Bytes: 7
  %loadMem_4a686e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a686e = call %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a686e)
  store %struct.Memory* %call_4a686e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a6875	 Bytes: 4
  %loadMem_4a6875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6875 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6875)
  store %struct.Memory* %call_4a6875, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a6879	 Bytes: 4
  %loadMem_4a6879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6879 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6879)
  store %struct.Memory* %call_4a6879, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a687d	 Bytes: 3
  %loadMem_4a687d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a687d = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a687d)
  store %struct.Memory* %call_4a687d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a6880	 Bytes: 4
  %loadMem_4a6880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6880 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6880)
  store %struct.Memory* %call_4a6880, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %edi	 RIP: 4a6884	 Bytes: 3
  %loadMem_4a6884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6884 = call %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6884)
  store %struct.Memory* %call_4a6884, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %r8d	 RIP: 4a6887	 Bytes: 4
  %loadMem_4a6887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6887 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6887)
  store %struct.Memory* %call_4a6887, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %r8d	 RIP: 4a688b	 Bytes: 7
  %loadMem_4a688b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a688b = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a688b)
  store %struct.Memory* %call_4a688b, %struct.Memory** %MEMORY

  ; Code: movslq %r8d, %rdx	 RIP: 4a6892	 Bytes: 3
  %loadMem_4a6892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6892 = call %struct.Memory* @routine_movslq__r8d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6892)
  store %struct.Memory* %call_4a6892, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a6895	 Bytes: 4
  %loadMem_4a6895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6895 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6895)
  store %struct.Memory* %call_4a6895, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6899	 Bytes: 3
  %loadMem_4a6899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6899 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6899)
  store %struct.Memory* %call_4a6899, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %r8d	 RIP: 4a689c	 Bytes: 4
  %loadMem_4a689c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a689c = call %struct.Memory* @routine_movl_MINUS0x30__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a689c)
  store %struct.Memory* %call_4a689c, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %r8d	 RIP: 4a68a0	 Bytes: 7
  %loadMem_4a68a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68a0 = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68a0)
  store %struct.Memory* %call_4a68a0, %struct.Memory** %MEMORY

  ; Code: movslq %r8d, %rdx	 RIP: 4a68a7	 Bytes: 3
  %loadMem_4a68a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68a7 = call %struct.Memory* @routine_movslq__r8d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68a7)
  store %struct.Memory* %call_4a68a7, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rcx,%rdx,4)	 RIP: 4a68aa	 Bytes: 3
  %loadMem_4a68aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68aa = call %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68aa)
  store %struct.Memory* %call_4a68aa, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %edi	 RIP: 4a68ad	 Bytes: 3
  %loadMem_4a68ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68ad = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68ad)
  store %struct.Memory* %call_4a68ad, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %edi	 RIP: 4a68b0	 Bytes: 6
  %loadMem_4a68b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68b0 = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68b0)
  store %struct.Memory* %call_4a68b0, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rcx	 RIP: 4a68b6	 Bytes: 3
  %loadMem_4a68b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68b6 = call %struct.Memory* @routine_movslq__edi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68b6)
  store %struct.Memory* %call_4a68b6, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a68b9	 Bytes: 4
  %loadMem_4a68b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68b9 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68b9)
  store %struct.Memory* %call_4a68b9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a68bd	 Bytes: 3
  %loadMem_4a68bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68bd = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68bd)
  store %struct.Memory* %call_4a68bd, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 4a68c0	 Bytes: 3
  %loadMem_4a68c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68c0 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68c0)
  store %struct.Memory* %call_4a68c0, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %edi	 RIP: 4a68c3	 Bytes: 6
  %loadMem_4a68c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68c3 = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68c3)
  store %struct.Memory* %call_4a68c3, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rcx	 RIP: 4a68c9	 Bytes: 3
  %loadMem_4a68c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68c9 = call %struct.Memory* @routine_movslq__edi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68c9)
  store %struct.Memory* %call_4a68c9, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 4a68cc	 Bytes: 3
  %loadMem_4a68cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68cc = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68cc)
  store %struct.Memory* %call_4a68cc, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a68cf	 Bytes: 8
  %loadMem_4a68cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68cf = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68cf)
  store %struct.Memory* %call_4a68cf, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4a68d7	 Bytes: 6
  %loadMem_4a68d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68d7 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68d7)
  store %struct.Memory* %call_4a68d7, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a68dd	 Bytes: 4
  %loadMem_4a68dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68dd = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68dd)
  store %struct.Memory* %call_4a68dd, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a68e1	 Bytes: 4
  %loadMem_4a68e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68e1 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68e1)
  store %struct.Memory* %call_4a68e1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a68e5	 Bytes: 3
  %loadMem_4a68e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68e5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68e5)
  store %struct.Memory* %call_4a68e5, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a68e8	 Bytes: 4
  %loadMem_4a68e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68e8 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68e8)
  store %struct.Memory* %call_4a68e8, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 4a68ec	 Bytes: 3
  %loadMem_4a68ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68ec = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68ec)
  store %struct.Memory* %call_4a68ec, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a68ef	 Bytes: 3
  %loadMem_4a68ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68ef = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68ef)
  store %struct.Memory* %call_4a68ef, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a68f2	 Bytes: 3
  %loadMem_4a68f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68f2 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68f2)
  store %struct.Memory* %call_4a68f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a68f5	 Bytes: 3
  %loadMem_4a68f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68f5 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68f5)
  store %struct.Memory* %call_4a68f5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6848	 RIP: 4a68f8	 Bytes: 5
  %loadMem_4a68f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68f8 = call %struct.Memory* @routine_jmpq_.L_4a6848(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68f8, i64 -176, i64 5)
  store %struct.Memory* %call_4a68f8, %struct.Memory** %MEMORY

  br label %block_.L_4a6848

  ; Code: .L_4a68fd:	 RIP: 4a68fd	 Bytes: 0
block_.L_4a68fd:

  ; Code: jmpq .L_4a6902	 RIP: 4a68fd	 Bytes: 5
  %loadMem_4a68fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a68fd = call %struct.Memory* @routine_jmpq_.L_4a6902(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a68fd, i64 5, i64 5)
  store %struct.Memory* %call_4a68fd, %struct.Memory** %MEMORY

  br label %block_.L_4a6902

  ; Code: .L_4a6902:	 RIP: 4a6902	 Bytes: 0
block_.L_4a6902:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a6902	 Bytes: 3
  %loadMem_4a6902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6902 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6902)
  store %struct.Memory* %call_4a6902, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a6905	 Bytes: 3
  %loadMem_4a6905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6905 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6905)
  store %struct.Memory* %call_4a6905, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a6908	 Bytes: 3
  %loadMem_4a6908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6908 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6908)
  store %struct.Memory* %call_4a6908, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6837	 RIP: 4a690b	 Bytes: 5
  %loadMem_4a690b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a690b = call %struct.Memory* @routine_jmpq_.L_4a6837(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a690b, i64 -212, i64 5)
  store %struct.Memory* %call_4a690b, %struct.Memory** %MEMORY

  br label %block_.L_4a6837

  ; Code: .L_4a6910:	 RIP: 4a6910	 Bytes: 0
block_.L_4a6910:

  ; Code: movl $0x1, %edi	 RIP: 4a6910	 Bytes: 5
  %loadMem_4a6910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6910 = call %struct.Memory* @routine_movl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6910)
  store %struct.Memory* %call_4a6910, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4a6915	 Bytes: 3
  %loadMem_4a6915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6915 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6915)
  store %struct.Memory* %call_4a6915, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %eax	 RIP: 4a6918	 Bytes: 3
  %loadMem_4a6918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6918 = call %struct.Memory* @routine_addl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6918)
  store %struct.Memory* %call_4a6918, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edx	 RIP: 4a691b	 Bytes: 6
  %loadMem_4a691b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a691b = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a691b)
  store %struct.Memory* %call_4a691b, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 4a6921	 Bytes: 2
  %loadMem_4a6921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6921 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6921)
  store %struct.Memory* %call_4a6921, %struct.Memory** %MEMORY

  ; Code: callq .dct_chroma4x4	 RIP: 4a6923	 Bytes: 5
  %loadMem1_4a6923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4a6923 = call %struct.Memory* @routine_callq_.dct_chroma4x4(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4a6923, i64 -638051, i64 5, i64 5)
  store %struct.Memory* %call1_4a6923, %struct.Memory** %MEMORY

  %loadMem2_4a6923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a6923 = load i64, i64* %3
  %call2_4a6923 = call %struct.Memory* @sub_40acc0.dct_chroma4x4(%struct.State* %0, i64  %loadPC_4a6923, %struct.Memory* %loadMem2_4a6923)
  store %struct.Memory* %call2_4a6923, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edx	 RIP: 4a6928	 Bytes: 5
  %loadMem_4a6928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6928 = call %struct.Memory* @routine_movl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6928)
  store %struct.Memory* %call_4a6928, %struct.Memory** %MEMORY

  ; Code: movq $0x7107b0, %rcx	 RIP: 4a692d	 Bytes: 10
  %loadMem_4a692d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a692d = call %struct.Memory* @routine_movq__0x7107b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a692d)
  store %struct.Memory* %call_4a692d, %struct.Memory** %MEMORY

  ; Code: addq $0x40, %rcx	 RIP: 4a6937	 Bytes: 4
  %loadMem_4a6937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6937 = call %struct.Memory* @routine_addq__0x40___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6937)
  store %struct.Memory* %call_4a6937, %struct.Memory** %MEMORY

  ; Code: movq $0x6d4600, %r8	 RIP: 4a693b	 Bytes: 10
  %loadMem_4a693b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a693b = call %struct.Memory* @routine_movq__0x6d4600___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a693b)
  store %struct.Memory* %call_4a693b, %struct.Memory** %MEMORY

  ; Code: addq $0x40, %r8	 RIP: 4a6945	 Bytes: 4
  %loadMem_4a6945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6945 = call %struct.Memory* @routine_addq__0x40___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6945)
  store %struct.Memory* %call_4a6945, %struct.Memory** %MEMORY

  ; Code: movq $0x6d0920, %r9	 RIP: 4a6949	 Bytes: 10
  %loadMem_4a6949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6949 = call %struct.Memory* @routine_movq__0x6d0920___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6949)
  store %struct.Memory* %call_4a6949, %struct.Memory** %MEMORY

  ; Code: addq $0x40, %r9	 RIP: 4a6953	 Bytes: 4
  %loadMem_4a6953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6953 = call %struct.Memory* @routine_addq__0x40___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6953)
  store %struct.Memory* %call_4a6953, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4a6957	 Bytes: 3
  %loadMem_4a6957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6957 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6957)
  store %struct.Memory* %call_4a6957, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x578(%rbp)	 RIP: 4a695a	 Bytes: 6
  %loadMem_4a695a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a695a = call %struct.Memory* @routine_movl__eax__MINUS0x578__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a695a)
  store %struct.Memory* %call_4a695a, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 4a6960	 Bytes: 2
  %loadMem_4a6960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6960 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6960)
  store %struct.Memory* %call_4a6960, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x57c(%rbp)	 RIP: 4a6962	 Bytes: 6
  %loadMem_4a6962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6962 = call %struct.Memory* @routine_movl__edx__MINUS0x57c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6962)
  store %struct.Memory* %call_4a6962, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6968	 Bytes: 1
  %loadMem_4a6968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6968 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6968)
  store %struct.Memory* %call_4a6968, %struct.Memory** %MEMORY

  ; Code: movl -0x57c(%rbp), %esi	 RIP: 4a6969	 Bytes: 6
  %loadMem_4a6969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6969 = call %struct.Memory* @routine_movl_MINUS0x57c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6969)
  store %struct.Memory* %call_4a6969, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a696f	 Bytes: 2
  %loadMem_4a696f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a696f = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a696f)
  store %struct.Memory* %call_4a696f, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a6971	 Bytes: 3
  %loadMem_4a6971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6971 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6971)
  store %struct.Memory* %call_4a6971, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a6974	 Bytes: 6
  %loadMem_4a6974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6974 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6974)
  store %struct.Memory* %call_4a6974, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a697a	 Bytes: 2
  %loadMem_4a697a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a697a = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a697a)
  store %struct.Memory* %call_4a697a, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x580(%rbp)	 RIP: 4a697c	 Bytes: 6
  %loadMem_4a697c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a697c = call %struct.Memory* @routine_movl__edx__MINUS0x580__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a697c)
  store %struct.Memory* %call_4a697c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6982	 Bytes: 1
  %loadMem_4a6982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6982 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6982)
  store %struct.Memory* %call_4a6982, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6983	 Bytes: 2
  %loadMem_4a6983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6983 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6983)
  store %struct.Memory* %call_4a6983, %struct.Memory** %MEMORY

  ; Code: movl -0x580(%rbp), %edi	 RIP: 4a6985	 Bytes: 6
  %loadMem_4a6985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6985 = call %struct.Memory* @routine_movl_MINUS0x580__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6985)
  store %struct.Memory* %call_4a6985, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 4a698b	 Bytes: 2
  %loadMem_4a698b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a698b = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a698b)
  store %struct.Memory* %call_4a698b, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r10	 RIP: 4a698d	 Bytes: 3
  %loadMem_4a698d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a698d = call %struct.Memory* @routine_movslq__edi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a698d)
  store %struct.Memory* %call_4a698d, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r10	 RIP: 4a6990	 Bytes: 4
  %loadMem_4a6990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6990 = call %struct.Memory* @routine_shlq__0x4___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6990)
  store %struct.Memory* %call_4a6990, %struct.Memory** %MEMORY

  ; Code: addq %r10, %r9	 RIP: 4a6994	 Bytes: 3
  %loadMem_4a6994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6994 = call %struct.Memory* @routine_addq__r10___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6994)
  store %struct.Memory* %call_4a6994, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a6997	 Bytes: 3
  %loadMem_4a6997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6997 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6997)
  store %struct.Memory* %call_4a6997, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a699a	 Bytes: 2
  %loadMem_4a699a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a699a = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a699a)
  store %struct.Memory* %call_4a699a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a699c	 Bytes: 1
  %loadMem_4a699c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a699c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a699c)
  store %struct.Memory* %call_4a699c, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a699d	 Bytes: 2
  %loadMem_4a699d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a699d = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a699d)
  store %struct.Memory* %call_4a699d, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a699f	 Bytes: 3
  %loadMem_4a699f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a699f = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a699f)
  store %struct.Memory* %call_4a699f, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a69a2	 Bytes: 6
  %loadMem_4a69a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69a2 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69a2)
  store %struct.Memory* %call_4a69a2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x584(%rbp)	 RIP: 4a69a8	 Bytes: 6
  %loadMem_4a69a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69a8 = call %struct.Memory* @routine_movl__eax__MINUS0x584__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69a8)
  store %struct.Memory* %call_4a69a8, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a69ae	 Bytes: 2
  %loadMem_4a69ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69ae = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69ae)
  store %struct.Memory* %call_4a69ae, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a69b0	 Bytes: 1
  %loadMem_4a69b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69b0 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69b0)
  store %struct.Memory* %call_4a69b0, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a69b1	 Bytes: 2
  %loadMem_4a69b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69b1 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69b1)
  store %struct.Memory* %call_4a69b1, %struct.Memory** %MEMORY

  ; Code: movl -0x584(%rbp), %edi	 RIP: 4a69b3	 Bytes: 6
  %loadMem_4a69b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69b3 = call %struct.Memory* @routine_movl_MINUS0x584__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69b3)
  store %struct.Memory* %call_4a69b3, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 4a69b9	 Bytes: 2
  %loadMem_4a69b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69b9 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69b9)
  store %struct.Memory* %call_4a69b9, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r10	 RIP: 4a69bb	 Bytes: 3
  %loadMem_4a69bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69bb = call %struct.Memory* @routine_movslq__edi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69bb)
  store %struct.Memory* %call_4a69bb, %struct.Memory** %MEMORY

  ; Code: movl -0x578(%rbp), %eax	 RIP: 4a69be	 Bytes: 6
  %loadMem_4a69be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69be = call %struct.Memory* @routine_movl_MINUS0x578__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69be)
  store %struct.Memory* %call_4a69be, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%r9,%r10,4)	 RIP: 4a69c4	 Bytes: 4
  %loadMem_4a69c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69c4 = call %struct.Memory* @routine_movl__eax____r9__r10_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69c4)
  store %struct.Memory* %call_4a69c4, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4a69c8	 Bytes: 3
  %loadMem_4a69c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69c8 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69c8)
  store %struct.Memory* %call_4a69c8, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a69cb	 Bytes: 1
  %loadMem_4a69cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69cb = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69cb)
  store %struct.Memory* %call_4a69cb, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a69cc	 Bytes: 2
  %loadMem_4a69cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69cc = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69cc)
  store %struct.Memory* %call_4a69cc, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a69ce	 Bytes: 3
  %loadMem_4a69ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69ce = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69ce)
  store %struct.Memory* %call_4a69ce, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a69d1	 Bytes: 6
  %loadMem_4a69d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69d1 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69d1)
  store %struct.Memory* %call_4a69d1, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a69d7	 Bytes: 2
  %loadMem_4a69d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69d7 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69d7)
  store %struct.Memory* %call_4a69d7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x588(%rbp)	 RIP: 4a69d9	 Bytes: 6
  %loadMem_4a69d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69d9 = call %struct.Memory* @routine_movl__edx__MINUS0x588__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69d9)
  store %struct.Memory* %call_4a69d9, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a69df	 Bytes: 1
  %loadMem_4a69df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69df = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69df)
  store %struct.Memory* %call_4a69df, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a69e0	 Bytes: 2
  %loadMem_4a69e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69e0 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69e0)
  store %struct.Memory* %call_4a69e0, %struct.Memory** %MEMORY

  ; Code: movl -0x588(%rbp), %edi	 RIP: 4a69e2	 Bytes: 6
  %loadMem_4a69e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69e2 = call %struct.Memory* @routine_movl_MINUS0x588__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69e2)
  store %struct.Memory* %call_4a69e2, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 4a69e8	 Bytes: 2
  %loadMem_4a69e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69e8 = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69e8)
  store %struct.Memory* %call_4a69e8, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r9	 RIP: 4a69ea	 Bytes: 3
  %loadMem_4a69ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69ea = call %struct.Memory* @routine_movslq__edi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69ea)
  store %struct.Memory* %call_4a69ea, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r9	 RIP: 4a69ed	 Bytes: 4
  %loadMem_4a69ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69ed = call %struct.Memory* @routine_shlq__0x4___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69ed)
  store %struct.Memory* %call_4a69ed, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 4a69f1	 Bytes: 3
  %loadMem_4a69f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69f1 = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69f1)
  store %struct.Memory* %call_4a69f1, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a69f4	 Bytes: 3
  %loadMem_4a69f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69f4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69f4)
  store %struct.Memory* %call_4a69f4, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a69f7	 Bytes: 2
  %loadMem_4a69f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69f7 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69f7)
  store %struct.Memory* %call_4a69f7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a69f9	 Bytes: 1
  %loadMem_4a69f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69f9 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69f9)
  store %struct.Memory* %call_4a69f9, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a69fa	 Bytes: 2
  %loadMem_4a69fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69fa = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69fa)
  store %struct.Memory* %call_4a69fa, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a69fc	 Bytes: 3
  %loadMem_4a69fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69fc = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69fc)
  store %struct.Memory* %call_4a69fc, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a69ff	 Bytes: 6
  %loadMem_4a69ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a69ff = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a69ff)
  store %struct.Memory* %call_4a69ff, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58c(%rbp)	 RIP: 4a6a05	 Bytes: 6
  %loadMem_4a6a05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a05 = call %struct.Memory* @routine_movl__eax__MINUS0x58c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a05)
  store %struct.Memory* %call_4a6a05, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a6a0b	 Bytes: 2
  %loadMem_4a6a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a0b = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a0b)
  store %struct.Memory* %call_4a6a0b, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6a0d	 Bytes: 1
  %loadMem_4a6a0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a0d = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a0d)
  store %struct.Memory* %call_4a6a0d, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6a0e	 Bytes: 2
  %loadMem_4a6a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a0e = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a0e)
  store %struct.Memory* %call_4a6a0e, %struct.Memory** %MEMORY

  ; Code: movl -0x58c(%rbp), %edi	 RIP: 4a6a10	 Bytes: 6
  %loadMem_4a6a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a10 = call %struct.Memory* @routine_movl_MINUS0x58c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a10)
  store %struct.Memory* %call_4a6a10, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 4a6a16	 Bytes: 2
  %loadMem_4a6a16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a16 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a16)
  store %struct.Memory* %call_4a6a16, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r9	 RIP: 4a6a18	 Bytes: 3
  %loadMem_4a6a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a18 = call %struct.Memory* @routine_movslq__edi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a18)
  store %struct.Memory* %call_4a6a18, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%r9,4), %eax	 RIP: 4a6a1b	 Bytes: 4
  %loadMem_4a6a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a1b = call %struct.Memory* @routine_movl___r8__r9_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a1b)
  store %struct.Memory* %call_4a6a1b, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edi	 RIP: 4a6a1f	 Bytes: 3
  %loadMem_4a6a1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a1f = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a1f)
  store %struct.Memory* %call_4a6a1f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x590(%rbp)	 RIP: 4a6a22	 Bytes: 6
  %loadMem_4a6a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a22 = call %struct.Memory* @routine_movl__eax__MINUS0x590__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a22)
  store %struct.Memory* %call_4a6a22, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a6a28	 Bytes: 2
  %loadMem_4a6a28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a28 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a28)
  store %struct.Memory* %call_4a6a28, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6a2a	 Bytes: 1
  %loadMem_4a6a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a2a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a2a)
  store %struct.Memory* %call_4a6a2a, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6a2b	 Bytes: 2
  %loadMem_4a6a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a2b = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a2b)
  store %struct.Memory* %call_4a6a2b, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4a6a2d	 Bytes: 3
  %loadMem_4a6a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a2d = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a2d)
  store %struct.Memory* %call_4a6a2d, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a6a30	 Bytes: 6
  %loadMem_4a6a30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a30 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a30)
  store %struct.Memory* %call_4a6a30, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a6a36	 Bytes: 2
  %loadMem_4a6a36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a36 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a36)
  store %struct.Memory* %call_4a6a36, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x594(%rbp)	 RIP: 4a6a38	 Bytes: 6
  %loadMem_4a6a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a38 = call %struct.Memory* @routine_movl__edx__MINUS0x594__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a38)
  store %struct.Memory* %call_4a6a38, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6a3e	 Bytes: 1
  %loadMem_4a6a3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a3e = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a3e)
  store %struct.Memory* %call_4a6a3e, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6a3f	 Bytes: 2
  %loadMem_4a6a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a3f = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a3f)
  store %struct.Memory* %call_4a6a3f, %struct.Memory** %MEMORY

  ; Code: movl -0x594(%rbp), %edi	 RIP: 4a6a41	 Bytes: 6
  %loadMem_4a6a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a41 = call %struct.Memory* @routine_movl_MINUS0x594__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a41)
  store %struct.Memory* %call_4a6a41, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 4a6a47	 Bytes: 2
  %loadMem_4a6a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a47 = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a47)
  store %struct.Memory* %call_4a6a47, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a6a49	 Bytes: 3
  %loadMem_4a6a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a49 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a49)
  store %struct.Memory* %call_4a6a49, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 4a6a4c	 Bytes: 4
  %loadMem_4a6a4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a4c = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a4c)
  store %struct.Memory* %call_4a6a4c, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rcx	 RIP: 4a6a50	 Bytes: 3
  %loadMem_4a6a50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a50 = call %struct.Memory* @routine_addq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a50)
  store %struct.Memory* %call_4a6a50, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4a6a53	 Bytes: 3
  %loadMem_4a6a53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a53 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a53)
  store %struct.Memory* %call_4a6a53, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a6a56	 Bytes: 2
  %loadMem_4a6a56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a56 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a56)
  store %struct.Memory* %call_4a6a56, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6a58	 Bytes: 1
  %loadMem_4a6a58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a58 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a58)
  store %struct.Memory* %call_4a6a58, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6a59	 Bytes: 2
  %loadMem_4a6a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a59 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a59)
  store %struct.Memory* %call_4a6a59, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4a6a5b	 Bytes: 3
  %loadMem_4a6a5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a5b = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a5b)
  store %struct.Memory* %call_4a6a5b, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edi	 RIP: 4a6a5e	 Bytes: 6
  %loadMem_4a6a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a5e = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a5e)
  store %struct.Memory* %call_4a6a5e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x598(%rbp)	 RIP: 4a6a64	 Bytes: 6
  %loadMem_4a6a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a64 = call %struct.Memory* @routine_movl__eax__MINUS0x598__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a64)
  store %struct.Memory* %call_4a6a64, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 4a6a6a	 Bytes: 2
  %loadMem_4a6a6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a6a = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a6a)
  store %struct.Memory* %call_4a6a6a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a6a6c	 Bytes: 1
  %loadMem_4a6a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a6c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a6c)
  store %struct.Memory* %call_4a6a6c, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4a6a6d	 Bytes: 2
  %loadMem_4a6a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a6d = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a6d)
  store %struct.Memory* %call_4a6a6d, %struct.Memory** %MEMORY

  ; Code: movl -0x598(%rbp), %edi	 RIP: 4a6a6f	 Bytes: 6
  %loadMem_4a6a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a6f = call %struct.Memory* @routine_movl_MINUS0x598__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a6f)
  store %struct.Memory* %call_4a6a6f, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 4a6a75	 Bytes: 2
  %loadMem_4a6a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a75 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a75)
  store %struct.Memory* %call_4a6a75, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4a6a77	 Bytes: 3
  %loadMem_4a6a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a77 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a77)
  store %struct.Memory* %call_4a6a77, %struct.Memory** %MEMORY

  ; Code: movl -0x590(%rbp), %eax	 RIP: 4a6a7a	 Bytes: 6
  %loadMem_4a6a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a7a = call %struct.Memory* @routine_movl_MINUS0x590__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a7a)
  store %struct.Memory* %call_4a6a7a, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%r8,4)	 RIP: 4a6a80	 Bytes: 4
  %loadMem_4a6a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a80 = call %struct.Memory* @routine_movl__eax____rcx__r8_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a80)
  store %struct.Memory* %call_4a6a80, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a6a84	 Bytes: 7
  %loadMem_4a6a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a84 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a84)
  store %struct.Memory* %call_4a6a84, %struct.Memory** %MEMORY

  ; Code: .L_4a6a8b:	 RIP: 4a6a8b	 Bytes: 0
  br label %block_.L_4a6a8b
block_.L_4a6a8b:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4a6a8b	 Bytes: 4
  %loadMem_4a6a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a8b = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a8b)
  store %struct.Memory* %call_4a6a8b, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6b14	 RIP: 4a6a8f	 Bytes: 6
  %loadMem_4a6a8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a8f = call %struct.Memory* @routine_jge_.L_4a6b14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a8f, i8* %BRANCH_TAKEN, i64 133, i64 6, i64 6)
  store %struct.Memory* %call_4a6a8f, %struct.Memory** %MEMORY

  %loadBr_4a6a8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6a8f = icmp eq i8 %loadBr_4a6a8f, 1
  br i1 %cmpBr_4a6a8f, label %block_.L_4a6b14, label %block_4a6a95

block_4a6a95:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a6a95	 Bytes: 7
  %loadMem_4a6a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a95 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a95)
  store %struct.Memory* %call_4a6a95, %struct.Memory** %MEMORY

  ; Code: .L_4a6a9c:	 RIP: 4a6a9c	 Bytes: 0
  br label %block_.L_4a6a9c
block_.L_4a6a9c:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4a6a9c	 Bytes: 4
  %loadMem_4a6a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6a9c = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6a9c)
  store %struct.Memory* %call_4a6a9c, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6b01	 RIP: 4a6aa0	 Bytes: 6
  %loadMem_4a6aa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6aa0 = call %struct.Memory* @routine_jge_.L_4a6b01(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6aa0, i8* %BRANCH_TAKEN, i64 97, i64 6, i64 6)
  store %struct.Memory* %call_4a6aa0, %struct.Memory** %MEMORY

  %loadBr_4a6aa0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6aa0 = icmp eq i8 %loadBr_4a6aa0, 1
  br i1 %cmpBr_4a6aa0, label %block_.L_4a6b01, label %block_4a6aa6

block_4a6aa6:
  ; Code: movq $0x6d2ec0, %rax	 RIP: 4a6aa6	 Bytes: 10
  %loadMem_4a6aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6aa6 = call %struct.Memory* @routine_movq__0x6d2ec0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6aa6)
  store %struct.Memory* %call_4a6aa6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a6ab0	 Bytes: 8
  %loadMem_4a6ab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ab0 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ab0)
  store %struct.Memory* %call_4a6ab0, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 4a6ab8	 Bytes: 7
  %loadMem_4a6ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ab8 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ab8)
  store %struct.Memory* %call_4a6ab8, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a6abf	 Bytes: 4
  %loadMem_4a6abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6abf = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6abf)
  store %struct.Memory* %call_4a6abf, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a6ac3	 Bytes: 4
  %loadMem_4a6ac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ac3 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ac3)
  store %struct.Memory* %call_4a6ac3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6ac7	 Bytes: 3
  %loadMem_4a6ac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ac7 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ac7)
  store %struct.Memory* %call_4a6ac7, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a6aca	 Bytes: 4
  %loadMem_4a6aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6aca = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6aca)
  store %struct.Memory* %call_4a6aca, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 4a6ace	 Bytes: 3
  %loadMem_4a6ace = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ace = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ace)
  store %struct.Memory* %call_4a6ace, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %edi	 RIP: 4a6ad1	 Bytes: 3
  %loadMem_4a6ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ad1 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ad1)
  store %struct.Memory* %call_4a6ad1, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %edi	 RIP: 4a6ad4	 Bytes: 6
  %loadMem_4a6ad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ad4 = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ad4)
  store %struct.Memory* %call_4a6ad4, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rcx	 RIP: 4a6ada	 Bytes: 3
  %loadMem_4a6ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ada = call %struct.Memory* @routine_movslq__edi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ada)
  store %struct.Memory* %call_4a6ada, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a6add	 Bytes: 4
  %loadMem_4a6add = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6add = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6add)
  store %struct.Memory* %call_4a6add, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a6ae1	 Bytes: 3
  %loadMem_4a6ae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ae1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ae1)
  store %struct.Memory* %call_4a6ae1, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 4a6ae4	 Bytes: 3
  %loadMem_4a6ae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ae4 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ae4)
  store %struct.Memory* %call_4a6ae4, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %edi	 RIP: 4a6ae7	 Bytes: 6
  %loadMem_4a6ae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ae7 = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ae7)
  store %struct.Memory* %call_4a6ae7, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rcx	 RIP: 4a6aed	 Bytes: 3
  %loadMem_4a6aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6aed = call %struct.Memory* @routine_movslq__edi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6aed)
  store %struct.Memory* %call_4a6aed, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4a6af0	 Bytes: 3
  %loadMem_4a6af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6af0 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6af0)
  store %struct.Memory* %call_4a6af0, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a6af3	 Bytes: 3
  %loadMem_4a6af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6af3 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6af3)
  store %struct.Memory* %call_4a6af3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a6af6	 Bytes: 3
  %loadMem_4a6af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6af6 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6af6)
  store %struct.Memory* %call_4a6af6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a6af9	 Bytes: 3
  %loadMem_4a6af9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6af9 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6af9)
  store %struct.Memory* %call_4a6af9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6a9c	 RIP: 4a6afc	 Bytes: 5
  %loadMem_4a6afc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6afc = call %struct.Memory* @routine_jmpq_.L_4a6a9c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6afc, i64 -96, i64 5)
  store %struct.Memory* %call_4a6afc, %struct.Memory** %MEMORY

  br label %block_.L_4a6a9c

  ; Code: .L_4a6b01:	 RIP: 4a6b01	 Bytes: 0
block_.L_4a6b01:

  ; Code: jmpq .L_4a6b06	 RIP: 4a6b01	 Bytes: 5
  %loadMem_4a6b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b01 = call %struct.Memory* @routine_jmpq_.L_4a6b06(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b01, i64 5, i64 5)
  store %struct.Memory* %call_4a6b01, %struct.Memory** %MEMORY

  br label %block_.L_4a6b06

  ; Code: .L_4a6b06:	 RIP: 4a6b06	 Bytes: 0
block_.L_4a6b06:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a6b06	 Bytes: 3
  %loadMem_4a6b06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b06 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b06)
  store %struct.Memory* %call_4a6b06, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a6b09	 Bytes: 3
  %loadMem_4a6b09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b09 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b09)
  store %struct.Memory* %call_4a6b09, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a6b0c	 Bytes: 3
  %loadMem_4a6b0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b0c = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b0c)
  store %struct.Memory* %call_4a6b0c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6a8b	 RIP: 4a6b0f	 Bytes: 5
  %loadMem_4a6b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b0f = call %struct.Memory* @routine_jmpq_.L_4a6a8b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b0f, i64 -132, i64 5)
  store %struct.Memory* %call_4a6b0f, %struct.Memory** %MEMORY

  br label %block_.L_4a6a8b

  ; Code: .L_4a6b14:	 RIP: 4a6b14	 Bytes: 0
block_.L_4a6b14:

  ; Code: jmpq .L_4a6b19	 RIP: 4a6b14	 Bytes: 5
  %loadMem_4a6b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b14 = call %struct.Memory* @routine_jmpq_.L_4a6b19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b14, i64 5, i64 5)
  store %struct.Memory* %call_4a6b14, %struct.Memory** %MEMORY

  br label %block_.L_4a6b19

  ; Code: .L_4a6b19:	 RIP: 4a6b19	 Bytes: 0
block_.L_4a6b19:

  ; Code: movl -0x274(%rbp), %eax	 RIP: 4a6b19	 Bytes: 6
  %loadMem_4a6b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b19 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b19)
  store %struct.Memory* %call_4a6b19, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a6b1f	 Bytes: 3
  %loadMem_4a6b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b1f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b1f)
  store %struct.Memory* %call_4a6b1f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x274(%rbp)	 RIP: 4a6b22	 Bytes: 6
  %loadMem_4a6b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b22 = call %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b22)
  store %struct.Memory* %call_4a6b22, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a65f6	 RIP: 4a6b28	 Bytes: 5
  %loadMem_4a6b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b28 = call %struct.Memory* @routine_jmpq_.L_4a65f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b28, i64 -1330, i64 5)
  store %struct.Memory* %call_4a6b28, %struct.Memory** %MEMORY

  br label %block_.L_4a65f6

  ; Code: .L_4a6b2d:	 RIP: 4a6b2d	 Bytes: 0
block_.L_4a6b2d:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a6b2d	 Bytes: 7
  %loadMem_4a6b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b2d = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b2d)
  store %struct.Memory* %call_4a6b2d, %struct.Memory** %MEMORY

  ; Code: .L_4a6b34:	 RIP: 4a6b34	 Bytes: 0
  br label %block_.L_4a6b34
block_.L_4a6b34:

  ; Code: cmpl $0x8, -0x30(%rbp)	 RIP: 4a6b34	 Bytes: 4
  %loadMem_4a6b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b34 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b34)
  store %struct.Memory* %call_4a6b34, %struct.Memory** %MEMORY

  ; Code: jge .L_4a71bc	 RIP: 4a6b38	 Bytes: 6
  %loadMem_4a6b38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b38 = call %struct.Memory* @routine_jge_.L_4a71bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b38, i8* %BRANCH_TAKEN, i64 1668, i64 6, i64 6)
  store %struct.Memory* %call_4a6b38, %struct.Memory** %MEMORY

  %loadBr_4a6b38 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6b38 = icmp eq i8 %loadBr_4a6b38, 1
  br i1 %cmpBr_4a6b38, label %block_.L_4a71bc, label %block_4a6b3e

block_4a6b3e:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a6b3e	 Bytes: 7
  %loadMem_4a6b3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b3e = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b3e)
  store %struct.Memory* %call_4a6b3e, %struct.Memory** %MEMORY

  ; Code: .L_4a6b45:	 RIP: 4a6b45	 Bytes: 0
  br label %block_.L_4a6b45
block_.L_4a6b45:

  ; Code: cmpl $0x8, -0x2c(%rbp)	 RIP: 4a6b45	 Bytes: 4
  %loadMem_4a6b45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b45 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b45)
  store %struct.Memory* %call_4a6b45, %struct.Memory** %MEMORY

  ; Code: jge .L_4a71a9	 RIP: 4a6b49	 Bytes: 6
  %loadMem_4a6b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b49 = call %struct.Memory* @routine_jge_.L_4a71a9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b49, i8* %BRANCH_TAKEN, i64 1632, i64 6, i64 6)
  store %struct.Memory* %call_4a6b49, %struct.Memory** %MEMORY

  %loadBr_4a6b49 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6b49 = icmp eq i8 %loadBr_4a6b49, 1
  br i1 %cmpBr_4a6b49, label %block_.L_4a71a9, label %block_4a6b4f

block_4a6b4f:
  ; Code: xorl %eax, %eax	 RIP: 4a6b4f	 Bytes: 2
  %loadMem_4a6b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b4f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b4f)
  store %struct.Memory* %call_4a6b4f, %struct.Memory** %MEMORY

  ; Code: movq $0x6f8f20, %rcx	 RIP: 4a6b51	 Bytes: 10
  %loadMem_4a6b51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b51 = call %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b51)
  store %struct.Memory* %call_4a6b51, %struct.Memory** %MEMORY

  ; Code: movq $0x6d2ec0, %rdx	 RIP: 4a6b5b	 Bytes: 10
  %loadMem_4a6b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b5b = call %struct.Memory* @routine_movq__0x6d2ec0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b5b)
  store %struct.Memory* %call_4a6b5b, %struct.Memory** %MEMORY

  ; Code: movq $0x722ff0, %rsi	 RIP: 4a6b65	 Bytes: 10
  %loadMem_4a6b65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b65 = call %struct.Memory* @routine_movq__0x722ff0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b65)
  store %struct.Memory* %call_4a6b65, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4a6b6f	 Bytes: 4
  %loadMem_4a6b6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b6f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b6f)
  store %struct.Memory* %call_4a6b6f, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 4a6b73	 Bytes: 4
  %loadMem_4a6b73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b73 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b73)
  store %struct.Memory* %call_4a6b73, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6b77	 Bytes: 3
  %loadMem_4a6b77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b77 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b77)
  store %struct.Memory* %call_4a6b77, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 4a6b7a	 Bytes: 4
  %loadMem_4a6b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b7a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b7a)
  store %struct.Memory* %call_4a6b7a, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdi,4), %r8d	 RIP: 4a6b7e	 Bytes: 4
  %loadMem_4a6b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b7e = call %struct.Memory* @routine_movl___rsi__rdi_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b7e)
  store %struct.Memory* %call_4a6b7e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a6b82	 Bytes: 4
  %loadMem_4a6b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b82 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b82)
  store %struct.Memory* %call_4a6b82, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a6b86	 Bytes: 4
  %loadMem_4a6b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b86 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b86)
  store %struct.Memory* %call_4a6b86, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 4a6b8a	 Bytes: 3
  %loadMem_4a6b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b8a = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b8a)
  store %struct.Memory* %call_4a6b8a, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 4a6b8d	 Bytes: 3
  %loadMem_4a6b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b8d = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b8d)
  store %struct.Memory* %call_4a6b8d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a6b90	 Bytes: 4
  %loadMem_4a6b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b90 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b90)
  store %struct.Memory* %call_4a6b90, %struct.Memory** %MEMORY

  ; Code: movl (%rdi,%rsi,4), %r9d	 RIP: 4a6b94	 Bytes: 4
  %loadMem_4a6b94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b94 = call %struct.Memory* @routine_movl___rdi__rsi_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b94)
  store %struct.Memory* %call_4a6b94, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4a6b98	 Bytes: 4
  %loadMem_4a6b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b98 = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b98)
  store %struct.Memory* %call_4a6b98, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %r8d	 RIP: 4a6b9c	 Bytes: 3
  %loadMem_4a6b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b9c = call %struct.Memory* @routine_subl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b9c)
  store %struct.Memory* %call_4a6b9c, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x270(%rbp)	 RIP: 4a6b9f	 Bytes: 7
  %loadMem_4a6b9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6b9f = call %struct.Memory* @routine_movl__r8d__MINUS0x270__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6b9f)
  store %struct.Memory* %call_4a6b9f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a6ba6	 Bytes: 4
  %loadMem_4a6ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ba6 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ba6)
  store %struct.Memory* %call_4a6ba6, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4a6baa	 Bytes: 4
  %loadMem_4a6baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6baa = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6baa)
  store %struct.Memory* %call_4a6baa, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a6bae	 Bytes: 3
  %loadMem_4a6bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bae = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bae)
  store %struct.Memory* %call_4a6bae, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a6bb1	 Bytes: 4
  %loadMem_4a6bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bb1 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bb1)
  store %struct.Memory* %call_4a6bb1, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %r8d	 RIP: 4a6bb5	 Bytes: 4
  %loadMem_4a6bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bb5 = call %struct.Memory* @routine_movl___rdx__rsi_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bb5)
  store %struct.Memory* %call_4a6bb5, %struct.Memory** %MEMORY

  ; Code: addl -0x270(%rbp), %r8d	 RIP: 4a6bb9	 Bytes: 7
  %loadMem_4a6bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bb9 = call %struct.Memory* @routine_addl_MINUS0x270__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bb9)
  store %struct.Memory* %call_4a6bb9, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x260(%rbp)	 RIP: 4a6bc0	 Bytes: 7
  %loadMem_4a6bc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bc0 = call %struct.Memory* @routine_movl__r8d__MINUS0x260__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bc0)
  store %struct.Memory* %call_4a6bc0, %struct.Memory** %MEMORY

  ; Code: movl -0x270(%rbp), %r8d	 RIP: 4a6bc7	 Bytes: 7
  %loadMem_4a6bc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bc7 = call %struct.Memory* @routine_movl_MINUS0x270__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bc7)
  store %struct.Memory* %call_4a6bc7, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a6bce	 Bytes: 4
  %loadMem_4a6bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bce = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bce)
  store %struct.Memory* %call_4a6bce, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a6bd2	 Bytes: 4
  %loadMem_4a6bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bd2 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bd2)
  store %struct.Memory* %call_4a6bd2, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 4a6bd6	 Bytes: 3
  %loadMem_4a6bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bd6 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bd6)
  store %struct.Memory* %call_4a6bd6, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4a6bd9	 Bytes: 3
  %loadMem_4a6bd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bd9 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bd9)
  store %struct.Memory* %call_4a6bd9, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a6bdc	 Bytes: 4
  %loadMem_4a6bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bdc = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bdc)
  store %struct.Memory* %call_4a6bdc, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %r9d	 RIP: 4a6be0	 Bytes: 4
  %loadMem_4a6be0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6be0 = call %struct.Memory* @routine_movl___rsi__rdx_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6be0)
  store %struct.Memory* %call_4a6be0, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4a6be4	 Bytes: 4
  %loadMem_4a6be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6be4 = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6be4)
  store %struct.Memory* %call_4a6be4, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %r8d	 RIP: 4a6be8	 Bytes: 3
  %loadMem_4a6be8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6be8 = call %struct.Memory* @routine_subl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6be8)
  store %struct.Memory* %call_4a6be8, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x264(%rbp)	 RIP: 4a6beb	 Bytes: 7
  %loadMem_4a6beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6beb = call %struct.Memory* @routine_movl__r8d__MINUS0x264__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6beb)
  store %struct.Memory* %call_4a6beb, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %r8d	 RIP: 4a6bf2	 Bytes: 7
  %loadMem_4a6bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bf2 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bf2)
  store %struct.Memory* %call_4a6bf2, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a6bf9	 Bytes: 4
  %loadMem_4a6bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bf9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bf9)
  store %struct.Memory* %call_4a6bf9, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4a6bfd	 Bytes: 4
  %loadMem_4a6bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6bfd = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6bfd)
  store %struct.Memory* %call_4a6bfd, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6c01	 Bytes: 3
  %loadMem_4a6c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c01 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c01)
  store %struct.Memory* %call_4a6c01, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a6c04	 Bytes: 4
  %loadMem_4a6c04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c04 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c04)
  store %struct.Memory* %call_4a6c04, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %r8d	 RIP: 4a6c08	 Bytes: 4
  %loadMem_4a6c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c08 = call %struct.Memory* @routine_addl___rcx__rdx_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c08)
  store %struct.Memory* %call_4a6c08, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x25c(%rbp)	 RIP: 4a6c0c	 Bytes: 7
  %loadMem_4a6c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c0c = call %struct.Memory* @routine_movl__r8d__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c0c)
  store %struct.Memory* %call_4a6c0c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a6c13	 Bytes: 8
  %loadMem_4a6c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c13 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c13)
  store %struct.Memory* %call_4a6c13, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rcx), %r8d	 RIP: 4a6c1b	 Bytes: 7
  %loadMem_4a6c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c1b = call %struct.Memory* @routine_movl_0x11bf0__rcx____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c1b)
  store %struct.Memory* %call_4a6c1b, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %r9d	 RIP: 4a6c22	 Bytes: 7
  %loadMem_4a6c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c22 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c22)
  store %struct.Memory* %call_4a6c22, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a6c29	 Bytes: 8
  %loadMem_4a6c29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c29 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c29)
  store %struct.Memory* %call_4a6c29, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a6c31	 Bytes: 7
  %loadMem_4a6c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c31 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c31)
  store %struct.Memory* %call_4a6c31, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a6c38	 Bytes: 7
  %loadMem_4a6c38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c38 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c38)
  store %struct.Memory* %call_4a6c38, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a6c3f	 Bytes: 4
  %loadMem_4a6c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c3f = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c3f)
  store %struct.Memory* %call_4a6c3f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6c43	 Bytes: 3
  %loadMem_4a6c43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c43 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c43)
  store %struct.Memory* %call_4a6c43, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r10d	 RIP: 4a6c46	 Bytes: 7
  %loadMem_4a6c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c46 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c46)
  store %struct.Memory* %call_4a6c46, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r10d	 RIP: 4a6c4d	 Bytes: 4
  %loadMem_4a6c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c4d = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c4d)
  store %struct.Memory* %call_4a6c4d, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdx	 RIP: 4a6c51	 Bytes: 3
  %loadMem_4a6c51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c51 = call %struct.Memory* @routine_movslq__r10d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c51)
  store %struct.Memory* %call_4a6c51, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a6c54	 Bytes: 4
  %loadMem_4a6c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c54 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c54)
  store %struct.Memory* %call_4a6c54, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6c58	 Bytes: 3
  %loadMem_4a6c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c58 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c58)
  store %struct.Memory* %call_4a6c58, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r10d	 RIP: 4a6c5b	 Bytes: 7
  %loadMem_4a6c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c5b = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c5b)
  store %struct.Memory* %call_4a6c5b, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r10d	 RIP: 4a6c62	 Bytes: 4
  %loadMem_4a6c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c62 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c62)
  store %struct.Memory* %call_4a6c62, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdx	 RIP: 4a6c66	 Bytes: 3
  %loadMem_4a6c66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c66 = call %struct.Memory* @routine_movslq__r10d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c66)
  store %struct.Memory* %call_4a6c66, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %r10d	 RIP: 4a6c69	 Bytes: 5
  %loadMem_4a6c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c69 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c69)
  store %struct.Memory* %call_4a6c69, %struct.Memory** %MEMORY

  ; Code: addl %r10d, %r9d	 RIP: 4a6c6e	 Bytes: 3
  %loadMem_4a6c6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c6e = call %struct.Memory* @routine_addl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c6e)
  store %struct.Memory* %call_4a6c6e, %struct.Memory** %MEMORY

  ; Code: cmpl %r9d, %eax	 RIP: 4a6c71	 Bytes: 3
  %loadMem_4a6c71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c71 = call %struct.Memory* @routine_cmpl__r9d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c71)
  store %struct.Memory* %call_4a6c71, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x59c(%rbp)	 RIP: 4a6c74	 Bytes: 7
  %loadMem_4a6c74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c74 = call %struct.Memory* @routine_movl__r8d__MINUS0x59c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c74)
  store %struct.Memory* %call_4a6c74, %struct.Memory** %MEMORY

  ; Code: jle .L_4a6c8e	 RIP: 4a6c7b	 Bytes: 6
  %loadMem_4a6c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c7b = call %struct.Memory* @routine_jle_.L_4a6c8e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c7b, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a6c7b, %struct.Memory** %MEMORY

  %loadBr_4a6c7b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6c7b = icmp eq i8 %loadBr_4a6c7b, 1
  br i1 %cmpBr_4a6c7b, label %block_.L_4a6c8e, label %block_4a6c81

block_4a6c81:
  ; Code: xorl %eax, %eax	 RIP: 4a6c81	 Bytes: 2
  %loadMem_4a6c81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c81 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c81)
  store %struct.Memory* %call_4a6c81, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5a0(%rbp)	 RIP: 4a6c83	 Bytes: 6
  %loadMem_4a6c83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c83 = call %struct.Memory* @routine_movl__eax__MINUS0x5a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c83)
  store %struct.Memory* %call_4a6c83, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6cdc	 RIP: 4a6c89	 Bytes: 5
  %loadMem_4a6c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c89 = call %struct.Memory* @routine_jmpq_.L_4a6cdc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c89, i64 83, i64 5)
  store %struct.Memory* %call_4a6c89, %struct.Memory** %MEMORY

  br label %block_.L_4a6cdc

  ; Code: .L_4a6c8e:	 RIP: 4a6c8e	 Bytes: 0
block_.L_4a6c8e:

  ; Code: movl -0x264(%rbp), %eax	 RIP: 4a6c8e	 Bytes: 6
  %loadMem_4a6c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c8e = call %struct.Memory* @routine_movl_MINUS0x264__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c8e)
  store %struct.Memory* %call_4a6c8e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a6c94	 Bytes: 8
  %loadMem_4a6c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c94 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c94)
  store %struct.Memory* %call_4a6c94, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a6c9c	 Bytes: 7
  %loadMem_4a6c9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6c9c = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6c9c)
  store %struct.Memory* %call_4a6c9c, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a6ca3	 Bytes: 7
  %loadMem_4a6ca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ca3 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ca3)
  store %struct.Memory* %call_4a6ca3, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a6caa	 Bytes: 4
  %loadMem_4a6caa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6caa = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6caa)
  store %struct.Memory* %call_4a6caa, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6cae	 Bytes: 3
  %loadMem_4a6cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cae = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cae)
  store %struct.Memory* %call_4a6cae, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a6cb1	 Bytes: 6
  %loadMem_4a6cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cb1 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cb1)
  store %struct.Memory* %call_4a6cb1, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a6cb7	 Bytes: 3
  %loadMem_4a6cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cb7 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cb7)
  store %struct.Memory* %call_4a6cb7, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a6cba	 Bytes: 3
  %loadMem_4a6cba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cba = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cba)
  store %struct.Memory* %call_4a6cba, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a6cbd	 Bytes: 4
  %loadMem_4a6cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cbd = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cbd)
  store %struct.Memory* %call_4a6cbd, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6cc1	 Bytes: 3
  %loadMem_4a6cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cc1 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cc1)
  store %struct.Memory* %call_4a6cc1, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a6cc4	 Bytes: 6
  %loadMem_4a6cc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cc4 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cc4)
  store %struct.Memory* %call_4a6cc4, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a6cca	 Bytes: 3
  %loadMem_4a6cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cca = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cca)
  store %struct.Memory* %call_4a6cca, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a6ccd	 Bytes: 3
  %loadMem_4a6ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ccd = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ccd)
  store %struct.Memory* %call_4a6ccd, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a6cd0	 Bytes: 4
  %loadMem_4a6cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cd0 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cd0)
  store %struct.Memory* %call_4a6cd0, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a6cd4	 Bytes: 2
  %loadMem_4a6cd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cd4 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cd4)
  store %struct.Memory* %call_4a6cd4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5a0(%rbp)	 RIP: 4a6cd6	 Bytes: 6
  %loadMem_4a6cd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cd6 = call %struct.Memory* @routine_movl__eax__MINUS0x5a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cd6)
  store %struct.Memory* %call_4a6cd6, %struct.Memory** %MEMORY

  ; Code: .L_4a6cdc:	 RIP: 4a6cdc	 Bytes: 0
  br label %block_.L_4a6cdc
block_.L_4a6cdc:

  ; Code: movl -0x5a0(%rbp), %eax	 RIP: 4a6cdc	 Bytes: 6
  %loadMem_4a6cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cdc = call %struct.Memory* @routine_movl_MINUS0x5a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cdc)
  store %struct.Memory* %call_4a6cdc, %struct.Memory** %MEMORY

  ; Code: movl -0x59c(%rbp), %ecx	 RIP: 4a6ce2	 Bytes: 6
  %loadMem_4a6ce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ce2 = call %struct.Memory* @routine_movl_MINUS0x59c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ce2)
  store %struct.Memory* %call_4a6ce2, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4a6ce8	 Bytes: 2
  %loadMem_4a6ce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ce8 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ce8)
  store %struct.Memory* %call_4a6ce8, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6d09	 RIP: 4a6cea	 Bytes: 6
  %loadMem_4a6cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cea = call %struct.Memory* @routine_jge_.L_4a6d09(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cea, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4a6cea, %struct.Memory** %MEMORY

  %loadBr_4a6cea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6cea = icmp eq i8 %loadBr_4a6cea, 1
  br i1 %cmpBr_4a6cea, label %block_.L_4a6d09, label %block_4a6cf0

block_4a6cf0:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a6cf0	 Bytes: 8
  %loadMem_4a6cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cf0 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cf0)
  store %struct.Memory* %call_4a6cf0, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 4a6cf8	 Bytes: 6
  %loadMem_4a6cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cf8 = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cf8)
  store %struct.Memory* %call_4a6cf8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5a4(%rbp)	 RIP: 4a6cfe	 Bytes: 6
  %loadMem_4a6cfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6cfe = call %struct.Memory* @routine_movl__ecx__MINUS0x5a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6cfe)
  store %struct.Memory* %call_4a6cfe, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6dc2	 RIP: 4a6d04	 Bytes: 5
  %loadMem_4a6d04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d04 = call %struct.Memory* @routine_jmpq_.L_4a6dc2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d04, i64 190, i64 5)
  store %struct.Memory* %call_4a6d04, %struct.Memory** %MEMORY

  br label %block_.L_4a6dc2

  ; Code: .L_4a6d09:	 RIP: 4a6d09	 Bytes: 0
block_.L_4a6d09:

  ; Code: xorl %eax, %eax	 RIP: 4a6d09	 Bytes: 2
  %loadMem_4a6d09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d09 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d09)
  store %struct.Memory* %call_4a6d09, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %ecx	 RIP: 4a6d0b	 Bytes: 6
  %loadMem_4a6d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d0b = call %struct.Memory* @routine_movl_MINUS0x264__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d0b)
  store %struct.Memory* %call_4a6d0b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a6d11	 Bytes: 8
  %loadMem_4a6d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d11 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d11)
  store %struct.Memory* %call_4a6d11, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rdx	 RIP: 4a6d19	 Bytes: 7
  %loadMem_4a6d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d19 = call %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d19)
  store %struct.Memory* %call_4a6d19, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rsi	 RIP: 4a6d20	 Bytes: 7
  %loadMem_4a6d20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d20 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d20)
  store %struct.Memory* %call_4a6d20, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 4a6d27	 Bytes: 4
  %loadMem_4a6d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d27 = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d27)
  store %struct.Memory* %call_4a6d27, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a6d2b	 Bytes: 3
  %loadMem_4a6d2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d2b = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d2b)
  store %struct.Memory* %call_4a6d2b, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %edi	 RIP: 4a6d2e	 Bytes: 6
  %loadMem_4a6d2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d2e = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d2e)
  store %struct.Memory* %call_4a6d2e, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4a6d34	 Bytes: 3
  %loadMem_4a6d34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d34 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d34)
  store %struct.Memory* %call_4a6d34, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 4a6d37	 Bytes: 3
  %loadMem_4a6d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d37 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d37)
  store %struct.Memory* %call_4a6d37, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 4a6d3a	 Bytes: 4
  %loadMem_4a6d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d3a = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d3a)
  store %struct.Memory* %call_4a6d3a, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a6d3e	 Bytes: 3
  %loadMem_4a6d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d3e = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d3e)
  store %struct.Memory* %call_4a6d3e, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %edi	 RIP: 4a6d41	 Bytes: 6
  %loadMem_4a6d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d41 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d41)
  store %struct.Memory* %call_4a6d41, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 4a6d47	 Bytes: 3
  %loadMem_4a6d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d47 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d47)
  store %struct.Memory* %call_4a6d47, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 4a6d4a	 Bytes: 3
  %loadMem_4a6d4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d4a = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d4a)
  store %struct.Memory* %call_4a6d4a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 4a6d4d	 Bytes: 4
  %loadMem_4a6d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d4d = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d4d)
  store %struct.Memory* %call_4a6d4d, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 4a6d51	 Bytes: 2
  %loadMem_4a6d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d51 = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d51)
  store %struct.Memory* %call_4a6d51, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4a6d53	 Bytes: 2
  %loadMem_4a6d53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d53 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d53)
  store %struct.Memory* %call_4a6d53, %struct.Memory** %MEMORY

  ; Code: jle .L_4a6d68	 RIP: 4a6d55	 Bytes: 6
  %loadMem_4a6d55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d55 = call %struct.Memory* @routine_jle_.L_4a6d68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d55, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a6d55, %struct.Memory** %MEMORY

  %loadBr_4a6d55 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6d55 = icmp eq i8 %loadBr_4a6d55, 1
  br i1 %cmpBr_4a6d55, label %block_.L_4a6d68, label %block_4a6d5b

block_4a6d5b:
  ; Code: xorl %eax, %eax	 RIP: 4a6d5b	 Bytes: 2
  %loadMem_4a6d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d5b = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d5b)
  store %struct.Memory* %call_4a6d5b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5a8(%rbp)	 RIP: 4a6d5d	 Bytes: 6
  %loadMem_4a6d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d5d = call %struct.Memory* @routine_movl__eax__MINUS0x5a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d5d)
  store %struct.Memory* %call_4a6d5d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6db6	 RIP: 4a6d63	 Bytes: 5
  %loadMem_4a6d63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d63 = call %struct.Memory* @routine_jmpq_.L_4a6db6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d63, i64 83, i64 5)
  store %struct.Memory* %call_4a6d63, %struct.Memory** %MEMORY

  br label %block_.L_4a6db6

  ; Code: .L_4a6d68:	 RIP: 4a6d68	 Bytes: 0
block_.L_4a6d68:

  ; Code: movl -0x264(%rbp), %eax	 RIP: 4a6d68	 Bytes: 6
  %loadMem_4a6d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d68 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d68)
  store %struct.Memory* %call_4a6d68, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a6d6e	 Bytes: 8
  %loadMem_4a6d6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d6e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d6e)
  store %struct.Memory* %call_4a6d6e, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a6d76	 Bytes: 7
  %loadMem_4a6d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d76 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d76)
  store %struct.Memory* %call_4a6d76, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a6d7d	 Bytes: 7
  %loadMem_4a6d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d7d = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d7d)
  store %struct.Memory* %call_4a6d7d, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a6d84	 Bytes: 4
  %loadMem_4a6d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d84 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d84)
  store %struct.Memory* %call_4a6d84, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6d88	 Bytes: 3
  %loadMem_4a6d88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d88 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d88)
  store %struct.Memory* %call_4a6d88, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a6d8b	 Bytes: 6
  %loadMem_4a6d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d8b = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d8b)
  store %struct.Memory* %call_4a6d8b, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a6d91	 Bytes: 3
  %loadMem_4a6d91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d91 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d91)
  store %struct.Memory* %call_4a6d91, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a6d94	 Bytes: 3
  %loadMem_4a6d94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d94 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d94)
  store %struct.Memory* %call_4a6d94, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a6d97	 Bytes: 4
  %loadMem_4a6d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d97 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d97)
  store %struct.Memory* %call_4a6d97, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6d9b	 Bytes: 3
  %loadMem_4a6d9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d9b = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d9b)
  store %struct.Memory* %call_4a6d9b, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a6d9e	 Bytes: 6
  %loadMem_4a6d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6d9e = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6d9e)
  store %struct.Memory* %call_4a6d9e, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a6da4	 Bytes: 3
  %loadMem_4a6da4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6da4 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6da4)
  store %struct.Memory* %call_4a6da4, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a6da7	 Bytes: 3
  %loadMem_4a6da7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6da7 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6da7)
  store %struct.Memory* %call_4a6da7, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a6daa	 Bytes: 4
  %loadMem_4a6daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6daa = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6daa)
  store %struct.Memory* %call_4a6daa, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a6dae	 Bytes: 2
  %loadMem_4a6dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dae = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dae)
  store %struct.Memory* %call_4a6dae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5a8(%rbp)	 RIP: 4a6db0	 Bytes: 6
  %loadMem_4a6db0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6db0 = call %struct.Memory* @routine_movl__eax__MINUS0x5a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6db0)
  store %struct.Memory* %call_4a6db0, %struct.Memory** %MEMORY

  ; Code: .L_4a6db6:	 RIP: 4a6db6	 Bytes: 0
  br label %block_.L_4a6db6
block_.L_4a6db6:

  ; Code: movl -0x5a8(%rbp), %eax	 RIP: 4a6db6	 Bytes: 6
  %loadMem_4a6db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6db6 = call %struct.Memory* @routine_movl_MINUS0x5a8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6db6)
  store %struct.Memory* %call_4a6db6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5a4(%rbp)	 RIP: 4a6dbc	 Bytes: 6
  %loadMem_4a6dbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dbc = call %struct.Memory* @routine_movl__eax__MINUS0x5a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dbc)
  store %struct.Memory* %call_4a6dbc, %struct.Memory** %MEMORY

  ; Code: .L_4a6dc2:	 RIP: 4a6dc2	 Bytes: 0
  br label %block_.L_4a6dc2
block_.L_4a6dc2:

  ; Code: movl -0x5a4(%rbp), %eax	 RIP: 4a6dc2	 Bytes: 6
  %loadMem_4a6dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dc2 = call %struct.Memory* @routine_movl_MINUS0x5a4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dc2)
  store %struct.Memory* %call_4a6dc2, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 4a6dc8	 Bytes: 2
  %loadMem_4a6dc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dc8 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dc8)
  store %struct.Memory* %call_4a6dc8, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 4a6dca	 Bytes: 3
  %loadMem_4a6dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dca = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dca)
  store %struct.Memory* %call_4a6dca, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rsi	 RIP: 4a6dcd	 Bytes: 8
  %loadMem_4a6dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dcd = call %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dcd)
  store %struct.Memory* %call_4a6dcd, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rsi), %rsi	 RIP: 4a6dd5	 Bytes: 7
  %loadMem_4a6dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dd5 = call %struct.Memory* @routine_movq_0x1940__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dd5)
  store %struct.Memory* %call_4a6dd5, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 4a6ddc	 Bytes: 3
  %loadMem_4a6ddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ddc = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ddc)
  store %struct.Memory* %call_4a6ddc, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %eax	 RIP: 4a6ddf	 Bytes: 6
  %loadMem_4a6ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ddf = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ddf)
  store %struct.Memory* %call_4a6ddf, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 4a6de5	 Bytes: 3
  %loadMem_4a6de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6de5 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6de5)
  store %struct.Memory* %call_4a6de5, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4a6de8	 Bytes: 3
  %loadMem_4a6de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6de8 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6de8)
  store %struct.Memory* %call_4a6de8, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 4a6deb	 Bytes: 4
  %loadMem_4a6deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6deb = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6deb)
  store %struct.Memory* %call_4a6deb, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 4a6def	 Bytes: 6
  %loadMem_4a6def = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6def = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6def)
  store %struct.Memory* %call_4a6def, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 4a6df5	 Bytes: 3
  %loadMem_4a6df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6df5 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6df5)
  store %struct.Memory* %call_4a6df5, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4a6df8	 Bytes: 3
  %loadMem_4a6df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6df8 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6df8)
  store %struct.Memory* %call_4a6df8, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi,%rdi,2)	 RIP: 4a6dfb	 Bytes: 4
  %loadMem_4a6dfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dfb = call %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dfb)
  store %struct.Memory* %call_4a6dfb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a6dff	 Bytes: 8
  %loadMem_4a6dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6dff = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6dff)
  store %struct.Memory* %call_4a6dff, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rsi), %eax	 RIP: 4a6e07	 Bytes: 6
  %loadMem_4a6e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e07 = call %struct.Memory* @routine_movl_0x11bec__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e07)
  store %struct.Memory* %call_4a6e07, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %r8d	 RIP: 4a6e0d	 Bytes: 7
  %loadMem_4a6e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e0d = call %struct.Memory* @routine_movl_MINUS0x260__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e0d)
  store %struct.Memory* %call_4a6e0d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a6e14	 Bytes: 8
  %loadMem_4a6e14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e14 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e14)
  store %struct.Memory* %call_4a6e14, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rsi	 RIP: 4a6e1c	 Bytes: 7
  %loadMem_4a6e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e1c = call %struct.Memory* @routine_addq__0x1cb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e1c)
  store %struct.Memory* %call_4a6e1c, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdi	 RIP: 4a6e23	 Bytes: 4
  %loadMem_4a6e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e23 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e23)
  store %struct.Memory* %call_4a6e23, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdi	 RIP: 4a6e27	 Bytes: 4
  %loadMem_4a6e27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e27 = call %struct.Memory* @routine_shlq__0x7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e27)
  store %struct.Memory* %call_4a6e27, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6e2b	 Bytes: 3
  %loadMem_4a6e2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e2b = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e2b)
  store %struct.Memory* %call_4a6e2b, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 4a6e2e	 Bytes: 4
  %loadMem_4a6e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e2e = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e2e)
  store %struct.Memory* %call_4a6e2e, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 4a6e32	 Bytes: 4
  %loadMem_4a6e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e32 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e32)
  store %struct.Memory* %call_4a6e32, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6e36	 Bytes: 3
  %loadMem_4a6e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e36 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e36)
  store %struct.Memory* %call_4a6e36, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4a6e39	 Bytes: 4
  %loadMem_4a6e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e39 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e39)
  store %struct.Memory* %call_4a6e39, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 4a6e3d	 Bytes: 5
  %loadMem_4a6e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e3d = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e3d)
  store %struct.Memory* %call_4a6e3d, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %r8d	 RIP: 4a6e42	 Bytes: 3
  %loadMem_4a6e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e42 = call %struct.Memory* @routine_addl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e42)
  store %struct.Memory* %call_4a6e42, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %ecx	 RIP: 4a6e45	 Bytes: 3
  %loadMem_4a6e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e45 = call %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e45)
  store %struct.Memory* %call_4a6e45, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5ac(%rbp)	 RIP: 4a6e48	 Bytes: 6
  %loadMem_4a6e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e48 = call %struct.Memory* @routine_movl__eax__MINUS0x5ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e48)
  store %struct.Memory* %call_4a6e48, %struct.Memory** %MEMORY

  ; Code: jle .L_4a6e61	 RIP: 4a6e4e	 Bytes: 6
  %loadMem_4a6e4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e4e = call %struct.Memory* @routine_jle_.L_4a6e61(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e4e, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a6e4e, %struct.Memory** %MEMORY

  %loadBr_4a6e4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6e4e = icmp eq i8 %loadBr_4a6e4e, 1
  br i1 %cmpBr_4a6e4e, label %block_.L_4a6e61, label %block_4a6e54

block_4a6e54:
  ; Code: xorl %eax, %eax	 RIP: 4a6e54	 Bytes: 2
  %loadMem_4a6e54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e54 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e54)
  store %struct.Memory* %call_4a6e54, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5b0(%rbp)	 RIP: 4a6e56	 Bytes: 6
  %loadMem_4a6e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e56 = call %struct.Memory* @routine_movl__eax__MINUS0x5b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e56)
  store %struct.Memory* %call_4a6e56, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6e9c	 RIP: 4a6e5c	 Bytes: 5
  %loadMem_4a6e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e5c = call %struct.Memory* @routine_jmpq_.L_4a6e9c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e5c, i64 64, i64 5)
  store %struct.Memory* %call_4a6e5c, %struct.Memory** %MEMORY

  br label %block_.L_4a6e9c

  ; Code: .L_4a6e61:	 RIP: 4a6e61	 Bytes: 0
block_.L_4a6e61:

  ; Code: movl -0x260(%rbp), %eax	 RIP: 4a6e61	 Bytes: 6
  %loadMem_4a6e61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e61 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e61)
  store %struct.Memory* %call_4a6e61, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a6e67	 Bytes: 8
  %loadMem_4a6e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e67 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e67)
  store %struct.Memory* %call_4a6e67, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rcx	 RIP: 4a6e6f	 Bytes: 7
  %loadMem_4a6e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e6f = call %struct.Memory* @routine_addq__0x1cb8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e6f)
  store %struct.Memory* %call_4a6e6f, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 4a6e76	 Bytes: 4
  %loadMem_4a6e76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e76 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e76)
  store %struct.Memory* %call_4a6e76, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdx	 RIP: 4a6e7a	 Bytes: 4
  %loadMem_4a6e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e7a = call %struct.Memory* @routine_shlq__0x7___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e7a)
  store %struct.Memory* %call_4a6e7a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6e7e	 Bytes: 3
  %loadMem_4a6e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e7e = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e7e)
  store %struct.Memory* %call_4a6e7e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a6e81	 Bytes: 4
  %loadMem_4a6e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e81 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e81)
  store %struct.Memory* %call_4a6e81, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4a6e85	 Bytes: 4
  %loadMem_4a6e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e85 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e85)
  store %struct.Memory* %call_4a6e85, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6e89	 Bytes: 3
  %loadMem_4a6e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e89 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e89)
  store %struct.Memory* %call_4a6e89, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a6e8c	 Bytes: 4
  %loadMem_4a6e8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e8c = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e8c)
  store %struct.Memory* %call_4a6e8c, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a6e90	 Bytes: 4
  %loadMem_4a6e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e90 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e90)
  store %struct.Memory* %call_4a6e90, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a6e94	 Bytes: 2
  %loadMem_4a6e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e94 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e94)
  store %struct.Memory* %call_4a6e94, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5b0(%rbp)	 RIP: 4a6e96	 Bytes: 6
  %loadMem_4a6e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e96 = call %struct.Memory* @routine_movl__eax__MINUS0x5b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e96)
  store %struct.Memory* %call_4a6e96, %struct.Memory** %MEMORY

  ; Code: .L_4a6e9c:	 RIP: 4a6e9c	 Bytes: 0
  br label %block_.L_4a6e9c
block_.L_4a6e9c:

  ; Code: movl -0x5b0(%rbp), %eax	 RIP: 4a6e9c	 Bytes: 6
  %loadMem_4a6e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6e9c = call %struct.Memory* @routine_movl_MINUS0x5b0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6e9c)
  store %struct.Memory* %call_4a6e9c, %struct.Memory** %MEMORY

  ; Code: movl -0x5ac(%rbp), %ecx	 RIP: 4a6ea2	 Bytes: 6
  %loadMem_4a6ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ea2 = call %struct.Memory* @routine_movl_MINUS0x5ac__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ea2)
  store %struct.Memory* %call_4a6ea2, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4a6ea8	 Bytes: 2
  %loadMem_4a6ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ea8 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ea8)
  store %struct.Memory* %call_4a6ea8, %struct.Memory** %MEMORY

  ; Code: jge .L_4a6ec9	 RIP: 4a6eaa	 Bytes: 6
  %loadMem_4a6eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6eaa = call %struct.Memory* @routine_jge_.L_4a6ec9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6eaa, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4a6eaa, %struct.Memory** %MEMORY

  %loadBr_4a6eaa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6eaa = icmp eq i8 %loadBr_4a6eaa, 1
  br i1 %cmpBr_4a6eaa, label %block_.L_4a6ec9, label %block_4a6eb0

block_4a6eb0:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a6eb0	 Bytes: 8
  %loadMem_4a6eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6eb0 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6eb0)
  store %struct.Memory* %call_4a6eb0, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 4a6eb8	 Bytes: 6
  %loadMem_4a6eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6eb8 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6eb8)
  store %struct.Memory* %call_4a6eb8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5b4(%rbp)	 RIP: 4a6ebe	 Bytes: 6
  %loadMem_4a6ebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ebe = call %struct.Memory* @routine_movl__ecx__MINUS0x5b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ebe)
  store %struct.Memory* %call_4a6ebe, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6f5c	 RIP: 4a6ec4	 Bytes: 5
  %loadMem_4a6ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ec4 = call %struct.Memory* @routine_jmpq_.L_4a6f5c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ec4, i64 152, i64 5)
  store %struct.Memory* %call_4a6ec4, %struct.Memory** %MEMORY

  br label %block_.L_4a6f5c

  ; Code: .L_4a6ec9:	 RIP: 4a6ec9	 Bytes: 0
block_.L_4a6ec9:

  ; Code: xorl %eax, %eax	 RIP: 4a6ec9	 Bytes: 2
  %loadMem_4a6ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ec9 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ec9)
  store %struct.Memory* %call_4a6ec9, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %ecx	 RIP: 4a6ecb	 Bytes: 6
  %loadMem_4a6ecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ecb = call %struct.Memory* @routine_movl_MINUS0x260__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ecb)
  store %struct.Memory* %call_4a6ecb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a6ed1	 Bytes: 8
  %loadMem_4a6ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ed1 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ed1)
  store %struct.Memory* %call_4a6ed1, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rdx	 RIP: 4a6ed9	 Bytes: 7
  %loadMem_4a6ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ed9 = call %struct.Memory* @routine_addq__0x1cb8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ed9)
  store %struct.Memory* %call_4a6ed9, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rsi	 RIP: 4a6ee0	 Bytes: 4
  %loadMem_4a6ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ee0 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ee0)
  store %struct.Memory* %call_4a6ee0, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rsi	 RIP: 4a6ee4	 Bytes: 4
  %loadMem_4a6ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ee4 = call %struct.Memory* @routine_shlq__0x7___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ee4)
  store %struct.Memory* %call_4a6ee4, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a6ee8	 Bytes: 3
  %loadMem_4a6ee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ee8 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ee8)
  store %struct.Memory* %call_4a6ee8, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4a6eeb	 Bytes: 4
  %loadMem_4a6eeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6eeb = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6eeb)
  store %struct.Memory* %call_4a6eeb, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 4a6eef	 Bytes: 4
  %loadMem_4a6eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6eef = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6eef)
  store %struct.Memory* %call_4a6eef, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a6ef3	 Bytes: 3
  %loadMem_4a6ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ef3 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ef3)
  store %struct.Memory* %call_4a6ef3, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4a6ef6	 Bytes: 4
  %loadMem_4a6ef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ef6 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ef6)
  store %struct.Memory* %call_4a6ef6, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 4a6efa	 Bytes: 4
  %loadMem_4a6efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6efa = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6efa)
  store %struct.Memory* %call_4a6efa, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 4a6efe	 Bytes: 2
  %loadMem_4a6efe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6efe = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6efe)
  store %struct.Memory* %call_4a6efe, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4a6f00	 Bytes: 2
  %loadMem_4a6f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f00 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f00)
  store %struct.Memory* %call_4a6f00, %struct.Memory** %MEMORY

  ; Code: jle .L_4a6f15	 RIP: 4a6f02	 Bytes: 6
  %loadMem_4a6f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f02 = call %struct.Memory* @routine_jle_.L_4a6f15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f02, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a6f02, %struct.Memory** %MEMORY

  %loadBr_4a6f02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a6f02 = icmp eq i8 %loadBr_4a6f02, 1
  br i1 %cmpBr_4a6f02, label %block_.L_4a6f15, label %block_4a6f08

block_4a6f08:
  ; Code: xorl %eax, %eax	 RIP: 4a6f08	 Bytes: 2
  %loadMem_4a6f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f08 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f08)
  store %struct.Memory* %call_4a6f08, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5b8(%rbp)	 RIP: 4a6f0a	 Bytes: 6
  %loadMem_4a6f0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f0a = call %struct.Memory* @routine_movl__eax__MINUS0x5b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f0a)
  store %struct.Memory* %call_4a6f0a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6f50	 RIP: 4a6f10	 Bytes: 5
  %loadMem_4a6f10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f10 = call %struct.Memory* @routine_jmpq_.L_4a6f50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f10, i64 64, i64 5)
  store %struct.Memory* %call_4a6f10, %struct.Memory** %MEMORY

  br label %block_.L_4a6f50

  ; Code: .L_4a6f15:	 RIP: 4a6f15	 Bytes: 0
block_.L_4a6f15:

  ; Code: movl -0x260(%rbp), %eax	 RIP: 4a6f15	 Bytes: 6
  %loadMem_4a6f15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f15 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f15)
  store %struct.Memory* %call_4a6f15, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a6f1b	 Bytes: 8
  %loadMem_4a6f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f1b = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f1b)
  store %struct.Memory* %call_4a6f1b, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rcx	 RIP: 4a6f23	 Bytes: 7
  %loadMem_4a6f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f23 = call %struct.Memory* @routine_addq__0x1cb8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f23)
  store %struct.Memory* %call_4a6f23, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 4a6f2a	 Bytes: 4
  %loadMem_4a6f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f2a = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f2a)
  store %struct.Memory* %call_4a6f2a, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rdx	 RIP: 4a6f2e	 Bytes: 4
  %loadMem_4a6f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f2e = call %struct.Memory* @routine_shlq__0x7___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f2e)
  store %struct.Memory* %call_4a6f2e, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6f32	 Bytes: 3
  %loadMem_4a6f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f32 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f32)
  store %struct.Memory* %call_4a6f32, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4a6f35	 Bytes: 4
  %loadMem_4a6f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f35 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f35)
  store %struct.Memory* %call_4a6f35, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4a6f39	 Bytes: 4
  %loadMem_4a6f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f39 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f39)
  store %struct.Memory* %call_4a6f39, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a6f3d	 Bytes: 3
  %loadMem_4a6f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f3d = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f3d)
  store %struct.Memory* %call_4a6f3d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4a6f40	 Bytes: 4
  %loadMem_4a6f40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f40 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f40)
  store %struct.Memory* %call_4a6f40, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a6f44	 Bytes: 4
  %loadMem_4a6f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f44 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f44)
  store %struct.Memory* %call_4a6f44, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a6f48	 Bytes: 2
  %loadMem_4a6f48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f48 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f48)
  store %struct.Memory* %call_4a6f48, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5b8(%rbp)	 RIP: 4a6f4a	 Bytes: 6
  %loadMem_4a6f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f4a = call %struct.Memory* @routine_movl__eax__MINUS0x5b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f4a)
  store %struct.Memory* %call_4a6f4a, %struct.Memory** %MEMORY

  ; Code: .L_4a6f50:	 RIP: 4a6f50	 Bytes: 0
  br label %block_.L_4a6f50
block_.L_4a6f50:

  ; Code: movl -0x5b8(%rbp), %eax	 RIP: 4a6f50	 Bytes: 6
  %loadMem_4a6f50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f50 = call %struct.Memory* @routine_movl_MINUS0x5b8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f50)
  store %struct.Memory* %call_4a6f50, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5b4(%rbp)	 RIP: 4a6f56	 Bytes: 6
  %loadMem_4a6f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f56 = call %struct.Memory* @routine_movl__eax__MINUS0x5b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f56)
  store %struct.Memory* %call_4a6f56, %struct.Memory** %MEMORY

  ; Code: .L_4a6f5c:	 RIP: 4a6f5c	 Bytes: 0
  br label %block_.L_4a6f5c
block_.L_4a6f5c:

  ; Code: movl -0x5b4(%rbp), %eax	 RIP: 4a6f5c	 Bytes: 6
  %loadMem_4a6f5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f5c = call %struct.Memory* @routine_movl_MINUS0x5b4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f5c)
  store %struct.Memory* %call_4a6f5c, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 4a6f62	 Bytes: 2
  %loadMem_4a6f62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f62 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f62)
  store %struct.Memory* %call_4a6f62, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 4a6f64	 Bytes: 3
  %loadMem_4a6f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f64 = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f64)
  store %struct.Memory* %call_4a6f64, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rsi	 RIP: 4a6f67	 Bytes: 8
  %loadMem_4a6f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f67 = call %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f67)
  store %struct.Memory* %call_4a6f67, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rsi), %rsi	 RIP: 4a6f6f	 Bytes: 7
  %loadMem_4a6f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f6f = call %struct.Memory* @routine_movq_0x1918__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f6f)
  store %struct.Memory* %call_4a6f6f, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %eax	 RIP: 4a6f76	 Bytes: 6
  %loadMem_4a6f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f76 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f76)
  store %struct.Memory* %call_4a6f76, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 4a6f7c	 Bytes: 3
  %loadMem_4a6f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f7c = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f7c)
  store %struct.Memory* %call_4a6f7c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4a6f7f	 Bytes: 3
  %loadMem_4a6f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f7f = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f7f)
  store %struct.Memory* %call_4a6f7f, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 4a6f82	 Bytes: 4
  %loadMem_4a6f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f82 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f82)
  store %struct.Memory* %call_4a6f82, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 4a6f86	 Bytes: 6
  %loadMem_4a6f86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f86 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f86)
  store %struct.Memory* %call_4a6f86, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 4a6f8c	 Bytes: 3
  %loadMem_4a6f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f8c = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f8c)
  store %struct.Memory* %call_4a6f8c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4a6f8f	 Bytes: 3
  %loadMem_4a6f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f8f = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f8f)
  store %struct.Memory* %call_4a6f8f, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi,%rdi,2)	 RIP: 4a6f92	 Bytes: 4
  %loadMem_4a6f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f92 = call %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f92)
  store %struct.Memory* %call_4a6f92, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a6f96	 Bytes: 8
  %loadMem_4a6f96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f96 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f96)
  store %struct.Memory* %call_4a6f96, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rsi), %eax	 RIP: 4a6f9e	 Bytes: 6
  %loadMem_4a6f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6f9e = call %struct.Memory* @routine_movl_0x11bf0__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6f9e)
  store %struct.Memory* %call_4a6f9e, %struct.Memory** %MEMORY

  ; Code: movl -0x25c(%rbp), %r8d	 RIP: 4a6fa4	 Bytes: 7
  %loadMem_4a6fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fa4 = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fa4)
  store %struct.Memory* %call_4a6fa4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4a6fab	 Bytes: 8
  %loadMem_4a6fab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fab = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fab)
  store %struct.Memory* %call_4a6fab, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 4a6fb3	 Bytes: 7
  %loadMem_4a6fb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fb3 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fb3)
  store %struct.Memory* %call_4a6fb3, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rsi	 RIP: 4a6fba	 Bytes: 7
  %loadMem_4a6fba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fba = call %struct.Memory* @routine_addq__0x800___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fba)
  store %struct.Memory* %call_4a6fba, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdi	 RIP: 4a6fc1	 Bytes: 7
  %loadMem_4a6fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fc1 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fc1)
  store %struct.Memory* %call_4a6fc1, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 4a6fc8	 Bytes: 4
  %loadMem_4a6fc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fc8 = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fc8)
  store %struct.Memory* %call_4a6fc8, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6fcc	 Bytes: 3
  %loadMem_4a6fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fcc = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fcc)
  store %struct.Memory* %call_4a6fcc, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %r9d	 RIP: 4a6fcf	 Bytes: 7
  %loadMem_4a6fcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fcf = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fcf)
  store %struct.Memory* %call_4a6fcf, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 4a6fd6	 Bytes: 4
  %loadMem_4a6fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fd6 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fd6)
  store %struct.Memory* %call_4a6fd6, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a6fda	 Bytes: 3
  %loadMem_4a6fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fda = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fda)
  store %struct.Memory* %call_4a6fda, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 4a6fdd	 Bytes: 4
  %loadMem_4a6fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fdd = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fdd)
  store %struct.Memory* %call_4a6fdd, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4a6fe1	 Bytes: 3
  %loadMem_4a6fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fe1 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fe1)
  store %struct.Memory* %call_4a6fe1, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %r9d	 RIP: 4a6fe4	 Bytes: 7
  %loadMem_4a6fe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fe4 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fe4)
  store %struct.Memory* %call_4a6fe4, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 4a6feb	 Bytes: 4
  %loadMem_4a6feb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6feb = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6feb)
  store %struct.Memory* %call_4a6feb, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 4a6fef	 Bytes: 3
  %loadMem_4a6fef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6fef = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6fef)
  store %struct.Memory* %call_4a6fef, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 4a6ff2	 Bytes: 5
  %loadMem_4a6ff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ff2 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ff2)
  store %struct.Memory* %call_4a6ff2, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %r8d	 RIP: 4a6ff7	 Bytes: 3
  %loadMem_4a6ff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ff7 = call %struct.Memory* @routine_addl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ff7)
  store %struct.Memory* %call_4a6ff7, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %ecx	 RIP: 4a6ffa	 Bytes: 3
  %loadMem_4a6ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ffa = call %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ffa)
  store %struct.Memory* %call_4a6ffa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5bc(%rbp)	 RIP: 4a6ffd	 Bytes: 6
  %loadMem_4a6ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a6ffd = call %struct.Memory* @routine_movl__eax__MINUS0x5bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a6ffd)
  store %struct.Memory* %call_4a6ffd, %struct.Memory** %MEMORY

  ; Code: jle .L_4a7016	 RIP: 4a7003	 Bytes: 6
  %loadMem_4a7003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7003 = call %struct.Memory* @routine_jle_.L_4a7016(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7003, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a7003, %struct.Memory** %MEMORY

  %loadBr_4a7003 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7003 = icmp eq i8 %loadBr_4a7003, 1
  br i1 %cmpBr_4a7003, label %block_.L_4a7016, label %block_4a7009

block_4a7009:
  ; Code: xorl %eax, %eax	 RIP: 4a7009	 Bytes: 2
  %loadMem_4a7009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7009 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7009)
  store %struct.Memory* %call_4a7009, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c0(%rbp)	 RIP: 4a700b	 Bytes: 6
  %loadMem_4a700b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a700b = call %struct.Memory* @routine_movl__eax__MINUS0x5c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a700b)
  store %struct.Memory* %call_4a700b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a706b	 RIP: 4a7011	 Bytes: 5
  %loadMem_4a7011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7011 = call %struct.Memory* @routine_jmpq_.L_4a706b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7011, i64 90, i64 5)
  store %struct.Memory* %call_4a7011, %struct.Memory** %MEMORY

  br label %block_.L_4a706b

  ; Code: .L_4a7016:	 RIP: 4a7016	 Bytes: 0
block_.L_4a7016:

  ; Code: movl -0x25c(%rbp), %eax	 RIP: 4a7016	 Bytes: 6
  %loadMem_4a7016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7016 = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7016)
  store %struct.Memory* %call_4a7016, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a701c	 Bytes: 8
  %loadMem_4a701c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a701c = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a701c)
  store %struct.Memory* %call_4a701c, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a7024	 Bytes: 7
  %loadMem_4a7024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7024 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7024)
  store %struct.Memory* %call_4a7024, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rcx	 RIP: 4a702b	 Bytes: 7
  %loadMem_4a702b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a702b = call %struct.Memory* @routine_addq__0x800___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a702b)
  store %struct.Memory* %call_4a702b, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a7032	 Bytes: 7
  %loadMem_4a7032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7032 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7032)
  store %struct.Memory* %call_4a7032, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a7039	 Bytes: 4
  %loadMem_4a7039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7039 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7039)
  store %struct.Memory* %call_4a7039, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a703d	 Bytes: 3
  %loadMem_4a703d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a703d = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a703d)
  store %struct.Memory* %call_4a703d, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a7040	 Bytes: 6
  %loadMem_4a7040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7040 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7040)
  store %struct.Memory* %call_4a7040, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a7046	 Bytes: 3
  %loadMem_4a7046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7046 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7046)
  store %struct.Memory* %call_4a7046, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a7049	 Bytes: 3
  %loadMem_4a7049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7049 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7049)
  store %struct.Memory* %call_4a7049, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a704c	 Bytes: 4
  %loadMem_4a704c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a704c = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a704c)
  store %struct.Memory* %call_4a704c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a7050	 Bytes: 3
  %loadMem_4a7050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7050 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7050)
  store %struct.Memory* %call_4a7050, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a7053	 Bytes: 6
  %loadMem_4a7053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7053 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7053)
  store %struct.Memory* %call_4a7053, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a7059	 Bytes: 3
  %loadMem_4a7059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7059 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7059)
  store %struct.Memory* %call_4a7059, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a705c	 Bytes: 3
  %loadMem_4a705c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a705c = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a705c)
  store %struct.Memory* %call_4a705c, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a705f	 Bytes: 4
  %loadMem_4a705f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a705f = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a705f)
  store %struct.Memory* %call_4a705f, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a7063	 Bytes: 2
  %loadMem_4a7063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7063 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7063)
  store %struct.Memory* %call_4a7063, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c0(%rbp)	 RIP: 4a7065	 Bytes: 6
  %loadMem_4a7065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7065 = call %struct.Memory* @routine_movl__eax__MINUS0x5c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7065)
  store %struct.Memory* %call_4a7065, %struct.Memory** %MEMORY

  ; Code: .L_4a706b:	 RIP: 4a706b	 Bytes: 0
  br label %block_.L_4a706b
block_.L_4a706b:

  ; Code: movl -0x5c0(%rbp), %eax	 RIP: 4a706b	 Bytes: 6
  %loadMem_4a706b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a706b = call %struct.Memory* @routine_movl_MINUS0x5c0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a706b)
  store %struct.Memory* %call_4a706b, %struct.Memory** %MEMORY

  ; Code: movl -0x5bc(%rbp), %ecx	 RIP: 4a7071	 Bytes: 6
  %loadMem_4a7071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7071 = call %struct.Memory* @routine_movl_MINUS0x5bc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7071)
  store %struct.Memory* %call_4a7071, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4a7077	 Bytes: 2
  %loadMem_4a7077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7077 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7077)
  store %struct.Memory* %call_4a7077, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7098	 RIP: 4a7079	 Bytes: 6
  %loadMem_4a7079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7079 = call %struct.Memory* @routine_jge_.L_4a7098(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7079, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4a7079, %struct.Memory** %MEMORY

  %loadBr_4a7079 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7079 = icmp eq i8 %loadBr_4a7079, 1
  br i1 %cmpBr_4a7079, label %block_.L_4a7098, label %block_4a707f

block_4a707f:
  ; Code: movq 0x6cb900, %rax	 RIP: 4a707f	 Bytes: 8
  %loadMem_4a707f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a707f = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a707f)
  store %struct.Memory* %call_4a707f, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 4a7087	 Bytes: 6
  %loadMem_4a7087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7087 = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7087)
  store %struct.Memory* %call_4a7087, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5c4(%rbp)	 RIP: 4a708d	 Bytes: 6
  %loadMem_4a708d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a708d = call %struct.Memory* @routine_movl__ecx__MINUS0x5c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a708d)
  store %struct.Memory* %call_4a708d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a715f	 RIP: 4a7093	 Bytes: 5
  %loadMem_4a7093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7093 = call %struct.Memory* @routine_jmpq_.L_4a715f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7093, i64 204, i64 5)
  store %struct.Memory* %call_4a7093, %struct.Memory** %MEMORY

  br label %block_.L_4a715f

  ; Code: .L_4a7098:	 RIP: 4a7098	 Bytes: 0
block_.L_4a7098:

  ; Code: xorl %eax, %eax	 RIP: 4a7098	 Bytes: 2
  %loadMem_4a7098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7098 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7098)
  store %struct.Memory* %call_4a7098, %struct.Memory** %MEMORY

  ; Code: movl -0x25c(%rbp), %ecx	 RIP: 4a709a	 Bytes: 6
  %loadMem_4a709a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a709a = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a709a)
  store %struct.Memory* %call_4a709a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4a70a0	 Bytes: 8
  %loadMem_4a70a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70a0 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70a0)
  store %struct.Memory* %call_4a70a0, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rdx	 RIP: 4a70a8	 Bytes: 7
  %loadMem_4a70a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70a8 = call %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70a8)
  store %struct.Memory* %call_4a70a8, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rdx	 RIP: 4a70af	 Bytes: 7
  %loadMem_4a70af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70af = call %struct.Memory* @routine_addq__0x800___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70af)
  store %struct.Memory* %call_4a70af, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rsi	 RIP: 4a70b6	 Bytes: 7
  %loadMem_4a70b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70b6 = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70b6)
  store %struct.Memory* %call_4a70b6, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 4a70bd	 Bytes: 4
  %loadMem_4a70bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70bd = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70bd)
  store %struct.Memory* %call_4a70bd, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a70c1	 Bytes: 3
  %loadMem_4a70c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70c1 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70c1)
  store %struct.Memory* %call_4a70c1, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %edi	 RIP: 4a70c4	 Bytes: 6
  %loadMem_4a70c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70c4 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70c4)
  store %struct.Memory* %call_4a70c4, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4a70ca	 Bytes: 3
  %loadMem_4a70ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70ca = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70ca)
  store %struct.Memory* %call_4a70ca, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 4a70cd	 Bytes: 3
  %loadMem_4a70cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70cd = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70cd)
  store %struct.Memory* %call_4a70cd, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 4a70d0	 Bytes: 4
  %loadMem_4a70d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70d0 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70d0)
  store %struct.Memory* %call_4a70d0, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4a70d4	 Bytes: 3
  %loadMem_4a70d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70d4 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70d4)
  store %struct.Memory* %call_4a70d4, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %edi	 RIP: 4a70d7	 Bytes: 6
  %loadMem_4a70d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70d7 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70d7)
  store %struct.Memory* %call_4a70d7, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 4a70dd	 Bytes: 3
  %loadMem_4a70dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70dd = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70dd)
  store %struct.Memory* %call_4a70dd, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 4a70e0	 Bytes: 3
  %loadMem_4a70e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70e0 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70e0)
  store %struct.Memory* %call_4a70e0, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 4a70e3	 Bytes: 4
  %loadMem_4a70e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70e3 = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70e3)
  store %struct.Memory* %call_4a70e3, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 4a70e7	 Bytes: 2
  %loadMem_4a70e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70e7 = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70e7)
  store %struct.Memory* %call_4a70e7, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 4a70e9	 Bytes: 2
  %loadMem_4a70e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70e9 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70e9)
  store %struct.Memory* %call_4a70e9, %struct.Memory** %MEMORY

  ; Code: jle .L_4a70fe	 RIP: 4a70eb	 Bytes: 6
  %loadMem_4a70eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70eb = call %struct.Memory* @routine_jle_.L_4a70fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70eb, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4a70eb, %struct.Memory** %MEMORY

  %loadBr_4a70eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a70eb = icmp eq i8 %loadBr_4a70eb, 1
  br i1 %cmpBr_4a70eb, label %block_.L_4a70fe, label %block_4a70f1

block_4a70f1:
  ; Code: xorl %eax, %eax	 RIP: 4a70f1	 Bytes: 2
  %loadMem_4a70f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70f1 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70f1)
  store %struct.Memory* %call_4a70f1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c8(%rbp)	 RIP: 4a70f3	 Bytes: 6
  %loadMem_4a70f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70f3 = call %struct.Memory* @routine_movl__eax__MINUS0x5c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70f3)
  store %struct.Memory* %call_4a70f3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a7153	 RIP: 4a70f9	 Bytes: 5
  %loadMem_4a70f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70f9 = call %struct.Memory* @routine_jmpq_.L_4a7153(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70f9, i64 90, i64 5)
  store %struct.Memory* %call_4a70f9, %struct.Memory** %MEMORY

  br label %block_.L_4a7153

  ; Code: .L_4a70fe:	 RIP: 4a70fe	 Bytes: 0
block_.L_4a70fe:

  ; Code: movl -0x25c(%rbp), %eax	 RIP: 4a70fe	 Bytes: 6
  %loadMem_4a70fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a70fe = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a70fe)
  store %struct.Memory* %call_4a70fe, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4a7104	 Bytes: 8
  %loadMem_4a7104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7104 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7104)
  store %struct.Memory* %call_4a7104, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4a710c	 Bytes: 7
  %loadMem_4a710c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a710c = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a710c)
  store %struct.Memory* %call_4a710c, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rcx	 RIP: 4a7113	 Bytes: 7
  %loadMem_4a7113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7113 = call %struct.Memory* @routine_addq__0x800___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7113)
  store %struct.Memory* %call_4a7113, %struct.Memory** %MEMORY

  ; Code: movslq -0x278(%rbp), %rdx	 RIP: 4a711a	 Bytes: 7
  %loadMem_4a711a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a711a = call %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a711a)
  store %struct.Memory* %call_4a711a, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4a7121	 Bytes: 4
  %loadMem_4a7121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7121 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7121)
  store %struct.Memory* %call_4a7121, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a7125	 Bytes: 3
  %loadMem_4a7125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7125 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7125)
  store %struct.Memory* %call_4a7125, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a7128	 Bytes: 6
  %loadMem_4a7128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7128 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7128)
  store %struct.Memory* %call_4a7128, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4a712e	 Bytes: 3
  %loadMem_4a712e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a712e = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a712e)
  store %struct.Memory* %call_4a712e, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a7131	 Bytes: 3
  %loadMem_4a7131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7131 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7131)
  store %struct.Memory* %call_4a7131, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4a7134	 Bytes: 4
  %loadMem_4a7134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7134 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7134)
  store %struct.Memory* %call_4a7134, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4a7138	 Bytes: 3
  %loadMem_4a7138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7138 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7138)
  store %struct.Memory* %call_4a7138, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a713b	 Bytes: 6
  %loadMem_4a713b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a713b = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a713b)
  store %struct.Memory* %call_4a713b, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4a7141	 Bytes: 3
  %loadMem_4a7141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7141 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7141)
  store %struct.Memory* %call_4a7141, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4a7144	 Bytes: 3
  %loadMem_4a7144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7144 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7144)
  store %struct.Memory* %call_4a7144, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4a7147	 Bytes: 4
  %loadMem_4a7147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7147 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7147)
  store %struct.Memory* %call_4a7147, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4a714b	 Bytes: 2
  %loadMem_4a714b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a714b = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a714b)
  store %struct.Memory* %call_4a714b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c8(%rbp)	 RIP: 4a714d	 Bytes: 6
  %loadMem_4a714d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a714d = call %struct.Memory* @routine_movl__eax__MINUS0x5c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a714d)
  store %struct.Memory* %call_4a714d, %struct.Memory** %MEMORY

  ; Code: .L_4a7153:	 RIP: 4a7153	 Bytes: 0
  br label %block_.L_4a7153
block_.L_4a7153:

  ; Code: movl -0x5c8(%rbp), %eax	 RIP: 4a7153	 Bytes: 6
  %loadMem_4a7153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7153 = call %struct.Memory* @routine_movl_MINUS0x5c8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7153)
  store %struct.Memory* %call_4a7153, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c4(%rbp)	 RIP: 4a7159	 Bytes: 6
  %loadMem_4a7159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7159 = call %struct.Memory* @routine_movl__eax__MINUS0x5c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7159)
  store %struct.Memory* %call_4a7159, %struct.Memory** %MEMORY

  ; Code: .L_4a715f:	 RIP: 4a715f	 Bytes: 0
  br label %block_.L_4a715f
block_.L_4a715f:

  ; Code: movl -0x5c4(%rbp), %eax	 RIP: 4a715f	 Bytes: 6
  %loadMem_4a715f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a715f = call %struct.Memory* @routine_movl_MINUS0x5c4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a715f)
  store %struct.Memory* %call_4a715f, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4a7165	 Bytes: 3
  %loadMem_4a7165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7165 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7165)
  store %struct.Memory* %call_4a7165, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rdx	 RIP: 4a7168	 Bytes: 8
  %loadMem_4a7168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7168 = call %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7168)
  store %struct.Memory* %call_4a7168, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rdx), %rdx	 RIP: 4a7170	 Bytes: 7
  %loadMem_4a7170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7170 = call %struct.Memory* @routine_movq_0x1940__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7170)
  store %struct.Memory* %call_4a7170, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdx), %rdx	 RIP: 4a7177	 Bytes: 4
  %loadMem_4a7177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7177 = call %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7177)
  store %struct.Memory* %call_4a7177, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %eax	 RIP: 4a717b	 Bytes: 6
  %loadMem_4a717b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a717b = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a717b)
  store %struct.Memory* %call_4a717b, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 4a7181	 Bytes: 3
  %loadMem_4a7181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7181 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7181)
  store %struct.Memory* %call_4a7181, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 4a7184	 Bytes: 3
  %loadMem_4a7184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7184 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7184)
  store %struct.Memory* %call_4a7184, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 4a7187	 Bytes: 4
  %loadMem_4a7187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7187 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7187)
  store %struct.Memory* %call_4a7187, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 4a718b	 Bytes: 6
  %loadMem_4a718b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a718b = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a718b)
  store %struct.Memory* %call_4a718b, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 4a7191	 Bytes: 3
  %loadMem_4a7191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7191 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7191)
  store %struct.Memory* %call_4a7191, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 4a7194	 Bytes: 3
  %loadMem_4a7194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7194 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7194)
  store %struct.Memory* %call_4a7194, %struct.Memory** %MEMORY

  ; Code: movw %cx, (%rdx,%rsi,2)	 RIP: 4a7197	 Bytes: 4
  %loadMem_4a7197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7197 = call %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7197)
  store %struct.Memory* %call_4a7197, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a719b	 Bytes: 3
  %loadMem_4a719b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a719b = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a719b)
  store %struct.Memory* %call_4a719b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a719e	 Bytes: 3
  %loadMem_4a719e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a719e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a719e)
  store %struct.Memory* %call_4a719e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a71a1	 Bytes: 3
  %loadMem_4a71a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71a1 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71a1)
  store %struct.Memory* %call_4a71a1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6b45	 RIP: 4a71a4	 Bytes: 5
  %loadMem_4a71a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71a4 = call %struct.Memory* @routine_jmpq_.L_4a6b45(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71a4, i64 -1631, i64 5)
  store %struct.Memory* %call_4a71a4, %struct.Memory** %MEMORY

  br label %block_.L_4a6b45

  ; Code: .L_4a71a9:	 RIP: 4a71a9	 Bytes: 0
block_.L_4a71a9:

  ; Code: jmpq .L_4a71ae	 RIP: 4a71a9	 Bytes: 5
  %loadMem_4a71a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71a9 = call %struct.Memory* @routine_jmpq_.L_4a71ae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71a9, i64 5, i64 5)
  store %struct.Memory* %call_4a71a9, %struct.Memory** %MEMORY

  br label %block_.L_4a71ae

  ; Code: .L_4a71ae:	 RIP: 4a71ae	 Bytes: 0
block_.L_4a71ae:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a71ae	 Bytes: 3
  %loadMem_4a71ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71ae = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71ae)
  store %struct.Memory* %call_4a71ae, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a71b1	 Bytes: 3
  %loadMem_4a71b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71b1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71b1)
  store %struct.Memory* %call_4a71b1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a71b4	 Bytes: 3
  %loadMem_4a71b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71b4 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71b4)
  store %struct.Memory* %call_4a71b4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a6b34	 RIP: 4a71b7	 Bytes: 5
  %loadMem_4a71b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71b7 = call %struct.Memory* @routine_jmpq_.L_4a6b34(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71b7, i64 -1667, i64 5)
  store %struct.Memory* %call_4a71b7, %struct.Memory** %MEMORY

  br label %block_.L_4a6b34

  ; Code: .L_4a71bc:	 RIP: 4a71bc	 Bytes: 0
block_.L_4a71bc:

  ; Code: jmpq .L_4a71c1	 RIP: 4a71bc	 Bytes: 5
  %loadMem_4a71bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71bc = call %struct.Memory* @routine_jmpq_.L_4a71c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71bc, i64 5, i64 5)
  store %struct.Memory* %call_4a71bc, %struct.Memory** %MEMORY

  br label %block_.L_4a71c1

  ; Code: .L_4a71c1:	 RIP: 4a71c1	 Bytes: 0
block_.L_4a71c1:

  ; Code: jmpq .L_4a766e	 RIP: 4a71c1	 Bytes: 5
  %loadMem_4a71c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71c1 = call %struct.Memory* @routine_jmpq_.L_4a766e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71c1, i64 1197, i64 5)
  store %struct.Memory* %call_4a71c1, %struct.Memory** %MEMORY

  br label %block_.L_4a766e

  ; Code: .L_4a71c6:	 RIP: 4a71c6	 Bytes: 0
block_.L_4a71c6:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a71c6	 Bytes: 7
  %loadMem_4a71c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71c6 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71c6)
  store %struct.Memory* %call_4a71c6, %struct.Memory** %MEMORY

  ; Code: .L_4a71cd:	 RIP: 4a71cd	 Bytes: 0
  br label %block_.L_4a71cd
block_.L_4a71cd:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4a71cd	 Bytes: 4
  %loadMem_4a71cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71cd = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71cd)
  store %struct.Memory* %call_4a71cd, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7282	 RIP: 4a71d1	 Bytes: 6
  %loadMem_4a71d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71d1 = call %struct.Memory* @routine_jge_.L_4a7282(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71d1, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_4a71d1, %struct.Memory** %MEMORY

  %loadBr_4a71d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a71d1 = icmp eq i8 %loadBr_4a71d1, 1
  br i1 %cmpBr_4a71d1, label %block_.L_4a7282, label %block_4a71d7

block_4a71d7:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a71d7	 Bytes: 7
  %loadMem_4a71d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71d7 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71d7)
  store %struct.Memory* %call_4a71d7, %struct.Memory** %MEMORY

  ; Code: .L_4a71de:	 RIP: 4a71de	 Bytes: 0
  br label %block_.L_4a71de
block_.L_4a71de:

  ; Code: cmpl $0x41, -0x2c(%rbp)	 RIP: 4a71de	 Bytes: 4
  %loadMem_4a71de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71de = call %struct.Memory* @routine_cmpl__0x41__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71de)
  store %struct.Memory* %call_4a71de, %struct.Memory** %MEMORY

  ; Code: jge .L_4a726f	 RIP: 4a71e2	 Bytes: 6
  %loadMem_4a71e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71e2 = call %struct.Memory* @routine_jge_.L_4a726f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71e2, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_4a71e2, %struct.Memory** %MEMORY

  %loadBr_4a71e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a71e2 = icmp eq i8 %loadBr_4a71e2, 1
  br i1 %cmpBr_4a71e2, label %block_.L_4a726f, label %block_4a71e8

block_4a71e8:
  ; Code: movl $0x0, -0x34(%rbp)	 RIP: 4a71e8	 Bytes: 7
  %loadMem_4a71e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71e8 = call %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71e8)
  store %struct.Memory* %call_4a71e8, %struct.Memory** %MEMORY

  ; Code: .L_4a71ef:	 RIP: 4a71ef	 Bytes: 0
  br label %block_.L_4a71ef
block_.L_4a71ef:

  ; Code: cmpl $0x4, -0x34(%rbp)	 RIP: 4a71ef	 Bytes: 4
  %loadMem_4a71ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71ef = call %struct.Memory* @routine_cmpl__0x4__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71ef)
  store %struct.Memory* %call_4a71ef, %struct.Memory** %MEMORY

  ; Code: jge .L_4a725c	 RIP: 4a71f3	 Bytes: 6
  %loadMem_4a71f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71f3 = call %struct.Memory* @routine_jge_.L_4a725c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71f3, i8* %BRANCH_TAKEN, i64 105, i64 6, i64 6)
  store %struct.Memory* %call_4a71f3, %struct.Memory** %MEMORY

  %loadBr_4a71f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a71f3 = icmp eq i8 %loadBr_4a71f3, 1
  br i1 %cmpBr_4a71f3, label %block_.L_4a725c, label %block_4a71f9

block_4a71f9:
  ; Code: movq 0x6cc5f8, %rax	 RIP: 4a71f9	 Bytes: 8
  %loadMem_4a71f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a71f9 = call %struct.Memory* @routine_movq_0x6cc5f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a71f9)
  store %struct.Memory* %call_4a71f9, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4a7201	 Bytes: 4
  %loadMem_4a7201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7201 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7201)
  store %struct.Memory* %call_4a7201, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a7205	 Bytes: 4
  %loadMem_4a7205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7205 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7205)
  store %struct.Memory* %call_4a7205, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rcx	 RIP: 4a7209	 Bytes: 4
  %loadMem_4a7209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7209 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7209)
  store %struct.Memory* %call_4a7209, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a720d	 Bytes: 4
  %loadMem_4a720d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a720d = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a720d)
  store %struct.Memory* %call_4a720d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a7211	 Bytes: 4
  %loadMem_4a7211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7211 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7211)
  store %struct.Memory* %call_4a7211, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a7215	 Bytes: 4
  %loadMem_4a7215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7215 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7215)
  store %struct.Memory* %call_4a7215, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a7219	 Bytes: 4
  %loadMem_4a7219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7219 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7219)
  store %struct.Memory* %call_4a7219, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a721d	 Bytes: 3
  %loadMem_4a721d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a721d = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a721d)
  store %struct.Memory* %call_4a721d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a7220	 Bytes: 8
  %loadMem_4a7220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7220 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7220)
  store %struct.Memory* %call_4a7220, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 4a7228	 Bytes: 7
  %loadMem_4a7228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7228 = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7228)
  store %struct.Memory* %call_4a7228, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4a722f	 Bytes: 4
  %loadMem_4a722f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a722f = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a722f)
  store %struct.Memory* %call_4a722f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a7233	 Bytes: 4
  %loadMem_4a7233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7233 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7233)
  store %struct.Memory* %call_4a7233, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rcx	 RIP: 4a7237	 Bytes: 4
  %loadMem_4a7237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7237 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7237)
  store %struct.Memory* %call_4a7237, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a723b	 Bytes: 4
  %loadMem_4a723b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a723b = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a723b)
  store %struct.Memory* %call_4a723b, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a723f	 Bytes: 4
  %loadMem_4a723f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a723f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a723f)
  store %struct.Memory* %call_4a723f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a7243	 Bytes: 4
  %loadMem_4a7243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7243 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7243)
  store %struct.Memory* %call_4a7243, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a7247	 Bytes: 4
  %loadMem_4a7247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7247 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7247)
  store %struct.Memory* %call_4a7247, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a724b	 Bytes: 3
  %loadMem_4a724b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a724b = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a724b)
  store %struct.Memory* %call_4a724b, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %eax	 RIP: 4a724e	 Bytes: 3
  %loadMem_4a724e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a724e = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a724e)
  store %struct.Memory* %call_4a724e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a7251	 Bytes: 3
  %loadMem_4a7251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7251 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7251)
  store %struct.Memory* %call_4a7251, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x34(%rbp)	 RIP: 4a7254	 Bytes: 3
  %loadMem_4a7254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7254 = call %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7254)
  store %struct.Memory* %call_4a7254, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a71ef	 RIP: 4a7257	 Bytes: 5
  %loadMem_4a7257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7257 = call %struct.Memory* @routine_jmpq_.L_4a71ef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7257, i64 -104, i64 5)
  store %struct.Memory* %call_4a7257, %struct.Memory** %MEMORY

  br label %block_.L_4a71ef

  ; Code: .L_4a725c:	 RIP: 4a725c	 Bytes: 0
block_.L_4a725c:

  ; Code: jmpq .L_4a7261	 RIP: 4a725c	 Bytes: 5
  %loadMem_4a725c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a725c = call %struct.Memory* @routine_jmpq_.L_4a7261(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a725c, i64 5, i64 5)
  store %struct.Memory* %call_4a725c, %struct.Memory** %MEMORY

  br label %block_.L_4a7261

  ; Code: .L_4a7261:	 RIP: 4a7261	 Bytes: 0
block_.L_4a7261:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a7261	 Bytes: 3
  %loadMem_4a7261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7261 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7261)
  store %struct.Memory* %call_4a7261, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a7264	 Bytes: 3
  %loadMem_4a7264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7264 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7264)
  store %struct.Memory* %call_4a7264, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a7267	 Bytes: 3
  %loadMem_4a7267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7267 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7267)
  store %struct.Memory* %call_4a7267, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a71de	 RIP: 4a726a	 Bytes: 5
  %loadMem_4a726a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a726a = call %struct.Memory* @routine_jmpq_.L_4a71de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a726a, i64 -140, i64 5)
  store %struct.Memory* %call_4a726a, %struct.Memory** %MEMORY

  br label %block_.L_4a71de

  ; Code: .L_4a726f:	 RIP: 4a726f	 Bytes: 0
block_.L_4a726f:

  ; Code: jmpq .L_4a7274	 RIP: 4a726f	 Bytes: 5
  %loadMem_4a726f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a726f = call %struct.Memory* @routine_jmpq_.L_4a7274(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a726f, i64 5, i64 5)
  store %struct.Memory* %call_4a726f, %struct.Memory** %MEMORY

  br label %block_.L_4a7274

  ; Code: .L_4a7274:	 RIP: 4a7274	 Bytes: 0
block_.L_4a7274:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a7274	 Bytes: 3
  %loadMem_4a7274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7274 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7274)
  store %struct.Memory* %call_4a7274, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a7277	 Bytes: 3
  %loadMem_4a7277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7277 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7277)
  store %struct.Memory* %call_4a7277, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a727a	 Bytes: 3
  %loadMem_4a727a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a727a = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a727a)
  store %struct.Memory* %call_4a727a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a71cd	 RIP: 4a727d	 Bytes: 5
  %loadMem_4a727d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a727d = call %struct.Memory* @routine_jmpq_.L_4a71cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a727d, i64 -176, i64 5)
  store %struct.Memory* %call_4a727d, %struct.Memory** %MEMORY

  br label %block_.L_4a71cd

  ; Code: .L_4a7282:	 RIP: 4a7282	 Bytes: 0
block_.L_4a7282:

  ; Code: movq 0x6cb900, %rax	 RIP: 4a7282	 Bytes: 8
  %loadMem_4a7282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7282 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7282)
  store %struct.Memory* %call_4a7282, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 4a728a	 Bytes: 7
  %loadMem_4a728a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a728a = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a728a)
  store %struct.Memory* %call_4a728a, %struct.Memory** %MEMORY

  ; Code: je .L_4a741e	 RIP: 4a7291	 Bytes: 6
  %loadMem_4a7291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7291 = call %struct.Memory* @routine_je_.L_4a741e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7291, i8* %BRANCH_TAKEN, i64 397, i64 6, i64 6)
  store %struct.Memory* %call_4a7291, %struct.Memory** %MEMORY

  %loadBr_4a7291 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7291 = icmp eq i8 %loadBr_4a7291, 1
  br i1 %cmpBr_4a7291, label %block_.L_4a741e, label %block_4a7297

block_4a7297:
  ; Code: movl $0x0, -0x274(%rbp)	 RIP: 4a7297	 Bytes: 10
  %loadMem_4a7297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7297 = call %struct.Memory* @routine_movl__0x0__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7297)
  store %struct.Memory* %call_4a7297, %struct.Memory** %MEMORY

  ; Code: .L_4a72a1:	 RIP: 4a72a1	 Bytes: 0
  br label %block_.L_4a72a1
block_.L_4a72a1:

  ; Code: cmpl $0x4, -0x274(%rbp)	 RIP: 4a72a1	 Bytes: 7
  %loadMem_4a72a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72a1 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72a1)
  store %struct.Memory* %call_4a72a1, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7419	 RIP: 4a72a8	 Bytes: 6
  %loadMem_4a72a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72a8 = call %struct.Memory* @routine_jge_.L_4a7419(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72a8, i8* %BRANCH_TAKEN, i64 369, i64 6, i64 6)
  store %struct.Memory* %call_4a72a8, %struct.Memory** %MEMORY

  %loadBr_4a72a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a72a8 = icmp eq i8 %loadBr_4a72a8, 1
  br i1 %cmpBr_4a72a8, label %block_.L_4a7419, label %block_4a72ae

block_4a72ae:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a72ae	 Bytes: 7
  %loadMem_4a72ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72ae = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72ae)
  store %struct.Memory* %call_4a72ae, %struct.Memory** %MEMORY

  ; Code: .L_4a72b5:	 RIP: 4a72b5	 Bytes: 0
  br label %block_.L_4a72b5
block_.L_4a72b5:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4a72b5	 Bytes: 4
  %loadMem_4a72b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72b5 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72b5)
  store %struct.Memory* %call_4a72b5, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7354	 RIP: 4a72b9	 Bytes: 6
  %loadMem_4a72b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72b9 = call %struct.Memory* @routine_jge_.L_4a7354(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72b9, i8* %BRANCH_TAKEN, i64 155, i64 6, i64 6)
  store %struct.Memory* %call_4a72b9, %struct.Memory** %MEMORY

  %loadBr_4a72b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a72b9 = icmp eq i8 %loadBr_4a72b9, 1
  br i1 %cmpBr_4a72b9, label %block_.L_4a7354, label %block_4a72bf

block_4a72bf:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a72bf	 Bytes: 7
  %loadMem_4a72bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72bf = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72bf)
  store %struct.Memory* %call_4a72bf, %struct.Memory** %MEMORY

  ; Code: .L_4a72c6:	 RIP: 4a72c6	 Bytes: 0
  br label %block_.L_4a72c6
block_.L_4a72c6:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 4a72c6	 Bytes: 4
  %loadMem_4a72c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72c6 = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72c6)
  store %struct.Memory* %call_4a72c6, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7341	 RIP: 4a72ca	 Bytes: 6
  %loadMem_4a72ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72ca = call %struct.Memory* @routine_jge_.L_4a7341(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72ca, i8* %BRANCH_TAKEN, i64 119, i64 6, i64 6)
  store %struct.Memory* %call_4a72ca, %struct.Memory** %MEMORY

  %loadBr_4a72ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a72ca = icmp eq i8 %loadBr_4a72ca, 1
  br i1 %cmpBr_4a72ca, label %block_.L_4a7341, label %block_4a72d0

block_4a72d0:
  ; Code: movq $0x6ccb00, %rax	 RIP: 4a72d0	 Bytes: 10
  %loadMem_4a72d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72d0 = call %struct.Memory* @routine_movq__0x6ccb00___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72d0)
  store %struct.Memory* %call_4a72d0, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rcx	 RIP: 4a72da	 Bytes: 7
  %loadMem_4a72da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72da = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72da)
  store %struct.Memory* %call_4a72da, %struct.Memory** %MEMORY

  ; Code: imulq $0x90, %rcx, %rcx	 RIP: 4a72e1	 Bytes: 7
  %loadMem_4a72e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72e1 = call %struct.Memory* @routine_imulq__0x90___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72e1)
  store %struct.Memory* %call_4a72e1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a72e8	 Bytes: 3
  %loadMem_4a72e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72e8 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72e8)
  store %struct.Memory* %call_4a72e8, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a72eb	 Bytes: 4
  %loadMem_4a72eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72eb = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72eb)
  store %struct.Memory* %call_4a72eb, %struct.Memory** %MEMORY

  ; Code: imulq $0x48, %rcx, %rcx	 RIP: 4a72ef	 Bytes: 4
  %loadMem_4a72ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72ef = call %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72ef)
  store %struct.Memory* %call_4a72ef, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a72f3	 Bytes: 3
  %loadMem_4a72f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72f3 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72f3)
  store %struct.Memory* %call_4a72f3, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a72f6	 Bytes: 4
  %loadMem_4a72f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72f6 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72f6)
  store %struct.Memory* %call_4a72f6, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a72fa	 Bytes: 3
  %loadMem_4a72fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72fa = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72fa)
  store %struct.Memory* %call_4a72fa, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a72fd	 Bytes: 8
  %loadMem_4a72fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a72fd = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a72fd)
  store %struct.Memory* %call_4a72fd, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 4a7305	 Bytes: 7
  %loadMem_4a7305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7305 = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7305)
  store %struct.Memory* %call_4a7305, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4a730c	 Bytes: 3
  %loadMem_4a730c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a730c = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a730c)
  store %struct.Memory* %call_4a730c, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %esi	 RIP: 4a730f	 Bytes: 3
  %loadMem_4a730f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a730f = call %struct.Memory* @routine_addl__0x4___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a730f)
  store %struct.Memory* %call_4a730f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a7312	 Bytes: 3
  %loadMem_4a7312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7312 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7312)
  store %struct.Memory* %call_4a7312, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a7315	 Bytes: 4
  %loadMem_4a7315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7315 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7315)
  store %struct.Memory* %call_4a7315, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rcx	 RIP: 4a7319	 Bytes: 7
  %loadMem_4a7319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7319 = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7319)
  store %struct.Memory* %call_4a7319, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a7320	 Bytes: 4
  %loadMem_4a7320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7320 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7320)
  store %struct.Memory* %call_4a7320, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a7324	 Bytes: 4
  %loadMem_4a7324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7324 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7324)
  store %struct.Memory* %call_4a7324, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a7328	 Bytes: 4
  %loadMem_4a7328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7328 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7328)
  store %struct.Memory* %call_4a7328, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a732c	 Bytes: 4
  %loadMem_4a732c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a732c = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a732c)
  store %struct.Memory* %call_4a732c, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a7330	 Bytes: 3
  %loadMem_4a7330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7330 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7330)
  store %struct.Memory* %call_4a7330, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a7333	 Bytes: 3
  %loadMem_4a7333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7333 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7333)
  store %struct.Memory* %call_4a7333, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a7336	 Bytes: 3
  %loadMem_4a7336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7336 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7336)
  store %struct.Memory* %call_4a7336, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a7339	 Bytes: 3
  %loadMem_4a7339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7339 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7339)
  store %struct.Memory* %call_4a7339, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a72c6	 RIP: 4a733c	 Bytes: 5
  %loadMem_4a733c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a733c = call %struct.Memory* @routine_jmpq_.L_4a72c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a733c, i64 -118, i64 5)
  store %struct.Memory* %call_4a733c, %struct.Memory** %MEMORY

  br label %block_.L_4a72c6

  ; Code: .L_4a7341:	 RIP: 4a7341	 Bytes: 0
block_.L_4a7341:

  ; Code: jmpq .L_4a7346	 RIP: 4a7341	 Bytes: 5
  %loadMem_4a7341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7341 = call %struct.Memory* @routine_jmpq_.L_4a7346(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7341, i64 5, i64 5)
  store %struct.Memory* %call_4a7341, %struct.Memory** %MEMORY

  br label %block_.L_4a7346

  ; Code: .L_4a7346:	 RIP: 4a7346	 Bytes: 0
block_.L_4a7346:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a7346	 Bytes: 3
  %loadMem_4a7346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7346 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7346)
  store %struct.Memory* %call_4a7346, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a7349	 Bytes: 3
  %loadMem_4a7349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7349 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7349)
  store %struct.Memory* %call_4a7349, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a734c	 Bytes: 3
  %loadMem_4a734c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a734c = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a734c)
  store %struct.Memory* %call_4a734c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a72b5	 RIP: 4a734f	 Bytes: 5
  %loadMem_4a734f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a734f = call %struct.Memory* @routine_jmpq_.L_4a72b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a734f, i64 -154, i64 5)
  store %struct.Memory* %call_4a734f, %struct.Memory** %MEMORY

  br label %block_.L_4a72b5

  ; Code: .L_4a7354:	 RIP: 4a7354	 Bytes: 0
block_.L_4a7354:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4a7354	 Bytes: 7
  %loadMem_4a7354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7354 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7354)
  store %struct.Memory* %call_4a7354, %struct.Memory** %MEMORY

  ; Code: .L_4a735b:	 RIP: 4a735b	 Bytes: 0
  br label %block_.L_4a735b
block_.L_4a735b:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4a735b	 Bytes: 4
  %loadMem_4a735b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a735b = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a735b)
  store %struct.Memory* %call_4a735b, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7400	 RIP: 4a735f	 Bytes: 6
  %loadMem_4a735f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a735f = call %struct.Memory* @routine_jge_.L_4a7400(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a735f, i8* %BRANCH_TAKEN, i64 161, i64 6, i64 6)
  store %struct.Memory* %call_4a735f, %struct.Memory** %MEMORY

  %loadBr_4a735f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a735f = icmp eq i8 %loadBr_4a735f, 1
  br i1 %cmpBr_4a735f, label %block_.L_4a7400, label %block_4a7365

block_4a7365:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a7365	 Bytes: 7
  %loadMem_4a7365 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7365 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7365)
  store %struct.Memory* %call_4a7365, %struct.Memory** %MEMORY

  ; Code: .L_4a736c:	 RIP: 4a736c	 Bytes: 0
  br label %block_.L_4a736c
block_.L_4a736c:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 4a736c	 Bytes: 4
  %loadMem_4a736c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a736c = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a736c)
  store %struct.Memory* %call_4a736c, %struct.Memory** %MEMORY

  ; Code: jge .L_4a73ed	 RIP: 4a7370	 Bytes: 6
  %loadMem_4a7370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7370 = call %struct.Memory* @routine_jge_.L_4a73ed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7370, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_4a7370, %struct.Memory** %MEMORY

  %loadBr_4a7370 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7370 = icmp eq i8 %loadBr_4a7370, 1
  br i1 %cmpBr_4a7370, label %block_.L_4a73ed, label %block_4a7376

block_4a7376:
  ; Code: movq $0x6ccb00, %rax	 RIP: 4a7376	 Bytes: 10
  %loadMem_4a7376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7376 = call %struct.Memory* @routine_movq__0x6ccb00___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7376)
  store %struct.Memory* %call_4a7376, %struct.Memory** %MEMORY

  ; Code: addq $0x240, %rax	 RIP: 4a7380	 Bytes: 6
  %loadMem_4a7380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7380 = call %struct.Memory* @routine_addq__0x240___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7380)
  store %struct.Memory* %call_4a7380, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rcx	 RIP: 4a7386	 Bytes: 7
  %loadMem_4a7386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7386 = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7386)
  store %struct.Memory* %call_4a7386, %struct.Memory** %MEMORY

  ; Code: imulq $0x90, %rcx, %rcx	 RIP: 4a738d	 Bytes: 7
  %loadMem_4a738d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a738d = call %struct.Memory* @routine_imulq__0x90___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a738d)
  store %struct.Memory* %call_4a738d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a7394	 Bytes: 3
  %loadMem_4a7394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7394 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7394)
  store %struct.Memory* %call_4a7394, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a7397	 Bytes: 4
  %loadMem_4a7397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7397 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7397)
  store %struct.Memory* %call_4a7397, %struct.Memory** %MEMORY

  ; Code: imulq $0x48, %rcx, %rcx	 RIP: 4a739b	 Bytes: 4
  %loadMem_4a739b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a739b = call %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a739b)
  store %struct.Memory* %call_4a739b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a739f	 Bytes: 3
  %loadMem_4a739f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a739f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a739f)
  store %struct.Memory* %call_4a739f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a73a2	 Bytes: 4
  %loadMem_4a73a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73a2 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73a2)
  store %struct.Memory* %call_4a73a2, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a73a6	 Bytes: 3
  %loadMem_4a73a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73a6 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73a6)
  store %struct.Memory* %call_4a73a6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a73a9	 Bytes: 8
  %loadMem_4a73a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73a9 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73a9)
  store %struct.Memory* %call_4a73a9, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 4a73b1	 Bytes: 7
  %loadMem_4a73b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73b1 = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73b1)
  store %struct.Memory* %call_4a73b1, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4a73b8	 Bytes: 3
  %loadMem_4a73b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73b8 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73b8)
  store %struct.Memory* %call_4a73b8, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %esi	 RIP: 4a73bb	 Bytes: 3
  %loadMem_4a73bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73bb = call %struct.Memory* @routine_addl__0x8___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73bb)
  store %struct.Memory* %call_4a73bb, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a73be	 Bytes: 3
  %loadMem_4a73be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73be = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73be)
  store %struct.Memory* %call_4a73be, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a73c1	 Bytes: 4
  %loadMem_4a73c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73c1 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73c1)
  store %struct.Memory* %call_4a73c1, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rcx	 RIP: 4a73c5	 Bytes: 7
  %loadMem_4a73c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73c5 = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73c5)
  store %struct.Memory* %call_4a73c5, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a73cc	 Bytes: 4
  %loadMem_4a73cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73cc = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73cc)
  store %struct.Memory* %call_4a73cc, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4a73d0	 Bytes: 4
  %loadMem_4a73d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73d0 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73d0)
  store %struct.Memory* %call_4a73d0, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a73d4	 Bytes: 4
  %loadMem_4a73d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73d4 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73d4)
  store %struct.Memory* %call_4a73d4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a73d8	 Bytes: 4
  %loadMem_4a73d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73d8 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73d8)
  store %struct.Memory* %call_4a73d8, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4a73dc	 Bytes: 3
  %loadMem_4a73dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73dc = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73dc)
  store %struct.Memory* %call_4a73dc, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a73df	 Bytes: 3
  %loadMem_4a73df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73df = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73df)
  store %struct.Memory* %call_4a73df, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a73e2	 Bytes: 3
  %loadMem_4a73e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73e2 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73e2)
  store %struct.Memory* %call_4a73e2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a73e5	 Bytes: 3
  %loadMem_4a73e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73e5 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73e5)
  store %struct.Memory* %call_4a73e5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a736c	 RIP: 4a73e8	 Bytes: 5
  %loadMem_4a73e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73e8 = call %struct.Memory* @routine_jmpq_.L_4a736c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73e8, i64 -124, i64 5)
  store %struct.Memory* %call_4a73e8, %struct.Memory** %MEMORY

  br label %block_.L_4a736c

  ; Code: .L_4a73ed:	 RIP: 4a73ed	 Bytes: 0
block_.L_4a73ed:

  ; Code: jmpq .L_4a73f2	 RIP: 4a73ed	 Bytes: 5
  %loadMem_4a73ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73ed = call %struct.Memory* @routine_jmpq_.L_4a73f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73ed, i64 5, i64 5)
  store %struct.Memory* %call_4a73ed, %struct.Memory** %MEMORY

  br label %block_.L_4a73f2

  ; Code: .L_4a73f2:	 RIP: 4a73f2	 Bytes: 0
block_.L_4a73f2:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4a73f2	 Bytes: 3
  %loadMem_4a73f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73f2 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73f2)
  store %struct.Memory* %call_4a73f2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a73f5	 Bytes: 3
  %loadMem_4a73f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73f5 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73f5)
  store %struct.Memory* %call_4a73f5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4a73f8	 Bytes: 3
  %loadMem_4a73f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73f8 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73f8)
  store %struct.Memory* %call_4a73f8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a735b	 RIP: 4a73fb	 Bytes: 5
  %loadMem_4a73fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a73fb = call %struct.Memory* @routine_jmpq_.L_4a735b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a73fb, i64 -160, i64 5)
  store %struct.Memory* %call_4a73fb, %struct.Memory** %MEMORY

  br label %block_.L_4a735b

  ; Code: .L_4a7400:	 RIP: 4a7400	 Bytes: 0
block_.L_4a7400:

  ; Code: jmpq .L_4a7405	 RIP: 4a7400	 Bytes: 5
  %loadMem_4a7400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7400 = call %struct.Memory* @routine_jmpq_.L_4a7405(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7400, i64 5, i64 5)
  store %struct.Memory* %call_4a7400, %struct.Memory** %MEMORY

  br label %block_.L_4a7405

  ; Code: .L_4a7405:	 RIP: 4a7405	 Bytes: 0
block_.L_4a7405:

  ; Code: movl -0x274(%rbp), %eax	 RIP: 4a7405	 Bytes: 6
  %loadMem_4a7405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7405 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7405)
  store %struct.Memory* %call_4a7405, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a740b	 Bytes: 3
  %loadMem_4a740b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a740b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a740b)
  store %struct.Memory* %call_4a740b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x274(%rbp)	 RIP: 4a740e	 Bytes: 6
  %loadMem_4a740e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a740e = call %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a740e)
  store %struct.Memory* %call_4a740e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a72a1	 RIP: 4a7414	 Bytes: 5
  %loadMem_4a7414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7414 = call %struct.Memory* @routine_jmpq_.L_4a72a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7414, i64 -371, i64 5)
  store %struct.Memory* %call_4a7414, %struct.Memory** %MEMORY

  br label %block_.L_4a72a1

  ; Code: .L_4a7419:	 RIP: 4a7419	 Bytes: 0
block_.L_4a7419:

  ; Code: jmpq .L_4a741e	 RIP: 4a7419	 Bytes: 5
  %loadMem_4a7419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7419 = call %struct.Memory* @routine_jmpq_.L_4a741e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7419, i64 5, i64 5)
  store %struct.Memory* %call_4a7419, %struct.Memory** %MEMORY

  br label %block_.L_4a741e

  ; Code: .L_4a741e:	 RIP: 4a741e	 Bytes: 0
block_.L_4a741e:

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4a741e	 Bytes: 7
  %loadMem_4a741e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a741e = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a741e)
  store %struct.Memory* %call_4a741e, %struct.Memory** %MEMORY

  ; Code: .L_4a7425:	 RIP: 4a7425	 Bytes: 0
  br label %block_.L_4a7425
block_.L_4a7425:

  ; Code: cmpl $0x8, -0x3c(%rbp)	 RIP: 4a7425	 Bytes: 4
  %loadMem_4a7425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7425 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7425)
  store %struct.Memory* %call_4a7425, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7507	 RIP: 4a7429	 Bytes: 6
  %loadMem_4a7429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7429 = call %struct.Memory* @routine_jge_.L_4a7507(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7429, i8* %BRANCH_TAKEN, i64 222, i64 6, i64 6)
  store %struct.Memory* %call_4a7429, %struct.Memory** %MEMORY

  %loadBr_4a7429 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7429 = icmp eq i8 %loadBr_4a7429, 1
  br i1 %cmpBr_4a7429, label %block_.L_4a7507, label %block_4a742f

block_4a742f:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 4a742f	 Bytes: 7
  %loadMem_4a742f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a742f = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a742f)
  store %struct.Memory* %call_4a742f, %struct.Memory** %MEMORY

  ; Code: .L_4a7436:	 RIP: 4a7436	 Bytes: 0
  br label %block_.L_4a7436
block_.L_4a7436:

  ; Code: cmpl $0x8, -0x38(%rbp)	 RIP: 4a7436	 Bytes: 4
  %loadMem_4a7436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7436 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7436)
  store %struct.Memory* %call_4a7436, %struct.Memory** %MEMORY

  ; Code: jge .L_4a74f4	 RIP: 4a743a	 Bytes: 6
  %loadMem_4a743a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a743a = call %struct.Memory* @routine_jge_.L_4a74f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a743a, i8* %BRANCH_TAKEN, i64 186, i64 6, i64 6)
  store %struct.Memory* %call_4a743a, %struct.Memory** %MEMORY

  %loadBr_4a743a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a743a = icmp eq i8 %loadBr_4a743a, 1
  br i1 %cmpBr_4a743a, label %block_.L_4a74f4, label %block_4a7440

block_4a7440:
  ; Code: leaq -0x1d0(%rbp), %rax	 RIP: 4a7440	 Bytes: 7
  %loadMem_4a7440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7440 = call %struct.Memory* @routine_leaq_MINUS0x1d0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7440)
  store %struct.Memory* %call_4a7440, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 4a7447	 Bytes: 4
  %loadMem_4a7447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7447 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7447)
  store %struct.Memory* %call_4a7447, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a744b	 Bytes: 4
  %loadMem_4a744b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a744b = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a744b)
  store %struct.Memory* %call_4a744b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a744f	 Bytes: 3
  %loadMem_4a744f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a744f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a744f)
  store %struct.Memory* %call_4a744f, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 4a7452	 Bytes: 4
  %loadMem_4a7452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7452 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7452)
  store %struct.Memory* %call_4a7452, %struct.Memory** %MEMORY

  ; Code: movw (%rax,%rcx,2), %dx	 RIP: 4a7456	 Bytes: 4
  %loadMem_4a7456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7456 = call %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7456)
  store %struct.Memory* %call_4a7456, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4a745a	 Bytes: 8
  %loadMem_4a745a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a745a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a745a)
  store %struct.Memory* %call_4a745a, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rax), %rax	 RIP: 4a7462	 Bytes: 7
  %loadMem_4a7462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7462 = call %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7462)
  store %struct.Memory* %call_4a7462, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %esi	 RIP: 4a7469	 Bytes: 6
  %loadMem_4a7469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7469 = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7469)
  store %struct.Memory* %call_4a7469, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a746f	 Bytes: 3
  %loadMem_4a746f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a746f = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a746f)
  store %struct.Memory* %call_4a746f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a7472	 Bytes: 3
  %loadMem_4a7472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7472 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7472)
  store %struct.Memory* %call_4a7472, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a7475	 Bytes: 4
  %loadMem_4a7475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7475 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7475)
  store %struct.Memory* %call_4a7475, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %esi	 RIP: 4a7479	 Bytes: 6
  %loadMem_4a7479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7479 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7479)
  store %struct.Memory* %call_4a7479, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %esi	 RIP: 4a747f	 Bytes: 3
  %loadMem_4a747f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a747f = call %struct.Memory* @routine_addl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a747f)
  store %struct.Memory* %call_4a747f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a7482	 Bytes: 3
  %loadMem_4a7482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7482 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7482)
  store %struct.Memory* %call_4a7482, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rax,%rcx,2)	 RIP: 4a7485	 Bytes: 4
  %loadMem_4a7485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7485 = call %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7485)
  store %struct.Memory* %call_4a7485, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a7489	 Bytes: 8
  %loadMem_4a7489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7489 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7489)
  store %struct.Memory* %call_4a7489, %struct.Memory** %MEMORY

  ; Code: addq $0x1cb8, %rax	 RIP: 4a7491	 Bytes: 6
  %loadMem_4a7491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7491 = call %struct.Memory* @routine_addq__0x1cb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7491)
  store %struct.Memory* %call_4a7491, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 4a7497	 Bytes: 4
  %loadMem_4a7497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7497 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7497)
  store %struct.Memory* %call_4a7497, %struct.Memory** %MEMORY

  ; Code: shlq $0x7, %rcx	 RIP: 4a749b	 Bytes: 4
  %loadMem_4a749b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a749b = call %struct.Memory* @routine_shlq__0x7___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a749b)
  store %struct.Memory* %call_4a749b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a749f	 Bytes: 3
  %loadMem_4a749f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a749f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a749f)
  store %struct.Memory* %call_4a749f, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 4a74a2	 Bytes: 4
  %loadMem_4a74a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74a2 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74a2)
  store %struct.Memory* %call_4a74a2, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a74a6	 Bytes: 4
  %loadMem_4a74a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74a6 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74a6)
  store %struct.Memory* %call_4a74a6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a74aa	 Bytes: 3
  %loadMem_4a74aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74aa = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74aa)
  store %struct.Memory* %call_4a74aa, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 4a74ad	 Bytes: 4
  %loadMem_4a74ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74ad = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74ad)
  store %struct.Memory* %call_4a74ad, %struct.Memory** %MEMORY

  ; Code: movw (%rax,%rcx,2), %dx	 RIP: 4a74b1	 Bytes: 4
  %loadMem_4a74b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74b1 = call %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74b1)
  store %struct.Memory* %call_4a74b1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4a74b5	 Bytes: 8
  %loadMem_4a74b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74b5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74b5)
  store %struct.Memory* %call_4a74b5, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rax	 RIP: 4a74bd	 Bytes: 6
  %loadMem_4a74bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74bd = call %struct.Memory* @routine_addq__0x3138___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74bd)
  store %struct.Memory* %call_4a74bd, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 4a74c3	 Bytes: 6
  %loadMem_4a74c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74c3 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74c3)
  store %struct.Memory* %call_4a74c3, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %esi	 RIP: 4a74c9	 Bytes: 3
  %loadMem_4a74c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74c9 = call %struct.Memory* @routine_addl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74c9)
  store %struct.Memory* %call_4a74c9, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a74cc	 Bytes: 3
  %loadMem_4a74cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74cc = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74cc)
  store %struct.Memory* %call_4a74cc, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4a74cf	 Bytes: 4
  %loadMem_4a74cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74cf = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74cf)
  store %struct.Memory* %call_4a74cf, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a74d3	 Bytes: 3
  %loadMem_4a74d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74d3 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74d3)
  store %struct.Memory* %call_4a74d3, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %esi	 RIP: 4a74d6	 Bytes: 6
  %loadMem_4a74d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74d6 = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74d6)
  store %struct.Memory* %call_4a74d6, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4a74dc	 Bytes: 3
  %loadMem_4a74dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74dc = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74dc)
  store %struct.Memory* %call_4a74dc, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4a74df	 Bytes: 3
  %loadMem_4a74df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74df = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74df)
  store %struct.Memory* %call_4a74df, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rax,%rcx,2)	 RIP: 4a74e2	 Bytes: 4
  %loadMem_4a74e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74e2 = call %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74e2)
  store %struct.Memory* %call_4a74e2, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4a74e6	 Bytes: 3
  %loadMem_4a74e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74e6 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74e6)
  store %struct.Memory* %call_4a74e6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a74e9	 Bytes: 3
  %loadMem_4a74e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74e9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74e9)
  store %struct.Memory* %call_4a74e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4a74ec	 Bytes: 3
  %loadMem_4a74ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74ec = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74ec)
  store %struct.Memory* %call_4a74ec, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a7436	 RIP: 4a74ef	 Bytes: 5
  %loadMem_4a74ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74ef = call %struct.Memory* @routine_jmpq_.L_4a7436(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74ef, i64 -185, i64 5)
  store %struct.Memory* %call_4a74ef, %struct.Memory** %MEMORY

  br label %block_.L_4a7436

  ; Code: .L_4a74f4:	 RIP: 4a74f4	 Bytes: 0
block_.L_4a74f4:

  ; Code: jmpq .L_4a74f9	 RIP: 4a74f4	 Bytes: 5
  %loadMem_4a74f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74f4 = call %struct.Memory* @routine_jmpq_.L_4a74f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74f4, i64 5, i64 5)
  store %struct.Memory* %call_4a74f4, %struct.Memory** %MEMORY

  br label %block_.L_4a74f9

  ; Code: .L_4a74f9:	 RIP: 4a74f9	 Bytes: 0
block_.L_4a74f9:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4a74f9	 Bytes: 3
  %loadMem_4a74f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74f9 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74f9)
  store %struct.Memory* %call_4a74f9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a74fc	 Bytes: 3
  %loadMem_4a74fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74fc = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74fc)
  store %struct.Memory* %call_4a74fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4a74ff	 Bytes: 3
  %loadMem_4a74ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a74ff = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a74ff)
  store %struct.Memory* %call_4a74ff, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a7425	 RIP: 4a7502	 Bytes: 5
  %loadMem_4a7502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7502 = call %struct.Memory* @routine_jmpq_.L_4a7425(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7502, i64 -221, i64 5)
  store %struct.Memory* %call_4a7502, %struct.Memory** %MEMORY

  br label %block_.L_4a7425

  ; Code: .L_4a7507:	 RIP: 4a7507	 Bytes: 0
block_.L_4a7507:

  ; Code: movq 0x6cb900, %rax	 RIP: 4a7507	 Bytes: 8
  %loadMem_4a7507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7507 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7507)
  store %struct.Memory* %call_4a7507, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 4a750f	 Bytes: 7
  %loadMem_4a750f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a750f = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a750f)
  store %struct.Memory* %call_4a750f, %struct.Memory** %MEMORY

  ; Code: je .L_4a7669	 RIP: 4a7516	 Bytes: 6
  %loadMem_4a7516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7516 = call %struct.Memory* @routine_je_.L_4a7669(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7516, i8* %BRANCH_TAKEN, i64 339, i64 6, i64 6)
  store %struct.Memory* %call_4a7516, %struct.Memory** %MEMORY

  %loadBr_4a7516 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7516 = icmp eq i8 %loadBr_4a7516, 1
  br i1 %cmpBr_4a7516, label %block_.L_4a7669, label %block_4a751c

block_4a751c:
  ; Code: movl $0x0, -0x274(%rbp)	 RIP: 4a751c	 Bytes: 10
  %loadMem_4a751c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a751c = call %struct.Memory* @routine_movl__0x0__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a751c)
  store %struct.Memory* %call_4a751c, %struct.Memory** %MEMORY

  ; Code: .L_4a7526:	 RIP: 4a7526	 Bytes: 0
  br label %block_.L_4a7526
block_.L_4a7526:

  ; Code: cmpl $0x4, -0x274(%rbp)	 RIP: 4a7526	 Bytes: 7
  %loadMem_4a7526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7526 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7526)
  store %struct.Memory* %call_4a7526, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7664	 RIP: 4a752d	 Bytes: 6
  %loadMem_4a752d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a752d = call %struct.Memory* @routine_jge_.L_4a7664(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a752d, i8* %BRANCH_TAKEN, i64 311, i64 6, i64 6)
  store %struct.Memory* %call_4a752d, %struct.Memory** %MEMORY

  %loadBr_4a752d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a752d = icmp eq i8 %loadBr_4a752d, 1
  br i1 %cmpBr_4a752d, label %block_.L_4a7664, label %block_4a7533

block_4a7533:
  ; Code: movl $0x2, %eax	 RIP: 4a7533	 Bytes: 5
  %loadMem_4a7533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7533 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7533)
  store %struct.Memory* %call_4a7533, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %ecx	 RIP: 4a7538	 Bytes: 6
  %loadMem_4a7538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7538 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7538)
  store %struct.Memory* %call_4a7538, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5cc(%rbp)	 RIP: 4a753e	 Bytes: 6
  %loadMem_4a753e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a753e = call %struct.Memory* @routine_movl__eax__MINUS0x5cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a753e)
  store %struct.Memory* %call_4a753e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4a7544	 Bytes: 2
  %loadMem_4a7544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7544 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7544)
  store %struct.Memory* %call_4a7544, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a7546	 Bytes: 1
  %loadMem_4a7546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7546 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7546)
  store %struct.Memory* %call_4a7546, %struct.Memory** %MEMORY

  ; Code: movl -0x5cc(%rbp), %ecx	 RIP: 4a7547	 Bytes: 6
  %loadMem_4a7547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7547 = call %struct.Memory* @routine_movl_MINUS0x5cc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7547)
  store %struct.Memory* %call_4a7547, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a754d	 Bytes: 2
  %loadMem_4a754d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a754d = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a754d)
  store %struct.Memory* %call_4a754d, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %edx	 RIP: 4a754f	 Bytes: 3
  %loadMem_4a754f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a754f = call %struct.Memory* @routine_shll__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a754f)
  store %struct.Memory* %call_4a754f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1dc(%rbp)	 RIP: 4a7552	 Bytes: 6
  %loadMem_4a7552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7552 = call %struct.Memory* @routine_movl__edx__MINUS0x1dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7552)
  store %struct.Memory* %call_4a7552, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %edx	 RIP: 4a7558	 Bytes: 6
  %loadMem_4a7558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7558 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7558)
  store %struct.Memory* %call_4a7558, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4a755e	 Bytes: 2
  %loadMem_4a755e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a755e = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a755e)
  store %struct.Memory* %call_4a755e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4a7560	 Bytes: 1
  %loadMem_4a7560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7560 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7560)
  store %struct.Memory* %call_4a7560, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4a7561	 Bytes: 2
  %loadMem_4a7561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7561 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7561)
  store %struct.Memory* %call_4a7561, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 4a7563	 Bytes: 3
  %loadMem_4a7563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7563 = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7563)
  store %struct.Memory* %call_4a7563, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e0(%rbp)	 RIP: 4a7566	 Bytes: 6
  %loadMem_4a7566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7566 = call %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7566)
  store %struct.Memory* %call_4a7566, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4a756c	 Bytes: 7
  %loadMem_4a756c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a756c = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a756c)
  store %struct.Memory* %call_4a756c, %struct.Memory** %MEMORY

  ; Code: .L_4a7573:	 RIP: 4a7573	 Bytes: 0
  br label %block_.L_4a7573
block_.L_4a7573:

  ; Code: cmpl $0x2, -0x2c(%rbp)	 RIP: 4a7573	 Bytes: 4
  %loadMem_4a7573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7573 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7573)
  store %struct.Memory* %call_4a7573, %struct.Memory** %MEMORY

  ; Code: jge .L_4a764b	 RIP: 4a7577	 Bytes: 6
  %loadMem_4a7577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7577 = call %struct.Memory* @routine_jge_.L_4a764b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7577, i8* %BRANCH_TAKEN, i64 212, i64 6, i64 6)
  store %struct.Memory* %call_4a7577, %struct.Memory** %MEMORY

  %loadBr_4a7577 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7577 = icmp eq i8 %loadBr_4a7577, 1
  br i1 %cmpBr_4a7577, label %block_.L_4a764b, label %block_4a757d

block_4a757d:
  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4a757d	 Bytes: 7
  %loadMem_4a757d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a757d = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a757d)
  store %struct.Memory* %call_4a757d, %struct.Memory** %MEMORY

  ; Code: .L_4a7584:	 RIP: 4a7584	 Bytes: 0
  br label %block_.L_4a7584
block_.L_4a7584:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 4a7584	 Bytes: 4
  %loadMem_4a7584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7584 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7584)
  store %struct.Memory* %call_4a7584, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7638	 RIP: 4a7588	 Bytes: 6
  %loadMem_4a7588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7588 = call %struct.Memory* @routine_jge_.L_4a7638(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7588, i8* %BRANCH_TAKEN, i64 176, i64 6, i64 6)
  store %struct.Memory* %call_4a7588, %struct.Memory** %MEMORY

  %loadBr_4a7588 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7588 = icmp eq i8 %loadBr_4a7588, 1
  br i1 %cmpBr_4a7588, label %block_.L_4a7638, label %block_4a758e

block_4a758e:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 4a758e	 Bytes: 7
  %loadMem_4a758e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a758e = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a758e)
  store %struct.Memory* %call_4a758e, %struct.Memory** %MEMORY

  ; Code: .L_4a7595:	 RIP: 4a7595	 Bytes: 0
  br label %block_.L_4a7595
block_.L_4a7595:

  ; Code: cmpl $0x4, -0x38(%rbp)	 RIP: 4a7595	 Bytes: 4
  %loadMem_4a7595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7595 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7595)
  store %struct.Memory* %call_4a7595, %struct.Memory** %MEMORY

  ; Code: jge .L_4a7625	 RIP: 4a7599	 Bytes: 6
  %loadMem_4a7599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7599 = call %struct.Memory* @routine_jge_.L_4a7625(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7599, i8* %BRANCH_TAKEN, i64 140, i64 6, i64 6)
  store %struct.Memory* %call_4a7599, %struct.Memory** %MEMORY

  %loadBr_4a7599 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a7599 = icmp eq i8 %loadBr_4a7599, 1
  br i1 %cmpBr_4a7599, label %block_.L_4a7625, label %block_4a759f

block_4a759f:
  ; Code: leaq -0x480(%rbp), %rax	 RIP: 4a759f	 Bytes: 7
  %loadMem_4a759f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a759f = call %struct.Memory* @routine_leaq_MINUS0x480__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a759f)
  store %struct.Memory* %call_4a759f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a75a6	 Bytes: 4
  %loadMem_4a75a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75a6 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75a6)
  store %struct.Memory* %call_4a75a6, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rcx	 RIP: 4a75aa	 Bytes: 4
  %loadMem_4a75aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75aa = call %struct.Memory* @routine_shlq__0x8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75aa)
  store %struct.Memory* %call_4a75aa, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a75ae	 Bytes: 3
  %loadMem_4a75ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75ae = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75ae)
  store %struct.Memory* %call_4a75ae, %struct.Memory** %MEMORY

  ; Code: movslq -0x274(%rbp), %rcx	 RIP: 4a75b1	 Bytes: 7
  %loadMem_4a75b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75b1 = call %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75b1)
  store %struct.Memory* %call_4a75b1, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4a75b8	 Bytes: 4
  %loadMem_4a75b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75b8 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75b8)
  store %struct.Memory* %call_4a75b8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a75bc	 Bytes: 3
  %loadMem_4a75bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75bc = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75bc)
  store %struct.Memory* %call_4a75bc, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 4a75bf	 Bytes: 4
  %loadMem_4a75bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75bf = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75bf)
  store %struct.Memory* %call_4a75bf, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4a75c3	 Bytes: 4
  %loadMem_4a75c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75c3 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75c3)
  store %struct.Memory* %call_4a75c3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4a75c7	 Bytes: 3
  %loadMem_4a75c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75c7 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75c7)
  store %struct.Memory* %call_4a75c7, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 4a75ca	 Bytes: 4
  %loadMem_4a75ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75ca = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75ca)
  store %struct.Memory* %call_4a75ca, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4a75ce	 Bytes: 3
  %loadMem_4a75ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75ce = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75ce)
  store %struct.Memory* %call_4a75ce, %struct.Memory** %MEMORY

  ; Code: movw %dx, %si	 RIP: 4a75d1	 Bytes: 3
  %loadMem_4a75d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75d1 = call %struct.Memory* @routine_movw__dx___si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75d1)
  store %struct.Memory* %call_4a75d1, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4a75d4	 Bytes: 8
  %loadMem_4a75d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75d4 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75d4)
  store %struct.Memory* %call_4a75d4, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 4a75dc	 Bytes: 7
  %loadMem_4a75dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75dc = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75dc)
  store %struct.Memory* %call_4a75dc, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4a75e3	 Bytes: 4
  %loadMem_4a75e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75e3 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75e3)
  store %struct.Memory* %call_4a75e3, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a75e7	 Bytes: 4
  %loadMem_4a75e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75e7 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75e7)
  store %struct.Memory* %call_4a75e7, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %edx	 RIP: 4a75eb	 Bytes: 6
  %loadMem_4a75eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75eb = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75eb)
  store %struct.Memory* %call_4a75eb, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edx	 RIP: 4a75f1	 Bytes: 3
  %loadMem_4a75f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75f1 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75f1)
  store %struct.Memory* %call_4a75f1, %struct.Memory** %MEMORY

  ; Code: addl -0x1e0(%rbp), %edx	 RIP: 4a75f4	 Bytes: 6
  %loadMem_4a75f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75f4 = call %struct.Memory* @routine_addl_MINUS0x1e0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75f4)
  store %struct.Memory* %call_4a75f4, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 4a75fa	 Bytes: 3
  %loadMem_4a75fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75fa = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75fa)
  store %struct.Memory* %call_4a75fa, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4a75fd	 Bytes: 4
  %loadMem_4a75fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a75fd = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a75fd)
  store %struct.Memory* %call_4a75fd, %struct.Memory** %MEMORY

  ; Code: movl -0x1ec(%rbp), %edx	 RIP: 4a7601	 Bytes: 6
  %loadMem_4a7601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7601 = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7601)
  store %struct.Memory* %call_4a7601, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %edx	 RIP: 4a7607	 Bytes: 3
  %loadMem_4a7607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7607 = call %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7607)
  store %struct.Memory* %call_4a7607, %struct.Memory** %MEMORY

  ; Code: addl -0x1dc(%rbp), %edx	 RIP: 4a760a	 Bytes: 6
  %loadMem_4a760a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a760a = call %struct.Memory* @routine_addl_MINUS0x1dc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a760a)
  store %struct.Memory* %call_4a760a, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 4a7610	 Bytes: 3
  %loadMem_4a7610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7610 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7610)
  store %struct.Memory* %call_4a7610, %struct.Memory** %MEMORY

  ; Code: movw %si, (%rax,%rcx,2)	 RIP: 4a7613	 Bytes: 4
  %loadMem_4a7613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7613 = call %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7613)
  store %struct.Memory* %call_4a7613, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4a7617	 Bytes: 3
  %loadMem_4a7617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7617 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7617)
  store %struct.Memory* %call_4a7617, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a761a	 Bytes: 3
  %loadMem_4a761a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a761a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a761a)
  store %struct.Memory* %call_4a761a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4a761d	 Bytes: 3
  %loadMem_4a761d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a761d = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a761d)
  store %struct.Memory* %call_4a761d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a7595	 RIP: 4a7620	 Bytes: 5
  %loadMem_4a7620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7620 = call %struct.Memory* @routine_jmpq_.L_4a7595(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7620, i64 -139, i64 5)
  store %struct.Memory* %call_4a7620, %struct.Memory** %MEMORY

  br label %block_.L_4a7595

  ; Code: .L_4a7625:	 RIP: 4a7625	 Bytes: 0
block_.L_4a7625:

  ; Code: jmpq .L_4a762a	 RIP: 4a7625	 Bytes: 5
  %loadMem_4a7625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7625 = call %struct.Memory* @routine_jmpq_.L_4a762a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7625, i64 5, i64 5)
  store %struct.Memory* %call_4a7625, %struct.Memory** %MEMORY

  br label %block_.L_4a762a

  ; Code: .L_4a762a:	 RIP: 4a762a	 Bytes: 0
block_.L_4a762a:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4a762a	 Bytes: 3
  %loadMem_4a762a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a762a = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a762a)
  store %struct.Memory* %call_4a762a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a762d	 Bytes: 3
  %loadMem_4a762d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a762d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a762d)
  store %struct.Memory* %call_4a762d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4a7630	 Bytes: 3
  %loadMem_4a7630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7630 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7630)
  store %struct.Memory* %call_4a7630, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a7584	 RIP: 4a7633	 Bytes: 5
  %loadMem_4a7633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7633 = call %struct.Memory* @routine_jmpq_.L_4a7584(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7633, i64 -175, i64 5)
  store %struct.Memory* %call_4a7633, %struct.Memory** %MEMORY

  br label %block_.L_4a7584

  ; Code: .L_4a7638:	 RIP: 4a7638	 Bytes: 0
block_.L_4a7638:

  ; Code: jmpq .L_4a763d	 RIP: 4a7638	 Bytes: 5
  %loadMem_4a7638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7638 = call %struct.Memory* @routine_jmpq_.L_4a763d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7638, i64 5, i64 5)
  store %struct.Memory* %call_4a7638, %struct.Memory** %MEMORY

  br label %block_.L_4a763d

  ; Code: .L_4a763d:	 RIP: 4a763d	 Bytes: 0
block_.L_4a763d:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4a763d	 Bytes: 3
  %loadMem_4a763d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a763d = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a763d)
  store %struct.Memory* %call_4a763d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a7640	 Bytes: 3
  %loadMem_4a7640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7640 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7640)
  store %struct.Memory* %call_4a7640, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4a7643	 Bytes: 3
  %loadMem_4a7643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7643 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7643)
  store %struct.Memory* %call_4a7643, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a7573	 RIP: 4a7646	 Bytes: 5
  %loadMem_4a7646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7646 = call %struct.Memory* @routine_jmpq_.L_4a7573(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7646, i64 -211, i64 5)
  store %struct.Memory* %call_4a7646, %struct.Memory** %MEMORY

  br label %block_.L_4a7573

  ; Code: .L_4a764b:	 RIP: 4a764b	 Bytes: 0
block_.L_4a764b:

  ; Code: jmpq .L_4a7650	 RIP: 4a764b	 Bytes: 5
  %loadMem_4a764b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a764b = call %struct.Memory* @routine_jmpq_.L_4a7650(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a764b, i64 5, i64 5)
  store %struct.Memory* %call_4a764b, %struct.Memory** %MEMORY

  br label %block_.L_4a7650

  ; Code: .L_4a7650:	 RIP: 4a7650	 Bytes: 0
block_.L_4a7650:

  ; Code: movl -0x274(%rbp), %eax	 RIP: 4a7650	 Bytes: 6
  %loadMem_4a7650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7650 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7650)
  store %struct.Memory* %call_4a7650, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4a7656	 Bytes: 3
  %loadMem_4a7656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7656 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7656)
  store %struct.Memory* %call_4a7656, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x274(%rbp)	 RIP: 4a7659	 Bytes: 6
  %loadMem_4a7659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7659 = call %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7659)
  store %struct.Memory* %call_4a7659, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4a7526	 RIP: 4a765f	 Bytes: 5
  %loadMem_4a765f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a765f = call %struct.Memory* @routine_jmpq_.L_4a7526(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a765f, i64 -313, i64 5)
  store %struct.Memory* %call_4a765f, %struct.Memory** %MEMORY

  br label %block_.L_4a7526

  ; Code: .L_4a7664:	 RIP: 4a7664	 Bytes: 0
block_.L_4a7664:

  ; Code: jmpq .L_4a7669	 RIP: 4a7664	 Bytes: 5
  %loadMem_4a7664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7664 = call %struct.Memory* @routine_jmpq_.L_4a7669(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7664, i64 5, i64 5)
  store %struct.Memory* %call_4a7664, %struct.Memory** %MEMORY

  br label %block_.L_4a7669

  ; Code: .L_4a7669:	 RIP: 4a7669	 Bytes: 0
block_.L_4a7669:

  ; Code: jmpq .L_4a766e	 RIP: 4a7669	 Bytes: 5
  %loadMem_4a7669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7669 = call %struct.Memory* @routine_jmpq_.L_4a766e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7669, i64 5, i64 5)
  store %struct.Memory* %call_4a7669, %struct.Memory** %MEMORY

  br label %block_.L_4a766e

  ; Code: .L_4a766e:	 RIP: 4a766e	 Bytes: 0
block_.L_4a766e:

  ; Code: movl -0x4c(%rbp), %eax	 RIP: 4a766e	 Bytes: 3
  %loadMem_4a766e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a766e = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a766e)
  store %struct.Memory* %call_4a766e, %struct.Memory** %MEMORY

  ; Code: addq $0x5c8, %rsp	 RIP: 4a7671	 Bytes: 7
  %loadMem_4a7671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7671 = call %struct.Memory* @routine_addq__0x5c8___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7671)
  store %struct.Memory* %call_4a7671, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 4a7678	 Bytes: 1
  %loadMem_4a7678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7678 = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7678)
  store %struct.Memory* %call_4a7678, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 4a7679	 Bytes: 1
  %loadMem_4a7679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a7679 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a7679)
  store %struct.Memory* %call_4a7679, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 4a767a	 Bytes: 1
  %loadMem_4a767a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4a767a = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4a767a)
  store %struct.Memory* %call_4a767a, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_4a767a
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x5c8___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 1480)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0xffffffff___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 4294967295)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__r8d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x240__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0xd848__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xd848__rip__type* @G_0xd848__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 2)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PXORI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = xor i64 %12, %7
  %17 = xor i64 %15, %10
  %18 = trunc i64 %16 to i32
  %19 = lshr i64 %16, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast i8* %2 to i32*
  store i32 %18, i32* %21, align 1
  %22 = getelementptr inbounds i8, i8* %2, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %20, i32* %23, align 1
  %24 = trunc i64 %17 to i32
  %25 = getelementptr inbounds i8, i8* %2, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = lshr i64 %17, 32
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds i8, i8* %2, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorps__xmm2___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PXORI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %2 to double*
  store double %6, double* %7
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 24
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsi__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd__xmm2__MINUS0x1d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 472
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x484__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x488__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1160
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0x488__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x3___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 3)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__MINUS0x1e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_shll__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x1e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x98__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0x1e4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 484
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x1ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x9c__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x1e8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 488
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x1f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xa8__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x1f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xac__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x1f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x484__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1156
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_idivl__r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R10D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x1fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x200__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movsd__xmm1__MINUS0x208__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 520
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x726418___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x726418_type* @G_0x726418 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__rsi__MINUS0x210__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x3758__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_0xc__r11____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x278___r11___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %9, i64 632)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__r11___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x20c__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 524
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x278__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xc__rsi____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____ebx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x48c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ebx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EBX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x48c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0xffffffff___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 4294967295)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x258__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_0xc__r11____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x490__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x490__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 488
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x494__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r10d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x494__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_0x6cb8f8___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0xd8__r9_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = add i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_4a4292(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x258__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 600
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4a422f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x11868__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71784
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x254__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 596
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl__edx__MINUS0x498__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1176
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_4a423c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x498__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x498__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x258__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 576
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4a4279(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x23c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x49c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1180
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a4286(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x49c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x49c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x4a0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4a430e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4a42ed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x70__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x248__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x244__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x4a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1188
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a42fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4294967295)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x4a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x4a4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a4363(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_4a4347(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x68__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_movl__edx__MINUS0x4a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1192
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a4357(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x4a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x4a8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x4ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4ac__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4a43df(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4a43be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x230__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x22c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 556
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x4b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1200
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a43ce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x4b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x4b0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x224__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a4434(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_4a4418(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl__edx__MINUS0x4b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1204
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a4428(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x4b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x4b4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 544
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = select i1 %12, i64 %3, i64 %4
  store i64 %15, i64* %14, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jl_.L_4a444e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x224__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 548
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_4a445e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a4499(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x220__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x224__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 548
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_4a4481(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a448d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x224__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x4bc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x4b8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x214__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 532
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x218__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x21c__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 540
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x228__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 552
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x7fffffff____rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 2147483647)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.intrapred_luma8x8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x9__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a5f1f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4a4549(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4a450e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x7__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 7)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x3__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_4a451b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x218__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 536
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4a4549(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4a452f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x8__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4a453c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x214__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x21c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 540
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4a5f0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x9a0__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4a4692(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x8__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a4611(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x8__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a45fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x210__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1f8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x30__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1f4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = zext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x1cb8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 7352)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x7___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 7)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x150__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -336
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a457d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4603(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a456c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x228__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 552
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_4a462d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a4649(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0xd203__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xd203__rip__type* @G_0xd203__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd_MINUS0x18__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.floor_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_movl_MINUS0x4c0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x150__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x18__rcx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.SATD8X8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl___rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_4a468d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_4a5f07(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4a496f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a47bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a47a9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x7___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 7)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  store i16 %6, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_addq__0x3138___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 12600)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__esi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_movl_MINUS0x1f8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x1f4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}




















define %struct.Memory* @routine_movzwl___rax__rcx_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_subl__edi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addq__0x3338___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 6)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4a46bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a47ae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a46ae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.store_coding_state_cs_cm(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x208__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x228__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 552
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.RDCost_for_8x8IntraBlocks(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x1d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 472
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = bitcast i8* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp ne i8 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %2, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %14 = select i1 %11, i64 %3, i64 %4
  store i64 %14, i64* %13, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jbe_.L_4a4963(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a48bb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x41__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 65)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a48a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a4895(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_0x6cc5f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cc5f8_type* @G_0x6cc5f8 to i64))
  ret %struct.Memory* %11
}
















define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4a4828(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a489a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4817(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a48ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4806(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x8__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a4947(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x8__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a4934(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x1d0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1918__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movw___rcx__rsi_2____di(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__di____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a48d3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4939(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a48c2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movsd_MINUS0x1d8__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x208__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 520
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_callq_.reset_coding_state_cs_cm(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4a5f02(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a4bc7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a4bb4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x723720___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x723720_type* @G__0x723720 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6d40f0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6d40f0_type* @G__0x6d40f0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6f6fa0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x6f6fa0_type* @G__0x6f6fa0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6f6f90_type* @G_0x6f6f90 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq___rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1f8__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1f4__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_addq__0x2138___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 8504)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x278__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 484
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 44
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq__r9d___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 488
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 48
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_subl__r9d___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edi__MINUS0x264__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






















define %struct.Memory* @routine_addq__0x1cb8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 7352)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x24__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x7___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 7)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__edi__MINUS0x260__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}






















define %struct.Memory* @routine_addq__0x800___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2048)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_movl__edi__MINUS0x25c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x25c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0x264__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 612
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdx___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rsi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edi____r8__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x264__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__rsi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl___rdx__rsi_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__0x1___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__r9d___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edi__MINUS0x270__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x260__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0x270__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 624
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rcx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rdx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edi____rsi__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x270__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl___rcx__rdx_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}














define %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4a4987(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4bb9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4976(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a4c46(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a4c33(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_jmpq_.L_4a4bdf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4c38(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4bce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__ecx__MINUS0x268__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 616
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jge_.L_4a4d00(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a4ced(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x722ff0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x722ff0_type* @G__0x722ff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}


















define %struct.Memory* @routine_jmpq_.L_4a4c98(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4cf2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4c87(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__0x0__MINUS0x274__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 628
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x274__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 628
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a4fb4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x274__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4c4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_shll__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__MINUS0x1dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 476
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x274__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_shll__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a4de6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a4dd3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x6f6fa0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6f6fa0_type* @G__0x6f6fa0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x1dc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 476
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl_MINUS0x30__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x1e0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 480
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}














define %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4a4d6f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4dd8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4d5e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_xorl__edx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x274__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.RDCost_for_4x4Blocks_Chroma(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x268__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 616
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x268__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 616
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jge_.L_4a4ee7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a4ed4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x6d40f0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6d40f0_type* @G__0x6d40f0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6f8f20_type* @G__0x6f8f20 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addq__0x3338___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x1dc__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 476
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq__r8d___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x30__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x1e0__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 480
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x1dc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 476
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x1e0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 480
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}






















define %struct.Memory* @routine_jmpq_.L_4a4e1f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4ed9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4e0e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_addl__0x8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 8)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jge_.L_4a4f9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a4f88(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x6d2ec0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6d2ec0_type* @G__0x6d2ec0 to i64))
  ret %struct.Memory* %11
}








































define %struct.Memory* @routine_jmpq_.L_4a4f23(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4f8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4f12(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a4fa0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a4d11(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jge_.L_4a564a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a5637(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x6d2ec0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x6d2ec0_type* @G__0x6d2ec0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x722ff0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x722ff0_type* @G__0x722ff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rsi__rdi_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_movq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rsi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl___rdi__rsi_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RDI
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_subl__r9d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R9D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r8d__MINUS0x270__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movl___rdx__rsi_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl_MINUS0x270__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 624
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r8d__MINUS0x260__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x270__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 624
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movl___rsi__rdx_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_movl__r8d__MINUS0x264__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x264__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 612
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_addl___rcx__rdx_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i32, i32* %R8D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RCX
  %19 = load i64, i64* %RDX
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %17, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_movl__r8d__MINUS0x25c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x11bf0__rcx____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72688
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x264__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 612
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addq__0x2138___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 8504)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 484
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 44
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq__r10d___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 5)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addl_MINUS0x30__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 48
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movzwl___rcx__rdx_2____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl__r10d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R10D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__r9d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d__MINUS0x4c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1224
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_4a511c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a516a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x264__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movslq__esi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_addl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x4cc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x4c8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_4a5197(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x4d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a5250(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x264__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addq__0x2138___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 8504)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x278__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__edi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_addl__edi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4a51f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1236
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a5244(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




































define %struct.Memory* @routine_movl_MINUS0x4d4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x4d0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__ax___dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1940__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__eax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_movl_0x11bec__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x260__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 608
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x7___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 7)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shlq__0x4___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 4)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl__r9d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R9D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x4d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4a52ef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a532a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x260__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addq__0x1cb8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 7352)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_movl_MINUS0x4dc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1244
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x4d8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4a5357(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x4e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1248
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a53ea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x260__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addq__0x1cb8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 7352)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x7___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 7)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 4)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jle_.L_4a53a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1252
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a53de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




























define %struct.Memory* @routine_movl_MINUS0x4e4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1248
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x4e0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_0x1918__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}




















define %struct.Memory* @routine_movl_0x11bf0__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x25c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 604
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movslq_MINUS0x278__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movslq__r9d___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 5)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__eax__MINUS0x4e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1256
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4a54a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1260
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a54f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__0x800___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2048)
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_movl_MINUS0x4ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x4e8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4a5526(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x4f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1264
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a55ed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x25c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__0x800___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2048)
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_jle_.L_4a558c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x4f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1268
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a55e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x4f4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1264
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x4f0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax___cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1940__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movslq__eax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4a4fd3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a563c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a4fc2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x26c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 620
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jge_.L_4a58a2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x8___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 8)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_4a588f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x726418___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x726418_type* @G_0x726418 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






























define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movzwl___rax__rdx_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x26c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 620
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x26c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 620
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6f6f90_type* @G_0x6f6f90 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq___rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






























































define %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


















































































define %struct.Memory* @routine_jmpq_.L_4a566e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a5894(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a565b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sitofp i32 %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x26c__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 620
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cvtsi2sdl_MINUS0x268__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 616
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}










define %struct.Memory* @routine_jbe_.L_4a5efd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a599d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a598a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a5977(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














































define %struct.Memory* @routine_jmpq_.L_4a590a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a597c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a58f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a598f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a58e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a5e55(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x4f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1272
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4f8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
























define %struct.Memory* @routine_jge_.L_4a5a93(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 18)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a5a80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x6ccb00___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6ccb00_type* @G__0x6ccb00 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_0x3738__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_addl__0x4___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 4)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x274__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl___rcx__rsi_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movslq_MINUS0x274__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x90___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 144)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 72)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_4a5a05(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a5a85(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a59f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a5b3f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a5b2c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x240___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 576)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_addl__0x8___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 8)
  ret %struct.Memory* %12
}








































define %struct.Memory* @routine_jmpq_.L_4a5aab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a5b31(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a5a9a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a5e3c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x6d0920___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6d0920_type* @G__0x6d0920 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6cd4f0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x6cd4f0_type* @G__0x6cd4f0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x7107b0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x7107b0_type* @G__0x7107b0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6d4600___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x6d4600_type* @G__0x6d4600 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_shlq__0x6___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x4fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1276
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r9d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x508__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1288
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x4fc__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1276
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_idivl__r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R9D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_shll__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x274__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 628
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__edx__MINUS0x50c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1292
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x50c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1292
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__edx___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq__r10d___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_shll__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x510__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1296
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x510__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1296
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__eax___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movl___rdi__r8_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}








define %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x514__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl__edx__MINUS0x518__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1304
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x518__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1304
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movslq__r10d___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl__eax__MINUS0x51c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1308
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x51c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1308
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl_MINUS0x514__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rsi__rdi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_movq_MINUS0x508__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movl__edx__MINUS0x520__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1312
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x520__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1312
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movslq__r10d___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl__eax__MINUS0x524__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x524__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1316
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl___rdi__rsi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}






define %struct.Memory* @routine_addq__rsi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x528__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1320
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl__edx__MINUS0x52c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1324
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x52c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1324
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






















define %struct.Memory* @routine_movl__eax__MINUS0x530__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1328
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x530__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1328
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl_MINUS0x528__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a5e29(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4a5e16(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x480__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x1940__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_addl_MINUS0x1e0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 480
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x38__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x1dc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 476
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_shlq__0x8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 8)
  ret %struct.Memory* %12
}


























define %struct.Memory* @routine_jmpq_.L_4a5d89(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a5e1b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a5d78(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a5e2e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a5b46(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a5e41(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a59a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a5ee1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a5ece(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








































define %struct.Memory* @routine_jmpq_.L_4a5e6d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a5ed3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a5e5c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_jmpq_.L_4a5f0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a5f11(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a44dc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x70__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x1fc__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x200__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x228__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 552
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 40
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_4a5f62(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x534__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1332
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a5f97(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a5f7f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x538__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1336
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a5f8b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x538__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x534__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x3758__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movslq_0xc__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_imulq__0x278___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 632)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shll__0x2___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__0x18c__rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 396
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}






define %struct.Memory* @routine_jge_.L_4a60ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a6099(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x70__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x88__rdi____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_shll__0x2___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 2)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_addl__r8d___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x53c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1340
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x548__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1352
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x53c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1340
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_idivl__r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R8D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_addl__edx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__esi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x548__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___r9__rdi_8____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x8c__r10____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = add i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl__esi___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x54c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1356
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x54c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__esi___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx____rdi__r10_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %R10
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4a5fea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a609e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a5fd9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_4a71c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_4a6204(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a61eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a61d8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


































































































define %struct.Memory* @routine_jmpq_.L_4a60ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a61dd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a60dd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_leaq_MINUS0x44__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_callq_.dct_luma8x8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_4a71c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a64d9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a64c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movw___rsi__rdi_2____r8w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R8W, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_addq__0x3138___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 12600)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movw__r8w____rsi__rdi_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %R8W
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_movl_MINUS0x1f8__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 504
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl_MINUS0x1f4__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 500
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


































define %struct.Memory* @routine_movzwl___rsi__rdi_2____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_subl__r10d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R10D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r9d__MINUS0x264__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










































define %struct.Memory* @routine_movl__r9d__MINUS0x260__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






















































define %struct.Memory* @routine_movl__r9d__MINUS0x25c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x25c__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 604
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl_MINUS0x264__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 612
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}












define %struct.Memory* @routine_movl__r9d____rdi__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R9D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}












define %struct.Memory* @routine_movl___rdx__rsi_4____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_sarl__0x1___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i32, i32* %R10D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_movl__r9d__MINUS0x270__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x260__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 608
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl_MINUS0x270__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 624
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}












define %struct.Memory* @routine_movl__r9d____rsi__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R9D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x270__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 624
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movl___rcx__rdx_4____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}














define %struct.Memory* @routine_movl__r9d____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R9D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4a621c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a64cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a620b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a6558(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a6545(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_jmpq_.L_4a64f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a654a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a64e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_jge_.L_4a65ec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a65d9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_jmpq_.L_4a6584(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a65de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a6573(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a6b2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x550__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1360
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x550__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
























define %struct.Memory* @routine_jge_.L_4a66cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a66b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










































define %struct.Memory* @routine_jmpq_.L_4a6654(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a66bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a6643(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_xorl__edi___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.dct_chroma4x4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x7107b0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x7107b0_type* @G__0x7107b0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6d4600___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0x6d4600_type* @G__0x6d4600 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6d0920___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x6d0920_type* @G__0x6d0920 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax__MINUS0x554__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0x558__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1368
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x558__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x274__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x55c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1372
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x55c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__edx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r10___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R10
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x560__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1376
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x560__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x554__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____r9__r10_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R9
  %16 = load i64, i64* %R10
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}














define %struct.Memory* @routine_movl__edx__MINUS0x564__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1380
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x564__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__edi___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r9___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x568__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1384
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x568__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl___r8__r9_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %R9
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_movl__eax__MINUS0x56c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1388
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl__edx__MINUS0x570__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1392
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x570__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_addq__r8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x574__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x574__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x56c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx__r8_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_jge_.L_4a6910(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a68fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












































































define %struct.Memory* @routine_jmpq_.L_4a6848(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a6902(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a6837(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 1)
  ret %struct.Memory* %11
}
















define %struct.Memory* @routine_addq__0x40___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 64)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x40___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 64)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x40___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 64)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x578__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1400
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0x57c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1404
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x57c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__edx__MINUS0x580__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1408
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x580__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__eax__MINUS0x584__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x584__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1412
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x578__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movl__edx__MINUS0x588__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1416
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x588__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__eax__MINUS0x58c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1420
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x58c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__eax__MINUS0x590__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1424
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl__edx__MINUS0x594__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1428
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x594__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__eax__MINUS0x598__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1432
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x598__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x590__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_4a6b14(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a6b01(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










































define %struct.Memory* @routine_jmpq_.L_4a6a9c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a6b06(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a6a8b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a6b19(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a65f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a71bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a71a9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























































































































define %struct.Memory* @routine_movl__r8d__MINUS0x59c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1436
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4a6c8e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x5a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1440
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a6cdc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




































define %struct.Memory* @routine_movl_MINUS0x5a0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x59c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4a6d09(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x5a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1444
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a6dc2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_jle_.L_4a6d68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x5a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a6db6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




































define %struct.Memory* @routine_movl_MINUS0x5a8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x5a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x5a4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


























































define %struct.Memory* @routine_movl__eax__MINUS0x5ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1452
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4a6e61(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x5b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1456
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a6e9c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movl_MINUS0x5b0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5ac__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4a6ec9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x5b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1460
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a6f5c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_jle_.L_4a6f15(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x5b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1464
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a6f50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




























define %struct.Memory* @routine_movl_MINUS0x5b8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x5b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1460
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x5b4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


































































define %struct.Memory* @routine_movl__eax__MINUS0x5bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1468
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4a7016(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x5c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1472
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a706b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x5c0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5bc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4a7098(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x5c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1476
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a715f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








































define %struct.Memory* @routine_jle_.L_4a70fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x5c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1480
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4a7153(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x5c8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x5c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1476
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x5c4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1476
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}
































define %struct.Memory* @routine_jmpq_.L_4a6b45(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a71ae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a6b34(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_4a766e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a7282(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a726f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a725c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














































define %struct.Memory* @routine_jmpq_.L_4a71ef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a7261(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a71de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a7274(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a71cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_4a741e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a7419(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a7354(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a7341(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


























define %struct.Memory* @routine_addl__0x4___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 4)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_jmpq_.L_4a72c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a7346(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a72b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a7400(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a73ed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_addl__0x8___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 8)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_jmpq_.L_4a736c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a73f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a735b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a7405(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a72a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a741e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4a7507(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a74f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















































































define %struct.Memory* @routine_jmpq_.L_4a7436(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a74f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a7425(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_4a7669(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a7664(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x5cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1484
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x5cc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
























define %struct.Memory* @routine_jge_.L_4a764b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a7638(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4a7625(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


























define %struct.Memory* @routine_movw__dx___si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_addl_MINUS0x1e0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 480
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_addl_MINUS0x1dc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 476
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4a7595(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a762a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a7584(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a763d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a7573(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a7650(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4a7526(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4a7669(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x5c8___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 1480)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

