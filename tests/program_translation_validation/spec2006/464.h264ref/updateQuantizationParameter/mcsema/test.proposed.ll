; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_480690.Qstep2QP(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x31266__rip__type = type <{ [8 x i8] }>
@G_0x31266__rip_= global %G_0x31266__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31296__rip__type = type <{ [8 x i8] }>
@G_0x31296__rip_= global %G_0x31296__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x312b8__rip__type = type <{ [8 x i8] }>
@G_0x312b8__rip_= global %G_0x312b8__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x312e8__rip__type = type <{ [8 x i8] }>
@G_0x312e8__rip_= global %G_0x312e8__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x313a9__rip__type = type <{ [8 x i8] }>
@G_0x313a9__rip_= global %G_0x313a9__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x313d9__rip__type = type <{ [8 x i8] }>
@G_0x313d9__rip_= global %G_0x313d9__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31721__rip__type = type <{ [8 x i8] }>
@G_0x31721__rip_= global %G_0x31721__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31801__rip__type = type <{ [8 x i8] }>
@G_0x31801__rip_= global %G_0x31801__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31b5e__rip__type = type <{ [8 x i8] }>
@G_0x31b5e__rip_= global %G_0x31b5e__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31b8e__rip__type = type <{ [8 x i8] }>
@G_0x31b8e__rip_= global %G_0x31b8e__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31bb0__rip__type = type <{ [8 x i8] }>
@G_0x31bb0__rip_= global %G_0x31bb0__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31be0__rip__type = type <{ [8 x i8] }>
@G_0x31be0__rip_= global %G_0x31be0__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31d38__rip__type = type <{ [8 x i8] }>
@G_0x31d38__rip_= global %G_0x31d38__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x31d68__rip__type = type <{ [8 x i8] }>
@G_0x31d68__rip_= global %G_0x31d68__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x32d03__rip__type = type <{ [8 x i8] }>
@G_0x32d03__rip_= global %G_0x32d03__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x32ddd__rip__type = type <{ [8 x i8] }>
@G_0x32ddd__rip_= global %G_0x32ddd__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
@G_0x6cb8f8= global %G_0x6cb8f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6ccae0_type = type <{ [16 x i8] }>
@G_0x6ccae0= global %G_0x6ccae0_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x6ccf88_type = type <{ [8 x i8] }>
@G_0x6ccf88= global %G_0x6ccf88_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cd300_type = type <{ [8 x i8] }>
@G_0x6cd300= global %G_0x6cd300_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cd3a8_type = type <{ [4 x i8] }>
@G_0x6cd3a8= global %G_0x6cd3a8_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6cd474_type = type <{ [4 x i8] }>
@G_0x6cd474= global %G_0x6cd474_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6cea28_type = type <{ [8 x i8] }>
@G_0x6cea28= global %G_0x6cea28_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cea30_type = type <{ [16 x i8] }>
@G_0x6cea30= global %G_0x6cea30_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x6cea38_type = type <{ [8 x i8] }>
@G_0x6cea38= global %G_0x6cea38_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cfc68_type = type <{ [8 x i8] }>
@G_0x6cfc68= global %G_0x6cfc68_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6d0708_type = type <{ [16 x i8] }>
@G_0x6d0708= global %G_0x6d0708_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x6d1278_type = type <{ [4 x i8] }>
@G_0x6d1278= global %G_0x6d1278_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d1280_type = type <{ [16 x i8] }>
@G_0x6d1280= global %G_0x6d1280_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x6d1f88_type = type <{ [4 x i8] }>
@G_0x6d1f88= global %G_0x6d1f88_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d1fb0_type = type <{ [8 x i8] }>
@G_0x6d1fb0= global %G_0x6d1fb0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6d32cc_type = type <{ [4 x i8] }>
@G_0x6d32cc= global %G_0x6d32cc_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6d33e0_type = type <{ [16 x i8] }>
@G_0x6d33e0= global %G_0x6d33e0_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x6d4510_type = type <{ [4 x i8] }>
@G_0x6d4510= global %G_0x6d4510_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6e51e0_type = type <{ [4 x i8] }>
@G_0x6e51e0= global %G_0x6e51e0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f80a0_type = type <{ [4 x i8] }>
@G_0x6f80a0= global %G_0x6f80a0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f80c8_type = type <{ [4 x i8] }>
@G_0x6f80c8= global %G_0x6f80c8_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f8ed8_type = type <{ [4 x i8] }>
@G_0x6f8ed8= global %G_0x6f8ed8_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f9348_type = type <{ [4 x i8] }>
@G_0x6f9348= global %G_0x6f9348_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f9350_type = type <{ [8 x i8] }>
@G_0x6f9350= global %G_0x6f9350_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6f9358_type = type <{ [8 x i8] }>
@G_0x6f9358= global %G_0x6f9358_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6f9688_type = type <{ [4 x i8] }>
@G_0x6f9688= global %G_0x6f9688_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f9708_type = type <{ [4 x i8] }>
@G_0x6f9708= global %G_0x6f9708_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6f9720_type = type <{ [4 x i8] }>
@G_0x6f9720= global %G_0x6f9720_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x70d190_type = type <{ [4 x i8] }>
@G_0x70d190= global %G_0x70d190_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x70fce0_type = type <{ [4 x i8] }>
@G_0x70fce0= global %G_0x70fce0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x70fce4_type = type <{ [4 x i8] }>
@G_0x70fce4= global %G_0x70fce4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x710000_type = type <{ [4 x i8] }>
@G_0x710000= global %G_0x710000_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x710008_type = type <{ [16 x i8] }>
@G_0x710008= global %G_0x710008_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x710360_type = type <{ [4 x i8] }>
@G_0x710360= global %G_0x710360_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x710364_type = type <{ [4 x i8] }>
@G_0x710364= global %G_0x710364_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x710798_type = type <{ [8 x i8] }>
@G_0x710798= global %G_0x710798_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x7107a4_type = type <{ [4 x i8] }>
@G_0x7107a4= global %G_0x7107a4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x721df8_type = type <{ [16 x i8] }>
@G_0x721df8= global %G_0x721df8_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x722b78_type = type <{ [4 x i8] }>
@G_0x722b78= global %G_0x722b78_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x722c78_type = type <{ [4 x i8] }>
@G_0x722c78= global %G_0x722c78_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x722cb0_type = type <{ [8 x i8] }>
@G_0x722cb0= global %G_0x722cb0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x723640_type = type <{ [16 x i8] }>
@G_0x723640= global %G_0x723640_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x723648_type = type <{ [8 x i8] }>
@G_0x723648= global %G_0x723648_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x723690_type = type <{ [4 x i8] }>
@G_0x723690= global %G_0x723690_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x723698_type = type <{ [4 x i8] }>
@G_0x723698= global %G_0x723698_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x7236c0_type = type <{ [4 x i8] }>
@G_0x7236c0= global %G_0x7236c0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x724744_type = type <{ [4 x i8] }>
@G_0x724744= global %G_0x724744_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x725318_type = type <{ [4 x i8] }>
@G_0x725318= global %G_0x725318_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x7255f8_type = type <{ [16 x i8] }>
@G_0x7255f8= global %G_0x7255f8_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x726420_type = type <{ [8 x i8] }>
@G_0x726420= global %G_0x726420_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @updateQuantizationParameter(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .updateQuantizationParameter:	 RIP: 47e160	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 47e160	 Bytes: 1
  %loadMem_47e160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e160 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e160)
  store %struct.Memory* %call_47e160, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 47e161	 Bytes: 3
  %loadMem_47e161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e161 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e161)
  store %struct.Memory* %call_47e161, %struct.Memory** %MEMORY

  ; Code: subq $0xf0, %rsp	 RIP: 47e164	 Bytes: 7
  %loadMem_47e164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e164 = call %struct.Memory* @routine_subq__0xf0___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e164)
  store %struct.Memory* %call_47e164, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x8(%rbp)	 RIP: 47e16b	 Bytes: 3
  %loadMem_47e16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e16b = call %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e16b)
  store %struct.Memory* %call_47e16b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 47e16e	 Bytes: 8
  %loadMem_47e16e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e16e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e16e)
  store %struct.Memory* %call_47e16e, %struct.Memory** %MEMORY

  ; Code: movl 0x11bac(%rax), %edi	 RIP: 47e176	 Bytes: 6
  %loadMem_47e176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e176 = call %struct.Memory* @routine_movl_0x11bac__rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e176)
  store %struct.Memory* %call_47e176, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 47e17c	 Bytes: 8
  %loadMem_47e17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e17c = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e17c)
  store %struct.Memory* %call_47e17c, %struct.Memory** %MEMORY

  ; Code: cmpl 0x11ba0(%rax), %edi	 RIP: 47e184	 Bytes: 6
  %loadMem_47e184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e184 = call %struct.Memory* @routine_cmpl_0x11ba0__rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e184)
  store %struct.Memory* %call_47e184, %struct.Memory** %MEMORY

  ; Code: jne .L_47ede7	 RIP: 47e18a	 Bytes: 6
  %loadMem_47e18a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e18a = call %struct.Memory* @routine_jne_.L_47ede7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e18a, i8* %BRANCH_TAKEN, i64 3165, i64 6, i64 6)
  store %struct.Memory* %call_47e18a, %struct.Memory** %MEMORY

  %loadBr_47e18a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e18a = icmp eq i8 %loadBr_47e18a, 1
  br i1 %cmpBr_47e18a, label %block_.L_47ede7, label %block_47e190

block_47e190:
  ; Code: cmpl $0x0, -0x8(%rbp)	 RIP: 47e190	 Bytes: 4
  %loadMem_47e190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e190 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e190)
  store %struct.Memory* %call_47e190, %struct.Memory** %MEMORY

  ; Code: jne .L_47e1af	 RIP: 47e194	 Bytes: 6
  %loadMem_47e194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e194 = call %struct.Memory* @routine_jne_.L_47e1af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e194, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47e194, %struct.Memory** %MEMORY

  %loadBr_47e194 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e194 = icmp eq i8 %loadBr_47e194, 1
  br i1 %cmpBr_47e194, label %block_.L_47e1af, label %block_47e19a

block_47e19a:
  ; Code: movq 0x6cb900, %rax	 RIP: 47e19a	 Bytes: 8
  %loadMem_47e19a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e19a = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e19a)
  store %struct.Memory* %call_47e19a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47e1a2	 Bytes: 7
  %loadMem_47e1a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1a2 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1a2)
  store %struct.Memory* %call_47e1a2, %struct.Memory** %MEMORY

  ; Code: jne .L_47ed3c	 RIP: 47e1a9	 Bytes: 6
  %loadMem_47e1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1a9 = call %struct.Memory* @routine_jne_.L_47ed3c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1a9, i8* %BRANCH_TAKEN, i64 2963, i64 6, i64 6)
  store %struct.Memory* %call_47e1a9, %struct.Memory** %MEMORY

  %loadBr_47e1a9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e1a9 = icmp eq i8 %loadBr_47e1a9, 1
  br i1 %cmpBr_47e1a9, label %block_.L_47ed3c, label %block_.L_47e1af

  ; Code: .L_47e1af:	 RIP: 47e1af	 Bytes: 0
block_.L_47e1af:

  ; Code: movq 0x6cb900, %rax	 RIP: 47e1af	 Bytes: 8
  %loadMem_47e1af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1af = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1af)
  store %struct.Memory* %call_47e1af, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0x18(%rax)	 RIP: 47e1b7	 Bytes: 4
  %loadMem_47e1b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1b7 = call %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1b7)
  store %struct.Memory* %call_47e1b7, %struct.Memory** %MEMORY

  ; Code: jne .L_47e1de	 RIP: 47e1bb	 Bytes: 6
  %loadMem_47e1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1bb = call %struct.Memory* @routine_jne_.L_47e1de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1bb, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_47e1bb, %struct.Memory** %MEMORY

  %loadBr_47e1bb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e1bb = icmp eq i8 %loadBr_47e1bb, 1
  br i1 %cmpBr_47e1bb, label %block_.L_47e1de, label %block_47e1c1

block_47e1c1:
  ; Code: movl 0x6cd474, %eax	 RIP: 47e1c1	 Bytes: 7
  %loadMem_47e1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1c1 = call %struct.Memory* @routine_movl_0x6cd474___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1c1)
  store %struct.Memory* %call_47e1c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e1c8	 Bytes: 7
  %loadMem_47e1c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1c8 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1c8)
  store %struct.Memory* %call_47e1c8, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e1cf	 Bytes: 7
  %loadMem_47e1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1cf = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1cf)
  store %struct.Memory* %call_47e1cf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47e1d6	 Bytes: 3
  %loadMem_47e1d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1d6 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1d6)
  store %struct.Memory* %call_47e1d6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47e1d9	 Bytes: 5
  %loadMem_47e1d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1d9 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1d9, i64 9380, i64 5)
  store %struct.Memory* %call_47e1d9, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47e1de:	 RIP: 47e1de	 Bytes: 0
block_.L_47e1de:

  ; Code: movq 0x6cb900, %rax	 RIP: 47e1de	 Bytes: 8
  %loadMem_47e1de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1de = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1de)
  store %struct.Memory* %call_47e1de, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x18(%rax)	 RIP: 47e1e6	 Bytes: 4
  %loadMem_47e1e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1e6 = call %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1e6)
  store %struct.Memory* %call_47e1e6, %struct.Memory** %MEMORY

  ; Code: jne .L_47e753	 RIP: 47e1ea	 Bytes: 6
  %loadMem_47e1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1ea = call %struct.Memory* @routine_jne_.L_47e753(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1ea, i8* %BRANCH_TAKEN, i64 1385, i64 6, i64 6)
  store %struct.Memory* %call_47e1ea, %struct.Memory** %MEMORY

  %loadBr_47e1ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e1ea = icmp eq i8 %loadBr_47e1ea, 1
  br i1 %cmpBr_47e1ea, label %block_.L_47e753, label %block_47e1f0

block_47e1f0:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47e1f0	 Bytes: 8
  %loadMem_47e1f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1f0 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1f0)
  store %struct.Memory* %call_47e1f0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x4d4(%rax)	 RIP: 47e1f8	 Bytes: 7
  %loadMem_47e1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1f8 = call %struct.Memory* @routine_cmpl__0x1__0x4d4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1f8)
  store %struct.Memory* %call_47e1f8, %struct.Memory** %MEMORY

  ; Code: jne .L_47e365	 RIP: 47e1ff	 Bytes: 6
  %loadMem_47e1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e1ff = call %struct.Memory* @routine_jne_.L_47e365(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e1ff, i8* %BRANCH_TAKEN, i64 358, i64 6, i64 6)
  store %struct.Memory* %call_47e1ff, %struct.Memory** %MEMORY

  %loadBr_47e1ff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e1ff = icmp eq i8 %loadBr_47e1ff, 1
  br i1 %cmpBr_47e1ff, label %block_.L_47e365, label %block_47e205

block_47e205:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47e205	 Bytes: 8
  %loadMem_47e205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e205 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e205)
  store %struct.Memory* %call_47e205, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47e20d	 Bytes: 7
  %loadMem_47e20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e20d = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e20d)
  store %struct.Memory* %call_47e20d, %struct.Memory** %MEMORY

  ; Code: je .L_47e22f	 RIP: 47e214	 Bytes: 6
  %loadMem_47e214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e214 = call %struct.Memory* @routine_je_.L_47e22f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e214, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47e214, %struct.Memory** %MEMORY

  %loadBr_47e214 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e214 = icmp eq i8 %loadBr_47e214, 1
  br i1 %cmpBr_47e214, label %block_.L_47e22f, label %block_47e21a

block_47e21a:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47e21a	 Bytes: 8
  %loadMem_47e21a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e21a = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e21a)
  store %struct.Memory* %call_47e21a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47e222	 Bytes: 7
  %loadMem_47e222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e222 = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e222)
  store %struct.Memory* %call_47e222, %struct.Memory** %MEMORY

  ; Code: je .L_47e2a0	 RIP: 47e229	 Bytes: 6
  %loadMem_47e229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e229 = call %struct.Memory* @routine_je_.L_47e2a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e229, i8* %BRANCH_TAKEN, i64 119, i64 6, i64 6)
  store %struct.Memory* %call_47e229, %struct.Memory** %MEMORY

  %loadBr_47e229 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e229 = icmp eq i8 %loadBr_47e229, 1
  br i1 %cmpBr_47e229, label %block_.L_47e2a0, label %block_.L_47e22f

  ; Code: .L_47e22f:	 RIP: 47e22f	 Bytes: 0
block_.L_47e22f:

  ; Code: movq 0x6cb900, %rax	 RIP: 47e22f	 Bytes: 8
  %loadMem_47e22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e22f = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e22f)
  store %struct.Memory* %call_47e22f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47e237	 Bytes: 7
  %loadMem_47e237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e237 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e237)
  store %struct.Memory* %call_47e237, %struct.Memory** %MEMORY

  ; Code: jne .L_47e29b	 RIP: 47e23e	 Bytes: 6
  %loadMem_47e23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e23e = call %struct.Memory* @routine_jne_.L_47e29b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e23e, i8* %BRANCH_TAKEN, i64 93, i64 6, i64 6)
  store %struct.Memory* %call_47e23e, %struct.Memory** %MEMORY

  %loadBr_47e23e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e23e = icmp eq i8 %loadBr_47e23e, 1
  br i1 %cmpBr_47e23e, label %block_.L_47e29b, label %block_47e244

block_47e244:
  ; Code: movq 0x6cb900, %rax	 RIP: 47e244	 Bytes: 8
  %loadMem_47e244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e244 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e244)
  store %struct.Memory* %call_47e244, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b9c(%rax)	 RIP: 47e24c	 Bytes: 7
  %loadMem_47e24c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e24c = call %struct.Memory* @routine_cmpl__0x1__0x11b9c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e24c)
  store %struct.Memory* %call_47e24c, %struct.Memory** %MEMORY

  ; Code: jne .L_47e27a	 RIP: 47e253	 Bytes: 6
  %loadMem_47e253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e253 = call %struct.Memory* @routine_jne_.L_47e27a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e253, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_47e253, %struct.Memory** %MEMORY

  %loadBr_47e253 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e253 = icmp eq i8 %loadBr_47e253, 1
  br i1 %cmpBr_47e253, label %block_.L_47e27a, label %block_47e259

block_47e259:
  ; Code: movl 0x70d190, %eax	 RIP: 47e259	 Bytes: 7
  %loadMem_47e259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e259 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e259)
  store %struct.Memory* %call_47e259, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47e260	 Bytes: 7
  %loadMem_47e260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e260 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e260)
  store %struct.Memory* %call_47e260, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9708, %eax	 RIP: 47e267	 Bytes: 7
  %loadMem_47e267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e267 = call %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e267)
  store %struct.Memory* %call_47e267, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47e26e	 Bytes: 7
  %loadMem_47e26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e26e = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e26e)
  store %struct.Memory* %call_47e26e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e296	 RIP: 47e275	 Bytes: 5
  %loadMem_47e275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e275 = call %struct.Memory* @routine_jmpq_.L_47e296(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e275, i64 33, i64 5)
  store %struct.Memory* %call_47e275, %struct.Memory** %MEMORY

  br label %block_.L_47e296

  ; Code: .L_47e27a:	 RIP: 47e27a	 Bytes: 0
block_.L_47e27a:

  ; Code: movl 0x70d190, %eax	 RIP: 47e27a	 Bytes: 7
  %loadMem_47e27a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e27a = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e27a)
  store %struct.Memory* %call_47e27a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47e281	 Bytes: 7
  %loadMem_47e281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e281 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e281)
  store %struct.Memory* %call_47e281, %struct.Memory** %MEMORY

  ; Code: movl 0x7236c0, %eax	 RIP: 47e288	 Bytes: 7
  %loadMem_47e288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e288 = call %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e288)
  store %struct.Memory* %call_47e288, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47e28f	 Bytes: 7
  %loadMem_47e28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e28f = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e28f)
  store %struct.Memory* %call_47e28f, %struct.Memory** %MEMORY

  ; Code: .L_47e296:	 RIP: 47e296	 Bytes: 0
  br label %block_.L_47e296
block_.L_47e296:

  ; Code: jmpq .L_47e29b	 RIP: 47e296	 Bytes: 5
  %loadMem_47e296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e296 = call %struct.Memory* @routine_jmpq_.L_47e29b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e296, i64 5, i64 5)
  store %struct.Memory* %call_47e296, %struct.Memory** %MEMORY

  br label %block_.L_47e29b

  ; Code: .L_47e29b:	 RIP: 47e29b	 Bytes: 0
block_.L_47e29b:

  ; Code: jmpq .L_47e2a0	 RIP: 47e29b	 Bytes: 5
  %loadMem_47e29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e29b = call %struct.Memory* @routine_jmpq_.L_47e2a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e29b, i64 5, i64 5)
  store %struct.Memory* %call_47e29b, %struct.Memory** %MEMORY

  br label %block_.L_47e2a0

  ; Code: .L_47e2a0:	 RIP: 47e2a0	 Bytes: 0
block_.L_47e2a0:

  ; Code: movl 0x6cd3a8, %eax	 RIP: 47e2a0	 Bytes: 7
  %loadMem_47e2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2a0 = call %struct.Memory* @routine_movl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2a0)
  store %struct.Memory* %call_47e2a0, %struct.Memory** %MEMORY

  ; Code: cmpl 0x70d190, %eax	 RIP: 47e2a7	 Bytes: 7
  %loadMem_47e2a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2a7 = call %struct.Memory* @routine_cmpl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2a7)
  store %struct.Memory* %call_47e2a7, %struct.Memory** %MEMORY

  ; Code: jne .L_47e2ca	 RIP: 47e2ae	 Bytes: 6
  %loadMem_47e2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2ae = call %struct.Memory* @routine_jne_.L_47e2ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2ae, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_47e2ae, %struct.Memory** %MEMORY

  %loadBr_47e2ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e2ae = icmp eq i8 %loadBr_47e2ae, 1
  br i1 %cmpBr_47e2ae, label %block_.L_47e2ca, label %block_47e2b4

block_47e2b4:
  ; Code: movl 0x6cd3a8, %eax	 RIP: 47e2b4	 Bytes: 7
  %loadMem_47e2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2b4 = call %struct.Memory* @routine_movl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2b4)
  store %struct.Memory* %call_47e2b4, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 47e2bb	 Bytes: 3
  %loadMem_47e2bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2bb = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2bb)
  store %struct.Memory* %call_47e2bb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e2be	 Bytes: 7
  %loadMem_47e2be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2be = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2be)
  store %struct.Memory* %call_47e2be, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e2f2	 RIP: 47e2c5	 Bytes: 5
  %loadMem_47e2c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2c5 = call %struct.Memory* @routine_jmpq_.L_47e2f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2c5, i64 45, i64 5)
  store %struct.Memory* %call_47e2c5, %struct.Memory** %MEMORY

  br label %block_.L_47e2f2

  ; Code: .L_47e2ca:	 RIP: 47e2ca	 Bytes: 0
block_.L_47e2ca:

  ; Code: movl $0x2, %eax	 RIP: 47e2ca	 Bytes: 5
  %loadMem_47e2ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2ca = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2ca)
  store %struct.Memory* %call_47e2ca, %struct.Memory** %MEMORY

  ; Code: movl 0x6cd3a8, %ecx	 RIP: 47e2cf	 Bytes: 7
  %loadMem_47e2cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2cf = call %struct.Memory* @routine_movl_0x6cd3a8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2cf)
  store %struct.Memory* %call_47e2cf, %struct.Memory** %MEMORY

  ; Code: addl 0x70d190, %ecx	 RIP: 47e2d6	 Bytes: 7
  %loadMem_47e2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2d6 = call %struct.Memory* @routine_addl_0x70d190___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2d6)
  store %struct.Memory* %call_47e2d6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 47e2dd	 Bytes: 3
  %loadMem_47e2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2dd = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2dd)
  store %struct.Memory* %call_47e2dd, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 47e2e0	 Bytes: 2
  %loadMem_47e2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2e0 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2e0)
  store %struct.Memory* %call_47e2e0, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47e2e2	 Bytes: 1
  %loadMem_47e2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2e2 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2e2)
  store %struct.Memory* %call_47e2e2, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 47e2e3	 Bytes: 3
  %loadMem_47e2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2e3 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2e3)
  store %struct.Memory* %call_47e2e3, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47e2e6	 Bytes: 2
  %loadMem_47e2e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2e6 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2e6)
  store %struct.Memory* %call_47e2e6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47e2e8	 Bytes: 3
  %loadMem_47e2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2e8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2e8)
  store %struct.Memory* %call_47e2e8, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e2eb	 Bytes: 7
  %loadMem_47e2eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2eb = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2eb)
  store %struct.Memory* %call_47e2eb, %struct.Memory** %MEMORY

  ; Code: .L_47e2f2:	 RIP: 47e2f2	 Bytes: 0
  br label %block_.L_47e2f2
block_.L_47e2f2:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e2f2	 Bytes: 7
  %loadMem_47e2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2f2 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2f2)
  store %struct.Memory* %call_47e2f2, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 47e2f9	 Bytes: 7
  %loadMem_47e2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e2f9 = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e2f9)
  store %struct.Memory* %call_47e2f9, %struct.Memory** %MEMORY

  ; Code: jge .L_47e315	 RIP: 47e300	 Bytes: 6
  %loadMem_47e300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e300 = call %struct.Memory* @routine_jge_.L_47e315(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e300, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47e300, %struct.Memory** %MEMORY

  %loadBr_47e300 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e300 = icmp eq i8 %loadBr_47e300, 1
  br i1 %cmpBr_47e300, label %block_.L_47e315, label %block_47e306

block_47e306:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47e306	 Bytes: 7
  %loadMem_47e306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e306 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e306)
  store %struct.Memory* %call_47e306, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 47e30d	 Bytes: 3
  %loadMem_47e30d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e30d = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e30d)
  store %struct.Memory* %call_47e30d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e31f	 RIP: 47e310	 Bytes: 5
  %loadMem_47e310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e310 = call %struct.Memory* @routine_jmpq_.L_47e31f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e310, i64 15, i64 5)
  store %struct.Memory* %call_47e310, %struct.Memory** %MEMORY

  br label %block_.L_47e31f

  ; Code: .L_47e315:	 RIP: 47e315	 Bytes: 0
block_.L_47e315:

  ; Code: movl 0x724744, %eax	 RIP: 47e315	 Bytes: 7
  %loadMem_47e315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e315 = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e315)
  store %struct.Memory* %call_47e315, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 47e31c	 Bytes: 3
  %loadMem_47e31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e31c = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e31c)
  store %struct.Memory* %call_47e31c, %struct.Memory** %MEMORY

  ; Code: .L_47e31f:	 RIP: 47e31f	 Bytes: 0
  br label %block_.L_47e31f
block_.L_47e31f:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 47e31f	 Bytes: 3
  %loadMem_47e31f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e31f = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e31f)
  store %struct.Memory* %call_47e31f, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e322	 Bytes: 7
  %loadMem_47e322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e322 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e322)
  store %struct.Memory* %call_47e322, %struct.Memory** %MEMORY

  ; Code: movl 0x710364, %eax	 RIP: 47e329	 Bytes: 7
  %loadMem_47e329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e329 = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e329)
  store %struct.Memory* %call_47e329, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 47e330	 Bytes: 7
  %loadMem_47e330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e330 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e330)
  store %struct.Memory* %call_47e330, %struct.Memory** %MEMORY

  ; Code: jge .L_47e34c	 RIP: 47e337	 Bytes: 6
  %loadMem_47e337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e337 = call %struct.Memory* @routine_jge_.L_47e34c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e337, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47e337, %struct.Memory** %MEMORY

  %loadBr_47e337 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e337 = icmp eq i8 %loadBr_47e337, 1
  br i1 %cmpBr_47e337, label %block_.L_47e34c, label %block_47e33d

block_47e33d:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47e33d	 Bytes: 7
  %loadMem_47e33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e33d = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e33d)
  store %struct.Memory* %call_47e33d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x34(%rbp)	 RIP: 47e344	 Bytes: 3
  %loadMem_47e344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e344 = call %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e344)
  store %struct.Memory* %call_47e344, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e356	 RIP: 47e347	 Bytes: 5
  %loadMem_47e347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e347 = call %struct.Memory* @routine_jmpq_.L_47e356(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e347, i64 15, i64 5)
  store %struct.Memory* %call_47e347, %struct.Memory** %MEMORY

  br label %block_.L_47e356

  ; Code: .L_47e34c:	 RIP: 47e34c	 Bytes: 0
block_.L_47e34c:

  ; Code: movl 0x710364, %eax	 RIP: 47e34c	 Bytes: 7
  %loadMem_47e34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e34c = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e34c)
  store %struct.Memory* %call_47e34c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x34(%rbp)	 RIP: 47e353	 Bytes: 3
  %loadMem_47e353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e353 = call %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e353)
  store %struct.Memory* %call_47e353, %struct.Memory** %MEMORY

  ; Code: .L_47e356:	 RIP: 47e356	 Bytes: 0
  br label %block_.L_47e356
block_.L_47e356:

  ; Code: movl -0x34(%rbp), %eax	 RIP: 47e356	 Bytes: 3
  %loadMem_47e356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e356 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e356)
  store %struct.Memory* %call_47e356, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e359	 Bytes: 7
  %loadMem_47e359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e359 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e359)
  store %struct.Memory* %call_47e359, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e744	 RIP: 47e360	 Bytes: 5
  %loadMem_47e360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e360 = call %struct.Memory* @routine_jmpq_.L_47e744(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e360, i64 996, i64 5)
  store %struct.Memory* %call_47e360, %struct.Memory** %MEMORY

  br label %block_.L_47e744

  ; Code: .L_47e365:	 RIP: 47e365	 Bytes: 0
block_.L_47e365:

  ; Code: movl 0x70fce0, %eax	 RIP: 47e365	 Bytes: 7
  %loadMem_47e365 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e365 = call %struct.Memory* @routine_movl_0x70fce0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e365)
  store %struct.Memory* %call_47e365, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47e36c	 Bytes: 3
  %loadMem_47e36c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e36c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e36c)
  store %struct.Memory* %call_47e36c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47e36f	 Bytes: 8
  %loadMem_47e36f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e36f = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e36f)
  store %struct.Memory* %call_47e36f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47e377	 Bytes: 1
  %loadMem_47e377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e377 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e377)
  store %struct.Memory* %call_47e377, %struct.Memory** %MEMORY

  ; Code: idivl 0x4d4(%rcx)	 RIP: 47e378	 Bytes: 6
  %loadMem_47e378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e378 = call %struct.Memory* @routine_idivl_0x4d4__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e378)
  store %struct.Memory* %call_47e378, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x18(%rbp)	 RIP: 47e37e	 Bytes: 3
  %loadMem_47e37e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e37e = call %struct.Memory* @routine_movl__edx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e37e)
  store %struct.Memory* %call_47e37e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x18(%rbp)	 RIP: 47e381	 Bytes: 4
  %loadMem_47e381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e381 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e381)
  store %struct.Memory* %call_47e381, %struct.Memory** %MEMORY

  ; Code: jne .L_47e39c	 RIP: 47e385	 Bytes: 6
  %loadMem_47e385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e385 = call %struct.Memory* @routine_jne_.L_47e39c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e385, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_47e385, %struct.Memory** %MEMORY

  %loadBr_47e385 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e385 = icmp eq i8 %loadBr_47e385, 1
  br i1 %cmpBr_47e385, label %block_.L_47e39c, label %block_47e38b

block_47e38b:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47e38b	 Bytes: 8
  %loadMem_47e38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e38b = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e38b)
  store %struct.Memory* %call_47e38b, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rax), %ecx	 RIP: 47e393	 Bytes: 6
  %loadMem_47e393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e393 = call %struct.Memory* @routine_movl_0x4d4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e393)
  store %struct.Memory* %call_47e393, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 47e399	 Bytes: 3
  %loadMem_47e399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e399 = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e399)
  store %struct.Memory* %call_47e399, %struct.Memory** %MEMORY

  ; Code: .L_47e39c:	 RIP: 47e39c	 Bytes: 0
  br label %block_.L_47e39c
block_.L_47e39c:

  ; Code: cmpl $0x1, -0x18(%rbp)	 RIP: 47e39c	 Bytes: 4
  %loadMem_47e39c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e39c = call %struct.Memory* @routine_cmpl__0x1__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e39c)
  store %struct.Memory* %call_47e39c, %struct.Memory** %MEMORY

  ; Code: jne .L_47e446	 RIP: 47e3a0	 Bytes: 6
  %loadMem_47e3a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3a0 = call %struct.Memory* @routine_jne_.L_47e446(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3a0, i8* %BRANCH_TAKEN, i64 166, i64 6, i64 6)
  store %struct.Memory* %call_47e3a0, %struct.Memory** %MEMORY

  %loadBr_47e3a0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e3a0 = icmp eq i8 %loadBr_47e3a0, 1
  br i1 %cmpBr_47e3a0, label %block_.L_47e446, label %block_47e3a6

block_47e3a6:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47e3a6	 Bytes: 8
  %loadMem_47e3a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3a6 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3a6)
  store %struct.Memory* %call_47e3a6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47e3ae	 Bytes: 7
  %loadMem_47e3ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3ae = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3ae)
  store %struct.Memory* %call_47e3ae, %struct.Memory** %MEMORY

  ; Code: je .L_47e3d0	 RIP: 47e3b5	 Bytes: 6
  %loadMem_47e3b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3b5 = call %struct.Memory* @routine_je_.L_47e3d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3b5, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47e3b5, %struct.Memory** %MEMORY

  %loadBr_47e3b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e3b5 = icmp eq i8 %loadBr_47e3b5, 1
  br i1 %cmpBr_47e3b5, label %block_.L_47e3d0, label %block_47e3bb

block_47e3bb:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47e3bb	 Bytes: 8
  %loadMem_47e3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3bb = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3bb)
  store %struct.Memory* %call_47e3bb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47e3c3	 Bytes: 7
  %loadMem_47e3c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3c3 = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3c3)
  store %struct.Memory* %call_47e3c3, %struct.Memory** %MEMORY

  ; Code: je .L_47e441	 RIP: 47e3ca	 Bytes: 6
  %loadMem_47e3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3ca = call %struct.Memory* @routine_je_.L_47e441(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3ca, i8* %BRANCH_TAKEN, i64 119, i64 6, i64 6)
  store %struct.Memory* %call_47e3ca, %struct.Memory** %MEMORY

  %loadBr_47e3ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e3ca = icmp eq i8 %loadBr_47e3ca, 1
  br i1 %cmpBr_47e3ca, label %block_.L_47e441, label %block_.L_47e3d0

  ; Code: .L_47e3d0:	 RIP: 47e3d0	 Bytes: 0
block_.L_47e3d0:

  ; Code: movq 0x6cb900, %rax	 RIP: 47e3d0	 Bytes: 8
  %loadMem_47e3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3d0 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3d0)
  store %struct.Memory* %call_47e3d0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47e3d8	 Bytes: 7
  %loadMem_47e3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3d8 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3d8)
  store %struct.Memory* %call_47e3d8, %struct.Memory** %MEMORY

  ; Code: jne .L_47e43c	 RIP: 47e3df	 Bytes: 6
  %loadMem_47e3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3df = call %struct.Memory* @routine_jne_.L_47e43c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3df, i8* %BRANCH_TAKEN, i64 93, i64 6, i64 6)
  store %struct.Memory* %call_47e3df, %struct.Memory** %MEMORY

  %loadBr_47e3df = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e3df = icmp eq i8 %loadBr_47e3df, 1
  br i1 %cmpBr_47e3df, label %block_.L_47e43c, label %block_47e3e5

block_47e3e5:
  ; Code: movq 0x6cb900, %rax	 RIP: 47e3e5	 Bytes: 8
  %loadMem_47e3e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3e5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3e5)
  store %struct.Memory* %call_47e3e5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b9c(%rax)	 RIP: 47e3ed	 Bytes: 7
  %loadMem_47e3ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3ed = call %struct.Memory* @routine_cmpl__0x1__0x11b9c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3ed)
  store %struct.Memory* %call_47e3ed, %struct.Memory** %MEMORY

  ; Code: jne .L_47e41b	 RIP: 47e3f4	 Bytes: 6
  %loadMem_47e3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3f4 = call %struct.Memory* @routine_jne_.L_47e41b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3f4, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_47e3f4, %struct.Memory** %MEMORY

  %loadBr_47e3f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e3f4 = icmp eq i8 %loadBr_47e3f4, 1
  br i1 %cmpBr_47e3f4, label %block_.L_47e41b, label %block_47e3fa

block_47e3fa:
  ; Code: movl 0x70d190, %eax	 RIP: 47e3fa	 Bytes: 7
  %loadMem_47e3fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e3fa = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e3fa)
  store %struct.Memory* %call_47e3fa, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47e401	 Bytes: 7
  %loadMem_47e401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e401 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e401)
  store %struct.Memory* %call_47e401, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9708, %eax	 RIP: 47e408	 Bytes: 7
  %loadMem_47e408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e408 = call %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e408)
  store %struct.Memory* %call_47e408, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47e40f	 Bytes: 7
  %loadMem_47e40f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e40f = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e40f)
  store %struct.Memory* %call_47e40f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e437	 RIP: 47e416	 Bytes: 5
  %loadMem_47e416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e416 = call %struct.Memory* @routine_jmpq_.L_47e437(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e416, i64 33, i64 5)
  store %struct.Memory* %call_47e416, %struct.Memory** %MEMORY

  br label %block_.L_47e437

  ; Code: .L_47e41b:	 RIP: 47e41b	 Bytes: 0
block_.L_47e41b:

  ; Code: movl 0x70d190, %eax	 RIP: 47e41b	 Bytes: 7
  %loadMem_47e41b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e41b = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e41b)
  store %struct.Memory* %call_47e41b, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47e422	 Bytes: 7
  %loadMem_47e422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e422 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e422)
  store %struct.Memory* %call_47e422, %struct.Memory** %MEMORY

  ; Code: movl 0x7236c0, %eax	 RIP: 47e429	 Bytes: 7
  %loadMem_47e429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e429 = call %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e429)
  store %struct.Memory* %call_47e429, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47e430	 Bytes: 7
  %loadMem_47e430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e430 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e430)
  store %struct.Memory* %call_47e430, %struct.Memory** %MEMORY

  ; Code: .L_47e437:	 RIP: 47e437	 Bytes: 0
  br label %block_.L_47e437
block_.L_47e437:

  ; Code: jmpq .L_47e43c	 RIP: 47e437	 Bytes: 5
  %loadMem_47e437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e437 = call %struct.Memory* @routine_jmpq_.L_47e43c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e437, i64 5, i64 5)
  store %struct.Memory* %call_47e437, %struct.Memory** %MEMORY

  br label %block_.L_47e43c

  ; Code: .L_47e43c:	 RIP: 47e43c	 Bytes: 0
block_.L_47e43c:

  ; Code: jmpq .L_47e441	 RIP: 47e43c	 Bytes: 5
  %loadMem_47e43c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e43c = call %struct.Memory* @routine_jmpq_.L_47e441(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e43c, i64 5, i64 5)
  store %struct.Memory* %call_47e43c, %struct.Memory** %MEMORY

  br label %block_.L_47e441

  ; Code: .L_47e441:	 RIP: 47e441	 Bytes: 0
block_.L_47e441:

  ; Code: jmpq .L_47e446	 RIP: 47e441	 Bytes: 5
  %loadMem_47e441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e441 = call %struct.Memory* @routine_jmpq_.L_47e446(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e441, i64 5, i64 5)
  store %struct.Memory* %call_47e441, %struct.Memory** %MEMORY

  br label %block_.L_47e446

  ; Code: .L_47e446:	 RIP: 47e446	 Bytes: 0
block_.L_47e446:

  ; Code: movl 0x70d190, %eax	 RIP: 47e446	 Bytes: 7
  %loadMem_47e446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e446 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e446)
  store %struct.Memory* %call_47e446, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47e44d	 Bytes: 7
  %loadMem_47e44d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e44d = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e44d)
  store %struct.Memory* %call_47e44d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47e454	 Bytes: 8
  %loadMem_47e454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e454 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e454)
  store %struct.Memory* %call_47e454, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47e45c	 Bytes: 10
  %loadMem_47e45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e45c = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e45c)
  store %struct.Memory* %call_47e45c, %struct.Memory** %MEMORY

  ; Code: subl $0x3, %edx	 RIP: 47e466	 Bytes: 3
  %loadMem_47e466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e466 = call %struct.Memory* @routine_subl__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e466)
  store %struct.Memory* %call_47e466, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47e469	 Bytes: 2
  %loadMem_47e469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e469 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e469)
  store %struct.Memory* %call_47e469, %struct.Memory** %MEMORY

  ; Code: jg .L_47e47d	 RIP: 47e46b	 Bytes: 6
  %loadMem_47e46b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e46b = call %struct.Memory* @routine_jg_.L_47e47d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e46b, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47e46b, %struct.Memory** %MEMORY

  %loadBr_47e46b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e46b = icmp eq i8 %loadBr_47e46b, 1
  br i1 %cmpBr_47e46b, label %block_.L_47e47d, label %block_47e471

block_47e471:
  ; Code: movl $0xfffffffd, -0x1c(%rbp)	 RIP: 47e471	 Bytes: 7
  %loadMem_47e471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e471 = call %struct.Memory* @routine_movl__0xfffffffd__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e471)
  store %struct.Memory* %call_47e471, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e571	 RIP: 47e478	 Bytes: 5
  %loadMem_47e478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e478 = call %struct.Memory* @routine_jmpq_.L_47e571(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e478, i64 249, i64 5)
  store %struct.Memory* %call_47e478, %struct.Memory** %MEMORY

  br label %block_.L_47e571

  ; Code: .L_47e47d:	 RIP: 47e47d	 Bytes: 0
block_.L_47e47d:

  ; Code: movl 0x70d190, %eax	 RIP: 47e47d	 Bytes: 7
  %loadMem_47e47d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e47d = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e47d)
  store %struct.Memory* %call_47e47d, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47e484	 Bytes: 7
  %loadMem_47e484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e484 = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e484)
  store %struct.Memory* %call_47e484, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47e48b	 Bytes: 8
  %loadMem_47e48b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e48b = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e48b)
  store %struct.Memory* %call_47e48b, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47e493	 Bytes: 10
  %loadMem_47e493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e493 = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e493)
  store %struct.Memory* %call_47e493, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %edx	 RIP: 47e49d	 Bytes: 3
  %loadMem_47e49d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e49d = call %struct.Memory* @routine_subl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e49d)
  store %struct.Memory* %call_47e49d, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47e4a0	 Bytes: 2
  %loadMem_47e4a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4a0 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4a0)
  store %struct.Memory* %call_47e4a0, %struct.Memory** %MEMORY

  ; Code: jne .L_47e4b4	 RIP: 47e4a2	 Bytes: 6
  %loadMem_47e4a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4a2 = call %struct.Memory* @routine_jne_.L_47e4b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4a2, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47e4a2, %struct.Memory** %MEMORY

  %loadBr_47e4a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e4a2 = icmp eq i8 %loadBr_47e4a2, 1
  br i1 %cmpBr_47e4a2, label %block_.L_47e4b4, label %block_47e4a8

block_47e4a8:
  ; Code: movl $0xfffffffe, -0x1c(%rbp)	 RIP: 47e4a8	 Bytes: 7
  %loadMem_47e4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4a8 = call %struct.Memory* @routine_movl__0xfffffffe__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4a8)
  store %struct.Memory* %call_47e4a8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e56c	 RIP: 47e4af	 Bytes: 5
  %loadMem_47e4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4af = call %struct.Memory* @routine_jmpq_.L_47e56c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4af, i64 189, i64 5)
  store %struct.Memory* %call_47e4af, %struct.Memory** %MEMORY

  br label %block_.L_47e56c

  ; Code: .L_47e4b4:	 RIP: 47e4b4	 Bytes: 0
block_.L_47e4b4:

  ; Code: movl 0x70d190, %eax	 RIP: 47e4b4	 Bytes: 7
  %loadMem_47e4b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4b4 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4b4)
  store %struct.Memory* %call_47e4b4, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47e4bb	 Bytes: 7
  %loadMem_47e4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4bb = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4bb)
  store %struct.Memory* %call_47e4bb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47e4c2	 Bytes: 8
  %loadMem_47e4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4c2 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4c2)
  store %struct.Memory* %call_47e4c2, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47e4ca	 Bytes: 10
  %loadMem_47e4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4ca = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4ca)
  store %struct.Memory* %call_47e4ca, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47e4d4	 Bytes: 3
  %loadMem_47e4d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4d4 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4d4)
  store %struct.Memory* %call_47e4d4, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47e4d7	 Bytes: 2
  %loadMem_47e4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4d7 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4d7)
  store %struct.Memory* %call_47e4d7, %struct.Memory** %MEMORY

  ; Code: jne .L_47e4eb	 RIP: 47e4d9	 Bytes: 6
  %loadMem_47e4d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4d9 = call %struct.Memory* @routine_jne_.L_47e4eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4d9, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47e4d9, %struct.Memory** %MEMORY

  %loadBr_47e4d9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e4d9 = icmp eq i8 %loadBr_47e4d9, 1
  br i1 %cmpBr_47e4d9, label %block_.L_47e4eb, label %block_47e4df

block_47e4df:
  ; Code: movl $0xffffffff, -0x1c(%rbp)	 RIP: 47e4df	 Bytes: 7
  %loadMem_47e4df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4df = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4df)
  store %struct.Memory* %call_47e4df, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e567	 RIP: 47e4e6	 Bytes: 5
  %loadMem_47e4e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4e6 = call %struct.Memory* @routine_jmpq_.L_47e567(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4e6, i64 129, i64 5)
  store %struct.Memory* %call_47e4e6, %struct.Memory** %MEMORY

  br label %block_.L_47e567

  ; Code: .L_47e4eb:	 RIP: 47e4eb	 Bytes: 0
block_.L_47e4eb:

  ; Code: movl 0x70d190, %eax	 RIP: 47e4eb	 Bytes: 7
  %loadMem_47e4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4eb = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4eb)
  store %struct.Memory* %call_47e4eb, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47e4f2	 Bytes: 7
  %loadMem_47e4f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4f2 = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4f2)
  store %struct.Memory* %call_47e4f2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47e4f9	 Bytes: 8
  %loadMem_47e4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e4f9 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e4f9)
  store %struct.Memory* %call_47e4f9, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47e501	 Bytes: 10
  %loadMem_47e501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e501 = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e501)
  store %struct.Memory* %call_47e501, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47e50b	 Bytes: 2
  %loadMem_47e50b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e50b = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e50b)
  store %struct.Memory* %call_47e50b, %struct.Memory** %MEMORY

  ; Code: jne .L_47e51f	 RIP: 47e50d	 Bytes: 6
  %loadMem_47e50d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e50d = call %struct.Memory* @routine_jne_.L_47e51f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e50d, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47e50d, %struct.Memory** %MEMORY

  %loadBr_47e50d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e50d = icmp eq i8 %loadBr_47e50d, 1
  br i1 %cmpBr_47e50d, label %block_.L_47e51f, label %block_47e513

block_47e513:
  ; Code: movl $0x0, -0x1c(%rbp)	 RIP: 47e513	 Bytes: 7
  %loadMem_47e513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e513 = call %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e513)
  store %struct.Memory* %call_47e513, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e562	 RIP: 47e51a	 Bytes: 5
  %loadMem_47e51a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e51a = call %struct.Memory* @routine_jmpq_.L_47e562(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e51a, i64 72, i64 5)
  store %struct.Memory* %call_47e51a, %struct.Memory** %MEMORY

  br label %block_.L_47e562

  ; Code: .L_47e51f:	 RIP: 47e51f	 Bytes: 0
block_.L_47e51f:

  ; Code: movl 0x70d190, %eax	 RIP: 47e51f	 Bytes: 7
  %loadMem_47e51f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e51f = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e51f)
  store %struct.Memory* %call_47e51f, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47e526	 Bytes: 7
  %loadMem_47e526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e526 = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e526)
  store %struct.Memory* %call_47e526, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47e52d	 Bytes: 8
  %loadMem_47e52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e52d = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e52d)
  store %struct.Memory* %call_47e52d, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47e535	 Bytes: 10
  %loadMem_47e535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e535 = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e535)
  store %struct.Memory* %call_47e535, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 47e53f	 Bytes: 3
  %loadMem_47e53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e53f = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e53f)
  store %struct.Memory* %call_47e53f, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47e542	 Bytes: 2
  %loadMem_47e542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e542 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e542)
  store %struct.Memory* %call_47e542, %struct.Memory** %MEMORY

  ; Code: jne .L_47e556	 RIP: 47e544	 Bytes: 6
  %loadMem_47e544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e544 = call %struct.Memory* @routine_jne_.L_47e556(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e544, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47e544, %struct.Memory** %MEMORY

  %loadBr_47e544 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e544 = icmp eq i8 %loadBr_47e544, 1
  br i1 %cmpBr_47e544, label %block_.L_47e556, label %block_47e54a

block_47e54a:
  ; Code: movl $0x1, -0x1c(%rbp)	 RIP: 47e54a	 Bytes: 7
  %loadMem_47e54a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e54a = call %struct.Memory* @routine_movl__0x1__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e54a)
  store %struct.Memory* %call_47e54a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e55d	 RIP: 47e551	 Bytes: 5
  %loadMem_47e551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e551 = call %struct.Memory* @routine_jmpq_.L_47e55d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e551, i64 12, i64 5)
  store %struct.Memory* %call_47e551, %struct.Memory** %MEMORY

  br label %block_.L_47e55d

  ; Code: .L_47e556:	 RIP: 47e556	 Bytes: 0
block_.L_47e556:

  ; Code: movl $0x2, -0x1c(%rbp)	 RIP: 47e556	 Bytes: 7
  %loadMem_47e556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e556 = call %struct.Memory* @routine_movl__0x2__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e556)
  store %struct.Memory* %call_47e556, %struct.Memory** %MEMORY

  ; Code: .L_47e55d:	 RIP: 47e55d	 Bytes: 0
  br label %block_.L_47e55d
block_.L_47e55d:

  ; Code: jmpq .L_47e562	 RIP: 47e55d	 Bytes: 5
  %loadMem_47e55d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e55d = call %struct.Memory* @routine_jmpq_.L_47e562(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e55d, i64 5, i64 5)
  store %struct.Memory* %call_47e55d, %struct.Memory** %MEMORY

  br label %block_.L_47e562

  ; Code: .L_47e562:	 RIP: 47e562	 Bytes: 0
block_.L_47e562:

  ; Code: jmpq .L_47e567	 RIP: 47e562	 Bytes: 5
  %loadMem_47e562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e562 = call %struct.Memory* @routine_jmpq_.L_47e567(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e562, i64 5, i64 5)
  store %struct.Memory* %call_47e562, %struct.Memory** %MEMORY

  br label %block_.L_47e567

  ; Code: .L_47e567:	 RIP: 47e567	 Bytes: 0
block_.L_47e567:

  ; Code: jmpq .L_47e56c	 RIP: 47e567	 Bytes: 5
  %loadMem_47e567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e567 = call %struct.Memory* @routine_jmpq_.L_47e56c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e567, i64 5, i64 5)
  store %struct.Memory* %call_47e567, %struct.Memory** %MEMORY

  br label %block_.L_47e56c

  ; Code: .L_47e56c:	 RIP: 47e56c	 Bytes: 0
block_.L_47e56c:

  ; Code: jmpq .L_47e571	 RIP: 47e56c	 Bytes: 5
  %loadMem_47e56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e56c = call %struct.Memory* @routine_jmpq_.L_47e571(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e56c, i64 5, i64 5)
  store %struct.Memory* %call_47e56c, %struct.Memory** %MEMORY

  br label %block_.L_47e571

  ; Code: .L_47e571:	 RIP: 47e571	 Bytes: 0
block_.L_47e571:

  ; Code: movl 0x6cd3a8, %eax	 RIP: 47e571	 Bytes: 7
  %loadMem_47e571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e571 = call %struct.Memory* @routine_movl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e571)
  store %struct.Memory* %call_47e571, %struct.Memory** %MEMORY

  ; Code: addl -0x1c(%rbp), %eax	 RIP: 47e578	 Bytes: 3
  %loadMem_47e578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e578 = call %struct.Memory* @routine_addl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e578)
  store %struct.Memory* %call_47e578, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e57b	 Bytes: 7
  %loadMem_47e57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e57b = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e57b)
  store %struct.Memory* %call_47e57b, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %eax	 RIP: 47e582	 Bytes: 3
  %loadMem_47e582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e582 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e582)
  store %struct.Memory* %call_47e582, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47e585	 Bytes: 3
  %loadMem_47e585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e585 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e585)
  store %struct.Memory* %call_47e585, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 47e588	 Bytes: 3
  %loadMem_47e588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e588 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e588)
  store %struct.Memory* %call_47e588, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 47e58b	 Bytes: 3
  %loadMem_47e58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e58b = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e58b)
  store %struct.Memory* %call_47e58b, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47e58e	 Bytes: 3
  %loadMem_47e58e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e58e = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e58e)
  store %struct.Memory* %call_47e58e, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, %ecx, %ecx	 RIP: 47e591	 Bytes: 6
  %loadMem_47e591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e591 = call %struct.Memory* @routine_imull__0xfffffffe___ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e591)
  store %struct.Memory* %call_47e591, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 47e597	 Bytes: 3
  %loadMem_47e597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e597 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e597)
  store %struct.Memory* %call_47e597, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47e59a	 Bytes: 3
  %loadMem_47e59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e59a = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e59a)
  store %struct.Memory* %call_47e59a, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %esi	 RIP: 47e59d	 Bytes: 7
  %loadMem_47e59d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e59d = call %struct.Memory* @routine_movl_0x70d190___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e59d)
  store %struct.Memory* %call_47e59d, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %esi	 RIP: 47e5a4	 Bytes: 7
  %loadMem_47e5a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5a4 = call %struct.Memory* @routine_subl_0x6cd3a8___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5a4)
  store %struct.Memory* %call_47e5a4, %struct.Memory** %MEMORY

  ; Code: imull %esi, %edx	 RIP: 47e5ab	 Bytes: 3
  %loadMem_47e5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5ab = call %struct.Memory* @routine_imull__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5ab)
  store %struct.Memory* %call_47e5ab, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdi	 RIP: 47e5ae	 Bytes: 8
  %loadMem_47e5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5ae = call %struct.Memory* @routine_movq_0x6cb8f8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5ae)
  store %struct.Memory* %call_47e5ae, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rdi), %esi	 RIP: 47e5b6	 Bytes: 6
  %loadMem_47e5b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5b6 = call %struct.Memory* @routine_movl_0x4d4__rdi____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5b6)
  store %struct.Memory* %call_47e5b6, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %esi	 RIP: 47e5bc	 Bytes: 3
  %loadMem_47e5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5bc = call %struct.Memory* @routine_subl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5bc)
  store %struct.Memory* %call_47e5bc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 47e5bf	 Bytes: 3
  %loadMem_47e5bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5bf = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5bf)
  store %struct.Memory* %call_47e5bf, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 47e5c2	 Bytes: 2
  %loadMem_47e5c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5c2 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5c2)
  store %struct.Memory* %call_47e5c2, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47e5c4	 Bytes: 1
  %loadMem_47e5c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5c4 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5c4)
  store %struct.Memory* %call_47e5c4, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 47e5c5	 Bytes: 2
  %loadMem_47e5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5c5 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5c5)
  store %struct.Memory* %call_47e5c5, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 47e5c7	 Bytes: 2
  %loadMem_47e5c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5c7 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5c7)
  store %struct.Memory* %call_47e5c7, %struct.Memory** %MEMORY

  ; Code: jge .L_47e602	 RIP: 47e5c9	 Bytes: 6
  %loadMem_47e5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5c9 = call %struct.Memory* @routine_jge_.L_47e602(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5c9, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_47e5c9, %struct.Memory** %MEMORY

  %loadBr_47e5c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e5c9 = icmp eq i8 %loadBr_47e5c9, 1
  br i1 %cmpBr_47e5c9, label %block_.L_47e602, label %block_47e5cf

block_47e5cf:
  ; Code: movl -0x18(%rbp), %eax	 RIP: 47e5cf	 Bytes: 3
  %loadMem_47e5cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5cf = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5cf)
  store %struct.Memory* %call_47e5cf, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47e5d2	 Bytes: 3
  %loadMem_47e5d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5d2 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5d2)
  store %struct.Memory* %call_47e5d2, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %ecx	 RIP: 47e5d5	 Bytes: 7
  %loadMem_47e5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5d5 = call %struct.Memory* @routine_movl_0x70d190___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5d5)
  store %struct.Memory* %call_47e5d5, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %ecx	 RIP: 47e5dc	 Bytes: 7
  %loadMem_47e5dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5dc = call %struct.Memory* @routine_subl_0x6cd3a8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5dc)
  store %struct.Memory* %call_47e5dc, %struct.Memory** %MEMORY

  ; Code: imull %ecx, %eax	 RIP: 47e5e3	 Bytes: 3
  %loadMem_47e5e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5e3 = call %struct.Memory* @routine_imull__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5e3)
  store %struct.Memory* %call_47e5e3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdx	 RIP: 47e5e6	 Bytes: 8
  %loadMem_47e5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5e6 = call %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5e6)
  store %struct.Memory* %call_47e5e6, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rdx), %ecx	 RIP: 47e5ee	 Bytes: 6
  %loadMem_47e5ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5ee = call %struct.Memory* @routine_movl_0x4d4__rdx____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5ee)
  store %struct.Memory* %call_47e5ee, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47e5f4	 Bytes: 3
  %loadMem_47e5f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5f4 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5f4)
  store %struct.Memory* %call_47e5f4, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47e5f7	 Bytes: 1
  %loadMem_47e5f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5f7 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5f7)
  store %struct.Memory* %call_47e5f7, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47e5f8	 Bytes: 2
  %loadMem_47e5f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5f8 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5f8)
  store %struct.Memory* %call_47e5f8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 47e5fa	 Bytes: 3
  %loadMem_47e5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5fa = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5fa)
  store %struct.Memory* %call_47e5fa, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e611	 RIP: 47e5fd	 Bytes: 5
  %loadMem_47e5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e5fd = call %struct.Memory* @routine_jmpq_.L_47e611(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e5fd, i64 20, i64 5)
  store %struct.Memory* %call_47e5fd, %struct.Memory** %MEMORY

  br label %block_.L_47e611

  ; Code: .L_47e602:	 RIP: 47e602	 Bytes: 0
block_.L_47e602:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 47e602	 Bytes: 3
  %loadMem_47e602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e602 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e602)
  store %struct.Memory* %call_47e602, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47e605	 Bytes: 3
  %loadMem_47e605 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e605 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e605)
  store %struct.Memory* %call_47e605, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, %eax, %eax	 RIP: 47e608	 Bytes: 6
  %loadMem_47e608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e608 = call %struct.Memory* @routine_imull__0xfffffffe___eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e608)
  store %struct.Memory* %call_47e608, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 47e60e	 Bytes: 3
  %loadMem_47e60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e60e = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e60e)
  store %struct.Memory* %call_47e60e, %struct.Memory** %MEMORY

  ; Code: .L_47e611:	 RIP: 47e611	 Bytes: 0
  br label %block_.L_47e611
block_.L_47e611:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 47e611	 Bytes: 3
  %loadMem_47e611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e611 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e611)
  store %struct.Memory* %call_47e611, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %ecx	 RIP: 47e614	 Bytes: 3
  %loadMem_47e614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e614 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e614)
  store %struct.Memory* %call_47e614, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 47e617	 Bytes: 2
  %loadMem_47e617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e617 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e617)
  store %struct.Memory* %call_47e617, %struct.Memory** %MEMORY

  ; Code: jge .L_47e630	 RIP: 47e619	 Bytes: 6
  %loadMem_47e619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e619 = call %struct.Memory* @routine_jge_.L_47e630(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e619, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_47e619, %struct.Memory** %MEMORY

  %loadBr_47e619 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e619 = icmp eq i8 %loadBr_47e619, 1
  br i1 %cmpBr_47e619, label %block_.L_47e630, label %block_47e61f

block_47e61f:
  ; Code: movl -0x18(%rbp), %eax	 RIP: 47e61f	 Bytes: 3
  %loadMem_47e61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e61f = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e61f)
  store %struct.Memory* %call_47e61f, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47e622	 Bytes: 3
  %loadMem_47e622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e622 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e622)
  store %struct.Memory* %call_47e622, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 47e625	 Bytes: 3
  %loadMem_47e625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e625 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e625)
  store %struct.Memory* %call_47e625, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 47e628	 Bytes: 3
  %loadMem_47e628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e628 = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e628)
  store %struct.Memory* %call_47e628, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e6c5	 RIP: 47e62b	 Bytes: 5
  %loadMem_47e62b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e62b = call %struct.Memory* @routine_jmpq_.L_47e6c5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e62b, i64 154, i64 5)
  store %struct.Memory* %call_47e62b, %struct.Memory** %MEMORY

  br label %block_.L_47e6c5

  ; Code: .L_47e630:	 RIP: 47e630	 Bytes: 0
block_.L_47e630:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 47e630	 Bytes: 3
  %loadMem_47e630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e630 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e630)
  store %struct.Memory* %call_47e630, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47e633	 Bytes: 3
  %loadMem_47e633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e633 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e633)
  store %struct.Memory* %call_47e633, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, %eax, %eax	 RIP: 47e636	 Bytes: 6
  %loadMem_47e636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e636 = call %struct.Memory* @routine_imull__0xfffffffe___eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e636)
  store %struct.Memory* %call_47e636, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 47e63c	 Bytes: 3
  %loadMem_47e63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e63c = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e63c)
  store %struct.Memory* %call_47e63c, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47e63f	 Bytes: 3
  %loadMem_47e63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e63f = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e63f)
  store %struct.Memory* %call_47e63f, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %edx	 RIP: 47e642	 Bytes: 7
  %loadMem_47e642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e642 = call %struct.Memory* @routine_movl_0x70d190___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e642)
  store %struct.Memory* %call_47e642, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %edx	 RIP: 47e649	 Bytes: 7
  %loadMem_47e649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e649 = call %struct.Memory* @routine_subl_0x6cd3a8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e649)
  store %struct.Memory* %call_47e649, %struct.Memory** %MEMORY

  ; Code: imull %edx, %ecx	 RIP: 47e650	 Bytes: 3
  %loadMem_47e650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e650 = call %struct.Memory* @routine_imull__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e650)
  store %struct.Memory* %call_47e650, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rsi	 RIP: 47e653	 Bytes: 8
  %loadMem_47e653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e653 = call %struct.Memory* @routine_movq_0x6cb8f8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e653)
  store %struct.Memory* %call_47e653, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rsi), %edx	 RIP: 47e65b	 Bytes: 6
  %loadMem_47e65b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e65b = call %struct.Memory* @routine_movl_0x4d4__rsi____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e65b)
  store %struct.Memory* %call_47e65b, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47e661	 Bytes: 3
  %loadMem_47e661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e661 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e661)
  store %struct.Memory* %call_47e661, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x44(%rbp)	 RIP: 47e664	 Bytes: 3
  %loadMem_47e664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e664 = call %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e664)
  store %struct.Memory* %call_47e664, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 47e667	 Bytes: 2
  %loadMem_47e667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e667 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e667)
  store %struct.Memory* %call_47e667, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x48(%rbp)	 RIP: 47e669	 Bytes: 3
  %loadMem_47e669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e669 = call %struct.Memory* @routine_movl__edx__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e669)
  store %struct.Memory* %call_47e669, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47e66c	 Bytes: 1
  %loadMem_47e66c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e66c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e66c)
  store %struct.Memory* %call_47e66c, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 47e66d	 Bytes: 3
  %loadMem_47e66d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e66d = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e66d)
  store %struct.Memory* %call_47e66d, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47e670	 Bytes: 2
  %loadMem_47e670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e670 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e670)
  store %struct.Memory* %call_47e670, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edi	 RIP: 47e672	 Bytes: 3
  %loadMem_47e672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e672 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e672)
  store %struct.Memory* %call_47e672, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %edi	 RIP: 47e675	 Bytes: 2
  %loadMem_47e675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e675 = call %struct.Memory* @routine_cmpl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e675)
  store %struct.Memory* %call_47e675, %struct.Memory** %MEMORY

  ; Code: jge .L_47e6b0	 RIP: 47e677	 Bytes: 6
  %loadMem_47e677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e677 = call %struct.Memory* @routine_jge_.L_47e6b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e677, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_47e677, %struct.Memory** %MEMORY

  %loadBr_47e677 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e677 = icmp eq i8 %loadBr_47e677, 1
  br i1 %cmpBr_47e677, label %block_.L_47e6b0, label %block_47e67d

block_47e67d:
  ; Code: movl -0x18(%rbp), %eax	 RIP: 47e67d	 Bytes: 3
  %loadMem_47e67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e67d = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e67d)
  store %struct.Memory* %call_47e67d, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47e680	 Bytes: 3
  %loadMem_47e680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e680 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e680)
  store %struct.Memory* %call_47e680, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %ecx	 RIP: 47e683	 Bytes: 7
  %loadMem_47e683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e683 = call %struct.Memory* @routine_movl_0x70d190___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e683)
  store %struct.Memory* %call_47e683, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %ecx	 RIP: 47e68a	 Bytes: 7
  %loadMem_47e68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e68a = call %struct.Memory* @routine_subl_0x6cd3a8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e68a)
  store %struct.Memory* %call_47e68a, %struct.Memory** %MEMORY

  ; Code: imull %ecx, %eax	 RIP: 47e691	 Bytes: 3
  %loadMem_47e691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e691 = call %struct.Memory* @routine_imull__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e691)
  store %struct.Memory* %call_47e691, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdx	 RIP: 47e694	 Bytes: 8
  %loadMem_47e694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e694 = call %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e694)
  store %struct.Memory* %call_47e694, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rdx), %ecx	 RIP: 47e69c	 Bytes: 6
  %loadMem_47e69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e69c = call %struct.Memory* @routine_movl_0x4d4__rdx____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e69c)
  store %struct.Memory* %call_47e69c, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47e6a2	 Bytes: 3
  %loadMem_47e6a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6a2 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6a2)
  store %struct.Memory* %call_47e6a2, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47e6a5	 Bytes: 1
  %loadMem_47e6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6a5 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6a5)
  store %struct.Memory* %call_47e6a5, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47e6a6	 Bytes: 2
  %loadMem_47e6a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6a6 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6a6)
  store %struct.Memory* %call_47e6a6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 47e6a8	 Bytes: 3
  %loadMem_47e6a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6a8 = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6a8)
  store %struct.Memory* %call_47e6a8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e6bf	 RIP: 47e6ab	 Bytes: 5
  %loadMem_47e6ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6ab = call %struct.Memory* @routine_jmpq_.L_47e6bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6ab, i64 20, i64 5)
  store %struct.Memory* %call_47e6ab, %struct.Memory** %MEMORY

  br label %block_.L_47e6bf

  ; Code: .L_47e6b0:	 RIP: 47e6b0	 Bytes: 0
block_.L_47e6b0:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 47e6b0	 Bytes: 3
  %loadMem_47e6b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6b0 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6b0)
  store %struct.Memory* %call_47e6b0, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47e6b3	 Bytes: 3
  %loadMem_47e6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6b3 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6b3)
  store %struct.Memory* %call_47e6b3, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, %eax, %eax	 RIP: 47e6b6	 Bytes: 6
  %loadMem_47e6b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6b6 = call %struct.Memory* @routine_imull__0xfffffffe___eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6b6)
  store %struct.Memory* %call_47e6b6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 47e6bc	 Bytes: 3
  %loadMem_47e6bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6bc = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6bc)
  store %struct.Memory* %call_47e6bc, %struct.Memory** %MEMORY

  ; Code: .L_47e6bf:	 RIP: 47e6bf	 Bytes: 0
  br label %block_.L_47e6bf
block_.L_47e6bf:

  ; Code: movl -0x4c(%rbp), %eax	 RIP: 47e6bf	 Bytes: 3
  %loadMem_47e6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6bf = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6bf)
  store %struct.Memory* %call_47e6bf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 47e6c2	 Bytes: 3
  %loadMem_47e6c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6c2 = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6c2)
  store %struct.Memory* %call_47e6c2, %struct.Memory** %MEMORY

  ; Code: .L_47e6c5:	 RIP: 47e6c5	 Bytes: 0
  br label %block_.L_47e6c5
block_.L_47e6c5:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 47e6c5	 Bytes: 3
  %loadMem_47e6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6c5 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6c5)
  store %struct.Memory* %call_47e6c5, %struct.Memory** %MEMORY

  ; Code: addl 0x6d32cc, %eax	 RIP: 47e6c8	 Bytes: 7
  %loadMem_47e6c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6c8 = call %struct.Memory* @routine_addl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6c8)
  store %struct.Memory* %call_47e6c8, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e6cf	 Bytes: 7
  %loadMem_47e6cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6cf = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6cf)
  store %struct.Memory* %call_47e6cf, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e6d6	 Bytes: 7
  %loadMem_47e6d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6d6 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6d6)
  store %struct.Memory* %call_47e6d6, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 47e6dd	 Bytes: 7
  %loadMem_47e6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6dd = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6dd)
  store %struct.Memory* %call_47e6dd, %struct.Memory** %MEMORY

  ; Code: jge .L_47e6f9	 RIP: 47e6e4	 Bytes: 6
  %loadMem_47e6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6e4 = call %struct.Memory* @routine_jge_.L_47e6f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6e4, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47e6e4, %struct.Memory** %MEMORY

  %loadBr_47e6e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e6e4 = icmp eq i8 %loadBr_47e6e4, 1
  br i1 %cmpBr_47e6e4, label %block_.L_47e6f9, label %block_47e6ea

block_47e6ea:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47e6ea	 Bytes: 7
  %loadMem_47e6ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6ea = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6ea)
  store %struct.Memory* %call_47e6ea, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 47e6f1	 Bytes: 3
  %loadMem_47e6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6f1 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6f1)
  store %struct.Memory* %call_47e6f1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e703	 RIP: 47e6f4	 Bytes: 5
  %loadMem_47e6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6f4 = call %struct.Memory* @routine_jmpq_.L_47e703(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6f4, i64 15, i64 5)
  store %struct.Memory* %call_47e6f4, %struct.Memory** %MEMORY

  br label %block_.L_47e703

  ; Code: .L_47e6f9:	 RIP: 47e6f9	 Bytes: 0
block_.L_47e6f9:

  ; Code: movl 0x724744, %eax	 RIP: 47e6f9	 Bytes: 7
  %loadMem_47e6f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e6f9 = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e6f9)
  store %struct.Memory* %call_47e6f9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 47e700	 Bytes: 3
  %loadMem_47e700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e700 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e700)
  store %struct.Memory* %call_47e700, %struct.Memory** %MEMORY

  ; Code: .L_47e703:	 RIP: 47e703	 Bytes: 0
  br label %block_.L_47e703
block_.L_47e703:

  ; Code: movl -0x50(%rbp), %eax	 RIP: 47e703	 Bytes: 3
  %loadMem_47e703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e703 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e703)
  store %struct.Memory* %call_47e703, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e706	 Bytes: 7
  %loadMem_47e706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e706 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e706)
  store %struct.Memory* %call_47e706, %struct.Memory** %MEMORY

  ; Code: movl 0x710364, %eax	 RIP: 47e70d	 Bytes: 7
  %loadMem_47e70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e70d = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e70d)
  store %struct.Memory* %call_47e70d, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 47e714	 Bytes: 7
  %loadMem_47e714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e714 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e714)
  store %struct.Memory* %call_47e714, %struct.Memory** %MEMORY

  ; Code: jge .L_47e730	 RIP: 47e71b	 Bytes: 6
  %loadMem_47e71b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e71b = call %struct.Memory* @routine_jge_.L_47e730(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e71b, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47e71b, %struct.Memory** %MEMORY

  %loadBr_47e71b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e71b = icmp eq i8 %loadBr_47e71b, 1
  br i1 %cmpBr_47e71b, label %block_.L_47e730, label %block_47e721

block_47e721:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47e721	 Bytes: 7
  %loadMem_47e721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e721 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e721)
  store %struct.Memory* %call_47e721, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 47e728	 Bytes: 3
  %loadMem_47e728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e728 = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e728)
  store %struct.Memory* %call_47e728, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e73a	 RIP: 47e72b	 Bytes: 5
  %loadMem_47e72b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e72b = call %struct.Memory* @routine_jmpq_.L_47e73a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e72b, i64 15, i64 5)
  store %struct.Memory* %call_47e72b, %struct.Memory** %MEMORY

  br label %block_.L_47e73a

  ; Code: .L_47e730:	 RIP: 47e730	 Bytes: 0
block_.L_47e730:

  ; Code: movl 0x710364, %eax	 RIP: 47e730	 Bytes: 7
  %loadMem_47e730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e730 = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e730)
  store %struct.Memory* %call_47e730, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 47e737	 Bytes: 3
  %loadMem_47e737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e737 = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e737)
  store %struct.Memory* %call_47e737, %struct.Memory** %MEMORY

  ; Code: .L_47e73a:	 RIP: 47e73a	 Bytes: 0
  br label %block_.L_47e73a
block_.L_47e73a:

  ; Code: movl -0x54(%rbp), %eax	 RIP: 47e73a	 Bytes: 3
  %loadMem_47e73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e73a = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e73a)
  store %struct.Memory* %call_47e73a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e73d	 Bytes: 7
  %loadMem_47e73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e73d = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e73d)
  store %struct.Memory* %call_47e73d, %struct.Memory** %MEMORY

  ; Code: .L_47e744:	 RIP: 47e744	 Bytes: 0
  br label %block_.L_47e744
block_.L_47e744:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e744	 Bytes: 7
  %loadMem_47e744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e744 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e744)
  store %struct.Memory* %call_47e744, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47e74b	 Bytes: 3
  %loadMem_47e74b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e74b = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e74b)
  store %struct.Memory* %call_47e74b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47e74e	 Bytes: 5
  %loadMem_47e74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e74e = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e74e, i64 7983, i64 5)
  store %struct.Memory* %call_47e74e, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47e753:	 RIP: 47e753	 Bytes: 0
block_.L_47e753:

  ; Code: movq 0x6cb900, %rax	 RIP: 47e753	 Bytes: 8
  %loadMem_47e753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e753 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e753)
  store %struct.Memory* %call_47e753, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 47e75b	 Bytes: 4
  %loadMem_47e75b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e75b = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e75b)
  store %struct.Memory* %call_47e75b, %struct.Memory** %MEMORY

  ; Code: jne .L_47e81e	 RIP: 47e75f	 Bytes: 6
  %loadMem_47e75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e75f = call %struct.Memory* @routine_jne_.L_47e81e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e75f, i8* %BRANCH_TAKEN, i64 191, i64 6, i64 6)
  store %struct.Memory* %call_47e75f, %struct.Memory** %MEMORY

  %loadBr_47e75f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e75f = icmp eq i8 %loadBr_47e75f, 1
  br i1 %cmpBr_47e75f, label %block_.L_47e81e, label %block_47e765

block_47e765:
  ; Code: movq 0x6cb900, %rax	 RIP: 47e765	 Bytes: 8
  %loadMem_47e765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e765 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e765)
  store %struct.Memory* %call_47e765, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b80(%rax)	 RIP: 47e76d	 Bytes: 7
  %loadMem_47e76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e76d = call %struct.Memory* @routine_cmpl__0x0__0x11b80__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e76d)
  store %struct.Memory* %call_47e76d, %struct.Memory** %MEMORY

  ; Code: jne .L_47e81e	 RIP: 47e774	 Bytes: 6
  %loadMem_47e774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e774 = call %struct.Memory* @routine_jne_.L_47e81e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e774, i8* %BRANCH_TAKEN, i64 170, i64 6, i64 6)
  store %struct.Memory* %call_47e774, %struct.Memory** %MEMORY

  %loadBr_47e774 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e774 = icmp eq i8 %loadBr_47e774, 1
  br i1 %cmpBr_47e774, label %block_.L_47e81e, label %block_47e77a

block_47e77a:
  ; Code: movl 0x6cd474, %eax	 RIP: 47e77a	 Bytes: 7
  %loadMem_47e77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e77a = call %struct.Memory* @routine_movl_0x6cd474___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e77a)
  store %struct.Memory* %call_47e77a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e781	 Bytes: 7
  %loadMem_47e781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e781 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e781)
  store %struct.Memory* %call_47e781, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47e788	 Bytes: 8
  %loadMem_47e788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e788 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e788)
  store %struct.Memory* %call_47e788, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rcx)	 RIP: 47e790	 Bytes: 7
  %loadMem_47e790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e790 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e790)
  store %struct.Memory* %call_47e790, %struct.Memory** %MEMORY

  ; Code: jne .L_47e80f	 RIP: 47e797	 Bytes: 6
  %loadMem_47e797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e797 = call %struct.Memory* @routine_jne_.L_47e80f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e797, i8* %BRANCH_TAKEN, i64 120, i64 6, i64 6)
  store %struct.Memory* %call_47e797, %struct.Memory** %MEMORY

  %loadBr_47e797 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e797 = icmp eq i8 %loadBr_47e797, 1
  br i1 %cmpBr_47e797, label %block_.L_47e80f, label %block_47e79d

block_47e79d:
  ; Code: movq 0x722cb0, %rax	 RIP: 47e79d	 Bytes: 8
  %loadMem_47e79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e79d = call %struct.Memory* @routine_movq_0x722cb0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e79d)
  store %struct.Memory* %call_47e79d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x47c(%rax)	 RIP: 47e7a5	 Bytes: 7
  %loadMem_47e7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7a5 = call %struct.Memory* @routine_cmpl__0x0__0x47c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7a5)
  store %struct.Memory* %call_47e7a5, %struct.Memory** %MEMORY

  ; Code: je .L_47e7fc	 RIP: 47e7ac	 Bytes: 6
  %loadMem_47e7ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7ac = call %struct.Memory* @routine_je_.L_47e7fc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7ac, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_47e7ac, %struct.Memory** %MEMORY

  %loadBr_47e7ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e7ac = icmp eq i8 %loadBr_47e7ac, 1
  br i1 %cmpBr_47e7ac, label %block_.L_47e7fc, label %block_47e7b2

block_47e7b2:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47e7b2	 Bytes: 7
  %loadMem_47e7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7b2 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7b2)
  store %struct.Memory* %call_47e7b2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47e7b9	 Bytes: 8
  %loadMem_47e7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7b9 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7b9)
  store %struct.Memory* %call_47e7b9, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47e7c1	 Bytes: 6
  %loadMem_47e7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7c1 = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7c1)
  store %struct.Memory* %call_47e7c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47e7c7	 Bytes: 6
  %loadMem_47e7c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7c7 = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7c7)
  store %struct.Memory* %call_47e7c7, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %eax	 RIP: 47e7cd	 Bytes: 7
  %loadMem_47e7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7cd = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7cd)
  store %struct.Memory* %call_47e7cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47e7d4	 Bytes: 7
  %loadMem_47e7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7d4 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7d4)
  store %struct.Memory* %call_47e7d4, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e7db	 Bytes: 7
  %loadMem_47e7db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7db = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7db)
  store %struct.Memory* %call_47e7db, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47e7e2	 Bytes: 7
  %loadMem_47e7e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7e2 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7e2)
  store %struct.Memory* %call_47e7e2, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e7e9	 Bytes: 7
  %loadMem_47e7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7e9 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7e9)
  store %struct.Memory* %call_47e7e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47e7f0	 Bytes: 7
  %loadMem_47e7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7f0 = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7f0)
  store %struct.Memory* %call_47e7f0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e80a	 RIP: 47e7f7	 Bytes: 5
  %loadMem_47e7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7f7 = call %struct.Memory* @routine_jmpq_.L_47e80a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7f7, i64 19, i64 5)
  store %struct.Memory* %call_47e7f7, %struct.Memory** %MEMORY

  br label %block_.L_47e80a

  ; Code: .L_47e7fc:	 RIP: 47e7fc	 Bytes: 0
block_.L_47e7fc:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e7fc	 Bytes: 7
  %loadMem_47e7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e7fc = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e7fc)
  store %struct.Memory* %call_47e7fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9708	 RIP: 47e803	 Bytes: 7
  %loadMem_47e803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e803 = call %struct.Memory* @routine_movl__eax__0x6f9708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e803)
  store %struct.Memory* %call_47e803, %struct.Memory** %MEMORY

  ; Code: .L_47e80a:	 RIP: 47e80a	 Bytes: 0
  br label %block_.L_47e80a
block_.L_47e80a:

  ; Code: jmpq .L_47e80f	 RIP: 47e80a	 Bytes: 5
  %loadMem_47e80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e80a = call %struct.Memory* @routine_jmpq_.L_47e80f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e80a, i64 5, i64 5)
  store %struct.Memory* %call_47e80a, %struct.Memory** %MEMORY

  br label %block_.L_47e80f

  ; Code: .L_47e80f:	 RIP: 47e80f	 Bytes: 0
block_.L_47e80f:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e80f	 Bytes: 7
  %loadMem_47e80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e80f = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e80f)
  store %struct.Memory* %call_47e80f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47e816	 Bytes: 3
  %loadMem_47e816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e816 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e816)
  store %struct.Memory* %call_47e816, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47e819	 Bytes: 5
  %loadMem_47e819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e819 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e819, i64 7780, i64 5)
  store %struct.Memory* %call_47e819, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47e81e:	 RIP: 47e81e	 Bytes: 0
block_.L_47e81e:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 47e81e	 Bytes: 8
  %loadMem_47e81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e81e = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e81e)
  store %struct.Memory* %call_47e81e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47e826	 Bytes: 7
  %loadMem_47e826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e826 = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e826)
  store %struct.Memory* %call_47e826, %struct.Memory** %MEMORY

  ; Code: je .L_47e848	 RIP: 47e82d	 Bytes: 6
  %loadMem_47e82d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e82d = call %struct.Memory* @routine_je_.L_47e848(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e82d, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47e82d, %struct.Memory** %MEMORY

  %loadBr_47e82d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e82d = icmp eq i8 %loadBr_47e82d, 1
  br i1 %cmpBr_47e82d, label %block_.L_47e848, label %block_47e833

block_47e833:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47e833	 Bytes: 8
  %loadMem_47e833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e833 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e833)
  store %struct.Memory* %call_47e833, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47e83b	 Bytes: 7
  %loadMem_47e83b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e83b = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e83b)
  store %struct.Memory* %call_47e83b, %struct.Memory** %MEMORY

  ; Code: je .L_47e8ce	 RIP: 47e842	 Bytes: 6
  %loadMem_47e842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e842 = call %struct.Memory* @routine_je_.L_47e8ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e842, i8* %BRANCH_TAKEN, i64 140, i64 6, i64 6)
  store %struct.Memory* %call_47e842, %struct.Memory** %MEMORY

  %loadBr_47e842 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e842 = icmp eq i8 %loadBr_47e842, 1
  br i1 %cmpBr_47e842, label %block_.L_47e8ce, label %block_.L_47e848

  ; Code: .L_47e848:	 RIP: 47e848	 Bytes: 0
block_.L_47e848:

  ; Code: movq 0x6cb900, %rax	 RIP: 47e848	 Bytes: 8
  %loadMem_47e848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e848 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e848)
  store %struct.Memory* %call_47e848, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47e850	 Bytes: 7
  %loadMem_47e850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e850 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e850)
  store %struct.Memory* %call_47e850, %struct.Memory** %MEMORY

  ; Code: jne .L_47e8ce	 RIP: 47e857	 Bytes: 6
  %loadMem_47e857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e857 = call %struct.Memory* @routine_jne_.L_47e8ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e857, i8* %BRANCH_TAKEN, i64 119, i64 6, i64 6)
  store %struct.Memory* %call_47e857, %struct.Memory** %MEMORY

  %loadBr_47e857 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e857 = icmp eq i8 %loadBr_47e857, 1
  br i1 %cmpBr_47e857, label %block_.L_47e8ce, label %block_47e85d

block_47e85d:
  ; Code: movq 0x6cb900, %rax	 RIP: 47e85d	 Bytes: 8
  %loadMem_47e85d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e85d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e85d)
  store %struct.Memory* %call_47e85d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b9c(%rax)	 RIP: 47e865	 Bytes: 7
  %loadMem_47e865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e865 = call %struct.Memory* @routine_cmpl__0x1__0x11b9c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e865)
  store %struct.Memory* %call_47e865, %struct.Memory** %MEMORY

  ; Code: jne .L_47e8a0	 RIP: 47e86c	 Bytes: 6
  %loadMem_47e86c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e86c = call %struct.Memory* @routine_jne_.L_47e8a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e86c, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_47e86c, %struct.Memory** %MEMORY

  %loadBr_47e86c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e86c = icmp eq i8 %loadBr_47e86c, 1
  br i1 %cmpBr_47e86c, label %block_.L_47e8a0, label %block_47e872

block_47e872:
  ; Code: movl 0x6f9708, %eax	 RIP: 47e872	 Bytes: 7
  %loadMem_47e872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e872 = call %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e872)
  store %struct.Memory* %call_47e872, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47e879	 Bytes: 8
  %loadMem_47e879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e879 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e879)
  store %struct.Memory* %call_47e879, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47e881	 Bytes: 6
  %loadMem_47e881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e881 = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e881)
  store %struct.Memory* %call_47e881, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47e887	 Bytes: 6
  %loadMem_47e887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e887 = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e887)
  store %struct.Memory* %call_47e887, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9708, %eax	 RIP: 47e88d	 Bytes: 7
  %loadMem_47e88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e88d = call %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e88d)
  store %struct.Memory* %call_47e88d, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47e894	 Bytes: 7
  %loadMem_47e894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e894 = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e894)
  store %struct.Memory* %call_47e894, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e8c9	 RIP: 47e89b	 Bytes: 5
  %loadMem_47e89b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e89b = call %struct.Memory* @routine_jmpq_.L_47e8c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e89b, i64 46, i64 5)
  store %struct.Memory* %call_47e89b, %struct.Memory** %MEMORY

  br label %block_.L_47e8c9

  ; Code: .L_47e8a0:	 RIP: 47e8a0	 Bytes: 0
block_.L_47e8a0:

  ; Code: movl 0x7236c0, %eax	 RIP: 47e8a0	 Bytes: 7
  %loadMem_47e8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8a0 = call %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8a0)
  store %struct.Memory* %call_47e8a0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47e8a7	 Bytes: 8
  %loadMem_47e8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8a7 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8a7)
  store %struct.Memory* %call_47e8a7, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47e8af	 Bytes: 6
  %loadMem_47e8af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8af = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8af)
  store %struct.Memory* %call_47e8af, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47e8b5	 Bytes: 6
  %loadMem_47e8b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8b5 = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8b5)
  store %struct.Memory* %call_47e8b5, %struct.Memory** %MEMORY

  ; Code: movl 0x7236c0, %eax	 RIP: 47e8bb	 Bytes: 7
  %loadMem_47e8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8bb = call %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8bb)
  store %struct.Memory* %call_47e8bb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47e8c2	 Bytes: 7
  %loadMem_47e8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8c2 = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8c2)
  store %struct.Memory* %call_47e8c2, %struct.Memory** %MEMORY

  ; Code: .L_47e8c9:	 RIP: 47e8c9	 Bytes: 0
  br label %block_.L_47e8c9
block_.L_47e8c9:

  ; Code: jmpq .L_47e8ce	 RIP: 47e8c9	 Bytes: 5
  %loadMem_47e8c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8c9 = call %struct.Memory* @routine_jmpq_.L_47e8ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8c9, i64 5, i64 5)
  store %struct.Memory* %call_47e8c9, %struct.Memory** %MEMORY

  br label %block_.L_47e8ce

  ; Code: .L_47e8ce:	 RIP: 47e8ce	 Bytes: 0
block_.L_47e8ce:

  ; Code: movsd 0x726420, %xmm0	 RIP: 47e8ce	 Bytes: 9
  %loadMem_47e8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8ce = call %struct.Memory* @routine_movsd_0x726420___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8ce)
  store %struct.Memory* %call_47e8ce, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x723640	 RIP: 47e8d7	 Bytes: 9
  %loadMem_47e8d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8d7 = call %struct.Memory* @routine_movsd__xmm0__0x723640(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8d7)
  store %struct.Memory* %call_47e8d7, %struct.Memory** %MEMORY

  ; Code: movsd 0x6f9358, %xmm0	 RIP: 47e8e0	 Bytes: 9
  %loadMem_47e8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8e0 = call %struct.Memory* @routine_movsd_0x6f9358___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8e0)
  store %struct.Memory* %call_47e8e0, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6d33e0	 RIP: 47e8e9	 Bytes: 9
  %loadMem_47e8e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8e9 = call %struct.Memory* @routine_movsd__xmm0__0x6d33e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8e9)
  store %struct.Memory* %call_47e8e9, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9720, %eax	 RIP: 47e8f2	 Bytes: 7
  %loadMem_47e8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8f2 = call %struct.Memory* @routine_movl_0x6f9720___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8f2)
  store %struct.Memory* %call_47e8f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d4510	 RIP: 47e8f9	 Bytes: 7
  %loadMem_47e8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e8f9 = call %struct.Memory* @routine_movl__eax__0x6d4510(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e8f9)
  store %struct.Memory* %call_47e8f9, %struct.Memory** %MEMORY

  ; Code: movl 0x6d1278, %eax	 RIP: 47e900	 Bytes: 7
  %loadMem_47e900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e900 = call %struct.Memory* @routine_movl_0x6d1278___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e900)
  store %struct.Memory* %call_47e900, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x723690	 RIP: 47e907	 Bytes: 7
  %loadMem_47e907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e907 = call %struct.Memory* @routine_movl__eax__0x723690(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e907)
  store %struct.Memory* %call_47e907, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80c8, %eax	 RIP: 47e90e	 Bytes: 7
  %loadMem_47e90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e90e = call %struct.Memory* @routine_movl_0x6f80c8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e90e)
  store %struct.Memory* %call_47e90e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6e51e0	 RIP: 47e915	 Bytes: 7
  %loadMem_47e915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e915 = call %struct.Memory* @routine_movl__eax__0x6e51e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e915)
  store %struct.Memory* %call_47e915, %struct.Memory** %MEMORY

  ; Code: movsd 0x6cfc68, %xmm0	 RIP: 47e91c	 Bytes: 9
  %loadMem_47e91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e91c = call %struct.Memory* @routine_movsd_0x6cfc68___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e91c)
  store %struct.Memory* %call_47e91c, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6cea30	 RIP: 47e925	 Bytes: 9
  %loadMem_47e925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e925 = call %struct.Memory* @routine_movsd__xmm0__0x6cea30(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e925)
  store %struct.Memory* %call_47e925, %struct.Memory** %MEMORY

  ; Code: movsd 0x710798, %xmm0	 RIP: 47e92e	 Bytes: 9
  %loadMem_47e92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e92e = call %struct.Memory* @routine_movsd_0x710798___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e92e)
  store %struct.Memory* %call_47e92e, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x710008	 RIP: 47e937	 Bytes: 9
  %loadMem_47e937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e937 = call %struct.Memory* @routine_movsd__xmm0__0x710008(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e937)
  store %struct.Memory* %call_47e937, %struct.Memory** %MEMORY

  ; Code: movsd 0x6cd300, %xmm0	 RIP: 47e940	 Bytes: 9
  %loadMem_47e940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e940 = call %struct.Memory* @routine_movsd_0x6cd300___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e940)
  store %struct.Memory* %call_47e940, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x721df8	 RIP: 47e949	 Bytes: 9
  %loadMem_47e949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e949 = call %struct.Memory* @routine_movsd__xmm0__0x721df8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e949)
  store %struct.Memory* %call_47e949, %struct.Memory** %MEMORY

  ; Code: movsd 0x6cea30, %xmm0	 RIP: 47e952	 Bytes: 9
  %loadMem_47e952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e952 = call %struct.Memory* @routine_movsd_0x6cea30___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e952)
  store %struct.Memory* %call_47e952, %struct.Memory** %MEMORY

  ; Code: mulsd 0x721df8, %xmm0	 RIP: 47e95b	 Bytes: 9
  %loadMem_47e95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e95b = call %struct.Memory* @routine_mulsd_0x721df8___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e95b)
  store %struct.Memory* %call_47e95b, %struct.Memory** %MEMORY

  ; Code: addsd 0x710008, %xmm0	 RIP: 47e964	 Bytes: 9
  %loadMem_47e964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e964 = call %struct.Memory* @routine_addsd_0x710008___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e964)
  store %struct.Memory* %call_47e964, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6d1280	 RIP: 47e96d	 Bytes: 9
  %loadMem_47e96d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e96d = call %struct.Memory* @routine_movsd__xmm0__0x6d1280(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e96d)
  store %struct.Memory* %call_47e96d, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0x6cea28	 RIP: 47e976	 Bytes: 9
  %loadMem_47e976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e976 = call %struct.Memory* @routine_cmpq__0x0__0x6cea28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e976)
  store %struct.Memory* %call_47e976, %struct.Memory** %MEMORY

  ; Code: jge .L_47e9d6	 RIP: 47e97f	 Bytes: 6
  %loadMem_47e97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e97f = call %struct.Memory* @routine_jge_.L_47e9d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e97f, i8* %BRANCH_TAKEN, i64 87, i64 6, i64 6)
  store %struct.Memory* %call_47e97f, %struct.Memory** %MEMORY

  %loadBr_47e97f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e97f = icmp eq i8 %loadBr_47e97f, 1
  br i1 %cmpBr_47e97f, label %block_.L_47e9d6, label %block_47e985

block_47e985:
  ; Code: movl 0x723690, %eax	 RIP: 47e985	 Bytes: 7
  %loadMem_47e985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e985 = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e985)
  store %struct.Memory* %call_47e985, %struct.Memory** %MEMORY

  ; Code: addl 0x6e51e0, %eax	 RIP: 47e98c	 Bytes: 7
  %loadMem_47e98c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e98c = call %struct.Memory* @routine_addl_0x6e51e0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e98c)
  store %struct.Memory* %call_47e98c, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e993	 Bytes: 7
  %loadMem_47e993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e993 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e993)
  store %struct.Memory* %call_47e993, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47e99a	 Bytes: 7
  %loadMem_47e99a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e99a = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e99a)
  store %struct.Memory* %call_47e99a, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 47e9a1	 Bytes: 7
  %loadMem_47e9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9a1 = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9a1)
  store %struct.Memory* %call_47e9a1, %struct.Memory** %MEMORY

  ; Code: jge .L_47e9bd	 RIP: 47e9a8	 Bytes: 6
  %loadMem_47e9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9a8 = call %struct.Memory* @routine_jge_.L_47e9bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9a8, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47e9a8, %struct.Memory** %MEMORY

  %loadBr_47e9a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e9a8 = icmp eq i8 %loadBr_47e9a8, 1
  br i1 %cmpBr_47e9a8, label %block_.L_47e9bd, label %block_47e9ae

block_47e9ae:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47e9ae	 Bytes: 7
  %loadMem_47e9ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9ae = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9ae)
  store %struct.Memory* %call_47e9ae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 47e9b5	 Bytes: 3
  %loadMem_47e9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9b5 = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9b5)
  store %struct.Memory* %call_47e9b5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47e9c7	 RIP: 47e9b8	 Bytes: 5
  %loadMem_47e9b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9b8 = call %struct.Memory* @routine_jmpq_.L_47e9c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9b8, i64 15, i64 5)
  store %struct.Memory* %call_47e9b8, %struct.Memory** %MEMORY

  br label %block_.L_47e9c7

  ; Code: .L_47e9bd:	 RIP: 47e9bd	 Bytes: 0
block_.L_47e9bd:

  ; Code: movl 0x724744, %eax	 RIP: 47e9bd	 Bytes: 7
  %loadMem_47e9bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9bd = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9bd)
  store %struct.Memory* %call_47e9bd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 47e9c4	 Bytes: 3
  %loadMem_47e9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9c4 = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9c4)
  store %struct.Memory* %call_47e9c4, %struct.Memory** %MEMORY

  ; Code: .L_47e9c7:	 RIP: 47e9c7	 Bytes: 0
  br label %block_.L_47e9c7
block_.L_47e9c7:

  ; Code: movl -0x58(%rbp), %eax	 RIP: 47e9c7	 Bytes: 3
  %loadMem_47e9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9c7 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9c7)
  store %struct.Memory* %call_47e9c7, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47e9ca	 Bytes: 7
  %loadMem_47e9ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9ca = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9ca)
  store %struct.Memory* %call_47e9ca, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47eca6	 RIP: 47e9d1	 Bytes: 5
  %loadMem_47e9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9d1 = call %struct.Memory* @routine_jmpq_.L_47eca6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9d1, i64 725, i64 5)
  store %struct.Memory* %call_47e9d1, %struct.Memory** %MEMORY

  br label %block_.L_47eca6

  ; Code: .L_47e9d6:	 RIP: 47e9d6	 Bytes: 0
block_.L_47e9d6:

  ; Code: movq 0x6cea28, %rax	 RIP: 47e9d6	 Bytes: 8
  %loadMem_47e9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9d6 = call %struct.Memory* @routine_movq_0x6cea28___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9d6)
  store %struct.Memory* %call_47e9d6, %struct.Memory** %MEMORY

  ; Code: movslq 0x6d4510, %rcx	 RIP: 47e9de	 Bytes: 8
  %loadMem_47e9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9de = call %struct.Memory* @routine_movslq_0x6d4510___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9de)
  store %struct.Memory* %call_47e9de, %struct.Memory** %MEMORY

  ; Code: subq %rcx, %rax	 RIP: 47e9e6	 Bytes: 3
  %loadMem_47e9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9e6 = call %struct.Memory* @routine_subq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9e6)
  store %struct.Memory* %call_47e9e6, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 47e9e9	 Bytes: 2
  %loadMem_47e9e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9e9 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9e9)
  store %struct.Memory* %call_47e9e9, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x14(%rbp)	 RIP: 47e9eb	 Bytes: 3
  %loadMem_47e9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9eb = call %struct.Memory* @routine_movl__edx__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9eb)
  store %struct.Memory* %call_47e9eb, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %edx	 RIP: 47e9ee	 Bytes: 3
  %loadMem_47e9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9ee = call %struct.Memory* @routine_movl_MINUS0x14__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9ee)
  store %struct.Memory* %call_47e9ee, %struct.Memory** %MEMORY

  ; Code: movsd 0x6ccf88, %xmm0	 RIP: 47e9f1	 Bytes: 9
  %loadMem_47e9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9f1 = call %struct.Memory* @routine_movsd_0x6ccf88___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9f1)
  store %struct.Memory* %call_47e9f1, %struct.Memory** %MEMORY

  ; Code: movsd 0x723648, %xmm1	 RIP: 47e9fa	 Bytes: 9
  %loadMem_47e9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47e9fa = call %struct.Memory* @routine_movsd_0x723648___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47e9fa)
  store %struct.Memory* %call_47e9fa, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1fb0, %xmm1	 RIP: 47ea03	 Bytes: 9
  %loadMem_47ea03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea03 = call %struct.Memory* @routine_mulsd_0x6d1fb0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea03)
  store %struct.Memory* %call_47ea03, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm0	 RIP: 47ea0c	 Bytes: 4
  %loadMem_47ea0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea0c = call %struct.Memory* @routine_divsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea0c)
  store %struct.Memory* %call_47ea0c, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %esi	 RIP: 47ea10	 Bytes: 4
  %loadMem_47ea10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea10 = call %struct.Memory* @routine_cvttsd2si__xmm0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea10)
  store %struct.Memory* %call_47ea10, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 47ea14	 Bytes: 2
  %loadMem_47ea14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea14 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea14)
  store %struct.Memory* %call_47ea14, %struct.Memory** %MEMORY

  ; Code: jge .L_47ea47	 RIP: 47ea16	 Bytes: 6
  %loadMem_47ea16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea16 = call %struct.Memory* @routine_jge_.L_47ea47(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea16, i8* %BRANCH_TAKEN, i64 49, i64 6, i64 6)
  store %struct.Memory* %call_47ea16, %struct.Memory** %MEMORY

  %loadBr_47ea16 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ea16 = icmp eq i8 %loadBr_47ea16, 1
  br i1 %cmpBr_47ea16, label %block_.L_47ea47, label %block_47ea1c

block_47ea1c:
  ; Code: movsd 0x6ccf88, %xmm0	 RIP: 47ea1c	 Bytes: 9
  %loadMem_47ea1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea1c = call %struct.Memory* @routine_movsd_0x6ccf88___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea1c)
  store %struct.Memory* %call_47ea1c, %struct.Memory** %MEMORY

  ; Code: movsd 0x723648, %xmm1	 RIP: 47ea25	 Bytes: 9
  %loadMem_47ea25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea25 = call %struct.Memory* @routine_movsd_0x723648___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea25)
  store %struct.Memory* %call_47ea25, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1fb0, %xmm1	 RIP: 47ea2e	 Bytes: 9
  %loadMem_47ea2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea2e = call %struct.Memory* @routine_mulsd_0x6d1fb0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea2e)
  store %struct.Memory* %call_47ea2e, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm0	 RIP: 47ea37	 Bytes: 4
  %loadMem_47ea37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea37 = call %struct.Memory* @routine_divsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea37)
  store %struct.Memory* %call_47ea37, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %eax	 RIP: 47ea3b	 Bytes: 4
  %loadMem_47ea3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea3b = call %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea3b)
  store %struct.Memory* %call_47ea3b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c(%rbp)	 RIP: 47ea3f	 Bytes: 3
  %loadMem_47ea3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea3f = call %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea3f)
  store %struct.Memory* %call_47ea3f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47ea4d	 RIP: 47ea42	 Bytes: 5
  %loadMem_47ea42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea42 = call %struct.Memory* @routine_jmpq_.L_47ea4d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea42, i64 11, i64 5)
  store %struct.Memory* %call_47ea42, %struct.Memory** %MEMORY

  br label %block_.L_47ea4d

  ; Code: .L_47ea47:	 RIP: 47ea47	 Bytes: 0
block_.L_47ea47:

  ; Code: movl -0x14(%rbp), %eax	 RIP: 47ea47	 Bytes: 3
  %loadMem_47ea47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea47 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea47)
  store %struct.Memory* %call_47ea47, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c(%rbp)	 RIP: 47ea4a	 Bytes: 3
  %loadMem_47ea4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea4a = call %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea4a)
  store %struct.Memory* %call_47ea4a, %struct.Memory** %MEMORY

  ; Code: .L_47ea4d:	 RIP: 47ea4d	 Bytes: 0
  br label %block_.L_47ea4d
block_.L_47ea4d:

  ; Code: movl -0x5c(%rbp), %eax	 RIP: 47ea4d	 Bytes: 3
  %loadMem_47ea4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea4d = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea4d)
  store %struct.Memory* %call_47ea4d, %struct.Memory** %MEMORY

  ; Code: xorps %xmm0, %xmm0	 RIP: 47ea50	 Bytes: 3
  %loadMem_47ea50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea50 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea50)
  store %struct.Memory* %call_47ea50, %struct.Memory** %MEMORY

  ; Code: movsd 0x32ddd(%rip), %xmm1	 RIP: 47ea53	 Bytes: 8
  %loadMem_47ea53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea53 = call %struct.Memory* @routine_movsd_0x32ddd__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea53)
  store %struct.Memory* %call_47ea53, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 47ea5b	 Bytes: 3
  %loadMem_47ea5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea5b = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea5b)
  store %struct.Memory* %call_47ea5b, %struct.Memory** %MEMORY

  ; Code: movsd 0x6d1280, %xmm2	 RIP: 47ea5e	 Bytes: 9
  %loadMem_47ea5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea5e = call %struct.Memory* @routine_movsd_0x6d1280___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea5e)
  store %struct.Memory* %call_47ea5e, %struct.Memory** %MEMORY

  ; Code: mulsd 0x723640, %xmm2	 RIP: 47ea67	 Bytes: 9
  %loadMem_47ea67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea67 = call %struct.Memory* @routine_mulsd_0x723640___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea67)
  store %struct.Memory* %call_47ea67, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm2	 RIP: 47ea70	 Bytes: 9
  %loadMem_47ea70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea70 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea70)
  store %struct.Memory* %call_47ea70, %struct.Memory** %MEMORY

  ; Code: mulsd 0x723640, %xmm2	 RIP: 47ea79	 Bytes: 9
  %loadMem_47ea79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea79 = call %struct.Memory* @routine_mulsd_0x723640___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea79)
  store %struct.Memory* %call_47ea79, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d33e0, %xmm1	 RIP: 47ea82	 Bytes: 9
  %loadMem_47ea82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea82 = call %struct.Memory* @routine_mulsd_0x6d33e0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea82)
  store %struct.Memory* %call_47ea82, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm1	 RIP: 47ea8b	 Bytes: 9
  %loadMem_47ea8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea8b = call %struct.Memory* @routine_mulsd_0x6d1280___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea8b)
  store %struct.Memory* %call_47ea8b, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x14(%rbp), %xmm3	 RIP: 47ea94	 Bytes: 5
  %loadMem_47ea94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea94 = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x14__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea94)
  store %struct.Memory* %call_47ea94, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm3, %xmm1	 RIP: 47ea99	 Bytes: 4
  %loadMem_47ea99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea99 = call %struct.Memory* @routine_mulsd__xmm3___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea99)
  store %struct.Memory* %call_47ea99, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm2	 RIP: 47ea9d	 Bytes: 4
  %loadMem_47ea9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ea9d = call %struct.Memory* @routine_addsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ea9d)
  store %struct.Memory* %call_47ea9d, %struct.Memory** %MEMORY

  ; Code: movsd %xmm2, -0x10(%rbp)	 RIP: 47eaa1	 Bytes: 5
  %loadMem_47eaa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eaa1 = call %struct.Memory* @routine_movsd__xmm2__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eaa1)
  store %struct.Memory* %call_47eaa1, %struct.Memory** %MEMORY

  ; Code: movsd 0x6d33e0, %xmm1	 RIP: 47eaa6	 Bytes: 9
  %loadMem_47eaa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eaa6 = call %struct.Memory* @routine_movsd_0x6d33e0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eaa6)
  store %struct.Memory* %call_47eaa6, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 47eaaf	 Bytes: 4
  %loadMem_47eaaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eaaf = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eaaf)
  store %struct.Memory* %call_47eaaf, %struct.Memory** %MEMORY

  ; Code: jne .L_47eac4	 RIP: 47eab3	 Bytes: 6
  %loadMem_47eab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eab3 = call %struct.Memory* @routine_jne_.L_47eac4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eab3, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_47eab3, %struct.Memory** %MEMORY

  %loadBr_47eab3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eab3 = icmp eq i8 %loadBr_47eab3, 1
  br i1 %cmpBr_47eab3, label %block_.L_47eac4, label %block_47eab9

block_47eab9:
  ; Code: jp .L_47eac4	 RIP: 47eab9	 Bytes: 6
  %loadMem_47eab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eab9 = call %struct.Memory* @routine_jp_.L_47eac4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eab9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_47eab9, %struct.Memory** %MEMORY

  %loadBr_47eab9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eab9 = icmp eq i8 %loadBr_47eab9, 1
  br i1 %cmpBr_47eab9, label %block_.L_47eac4, label %block_47eabf

block_47eabf:
  ; Code: jmpq .L_47eb0c	 RIP: 47eabf	 Bytes: 5
  %loadMem_47eabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eabf = call %struct.Memory* @routine_jmpq_.L_47eb0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eabf, i64 77, i64 5)
  store %struct.Memory* %call_47eabf, %struct.Memory** %MEMORY

  br label %block_.L_47eb0c

  ; Code: .L_47eac4:	 RIP: 47eac4	 Bytes: 0
block_.L_47eac4:

  ; Code: xorps %xmm0, %xmm0	 RIP: 47eac4	 Bytes: 3
  %loadMem_47eac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eac4 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eac4)
  store %struct.Memory* %call_47eac4, %struct.Memory** %MEMORY

  ; Code: ucomisd -0x10(%rbp), %xmm0	 RIP: 47eac7	 Bytes: 5
  %loadMem_47eac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eac7 = call %struct.Memory* @routine_ucomisd_MINUS0x10__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eac7)
  store %struct.Memory* %call_47eac7, %struct.Memory** %MEMORY

  ; Code: ja .L_47eb0c	 RIP: 47eacc	 Bytes: 6
  %loadMem_47eacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eacc = call %struct.Memory* @routine_ja_.L_47eb0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eacc, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_47eacc, %struct.Memory** %MEMORY

  %loadBr_47eacc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eacc = icmp eq i8 %loadBr_47eacc, 1
  br i1 %cmpBr_47eacc, label %block_.L_47eb0c, label %block_47ead2

block_47ead2:
  ; Code: xorps %xmm0, %xmm0	 RIP: 47ead2	 Bytes: 3
  %loadMem_47ead2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ead2 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ead2)
  store %struct.Memory* %call_47ead2, %struct.Memory** %MEMORY

  ; Code: movsd -0x10(%rbp), %xmm1	 RIP: 47ead5	 Bytes: 5
  %loadMem_47ead5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ead5 = call %struct.Memory* @routine_movsd_MINUS0x10__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ead5)
  store %struct.Memory* %call_47ead5, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x68(%rbp)	 RIP: 47eada	 Bytes: 5
  %loadMem_47eada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eada = call %struct.Memory* @routine_movsd__xmm0__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eada)
  store %struct.Memory* %call_47eada, %struct.Memory** %MEMORY

  ; Code: movaps %xmm1, %xmm0	 RIP: 47eadf	 Bytes: 3
  %loadMem_47eadf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eadf = call %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eadf)
  store %struct.Memory* %call_47eadf, %struct.Memory** %MEMORY

  ; Code: callq .sqrt_plt	 RIP: 47eae2	 Bytes: 5
  %loadMem1_47eae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_47eae2 = call %struct.Memory* @routine_callq_.sqrt_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_47eae2, i64 -514290, i64 5, i64 5)
  store %struct.Memory* %call1_47eae2, %struct.Memory** %MEMORY

  %loadMem2_47eae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47eae2 = load i64, i64* %3
  %call2_47eae2 = call %struct.Memory* @ext_sqrt(%struct.State* %0, i64  %loadPC_47eae2, %struct.Memory* %loadMem2_47eae2)
  store %struct.Memory* %call2_47eae2, %struct.Memory** %MEMORY

  ; Code: movsd 0x723640, %xmm1	 RIP: 47eae7	 Bytes: 9
  %loadMem_47eae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eae7 = call %struct.Memory* @routine_movsd_0x723640___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eae7)
  store %struct.Memory* %call_47eae7, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm1	 RIP: 47eaf0	 Bytes: 9
  %loadMem_47eaf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eaf0 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eaf0)
  store %struct.Memory* %call_47eaf0, %struct.Memory** %MEMORY

  ; Code: subsd %xmm1, %xmm0	 RIP: 47eaf9	 Bytes: 4
  %loadMem_47eaf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eaf9 = call %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eaf9)
  store %struct.Memory* %call_47eaf9, %struct.Memory** %MEMORY

  ; Code: movsd -0x68(%rbp), %xmm1	 RIP: 47eafd	 Bytes: 5
  %loadMem_47eafd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eafd = call %struct.Memory* @routine_movsd_MINUS0x68__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eafd)
  store %struct.Memory* %call_47eafd, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 47eb02	 Bytes: 4
  %loadMem_47eb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb02 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb02)
  store %struct.Memory* %call_47eb02, %struct.Memory** %MEMORY

  ; Code: jb .L_47eb3d	 RIP: 47eb06	 Bytes: 6
  %loadMem_47eb06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb06 = call %struct.Memory* @routine_jb_.L_47eb3d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb06, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_47eb06, %struct.Memory** %MEMORY

  %loadBr_47eb06 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eb06 = icmp eq i8 %loadBr_47eb06, 1
  br i1 %cmpBr_47eb06, label %block_.L_47eb3d, label %block_.L_47eb0c

  ; Code: .L_47eb0c:	 RIP: 47eb0c	 Bytes: 0
block_.L_47eb0c:

  ; Code: movsd 0x723640, %xmm0	 RIP: 47eb0c	 Bytes: 9
  %loadMem_47eb0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb0c = call %struct.Memory* @routine_movsd_0x723640___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb0c)
  store %struct.Memory* %call_47eb0c, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm0	 RIP: 47eb15	 Bytes: 9
  %loadMem_47eb15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb15 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb15)
  store %struct.Memory* %call_47eb15, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x14(%rbp), %xmm1	 RIP: 47eb1e	 Bytes: 5
  %loadMem_47eb1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb1e = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x14__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb1e)
  store %struct.Memory* %call_47eb1e, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm0	 RIP: 47eb23	 Bytes: 4
  %loadMem_47eb23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb23 = call %struct.Memory* @routine_divsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb23)
  store %struct.Memory* %call_47eb23, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 47eb27	 Bytes: 4
  %loadMem_47eb27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb27 = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb27)
  store %struct.Memory* %call_47eb27, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 47eb2b	 Bytes: 4
  %loadMem_47eb2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb2b = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb2b)
  store %struct.Memory* %call_47eb2b, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6ccae0	 RIP: 47eb2f	 Bytes: 9
  %loadMem_47eb2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb2f = call %struct.Memory* @routine_movsd__xmm0__0x6ccae0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb2f)
  store %struct.Memory* %call_47eb2f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47eb99	 RIP: 47eb38	 Bytes: 5
  %loadMem_47eb38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb38 = call %struct.Memory* @routine_jmpq_.L_47eb99(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb38, i64 97, i64 5)
  store %struct.Memory* %call_47eb38, %struct.Memory** %MEMORY

  br label %block_.L_47eb99

  ; Code: .L_47eb3d:	 RIP: 47eb3d	 Bytes: 0
block_.L_47eb3d:

  ; Code: movsd 0x32d03(%rip), %xmm0	 RIP: 47eb3d	 Bytes: 8
  %loadMem_47eb3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb3d = call %struct.Memory* @routine_movsd_0x32d03__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb3d)
  store %struct.Memory* %call_47eb3d, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d33e0, %xmm0	 RIP: 47eb45	 Bytes: 9
  %loadMem_47eb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb45 = call %struct.Memory* @routine_mulsd_0x6d33e0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb45)
  store %struct.Memory* %call_47eb45, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm0	 RIP: 47eb4e	 Bytes: 9
  %loadMem_47eb4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb4e = call %struct.Memory* @routine_mulsd_0x6d1280___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb4e)
  store %struct.Memory* %call_47eb4e, %struct.Memory** %MEMORY

  ; Code: movsd -0x10(%rbp), %xmm1	 RIP: 47eb57	 Bytes: 5
  %loadMem_47eb57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb57 = call %struct.Memory* @routine_movsd_MINUS0x10__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb57)
  store %struct.Memory* %call_47eb57, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x70(%rbp)	 RIP: 47eb5c	 Bytes: 5
  %loadMem_47eb5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb5c = call %struct.Memory* @routine_movsd__xmm0__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb5c)
  store %struct.Memory* %call_47eb5c, %struct.Memory** %MEMORY

  ; Code: movaps %xmm1, %xmm0	 RIP: 47eb61	 Bytes: 3
  %loadMem_47eb61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb61 = call %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb61)
  store %struct.Memory* %call_47eb61, %struct.Memory** %MEMORY

  ; Code: callq .sqrt_plt	 RIP: 47eb64	 Bytes: 5
  %loadMem1_47eb64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_47eb64 = call %struct.Memory* @routine_callq_.sqrt_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_47eb64, i64 -514420, i64 5, i64 5)
  store %struct.Memory* %call1_47eb64, %struct.Memory** %MEMORY

  %loadMem2_47eb64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47eb64 = load i64, i64* %3
  %call2_47eb64 = call %struct.Memory* @ext_sqrt(%struct.State* %0, i64  %loadPC_47eb64, %struct.Memory* %loadMem2_47eb64)
  store %struct.Memory* %call2_47eb64, %struct.Memory** %MEMORY

  ; Code: movsd 0x723640, %xmm1	 RIP: 47eb69	 Bytes: 9
  %loadMem_47eb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb69 = call %struct.Memory* @routine_movsd_0x723640___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb69)
  store %struct.Memory* %call_47eb69, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm1	 RIP: 47eb72	 Bytes: 9
  %loadMem_47eb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb72 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb72)
  store %struct.Memory* %call_47eb72, %struct.Memory** %MEMORY

  ; Code: subsd %xmm1, %xmm0	 RIP: 47eb7b	 Bytes: 4
  %loadMem_47eb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb7b = call %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb7b)
  store %struct.Memory* %call_47eb7b, %struct.Memory** %MEMORY

  ; Code: movsd -0x70(%rbp), %xmm1	 RIP: 47eb7f	 Bytes: 5
  %loadMem_47eb7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb7f = call %struct.Memory* @routine_movsd_MINUS0x70__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb7f)
  store %struct.Memory* %call_47eb7f, %struct.Memory** %MEMORY

  ; Code: divsd %xmm0, %xmm1	 RIP: 47eb84	 Bytes: 4
  %loadMem_47eb84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb84 = call %struct.Memory* @routine_divsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb84)
  store %struct.Memory* %call_47eb84, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm1, %xmm0	 RIP: 47eb88	 Bytes: 4
  %loadMem_47eb88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb88 = call %struct.Memory* @routine_cvtsd2ss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb88)
  store %struct.Memory* %call_47eb88, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 47eb8c	 Bytes: 4
  %loadMem_47eb8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb8c = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb8c)
  store %struct.Memory* %call_47eb8c, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6ccae0	 RIP: 47eb90	 Bytes: 9
  %loadMem_47eb90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb90 = call %struct.Memory* @routine_movsd__xmm0__0x6ccae0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb90)
  store %struct.Memory* %call_47eb90, %struct.Memory** %MEMORY

  ; Code: .L_47eb99:	 RIP: 47eb99	 Bytes: 0
  br label %block_.L_47eb99
block_.L_47eb99:

  ; Code: movsd 0x6ccae0, %xmm0	 RIP: 47eb99	 Bytes: 9
  %loadMem_47eb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eb99 = call %struct.Memory* @routine_movsd_0x6ccae0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eb99)
  store %struct.Memory* %call_47eb99, %struct.Memory** %MEMORY

  ; Code: callq .Qstep2QP	 RIP: 47eba2	 Bytes: 5
  %loadMem1_47eba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_47eba2 = call %struct.Memory* @routine_callq_.Qstep2QP(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_47eba2, i64 6894, i64 5, i64 5)
  store %struct.Memory* %call1_47eba2, %struct.Memory** %MEMORY

  %loadMem2_47eba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47eba2 = load i64, i64* %3
  %call2_47eba2 = call %struct.Memory* @sub_480690.Qstep2QP(%struct.State* %0, i64  %loadPC_47eba2, %struct.Memory* %loadMem2_47eba2)
  store %struct.Memory* %call2_47eba2, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47eba7	 Bytes: 7
  %loadMem_47eba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eba7 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eba7)
  store %struct.Memory* %call_47eba7, %struct.Memory** %MEMORY

  ; Code: movl 0x723690, %eax	 RIP: 47ebae	 Bytes: 7
  %loadMem_47ebae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebae = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebae)
  store %struct.Memory* %call_47ebae, %struct.Memory** %MEMORY

  ; Code: addl 0x6e51e0, %eax	 RIP: 47ebb5	 Bytes: 7
  %loadMem_47ebb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebb5 = call %struct.Memory* @routine_addl_0x6e51e0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebb5)
  store %struct.Memory* %call_47ebb5, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 47ebbc	 Bytes: 7
  %loadMem_47ebbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebbc = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebbc)
  store %struct.Memory* %call_47ebbc, %struct.Memory** %MEMORY

  ; Code: jge .L_47ebdf	 RIP: 47ebc3	 Bytes: 6
  %loadMem_47ebc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebc3 = call %struct.Memory* @routine_jge_.L_47ebdf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebc3, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_47ebc3, %struct.Memory** %MEMORY

  %loadBr_47ebc3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ebc3 = icmp eq i8 %loadBr_47ebc3, 1
  br i1 %cmpBr_47ebc3, label %block_.L_47ebdf, label %block_47ebc9

block_47ebc9:
  ; Code: movl 0x723690, %eax	 RIP: 47ebc9	 Bytes: 7
  %loadMem_47ebc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebc9 = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebc9)
  store %struct.Memory* %call_47ebc9, %struct.Memory** %MEMORY

  ; Code: addl 0x6e51e0, %eax	 RIP: 47ebd0	 Bytes: 7
  %loadMem_47ebd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebd0 = call %struct.Memory* @routine_addl_0x6e51e0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebd0)
  store %struct.Memory* %call_47ebd0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x74(%rbp)	 RIP: 47ebd7	 Bytes: 3
  %loadMem_47ebd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebd7 = call %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebd7)
  store %struct.Memory* %call_47ebd7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47ebe9	 RIP: 47ebda	 Bytes: 5
  %loadMem_47ebda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebda = call %struct.Memory* @routine_jmpq_.L_47ebe9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebda, i64 15, i64 5)
  store %struct.Memory* %call_47ebda, %struct.Memory** %MEMORY

  br label %block_.L_47ebe9

  ; Code: .L_47ebdf:	 RIP: 47ebdf	 Bytes: 0
block_.L_47ebdf:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47ebdf	 Bytes: 7
  %loadMem_47ebdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebdf = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebdf)
  store %struct.Memory* %call_47ebdf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x74(%rbp)	 RIP: 47ebe6	 Bytes: 3
  %loadMem_47ebe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebe6 = call %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebe6)
  store %struct.Memory* %call_47ebe6, %struct.Memory** %MEMORY

  ; Code: .L_47ebe9:	 RIP: 47ebe9	 Bytes: 0
  br label %block_.L_47ebe9
block_.L_47ebe9:

  ; Code: movl -0x74(%rbp), %eax	 RIP: 47ebe9	 Bytes: 3
  %loadMem_47ebe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebe9 = call %struct.Memory* @routine_movl_MINUS0x74__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebe9)
  store %struct.Memory* %call_47ebe9, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47ebec	 Bytes: 7
  %loadMem_47ebec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebec = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebec)
  store %struct.Memory* %call_47ebec, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47ebf3	 Bytes: 7
  %loadMem_47ebf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebf3 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebf3)
  store %struct.Memory* %call_47ebf3, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 47ebfa	 Bytes: 7
  %loadMem_47ebfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ebfa = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ebfa)
  store %struct.Memory* %call_47ebfa, %struct.Memory** %MEMORY

  ; Code: jge .L_47ec16	 RIP: 47ec01	 Bytes: 6
  %loadMem_47ec01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec01 = call %struct.Memory* @routine_jge_.L_47ec16(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec01, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47ec01, %struct.Memory** %MEMORY

  %loadBr_47ec01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec01 = icmp eq i8 %loadBr_47ec01, 1
  br i1 %cmpBr_47ec01, label %block_.L_47ec16, label %block_47ec07

block_47ec07:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47ec07	 Bytes: 7
  %loadMem_47ec07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec07 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec07)
  store %struct.Memory* %call_47ec07, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x78(%rbp)	 RIP: 47ec0e	 Bytes: 3
  %loadMem_47ec0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec0e = call %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec0e)
  store %struct.Memory* %call_47ec0e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47ec20	 RIP: 47ec11	 Bytes: 5
  %loadMem_47ec11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec11 = call %struct.Memory* @routine_jmpq_.L_47ec20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec11, i64 15, i64 5)
  store %struct.Memory* %call_47ec11, %struct.Memory** %MEMORY

  br label %block_.L_47ec20

  ; Code: .L_47ec16:	 RIP: 47ec16	 Bytes: 0
block_.L_47ec16:

  ; Code: movl 0x724744, %eax	 RIP: 47ec16	 Bytes: 7
  %loadMem_47ec16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec16 = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec16)
  store %struct.Memory* %call_47ec16, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x78(%rbp)	 RIP: 47ec1d	 Bytes: 3
  %loadMem_47ec1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec1d = call %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec1d)
  store %struct.Memory* %call_47ec1d, %struct.Memory** %MEMORY

  ; Code: .L_47ec20:	 RIP: 47ec20	 Bytes: 0
  br label %block_.L_47ec20
block_.L_47ec20:

  ; Code: movl -0x78(%rbp), %eax	 RIP: 47ec20	 Bytes: 3
  %loadMem_47ec20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec20 = call %struct.Memory* @routine_movl_MINUS0x78__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec20)
  store %struct.Memory* %call_47ec20, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47ec23	 Bytes: 7
  %loadMem_47ec23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec23 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec23)
  store %struct.Memory* %call_47ec23, %struct.Memory** %MEMORY

  ; Code: movl 0x723690, %eax	 RIP: 47ec2a	 Bytes: 7
  %loadMem_47ec2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec2a = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec2a)
  store %struct.Memory* %call_47ec2a, %struct.Memory** %MEMORY

  ; Code: subl 0x6e51e0, %eax	 RIP: 47ec31	 Bytes: 7
  %loadMem_47ec31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec31 = call %struct.Memory* @routine_subl_0x6e51e0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec31)
  store %struct.Memory* %call_47ec31, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 47ec38	 Bytes: 7
  %loadMem_47ec38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec38 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec38)
  store %struct.Memory* %call_47ec38, %struct.Memory** %MEMORY

  ; Code: jge .L_47ec54	 RIP: 47ec3f	 Bytes: 6
  %loadMem_47ec3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec3f = call %struct.Memory* @routine_jge_.L_47ec54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec3f, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47ec3f, %struct.Memory** %MEMORY

  %loadBr_47ec3f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec3f = icmp eq i8 %loadBr_47ec3f, 1
  br i1 %cmpBr_47ec3f, label %block_.L_47ec54, label %block_47ec45

block_47ec45:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47ec45	 Bytes: 7
  %loadMem_47ec45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec45 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec45)
  store %struct.Memory* %call_47ec45, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x7c(%rbp)	 RIP: 47ec4c	 Bytes: 3
  %loadMem_47ec4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec4c = call %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec4c)
  store %struct.Memory* %call_47ec4c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47ec65	 RIP: 47ec4f	 Bytes: 5
  %loadMem_47ec4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec4f = call %struct.Memory* @routine_jmpq_.L_47ec65(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec4f, i64 22, i64 5)
  store %struct.Memory* %call_47ec4f, %struct.Memory** %MEMORY

  br label %block_.L_47ec65

  ; Code: .L_47ec54:	 RIP: 47ec54	 Bytes: 0
block_.L_47ec54:

  ; Code: movl 0x723690, %eax	 RIP: 47ec54	 Bytes: 7
  %loadMem_47ec54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec54 = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec54)
  store %struct.Memory* %call_47ec54, %struct.Memory** %MEMORY

  ; Code: subl 0x6e51e0, %eax	 RIP: 47ec5b	 Bytes: 7
  %loadMem_47ec5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec5b = call %struct.Memory* @routine_subl_0x6e51e0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec5b)
  store %struct.Memory* %call_47ec5b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x7c(%rbp)	 RIP: 47ec62	 Bytes: 3
  %loadMem_47ec62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec62 = call %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec62)
  store %struct.Memory* %call_47ec62, %struct.Memory** %MEMORY

  ; Code: .L_47ec65:	 RIP: 47ec65	 Bytes: 0
  br label %block_.L_47ec65
block_.L_47ec65:

  ; Code: movl -0x7c(%rbp), %eax	 RIP: 47ec65	 Bytes: 3
  %loadMem_47ec65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec65 = call %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec65)
  store %struct.Memory* %call_47ec65, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47ec68	 Bytes: 7
  %loadMem_47ec68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec68 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec68)
  store %struct.Memory* %call_47ec68, %struct.Memory** %MEMORY

  ; Code: movl 0x710364, %eax	 RIP: 47ec6f	 Bytes: 7
  %loadMem_47ec6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec6f = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec6f)
  store %struct.Memory* %call_47ec6f, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 47ec76	 Bytes: 7
  %loadMem_47ec76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec76 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec76)
  store %struct.Memory* %call_47ec76, %struct.Memory** %MEMORY

  ; Code: jge .L_47ec92	 RIP: 47ec7d	 Bytes: 6
  %loadMem_47ec7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec7d = call %struct.Memory* @routine_jge_.L_47ec92(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec7d, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47ec7d, %struct.Memory** %MEMORY

  %loadBr_47ec7d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec7d = icmp eq i8 %loadBr_47ec7d, 1
  br i1 %cmpBr_47ec7d, label %block_.L_47ec92, label %block_47ec83

block_47ec83:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47ec83	 Bytes: 7
  %loadMem_47ec83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec83 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec83)
  store %struct.Memory* %call_47ec83, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x80(%rbp)	 RIP: 47ec8a	 Bytes: 3
  %loadMem_47ec8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec8a = call %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec8a)
  store %struct.Memory* %call_47ec8a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47ec9c	 RIP: 47ec8d	 Bytes: 5
  %loadMem_47ec8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec8d = call %struct.Memory* @routine_jmpq_.L_47ec9c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec8d, i64 15, i64 5)
  store %struct.Memory* %call_47ec8d, %struct.Memory** %MEMORY

  br label %block_.L_47ec9c

  ; Code: .L_47ec92:	 RIP: 47ec92	 Bytes: 0
block_.L_47ec92:

  ; Code: movl 0x710364, %eax	 RIP: 47ec92	 Bytes: 7
  %loadMem_47ec92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec92 = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec92)
  store %struct.Memory* %call_47ec92, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x80(%rbp)	 RIP: 47ec99	 Bytes: 3
  %loadMem_47ec99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec99 = call %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec99)
  store %struct.Memory* %call_47ec99, %struct.Memory** %MEMORY

  ; Code: .L_47ec9c:	 RIP: 47ec9c	 Bytes: 0
  br label %block_.L_47ec9c
block_.L_47ec9c:

  ; Code: movl -0x80(%rbp), %eax	 RIP: 47ec9c	 Bytes: 3
  %loadMem_47ec9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec9c = call %struct.Memory* @routine_movl_MINUS0x80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec9c)
  store %struct.Memory* %call_47ec9c, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47ec9f	 Bytes: 7
  %loadMem_47ec9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ec9f = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ec9f)
  store %struct.Memory* %call_47ec9f, %struct.Memory** %MEMORY

  ; Code: .L_47eca6:	 RIP: 47eca6	 Bytes: 0
  br label %block_.L_47eca6
block_.L_47eca6:

  ; Code: movq 0x6cb900, %rax	 RIP: 47eca6	 Bytes: 8
  %loadMem_47eca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eca6 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eca6)
  store %struct.Memory* %call_47eca6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47ecae	 Bytes: 7
  %loadMem_47ecae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecae = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecae)
  store %struct.Memory* %call_47ecae, %struct.Memory** %MEMORY

  ; Code: jne .L_47ed2d	 RIP: 47ecb5	 Bytes: 6
  %loadMem_47ecb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecb5 = call %struct.Memory* @routine_jne_.L_47ed2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecb5, i8* %BRANCH_TAKEN, i64 120, i64 6, i64 6)
  store %struct.Memory* %call_47ecb5, %struct.Memory** %MEMORY

  %loadBr_47ecb5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ecb5 = icmp eq i8 %loadBr_47ecb5, 1
  br i1 %cmpBr_47ecb5, label %block_.L_47ed2d, label %block_47ecbb

block_47ecbb:
  ; Code: movq 0x722cb0, %rax	 RIP: 47ecbb	 Bytes: 8
  %loadMem_47ecbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecbb = call %struct.Memory* @routine_movq_0x722cb0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecbb)
  store %struct.Memory* %call_47ecbb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x47c(%rax)	 RIP: 47ecc3	 Bytes: 7
  %loadMem_47ecc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecc3 = call %struct.Memory* @routine_cmpl__0x0__0x47c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecc3)
  store %struct.Memory* %call_47ecc3, %struct.Memory** %MEMORY

  ; Code: je .L_47ed1a	 RIP: 47ecca	 Bytes: 6
  %loadMem_47ecca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecca = call %struct.Memory* @routine_je_.L_47ed1a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecca, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_47ecca, %struct.Memory** %MEMORY

  %loadBr_47ecca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ecca = icmp eq i8 %loadBr_47ecca, 1
  br i1 %cmpBr_47ecca, label %block_.L_47ed1a, label %block_47ecd0

block_47ecd0:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47ecd0	 Bytes: 7
  %loadMem_47ecd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecd0 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecd0)
  store %struct.Memory* %call_47ecd0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47ecd7	 Bytes: 8
  %loadMem_47ecd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecd7 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecd7)
  store %struct.Memory* %call_47ecd7, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47ecdf	 Bytes: 6
  %loadMem_47ecdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecdf = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecdf)
  store %struct.Memory* %call_47ecdf, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47ece5	 Bytes: 6
  %loadMem_47ece5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ece5 = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ece5)
  store %struct.Memory* %call_47ece5, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %eax	 RIP: 47eceb	 Bytes: 7
  %loadMem_47eceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eceb = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eceb)
  store %struct.Memory* %call_47eceb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47ecf2	 Bytes: 7
  %loadMem_47ecf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecf2 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecf2)
  store %struct.Memory* %call_47ecf2, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47ecf9	 Bytes: 7
  %loadMem_47ecf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ecf9 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ecf9)
  store %struct.Memory* %call_47ecf9, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47ed00	 Bytes: 7
  %loadMem_47ed00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed00 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed00)
  store %struct.Memory* %call_47ed00, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47ed07	 Bytes: 7
  %loadMem_47ed07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed07 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed07)
  store %struct.Memory* %call_47ed07, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47ed0e	 Bytes: 7
  %loadMem_47ed0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed0e = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed0e)
  store %struct.Memory* %call_47ed0e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47ed28	 RIP: 47ed15	 Bytes: 5
  %loadMem_47ed15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed15 = call %struct.Memory* @routine_jmpq_.L_47ed28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed15, i64 19, i64 5)
  store %struct.Memory* %call_47ed15, %struct.Memory** %MEMORY

  br label %block_.L_47ed28

  ; Code: .L_47ed1a:	 RIP: 47ed1a	 Bytes: 0
block_.L_47ed1a:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47ed1a	 Bytes: 7
  %loadMem_47ed1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed1a = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed1a)
  store %struct.Memory* %call_47ed1a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9708	 RIP: 47ed21	 Bytes: 7
  %loadMem_47ed21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed21 = call %struct.Memory* @routine_movl__eax__0x6f9708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed21)
  store %struct.Memory* %call_47ed21, %struct.Memory** %MEMORY

  ; Code: .L_47ed28:	 RIP: 47ed28	 Bytes: 0
  br label %block_.L_47ed28
block_.L_47ed28:

  ; Code: jmpq .L_47ed2d	 RIP: 47ed28	 Bytes: 5
  %loadMem_47ed28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed28 = call %struct.Memory* @routine_jmpq_.L_47ed2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed28, i64 5, i64 5)
  store %struct.Memory* %call_47ed28, %struct.Memory** %MEMORY

  br label %block_.L_47ed2d

  ; Code: .L_47ed2d:	 RIP: 47ed2d	 Bytes: 0
block_.L_47ed2d:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47ed2d	 Bytes: 7
  %loadMem_47ed2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed2d = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed2d)
  store %struct.Memory* %call_47ed2d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47ed34	 Bytes: 3
  %loadMem_47ed34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed34 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed34)
  store %struct.Memory* %call_47ed34, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47ed37	 Bytes: 5
  %loadMem_47ed37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed37 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed37, i64 6470, i64 5)
  store %struct.Memory* %call_47ed37, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47ed3c:	 RIP: 47ed3c	 Bytes: 0
block_.L_47ed3c:

  ; Code: movq 0x6cb900, %rax	 RIP: 47ed3c	 Bytes: 8
  %loadMem_47ed3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed3c = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed3c)
  store %struct.Memory* %call_47ed3c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 47ed44	 Bytes: 4
  %loadMem_47ed44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed44 = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed44)
  store %struct.Memory* %call_47ed44, %struct.Memory** %MEMORY

  ; Code: jne .L_47edd8	 RIP: 47ed48	 Bytes: 6
  %loadMem_47ed48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed48 = call %struct.Memory* @routine_jne_.L_47edd8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed48, i8* %BRANCH_TAKEN, i64 144, i64 6, i64 6)
  store %struct.Memory* %call_47ed48, %struct.Memory** %MEMORY

  %loadBr_47ed48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ed48 = icmp eq i8 %loadBr_47ed48, 1
  br i1 %cmpBr_47ed48, label %block_.L_47edd8, label %block_47ed4e

block_47ed4e:
  ; Code: movq 0x6cb900, %rax	 RIP: 47ed4e	 Bytes: 8
  %loadMem_47ed4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed4e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed4e)
  store %struct.Memory* %call_47ed4e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11ba4(%rax)	 RIP: 47ed56	 Bytes: 7
  %loadMem_47ed56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed56 = call %struct.Memory* @routine_cmpl__0x0__0x11ba4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed56)
  store %struct.Memory* %call_47ed56, %struct.Memory** %MEMORY

  ; Code: jne .L_47edd8	 RIP: 47ed5d	 Bytes: 6
  %loadMem_47ed5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed5d = call %struct.Memory* @routine_jne_.L_47edd8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed5d, i8* %BRANCH_TAKEN, i64 123, i64 6, i64 6)
  store %struct.Memory* %call_47ed5d, %struct.Memory** %MEMORY

  %loadBr_47ed5d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ed5d = icmp eq i8 %loadBr_47ed5d, 1
  br i1 %cmpBr_47ed5d, label %block_.L_47edd8, label %block_47ed63

block_47ed63:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47ed63	 Bytes: 8
  %loadMem_47ed63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed63 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed63)
  store %struct.Memory* %call_47ed63, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0xb40(%rax)	 RIP: 47ed6b	 Bytes: 7
  %loadMem_47ed6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed6b = call %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed6b)
  store %struct.Memory* %call_47ed6b, %struct.Memory** %MEMORY

  ; Code: jne .L_47edc5	 RIP: 47ed72	 Bytes: 6
  %loadMem_47ed72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed72 = call %struct.Memory* @routine_jne_.L_47edc5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed72, i8* %BRANCH_TAKEN, i64 83, i64 6, i64 6)
  store %struct.Memory* %call_47ed72, %struct.Memory** %MEMORY

  %loadBr_47ed72 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ed72 = icmp eq i8 %loadBr_47ed72, 1
  br i1 %cmpBr_47ed72, label %block_.L_47edc5, label %block_47ed78

block_47ed78:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47ed78	 Bytes: 7
  %loadMem_47ed78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed78 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed78)
  store %struct.Memory* %call_47ed78, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47ed7f	 Bytes: 8
  %loadMem_47ed7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed7f = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed7f)
  store %struct.Memory* %call_47ed7f, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47ed87	 Bytes: 6
  %loadMem_47ed87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed87 = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed87)
  store %struct.Memory* %call_47ed87, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47ed8d	 Bytes: 6
  %loadMem_47ed8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed8d = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed8d)
  store %struct.Memory* %call_47ed8d, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %eax	 RIP: 47ed93	 Bytes: 7
  %loadMem_47ed93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed93 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed93)
  store %struct.Memory* %call_47ed93, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47ed9a	 Bytes: 3
  %loadMem_47ed9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed9a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed9a)
  store %struct.Memory* %call_47ed9a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47ed9d	 Bytes: 7
  %loadMem_47ed9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ed9d = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ed9d)
  store %struct.Memory* %call_47ed9d, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47eda4	 Bytes: 7
  %loadMem_47eda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eda4 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eda4)
  store %struct.Memory* %call_47eda4, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47edab	 Bytes: 7
  %loadMem_47edab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edab = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edab)
  store %struct.Memory* %call_47edab, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47edb2	 Bytes: 7
  %loadMem_47edb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edb2 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edb2)
  store %struct.Memory* %call_47edb2, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47edb9	 Bytes: 7
  %loadMem_47edb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edb9 = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edb9)
  store %struct.Memory* %call_47edb9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47edd3	 RIP: 47edc0	 Bytes: 5
  %loadMem_47edc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edc0 = call %struct.Memory* @routine_jmpq_.L_47edd3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edc0, i64 19, i64 5)
  store %struct.Memory* %call_47edc0, %struct.Memory** %MEMORY

  br label %block_.L_47edd3

  ; Code: .L_47edc5:	 RIP: 47edc5	 Bytes: 0
block_.L_47edc5:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47edc5	 Bytes: 7
  %loadMem_47edc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edc5 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edc5)
  store %struct.Memory* %call_47edc5, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x7236c0	 RIP: 47edcc	 Bytes: 7
  %loadMem_47edcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edcc = call %struct.Memory* @routine_movl__eax__0x7236c0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edcc)
  store %struct.Memory* %call_47edcc, %struct.Memory** %MEMORY

  ; Code: .L_47edd3:	 RIP: 47edd3	 Bytes: 0
  br label %block_.L_47edd3
block_.L_47edd3:

  ; Code: jmpq .L_47edd8	 RIP: 47edd3	 Bytes: 5
  %loadMem_47edd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edd3 = call %struct.Memory* @routine_jmpq_.L_47edd8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edd3, i64 5, i64 5)
  store %struct.Memory* %call_47edd3, %struct.Memory** %MEMORY

  br label %block_.L_47edd8

  ; Code: .L_47edd8:	 RIP: 47edd8	 Bytes: 0
block_.L_47edd8:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47edd8	 Bytes: 7
  %loadMem_47edd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edd8 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edd8)
  store %struct.Memory* %call_47edd8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47eddf	 Bytes: 3
  %loadMem_47eddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eddf = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eddf)
  store %struct.Memory* %call_47eddf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47ede2	 Bytes: 5
  %loadMem_47ede2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ede2 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ede2, i64 6299, i64 5)
  store %struct.Memory* %call_47ede2, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47ede7:	 RIP: 47ede7	 Bytes: 0
block_.L_47ede7:

  ; Code: movq 0x6cb900, %rax	 RIP: 47ede7	 Bytes: 8
  %loadMem_47ede7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ede7 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ede7)
  store %struct.Memory* %call_47ede7, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0x18(%rax)	 RIP: 47edef	 Bytes: 4
  %loadMem_47edef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edef = call %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edef)
  store %struct.Memory* %call_47edef, %struct.Memory** %MEMORY

  ; Code: jne .L_47ee16	 RIP: 47edf3	 Bytes: 6
  %loadMem_47edf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edf3 = call %struct.Memory* @routine_jne_.L_47ee16(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edf3, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_47edf3, %struct.Memory** %MEMORY

  %loadBr_47edf3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47edf3 = icmp eq i8 %loadBr_47edf3, 1
  br i1 %cmpBr_47edf3, label %block_.L_47ee16, label %block_47edf9

block_47edf9:
  ; Code: movl 0x6cd474, %eax	 RIP: 47edf9	 Bytes: 7
  %loadMem_47edf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47edf9 = call %struct.Memory* @routine_movl_0x6cd474___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47edf9)
  store %struct.Memory* %call_47edf9, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47ee00	 Bytes: 7
  %loadMem_47ee00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee00 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee00)
  store %struct.Memory* %call_47ee00, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47ee07	 Bytes: 7
  %loadMem_47ee07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee07 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee07)
  store %struct.Memory* %call_47ee07, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47ee0e	 Bytes: 3
  %loadMem_47ee0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee0e = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee0e)
  store %struct.Memory* %call_47ee0e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47ee11	 Bytes: 5
  %loadMem_47ee11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee11 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee11, i64 6252, i64 5)
  store %struct.Memory* %call_47ee11, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47ee16:	 RIP: 47ee16	 Bytes: 0
block_.L_47ee16:

  ; Code: movq 0x6cb900, %rax	 RIP: 47ee16	 Bytes: 8
  %loadMem_47ee16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee16 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee16)
  store %struct.Memory* %call_47ee16, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 47ee1e	 Bytes: 4
  %loadMem_47ee1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee1e = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee1e)
  store %struct.Memory* %call_47ee1e, %struct.Memory** %MEMORY

  ; Code: jne .L_47ee6f	 RIP: 47ee22	 Bytes: 6
  %loadMem_47ee22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee22 = call %struct.Memory* @routine_jne_.L_47ee6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee22, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_47ee22, %struct.Memory** %MEMORY

  %loadBr_47ee22 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ee22 = icmp eq i8 %loadBr_47ee22, 1
  br i1 %cmpBr_47ee22, label %block_.L_47ee6f, label %block_47ee28

block_47ee28:
  ; Code: movq 0x6cb900, %rax	 RIP: 47ee28	 Bytes: 8
  %loadMem_47ee28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee28 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee28)
  store %struct.Memory* %call_47ee28, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11ba4(%rax)	 RIP: 47ee30	 Bytes: 7
  %loadMem_47ee30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee30 = call %struct.Memory* @routine_cmpl__0x1__0x11ba4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee30)
  store %struct.Memory* %call_47ee30, %struct.Memory** %MEMORY

  ; Code: jne .L_47ee6f	 RIP: 47ee37	 Bytes: 6
  %loadMem_47ee37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee37 = call %struct.Memory* @routine_jne_.L_47ee6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee37, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_47ee37, %struct.Memory** %MEMORY

  %loadBr_47ee37 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ee37 = icmp eq i8 %loadBr_47ee37, 1
  br i1 %cmpBr_47ee37, label %block_.L_47ee6f, label %block_47ee3d

block_47ee3d:
  ; Code: movq 0x6cb900, %rax	 RIP: 47ee3d	 Bytes: 8
  %loadMem_47ee3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee3d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee3d)
  store %struct.Memory* %call_47ee3d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b98(%rax)	 RIP: 47ee45	 Bytes: 7
  %loadMem_47ee45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee45 = call %struct.Memory* @routine_cmpl__0x1__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee45)
  store %struct.Memory* %call_47ee45, %struct.Memory** %MEMORY

  ; Code: jne .L_47ee6f	 RIP: 47ee4c	 Bytes: 6
  %loadMem_47ee4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee4c = call %struct.Memory* @routine_jne_.L_47ee6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee4c, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_47ee4c, %struct.Memory** %MEMORY

  %loadBr_47ee4c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ee4c = icmp eq i8 %loadBr_47ee4c, 1
  br i1 %cmpBr_47ee4c, label %block_.L_47ee6f, label %block_47ee52

block_47ee52:
  ; Code: movl 0x6cd474, %eax	 RIP: 47ee52	 Bytes: 7
  %loadMem_47ee52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee52 = call %struct.Memory* @routine_movl_0x6cd474___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee52)
  store %struct.Memory* %call_47ee52, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47ee59	 Bytes: 7
  %loadMem_47ee59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee59 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee59)
  store %struct.Memory* %call_47ee59, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47ee60	 Bytes: 7
  %loadMem_47ee60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee60 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee60)
  store %struct.Memory* %call_47ee60, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47ee67	 Bytes: 3
  %loadMem_47ee67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee67 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee67)
  store %struct.Memory* %call_47ee67, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47ee6a	 Bytes: 5
  %loadMem_47ee6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee6a = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee6a, i64 6163, i64 5)
  store %struct.Memory* %call_47ee6a, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47ee6f:	 RIP: 47ee6f	 Bytes: 0
block_.L_47ee6f:

  ; Code: movq 0x6cb900, %rax	 RIP: 47ee6f	 Bytes: 8
  %loadMem_47ee6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee6f = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee6f)
  store %struct.Memory* %call_47ee6f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x18(%rax)	 RIP: 47ee77	 Bytes: 4
  %loadMem_47ee77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee77 = call %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee77)
  store %struct.Memory* %call_47ee77, %struct.Memory** %MEMORY

  ; Code: jne .L_47f469	 RIP: 47ee7b	 Bytes: 6
  %loadMem_47ee7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee7b = call %struct.Memory* @routine_jne_.L_47f469(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee7b, i8* %BRANCH_TAKEN, i64 1518, i64 6, i64 6)
  store %struct.Memory* %call_47ee7b, %struct.Memory** %MEMORY

  %loadBr_47ee7b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ee7b = icmp eq i8 %loadBr_47ee7b, 1
  br i1 %cmpBr_47ee7b, label %block_.L_47f469, label %block_47ee81

block_47ee81:
  ; Code: cmpl $0x0, -0x8(%rbp)	 RIP: 47ee81	 Bytes: 4
  %loadMem_47ee81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee81 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee81)
  store %struct.Memory* %call_47ee81, %struct.Memory** %MEMORY

  ; Code: jne .L_47eea0	 RIP: 47ee85	 Bytes: 6
  %loadMem_47ee85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee85 = call %struct.Memory* @routine_jne_.L_47eea0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee85, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47ee85, %struct.Memory** %MEMORY

  %loadBr_47ee85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ee85 = icmp eq i8 %loadBr_47ee85, 1
  br i1 %cmpBr_47ee85, label %block_.L_47eea0, label %block_47ee8b

block_47ee8b:
  ; Code: movq 0x6cb900, %rax	 RIP: 47ee8b	 Bytes: 8
  %loadMem_47ee8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee8b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee8b)
  store %struct.Memory* %call_47ee8b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47ee93	 Bytes: 7
  %loadMem_47ee93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee93 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee93)
  store %struct.Memory* %call_47ee93, %struct.Memory** %MEMORY

  ; Code: jne .L_47f45a	 RIP: 47ee9a	 Bytes: 6
  %loadMem_47ee9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ee9a = call %struct.Memory* @routine_jne_.L_47f45a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ee9a, i8* %BRANCH_TAKEN, i64 1472, i64 6, i64 6)
  store %struct.Memory* %call_47ee9a, %struct.Memory** %MEMORY

  %loadBr_47ee9a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ee9a = icmp eq i8 %loadBr_47ee9a, 1
  br i1 %cmpBr_47ee9a, label %block_.L_47f45a, label %block_.L_47eea0

  ; Code: .L_47eea0:	 RIP: 47eea0	 Bytes: 0
block_.L_47eea0:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 47eea0	 Bytes: 8
  %loadMem_47eea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eea0 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eea0)
  store %struct.Memory* %call_47eea0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x4d4(%rax)	 RIP: 47eea8	 Bytes: 7
  %loadMem_47eea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eea8 = call %struct.Memory* @routine_cmpl__0x1__0x4d4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eea8)
  store %struct.Memory* %call_47eea8, %struct.Memory** %MEMORY

  ; Code: jne .L_47f02d	 RIP: 47eeaf	 Bytes: 6
  %loadMem_47eeaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eeaf = call %struct.Memory* @routine_jne_.L_47f02d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eeaf, i8* %BRANCH_TAKEN, i64 382, i64 6, i64 6)
  store %struct.Memory* %call_47eeaf, %struct.Memory** %MEMORY

  %loadBr_47eeaf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eeaf = icmp eq i8 %loadBr_47eeaf, 1
  br i1 %cmpBr_47eeaf, label %block_.L_47f02d, label %block_47eeb5

block_47eeb5:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47eeb5	 Bytes: 8
  %loadMem_47eeb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eeb5 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eeb5)
  store %struct.Memory* %call_47eeb5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47eebd	 Bytes: 7
  %loadMem_47eebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eebd = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eebd)
  store %struct.Memory* %call_47eebd, %struct.Memory** %MEMORY

  ; Code: je .L_47eedf	 RIP: 47eec4	 Bytes: 6
  %loadMem_47eec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eec4 = call %struct.Memory* @routine_je_.L_47eedf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eec4, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47eec4, %struct.Memory** %MEMORY

  %loadBr_47eec4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eec4 = icmp eq i8 %loadBr_47eec4, 1
  br i1 %cmpBr_47eec4, label %block_.L_47eedf, label %block_47eeca

block_47eeca:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47eeca	 Bytes: 8
  %loadMem_47eeca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eeca = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eeca)
  store %struct.Memory* %call_47eeca, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47eed2	 Bytes: 7
  %loadMem_47eed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eed2 = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eed2)
  store %struct.Memory* %call_47eed2, %struct.Memory** %MEMORY

  ; Code: je .L_47ef50	 RIP: 47eed9	 Bytes: 6
  %loadMem_47eed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eed9 = call %struct.Memory* @routine_je_.L_47ef50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eed9, i8* %BRANCH_TAKEN, i64 119, i64 6, i64 6)
  store %struct.Memory* %call_47eed9, %struct.Memory** %MEMORY

  %loadBr_47eed9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eed9 = icmp eq i8 %loadBr_47eed9, 1
  br i1 %cmpBr_47eed9, label %block_.L_47ef50, label %block_.L_47eedf

  ; Code: .L_47eedf:	 RIP: 47eedf	 Bytes: 0
block_.L_47eedf:

  ; Code: movq 0x6cb900, %rax	 RIP: 47eedf	 Bytes: 8
  %loadMem_47eedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eedf = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eedf)
  store %struct.Memory* %call_47eedf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47eee7	 Bytes: 7
  %loadMem_47eee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eee7 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eee7)
  store %struct.Memory* %call_47eee7, %struct.Memory** %MEMORY

  ; Code: jne .L_47ef4b	 RIP: 47eeee	 Bytes: 6
  %loadMem_47eeee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eeee = call %struct.Memory* @routine_jne_.L_47ef4b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eeee, i8* %BRANCH_TAKEN, i64 93, i64 6, i64 6)
  store %struct.Memory* %call_47eeee, %struct.Memory** %MEMORY

  %loadBr_47eeee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eeee = icmp eq i8 %loadBr_47eeee, 1
  br i1 %cmpBr_47eeee, label %block_.L_47ef4b, label %block_47eef4

block_47eef4:
  ; Code: movq 0x6cb900, %rax	 RIP: 47eef4	 Bytes: 8
  %loadMem_47eef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eef4 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eef4)
  store %struct.Memory* %call_47eef4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b9c(%rax)	 RIP: 47eefc	 Bytes: 7
  %loadMem_47eefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eefc = call %struct.Memory* @routine_cmpl__0x1__0x11b9c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eefc)
  store %struct.Memory* %call_47eefc, %struct.Memory** %MEMORY

  ; Code: jne .L_47ef2a	 RIP: 47ef03	 Bytes: 6
  %loadMem_47ef03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef03 = call %struct.Memory* @routine_jne_.L_47ef2a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef03, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_47ef03, %struct.Memory** %MEMORY

  %loadBr_47ef03 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ef03 = icmp eq i8 %loadBr_47ef03, 1
  br i1 %cmpBr_47ef03, label %block_.L_47ef2a, label %block_47ef09

block_47ef09:
  ; Code: movl 0x70d190, %eax	 RIP: 47ef09	 Bytes: 7
  %loadMem_47ef09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef09 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef09)
  store %struct.Memory* %call_47ef09, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47ef10	 Bytes: 7
  %loadMem_47ef10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef10 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef10)
  store %struct.Memory* %call_47ef10, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9708, %eax	 RIP: 47ef17	 Bytes: 7
  %loadMem_47ef17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef17 = call %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef17)
  store %struct.Memory* %call_47ef17, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47ef1e	 Bytes: 7
  %loadMem_47ef1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef1e = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef1e)
  store %struct.Memory* %call_47ef1e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47ef46	 RIP: 47ef25	 Bytes: 5
  %loadMem_47ef25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef25 = call %struct.Memory* @routine_jmpq_.L_47ef46(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef25, i64 33, i64 5)
  store %struct.Memory* %call_47ef25, %struct.Memory** %MEMORY

  br label %block_.L_47ef46

  ; Code: .L_47ef2a:	 RIP: 47ef2a	 Bytes: 0
block_.L_47ef2a:

  ; Code: movl 0x70d190, %eax	 RIP: 47ef2a	 Bytes: 7
  %loadMem_47ef2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef2a = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef2a)
  store %struct.Memory* %call_47ef2a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47ef31	 Bytes: 7
  %loadMem_47ef31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef31 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef31)
  store %struct.Memory* %call_47ef31, %struct.Memory** %MEMORY

  ; Code: movl 0x7236c0, %eax	 RIP: 47ef38	 Bytes: 7
  %loadMem_47ef38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef38 = call %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef38)
  store %struct.Memory* %call_47ef38, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47ef3f	 Bytes: 7
  %loadMem_47ef3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef3f = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef3f)
  store %struct.Memory* %call_47ef3f, %struct.Memory** %MEMORY

  ; Code: .L_47ef46:	 RIP: 47ef46	 Bytes: 0
  br label %block_.L_47ef46
block_.L_47ef46:

  ; Code: jmpq .L_47ef4b	 RIP: 47ef46	 Bytes: 5
  %loadMem_47ef46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef46 = call %struct.Memory* @routine_jmpq_.L_47ef4b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef46, i64 5, i64 5)
  store %struct.Memory* %call_47ef46, %struct.Memory** %MEMORY

  br label %block_.L_47ef4b

  ; Code: .L_47ef4b:	 RIP: 47ef4b	 Bytes: 0
block_.L_47ef4b:

  ; Code: jmpq .L_47ef50	 RIP: 47ef4b	 Bytes: 5
  %loadMem_47ef4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef4b = call %struct.Memory* @routine_jmpq_.L_47ef50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef4b, i64 5, i64 5)
  store %struct.Memory* %call_47ef4b, %struct.Memory** %MEMORY

  br label %block_.L_47ef50

  ; Code: .L_47ef50:	 RIP: 47ef50	 Bytes: 0
block_.L_47ef50:

  ; Code: movl 0x6cd3a8, %eax	 RIP: 47ef50	 Bytes: 7
  %loadMem_47ef50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef50 = call %struct.Memory* @routine_movl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef50)
  store %struct.Memory* %call_47ef50, %struct.Memory** %MEMORY

  ; Code: cmpl 0x70d190, %eax	 RIP: 47ef57	 Bytes: 7
  %loadMem_47ef57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef57 = call %struct.Memory* @routine_cmpl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef57)
  store %struct.Memory* %call_47ef57, %struct.Memory** %MEMORY

  ; Code: jne .L_47ef7a	 RIP: 47ef5e	 Bytes: 6
  %loadMem_47ef5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef5e = call %struct.Memory* @routine_jne_.L_47ef7a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef5e, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_47ef5e, %struct.Memory** %MEMORY

  %loadBr_47ef5e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ef5e = icmp eq i8 %loadBr_47ef5e, 1
  br i1 %cmpBr_47ef5e, label %block_.L_47ef7a, label %block_47ef64

block_47ef64:
  ; Code: movl 0x6cd3a8, %eax	 RIP: 47ef64	 Bytes: 7
  %loadMem_47ef64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef64 = call %struct.Memory* @routine_movl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef64)
  store %struct.Memory* %call_47ef64, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 47ef6b	 Bytes: 3
  %loadMem_47ef6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef6b = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef6b)
  store %struct.Memory* %call_47ef6b, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47ef6e	 Bytes: 7
  %loadMem_47ef6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef6e = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef6e)
  store %struct.Memory* %call_47ef6e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47efa8	 RIP: 47ef75	 Bytes: 5
  %loadMem_47ef75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef75 = call %struct.Memory* @routine_jmpq_.L_47efa8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef75, i64 51, i64 5)
  store %struct.Memory* %call_47ef75, %struct.Memory** %MEMORY

  br label %block_.L_47efa8

  ; Code: .L_47ef7a:	 RIP: 47ef7a	 Bytes: 0
block_.L_47ef7a:

  ; Code: movl $0x2, %eax	 RIP: 47ef7a	 Bytes: 5
  %loadMem_47ef7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef7a = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef7a)
  store %struct.Memory* %call_47ef7a, %struct.Memory** %MEMORY

  ; Code: movl 0x6cd3a8, %ecx	 RIP: 47ef7f	 Bytes: 7
  %loadMem_47ef7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef7f = call %struct.Memory* @routine_movl_0x6cd3a8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef7f)
  store %struct.Memory* %call_47ef7f, %struct.Memory** %MEMORY

  ; Code: addl 0x70d190, %ecx	 RIP: 47ef86	 Bytes: 7
  %loadMem_47ef86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef86 = call %struct.Memory* @routine_addl_0x70d190___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef86)
  store %struct.Memory* %call_47ef86, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x84(%rbp)	 RIP: 47ef8d	 Bytes: 6
  %loadMem_47ef8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef8d = call %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef8d)
  store %struct.Memory* %call_47ef8d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 47ef93	 Bytes: 2
  %loadMem_47ef93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef93 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef93)
  store %struct.Memory* %call_47ef93, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47ef95	 Bytes: 1
  %loadMem_47ef95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef95 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef95)
  store %struct.Memory* %call_47ef95, %struct.Memory** %MEMORY

  ; Code: movl -0x84(%rbp), %ecx	 RIP: 47ef96	 Bytes: 6
  %loadMem_47ef96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef96 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef96)
  store %struct.Memory* %call_47ef96, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47ef9c	 Bytes: 2
  %loadMem_47ef9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef9c = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef9c)
  store %struct.Memory* %call_47ef9c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47ef9e	 Bytes: 3
  %loadMem_47ef9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ef9e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ef9e)
  store %struct.Memory* %call_47ef9e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47efa1	 Bytes: 7
  %loadMem_47efa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efa1 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efa1)
  store %struct.Memory* %call_47efa1, %struct.Memory** %MEMORY

  ; Code: .L_47efa8:	 RIP: 47efa8	 Bytes: 0
  br label %block_.L_47efa8
block_.L_47efa8:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47efa8	 Bytes: 7
  %loadMem_47efa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efa8 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efa8)
  store %struct.Memory* %call_47efa8, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 47efaf	 Bytes: 7
  %loadMem_47efaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efaf = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efaf)
  store %struct.Memory* %call_47efaf, %struct.Memory** %MEMORY

  ; Code: jge .L_47efce	 RIP: 47efb6	 Bytes: 6
  %loadMem_47efb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efb6 = call %struct.Memory* @routine_jge_.L_47efce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efb6, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_47efb6, %struct.Memory** %MEMORY

  %loadBr_47efb6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47efb6 = icmp eq i8 %loadBr_47efb6, 1
  br i1 %cmpBr_47efb6, label %block_.L_47efce, label %block_47efbc

block_47efbc:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47efbc	 Bytes: 7
  %loadMem_47efbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efbc = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efbc)
  store %struct.Memory* %call_47efbc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x88(%rbp)	 RIP: 47efc3	 Bytes: 6
  %loadMem_47efc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efc3 = call %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efc3)
  store %struct.Memory* %call_47efc3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47efdb	 RIP: 47efc9	 Bytes: 5
  %loadMem_47efc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efc9 = call %struct.Memory* @routine_jmpq_.L_47efdb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efc9, i64 18, i64 5)
  store %struct.Memory* %call_47efc9, %struct.Memory** %MEMORY

  br label %block_.L_47efdb

  ; Code: .L_47efce:	 RIP: 47efce	 Bytes: 0
block_.L_47efce:

  ; Code: movl 0x724744, %eax	 RIP: 47efce	 Bytes: 7
  %loadMem_47efce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efce = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efce)
  store %struct.Memory* %call_47efce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x88(%rbp)	 RIP: 47efd5	 Bytes: 6
  %loadMem_47efd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efd5 = call %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efd5)
  store %struct.Memory* %call_47efd5, %struct.Memory** %MEMORY

  ; Code: .L_47efdb:	 RIP: 47efdb	 Bytes: 0
  br label %block_.L_47efdb
block_.L_47efdb:

  ; Code: movl -0x88(%rbp), %eax	 RIP: 47efdb	 Bytes: 6
  %loadMem_47efdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efdb = call %struct.Memory* @routine_movl_MINUS0x88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efdb)
  store %struct.Memory* %call_47efdb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47efe1	 Bytes: 7
  %loadMem_47efe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efe1 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efe1)
  store %struct.Memory* %call_47efe1, %struct.Memory** %MEMORY

  ; Code: movl 0x710364, %eax	 RIP: 47efe8	 Bytes: 7
  %loadMem_47efe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efe8 = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efe8)
  store %struct.Memory* %call_47efe8, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 47efef	 Bytes: 7
  %loadMem_47efef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47efef = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47efef)
  store %struct.Memory* %call_47efef, %struct.Memory** %MEMORY

  ; Code: jge .L_47f00e	 RIP: 47eff6	 Bytes: 6
  %loadMem_47eff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47eff6 = call %struct.Memory* @routine_jge_.L_47f00e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47eff6, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_47eff6, %struct.Memory** %MEMORY

  %loadBr_47eff6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eff6 = icmp eq i8 %loadBr_47eff6, 1
  br i1 %cmpBr_47eff6, label %block_.L_47f00e, label %block_47effc

block_47effc:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47effc	 Bytes: 7
  %loadMem_47effc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47effc = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47effc)
  store %struct.Memory* %call_47effc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8c(%rbp)	 RIP: 47f003	 Bytes: 6
  %loadMem_47f003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f003 = call %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f003)
  store %struct.Memory* %call_47f003, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f01b	 RIP: 47f009	 Bytes: 5
  %loadMem_47f009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f009 = call %struct.Memory* @routine_jmpq_.L_47f01b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f009, i64 18, i64 5)
  store %struct.Memory* %call_47f009, %struct.Memory** %MEMORY

  br label %block_.L_47f01b

  ; Code: .L_47f00e:	 RIP: 47f00e	 Bytes: 0
block_.L_47f00e:

  ; Code: movl 0x710364, %eax	 RIP: 47f00e	 Bytes: 7
  %loadMem_47f00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f00e = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f00e)
  store %struct.Memory* %call_47f00e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8c(%rbp)	 RIP: 47f015	 Bytes: 6
  %loadMem_47f015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f015 = call %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f015)
  store %struct.Memory* %call_47f015, %struct.Memory** %MEMORY

  ; Code: .L_47f01b:	 RIP: 47f01b	 Bytes: 0
  br label %block_.L_47f01b
block_.L_47f01b:

  ; Code: movl -0x8c(%rbp), %eax	 RIP: 47f01b	 Bytes: 6
  %loadMem_47f01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f01b = call %struct.Memory* @routine_movl_MINUS0x8c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f01b)
  store %struct.Memory* %call_47f01b, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f021	 Bytes: 7
  %loadMem_47f021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f021 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f021)
  store %struct.Memory* %call_47f021, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f44b	 RIP: 47f028	 Bytes: 5
  %loadMem_47f028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f028 = call %struct.Memory* @routine_jmpq_.L_47f44b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f028, i64 1059, i64 5)
  store %struct.Memory* %call_47f028, %struct.Memory** %MEMORY

  br label %block_.L_47f44b

  ; Code: .L_47f02d:	 RIP: 47f02d	 Bytes: 0
block_.L_47f02d:

  ; Code: movl 0x70fce0, %eax	 RIP: 47f02d	 Bytes: 7
  %loadMem_47f02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f02d = call %struct.Memory* @routine_movl_0x70fce0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f02d)
  store %struct.Memory* %call_47f02d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47f034	 Bytes: 3
  %loadMem_47f034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f034 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f034)
  store %struct.Memory* %call_47f034, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47f037	 Bytes: 8
  %loadMem_47f037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f037 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f037)
  store %struct.Memory* %call_47f037, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47f03f	 Bytes: 1
  %loadMem_47f03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f03f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f03f)
  store %struct.Memory* %call_47f03f, %struct.Memory** %MEMORY

  ; Code: idivl 0x4d4(%rcx)	 RIP: 47f040	 Bytes: 6
  %loadMem_47f040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f040 = call %struct.Memory* @routine_idivl_0x4d4__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f040)
  store %struct.Memory* %call_47f040, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x18(%rbp)	 RIP: 47f046	 Bytes: 3
  %loadMem_47f046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f046 = call %struct.Memory* @routine_movl__edx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f046)
  store %struct.Memory* %call_47f046, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x18(%rbp)	 RIP: 47f049	 Bytes: 4
  %loadMem_47f049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f049 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f049)
  store %struct.Memory* %call_47f049, %struct.Memory** %MEMORY

  ; Code: jne .L_47f064	 RIP: 47f04d	 Bytes: 6
  %loadMem_47f04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f04d = call %struct.Memory* @routine_jne_.L_47f064(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f04d, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_47f04d, %struct.Memory** %MEMORY

  %loadBr_47f04d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f04d = icmp eq i8 %loadBr_47f04d, 1
  br i1 %cmpBr_47f04d, label %block_.L_47f064, label %block_47f053

block_47f053:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47f053	 Bytes: 8
  %loadMem_47f053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f053 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f053)
  store %struct.Memory* %call_47f053, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rax), %ecx	 RIP: 47f05b	 Bytes: 6
  %loadMem_47f05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f05b = call %struct.Memory* @routine_movl_0x4d4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f05b)
  store %struct.Memory* %call_47f05b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 47f061	 Bytes: 3
  %loadMem_47f061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f061 = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f061)
  store %struct.Memory* %call_47f061, %struct.Memory** %MEMORY

  ; Code: .L_47f064:	 RIP: 47f064	 Bytes: 0
  br label %block_.L_47f064
block_.L_47f064:

  ; Code: cmpl $0x1, -0x18(%rbp)	 RIP: 47f064	 Bytes: 4
  %loadMem_47f064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f064 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f064)
  store %struct.Memory* %call_47f064, %struct.Memory** %MEMORY

  ; Code: jne .L_47f10e	 RIP: 47f068	 Bytes: 6
  %loadMem_47f068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f068 = call %struct.Memory* @routine_jne_.L_47f10e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f068, i8* %BRANCH_TAKEN, i64 166, i64 6, i64 6)
  store %struct.Memory* %call_47f068, %struct.Memory** %MEMORY

  %loadBr_47f068 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f068 = icmp eq i8 %loadBr_47f068, 1
  br i1 %cmpBr_47f068, label %block_.L_47f10e, label %block_47f06e

block_47f06e:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47f06e	 Bytes: 8
  %loadMem_47f06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f06e = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f06e)
  store %struct.Memory* %call_47f06e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47f076	 Bytes: 7
  %loadMem_47f076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f076 = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f076)
  store %struct.Memory* %call_47f076, %struct.Memory** %MEMORY

  ; Code: je .L_47f098	 RIP: 47f07d	 Bytes: 6
  %loadMem_47f07d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f07d = call %struct.Memory* @routine_je_.L_47f098(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f07d, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47f07d, %struct.Memory** %MEMORY

  %loadBr_47f07d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f07d = icmp eq i8 %loadBr_47f07d, 1
  br i1 %cmpBr_47f07d, label %block_.L_47f098, label %block_47f083

block_47f083:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47f083	 Bytes: 8
  %loadMem_47f083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f083 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f083)
  store %struct.Memory* %call_47f083, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47f08b	 Bytes: 7
  %loadMem_47f08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f08b = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f08b)
  store %struct.Memory* %call_47f08b, %struct.Memory** %MEMORY

  ; Code: je .L_47f109	 RIP: 47f092	 Bytes: 6
  %loadMem_47f092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f092 = call %struct.Memory* @routine_je_.L_47f109(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f092, i8* %BRANCH_TAKEN, i64 119, i64 6, i64 6)
  store %struct.Memory* %call_47f092, %struct.Memory** %MEMORY

  %loadBr_47f092 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f092 = icmp eq i8 %loadBr_47f092, 1
  br i1 %cmpBr_47f092, label %block_.L_47f109, label %block_.L_47f098

  ; Code: .L_47f098:	 RIP: 47f098	 Bytes: 0
block_.L_47f098:

  ; Code: movq 0x6cb900, %rax	 RIP: 47f098	 Bytes: 8
  %loadMem_47f098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f098 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f098)
  store %struct.Memory* %call_47f098, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47f0a0	 Bytes: 7
  %loadMem_47f0a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0a0 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0a0)
  store %struct.Memory* %call_47f0a0, %struct.Memory** %MEMORY

  ; Code: jne .L_47f104	 RIP: 47f0a7	 Bytes: 6
  %loadMem_47f0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0a7 = call %struct.Memory* @routine_jne_.L_47f104(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0a7, i8* %BRANCH_TAKEN, i64 93, i64 6, i64 6)
  store %struct.Memory* %call_47f0a7, %struct.Memory** %MEMORY

  %loadBr_47f0a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f0a7 = icmp eq i8 %loadBr_47f0a7, 1
  br i1 %cmpBr_47f0a7, label %block_.L_47f104, label %block_47f0ad

block_47f0ad:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f0ad	 Bytes: 8
  %loadMem_47f0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0ad = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0ad)
  store %struct.Memory* %call_47f0ad, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b9c(%rax)	 RIP: 47f0b5	 Bytes: 7
  %loadMem_47f0b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0b5 = call %struct.Memory* @routine_cmpl__0x1__0x11b9c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0b5)
  store %struct.Memory* %call_47f0b5, %struct.Memory** %MEMORY

  ; Code: jne .L_47f0e3	 RIP: 47f0bc	 Bytes: 6
  %loadMem_47f0bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0bc = call %struct.Memory* @routine_jne_.L_47f0e3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0bc, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_47f0bc, %struct.Memory** %MEMORY

  %loadBr_47f0bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f0bc = icmp eq i8 %loadBr_47f0bc, 1
  br i1 %cmpBr_47f0bc, label %block_.L_47f0e3, label %block_47f0c2

block_47f0c2:
  ; Code: movl 0x70d190, %eax	 RIP: 47f0c2	 Bytes: 7
  %loadMem_47f0c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0c2 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0c2)
  store %struct.Memory* %call_47f0c2, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47f0c9	 Bytes: 7
  %loadMem_47f0c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0c9 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0c9)
  store %struct.Memory* %call_47f0c9, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9708, %eax	 RIP: 47f0d0	 Bytes: 7
  %loadMem_47f0d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0d0 = call %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0d0)
  store %struct.Memory* %call_47f0d0, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47f0d7	 Bytes: 7
  %loadMem_47f0d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0d7 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0d7)
  store %struct.Memory* %call_47f0d7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f0ff	 RIP: 47f0de	 Bytes: 5
  %loadMem_47f0de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0de = call %struct.Memory* @routine_jmpq_.L_47f0ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0de, i64 33, i64 5)
  store %struct.Memory* %call_47f0de, %struct.Memory** %MEMORY

  br label %block_.L_47f0ff

  ; Code: .L_47f0e3:	 RIP: 47f0e3	 Bytes: 0
block_.L_47f0e3:

  ; Code: movl 0x70d190, %eax	 RIP: 47f0e3	 Bytes: 7
  %loadMem_47f0e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0e3 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0e3)
  store %struct.Memory* %call_47f0e3, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47f0ea	 Bytes: 7
  %loadMem_47f0ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0ea = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0ea)
  store %struct.Memory* %call_47f0ea, %struct.Memory** %MEMORY

  ; Code: movl 0x7236c0, %eax	 RIP: 47f0f1	 Bytes: 7
  %loadMem_47f0f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0f1 = call %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0f1)
  store %struct.Memory* %call_47f0f1, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47f0f8	 Bytes: 7
  %loadMem_47f0f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0f8 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0f8)
  store %struct.Memory* %call_47f0f8, %struct.Memory** %MEMORY

  ; Code: .L_47f0ff:	 RIP: 47f0ff	 Bytes: 0
  br label %block_.L_47f0ff
block_.L_47f0ff:

  ; Code: jmpq .L_47f104	 RIP: 47f0ff	 Bytes: 5
  %loadMem_47f0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f0ff = call %struct.Memory* @routine_jmpq_.L_47f104(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f0ff, i64 5, i64 5)
  store %struct.Memory* %call_47f0ff, %struct.Memory** %MEMORY

  br label %block_.L_47f104

  ; Code: .L_47f104:	 RIP: 47f104	 Bytes: 0
block_.L_47f104:

  ; Code: jmpq .L_47f109	 RIP: 47f104	 Bytes: 5
  %loadMem_47f104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f104 = call %struct.Memory* @routine_jmpq_.L_47f109(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f104, i64 5, i64 5)
  store %struct.Memory* %call_47f104, %struct.Memory** %MEMORY

  br label %block_.L_47f109

  ; Code: .L_47f109:	 RIP: 47f109	 Bytes: 0
block_.L_47f109:

  ; Code: jmpq .L_47f10e	 RIP: 47f109	 Bytes: 5
  %loadMem_47f109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f109 = call %struct.Memory* @routine_jmpq_.L_47f10e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f109, i64 5, i64 5)
  store %struct.Memory* %call_47f109, %struct.Memory** %MEMORY

  br label %block_.L_47f10e

  ; Code: .L_47f10e:	 RIP: 47f10e	 Bytes: 0
block_.L_47f10e:

  ; Code: movl 0x70d190, %eax	 RIP: 47f10e	 Bytes: 7
  %loadMem_47f10e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f10e = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f10e)
  store %struct.Memory* %call_47f10e, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47f115	 Bytes: 7
  %loadMem_47f115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f115 = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f115)
  store %struct.Memory* %call_47f115, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47f11c	 Bytes: 8
  %loadMem_47f11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f11c = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f11c)
  store %struct.Memory* %call_47f11c, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47f124	 Bytes: 10
  %loadMem_47f124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f124 = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f124)
  store %struct.Memory* %call_47f124, %struct.Memory** %MEMORY

  ; Code: subl $0x3, %edx	 RIP: 47f12e	 Bytes: 3
  %loadMem_47f12e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f12e = call %struct.Memory* @routine_subl__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f12e)
  store %struct.Memory* %call_47f12e, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47f131	 Bytes: 2
  %loadMem_47f131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f131 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f131)
  store %struct.Memory* %call_47f131, %struct.Memory** %MEMORY

  ; Code: jg .L_47f145	 RIP: 47f133	 Bytes: 6
  %loadMem_47f133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f133 = call %struct.Memory* @routine_jg_.L_47f145(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f133, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47f133, %struct.Memory** %MEMORY

  %loadBr_47f133 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f133 = icmp eq i8 %loadBr_47f133, 1
  br i1 %cmpBr_47f133, label %block_.L_47f145, label %block_47f139

block_47f139:
  ; Code: movl $0xfffffffd, -0x1c(%rbp)	 RIP: 47f139	 Bytes: 7
  %loadMem_47f139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f139 = call %struct.Memory* @routine_movl__0xfffffffd__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f139)
  store %struct.Memory* %call_47f139, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f239	 RIP: 47f140	 Bytes: 5
  %loadMem_47f140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f140 = call %struct.Memory* @routine_jmpq_.L_47f239(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f140, i64 249, i64 5)
  store %struct.Memory* %call_47f140, %struct.Memory** %MEMORY

  br label %block_.L_47f239

  ; Code: .L_47f145:	 RIP: 47f145	 Bytes: 0
block_.L_47f145:

  ; Code: movl 0x70d190, %eax	 RIP: 47f145	 Bytes: 7
  %loadMem_47f145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f145 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f145)
  store %struct.Memory* %call_47f145, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47f14c	 Bytes: 7
  %loadMem_47f14c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f14c = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f14c)
  store %struct.Memory* %call_47f14c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47f153	 Bytes: 8
  %loadMem_47f153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f153 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f153)
  store %struct.Memory* %call_47f153, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47f15b	 Bytes: 10
  %loadMem_47f15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f15b = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f15b)
  store %struct.Memory* %call_47f15b, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %edx	 RIP: 47f165	 Bytes: 3
  %loadMem_47f165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f165 = call %struct.Memory* @routine_subl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f165)
  store %struct.Memory* %call_47f165, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47f168	 Bytes: 2
  %loadMem_47f168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f168 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f168)
  store %struct.Memory* %call_47f168, %struct.Memory** %MEMORY

  ; Code: jne .L_47f17c	 RIP: 47f16a	 Bytes: 6
  %loadMem_47f16a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f16a = call %struct.Memory* @routine_jne_.L_47f17c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f16a, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47f16a, %struct.Memory** %MEMORY

  %loadBr_47f16a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f16a = icmp eq i8 %loadBr_47f16a, 1
  br i1 %cmpBr_47f16a, label %block_.L_47f17c, label %block_47f170

block_47f170:
  ; Code: movl $0xfffffffe, -0x1c(%rbp)	 RIP: 47f170	 Bytes: 7
  %loadMem_47f170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f170 = call %struct.Memory* @routine_movl__0xfffffffe__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f170)
  store %struct.Memory* %call_47f170, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f234	 RIP: 47f177	 Bytes: 5
  %loadMem_47f177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f177 = call %struct.Memory* @routine_jmpq_.L_47f234(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f177, i64 189, i64 5)
  store %struct.Memory* %call_47f177, %struct.Memory** %MEMORY

  br label %block_.L_47f234

  ; Code: .L_47f17c:	 RIP: 47f17c	 Bytes: 0
block_.L_47f17c:

  ; Code: movl 0x70d190, %eax	 RIP: 47f17c	 Bytes: 7
  %loadMem_47f17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f17c = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f17c)
  store %struct.Memory* %call_47f17c, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47f183	 Bytes: 7
  %loadMem_47f183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f183 = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f183)
  store %struct.Memory* %call_47f183, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47f18a	 Bytes: 8
  %loadMem_47f18a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f18a = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f18a)
  store %struct.Memory* %call_47f18a, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47f192	 Bytes: 10
  %loadMem_47f192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f192 = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f192)
  store %struct.Memory* %call_47f192, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47f19c	 Bytes: 3
  %loadMem_47f19c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f19c = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f19c)
  store %struct.Memory* %call_47f19c, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47f19f	 Bytes: 2
  %loadMem_47f19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f19f = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f19f)
  store %struct.Memory* %call_47f19f, %struct.Memory** %MEMORY

  ; Code: jne .L_47f1b3	 RIP: 47f1a1	 Bytes: 6
  %loadMem_47f1a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1a1 = call %struct.Memory* @routine_jne_.L_47f1b3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1a1, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47f1a1, %struct.Memory** %MEMORY

  %loadBr_47f1a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f1a1 = icmp eq i8 %loadBr_47f1a1, 1
  br i1 %cmpBr_47f1a1, label %block_.L_47f1b3, label %block_47f1a7

block_47f1a7:
  ; Code: movl $0xffffffff, -0x1c(%rbp)	 RIP: 47f1a7	 Bytes: 7
  %loadMem_47f1a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1a7 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1a7)
  store %struct.Memory* %call_47f1a7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f22f	 RIP: 47f1ae	 Bytes: 5
  %loadMem_47f1ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1ae = call %struct.Memory* @routine_jmpq_.L_47f22f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1ae, i64 129, i64 5)
  store %struct.Memory* %call_47f1ae, %struct.Memory** %MEMORY

  br label %block_.L_47f22f

  ; Code: .L_47f1b3:	 RIP: 47f1b3	 Bytes: 0
block_.L_47f1b3:

  ; Code: movl 0x70d190, %eax	 RIP: 47f1b3	 Bytes: 7
  %loadMem_47f1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1b3 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1b3)
  store %struct.Memory* %call_47f1b3, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47f1ba	 Bytes: 7
  %loadMem_47f1ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1ba = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1ba)
  store %struct.Memory* %call_47f1ba, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47f1c1	 Bytes: 8
  %loadMem_47f1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1c1 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1c1)
  store %struct.Memory* %call_47f1c1, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47f1c9	 Bytes: 10
  %loadMem_47f1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1c9 = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1c9)
  store %struct.Memory* %call_47f1c9, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47f1d3	 Bytes: 2
  %loadMem_47f1d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1d3 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1d3)
  store %struct.Memory* %call_47f1d3, %struct.Memory** %MEMORY

  ; Code: jne .L_47f1e7	 RIP: 47f1d5	 Bytes: 6
  %loadMem_47f1d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1d5 = call %struct.Memory* @routine_jne_.L_47f1e7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1d5, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47f1d5, %struct.Memory** %MEMORY

  %loadBr_47f1d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f1d5 = icmp eq i8 %loadBr_47f1d5, 1
  br i1 %cmpBr_47f1d5, label %block_.L_47f1e7, label %block_47f1db

block_47f1db:
  ; Code: movl $0x0, -0x1c(%rbp)	 RIP: 47f1db	 Bytes: 7
  %loadMem_47f1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1db = call %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1db)
  store %struct.Memory* %call_47f1db, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f22a	 RIP: 47f1e2	 Bytes: 5
  %loadMem_47f1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1e2 = call %struct.Memory* @routine_jmpq_.L_47f22a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1e2, i64 72, i64 5)
  store %struct.Memory* %call_47f1e2, %struct.Memory** %MEMORY

  br label %block_.L_47f22a

  ; Code: .L_47f1e7:	 RIP: 47f1e7	 Bytes: 0
block_.L_47f1e7:

  ; Code: movl 0x70d190, %eax	 RIP: 47f1e7	 Bytes: 7
  %loadMem_47f1e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1e7 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1e7)
  store %struct.Memory* %call_47f1e7, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %eax	 RIP: 47f1ee	 Bytes: 7
  %loadMem_47f1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1ee = call %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1ee)
  store %struct.Memory* %call_47f1ee, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47f1f5	 Bytes: 8
  %loadMem_47f1f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1f5 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1f5)
  store %struct.Memory* %call_47f1f5, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, 0x4d4(%rcx), %edx	 RIP: 47f1fd	 Bytes: 10
  %loadMem_47f1fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f1fd = call %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f1fd)
  store %struct.Memory* %call_47f1fd, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 47f207	 Bytes: 3
  %loadMem_47f207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f207 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f207)
  store %struct.Memory* %call_47f207, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47f20a	 Bytes: 2
  %loadMem_47f20a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f20a = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f20a)
  store %struct.Memory* %call_47f20a, %struct.Memory** %MEMORY

  ; Code: jne .L_47f21e	 RIP: 47f20c	 Bytes: 6
  %loadMem_47f20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f20c = call %struct.Memory* @routine_jne_.L_47f21e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f20c, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_47f20c, %struct.Memory** %MEMORY

  %loadBr_47f20c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f20c = icmp eq i8 %loadBr_47f20c, 1
  br i1 %cmpBr_47f20c, label %block_.L_47f21e, label %block_47f212

block_47f212:
  ; Code: movl $0x1, -0x1c(%rbp)	 RIP: 47f212	 Bytes: 7
  %loadMem_47f212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f212 = call %struct.Memory* @routine_movl__0x1__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f212)
  store %struct.Memory* %call_47f212, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f225	 RIP: 47f219	 Bytes: 5
  %loadMem_47f219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f219 = call %struct.Memory* @routine_jmpq_.L_47f225(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f219, i64 12, i64 5)
  store %struct.Memory* %call_47f219, %struct.Memory** %MEMORY

  br label %block_.L_47f225

  ; Code: .L_47f21e:	 RIP: 47f21e	 Bytes: 0
block_.L_47f21e:

  ; Code: movl $0x2, -0x1c(%rbp)	 RIP: 47f21e	 Bytes: 7
  %loadMem_47f21e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f21e = call %struct.Memory* @routine_movl__0x2__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f21e)
  store %struct.Memory* %call_47f21e, %struct.Memory** %MEMORY

  ; Code: .L_47f225:	 RIP: 47f225	 Bytes: 0
  br label %block_.L_47f225
block_.L_47f225:

  ; Code: jmpq .L_47f22a	 RIP: 47f225	 Bytes: 5
  %loadMem_47f225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f225 = call %struct.Memory* @routine_jmpq_.L_47f22a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f225, i64 5, i64 5)
  store %struct.Memory* %call_47f225, %struct.Memory** %MEMORY

  br label %block_.L_47f22a

  ; Code: .L_47f22a:	 RIP: 47f22a	 Bytes: 0
block_.L_47f22a:

  ; Code: jmpq .L_47f22f	 RIP: 47f22a	 Bytes: 5
  %loadMem_47f22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f22a = call %struct.Memory* @routine_jmpq_.L_47f22f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f22a, i64 5, i64 5)
  store %struct.Memory* %call_47f22a, %struct.Memory** %MEMORY

  br label %block_.L_47f22f

  ; Code: .L_47f22f:	 RIP: 47f22f	 Bytes: 0
block_.L_47f22f:

  ; Code: jmpq .L_47f234	 RIP: 47f22f	 Bytes: 5
  %loadMem_47f22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f22f = call %struct.Memory* @routine_jmpq_.L_47f234(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f22f, i64 5, i64 5)
  store %struct.Memory* %call_47f22f, %struct.Memory** %MEMORY

  br label %block_.L_47f234

  ; Code: .L_47f234:	 RIP: 47f234	 Bytes: 0
block_.L_47f234:

  ; Code: jmpq .L_47f239	 RIP: 47f234	 Bytes: 5
  %loadMem_47f234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f234 = call %struct.Memory* @routine_jmpq_.L_47f239(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f234, i64 5, i64 5)
  store %struct.Memory* %call_47f234, %struct.Memory** %MEMORY

  br label %block_.L_47f239

  ; Code: .L_47f239:	 RIP: 47f239	 Bytes: 0
block_.L_47f239:

  ; Code: movl 0x6cd3a8, %eax	 RIP: 47f239	 Bytes: 7
  %loadMem_47f239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f239 = call %struct.Memory* @routine_movl_0x6cd3a8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f239)
  store %struct.Memory* %call_47f239, %struct.Memory** %MEMORY

  ; Code: addl -0x1c(%rbp), %eax	 RIP: 47f240	 Bytes: 3
  %loadMem_47f240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f240 = call %struct.Memory* @routine_addl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f240)
  store %struct.Memory* %call_47f240, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f243	 Bytes: 7
  %loadMem_47f243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f243 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f243)
  store %struct.Memory* %call_47f243, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %eax	 RIP: 47f24a	 Bytes: 3
  %loadMem_47f24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f24a = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f24a)
  store %struct.Memory* %call_47f24a, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47f24d	 Bytes: 3
  %loadMem_47f24d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f24d = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f24d)
  store %struct.Memory* %call_47f24d, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 47f250	 Bytes: 3
  %loadMem_47f250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f250 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f250)
  store %struct.Memory* %call_47f250, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 47f253	 Bytes: 3
  %loadMem_47f253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f253 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f253)
  store %struct.Memory* %call_47f253, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47f256	 Bytes: 3
  %loadMem_47f256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f256 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f256)
  store %struct.Memory* %call_47f256, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, %ecx, %ecx	 RIP: 47f259	 Bytes: 6
  %loadMem_47f259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f259 = call %struct.Memory* @routine_imull__0xfffffffe___ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f259)
  store %struct.Memory* %call_47f259, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 47f25f	 Bytes: 3
  %loadMem_47f25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f25f = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f25f)
  store %struct.Memory* %call_47f25f, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47f262	 Bytes: 3
  %loadMem_47f262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f262 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f262)
  store %struct.Memory* %call_47f262, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %esi	 RIP: 47f265	 Bytes: 7
  %loadMem_47f265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f265 = call %struct.Memory* @routine_movl_0x70d190___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f265)
  store %struct.Memory* %call_47f265, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %esi	 RIP: 47f26c	 Bytes: 7
  %loadMem_47f26c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f26c = call %struct.Memory* @routine_subl_0x6cd3a8___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f26c)
  store %struct.Memory* %call_47f26c, %struct.Memory** %MEMORY

  ; Code: imull %esi, %edx	 RIP: 47f273	 Bytes: 3
  %loadMem_47f273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f273 = call %struct.Memory* @routine_imull__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f273)
  store %struct.Memory* %call_47f273, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdi	 RIP: 47f276	 Bytes: 8
  %loadMem_47f276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f276 = call %struct.Memory* @routine_movq_0x6cb8f8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f276)
  store %struct.Memory* %call_47f276, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rdi), %esi	 RIP: 47f27e	 Bytes: 6
  %loadMem_47f27e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f27e = call %struct.Memory* @routine_movl_0x4d4__rdi____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f27e)
  store %struct.Memory* %call_47f27e, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %esi	 RIP: 47f284	 Bytes: 3
  %loadMem_47f284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f284 = call %struct.Memory* @routine_subl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f284)
  store %struct.Memory* %call_47f284, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x90(%rbp)	 RIP: 47f287	 Bytes: 6
  %loadMem_47f287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f287 = call %struct.Memory* @routine_movl__eax__MINUS0x90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f287)
  store %struct.Memory* %call_47f287, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 47f28d	 Bytes: 2
  %loadMem_47f28d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f28d = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f28d)
  store %struct.Memory* %call_47f28d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47f28f	 Bytes: 1
  %loadMem_47f28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f28f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f28f)
  store %struct.Memory* %call_47f28f, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 47f290	 Bytes: 2
  %loadMem_47f290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f290 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f290)
  store %struct.Memory* %call_47f290, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 47f292	 Bytes: 2
  %loadMem_47f292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f292 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f292)
  store %struct.Memory* %call_47f292, %struct.Memory** %MEMORY

  ; Code: jge .L_47f2d0	 RIP: 47f294	 Bytes: 6
  %loadMem_47f294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f294 = call %struct.Memory* @routine_jge_.L_47f2d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f294, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_47f294, %struct.Memory** %MEMORY

  %loadBr_47f294 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f294 = icmp eq i8 %loadBr_47f294, 1
  br i1 %cmpBr_47f294, label %block_.L_47f2d0, label %block_47f29a

block_47f29a:
  ; Code: movl -0x18(%rbp), %eax	 RIP: 47f29a	 Bytes: 3
  %loadMem_47f29a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f29a = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f29a)
  store %struct.Memory* %call_47f29a, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47f29d	 Bytes: 3
  %loadMem_47f29d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f29d = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f29d)
  store %struct.Memory* %call_47f29d, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %ecx	 RIP: 47f2a0	 Bytes: 7
  %loadMem_47f2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2a0 = call %struct.Memory* @routine_movl_0x70d190___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2a0)
  store %struct.Memory* %call_47f2a0, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %ecx	 RIP: 47f2a7	 Bytes: 7
  %loadMem_47f2a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2a7 = call %struct.Memory* @routine_subl_0x6cd3a8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2a7)
  store %struct.Memory* %call_47f2a7, %struct.Memory** %MEMORY

  ; Code: imull %ecx, %eax	 RIP: 47f2ae	 Bytes: 3
  %loadMem_47f2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2ae = call %struct.Memory* @routine_imull__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2ae)
  store %struct.Memory* %call_47f2ae, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdx	 RIP: 47f2b1	 Bytes: 8
  %loadMem_47f2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2b1 = call %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2b1)
  store %struct.Memory* %call_47f2b1, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rdx), %ecx	 RIP: 47f2b9	 Bytes: 6
  %loadMem_47f2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2b9 = call %struct.Memory* @routine_movl_0x4d4__rdx____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2b9)
  store %struct.Memory* %call_47f2b9, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47f2bf	 Bytes: 3
  %loadMem_47f2bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2bf = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2bf)
  store %struct.Memory* %call_47f2bf, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47f2c2	 Bytes: 1
  %loadMem_47f2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2c2 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2c2)
  store %struct.Memory* %call_47f2c2, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47f2c3	 Bytes: 2
  %loadMem_47f2c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2c3 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2c3)
  store %struct.Memory* %call_47f2c3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x94(%rbp)	 RIP: 47f2c5	 Bytes: 6
  %loadMem_47f2c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2c5 = call %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2c5)
  store %struct.Memory* %call_47f2c5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f2e2	 RIP: 47f2cb	 Bytes: 5
  %loadMem_47f2cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2cb = call %struct.Memory* @routine_jmpq_.L_47f2e2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2cb, i64 23, i64 5)
  store %struct.Memory* %call_47f2cb, %struct.Memory** %MEMORY

  br label %block_.L_47f2e2

  ; Code: .L_47f2d0:	 RIP: 47f2d0	 Bytes: 0
block_.L_47f2d0:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 47f2d0	 Bytes: 3
  %loadMem_47f2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2d0 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2d0)
  store %struct.Memory* %call_47f2d0, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47f2d3	 Bytes: 3
  %loadMem_47f2d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2d3 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2d3)
  store %struct.Memory* %call_47f2d3, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, %eax, %eax	 RIP: 47f2d6	 Bytes: 6
  %loadMem_47f2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2d6 = call %struct.Memory* @routine_imull__0xfffffffe___eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2d6)
  store %struct.Memory* %call_47f2d6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x94(%rbp)	 RIP: 47f2dc	 Bytes: 6
  %loadMem_47f2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2dc = call %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2dc)
  store %struct.Memory* %call_47f2dc, %struct.Memory** %MEMORY

  ; Code: .L_47f2e2:	 RIP: 47f2e2	 Bytes: 0
  br label %block_.L_47f2e2
block_.L_47f2e2:

  ; Code: movl -0x94(%rbp), %eax	 RIP: 47f2e2	 Bytes: 6
  %loadMem_47f2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2e2 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2e2)
  store %struct.Memory* %call_47f2e2, %struct.Memory** %MEMORY

  ; Code: movl -0x90(%rbp), %ecx	 RIP: 47f2e8	 Bytes: 6
  %loadMem_47f2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2e8 = call %struct.Memory* @routine_movl_MINUS0x90__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2e8)
  store %struct.Memory* %call_47f2e8, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 47f2ee	 Bytes: 2
  %loadMem_47f2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2ee = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2ee)
  store %struct.Memory* %call_47f2ee, %struct.Memory** %MEMORY

  ; Code: jge .L_47f30a	 RIP: 47f2f0	 Bytes: 6
  %loadMem_47f2f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2f0 = call %struct.Memory* @routine_jge_.L_47f30a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2f0, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_47f2f0, %struct.Memory** %MEMORY

  %loadBr_47f2f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f2f0 = icmp eq i8 %loadBr_47f2f0, 1
  br i1 %cmpBr_47f2f0, label %block_.L_47f30a, label %block_47f2f6

block_47f2f6:
  ; Code: movl -0x18(%rbp), %eax	 RIP: 47f2f6	 Bytes: 3
  %loadMem_47f2f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2f6 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2f6)
  store %struct.Memory* %call_47f2f6, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47f2f9	 Bytes: 3
  %loadMem_47f2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2f9 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2f9)
  store %struct.Memory* %call_47f2f9, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 47f2fc	 Bytes: 3
  %loadMem_47f2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2fc = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2fc)
  store %struct.Memory* %call_47f2fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x98(%rbp)	 RIP: 47f2ff	 Bytes: 6
  %loadMem_47f2ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f2ff = call %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f2ff)
  store %struct.Memory* %call_47f2ff, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f3b7	 RIP: 47f305	 Bytes: 5
  %loadMem_47f305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f305 = call %struct.Memory* @routine_jmpq_.L_47f3b7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f305, i64 178, i64 5)
  store %struct.Memory* %call_47f305, %struct.Memory** %MEMORY

  br label %block_.L_47f3b7

  ; Code: .L_47f30a:	 RIP: 47f30a	 Bytes: 0
block_.L_47f30a:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 47f30a	 Bytes: 3
  %loadMem_47f30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f30a = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f30a)
  store %struct.Memory* %call_47f30a, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47f30d	 Bytes: 3
  %loadMem_47f30d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f30d = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f30d)
  store %struct.Memory* %call_47f30d, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, %eax, %eax	 RIP: 47f310	 Bytes: 6
  %loadMem_47f310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f310 = call %struct.Memory* @routine_imull__0xfffffffe___eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f310)
  store %struct.Memory* %call_47f310, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 47f316	 Bytes: 3
  %loadMem_47f316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f316 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f316)
  store %struct.Memory* %call_47f316, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47f319	 Bytes: 3
  %loadMem_47f319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f319 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f319)
  store %struct.Memory* %call_47f319, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %edx	 RIP: 47f31c	 Bytes: 7
  %loadMem_47f31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f31c = call %struct.Memory* @routine_movl_0x70d190___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f31c)
  store %struct.Memory* %call_47f31c, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %edx	 RIP: 47f323	 Bytes: 7
  %loadMem_47f323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f323 = call %struct.Memory* @routine_subl_0x6cd3a8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f323)
  store %struct.Memory* %call_47f323, %struct.Memory** %MEMORY

  ; Code: imull %edx, %ecx	 RIP: 47f32a	 Bytes: 3
  %loadMem_47f32a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f32a = call %struct.Memory* @routine_imull__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f32a)
  store %struct.Memory* %call_47f32a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rsi	 RIP: 47f32d	 Bytes: 8
  %loadMem_47f32d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f32d = call %struct.Memory* @routine_movq_0x6cb8f8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f32d)
  store %struct.Memory* %call_47f32d, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rsi), %edx	 RIP: 47f335	 Bytes: 6
  %loadMem_47f335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f335 = call %struct.Memory* @routine_movl_0x4d4__rsi____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f335)
  store %struct.Memory* %call_47f335, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47f33b	 Bytes: 3
  %loadMem_47f33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f33b = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f33b)
  store %struct.Memory* %call_47f33b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x9c(%rbp)	 RIP: 47f33e	 Bytes: 6
  %loadMem_47f33e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f33e = call %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f33e)
  store %struct.Memory* %call_47f33e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 47f344	 Bytes: 2
  %loadMem_47f344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f344 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f344)
  store %struct.Memory* %call_47f344, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xa0(%rbp)	 RIP: 47f346	 Bytes: 6
  %loadMem_47f346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f346 = call %struct.Memory* @routine_movl__edx__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f346)
  store %struct.Memory* %call_47f346, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47f34c	 Bytes: 1
  %loadMem_47f34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f34c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f34c)
  store %struct.Memory* %call_47f34c, %struct.Memory** %MEMORY

  ; Code: movl -0xa0(%rbp), %ecx	 RIP: 47f34d	 Bytes: 6
  %loadMem_47f34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f34d = call %struct.Memory* @routine_movl_MINUS0xa0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f34d)
  store %struct.Memory* %call_47f34d, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47f353	 Bytes: 2
  %loadMem_47f353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f353 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f353)
  store %struct.Memory* %call_47f353, %struct.Memory** %MEMORY

  ; Code: movl -0x9c(%rbp), %edi	 RIP: 47f355	 Bytes: 6
  %loadMem_47f355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f355 = call %struct.Memory* @routine_movl_MINUS0x9c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f355)
  store %struct.Memory* %call_47f355, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %edi	 RIP: 47f35b	 Bytes: 2
  %loadMem_47f35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f35b = call %struct.Memory* @routine_cmpl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f35b)
  store %struct.Memory* %call_47f35b, %struct.Memory** %MEMORY

  ; Code: jge .L_47f399	 RIP: 47f35d	 Bytes: 6
  %loadMem_47f35d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f35d = call %struct.Memory* @routine_jge_.L_47f399(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f35d, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_47f35d, %struct.Memory** %MEMORY

  %loadBr_47f35d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f35d = icmp eq i8 %loadBr_47f35d, 1
  br i1 %cmpBr_47f35d, label %block_.L_47f399, label %block_47f363

block_47f363:
  ; Code: movl -0x18(%rbp), %eax	 RIP: 47f363	 Bytes: 3
  %loadMem_47f363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f363 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f363)
  store %struct.Memory* %call_47f363, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47f366	 Bytes: 3
  %loadMem_47f366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f366 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f366)
  store %struct.Memory* %call_47f366, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %ecx	 RIP: 47f369	 Bytes: 7
  %loadMem_47f369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f369 = call %struct.Memory* @routine_movl_0x70d190___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f369)
  store %struct.Memory* %call_47f369, %struct.Memory** %MEMORY

  ; Code: subl 0x6cd3a8, %ecx	 RIP: 47f370	 Bytes: 7
  %loadMem_47f370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f370 = call %struct.Memory* @routine_subl_0x6cd3a8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f370)
  store %struct.Memory* %call_47f370, %struct.Memory** %MEMORY

  ; Code: imull %ecx, %eax	 RIP: 47f377	 Bytes: 3
  %loadMem_47f377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f377 = call %struct.Memory* @routine_imull__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f377)
  store %struct.Memory* %call_47f377, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdx	 RIP: 47f37a	 Bytes: 8
  %loadMem_47f37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f37a = call %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f37a)
  store %struct.Memory* %call_47f37a, %struct.Memory** %MEMORY

  ; Code: movl 0x4d4(%rdx), %ecx	 RIP: 47f382	 Bytes: 6
  %loadMem_47f382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f382 = call %struct.Memory* @routine_movl_0x4d4__rdx____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f382)
  store %struct.Memory* %call_47f382, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47f388	 Bytes: 3
  %loadMem_47f388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f388 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f388)
  store %struct.Memory* %call_47f388, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47f38b	 Bytes: 1
  %loadMem_47f38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f38b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f38b)
  store %struct.Memory* %call_47f38b, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47f38c	 Bytes: 2
  %loadMem_47f38c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f38c = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f38c)
  store %struct.Memory* %call_47f38c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa4(%rbp)	 RIP: 47f38e	 Bytes: 6
  %loadMem_47f38e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f38e = call %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f38e)
  store %struct.Memory* %call_47f38e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f3ab	 RIP: 47f394	 Bytes: 5
  %loadMem_47f394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f394 = call %struct.Memory* @routine_jmpq_.L_47f3ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f394, i64 23, i64 5)
  store %struct.Memory* %call_47f394, %struct.Memory** %MEMORY

  br label %block_.L_47f3ab

  ; Code: .L_47f399:	 RIP: 47f399	 Bytes: 0
block_.L_47f399:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 47f399	 Bytes: 3
  %loadMem_47f399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f399 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f399)
  store %struct.Memory* %call_47f399, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47f39c	 Bytes: 3
  %loadMem_47f39c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f39c = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f39c)
  store %struct.Memory* %call_47f39c, %struct.Memory** %MEMORY

  ; Code: imull $0xfffffffe, %eax, %eax	 RIP: 47f39f	 Bytes: 6
  %loadMem_47f39f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f39f = call %struct.Memory* @routine_imull__0xfffffffe___eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f39f)
  store %struct.Memory* %call_47f39f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa4(%rbp)	 RIP: 47f3a5	 Bytes: 6
  %loadMem_47f3a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3a5 = call %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3a5)
  store %struct.Memory* %call_47f3a5, %struct.Memory** %MEMORY

  ; Code: .L_47f3ab:	 RIP: 47f3ab	 Bytes: 0
  br label %block_.L_47f3ab
block_.L_47f3ab:

  ; Code: movl -0xa4(%rbp), %eax	 RIP: 47f3ab	 Bytes: 6
  %loadMem_47f3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3ab = call %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3ab)
  store %struct.Memory* %call_47f3ab, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x98(%rbp)	 RIP: 47f3b1	 Bytes: 6
  %loadMem_47f3b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3b1 = call %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3b1)
  store %struct.Memory* %call_47f3b1, %struct.Memory** %MEMORY

  ; Code: .L_47f3b7:	 RIP: 47f3b7	 Bytes: 0
  br label %block_.L_47f3b7
block_.L_47f3b7:

  ; Code: movl -0x98(%rbp), %eax	 RIP: 47f3b7	 Bytes: 6
  %loadMem_47f3b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3b7 = call %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3b7)
  store %struct.Memory* %call_47f3b7, %struct.Memory** %MEMORY

  ; Code: addl 0x6d32cc, %eax	 RIP: 47f3bd	 Bytes: 7
  %loadMem_47f3bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3bd = call %struct.Memory* @routine_addl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3bd)
  store %struct.Memory* %call_47f3bd, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f3c4	 Bytes: 7
  %loadMem_47f3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3c4 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3c4)
  store %struct.Memory* %call_47f3c4, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f3cb	 Bytes: 7
  %loadMem_47f3cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3cb = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3cb)
  store %struct.Memory* %call_47f3cb, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 47f3d2	 Bytes: 7
  %loadMem_47f3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3d2 = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3d2)
  store %struct.Memory* %call_47f3d2, %struct.Memory** %MEMORY

  ; Code: jge .L_47f3f1	 RIP: 47f3d9	 Bytes: 6
  %loadMem_47f3d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3d9 = call %struct.Memory* @routine_jge_.L_47f3f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3d9, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_47f3d9, %struct.Memory** %MEMORY

  %loadBr_47f3d9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f3d9 = icmp eq i8 %loadBr_47f3d9, 1
  br i1 %cmpBr_47f3d9, label %block_.L_47f3f1, label %block_47f3df

block_47f3df:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47f3df	 Bytes: 7
  %loadMem_47f3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3df = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3df)
  store %struct.Memory* %call_47f3df, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 47f3e6	 Bytes: 6
  %loadMem_47f3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3e6 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3e6)
  store %struct.Memory* %call_47f3e6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f3fe	 RIP: 47f3ec	 Bytes: 5
  %loadMem_47f3ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3ec = call %struct.Memory* @routine_jmpq_.L_47f3fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3ec, i64 18, i64 5)
  store %struct.Memory* %call_47f3ec, %struct.Memory** %MEMORY

  br label %block_.L_47f3fe

  ; Code: .L_47f3f1:	 RIP: 47f3f1	 Bytes: 0
block_.L_47f3f1:

  ; Code: movl 0x724744, %eax	 RIP: 47f3f1	 Bytes: 7
  %loadMem_47f3f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3f1 = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3f1)
  store %struct.Memory* %call_47f3f1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa8(%rbp)	 RIP: 47f3f8	 Bytes: 6
  %loadMem_47f3f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3f8 = call %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3f8)
  store %struct.Memory* %call_47f3f8, %struct.Memory** %MEMORY

  ; Code: .L_47f3fe:	 RIP: 47f3fe	 Bytes: 0
  br label %block_.L_47f3fe
block_.L_47f3fe:

  ; Code: movl -0xa8(%rbp), %eax	 RIP: 47f3fe	 Bytes: 6
  %loadMem_47f3fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f3fe = call %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f3fe)
  store %struct.Memory* %call_47f3fe, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f404	 Bytes: 7
  %loadMem_47f404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f404 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f404)
  store %struct.Memory* %call_47f404, %struct.Memory** %MEMORY

  ; Code: movl 0x710364, %eax	 RIP: 47f40b	 Bytes: 7
  %loadMem_47f40b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f40b = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f40b)
  store %struct.Memory* %call_47f40b, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 47f412	 Bytes: 7
  %loadMem_47f412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f412 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f412)
  store %struct.Memory* %call_47f412, %struct.Memory** %MEMORY

  ; Code: jge .L_47f431	 RIP: 47f419	 Bytes: 6
  %loadMem_47f419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f419 = call %struct.Memory* @routine_jge_.L_47f431(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f419, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_47f419, %struct.Memory** %MEMORY

  %loadBr_47f419 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f419 = icmp eq i8 %loadBr_47f419, 1
  br i1 %cmpBr_47f419, label %block_.L_47f431, label %block_47f41f

block_47f41f:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47f41f	 Bytes: 7
  %loadMem_47f41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f41f = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f41f)
  store %struct.Memory* %call_47f41f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 47f426	 Bytes: 6
  %loadMem_47f426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f426 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f426)
  store %struct.Memory* %call_47f426, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f43e	 RIP: 47f42c	 Bytes: 5
  %loadMem_47f42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f42c = call %struct.Memory* @routine_jmpq_.L_47f43e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f42c, i64 18, i64 5)
  store %struct.Memory* %call_47f42c, %struct.Memory** %MEMORY

  br label %block_.L_47f43e

  ; Code: .L_47f431:	 RIP: 47f431	 Bytes: 0
block_.L_47f431:

  ; Code: movl 0x710364, %eax	 RIP: 47f431	 Bytes: 7
  %loadMem_47f431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f431 = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f431)
  store %struct.Memory* %call_47f431, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xac(%rbp)	 RIP: 47f438	 Bytes: 6
  %loadMem_47f438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f438 = call %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f438)
  store %struct.Memory* %call_47f438, %struct.Memory** %MEMORY

  ; Code: .L_47f43e:	 RIP: 47f43e	 Bytes: 0
  br label %block_.L_47f43e
block_.L_47f43e:

  ; Code: movl -0xac(%rbp), %eax	 RIP: 47f43e	 Bytes: 6
  %loadMem_47f43e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f43e = call %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f43e)
  store %struct.Memory* %call_47f43e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f444	 Bytes: 7
  %loadMem_47f444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f444 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f444)
  store %struct.Memory* %call_47f444, %struct.Memory** %MEMORY

  ; Code: .L_47f44b:	 RIP: 47f44b	 Bytes: 0
  br label %block_.L_47f44b
block_.L_47f44b:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f44b	 Bytes: 7
  %loadMem_47f44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f44b = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f44b)
  store %struct.Memory* %call_47f44b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47f452	 Bytes: 3
  %loadMem_47f452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f452 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f452)
  store %struct.Memory* %call_47f452, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47f455	 Bytes: 5
  %loadMem_47f455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f455 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f455, i64 4648, i64 5)
  store %struct.Memory* %call_47f455, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47f45a:	 RIP: 47f45a	 Bytes: 0
block_.L_47f45a:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f45a	 Bytes: 7
  %loadMem_47f45a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f45a = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f45a)
  store %struct.Memory* %call_47f45a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47f461	 Bytes: 3
  %loadMem_47f461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f461 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f461)
  store %struct.Memory* %call_47f461, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47f464	 Bytes: 5
  %loadMem_47f464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f464 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f464, i64 4633, i64 5)
  store %struct.Memory* %call_47f464, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47f469:	 RIP: 47f469	 Bytes: 0
block_.L_47f469:

  ; Code: movq 0x6cb900, %rax	 RIP: 47f469	 Bytes: 8
  %loadMem_47f469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f469 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f469)
  store %struct.Memory* %call_47f469, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 47f471	 Bytes: 4
  %loadMem_47f471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f471 = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f471)
  store %struct.Memory* %call_47f471, %struct.Memory** %MEMORY

  ; Code: jne .L_48065f	 RIP: 47f475	 Bytes: 6
  %loadMem_47f475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f475 = call %struct.Memory* @routine_jne_.L_48065f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f475, i8* %BRANCH_TAKEN, i64 4586, i64 6, i64 6)
  store %struct.Memory* %call_47f475, %struct.Memory** %MEMORY

  %loadBr_47f475 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f475 = icmp eq i8 %loadBr_47f475, 1
  br i1 %cmpBr_47f475, label %block_.L_48065f, label %block_47f47b

block_47f47b:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f47b	 Bytes: 8
  %loadMem_47f47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f47b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f47b)
  store %struct.Memory* %call_47f47b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b78(%rax)	 RIP: 47f483	 Bytes: 7
  %loadMem_47f483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f483 = call %struct.Memory* @routine_cmpl__0x1__0x11b78__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f483)
  store %struct.Memory* %call_47f483, %struct.Memory** %MEMORY

  ; Code: jne .L_47f683	 RIP: 47f48a	 Bytes: 6
  %loadMem_47f48a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f48a = call %struct.Memory* @routine_jne_.L_47f683(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f48a, i8* %BRANCH_TAKEN, i64 505, i64 6, i64 6)
  store %struct.Memory* %call_47f48a, %struct.Memory** %MEMORY

  %loadBr_47f48a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f48a = icmp eq i8 %loadBr_47f48a, 1
  br i1 %cmpBr_47f48a, label %block_.L_47f683, label %block_47f490

block_47f490:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f490	 Bytes: 8
  %loadMem_47f490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f490 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f490)
  store %struct.Memory* %call_47f490, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b80(%rax)	 RIP: 47f498	 Bytes: 7
  %loadMem_47f498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f498 = call %struct.Memory* @routine_cmpl__0x0__0x11b80__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f498)
  store %struct.Memory* %call_47f498, %struct.Memory** %MEMORY

  ; Code: jne .L_47f683	 RIP: 47f49f	 Bytes: 6
  %loadMem_47f49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f49f = call %struct.Memory* @routine_jne_.L_47f683(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f49f, i8* %BRANCH_TAKEN, i64 484, i64 6, i64 6)
  store %struct.Memory* %call_47f49f, %struct.Memory** %MEMORY

  %loadBr_47f49f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f49f = icmp eq i8 %loadBr_47f49f, 1
  br i1 %cmpBr_47f49f, label %block_.L_47f683, label %block_47f4a5

block_47f4a5:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f4a5	 Bytes: 8
  %loadMem_47f4a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4a5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4a5)
  store %struct.Memory* %call_47f4a5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47f4ad	 Bytes: 7
  %loadMem_47f4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4ad = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4ad)
  store %struct.Memory* %call_47f4ad, %struct.Memory** %MEMORY

  ; Code: je .L_47f4e4	 RIP: 47f4b4	 Bytes: 6
  %loadMem_47f4b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4b4 = call %struct.Memory* @routine_je_.L_47f4e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4b4, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_47f4b4, %struct.Memory** %MEMORY

  %loadBr_47f4b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f4b4 = icmp eq i8 %loadBr_47f4b4, 1
  br i1 %cmpBr_47f4b4, label %block_.L_47f4e4, label %block_47f4ba

block_47f4ba:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f4ba	 Bytes: 8
  %loadMem_47f4ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4ba = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4ba)
  store %struct.Memory* %call_47f4ba, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b98(%rax)	 RIP: 47f4c2	 Bytes: 7
  %loadMem_47f4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4c2 = call %struct.Memory* @routine_cmpl__0x1__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4c2)
  store %struct.Memory* %call_47f4c2, %struct.Memory** %MEMORY

  ; Code: jne .L_47f67e	 RIP: 47f4c9	 Bytes: 6
  %loadMem_47f4c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4c9 = call %struct.Memory* @routine_jne_.L_47f67e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4c9, i8* %BRANCH_TAKEN, i64 437, i64 6, i64 6)
  store %struct.Memory* %call_47f4c9, %struct.Memory** %MEMORY

  %loadBr_47f4c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f4c9 = icmp eq i8 %loadBr_47f4c9, 1
  br i1 %cmpBr_47f4c9, label %block_.L_47f67e, label %block_47f4cf

block_47f4cf:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f4cf	 Bytes: 8
  %loadMem_47f4cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4cf = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4cf)
  store %struct.Memory* %call_47f4cf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11ba4(%rax)	 RIP: 47f4d7	 Bytes: 7
  %loadMem_47f4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4d7 = call %struct.Memory* @routine_cmpl__0x0__0x11ba4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4d7)
  store %struct.Memory* %call_47f4d7, %struct.Memory** %MEMORY

  ; Code: jne .L_47f67e	 RIP: 47f4de	 Bytes: 6
  %loadMem_47f4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4de = call %struct.Memory* @routine_jne_.L_47f67e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4de, i8* %BRANCH_TAKEN, i64 416, i64 6, i64 6)
  store %struct.Memory* %call_47f4de, %struct.Memory** %MEMORY

  %loadBr_47f4de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f4de = icmp eq i8 %loadBr_47f4de, 1
  br i1 %cmpBr_47f4de, label %block_.L_47f67e, label %block_.L_47f4e4

  ; Code: .L_47f4e4:	 RIP: 47f4e4	 Bytes: 0
block_.L_47f4e4:

  ; Code: movl 0x6cd474, %eax	 RIP: 47f4e4	 Bytes: 7
  %loadMem_47f4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4e4 = call %struct.Memory* @routine_movl_0x6cd474___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4e4)
  store %struct.Memory* %call_47f4e4, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f4eb	 Bytes: 7
  %loadMem_47f4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4eb = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4eb)
  store %struct.Memory* %call_47f4eb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47f4f2	 Bytes: 8
  %loadMem_47f4f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4f2 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4f2)
  store %struct.Memory* %call_47f4f2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x11b54(%rcx)	 RIP: 47f4fa	 Bytes: 10
  %loadMem_47f4fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f4fa = call %struct.Memory* @routine_movl__0x0__0x11b54__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f4fa)
  store %struct.Memory* %call_47f4fa, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47f504	 Bytes: 8
  %loadMem_47f504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f504 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f504)
  store %struct.Memory* %call_47f504, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x11b58(%rcx)	 RIP: 47f50c	 Bytes: 10
  %loadMem_47f50c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f50c = call %struct.Memory* @routine_movl__0x0__0x11b58__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f50c)
  store %struct.Memory* %call_47f50c, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9688, %eax	 RIP: 47f516	 Bytes: 7
  %loadMem_47f516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f516 = call %struct.Memory* @routine_movl_0x6f9688___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f516)
  store %struct.Memory* %call_47f516, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 47f51d	 Bytes: 3
  %loadMem_47f51d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f51d = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f51d)
  store %struct.Memory* %call_47f51d, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9688	 RIP: 47f520	 Bytes: 7
  %loadMem_47f520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f520 = call %struct.Memory* @routine_movl__eax__0x6f9688(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f520)
  store %struct.Memory* %call_47f520, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x8(%rbp)	 RIP: 47f527	 Bytes: 4
  %loadMem_47f527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f527 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f527)
  store %struct.Memory* %call_47f527, %struct.Memory** %MEMORY

  ; Code: jne .L_47f64c	 RIP: 47f52b	 Bytes: 6
  %loadMem_47f52b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f52b = call %struct.Memory* @routine_jne_.L_47f64c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f52b, i8* %BRANCH_TAKEN, i64 289, i64 6, i64 6)
  store %struct.Memory* %call_47f52b, %struct.Memory** %MEMORY

  %loadBr_47f52b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f52b = icmp eq i8 %loadBr_47f52b, 1
  br i1 %cmpBr_47f52b, label %block_.L_47f64c, label %block_47f531

block_47f531:
  ; Code: cmpl $0x0, 0x6f9688	 RIP: 47f531	 Bytes: 8
  %loadMem_47f531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f531 = call %struct.Memory* @routine_cmpl__0x0__0x6f9688(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f531)
  store %struct.Memory* %call_47f531, %struct.Memory** %MEMORY

  ; Code: jne .L_47f64c	 RIP: 47f539	 Bytes: 6
  %loadMem_47f539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f539 = call %struct.Memory* @routine_jne_.L_47f64c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f539, i8* %BRANCH_TAKEN, i64 275, i64 6, i64 6)
  store %struct.Memory* %call_47f539, %struct.Memory** %MEMORY

  %loadBr_47f539 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f539 = icmp eq i8 %loadBr_47f539, 1
  br i1 %cmpBr_47f539, label %block_.L_47f64c, label %block_47f53f

block_47f53f:
  ; Code: movq 0x722cb0, %rax	 RIP: 47f53f	 Bytes: 8
  %loadMem_47f53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f53f = call %struct.Memory* @routine_movq_0x722cb0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f53f)
  store %struct.Memory* %call_47f53f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x47c(%rax)	 RIP: 47f547	 Bytes: 7
  %loadMem_47f547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f547 = call %struct.Memory* @routine_cmpl__0x0__0x47c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f547)
  store %struct.Memory* %call_47f547, %struct.Memory** %MEMORY

  ; Code: jne .L_47f569	 RIP: 47f54e	 Bytes: 6
  %loadMem_47f54e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f54e = call %struct.Memory* @routine_jne_.L_47f569(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f54e, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47f54e, %struct.Memory** %MEMORY

  %loadBr_47f54e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f54e = icmp eq i8 %loadBr_47f54e, 1
  br i1 %cmpBr_47f54e, label %block_.L_47f569, label %block_47f554

block_47f554:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47f554	 Bytes: 8
  %loadMem_47f554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f554 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f554)
  store %struct.Memory* %call_47f554, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0xb40(%rax)	 RIP: 47f55c	 Bytes: 7
  %loadMem_47f55c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f55c = call %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f55c)
  store %struct.Memory* %call_47f55c, %struct.Memory** %MEMORY

  ; Code: jne .L_47f5c1	 RIP: 47f563	 Bytes: 6
  %loadMem_47f563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f563 = call %struct.Memory* @routine_jne_.L_47f5c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f563, i8* %BRANCH_TAKEN, i64 94, i64 6, i64 6)
  store %struct.Memory* %call_47f563, %struct.Memory** %MEMORY

  %loadBr_47f563 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f563 = icmp eq i8 %loadBr_47f563, 1
  br i1 %cmpBr_47f563, label %block_.L_47f5c1, label %block_.L_47f569

  ; Code: .L_47f569:	 RIP: 47f569	 Bytes: 0
block_.L_47f569:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f569	 Bytes: 7
  %loadMem_47f569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f569 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f569)
  store %struct.Memory* %call_47f569, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47f570	 Bytes: 8
  %loadMem_47f570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f570 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f570)
  store %struct.Memory* %call_47f570, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47f578	 Bytes: 6
  %loadMem_47f578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f578 = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f578)
  store %struct.Memory* %call_47f578, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47f57e	 Bytes: 6
  %loadMem_47f57e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f57e = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f57e)
  store %struct.Memory* %call_47f57e, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %eax	 RIP: 47f584	 Bytes: 7
  %loadMem_47f584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f584 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f584)
  store %struct.Memory* %call_47f584, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47f58b	 Bytes: 7
  %loadMem_47f58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f58b = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f58b)
  store %struct.Memory* %call_47f58b, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f592	 Bytes: 7
  %loadMem_47f592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f592 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f592)
  store %struct.Memory* %call_47f592, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47f599	 Bytes: 7
  %loadMem_47f599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f599 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f599)
  store %struct.Memory* %call_47f599, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f5a0	 Bytes: 7
  %loadMem_47f5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5a0 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5a0)
  store %struct.Memory* %call_47f5a0, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x725318	 RIP: 47f5a7	 Bytes: 7
  %loadMem_47f5a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5a7 = call %struct.Memory* @routine_movl__eax__0x725318(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5a7)
  store %struct.Memory* %call_47f5a7, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 47f5ae	 Bytes: 7
  %loadMem_47f5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5ae = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5ae)
  store %struct.Memory* %call_47f5ae, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722c78	 RIP: 47f5b5	 Bytes: 7
  %loadMem_47f5b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5b5 = call %struct.Memory* @routine_movl__eax__0x722c78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5b5)
  store %struct.Memory* %call_47f5b5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f647	 RIP: 47f5bc	 Bytes: 5
  %loadMem_47f5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5bc = call %struct.Memory* @routine_jmpq_.L_47f647(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5bc, i64 139, i64 5)
  store %struct.Memory* %call_47f5bc, %struct.Memory** %MEMORY

  br label %block_.L_47f647

  ; Code: .L_47f5c1:	 RIP: 47f5c1	 Bytes: 0
block_.L_47f5c1:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 47f5c1	 Bytes: 8
  %loadMem_47f5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5c1 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5c1)
  store %struct.Memory* %call_47f5c1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47f5c9	 Bytes: 7
  %loadMem_47f5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5c9 = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5c9)
  store %struct.Memory* %call_47f5c9, %struct.Memory** %MEMORY

  ; Code: je .L_47f5eb	 RIP: 47f5d0	 Bytes: 6
  %loadMem_47f5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5d0 = call %struct.Memory* @routine_je_.L_47f5eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5d0, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47f5d0, %struct.Memory** %MEMORY

  %loadBr_47f5d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f5d0 = icmp eq i8 %loadBr_47f5d0, 1
  br i1 %cmpBr_47f5d0, label %block_.L_47f5eb, label %block_47f5d6

block_47f5d6:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47f5d6	 Bytes: 8
  %loadMem_47f5d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5d6 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5d6)
  store %struct.Memory* %call_47f5d6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47f5de	 Bytes: 7
  %loadMem_47f5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5de = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5de)
  store %struct.Memory* %call_47f5de, %struct.Memory** %MEMORY

  ; Code: je .L_47f642	 RIP: 47f5e5	 Bytes: 6
  %loadMem_47f5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5e5 = call %struct.Memory* @routine_je_.L_47f642(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5e5, i8* %BRANCH_TAKEN, i64 93, i64 6, i64 6)
  store %struct.Memory* %call_47f5e5, %struct.Memory** %MEMORY

  %loadBr_47f5e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f5e5 = icmp eq i8 %loadBr_47f5e5, 1
  br i1 %cmpBr_47f5e5, label %block_.L_47f642, label %block_.L_47f5eb

  ; Code: .L_47f5eb:	 RIP: 47f5eb	 Bytes: 0
block_.L_47f5eb:

  ; Code: movq 0x6cb900, %rax	 RIP: 47f5eb	 Bytes: 8
  %loadMem_47f5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5eb = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5eb)
  store %struct.Memory* %call_47f5eb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47f5f3	 Bytes: 7
  %loadMem_47f5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5f3 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5f3)
  store %struct.Memory* %call_47f5f3, %struct.Memory** %MEMORY

  ; Code: jne .L_47f621	 RIP: 47f5fa	 Bytes: 6
  %loadMem_47f5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f5fa = call %struct.Memory* @routine_jne_.L_47f621(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f5fa, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_47f5fa, %struct.Memory** %MEMORY

  %loadBr_47f5fa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f5fa = icmp eq i8 %loadBr_47f5fa, 1
  br i1 %cmpBr_47f5fa, label %block_.L_47f621, label %block_47f600

block_47f600:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47f600	 Bytes: 7
  %loadMem_47f600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f600 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f600)
  store %struct.Memory* %call_47f600, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9708	 RIP: 47f607	 Bytes: 7
  %loadMem_47f607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f607 = call %struct.Memory* @routine_movl__eax__0x6f9708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f607)
  store %struct.Memory* %call_47f607, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 47f60e	 Bytes: 7
  %loadMem_47f60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f60e = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f60e)
  store %struct.Memory* %call_47f60e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x7107a4	 RIP: 47f615	 Bytes: 7
  %loadMem_47f615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f615 = call %struct.Memory* @routine_movl__eax__0x7107a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f615)
  store %struct.Memory* %call_47f615, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f63d	 RIP: 47f61c	 Bytes: 5
  %loadMem_47f61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f61c = call %struct.Memory* @routine_jmpq_.L_47f63d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f61c, i64 33, i64 5)
  store %struct.Memory* %call_47f61c, %struct.Memory** %MEMORY

  br label %block_.L_47f63d

  ; Code: .L_47f621:	 RIP: 47f621	 Bytes: 0
block_.L_47f621:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f621	 Bytes: 7
  %loadMem_47f621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f621 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f621)
  store %struct.Memory* %call_47f621, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x7236c0	 RIP: 47f628	 Bytes: 7
  %loadMem_47f628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f628 = call %struct.Memory* @routine_movl__eax__0x7236c0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f628)
  store %struct.Memory* %call_47f628, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 47f62f	 Bytes: 7
  %loadMem_47f62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f62f = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f62f)
  store %struct.Memory* %call_47f62f, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1f88	 RIP: 47f636	 Bytes: 7
  %loadMem_47f636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f636 = call %struct.Memory* @routine_movl__eax__0x6d1f88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f636)
  store %struct.Memory* %call_47f636, %struct.Memory** %MEMORY

  ; Code: .L_47f63d:	 RIP: 47f63d	 Bytes: 0
  br label %block_.L_47f63d
block_.L_47f63d:

  ; Code: jmpq .L_47f642	 RIP: 47f63d	 Bytes: 5
  %loadMem_47f63d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f63d = call %struct.Memory* @routine_jmpq_.L_47f642(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f63d, i64 5, i64 5)
  store %struct.Memory* %call_47f63d, %struct.Memory** %MEMORY

  br label %block_.L_47f642

  ; Code: .L_47f642:	 RIP: 47f642	 Bytes: 0
block_.L_47f642:

  ; Code: jmpq .L_47f647	 RIP: 47f642	 Bytes: 5
  %loadMem_47f642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f642 = call %struct.Memory* @routine_jmpq_.L_47f647(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f642, i64 5, i64 5)
  store %struct.Memory* %call_47f642, %struct.Memory** %MEMORY

  br label %block_.L_47f647

  ; Code: .L_47f647:	 RIP: 47f647	 Bytes: 0
block_.L_47f647:

  ; Code: jmpq .L_47f64c	 RIP: 47f647	 Bytes: 5
  %loadMem_47f647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f647 = call %struct.Memory* @routine_jmpq_.L_47f64c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f647, i64 5, i64 5)
  store %struct.Memory* %call_47f647, %struct.Memory** %MEMORY

  br label %block_.L_47f64c

  ; Code: .L_47f64c:	 RIP: 47f64c	 Bytes: 0
block_.L_47f64c:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f64c	 Bytes: 7
  %loadMem_47f64c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f64c = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f64c)
  store %struct.Memory* %call_47f64c, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47f653	 Bytes: 7
  %loadMem_47f653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f653 = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f653)
  store %struct.Memory* %call_47f653, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f65a	 Bytes: 7
  %loadMem_47f65a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f65a = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f65a)
  store %struct.Memory* %call_47f65a, %struct.Memory** %MEMORY

  ; Code: addl 0x722b78, %eax	 RIP: 47f661	 Bytes: 7
  %loadMem_47f661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f661 = call %struct.Memory* @routine_addl_0x722b78___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f661)
  store %struct.Memory* %call_47f661, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722b78	 RIP: 47f668	 Bytes: 7
  %loadMem_47f668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f668 = call %struct.Memory* @routine_movl__eax__0x722b78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f668)
  store %struct.Memory* %call_47f668, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f66f	 Bytes: 7
  %loadMem_47f66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f66f = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f66f)
  store %struct.Memory* %call_47f66f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47f676	 Bytes: 3
  %loadMem_47f676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f676 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f676)
  store %struct.Memory* %call_47f676, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47f679	 Bytes: 5
  %loadMem_47f679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f679 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f679, i64 4100, i64 5)
  store %struct.Memory* %call_47f679, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47f67e:	 RIP: 47f67e	 Bytes: 0
block_.L_47f67e:

  ; Code: jmpq .L_48065a	 RIP: 47f67e	 Bytes: 5
  %loadMem_47f67e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f67e = call %struct.Memory* @routine_jmpq_.L_48065a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f67e, i64 4060, i64 5)
  store %struct.Memory* %call_47f67e, %struct.Memory** %MEMORY

  br label %block_.L_48065a

  ; Code: .L_47f683:	 RIP: 47f683	 Bytes: 0
block_.L_47f683:

  ; Code: movsd 0x726420, %xmm0	 RIP: 47f683	 Bytes: 9
  %loadMem_47f683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f683 = call %struct.Memory* @routine_movsd_0x726420___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f683)
  store %struct.Memory* %call_47f683, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x723640	 RIP: 47f68c	 Bytes: 9
  %loadMem_47f68c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f68c = call %struct.Memory* @routine_movsd__xmm0__0x723640(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f68c)
  store %struct.Memory* %call_47f68c, %struct.Memory** %MEMORY

  ; Code: movsd 0x6f9358, %xmm0	 RIP: 47f695	 Bytes: 9
  %loadMem_47f695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f695 = call %struct.Memory* @routine_movsd_0x6f9358___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f695)
  store %struct.Memory* %call_47f695, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6d33e0	 RIP: 47f69e	 Bytes: 9
  %loadMem_47f69e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f69e = call %struct.Memory* @routine_movsd__xmm0__0x6d33e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f69e)
  store %struct.Memory* %call_47f69e, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9720, %eax	 RIP: 47f6a7	 Bytes: 7
  %loadMem_47f6a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6a7 = call %struct.Memory* @routine_movl_0x6f9720___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6a7)
  store %struct.Memory* %call_47f6a7, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d4510	 RIP: 47f6ae	 Bytes: 7
  %loadMem_47f6ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6ae = call %struct.Memory* @routine_movl__eax__0x6d4510(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6ae)
  store %struct.Memory* %call_47f6ae, %struct.Memory** %MEMORY

  ; Code: movl 0x6d1278, %eax	 RIP: 47f6b5	 Bytes: 7
  %loadMem_47f6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6b5 = call %struct.Memory* @routine_movl_0x6d1278___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6b5)
  store %struct.Memory* %call_47f6b5, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x723690	 RIP: 47f6bc	 Bytes: 7
  %loadMem_47f6bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6bc = call %struct.Memory* @routine_movl__eax__0x723690(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6bc)
  store %struct.Memory* %call_47f6bc, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80c8, %eax	 RIP: 47f6c3	 Bytes: 7
  %loadMem_47f6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6c3 = call %struct.Memory* @routine_movl_0x6f80c8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6c3)
  store %struct.Memory* %call_47f6c3, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6e51e0	 RIP: 47f6ca	 Bytes: 7
  %loadMem_47f6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6ca = call %struct.Memory* @routine_movl__eax__0x6e51e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6ca)
  store %struct.Memory* %call_47f6ca, %struct.Memory** %MEMORY

  ; Code: movsd 0x6cfc68, %xmm0	 RIP: 47f6d1	 Bytes: 9
  %loadMem_47f6d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6d1 = call %struct.Memory* @routine_movsd_0x6cfc68___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6d1)
  store %struct.Memory* %call_47f6d1, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6cea30	 RIP: 47f6da	 Bytes: 9
  %loadMem_47f6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6da = call %struct.Memory* @routine_movsd__xmm0__0x6cea30(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6da)
  store %struct.Memory* %call_47f6da, %struct.Memory** %MEMORY

  ; Code: movsd 0x710798, %xmm0	 RIP: 47f6e3	 Bytes: 9
  %loadMem_47f6e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6e3 = call %struct.Memory* @routine_movsd_0x710798___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6e3)
  store %struct.Memory* %call_47f6e3, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x710008	 RIP: 47f6ec	 Bytes: 9
  %loadMem_47f6ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6ec = call %struct.Memory* @routine_movsd__xmm0__0x710008(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6ec)
  store %struct.Memory* %call_47f6ec, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47f6f5	 Bytes: 8
  %loadMem_47f6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6f5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6f5)
  store %struct.Memory* %call_47f6f5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rcx)	 RIP: 47f6fd	 Bytes: 7
  %loadMem_47f6fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f6fd = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f6fd)
  store %struct.Memory* %call_47f6fd, %struct.Memory** %MEMORY

  ; Code: jne .L_47f719	 RIP: 47f704	 Bytes: 6
  %loadMem_47f704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f704 = call %struct.Memory* @routine_jne_.L_47f719(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f704, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_47f704, %struct.Memory** %MEMORY

  %loadBr_47f704 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f704 = icmp eq i8 %loadBr_47f704, 1
  br i1 %cmpBr_47f704, label %block_.L_47f719, label %block_47f70a

block_47f70a:
  ; Code: movl 0x6f80a0, %eax	 RIP: 47f70a	 Bytes: 7
  %loadMem_47f70a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f70a = call %struct.Memory* @routine_movl_0x6f80a0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f70a)
  store %struct.Memory* %call_47f70a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 47f711	 Bytes: 3
  %loadMem_47f711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f711 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f711)
  store %struct.Memory* %call_47f711, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f739	 RIP: 47f714	 Bytes: 5
  %loadMem_47f714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f714 = call %struct.Memory* @routine_jmpq_.L_47f739(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f714, i64 37, i64 5)
  store %struct.Memory* %call_47f714, %struct.Memory** %MEMORY

  br label %block_.L_47f739

  ; Code: .L_47f719:	 RIP: 47f719	 Bytes: 0
block_.L_47f719:

  ; Code: movl $0x2, %eax	 RIP: 47f719	 Bytes: 5
  %loadMem_47f719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f719 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f719)
  store %struct.Memory* %call_47f719, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80a0, %ecx	 RIP: 47f71e	 Bytes: 7
  %loadMem_47f71e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f71e = call %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f71e)
  store %struct.Memory* %call_47f71e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb0(%rbp)	 RIP: 47f725	 Bytes: 6
  %loadMem_47f725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f725 = call %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f725)
  store %struct.Memory* %call_47f725, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 47f72b	 Bytes: 2
  %loadMem_47f72b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f72b = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f72b)
  store %struct.Memory* %call_47f72b, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47f72d	 Bytes: 1
  %loadMem_47f72d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f72d = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f72d)
  store %struct.Memory* %call_47f72d, %struct.Memory** %MEMORY

  ; Code: movl -0xb0(%rbp), %ecx	 RIP: 47f72e	 Bytes: 6
  %loadMem_47f72e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f72e = call %struct.Memory* @routine_movl_MINUS0xb0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f72e)
  store %struct.Memory* %call_47f72e, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47f734	 Bytes: 2
  %loadMem_47f734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f734 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f734)
  store %struct.Memory* %call_47f734, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 47f736	 Bytes: 3
  %loadMem_47f736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f736 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f736)
  store %struct.Memory* %call_47f736, %struct.Memory** %MEMORY

  ; Code: .L_47f739:	 RIP: 47f739	 Bytes: 0
  br label %block_.L_47f739
block_.L_47f739:

  ; Code: movl 0x6f9688, %eax	 RIP: 47f739	 Bytes: 7
  %loadMem_47f739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f739 = call %struct.Memory* @routine_movl_0x6f9688___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f739)
  store %struct.Memory* %call_47f739, %struct.Memory** %MEMORY

  ; Code: cmpl -0x24(%rbp), %eax	 RIP: 47f740	 Bytes: 3
  %loadMem_47f740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f740 = call %struct.Memory* @routine_cmpl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f740)
  store %struct.Memory* %call_47f740, %struct.Memory** %MEMORY

  ; Code: jne .L_47f901	 RIP: 47f743	 Bytes: 6
  %loadMem_47f743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f743 = call %struct.Memory* @routine_jne_.L_47f901(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f743, i8* %BRANCH_TAKEN, i64 446, i64 6, i64 6)
  store %struct.Memory* %call_47f743, %struct.Memory** %MEMORY

  %loadBr_47f743 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f743 = icmp eq i8 %loadBr_47f743, 1
  br i1 %cmpBr_47f743, label %block_.L_47f901, label %block_47f749

block_47f749:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47f749	 Bytes: 8
  %loadMem_47f749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f749 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f749)
  store %struct.Memory* %call_47f749, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47f751	 Bytes: 7
  %loadMem_47f751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f751 = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f751)
  store %struct.Memory* %call_47f751, %struct.Memory** %MEMORY

  ; Code: je .L_47f773	 RIP: 47f758	 Bytes: 6
  %loadMem_47f758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f758 = call %struct.Memory* @routine_je_.L_47f773(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f758, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47f758, %struct.Memory** %MEMORY

  %loadBr_47f758 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f758 = icmp eq i8 %loadBr_47f758, 1
  br i1 %cmpBr_47f758, label %block_.L_47f773, label %block_47f75e

block_47f75e:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47f75e	 Bytes: 8
  %loadMem_47f75e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f75e = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f75e)
  store %struct.Memory* %call_47f75e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47f766	 Bytes: 7
  %loadMem_47f766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f766 = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f766)
  store %struct.Memory* %call_47f766, %struct.Memory** %MEMORY

  ; Code: je .L_47f83f	 RIP: 47f76d	 Bytes: 6
  %loadMem_47f76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f76d = call %struct.Memory* @routine_je_.L_47f83f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f76d, i8* %BRANCH_TAKEN, i64 210, i64 6, i64 6)
  store %struct.Memory* %call_47f76d, %struct.Memory** %MEMORY

  %loadBr_47f76d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f76d = icmp eq i8 %loadBr_47f76d, 1
  br i1 %cmpBr_47f76d, label %block_.L_47f83f, label %block_.L_47f773

  ; Code: .L_47f773:	 RIP: 47f773	 Bytes: 0
block_.L_47f773:

  ; Code: movq 0x6cb900, %rax	 RIP: 47f773	 Bytes: 8
  %loadMem_47f773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f773 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f773)
  store %struct.Memory* %call_47f773, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47f77b	 Bytes: 7
  %loadMem_47f77b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f77b = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f77b)
  store %struct.Memory* %call_47f77b, %struct.Memory** %MEMORY

  ; Code: jne .L_47f83f	 RIP: 47f782	 Bytes: 6
  %loadMem_47f782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f782 = call %struct.Memory* @routine_jne_.L_47f83f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f782, i8* %BRANCH_TAKEN, i64 189, i64 6, i64 6)
  store %struct.Memory* %call_47f782, %struct.Memory** %MEMORY

  %loadBr_47f782 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f782 = icmp eq i8 %loadBr_47f782, 1
  br i1 %cmpBr_47f782, label %block_.L_47f83f, label %block_47f788

block_47f788:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f788	 Bytes: 8
  %loadMem_47f788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f788 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f788)
  store %struct.Memory* %call_47f788, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b9c(%rax)	 RIP: 47f790	 Bytes: 7
  %loadMem_47f790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f790 = call %struct.Memory* @routine_cmpl__0x1__0x11b9c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f790)
  store %struct.Memory* %call_47f790, %struct.Memory** %MEMORY

  ; Code: jne .L_47f7ee	 RIP: 47f797	 Bytes: 6
  %loadMem_47f797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f797 = call %struct.Memory* @routine_jne_.L_47f7ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f797, i8* %BRANCH_TAKEN, i64 87, i64 6, i64 6)
  store %struct.Memory* %call_47f797, %struct.Memory** %MEMORY

  %loadBr_47f797 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f797 = icmp eq i8 %loadBr_47f797, 1
  br i1 %cmpBr_47f797, label %block_.L_47f7ee, label %block_47f79d

block_47f79d:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f79d	 Bytes: 8
  %loadMem_47f79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f79d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f79d)
  store %struct.Memory* %call_47f79d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b80(%rax)	 RIP: 47f7a5	 Bytes: 7
  %loadMem_47f7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7a5 = call %struct.Memory* @routine_cmpl__0x0__0x11b80__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7a5)
  store %struct.Memory* %call_47f7a5, %struct.Memory** %MEMORY

  ; Code: jle .L_47f7cd	 RIP: 47f7ac	 Bytes: 6
  %loadMem_47f7ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7ac = call %struct.Memory* @routine_jle_.L_47f7cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7ac, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_47f7ac, %struct.Memory** %MEMORY

  %loadBr_47f7ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f7ac = icmp eq i8 %loadBr_47f7ac, 1
  br i1 %cmpBr_47f7ac, label %block_.L_47f7cd, label %block_47f7b2

block_47f7b2:
  ; Code: movl 0x6f9708, %eax	 RIP: 47f7b2	 Bytes: 7
  %loadMem_47f7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7b2 = call %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7b2)
  store %struct.Memory* %call_47f7b2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47f7b9	 Bytes: 8
  %loadMem_47f7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7b9 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7b9)
  store %struct.Memory* %call_47f7b9, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47f7c1	 Bytes: 6
  %loadMem_47f7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7c1 = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7c1)
  store %struct.Memory* %call_47f7c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47f7c7	 Bytes: 6
  %loadMem_47f7c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7c7 = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7c7)
  store %struct.Memory* %call_47f7c7, %struct.Memory** %MEMORY

  ; Code: .L_47f7cd:	 RIP: 47f7cd	 Bytes: 0
  br label %block_.L_47f7cd
block_.L_47f7cd:

  ; Code: movl 0x6f9708, %eax	 RIP: 47f7cd	 Bytes: 7
  %loadMem_47f7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7cd = call %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7cd)
  store %struct.Memory* %call_47f7cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x725318	 RIP: 47f7d4	 Bytes: 7
  %loadMem_47f7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7d4 = call %struct.Memory* @routine_movl__eax__0x725318(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7d4)
  store %struct.Memory* %call_47f7d4, %struct.Memory** %MEMORY

  ; Code: movl 0x7107a4, %eax	 RIP: 47f7db	 Bytes: 7
  %loadMem_47f7db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7db = call %struct.Memory* @routine_movl_0x7107a4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7db)
  store %struct.Memory* %call_47f7db, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722c78	 RIP: 47f7e2	 Bytes: 7
  %loadMem_47f7e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7e2 = call %struct.Memory* @routine_movl__eax__0x722c78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7e2)
  store %struct.Memory* %call_47f7e2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f83a	 RIP: 47f7e9	 Bytes: 5
  %loadMem_47f7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7e9 = call %struct.Memory* @routine_jmpq_.L_47f83a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7e9, i64 81, i64 5)
  store %struct.Memory* %call_47f7e9, %struct.Memory** %MEMORY

  br label %block_.L_47f83a

  ; Code: .L_47f7ee:	 RIP: 47f7ee	 Bytes: 0
block_.L_47f7ee:

  ; Code: movq 0x6cb900, %rax	 RIP: 47f7ee	 Bytes: 8
  %loadMem_47f7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7ee = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7ee)
  store %struct.Memory* %call_47f7ee, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b80(%rax)	 RIP: 47f7f6	 Bytes: 7
  %loadMem_47f7f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7f6 = call %struct.Memory* @routine_cmpl__0x0__0x11b80__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7f6)
  store %struct.Memory* %call_47f7f6, %struct.Memory** %MEMORY

  ; Code: jle .L_47f81e	 RIP: 47f7fd	 Bytes: 6
  %loadMem_47f7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f7fd = call %struct.Memory* @routine_jle_.L_47f81e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f7fd, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_47f7fd, %struct.Memory** %MEMORY

  %loadBr_47f7fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f7fd = icmp eq i8 %loadBr_47f7fd, 1
  br i1 %cmpBr_47f7fd, label %block_.L_47f81e, label %block_47f803

block_47f803:
  ; Code: movl 0x7236c0, %eax	 RIP: 47f803	 Bytes: 7
  %loadMem_47f803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f803 = call %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f803)
  store %struct.Memory* %call_47f803, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47f80a	 Bytes: 8
  %loadMem_47f80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f80a = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f80a)
  store %struct.Memory* %call_47f80a, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47f812	 Bytes: 6
  %loadMem_47f812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f812 = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f812)
  store %struct.Memory* %call_47f812, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47f818	 Bytes: 6
  %loadMem_47f818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f818 = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f818)
  store %struct.Memory* %call_47f818, %struct.Memory** %MEMORY

  ; Code: .L_47f81e:	 RIP: 47f81e	 Bytes: 0
  br label %block_.L_47f81e
block_.L_47f81e:

  ; Code: movl 0x7236c0, %eax	 RIP: 47f81e	 Bytes: 7
  %loadMem_47f81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f81e = call %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f81e)
  store %struct.Memory* %call_47f81e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x725318	 RIP: 47f825	 Bytes: 7
  %loadMem_47f825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f825 = call %struct.Memory* @routine_movl__eax__0x725318(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f825)
  store %struct.Memory* %call_47f825, %struct.Memory** %MEMORY

  ; Code: movl 0x6d1f88, %eax	 RIP: 47f82c	 Bytes: 7
  %loadMem_47f82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f82c = call %struct.Memory* @routine_movl_0x6d1f88___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f82c)
  store %struct.Memory* %call_47f82c, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722c78	 RIP: 47f833	 Bytes: 7
  %loadMem_47f833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f833 = call %struct.Memory* @routine_movl__eax__0x722c78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f833)
  store %struct.Memory* %call_47f833, %struct.Memory** %MEMORY

  ; Code: .L_47f83a:	 RIP: 47f83a	 Bytes: 0
  br label %block_.L_47f83a
block_.L_47f83a:

  ; Code: jmpq .L_47f83f	 RIP: 47f83a	 Bytes: 5
  %loadMem_47f83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f83a = call %struct.Memory* @routine_jmpq_.L_47f83f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f83a, i64 5, i64 5)
  store %struct.Memory* %call_47f83a, %struct.Memory** %MEMORY

  br label %block_.L_47f83f

  ; Code: .L_47f83f:	 RIP: 47f83f	 Bytes: 0
block_.L_47f83f:

  ; Code: cmpq $0x0, 0x6cea28	 RIP: 47f83f	 Bytes: 9
  %loadMem_47f83f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f83f = call %struct.Memory* @routine_cmpq__0x0__0x6cea28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f83f)
  store %struct.Memory* %call_47f83f, %struct.Memory** %MEMORY

  ; Code: jg .L_47f8b0	 RIP: 47f848	 Bytes: 6
  %loadMem_47f848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f848 = call %struct.Memory* @routine_jg_.L_47f8b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f848, i8* %BRANCH_TAKEN, i64 104, i64 6, i64 6)
  store %struct.Memory* %call_47f848, %struct.Memory** %MEMORY

  %loadBr_47f848 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f848 = icmp eq i8 %loadBr_47f848, 1
  br i1 %cmpBr_47f848, label %block_.L_47f8b0, label %block_47f84e

block_47f84e:
  ; Code: movl 0x725318, %eax	 RIP: 47f84e	 Bytes: 7
  %loadMem_47f84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f84e = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f84e)
  store %struct.Memory* %call_47f84e, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 47f855	 Bytes: 3
  %loadMem_47f855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f855 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f855)
  store %struct.Memory* %call_47f855, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f858	 Bytes: 7
  %loadMem_47f858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f858 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f858)
  store %struct.Memory* %call_47f858, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f85f	 Bytes: 7
  %loadMem_47f85f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f85f = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f85f)
  store %struct.Memory* %call_47f85f, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 47f866	 Bytes: 7
  %loadMem_47f866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f866 = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f866)
  store %struct.Memory* %call_47f866, %struct.Memory** %MEMORY

  ; Code: jle .L_47f881	 RIP: 47f86d	 Bytes: 6
  %loadMem_47f86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f86d = call %struct.Memory* @routine_jle_.L_47f881(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f86d, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_47f86d, %struct.Memory** %MEMORY

  %loadBr_47f86d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f86d = icmp eq i8 %loadBr_47f86d, 1
  br i1 %cmpBr_47f86d, label %block_.L_47f881, label %block_47f873

block_47f873:
  ; Code: movl 0x724744, %eax	 RIP: 47f873	 Bytes: 7
  %loadMem_47f873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f873 = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f873)
  store %struct.Memory* %call_47f873, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f87a	 Bytes: 7
  %loadMem_47f87a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f87a = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f87a)
  store %struct.Memory* %call_47f87a, %struct.Memory** %MEMORY

  ; Code: .L_47f881:	 RIP: 47f881	 Bytes: 0
  br label %block_.L_47f881
block_.L_47f881:

  ; Code: cmpl $0x0, -0x8(%rbp)	 RIP: 47f881	 Bytes: 4
  %loadMem_47f881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f881 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f881)
  store %struct.Memory* %call_47f881, %struct.Memory** %MEMORY

  ; Code: jne .L_47f8a0	 RIP: 47f885	 Bytes: 6
  %loadMem_47f885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f885 = call %struct.Memory* @routine_jne_.L_47f8a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f885, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47f885, %struct.Memory** %MEMORY

  %loadBr_47f885 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f885 = icmp eq i8 %loadBr_47f885, 1
  br i1 %cmpBr_47f885, label %block_.L_47f8a0, label %block_47f88b

block_47f88b:
  ; Code: movq 0x6cb900, %rax	 RIP: 47f88b	 Bytes: 8
  %loadMem_47f88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f88b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f88b)
  store %struct.Memory* %call_47f88b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47f893	 Bytes: 7
  %loadMem_47f893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f893 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f893)
  store %struct.Memory* %call_47f893, %struct.Memory** %MEMORY

  ; Code: jne .L_47f8ab	 RIP: 47f89a	 Bytes: 6
  %loadMem_47f89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f89a = call %struct.Memory* @routine_jne_.L_47f8ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f89a, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_47f89a, %struct.Memory** %MEMORY

  %loadBr_47f89a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f89a = icmp eq i8 %loadBr_47f89a, 1
  br i1 %cmpBr_47f89a, label %block_.L_47f8ab, label %block_.L_47f8a0

  ; Code: .L_47f8a0:	 RIP: 47f8a0	 Bytes: 0
block_.L_47f8a0:

  ; Code: movl $0x1, 0x710360	 RIP: 47f8a0	 Bytes: 11
  %loadMem_47f8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8a0 = call %struct.Memory* @routine_movl__0x1__0x710360(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8a0)
  store %struct.Memory* %call_47f8a0, %struct.Memory** %MEMORY

  ; Code: .L_47f8ab:	 RIP: 47f8ab	 Bytes: 0
  br label %block_.L_47f8ab
block_.L_47f8ab:

  ; Code: jmpq .L_47f8be	 RIP: 47f8ab	 Bytes: 5
  %loadMem_47f8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8ab = call %struct.Memory* @routine_jmpq_.L_47f8be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8ab, i64 19, i64 5)
  store %struct.Memory* %call_47f8ab, %struct.Memory** %MEMORY

  br label %block_.L_47f8be

  ; Code: .L_47f8b0:	 RIP: 47f8b0	 Bytes: 0
block_.L_47f8b0:

  ; Code: movl 0x725318, %eax	 RIP: 47f8b0	 Bytes: 7
  %loadMem_47f8b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8b0 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8b0)
  store %struct.Memory* %call_47f8b0, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f8b7	 Bytes: 7
  %loadMem_47f8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8b7 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8b7)
  store %struct.Memory* %call_47f8b7, %struct.Memory** %MEMORY

  ; Code: .L_47f8be:	 RIP: 47f8be	 Bytes: 0
  br label %block_.L_47f8be
block_.L_47f8be:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f8be	 Bytes: 7
  %loadMem_47f8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8be = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8be)
  store %struct.Memory* %call_47f8be, %struct.Memory** %MEMORY

  ; Code: addl 0x722b78, %eax	 RIP: 47f8c5	 Bytes: 7
  %loadMem_47f8c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8c5 = call %struct.Memory* @routine_addl_0x722b78___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8c5)
  store %struct.Memory* %call_47f8c5, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722b78	 RIP: 47f8cc	 Bytes: 7
  %loadMem_47f8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8cc = call %struct.Memory* @routine_movl__eax__0x722b78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8cc)
  store %struct.Memory* %call_47f8cc, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9688, %eax	 RIP: 47f8d3	 Bytes: 7
  %loadMem_47f8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8d3 = call %struct.Memory* @routine_movl_0x6f9688___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8d3)
  store %struct.Memory* %call_47f8d3, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 47f8da	 Bytes: 3
  %loadMem_47f8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8da = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8da)
  store %struct.Memory* %call_47f8da, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9688	 RIP: 47f8dd	 Bytes: 7
  %loadMem_47f8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8dd = call %struct.Memory* @routine_movl__eax__0x6f9688(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8dd)
  store %struct.Memory* %call_47f8dd, %struct.Memory** %MEMORY

  ; Code: movl 0x725318, %eax	 RIP: 47f8e4	 Bytes: 7
  %loadMem_47f8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8e4 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8e4)
  store %struct.Memory* %call_47f8e4, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47f8eb	 Bytes: 7
  %loadMem_47f8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8eb = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8eb)
  store %struct.Memory* %call_47f8eb, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f8f2	 Bytes: 7
  %loadMem_47f8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8f2 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8f2)
  store %struct.Memory* %call_47f8f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47f8f9	 Bytes: 3
  %loadMem_47f8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8f9 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8f9)
  store %struct.Memory* %call_47f8f9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47f8fc	 Bytes: 5
  %loadMem_47f8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f8fc = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f8fc, i64 3457, i64 5)
  store %struct.Memory* %call_47f8fc, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47f901:	 RIP: 47f901	 Bytes: 0
block_.L_47f901:

  ; Code: movq 0x6cb900, %rax	 RIP: 47f901	 Bytes: 8
  %loadMem_47f901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f901 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f901)
  store %struct.Memory* %call_47f901, %struct.Memory** %MEMORY

  ; Code: movl 0x11b54(%rax), %ecx	 RIP: 47f909	 Bytes: 6
  %loadMem_47f909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f909 = call %struct.Memory* @routine_movl_0x11b54__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f909)
  store %struct.Memory* %call_47f909, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 47f90f	 Bytes: 8
  %loadMem_47f90f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f90f = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f90f)
  store %struct.Memory* %call_47f90f, %struct.Memory** %MEMORY

  ; Code: addl 0x11b58(%rax), %ecx	 RIP: 47f917	 Bytes: 6
  %loadMem_47f917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f917 = call %struct.Memory* @routine_addl_0x11b58__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f917)
  store %struct.Memory* %call_47f917, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x710000	 RIP: 47f91d	 Bytes: 7
  %loadMem_47f91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f91d = call %struct.Memory* @routine_movl__ecx__0x710000(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f91d)
  store %struct.Memory* %call_47f91d, %struct.Memory** %MEMORY

  ; Code: movslq 0x710000, %rax	 RIP: 47f924	 Bytes: 8
  %loadMem_47f924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f924 = call %struct.Memory* @routine_movslq_0x710000___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f924)
  store %struct.Memory* %call_47f924, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea28, %rdx	 RIP: 47f92c	 Bytes: 8
  %loadMem_47f92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f92c = call %struct.Memory* @routine_movq_0x6cea28___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f92c)
  store %struct.Memory* %call_47f92c, %struct.Memory** %MEMORY

  ; Code: subq %rax, %rdx	 RIP: 47f934	 Bytes: 3
  %loadMem_47f934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f934 = call %struct.Memory* @routine_subq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f934)
  store %struct.Memory* %call_47f934, %struct.Memory** %MEMORY

  ; Code: movq %rdx, 0x6cea28	 RIP: 47f937	 Bytes: 8
  %loadMem_47f937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f937 = call %struct.Memory* @routine_movq__rdx__0x6cea28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f937)
  store %struct.Memory* %call_47f937, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 47f93f	 Bytes: 8
  %loadMem_47f93f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f93f = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f93f)
  store %struct.Memory* %call_47f93f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x11b54(%rax)	 RIP: 47f947	 Bytes: 10
  %loadMem_47f947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f947 = call %struct.Memory* @routine_movl__0x0__0x11b54__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f947)
  store %struct.Memory* %call_47f947, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 47f951	 Bytes: 8
  %loadMem_47f951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f951 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f951)
  store %struct.Memory* %call_47f951, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x11b58(%rax)	 RIP: 47f959	 Bytes: 10
  %loadMem_47f959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f959 = call %struct.Memory* @routine_movl__0x0__0x11b58__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f959)
  store %struct.Memory* %call_47f959, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0x6cea28	 RIP: 47f963	 Bytes: 9
  %loadMem_47f963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f963 = call %struct.Memory* @routine_cmpq__0x0__0x6cea28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f963)
  store %struct.Memory* %call_47f963, %struct.Memory** %MEMORY

  ; Code: jge .L_47fd91	 RIP: 47f96c	 Bytes: 6
  %loadMem_47f96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f96c = call %struct.Memory* @routine_jge_.L_47fd91(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f96c, i8* %BRANCH_TAKEN, i64 1061, i64 6, i64 6)
  store %struct.Memory* %call_47f96c, %struct.Memory** %MEMORY

  %loadBr_47f96c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f96c = icmp eq i8 %loadBr_47f96c, 1
  br i1 %cmpBr_47f96c, label %block_.L_47fd91, label %block_47f972

block_47f972:
  ; Code: cmpl $0x1, 0x710360	 RIP: 47f972	 Bytes: 8
  %loadMem_47f972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f972 = call %struct.Memory* @routine_cmpl__0x1__0x710360(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f972)
  store %struct.Memory* %call_47f972, %struct.Memory** %MEMORY

  ; Code: jne .L_47f996	 RIP: 47f97a	 Bytes: 6
  %loadMem_47f97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f97a = call %struct.Memory* @routine_jne_.L_47f996(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f97a, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_47f97a, %struct.Memory** %MEMORY

  %loadBr_47f97a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f97a = icmp eq i8 %loadBr_47f97a, 1
  br i1 %cmpBr_47f97a, label %block_.L_47f996, label %block_47f980

block_47f980:
  ; Code: movl 0x723690, %eax	 RIP: 47f980	 Bytes: 7
  %loadMem_47f980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f980 = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f980)
  store %struct.Memory* %call_47f980, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 47f987	 Bytes: 3
  %loadMem_47f987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f987 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f987)
  store %struct.Memory* %call_47f987, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f98a	 Bytes: 7
  %loadMem_47f98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f98a = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f98a)
  store %struct.Memory* %call_47f98a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f9ab	 RIP: 47f991	 Bytes: 5
  %loadMem_47f991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f991 = call %struct.Memory* @routine_jmpq_.L_47f9ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f991, i64 26, i64 5)
  store %struct.Memory* %call_47f991, %struct.Memory** %MEMORY

  br label %block_.L_47f9ab

  ; Code: .L_47f996:	 RIP: 47f996	 Bytes: 0
block_.L_47f996:

  ; Code: movl 0x723690, %eax	 RIP: 47f996	 Bytes: 7
  %loadMem_47f996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f996 = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f996)
  store %struct.Memory* %call_47f996, %struct.Memory** %MEMORY

  ; Code: addl 0x70fce4, %eax	 RIP: 47f99d	 Bytes: 7
  %loadMem_47f99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f99d = call %struct.Memory* @routine_addl_0x70fce4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f99d)
  store %struct.Memory* %call_47f99d, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f9a4	 Bytes: 7
  %loadMem_47f9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9a4 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9a4)
  store %struct.Memory* %call_47f9a4, %struct.Memory** %MEMORY

  ; Code: .L_47f9ab:	 RIP: 47f9ab	 Bytes: 0
  br label %block_.L_47f9ab
block_.L_47f9ab:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47f9ab	 Bytes: 7
  %loadMem_47f9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9ab = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9ab)
  store %struct.Memory* %call_47f9ab, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 47f9b2	 Bytes: 7
  %loadMem_47f9b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9b2 = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9b2)
  store %struct.Memory* %call_47f9b2, %struct.Memory** %MEMORY

  ; Code: jge .L_47f9d1	 RIP: 47f9b9	 Bytes: 6
  %loadMem_47f9b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9b9 = call %struct.Memory* @routine_jge_.L_47f9d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9b9, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_47f9b9, %struct.Memory** %MEMORY

  %loadBr_47f9b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47f9b9 = icmp eq i8 %loadBr_47f9b9, 1
  br i1 %cmpBr_47f9b9, label %block_.L_47f9d1, label %block_47f9bf

block_47f9bf:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47f9bf	 Bytes: 7
  %loadMem_47f9bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9bf = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9bf)
  store %struct.Memory* %call_47f9bf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 47f9c6	 Bytes: 6
  %loadMem_47f9c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9c6 = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9c6)
  store %struct.Memory* %call_47f9c6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47f9de	 RIP: 47f9cc	 Bytes: 5
  %loadMem_47f9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9cc = call %struct.Memory* @routine_jmpq_.L_47f9de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9cc, i64 18, i64 5)
  store %struct.Memory* %call_47f9cc, %struct.Memory** %MEMORY

  br label %block_.L_47f9de

  ; Code: .L_47f9d1:	 RIP: 47f9d1	 Bytes: 0
block_.L_47f9d1:

  ; Code: movl 0x724744, %eax	 RIP: 47f9d1	 Bytes: 7
  %loadMem_47f9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9d1 = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9d1)
  store %struct.Memory* %call_47f9d1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 47f9d8	 Bytes: 6
  %loadMem_47f9d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9d8 = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9d8)
  store %struct.Memory* %call_47f9d8, %struct.Memory** %MEMORY

  ; Code: .L_47f9de:	 RIP: 47f9de	 Bytes: 0
  br label %block_.L_47f9de
block_.L_47f9de:

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 47f9de	 Bytes: 6
  %loadMem_47f9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9de = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9de)
  store %struct.Memory* %call_47f9de, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47f9e4	 Bytes: 7
  %loadMem_47f9e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9e4 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9e4)
  store %struct.Memory* %call_47f9e4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47f9eb	 Bytes: 8
  %loadMem_47f9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9eb = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9eb)
  store %struct.Memory* %call_47f9eb, %struct.Memory** %MEMORY

  ; Code: movl 0xcb0(%rcx), %eax	 RIP: 47f9f3	 Bytes: 6
  %loadMem_47f9f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9f3 = call %struct.Memory* @routine_movl_0xcb0__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9f3)
  store %struct.Memory* %call_47f9f3, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6f8ed8, %eax	 RIP: 47f9f9	 Bytes: 7
  %loadMem_47f9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47f9f9 = call %struct.Memory* @routine_cmpl_0x6f8ed8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47f9f9)
  store %struct.Memory* %call_47f9f9, %struct.Memory** %MEMORY

  ; Code: jl .L_47fa53	 RIP: 47fa00	 Bytes: 6
  %loadMem_47fa00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa00 = call %struct.Memory* @routine_jl_.L_47fa53(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa00, i8* %BRANCH_TAKEN, i64 83, i64 6, i64 6)
  store %struct.Memory* %call_47fa00, %struct.Memory** %MEMORY

  %loadBr_47fa00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fa00 = icmp eq i8 %loadBr_47fa00, 1
  br i1 %cmpBr_47fa00, label %block_.L_47fa53, label %block_47fa06

block_47fa06:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47fa06	 Bytes: 7
  %loadMem_47fa06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa06 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa06)
  store %struct.Memory* %call_47fa06, %struct.Memory** %MEMORY

  ; Code: movl 0x725318, %ecx	 RIP: 47fa0d	 Bytes: 7
  %loadMem_47fa0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa0d = call %struct.Memory* @routine_movl_0x725318___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa0d)
  store %struct.Memory* %call_47fa0d, %struct.Memory** %MEMORY

  ; Code: addl $0x6, %ecx	 RIP: 47fa14	 Bytes: 3
  %loadMem_47fa14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa14 = call %struct.Memory* @routine_addl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa14)
  store %struct.Memory* %call_47fa14, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 47fa17	 Bytes: 2
  %loadMem_47fa17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa17 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa17)
  store %struct.Memory* %call_47fa17, %struct.Memory** %MEMORY

  ; Code: jge .L_47fa31	 RIP: 47fa19	 Bytes: 6
  %loadMem_47fa19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa19 = call %struct.Memory* @routine_jge_.L_47fa31(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa19, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_47fa19, %struct.Memory** %MEMORY

  %loadBr_47fa19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fa19 = icmp eq i8 %loadBr_47fa19, 1
  br i1 %cmpBr_47fa19, label %block_.L_47fa31, label %block_47fa1f

block_47fa1f:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47fa1f	 Bytes: 7
  %loadMem_47fa1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa1f = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa1f)
  store %struct.Memory* %call_47fa1f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 47fa26	 Bytes: 6
  %loadMem_47fa26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa26 = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa26)
  store %struct.Memory* %call_47fa26, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fa41	 RIP: 47fa2c	 Bytes: 5
  %loadMem_47fa2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa2c = call %struct.Memory* @routine_jmpq_.L_47fa41(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa2c, i64 21, i64 5)
  store %struct.Memory* %call_47fa2c, %struct.Memory** %MEMORY

  br label %block_.L_47fa41

  ; Code: .L_47fa31:	 RIP: 47fa31	 Bytes: 0
block_.L_47fa31:

  ; Code: movl 0x725318, %eax	 RIP: 47fa31	 Bytes: 7
  %loadMem_47fa31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa31 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa31)
  store %struct.Memory* %call_47fa31, %struct.Memory** %MEMORY

  ; Code: addl $0x6, %eax	 RIP: 47fa38	 Bytes: 3
  %loadMem_47fa38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa38 = call %struct.Memory* @routine_addl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa38)
  store %struct.Memory* %call_47fa38, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 47fa3b	 Bytes: 6
  %loadMem_47fa3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa3b = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa3b)
  store %struct.Memory* %call_47fa3b, %struct.Memory** %MEMORY

  ; Code: .L_47fa41:	 RIP: 47fa41	 Bytes: 0
  br label %block_.L_47fa41
block_.L_47fa41:

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 47fa41	 Bytes: 6
  %loadMem_47fa41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa41 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa41)
  store %struct.Memory* %call_47fa41, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47fa47	 Bytes: 7
  %loadMem_47fa47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa47 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa47)
  store %struct.Memory* %call_47fa47, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fa9b	 RIP: 47fa4e	 Bytes: 5
  %loadMem_47fa4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa4e = call %struct.Memory* @routine_jmpq_.L_47fa9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa4e, i64 77, i64 5)
  store %struct.Memory* %call_47fa4e, %struct.Memory** %MEMORY

  br label %block_.L_47fa9b

  ; Code: .L_47fa53:	 RIP: 47fa53	 Bytes: 0
block_.L_47fa53:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47fa53	 Bytes: 7
  %loadMem_47fa53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa53 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa53)
  store %struct.Memory* %call_47fa53, %struct.Memory** %MEMORY

  ; Code: movl 0x725318, %ecx	 RIP: 47fa5a	 Bytes: 7
  %loadMem_47fa5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa5a = call %struct.Memory* @routine_movl_0x725318___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa5a)
  store %struct.Memory* %call_47fa5a, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %ecx	 RIP: 47fa61	 Bytes: 3
  %loadMem_47fa61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa61 = call %struct.Memory* @routine_addl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa61)
  store %struct.Memory* %call_47fa61, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 47fa64	 Bytes: 2
  %loadMem_47fa64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa64 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa64)
  store %struct.Memory* %call_47fa64, %struct.Memory** %MEMORY

  ; Code: jge .L_47fa7e	 RIP: 47fa66	 Bytes: 6
  %loadMem_47fa66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa66 = call %struct.Memory* @routine_jge_.L_47fa7e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa66, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_47fa66, %struct.Memory** %MEMORY

  %loadBr_47fa66 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fa66 = icmp eq i8 %loadBr_47fa66, 1
  br i1 %cmpBr_47fa66, label %block_.L_47fa7e, label %block_47fa6c

block_47fa6c:
  ; Code: movl 0x6d32cc, %eax	 RIP: 47fa6c	 Bytes: 7
  %loadMem_47fa6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa6c = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa6c)
  store %struct.Memory* %call_47fa6c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 47fa73	 Bytes: 6
  %loadMem_47fa73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa73 = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa73)
  store %struct.Memory* %call_47fa73, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fa8e	 RIP: 47fa79	 Bytes: 5
  %loadMem_47fa79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa79 = call %struct.Memory* @routine_jmpq_.L_47fa8e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa79, i64 21, i64 5)
  store %struct.Memory* %call_47fa79, %struct.Memory** %MEMORY

  br label %block_.L_47fa8e

  ; Code: .L_47fa7e:	 RIP: 47fa7e	 Bytes: 0
block_.L_47fa7e:

  ; Code: movl 0x725318, %eax	 RIP: 47fa7e	 Bytes: 7
  %loadMem_47fa7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa7e = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa7e)
  store %struct.Memory* %call_47fa7e, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %eax	 RIP: 47fa85	 Bytes: 3
  %loadMem_47fa85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa85 = call %struct.Memory* @routine_addl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa85)
  store %struct.Memory* %call_47fa85, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 47fa88	 Bytes: 6
  %loadMem_47fa88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa88 = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa88)
  store %struct.Memory* %call_47fa88, %struct.Memory** %MEMORY

  ; Code: .L_47fa8e:	 RIP: 47fa8e	 Bytes: 0
  br label %block_.L_47fa8e
block_.L_47fa8e:

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 47fa8e	 Bytes: 6
  %loadMem_47fa8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa8e = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa8e)
  store %struct.Memory* %call_47fa8e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 47fa94	 Bytes: 7
  %loadMem_47fa94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa94 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa94)
  store %struct.Memory* %call_47fa94, %struct.Memory** %MEMORY

  ; Code: .L_47fa9b:	 RIP: 47fa9b	 Bytes: 0
  br label %block_.L_47fa9b
block_.L_47fa9b:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47fa9b	 Bytes: 7
  %loadMem_47fa9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fa9b = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fa9b)
  store %struct.Memory* %call_47fa9b, %struct.Memory** %MEMORY

  ; Code: addl 0x722b78, %eax	 RIP: 47faa2	 Bytes: 7
  %loadMem_47faa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47faa2 = call %struct.Memory* @routine_addl_0x722b78___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47faa2)
  store %struct.Memory* %call_47faa2, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722b78	 RIP: 47faa9	 Bytes: 7
  %loadMem_47faa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47faa9 = call %struct.Memory* @routine_movl__eax__0x722b78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47faa9)
  store %struct.Memory* %call_47faa9, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9688, %eax	 RIP: 47fab0	 Bytes: 7
  %loadMem_47fab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fab0 = call %struct.Memory* @routine_movl_0x6f9688___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fab0)
  store %struct.Memory* %call_47fab0, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 47fab7	 Bytes: 3
  %loadMem_47fab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fab7 = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fab7)
  store %struct.Memory* %call_47fab7, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9688	 RIP: 47faba	 Bytes: 7
  %loadMem_47faba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47faba = call %struct.Memory* @routine_movl__eax__0x6f9688(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47faba)
  store %struct.Memory* %call_47faba, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x6f9688	 RIP: 47fac1	 Bytes: 8
  %loadMem_47fac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fac1 = call %struct.Memory* @routine_cmpl__0x0__0x6f9688(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fac1)
  store %struct.Memory* %call_47fac1, %struct.Memory** %MEMORY

  ; Code: jne .L_47fd53	 RIP: 47fac9	 Bytes: 6
  %loadMem_47fac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fac9 = call %struct.Memory* @routine_jne_.L_47fd53(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fac9, i8* %BRANCH_TAKEN, i64 650, i64 6, i64 6)
  store %struct.Memory* %call_47fac9, %struct.Memory** %MEMORY

  %loadBr_47fac9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fac9 = icmp eq i8 %loadBr_47fac9, 1
  br i1 %cmpBr_47fac9, label %block_.L_47fd53, label %block_47facf

block_47facf:
  ; Code: cmpl $0x0, -0x8(%rbp)	 RIP: 47facf	 Bytes: 4
  %loadMem_47facf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47facf = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47facf)
  store %struct.Memory* %call_47facf, %struct.Memory** %MEMORY

  ; Code: je .L_47faee	 RIP: 47fad3	 Bytes: 6
  %loadMem_47fad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fad3 = call %struct.Memory* @routine_je_.L_47faee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fad3, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47fad3, %struct.Memory** %MEMORY

  %loadBr_47fad3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fad3 = icmp eq i8 %loadBr_47fad3, 1
  br i1 %cmpBr_47fad3, label %block_.L_47faee, label %block_47fad9

block_47fad9:
  ; Code: movq 0x6cb900, %rax	 RIP: 47fad9	 Bytes: 8
  %loadMem_47fad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fad9 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fad9)
  store %struct.Memory* %call_47fad9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47fae1	 Bytes: 7
  %loadMem_47fae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fae1 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fae1)
  store %struct.Memory* %call_47fae1, %struct.Memory** %MEMORY

  ; Code: jne .L_47fd4e	 RIP: 47fae8	 Bytes: 6
  %loadMem_47fae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fae8 = call %struct.Memory* @routine_jne_.L_47fd4e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fae8, i8* %BRANCH_TAKEN, i64 614, i64 6, i64 6)
  store %struct.Memory* %call_47fae8, %struct.Memory** %MEMORY

  %loadBr_47fae8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fae8 = icmp eq i8 %loadBr_47fae8, 1
  br i1 %cmpBr_47fae8, label %block_.L_47fd4e, label %block_.L_47faee

  ; Code: .L_47faee:	 RIP: 47faee	 Bytes: 0
block_.L_47faee:

  ; Code: movq 0x722cb0, %rax	 RIP: 47faee	 Bytes: 8
  %loadMem_47faee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47faee = call %struct.Memory* @routine_movq_0x722cb0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47faee)
  store %struct.Memory* %call_47faee, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x47c(%rax)	 RIP: 47faf6	 Bytes: 7
  %loadMem_47faf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47faf6 = call %struct.Memory* @routine_cmpl__0x0__0x47c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47faf6)
  store %struct.Memory* %call_47faf6, %struct.Memory** %MEMORY

  ; Code: jne .L_47fb18	 RIP: 47fafd	 Bytes: 6
  %loadMem_47fafd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fafd = call %struct.Memory* @routine_jne_.L_47fb18(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fafd, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47fafd, %struct.Memory** %MEMORY

  %loadBr_47fafd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fafd = icmp eq i8 %loadBr_47fafd, 1
  br i1 %cmpBr_47fafd, label %block_.L_47fb18, label %block_47fb03

block_47fb03:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47fb03	 Bytes: 8
  %loadMem_47fb03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb03 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb03)
  store %struct.Memory* %call_47fb03, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0xb40(%rax)	 RIP: 47fb0b	 Bytes: 7
  %loadMem_47fb0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb0b = call %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb0b)
  store %struct.Memory* %call_47fb0b, %struct.Memory** %MEMORY

  ; Code: jne .L_47fc61	 RIP: 47fb12	 Bytes: 6
  %loadMem_47fb12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb12 = call %struct.Memory* @routine_jne_.L_47fc61(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb12, i8* %BRANCH_TAKEN, i64 335, i64 6, i64 6)
  store %struct.Memory* %call_47fb12, %struct.Memory** %MEMORY

  %loadBr_47fb12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fb12 = icmp eq i8 %loadBr_47fb12, 1
  br i1 %cmpBr_47fb12, label %block_.L_47fc61, label %block_.L_47fb18

  ; Code: .L_47fb18:	 RIP: 47fb18	 Bytes: 0
block_.L_47fb18:

  ; Code: movsd 0x31d68(%rip), %xmm0	 RIP: 47fb18	 Bytes: 8
  %loadMem_47fb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb18 = call %struct.Memory* @routine_movsd_0x31d68__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb18)
  store %struct.Memory* %call_47fb18, %struct.Memory** %MEMORY

  ; Code: movsd 0x31d38(%rip), %xmm1	 RIP: 47fb20	 Bytes: 8
  %loadMem_47fb20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb20 = call %struct.Memory* @routine_movsd_0x31d38__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb20)
  store %struct.Memory* %call_47fb20, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x722b78, %xmm2	 RIP: 47fb28	 Bytes: 9
  %loadMem_47fb28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb28 = call %struct.Memory* @routine_cvtsi2sdl_0x722b78___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb28)
  store %struct.Memory* %call_47fb28, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 47fb31	 Bytes: 4
  %loadMem_47fb31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb31 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb31)
  store %struct.Memory* %call_47fb31, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x6f80a0, %xmm2	 RIP: 47fb35	 Bytes: 9
  %loadMem_47fb35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb35 = call %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb35)
  store %struct.Memory* %call_47fb35, %struct.Memory** %MEMORY

  ; Code: divsd %xmm2, %xmm1	 RIP: 47fb3e	 Bytes: 4
  %loadMem_47fb3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb3e = call %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb3e)
  store %struct.Memory* %call_47fb3e, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 47fb42	 Bytes: 4
  %loadMem_47fb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb42 = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb42)
  store %struct.Memory* %call_47fb42, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 47fb46	 Bytes: 4
  %loadMem_47fb46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb46 = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb46)
  store %struct.Memory* %call_47fb46, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 47fb4a	 Bytes: 3
  %loadMem_47fb4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb4a = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb4a)
  store %struct.Memory* %call_47fb4a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47fb4d	 Bytes: 8
  %loadMem_47fb4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb4d = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb4d)
  store %struct.Memory* %call_47fb4d, %struct.Memory** %MEMORY

  ; Code: movl 0x11b80(%rcx), %eax	 RIP: 47fb55	 Bytes: 6
  %loadMem_47fb55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb55 = call %struct.Memory* @routine_movl_0x11b80__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb55)
  store %struct.Memory* %call_47fb55, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 47fb5b	 Bytes: 8
  %loadMem_47fb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb5b = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb5b)
  store %struct.Memory* %call_47fb5b, %struct.Memory** %MEMORY

  ; Code: movl 0x4c8(%rcx), %edx	 RIP: 47fb63	 Bytes: 6
  %loadMem_47fb63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb63 = call %struct.Memory* @routine_movl_0x4c8__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb63)
  store %struct.Memory* %call_47fb63, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %edx	 RIP: 47fb69	 Bytes: 3
  %loadMem_47fb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb69 = call %struct.Memory* @routine_subl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb69)
  store %struct.Memory* %call_47fb69, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 47fb6c	 Bytes: 2
  %loadMem_47fb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb6c = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb6c)
  store %struct.Memory* %call_47fb6c, %struct.Memory** %MEMORY

  ; Code: jne .L_47fb7e	 RIP: 47fb6e	 Bytes: 6
  %loadMem_47fb6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb6e = call %struct.Memory* @routine_jne_.L_47fb7e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb6e, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_47fb6e, %struct.Memory** %MEMORY

  %loadBr_47fb6e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fb6e = icmp eq i8 %loadBr_47fb6e, 1
  br i1 %cmpBr_47fb6e, label %block_.L_47fb7e, label %block_47fb74

block_47fb74:
  ; Code: movl -0x20(%rbp), %eax	 RIP: 47fb74	 Bytes: 3
  %loadMem_47fb74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb74 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb74)
  store %struct.Memory* %call_47fb74, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9348	 RIP: 47fb77	 Bytes: 7
  %loadMem_47fb77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb77 = call %struct.Memory* @routine_movl__eax__0x6f9348(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb77)
  store %struct.Memory* %call_47fb77, %struct.Memory** %MEMORY

  ; Code: .L_47fb7e:	 RIP: 47fb7e	 Bytes: 0
  br label %block_.L_47fb7e
block_.L_47fb7e:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 47fb7e	 Bytes: 3
  %loadMem_47fb7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb7e = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb7e)
  store %struct.Memory* %call_47fb7e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 47fb81	 Bytes: 8
  %loadMem_47fb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb81 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb81)
  store %struct.Memory* %call_47fb81, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 47fb89	 Bytes: 6
  %loadMem_47fb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb89 = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb89)
  store %struct.Memory* %call_47fb89, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 47fb8f	 Bytes: 6
  %loadMem_47fb8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb8f = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb8f)
  store %struct.Memory* %call_47fb8f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x710360	 RIP: 47fb95	 Bytes: 8
  %loadMem_47fb95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb95 = call %struct.Memory* @routine_cmpl__0x1__0x710360(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb95)
  store %struct.Memory* %call_47fb95, %struct.Memory** %MEMORY

  ; Code: jne .L_47fbc3	 RIP: 47fb9d	 Bytes: 6
  %loadMem_47fb9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fb9d = call %struct.Memory* @routine_jne_.L_47fbc3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fb9d, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_47fb9d, %struct.Memory** %MEMORY

  %loadBr_47fb9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fb9d = icmp eq i8 %loadBr_47fb9d, 1
  br i1 %cmpBr_47fb9d, label %block_.L_47fbc3, label %block_47fba3

block_47fba3:
  ; Code: movl 0x70d190, %eax	 RIP: 47fba3	 Bytes: 7
  %loadMem_47fba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fba3 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fba3)
  store %struct.Memory* %call_47fba3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47fbaa	 Bytes: 3
  %loadMem_47fbaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbaa = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbaa)
  store %struct.Memory* %call_47fbaa, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47fbad	 Bytes: 7
  %loadMem_47fbad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbad = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbad)
  store %struct.Memory* %call_47fbad, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 47fbb4	 Bytes: 3
  %loadMem_47fbb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbb4 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbb4)
  store %struct.Memory* %call_47fbb4, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47fbb7	 Bytes: 7
  %loadMem_47fbb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbb7 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbb7)
  store %struct.Memory* %call_47fbb7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fc44	 RIP: 47fbbe	 Bytes: 5
  %loadMem_47fbbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbbe = call %struct.Memory* @routine_jmpq_.L_47fc44(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbbe, i64 134, i64 5)
  store %struct.Memory* %call_47fbbe, %struct.Memory** %MEMORY

  br label %block_.L_47fc44

  ; Code: .L_47fbc3:	 RIP: 47fbc3	 Bytes: 0
block_.L_47fbc3:

  ; Code: movq 0x6cb900, %rax	 RIP: 47fbc3	 Bytes: 8
  %loadMem_47fbc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbc3 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbc3)
  store %struct.Memory* %call_47fbc3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b80(%rax)	 RIP: 47fbcb	 Bytes: 7
  %loadMem_47fbcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbcb = call %struct.Memory* @routine_cmpl__0x0__0x11b80__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbcb)
  store %struct.Memory* %call_47fbcb, %struct.Memory** %MEMORY

  ; Code: jne .L_47fc0a	 RIP: 47fbd2	 Bytes: 6
  %loadMem_47fbd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbd2 = call %struct.Memory* @routine_jne_.L_47fc0a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbd2, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_47fbd2, %struct.Memory** %MEMORY

  %loadBr_47fbd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fbd2 = icmp eq i8 %loadBr_47fbd2, 1
  br i1 %cmpBr_47fbd2, label %block_.L_47fc0a, label %block_47fbd8

block_47fbd8:
  ; Code: movq 0x6cb900, %rax	 RIP: 47fbd8	 Bytes: 8
  %loadMem_47fbd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbd8 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbd8)
  store %struct.Memory* %call_47fbd8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b78(%rax)	 RIP: 47fbe0	 Bytes: 7
  %loadMem_47fbe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbe0 = call %struct.Memory* @routine_cmpl__0x1__0x11b78__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbe0)
  store %struct.Memory* %call_47fbe0, %struct.Memory** %MEMORY

  ; Code: jle .L_47fc0a	 RIP: 47fbe7	 Bytes: 6
  %loadMem_47fbe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbe7 = call %struct.Memory* @routine_jle_.L_47fc0a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbe7, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_47fbe7, %struct.Memory** %MEMORY

  %loadBr_47fbe7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fbe7 = icmp eq i8 %loadBr_47fbe7, 1
  br i1 %cmpBr_47fbe7, label %block_.L_47fc0a, label %block_47fbed

block_47fbed:
  ; Code: movl 0x70d190, %eax	 RIP: 47fbed	 Bytes: 7
  %loadMem_47fbed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbed = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbed)
  store %struct.Memory* %call_47fbed, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47fbf4	 Bytes: 7
  %loadMem_47fbf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbf4 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbf4)
  store %struct.Memory* %call_47fbf4, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 47fbfb	 Bytes: 3
  %loadMem_47fbfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbfb = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbfb)
  store %struct.Memory* %call_47fbfb, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47fbfe	 Bytes: 7
  %loadMem_47fbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fbfe = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fbfe)
  store %struct.Memory* %call_47fbfe, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fc3f	 RIP: 47fc05	 Bytes: 5
  %loadMem_47fc05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc05 = call %struct.Memory* @routine_jmpq_.L_47fc3f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc05, i64 58, i64 5)
  store %struct.Memory* %call_47fc05, %struct.Memory** %MEMORY

  br label %block_.L_47fc3f

  ; Code: .L_47fc0a:	 RIP: 47fc0a	 Bytes: 0
block_.L_47fc0a:

  ; Code: movq 0x6cb900, %rax	 RIP: 47fc0a	 Bytes: 8
  %loadMem_47fc0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc0a = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc0a)
  store %struct.Memory* %call_47fc0a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b80(%rax)	 RIP: 47fc12	 Bytes: 7
  %loadMem_47fc12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc12 = call %struct.Memory* @routine_cmpl__0x0__0x11b80__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc12)
  store %struct.Memory* %call_47fc12, %struct.Memory** %MEMORY

  ; Code: jle .L_47fc3a	 RIP: 47fc19	 Bytes: 6
  %loadMem_47fc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc19 = call %struct.Memory* @routine_jle_.L_47fc3a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc19, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_47fc19, %struct.Memory** %MEMORY

  %loadBr_47fc19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fc19 = icmp eq i8 %loadBr_47fc19, 1
  br i1 %cmpBr_47fc19, label %block_.L_47fc3a, label %block_47fc1f

block_47fc1f:
  ; Code: movl 0x70d190, %eax	 RIP: 47fc1f	 Bytes: 7
  %loadMem_47fc1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc1f = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc1f)
  store %struct.Memory* %call_47fc1f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47fc26	 Bytes: 3
  %loadMem_47fc26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc26 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc26)
  store %struct.Memory* %call_47fc26, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 47fc29	 Bytes: 7
  %loadMem_47fc29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc29 = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc29)
  store %struct.Memory* %call_47fc29, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 47fc30	 Bytes: 3
  %loadMem_47fc30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc30 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc30)
  store %struct.Memory* %call_47fc30, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 47fc33	 Bytes: 7
  %loadMem_47fc33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc33 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc33)
  store %struct.Memory* %call_47fc33, %struct.Memory** %MEMORY

  ; Code: .L_47fc3a:	 RIP: 47fc3a	 Bytes: 0
  br label %block_.L_47fc3a
block_.L_47fc3a:

  ; Code: jmpq .L_47fc3f	 RIP: 47fc3a	 Bytes: 5
  %loadMem_47fc3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc3a = call %struct.Memory* @routine_jmpq_.L_47fc3f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc3a, i64 5, i64 5)
  store %struct.Memory* %call_47fc3a, %struct.Memory** %MEMORY

  br label %block_.L_47fc3f

  ; Code: .L_47fc3f:	 RIP: 47fc3f	 Bytes: 0
block_.L_47fc3f:

  ; Code: jmpq .L_47fc44	 RIP: 47fc3f	 Bytes: 5
  %loadMem_47fc3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc3f = call %struct.Memory* @routine_jmpq_.L_47fc44(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc3f, i64 5, i64 5)
  store %struct.Memory* %call_47fc3f, %struct.Memory** %MEMORY

  br label %block_.L_47fc44

  ; Code: .L_47fc44:	 RIP: 47fc44	 Bytes: 0
block_.L_47fc44:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 47fc44	 Bytes: 3
  %loadMem_47fc44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc44 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc44)
  store %struct.Memory* %call_47fc44, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x725318	 RIP: 47fc47	 Bytes: 7
  %loadMem_47fc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc47 = call %struct.Memory* @routine_movl__eax__0x725318(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc47)
  store %struct.Memory* %call_47fc47, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 47fc4e	 Bytes: 7
  %loadMem_47fc4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc4e = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc4e)
  store %struct.Memory* %call_47fc4e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722c78	 RIP: 47fc55	 Bytes: 7
  %loadMem_47fc55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc55 = call %struct.Memory* @routine_movl__eax__0x722c78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc55)
  store %struct.Memory* %call_47fc55, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fd49	 RIP: 47fc5c	 Bytes: 5
  %loadMem_47fc5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc5c = call %struct.Memory* @routine_jmpq_.L_47fd49(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc5c, i64 237, i64 5)
  store %struct.Memory* %call_47fc5c, %struct.Memory** %MEMORY

  br label %block_.L_47fd49

  ; Code: .L_47fc61:	 RIP: 47fc61	 Bytes: 0
block_.L_47fc61:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 47fc61	 Bytes: 8
  %loadMem_47fc61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc61 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc61)
  store %struct.Memory* %call_47fc61, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47fc69	 Bytes: 7
  %loadMem_47fc69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc69 = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc69)
  store %struct.Memory* %call_47fc69, %struct.Memory** %MEMORY

  ; Code: je .L_47fc8b	 RIP: 47fc70	 Bytes: 6
  %loadMem_47fc70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc70 = call %struct.Memory* @routine_je_.L_47fc8b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc70, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47fc70, %struct.Memory** %MEMORY

  %loadBr_47fc70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fc70 = icmp eq i8 %loadBr_47fc70, 1
  br i1 %cmpBr_47fc70, label %block_.L_47fc8b, label %block_47fc76

block_47fc76:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47fc76	 Bytes: 8
  %loadMem_47fc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc76 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc76)
  store %struct.Memory* %call_47fc76, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47fc7e	 Bytes: 7
  %loadMem_47fc7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc7e = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc7e)
  store %struct.Memory* %call_47fc7e, %struct.Memory** %MEMORY

  ; Code: je .L_47fd44	 RIP: 47fc85	 Bytes: 6
  %loadMem_47fc85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc85 = call %struct.Memory* @routine_je_.L_47fd44(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc85, i8* %BRANCH_TAKEN, i64 191, i64 6, i64 6)
  store %struct.Memory* %call_47fc85, %struct.Memory** %MEMORY

  %loadBr_47fc85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fc85 = icmp eq i8 %loadBr_47fc85, 1
  br i1 %cmpBr_47fc85, label %block_.L_47fd44, label %block_.L_47fc8b

  ; Code: .L_47fc8b:	 RIP: 47fc8b	 Bytes: 0
block_.L_47fc8b:

  ; Code: movq 0x6cb900, %rax	 RIP: 47fc8b	 Bytes: 8
  %loadMem_47fc8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc8b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc8b)
  store %struct.Memory* %call_47fc8b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 47fc93	 Bytes: 7
  %loadMem_47fc93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc93 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc93)
  store %struct.Memory* %call_47fc93, %struct.Memory** %MEMORY

  ; Code: jne .L_47fcf2	 RIP: 47fc9a	 Bytes: 6
  %loadMem_47fc9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fc9a = call %struct.Memory* @routine_jne_.L_47fcf2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fc9a, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_47fc9a, %struct.Memory** %MEMORY

  %loadBr_47fc9a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fc9a = icmp eq i8 %loadBr_47fc9a, 1
  br i1 %cmpBr_47fc9a, label %block_.L_47fcf2, label %block_47fca0

block_47fca0:
  ; Code: movsd 0x31be0(%rip), %xmm0	 RIP: 47fca0	 Bytes: 8
  %loadMem_47fca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fca0 = call %struct.Memory* @routine_movsd_0x31be0__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fca0)
  store %struct.Memory* %call_47fca0, %struct.Memory** %MEMORY

  ; Code: movsd 0x31bb0(%rip), %xmm1	 RIP: 47fca8	 Bytes: 8
  %loadMem_47fca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fca8 = call %struct.Memory* @routine_movsd_0x31bb0__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fca8)
  store %struct.Memory* %call_47fca8, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x722b78, %xmm2	 RIP: 47fcb0	 Bytes: 9
  %loadMem_47fcb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcb0 = call %struct.Memory* @routine_cvtsi2sdl_0x722b78___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcb0)
  store %struct.Memory* %call_47fcb0, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 47fcb9	 Bytes: 4
  %loadMem_47fcb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcb9 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcb9)
  store %struct.Memory* %call_47fcb9, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x6f80a0, %xmm2	 RIP: 47fcbd	 Bytes: 9
  %loadMem_47fcbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcbd = call %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcbd)
  store %struct.Memory* %call_47fcbd, %struct.Memory** %MEMORY

  ; Code: divsd %xmm2, %xmm1	 RIP: 47fcc6	 Bytes: 4
  %loadMem_47fcc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcc6 = call %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcc6)
  store %struct.Memory* %call_47fcc6, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 47fcca	 Bytes: 4
  %loadMem_47fcca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcca = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcca)
  store %struct.Memory* %call_47fcca, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 47fcce	 Bytes: 4
  %loadMem_47fcce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcce = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcce)
  store %struct.Memory* %call_47fcce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 47fcd2	 Bytes: 3
  %loadMem_47fcd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcd2 = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcd2)
  store %struct.Memory* %call_47fcd2, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 47fcd5	 Bytes: 3
  %loadMem_47fcd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcd5 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcd5)
  store %struct.Memory* %call_47fcd5, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9708	 RIP: 47fcd8	 Bytes: 7
  %loadMem_47fcd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcd8 = call %struct.Memory* @routine_movl__eax__0x6f9708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcd8)
  store %struct.Memory* %call_47fcd8, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 47fcdf	 Bytes: 7
  %loadMem_47fcdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcdf = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcdf)
  store %struct.Memory* %call_47fcdf, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x7107a4	 RIP: 47fce6	 Bytes: 7
  %loadMem_47fce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fce6 = call %struct.Memory* @routine_movl__eax__0x7107a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fce6)
  store %struct.Memory* %call_47fce6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fd3f	 RIP: 47fced	 Bytes: 5
  %loadMem_47fced = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fced = call %struct.Memory* @routine_jmpq_.L_47fd3f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fced, i64 82, i64 5)
  store %struct.Memory* %call_47fced, %struct.Memory** %MEMORY

  br label %block_.L_47fd3f

  ; Code: .L_47fcf2:	 RIP: 47fcf2	 Bytes: 0
block_.L_47fcf2:

  ; Code: movsd 0x31b8e(%rip), %xmm0	 RIP: 47fcf2	 Bytes: 8
  %loadMem_47fcf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcf2 = call %struct.Memory* @routine_movsd_0x31b8e__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcf2)
  store %struct.Memory* %call_47fcf2, %struct.Memory** %MEMORY

  ; Code: movsd 0x31b5e(%rip), %xmm1	 RIP: 47fcfa	 Bytes: 8
  %loadMem_47fcfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fcfa = call %struct.Memory* @routine_movsd_0x31b5e__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fcfa)
  store %struct.Memory* %call_47fcfa, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x722b78, %xmm2	 RIP: 47fd02	 Bytes: 9
  %loadMem_47fd02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd02 = call %struct.Memory* @routine_cvtsi2sdl_0x722b78___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd02)
  store %struct.Memory* %call_47fd02, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 47fd0b	 Bytes: 4
  %loadMem_47fd0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd0b = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd0b)
  store %struct.Memory* %call_47fd0b, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x6f80a0, %xmm2	 RIP: 47fd0f	 Bytes: 9
  %loadMem_47fd0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd0f = call %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd0f)
  store %struct.Memory* %call_47fd0f, %struct.Memory** %MEMORY

  ; Code: divsd %xmm2, %xmm1	 RIP: 47fd18	 Bytes: 4
  %loadMem_47fd18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd18 = call %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd18)
  store %struct.Memory* %call_47fd18, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 47fd1c	 Bytes: 4
  %loadMem_47fd1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd1c = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd1c)
  store %struct.Memory* %call_47fd1c, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 47fd20	 Bytes: 4
  %loadMem_47fd20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd20 = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd20)
  store %struct.Memory* %call_47fd20, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 47fd24	 Bytes: 3
  %loadMem_47fd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd24 = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd24)
  store %struct.Memory* %call_47fd24, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 47fd27	 Bytes: 3
  %loadMem_47fd27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd27 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd27)
  store %struct.Memory* %call_47fd27, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x7236c0	 RIP: 47fd2a	 Bytes: 7
  %loadMem_47fd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd2a = call %struct.Memory* @routine_movl__eax__0x7236c0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd2a)
  store %struct.Memory* %call_47fd2a, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 47fd31	 Bytes: 7
  %loadMem_47fd31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd31 = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd31)
  store %struct.Memory* %call_47fd31, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1f88	 RIP: 47fd38	 Bytes: 7
  %loadMem_47fd38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd38 = call %struct.Memory* @routine_movl__eax__0x6d1f88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd38)
  store %struct.Memory* %call_47fd38, %struct.Memory** %MEMORY

  ; Code: .L_47fd3f:	 RIP: 47fd3f	 Bytes: 0
  br label %block_.L_47fd3f
block_.L_47fd3f:

  ; Code: jmpq .L_47fd44	 RIP: 47fd3f	 Bytes: 5
  %loadMem_47fd3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd3f = call %struct.Memory* @routine_jmpq_.L_47fd44(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd3f, i64 5, i64 5)
  store %struct.Memory* %call_47fd3f, %struct.Memory** %MEMORY

  br label %block_.L_47fd44

  ; Code: .L_47fd44:	 RIP: 47fd44	 Bytes: 0
block_.L_47fd44:

  ; Code: jmpq .L_47fd49	 RIP: 47fd44	 Bytes: 5
  %loadMem_47fd44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd44 = call %struct.Memory* @routine_jmpq_.L_47fd49(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd44, i64 5, i64 5)
  store %struct.Memory* %call_47fd44, %struct.Memory** %MEMORY

  br label %block_.L_47fd49

  ; Code: .L_47fd49:	 RIP: 47fd49	 Bytes: 0
block_.L_47fd49:

  ; Code: jmpq .L_47fd4e	 RIP: 47fd49	 Bytes: 5
  %loadMem_47fd49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd49 = call %struct.Memory* @routine_jmpq_.L_47fd4e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd49, i64 5, i64 5)
  store %struct.Memory* %call_47fd49, %struct.Memory** %MEMORY

  br label %block_.L_47fd4e

  ; Code: .L_47fd4e:	 RIP: 47fd4e	 Bytes: 0
block_.L_47fd4e:

  ; Code: jmpq .L_47fd53	 RIP: 47fd4e	 Bytes: 5
  %loadMem_47fd4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd4e = call %struct.Memory* @routine_jmpq_.L_47fd53(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd4e, i64 5, i64 5)
  store %struct.Memory* %call_47fd4e, %struct.Memory** %MEMORY

  br label %block_.L_47fd53

  ; Code: .L_47fd53:	 RIP: 47fd53	 Bytes: 0
block_.L_47fd53:

  ; Code: cmpl $0x1, 0x710360	 RIP: 47fd53	 Bytes: 8
  %loadMem_47fd53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd53 = call %struct.Memory* @routine_cmpl__0x1__0x710360(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd53)
  store %struct.Memory* %call_47fd53, %struct.Memory** %MEMORY

  ; Code: jne .L_47fd74	 RIP: 47fd5b	 Bytes: 6
  %loadMem_47fd5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd5b = call %struct.Memory* @routine_jne_.L_47fd74(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd5b, i8* %BRANCH_TAKEN, i64 25, i64 6, i64 6)
  store %struct.Memory* %call_47fd5b, %struct.Memory** %MEMORY

  %loadBr_47fd5b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fd5b = icmp eq i8 %loadBr_47fd5b, 1
  br i1 %cmpBr_47fd5b, label %block_.L_47fd74, label %block_47fd61

block_47fd61:
  ; Code: movl 0x725318, %eax	 RIP: 47fd61	 Bytes: 7
  %loadMem_47fd61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd61 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd61)
  store %struct.Memory* %call_47fd61, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47fd68	 Bytes: 7
  %loadMem_47fd68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd68 = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd68)
  store %struct.Memory* %call_47fd68, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fd82	 RIP: 47fd6f	 Bytes: 5
  %loadMem_47fd6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd6f = call %struct.Memory* @routine_jmpq_.L_47fd82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd6f, i64 19, i64 5)
  store %struct.Memory* %call_47fd6f, %struct.Memory** %MEMORY

  br label %block_.L_47fd82

  ; Code: .L_47fd74:	 RIP: 47fd74	 Bytes: 0
block_.L_47fd74:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47fd74	 Bytes: 7
  %loadMem_47fd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd74 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd74)
  store %struct.Memory* %call_47fd74, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 47fd7b	 Bytes: 7
  %loadMem_47fd7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd7b = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd7b)
  store %struct.Memory* %call_47fd7b, %struct.Memory** %MEMORY

  ; Code: .L_47fd82:	 RIP: 47fd82	 Bytes: 0
  br label %block_.L_47fd82
block_.L_47fd82:

  ; Code: movl 0x6d32cc, %eax	 RIP: 47fd82	 Bytes: 7
  %loadMem_47fd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd82 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd82)
  store %struct.Memory* %call_47fd82, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 47fd89	 Bytes: 3
  %loadMem_47fd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd89 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd89)
  store %struct.Memory* %call_47fd89, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 47fd8c	 Bytes: 5
  %loadMem_47fd8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd8c = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd8c, i64 2289, i64 5)
  store %struct.Memory* %call_47fd8c, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_47fd91:	 RIP: 47fd91	 Bytes: 0
block_.L_47fd91:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 47fd91	 Bytes: 8
  %loadMem_47fd91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd91 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd91)
  store %struct.Memory* %call_47fd91, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 47fd99	 Bytes: 7
  %loadMem_47fd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fd99 = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fd99)
  store %struct.Memory* %call_47fd99, %struct.Memory** %MEMORY

  ; Code: je .L_47fdbb	 RIP: 47fda0	 Bytes: 6
  %loadMem_47fda0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fda0 = call %struct.Memory* @routine_je_.L_47fdbb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fda0, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_47fda0, %struct.Memory** %MEMORY

  %loadBr_47fda0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fda0 = icmp eq i8 %loadBr_47fda0, 1
  br i1 %cmpBr_47fda0, label %block_.L_47fdbb, label %block_47fda6

block_47fda6:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 47fda6	 Bytes: 8
  %loadMem_47fda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fda6 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fda6)
  store %struct.Memory* %call_47fda6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 47fdae	 Bytes: 7
  %loadMem_47fdae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdae = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdae)
  store %struct.Memory* %call_47fdae, %struct.Memory** %MEMORY

  ; Code: je .L_47fe9e	 RIP: 47fdb5	 Bytes: 6
  %loadMem_47fdb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdb5 = call %struct.Memory* @routine_je_.L_47fe9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdb5, i8* %BRANCH_TAKEN, i64 233, i64 6, i64 6)
  store %struct.Memory* %call_47fdb5, %struct.Memory** %MEMORY

  %loadBr_47fdb5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fdb5 = icmp eq i8 %loadBr_47fdb5, 1
  br i1 %cmpBr_47fdb5, label %block_.L_47fe9e, label %block_.L_47fdbb

  ; Code: .L_47fdbb:	 RIP: 47fdbb	 Bytes: 0
block_.L_47fdbb:

  ; Code: movq 0x6cb900, %rax	 RIP: 47fdbb	 Bytes: 8
  %loadMem_47fdbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdbb = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdbb)
  store %struct.Memory* %call_47fdbb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11b98(%rax)	 RIP: 47fdc3	 Bytes: 7
  %loadMem_47fdc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdc3 = call %struct.Memory* @routine_cmpl__0x1__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdc3)
  store %struct.Memory* %call_47fdc3, %struct.Memory** %MEMORY

  ; Code: jne .L_47fe9e	 RIP: 47fdca	 Bytes: 6
  %loadMem_47fdca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdca = call %struct.Memory* @routine_jne_.L_47fe9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdca, i8* %BRANCH_TAKEN, i64 212, i64 6, i64 6)
  store %struct.Memory* %call_47fdca, %struct.Memory** %MEMORY

  %loadBr_47fdca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fdca = icmp eq i8 %loadBr_47fdca, 1
  br i1 %cmpBr_47fdca, label %block_.L_47fe9e, label %block_47fdd0

block_47fdd0:
  ; Code: xorps %xmm0, %xmm0	 RIP: 47fdd0	 Bytes: 3
  %loadMem_47fdd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdd0 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdd0)
  store %struct.Memory* %call_47fdd0, %struct.Memory** %MEMORY

  ; Code: movsd 0x6cea30, %xmm1	 RIP: 47fdd3	 Bytes: 9
  %loadMem_47fdd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdd3 = call %struct.Memory* @routine_movsd_0x6cea30___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdd3)
  store %struct.Memory* %call_47fdd3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea38, %rax	 RIP: 47fddc	 Bytes: 8
  %loadMem_47fddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fddc = call %struct.Memory* @routine_movq_0x6cea38___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fddc)
  store %struct.Memory* %call_47fddc, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80a0, %ecx	 RIP: 47fde4	 Bytes: 7
  %loadMem_47fde4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fde4 = call %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fde4)
  store %struct.Memory* %call_47fde4, %struct.Memory** %MEMORY

  ; Code: subl 0x6f9688, %ecx	 RIP: 47fdeb	 Bytes: 7
  %loadMem_47fdeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdeb = call %struct.Memory* @routine_subl_0x6f9688___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdeb)
  store %struct.Memory* %call_47fdeb, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 47fdf2	 Bytes: 3
  %loadMem_47fdf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdf2 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdf2)
  store %struct.Memory* %call_47fdf2, %struct.Memory** %MEMORY

  ; Code: mulsd (%rax,%rdx,8), %xmm1	 RIP: 47fdf5	 Bytes: 5
  %loadMem_47fdf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdf5 = call %struct.Memory* @routine_mulsd___rax__rdx_8____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdf5)
  store %struct.Memory* %call_47fdf5, %struct.Memory** %MEMORY

  ; Code: addsd 0x710008, %xmm1	 RIP: 47fdfa	 Bytes: 9
  %loadMem_47fdfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fdfa = call %struct.Memory* @routine_addsd_0x710008___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fdfa)
  store %struct.Memory* %call_47fdfa, %struct.Memory** %MEMORY

  ; Code: movsd %xmm1, 0x6d1280	 RIP: 47fe03	 Bytes: 9
  %loadMem_47fe03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe03 = call %struct.Memory* @routine_movsd__xmm1__0x6d1280(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe03)
  store %struct.Memory* %call_47fe03, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6d0708	 RIP: 47fe0c	 Bytes: 9
  %loadMem_47fe0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe0c = call %struct.Memory* @routine_movsd__xmm0__0x6d0708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe0c)
  store %struct.Memory* %call_47fe0c, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80a0, %ecx	 RIP: 47fe15	 Bytes: 7
  %loadMem_47fe15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe15 = call %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe15)
  store %struct.Memory* %call_47fe15, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47fe1c	 Bytes: 3
  %loadMem_47fe1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe1c = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe1c)
  store %struct.Memory* %call_47fe1c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x28(%rbp)	 RIP: 47fe1f	 Bytes: 3
  %loadMem_47fe1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe1f = call %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe1f)
  store %struct.Memory* %call_47fe1f, %struct.Memory** %MEMORY

  ; Code: .L_47fe22:	 RIP: 47fe22	 Bytes: 0
  br label %block_.L_47fe22
block_.L_47fe22:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 47fe22	 Bytes: 3
  %loadMem_47fe22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe22 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe22)
  store %struct.Memory* %call_47fe22, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80a0, %ecx	 RIP: 47fe25	 Bytes: 7
  %loadMem_47fe25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe25 = call %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe25)
  store %struct.Memory* %call_47fe25, %struct.Memory** %MEMORY

  ; Code: subl 0x6f9688, %ecx	 RIP: 47fe2c	 Bytes: 7
  %loadMem_47fe2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe2c = call %struct.Memory* @routine_subl_0x6f9688___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe2c)
  store %struct.Memory* %call_47fe2c, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 47fe33	 Bytes: 2
  %loadMem_47fe33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe33 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe33)
  store %struct.Memory* %call_47fe33, %struct.Memory** %MEMORY

  ; Code: jl .L_47fe99	 RIP: 47fe35	 Bytes: 6
  %loadMem_47fe35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe35 = call %struct.Memory* @routine_jl_.L_47fe99(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe35, i8* %BRANCH_TAKEN, i64 100, i64 6, i64 6)
  store %struct.Memory* %call_47fe35, %struct.Memory** %MEMORY

  %loadBr_47fe35 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47fe35 = icmp eq i8 %loadBr_47fe35, 1
  br i1 %cmpBr_47fe35, label %block_.L_47fe99, label %block_47fe3b

block_47fe3b:
  ; Code: movsd 0x6cea30, %xmm0	 RIP: 47fe3b	 Bytes: 9
  %loadMem_47fe3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe3b = call %struct.Memory* @routine_movsd_0x6cea30___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe3b)
  store %struct.Memory* %call_47fe3b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cea38, %rax	 RIP: 47fe44	 Bytes: 8
  %loadMem_47fe44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe44 = call %struct.Memory* @routine_movq_0x6cea38___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe44)
  store %struct.Memory* %call_47fe44, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 47fe4c	 Bytes: 4
  %loadMem_47fe4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe4c = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe4c)
  store %struct.Memory* %call_47fe4c, %struct.Memory** %MEMORY

  ; Code: mulsd (%rax,%rcx,8), %xmm0	 RIP: 47fe50	 Bytes: 5
  %loadMem_47fe50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe50 = call %struct.Memory* @routine_mulsd___rax__rcx_8____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe50)
  store %struct.Memory* %call_47fe50, %struct.Memory** %MEMORY

  ; Code: addsd 0x710008, %xmm0	 RIP: 47fe55	 Bytes: 9
  %loadMem_47fe55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe55 = call %struct.Memory* @routine_addsd_0x710008___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe55)
  store %struct.Memory* %call_47fe55, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x7255f8	 RIP: 47fe5e	 Bytes: 9
  %loadMem_47fe5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe5e = call %struct.Memory* @routine_movsd__xmm0__0x7255f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe5e)
  store %struct.Memory* %call_47fe5e, %struct.Memory** %MEMORY

  ; Code: movsd 0x7255f8, %xmm0	 RIP: 47fe67	 Bytes: 9
  %loadMem_47fe67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe67 = call %struct.Memory* @routine_movsd_0x7255f8___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe67)
  store %struct.Memory* %call_47fe67, %struct.Memory** %MEMORY

  ; Code: mulsd 0x7255f8, %xmm0	 RIP: 47fe70	 Bytes: 9
  %loadMem_47fe70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe70 = call %struct.Memory* @routine_mulsd_0x7255f8___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe70)
  store %struct.Memory* %call_47fe70, %struct.Memory** %MEMORY

  ; Code: addsd 0x6d0708, %xmm0	 RIP: 47fe79	 Bytes: 9
  %loadMem_47fe79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe79 = call %struct.Memory* @routine_addsd_0x6d0708___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe79)
  store %struct.Memory* %call_47fe79, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6d0708	 RIP: 47fe82	 Bytes: 9
  %loadMem_47fe82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe82 = call %struct.Memory* @routine_movsd__xmm0__0x6d0708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe82)
  store %struct.Memory* %call_47fe82, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %eax	 RIP: 47fe8b	 Bytes: 3
  %loadMem_47fe8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe8b = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe8b)
  store %struct.Memory* %call_47fe8b, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 47fe8e	 Bytes: 3
  %loadMem_47fe8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe8e = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe8e)
  store %struct.Memory* %call_47fe8e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 47fe91	 Bytes: 3
  %loadMem_47fe91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe91 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe91)
  store %struct.Memory* %call_47fe91, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fe22	 RIP: 47fe94	 Bytes: 5
  %loadMem_47fe94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe94 = call %struct.Memory* @routine_jmpq_.L_47fe22(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe94, i64 -114, i64 5)
  store %struct.Memory* %call_47fe94, %struct.Memory** %MEMORY

  br label %block_.L_47fe22

  ; Code: .L_47fe99:	 RIP: 47fe99	 Bytes: 0
block_.L_47fe99:

  ; Code: jmpq .L_47ff6c	 RIP: 47fe99	 Bytes: 5
  %loadMem_47fe99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe99 = call %struct.Memory* @routine_jmpq_.L_47ff6c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe99, i64 211, i64 5)
  store %struct.Memory* %call_47fe99, %struct.Memory** %MEMORY

  br label %block_.L_47ff6c

  ; Code: .L_47fe9e:	 RIP: 47fe9e	 Bytes: 0
block_.L_47fe9e:

  ; Code: xorps %xmm0, %xmm0	 RIP: 47fe9e	 Bytes: 3
  %loadMem_47fe9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fe9e = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fe9e)
  store %struct.Memory* %call_47fe9e, %struct.Memory** %MEMORY

  ; Code: movsd 0x6cea30, %xmm1	 RIP: 47fea1	 Bytes: 9
  %loadMem_47fea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fea1 = call %struct.Memory* @routine_movsd_0x6cea30___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fea1)
  store %struct.Memory* %call_47fea1, %struct.Memory** %MEMORY

  ; Code: movq 0x6f9350, %rax	 RIP: 47feaa	 Bytes: 8
  %loadMem_47feaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47feaa = call %struct.Memory* @routine_movq_0x6f9350___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47feaa)
  store %struct.Memory* %call_47feaa, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80a0, %ecx	 RIP: 47feb2	 Bytes: 7
  %loadMem_47feb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47feb2 = call %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47feb2)
  store %struct.Memory* %call_47feb2, %struct.Memory** %MEMORY

  ; Code: subl 0x6f9688, %ecx	 RIP: 47feb9	 Bytes: 7
  %loadMem_47feb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47feb9 = call %struct.Memory* @routine_subl_0x6f9688___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47feb9)
  store %struct.Memory* %call_47feb9, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 47fec0	 Bytes: 3
  %loadMem_47fec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fec0 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fec0)
  store %struct.Memory* %call_47fec0, %struct.Memory** %MEMORY

  ; Code: mulsd (%rax,%rdx,8), %xmm1	 RIP: 47fec3	 Bytes: 5
  %loadMem_47fec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fec3 = call %struct.Memory* @routine_mulsd___rax__rdx_8____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fec3)
  store %struct.Memory* %call_47fec3, %struct.Memory** %MEMORY

  ; Code: addsd 0x710008, %xmm1	 RIP: 47fec8	 Bytes: 9
  %loadMem_47fec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fec8 = call %struct.Memory* @routine_addsd_0x710008___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fec8)
  store %struct.Memory* %call_47fec8, %struct.Memory** %MEMORY

  ; Code: movsd %xmm1, 0x6d1280	 RIP: 47fed1	 Bytes: 9
  %loadMem_47fed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fed1 = call %struct.Memory* @routine_movsd__xmm1__0x6d1280(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fed1)
  store %struct.Memory* %call_47fed1, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6d0708	 RIP: 47feda	 Bytes: 9
  %loadMem_47feda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47feda = call %struct.Memory* @routine_movsd__xmm0__0x6d0708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47feda)
  store %struct.Memory* %call_47feda, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80a0, %ecx	 RIP: 47fee3	 Bytes: 7
  %loadMem_47fee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fee3 = call %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fee3)
  store %struct.Memory* %call_47fee3, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 47feea	 Bytes: 3
  %loadMem_47feea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47feea = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47feea)
  store %struct.Memory* %call_47feea, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x28(%rbp)	 RIP: 47feed	 Bytes: 3
  %loadMem_47feed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47feed = call %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47feed)
  store %struct.Memory* %call_47feed, %struct.Memory** %MEMORY

  ; Code: .L_47fef0:	 RIP: 47fef0	 Bytes: 0
  br label %block_.L_47fef0
block_.L_47fef0:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 47fef0	 Bytes: 3
  %loadMem_47fef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fef0 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fef0)
  store %struct.Memory* %call_47fef0, %struct.Memory** %MEMORY

  ; Code: movl 0x6f80a0, %ecx	 RIP: 47fef3	 Bytes: 7
  %loadMem_47fef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fef3 = call %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fef3)
  store %struct.Memory* %call_47fef3, %struct.Memory** %MEMORY

  ; Code: subl 0x6f9688, %ecx	 RIP: 47fefa	 Bytes: 7
  %loadMem_47fefa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fefa = call %struct.Memory* @routine_subl_0x6f9688___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fefa)
  store %struct.Memory* %call_47fefa, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 47ff01	 Bytes: 2
  %loadMem_47ff01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff01 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff01)
  store %struct.Memory* %call_47ff01, %struct.Memory** %MEMORY

  ; Code: jl .L_47ff67	 RIP: 47ff03	 Bytes: 6
  %loadMem_47ff03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff03 = call %struct.Memory* @routine_jl_.L_47ff67(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff03, i8* %BRANCH_TAKEN, i64 100, i64 6, i64 6)
  store %struct.Memory* %call_47ff03, %struct.Memory** %MEMORY

  %loadBr_47ff03 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ff03 = icmp eq i8 %loadBr_47ff03, 1
  br i1 %cmpBr_47ff03, label %block_.L_47ff67, label %block_47ff09

block_47ff09:
  ; Code: movsd 0x6cea30, %xmm0	 RIP: 47ff09	 Bytes: 9
  %loadMem_47ff09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff09 = call %struct.Memory* @routine_movsd_0x6cea30___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff09)
  store %struct.Memory* %call_47ff09, %struct.Memory** %MEMORY

  ; Code: movq 0x6f9350, %rax	 RIP: 47ff12	 Bytes: 8
  %loadMem_47ff12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff12 = call %struct.Memory* @routine_movq_0x6f9350___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff12)
  store %struct.Memory* %call_47ff12, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 47ff1a	 Bytes: 4
  %loadMem_47ff1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff1a = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff1a)
  store %struct.Memory* %call_47ff1a, %struct.Memory** %MEMORY

  ; Code: mulsd (%rax,%rcx,8), %xmm0	 RIP: 47ff1e	 Bytes: 5
  %loadMem_47ff1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff1e = call %struct.Memory* @routine_mulsd___rax__rcx_8____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff1e)
  store %struct.Memory* %call_47ff1e, %struct.Memory** %MEMORY

  ; Code: addsd 0x710008, %xmm0	 RIP: 47ff23	 Bytes: 9
  %loadMem_47ff23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff23 = call %struct.Memory* @routine_addsd_0x710008___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff23)
  store %struct.Memory* %call_47ff23, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x7255f8	 RIP: 47ff2c	 Bytes: 9
  %loadMem_47ff2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff2c = call %struct.Memory* @routine_movsd__xmm0__0x7255f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff2c)
  store %struct.Memory* %call_47ff2c, %struct.Memory** %MEMORY

  ; Code: movsd 0x7255f8, %xmm0	 RIP: 47ff35	 Bytes: 9
  %loadMem_47ff35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff35 = call %struct.Memory* @routine_movsd_0x7255f8___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff35)
  store %struct.Memory* %call_47ff35, %struct.Memory** %MEMORY

  ; Code: mulsd 0x7255f8, %xmm0	 RIP: 47ff3e	 Bytes: 9
  %loadMem_47ff3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff3e = call %struct.Memory* @routine_mulsd_0x7255f8___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff3e)
  store %struct.Memory* %call_47ff3e, %struct.Memory** %MEMORY

  ; Code: addsd 0x6d0708, %xmm0	 RIP: 47ff47	 Bytes: 9
  %loadMem_47ff47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff47 = call %struct.Memory* @routine_addsd_0x6d0708___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff47)
  store %struct.Memory* %call_47ff47, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6d0708	 RIP: 47ff50	 Bytes: 9
  %loadMem_47ff50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff50 = call %struct.Memory* @routine_movsd__xmm0__0x6d0708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff50)
  store %struct.Memory* %call_47ff50, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %eax	 RIP: 47ff59	 Bytes: 3
  %loadMem_47ff59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff59 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff59)
  store %struct.Memory* %call_47ff59, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 47ff5c	 Bytes: 3
  %loadMem_47ff5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff5c = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff5c)
  store %struct.Memory* %call_47ff5c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 47ff5f	 Bytes: 3
  %loadMem_47ff5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff5f = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff5f)
  store %struct.Memory* %call_47ff5f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47fef0	 RIP: 47ff62	 Bytes: 5
  %loadMem_47ff62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff62 = call %struct.Memory* @routine_jmpq_.L_47fef0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff62, i64 -114, i64 5)
  store %struct.Memory* %call_47ff62, %struct.Memory** %MEMORY

  br label %block_.L_47fef0

  ; Code: .L_47ff67:	 RIP: 47ff67	 Bytes: 0
block_.L_47ff67:

  ; Code: jmpq .L_47ff6c	 RIP: 47ff67	 Bytes: 5
  %loadMem_47ff67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff67 = call %struct.Memory* @routine_jmpq_.L_47ff6c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff67, i64 5, i64 5)
  store %struct.Memory* %call_47ff67, %struct.Memory** %MEMORY

  br label %block_.L_47ff6c

  ; Code: .L_47ff6c:	 RIP: 47ff6c	 Bytes: 0
block_.L_47ff6c:

  ; Code: cvtsi2sdq 0x6cea28, %xmm0	 RIP: 47ff6c	 Bytes: 10
  %loadMem_47ff6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff6c = call %struct.Memory* @routine_cvtsi2sdq_0x6cea28___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff6c)
  store %struct.Memory* %call_47ff6c, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm0	 RIP: 47ff76	 Bytes: 9
  %loadMem_47ff76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff76 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff76)
  store %struct.Memory* %call_47ff76, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm0	 RIP: 47ff7f	 Bytes: 9
  %loadMem_47ff7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff7f = call %struct.Memory* @routine_mulsd_0x6d1280___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff7f)
  store %struct.Memory* %call_47ff7f, %struct.Memory** %MEMORY

  ; Code: divsd 0x6d0708, %xmm0	 RIP: 47ff88	 Bytes: 9
  %loadMem_47ff88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff88 = call %struct.Memory* @routine_divsd_0x6d0708___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff88)
  store %struct.Memory* %call_47ff88, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %eax	 RIP: 47ff91	 Bytes: 4
  %loadMem_47ff91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff91 = call %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff91)
  store %struct.Memory* %call_47ff91, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 47ff95	 Bytes: 3
  %loadMem_47ff95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff95 = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff95)
  store %struct.Memory* %call_47ff95, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 47ff98	 Bytes: 7
  %loadMem_47ff98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff98 = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff98)
  store %struct.Memory* %call_47ff98, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %ecx	 RIP: 47ff9f	 Bytes: 3
  %loadMem_47ff9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ff9f = call %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ff9f)
  store %struct.Memory* %call_47ff9f, %struct.Memory** %MEMORY

  ; Code: subl %eax, %ecx	 RIP: 47ffa2	 Bytes: 2
  %loadMem_47ffa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffa2 = call %struct.Memory* @routine_subl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffa2)
  store %struct.Memory* %call_47ffa2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x14(%rbp)	 RIP: 47ffa4	 Bytes: 3
  %loadMem_47ffa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffa4 = call %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffa4)
  store %struct.Memory* %call_47ffa4, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %eax	 RIP: 47ffa7	 Bytes: 3
  %loadMem_47ffa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffa7 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffa7)
  store %struct.Memory* %call_47ffa7, %struct.Memory** %MEMORY

  ; Code: movsd 0x6ccf88, %xmm0	 RIP: 47ffaa	 Bytes: 9
  %loadMem_47ffaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffaa = call %struct.Memory* @routine_movsd_0x6ccf88___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffaa)
  store %struct.Memory* %call_47ffaa, %struct.Memory** %MEMORY

  ; Code: movsd 0x723648, %xmm1	 RIP: 47ffb3	 Bytes: 9
  %loadMem_47ffb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffb3 = call %struct.Memory* @routine_movsd_0x723648___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffb3)
  store %struct.Memory* %call_47ffb3, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1fb0, %xmm1	 RIP: 47ffbc	 Bytes: 9
  %loadMem_47ffbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffbc = call %struct.Memory* @routine_mulsd_0x6d1fb0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffbc)
  store %struct.Memory* %call_47ffbc, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x6f80a0, %xmm2	 RIP: 47ffc5	 Bytes: 9
  %loadMem_47ffc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffc5 = call %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffc5)
  store %struct.Memory* %call_47ffc5, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 47ffce	 Bytes: 4
  %loadMem_47ffce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffce = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffce)
  store %struct.Memory* %call_47ffce, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm0	 RIP: 47ffd2	 Bytes: 4
  %loadMem_47ffd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffd2 = call %struct.Memory* @routine_divsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffd2)
  store %struct.Memory* %call_47ffd2, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %ecx	 RIP: 47ffd6	 Bytes: 4
  %loadMem_47ffd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffd6 = call %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffd6)
  store %struct.Memory* %call_47ffd6, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 47ffda	 Bytes: 2
  %loadMem_47ffda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffda = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffda)
  store %struct.Memory* %call_47ffda, %struct.Memory** %MEMORY

  ; Code: jge .L_48001d	 RIP: 47ffdc	 Bytes: 6
  %loadMem_47ffdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffdc = call %struct.Memory* @routine_jge_.L_48001d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffdc, i8* %BRANCH_TAKEN, i64 65, i64 6, i64 6)
  store %struct.Memory* %call_47ffdc, %struct.Memory** %MEMORY

  %loadBr_47ffdc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ffdc = icmp eq i8 %loadBr_47ffdc, 1
  br i1 %cmpBr_47ffdc, label %block_.L_48001d, label %block_47ffe2

block_47ffe2:
  ; Code: movsd 0x6ccf88, %xmm0	 RIP: 47ffe2	 Bytes: 9
  %loadMem_47ffe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffe2 = call %struct.Memory* @routine_movsd_0x6ccf88___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffe2)
  store %struct.Memory* %call_47ffe2, %struct.Memory** %MEMORY

  ; Code: movsd 0x723648, %xmm1	 RIP: 47ffeb	 Bytes: 9
  %loadMem_47ffeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47ffeb = call %struct.Memory* @routine_movsd_0x723648___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47ffeb)
  store %struct.Memory* %call_47ffeb, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1fb0, %xmm1	 RIP: 47fff4	 Bytes: 9
  %loadMem_47fff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fff4 = call %struct.Memory* @routine_mulsd_0x6d1fb0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fff4)
  store %struct.Memory* %call_47fff4, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x6f80a0, %xmm2	 RIP: 47fffd	 Bytes: 9
  %loadMem_47fffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47fffd = call %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47fffd)
  store %struct.Memory* %call_47fffd, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 480006	 Bytes: 4
  %loadMem_480006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480006 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480006)
  store %struct.Memory* %call_480006, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm0	 RIP: 48000a	 Bytes: 4
  %loadMem_48000a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48000a = call %struct.Memory* @routine_divsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48000a)
  store %struct.Memory* %call_48000a, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %eax	 RIP: 48000e	 Bytes: 4
  %loadMem_48000e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48000e = call %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48000e)
  store %struct.Memory* %call_48000e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 480012	 Bytes: 6
  %loadMem_480012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480012 = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480012)
  store %struct.Memory* %call_480012, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480026	 RIP: 480018	 Bytes: 5
  %loadMem_480018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480018 = call %struct.Memory* @routine_jmpq_.L_480026(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480018, i64 14, i64 5)
  store %struct.Memory* %call_480018, %struct.Memory** %MEMORY

  br label %block_.L_480026

  ; Code: .L_48001d:	 RIP: 48001d	 Bytes: 0
block_.L_48001d:

  ; Code: movl -0x14(%rbp), %eax	 RIP: 48001d	 Bytes: 3
  %loadMem_48001d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48001d = call %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48001d)
  store %struct.Memory* %call_48001d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 480020	 Bytes: 6
  %loadMem_480020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480020 = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480020)
  store %struct.Memory* %call_480020, %struct.Memory** %MEMORY

  ; Code: .L_480026:	 RIP: 480026	 Bytes: 0
  br label %block_.L_480026
block_.L_480026:

  ; Code: movl -0xc0(%rbp), %eax	 RIP: 480026	 Bytes: 6
  %loadMem_480026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480026 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480026)
  store %struct.Memory* %call_480026, %struct.Memory** %MEMORY

  ; Code: xorps %xmm0, %xmm0	 RIP: 48002c	 Bytes: 3
  %loadMem_48002c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48002c = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48002c)
  store %struct.Memory* %call_48002c, %struct.Memory** %MEMORY

  ; Code: movsd 0x31801(%rip), %xmm1	 RIP: 48002f	 Bytes: 8
  %loadMem_48002f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48002f = call %struct.Memory* @routine_movsd_0x31801__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48002f)
  store %struct.Memory* %call_48002f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 480037	 Bytes: 3
  %loadMem_480037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480037 = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480037)
  store %struct.Memory* %call_480037, %struct.Memory** %MEMORY

  ; Code: movsd 0x6d1280, %xmm2	 RIP: 48003a	 Bytes: 9
  %loadMem_48003a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48003a = call %struct.Memory* @routine_movsd_0x6d1280___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48003a)
  store %struct.Memory* %call_48003a, %struct.Memory** %MEMORY

  ; Code: mulsd 0x723640, %xmm2	 RIP: 480043	 Bytes: 9
  %loadMem_480043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480043 = call %struct.Memory* @routine_mulsd_0x723640___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480043)
  store %struct.Memory* %call_480043, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm2	 RIP: 48004c	 Bytes: 9
  %loadMem_48004c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48004c = call %struct.Memory* @routine_mulsd_0x6d1280___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48004c)
  store %struct.Memory* %call_48004c, %struct.Memory** %MEMORY

  ; Code: mulsd 0x723640, %xmm2	 RIP: 480055	 Bytes: 9
  %loadMem_480055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480055 = call %struct.Memory* @routine_mulsd_0x723640___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480055)
  store %struct.Memory* %call_480055, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d33e0, %xmm1	 RIP: 48005e	 Bytes: 9
  %loadMem_48005e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48005e = call %struct.Memory* @routine_mulsd_0x6d33e0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48005e)
  store %struct.Memory* %call_48005e, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm1	 RIP: 480067	 Bytes: 9
  %loadMem_480067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480067 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480067)
  store %struct.Memory* %call_480067, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x14(%rbp), %xmm3	 RIP: 480070	 Bytes: 5
  %loadMem_480070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480070 = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x14__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480070)
  store %struct.Memory* %call_480070, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm3, %xmm1	 RIP: 480075	 Bytes: 4
  %loadMem_480075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480075 = call %struct.Memory* @routine_mulsd__xmm3___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480075)
  store %struct.Memory* %call_480075, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm2	 RIP: 480079	 Bytes: 4
  %loadMem_480079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480079 = call %struct.Memory* @routine_addsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480079)
  store %struct.Memory* %call_480079, %struct.Memory** %MEMORY

  ; Code: movsd %xmm2, -0x10(%rbp)	 RIP: 48007d	 Bytes: 5
  %loadMem_48007d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48007d = call %struct.Memory* @routine_movsd__xmm2__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48007d)
  store %struct.Memory* %call_48007d, %struct.Memory** %MEMORY

  ; Code: movsd 0x6d33e0, %xmm1	 RIP: 480082	 Bytes: 9
  %loadMem_480082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480082 = call %struct.Memory* @routine_movsd_0x6d33e0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480082)
  store %struct.Memory* %call_480082, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 48008b	 Bytes: 4
  %loadMem_48008b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48008b = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48008b)
  store %struct.Memory* %call_48008b, %struct.Memory** %MEMORY

  ; Code: jne .L_4800a0	 RIP: 48008f	 Bytes: 6
  %loadMem_48008f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48008f = call %struct.Memory* @routine_jne_.L_4800a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48008f, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_48008f, %struct.Memory** %MEMORY

  %loadBr_48008f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48008f = icmp eq i8 %loadBr_48008f, 1
  br i1 %cmpBr_48008f, label %block_.L_4800a0, label %block_480095

block_480095:
  ; Code: jp .L_4800a0	 RIP: 480095	 Bytes: 6
  %loadMem_480095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480095 = call %struct.Memory* @routine_jp_.L_4800a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480095, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_480095, %struct.Memory** %MEMORY

  %loadBr_480095 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480095 = icmp eq i8 %loadBr_480095, 1
  br i1 %cmpBr_480095, label %block_.L_4800a0, label %block_48009b

block_48009b:
  ; Code: jmpq .L_4800ee	 RIP: 48009b	 Bytes: 5
  %loadMem_48009b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48009b = call %struct.Memory* @routine_jmpq_.L_4800ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48009b, i64 83, i64 5)
  store %struct.Memory* %call_48009b, %struct.Memory** %MEMORY

  br label %block_.L_4800ee

  ; Code: .L_4800a0:	 RIP: 4800a0	 Bytes: 0
block_.L_4800a0:

  ; Code: xorps %xmm0, %xmm0	 RIP: 4800a0	 Bytes: 3
  %loadMem_4800a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800a0 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800a0)
  store %struct.Memory* %call_4800a0, %struct.Memory** %MEMORY

  ; Code: ucomisd -0x10(%rbp), %xmm0	 RIP: 4800a3	 Bytes: 5
  %loadMem_4800a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800a3 = call %struct.Memory* @routine_ucomisd_MINUS0x10__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800a3)
  store %struct.Memory* %call_4800a3, %struct.Memory** %MEMORY

  ; Code: ja .L_4800ee	 RIP: 4800a8	 Bytes: 6
  %loadMem_4800a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800a8 = call %struct.Memory* @routine_ja_.L_4800ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800a8, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_4800a8, %struct.Memory** %MEMORY

  %loadBr_4800a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4800a8 = icmp eq i8 %loadBr_4800a8, 1
  br i1 %cmpBr_4800a8, label %block_.L_4800ee, label %block_4800ae

block_4800ae:
  ; Code: xorps %xmm0, %xmm0	 RIP: 4800ae	 Bytes: 3
  %loadMem_4800ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800ae = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800ae)
  store %struct.Memory* %call_4800ae, %struct.Memory** %MEMORY

  ; Code: movsd -0x10(%rbp), %xmm1	 RIP: 4800b1	 Bytes: 5
  %loadMem_4800b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800b1 = call %struct.Memory* @routine_movsd_MINUS0x10__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800b1)
  store %struct.Memory* %call_4800b1, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0xc8(%rbp)	 RIP: 4800b6	 Bytes: 8
  %loadMem_4800b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800b6 = call %struct.Memory* @routine_movsd__xmm0__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800b6)
  store %struct.Memory* %call_4800b6, %struct.Memory** %MEMORY

  ; Code: movaps %xmm1, %xmm0	 RIP: 4800be	 Bytes: 3
  %loadMem_4800be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800be = call %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800be)
  store %struct.Memory* %call_4800be, %struct.Memory** %MEMORY

  ; Code: callq .sqrt_plt	 RIP: 4800c1	 Bytes: 5
  %loadMem1_4800c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4800c1 = call %struct.Memory* @routine_callq_.sqrt_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4800c1, i64 -519889, i64 5, i64 5)
  store %struct.Memory* %call1_4800c1, %struct.Memory** %MEMORY

  %loadMem2_4800c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4800c1 = load i64, i64* %3
  %call2_4800c1 = call %struct.Memory* @ext_sqrt(%struct.State* %0, i64  %loadPC_4800c1, %struct.Memory* %loadMem2_4800c1)
  store %struct.Memory* %call2_4800c1, %struct.Memory** %MEMORY

  ; Code: movsd 0x723640, %xmm1	 RIP: 4800c6	 Bytes: 9
  %loadMem_4800c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800c6 = call %struct.Memory* @routine_movsd_0x723640___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800c6)
  store %struct.Memory* %call_4800c6, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm1	 RIP: 4800cf	 Bytes: 9
  %loadMem_4800cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800cf = call %struct.Memory* @routine_mulsd_0x6d1280___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800cf)
  store %struct.Memory* %call_4800cf, %struct.Memory** %MEMORY

  ; Code: subsd %xmm1, %xmm0	 RIP: 4800d8	 Bytes: 4
  %loadMem_4800d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800d8 = call %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800d8)
  store %struct.Memory* %call_4800d8, %struct.Memory** %MEMORY

  ; Code: movsd -0xc8(%rbp), %xmm1	 RIP: 4800dc	 Bytes: 8
  %loadMem_4800dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800dc = call %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800dc)
  store %struct.Memory* %call_4800dc, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 4800e4	 Bytes: 4
  %loadMem_4800e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800e4 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800e4)
  store %struct.Memory* %call_4800e4, %struct.Memory** %MEMORY

  ; Code: jb .L_48011f	 RIP: 4800e8	 Bytes: 6
  %loadMem_4800e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800e8 = call %struct.Memory* @routine_jb_.L_48011f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800e8, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_4800e8, %struct.Memory** %MEMORY

  %loadBr_4800e8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4800e8 = icmp eq i8 %loadBr_4800e8, 1
  br i1 %cmpBr_4800e8, label %block_.L_48011f, label %block_.L_4800ee

  ; Code: .L_4800ee:	 RIP: 4800ee	 Bytes: 0
block_.L_4800ee:

  ; Code: movsd 0x723640, %xmm0	 RIP: 4800ee	 Bytes: 9
  %loadMem_4800ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800ee = call %struct.Memory* @routine_movsd_0x723640___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800ee)
  store %struct.Memory* %call_4800ee, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm0	 RIP: 4800f7	 Bytes: 9
  %loadMem_4800f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4800f7 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4800f7)
  store %struct.Memory* %call_4800f7, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x14(%rbp), %xmm1	 RIP: 480100	 Bytes: 5
  %loadMem_480100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480100 = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x14__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480100)
  store %struct.Memory* %call_480100, %struct.Memory** %MEMORY

  ; Code: divsd %xmm1, %xmm0	 RIP: 480105	 Bytes: 4
  %loadMem_480105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480105 = call %struct.Memory* @routine_divsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480105)
  store %struct.Memory* %call_480105, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 480109	 Bytes: 4
  %loadMem_480109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480109 = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480109)
  store %struct.Memory* %call_480109, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 48010d	 Bytes: 4
  %loadMem_48010d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48010d = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48010d)
  store %struct.Memory* %call_48010d, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6ccae0	 RIP: 480111	 Bytes: 9
  %loadMem_480111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480111 = call %struct.Memory* @routine_movsd__xmm0__0x6ccae0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480111)
  store %struct.Memory* %call_480111, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480181	 RIP: 48011a	 Bytes: 5
  %loadMem_48011a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48011a = call %struct.Memory* @routine_jmpq_.L_480181(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48011a, i64 103, i64 5)
  store %struct.Memory* %call_48011a, %struct.Memory** %MEMORY

  br label %block_.L_480181

  ; Code: .L_48011f:	 RIP: 48011f	 Bytes: 0
block_.L_48011f:

  ; Code: movsd 0x31721(%rip), %xmm0	 RIP: 48011f	 Bytes: 8
  %loadMem_48011f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48011f = call %struct.Memory* @routine_movsd_0x31721__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48011f)
  store %struct.Memory* %call_48011f, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d33e0, %xmm0	 RIP: 480127	 Bytes: 9
  %loadMem_480127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480127 = call %struct.Memory* @routine_mulsd_0x6d33e0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480127)
  store %struct.Memory* %call_480127, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm0	 RIP: 480130	 Bytes: 9
  %loadMem_480130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480130 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480130)
  store %struct.Memory* %call_480130, %struct.Memory** %MEMORY

  ; Code: movsd -0x10(%rbp), %xmm1	 RIP: 480139	 Bytes: 5
  %loadMem_480139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480139 = call %struct.Memory* @routine_movsd_MINUS0x10__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480139)
  store %struct.Memory* %call_480139, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0xd0(%rbp)	 RIP: 48013e	 Bytes: 8
  %loadMem_48013e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48013e = call %struct.Memory* @routine_movsd__xmm0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48013e)
  store %struct.Memory* %call_48013e, %struct.Memory** %MEMORY

  ; Code: movaps %xmm1, %xmm0	 RIP: 480146	 Bytes: 3
  %loadMem_480146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480146 = call %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480146)
  store %struct.Memory* %call_480146, %struct.Memory** %MEMORY

  ; Code: callq .sqrt_plt	 RIP: 480149	 Bytes: 5
  %loadMem1_480149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_480149 = call %struct.Memory* @routine_callq_.sqrt_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_480149, i64 -520025, i64 5, i64 5)
  store %struct.Memory* %call1_480149, %struct.Memory** %MEMORY

  %loadMem2_480149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480149 = load i64, i64* %3
  %call2_480149 = call %struct.Memory* @ext_sqrt(%struct.State* %0, i64  %loadPC_480149, %struct.Memory* %loadMem2_480149)
  store %struct.Memory* %call2_480149, %struct.Memory** %MEMORY

  ; Code: movsd 0x723640, %xmm1	 RIP: 48014e	 Bytes: 9
  %loadMem_48014e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48014e = call %struct.Memory* @routine_movsd_0x723640___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48014e)
  store %struct.Memory* %call_48014e, %struct.Memory** %MEMORY

  ; Code: mulsd 0x6d1280, %xmm1	 RIP: 480157	 Bytes: 9
  %loadMem_480157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480157 = call %struct.Memory* @routine_mulsd_0x6d1280___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480157)
  store %struct.Memory* %call_480157, %struct.Memory** %MEMORY

  ; Code: subsd %xmm1, %xmm0	 RIP: 480160	 Bytes: 4
  %loadMem_480160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480160 = call %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480160)
  store %struct.Memory* %call_480160, %struct.Memory** %MEMORY

  ; Code: movsd -0xd0(%rbp), %xmm1	 RIP: 480164	 Bytes: 8
  %loadMem_480164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480164 = call %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480164)
  store %struct.Memory* %call_480164, %struct.Memory** %MEMORY

  ; Code: divsd %xmm0, %xmm1	 RIP: 48016c	 Bytes: 4
  %loadMem_48016c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48016c = call %struct.Memory* @routine_divsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48016c)
  store %struct.Memory* %call_48016c, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm1, %xmm0	 RIP: 480170	 Bytes: 4
  %loadMem_480170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480170 = call %struct.Memory* @routine_cvtsd2ss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480170)
  store %struct.Memory* %call_480170, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 480174	 Bytes: 4
  %loadMem_480174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480174 = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480174)
  store %struct.Memory* %call_480174, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x6ccae0	 RIP: 480178	 Bytes: 9
  %loadMem_480178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480178 = call %struct.Memory* @routine_movsd__xmm0__0x6ccae0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480178)
  store %struct.Memory* %call_480178, %struct.Memory** %MEMORY

  ; Code: .L_480181:	 RIP: 480181	 Bytes: 0
  br label %block_.L_480181
block_.L_480181:

  ; Code: movsd 0x6ccae0, %xmm0	 RIP: 480181	 Bytes: 9
  %loadMem_480181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480181 = call %struct.Memory* @routine_movsd_0x6ccae0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480181)
  store %struct.Memory* %call_480181, %struct.Memory** %MEMORY

  ; Code: callq .Qstep2QP	 RIP: 48018a	 Bytes: 5
  %loadMem1_48018a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_48018a = call %struct.Memory* @routine_callq_.Qstep2QP(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_48018a, i64 1286, i64 5, i64 5)
  store %struct.Memory* %call1_48018a, %struct.Memory** %MEMORY

  %loadMem2_48018a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48018a = load i64, i64* %3
  %call2_48018a = call %struct.Memory* @sub_480690.Qstep2QP(%struct.State* %0, i64  %loadPC_48018a, %struct.Memory* %loadMem2_48018a)
  store %struct.Memory* %call2_48018a, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 48018f	 Bytes: 7
  %loadMem_48018f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48018f = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48018f)
  store %struct.Memory* %call_48018f, %struct.Memory** %MEMORY

  ; Code: movl 0x723690, %eax	 RIP: 480196	 Bytes: 7
  %loadMem_480196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480196 = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480196)
  store %struct.Memory* %call_480196, %struct.Memory** %MEMORY

  ; Code: addl 0x70fce4, %eax	 RIP: 48019d	 Bytes: 7
  %loadMem_48019d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48019d = call %struct.Memory* @routine_addl_0x70fce4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48019d)
  store %struct.Memory* %call_48019d, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 4801a4	 Bytes: 7
  %loadMem_4801a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801a4 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801a4)
  store %struct.Memory* %call_4801a4, %struct.Memory** %MEMORY

  ; Code: jge .L_4801ca	 RIP: 4801ab	 Bytes: 6
  %loadMem_4801ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801ab = call %struct.Memory* @routine_jge_.L_4801ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801ab, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4801ab, %struct.Memory** %MEMORY

  %loadBr_4801ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4801ab = icmp eq i8 %loadBr_4801ab, 1
  br i1 %cmpBr_4801ab, label %block_.L_4801ca, label %block_4801b1

block_4801b1:
  ; Code: movl 0x723690, %eax	 RIP: 4801b1	 Bytes: 7
  %loadMem_4801b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801b1 = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801b1)
  store %struct.Memory* %call_4801b1, %struct.Memory** %MEMORY

  ; Code: addl 0x70fce4, %eax	 RIP: 4801b8	 Bytes: 7
  %loadMem_4801b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801b8 = call %struct.Memory* @routine_addl_0x70fce4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801b8)
  store %struct.Memory* %call_4801b8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 4801bf	 Bytes: 6
  %loadMem_4801bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801bf = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801bf)
  store %struct.Memory* %call_4801bf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4801d7	 RIP: 4801c5	 Bytes: 5
  %loadMem_4801c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801c5 = call %struct.Memory* @routine_jmpq_.L_4801d7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801c5, i64 18, i64 5)
  store %struct.Memory* %call_4801c5, %struct.Memory** %MEMORY

  br label %block_.L_4801d7

  ; Code: .L_4801ca:	 RIP: 4801ca	 Bytes: 0
block_.L_4801ca:

  ; Code: movl 0x6d32cc, %eax	 RIP: 4801ca	 Bytes: 7
  %loadMem_4801ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801ca = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801ca)
  store %struct.Memory* %call_4801ca, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 4801d1	 Bytes: 6
  %loadMem_4801d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801d1 = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801d1)
  store %struct.Memory* %call_4801d1, %struct.Memory** %MEMORY

  ; Code: .L_4801d7:	 RIP: 4801d7	 Bytes: 0
  br label %block_.L_4801d7
block_.L_4801d7:

  ; Code: movl -0xd4(%rbp), %eax	 RIP: 4801d7	 Bytes: 6
  %loadMem_4801d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801d7 = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801d7)
  store %struct.Memory* %call_4801d7, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 4801dd	 Bytes: 7
  %loadMem_4801dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801dd = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801dd)
  store %struct.Memory* %call_4801dd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 4801e4	 Bytes: 8
  %loadMem_4801e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801e4 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801e4)
  store %struct.Memory* %call_4801e4, %struct.Memory** %MEMORY

  ; Code: movl 0xcb0(%rcx), %eax	 RIP: 4801ec	 Bytes: 6
  %loadMem_4801ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801ec = call %struct.Memory* @routine_movl_0xcb0__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801ec)
  store %struct.Memory* %call_4801ec, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6f8ed8, %eax	 RIP: 4801f2	 Bytes: 7
  %loadMem_4801f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801f2 = call %struct.Memory* @routine_cmpl_0x6f8ed8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801f2)
  store %struct.Memory* %call_4801f2, %struct.Memory** %MEMORY

  ; Code: jl .L_48024a	 RIP: 4801f9	 Bytes: 6
  %loadMem_4801f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801f9 = call %struct.Memory* @routine_jl_.L_48024a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801f9, i8* %BRANCH_TAKEN, i64 81, i64 6, i64 6)
  store %struct.Memory* %call_4801f9, %struct.Memory** %MEMORY

  %loadBr_4801f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4801f9 = icmp eq i8 %loadBr_4801f9, 1
  br i1 %cmpBr_4801f9, label %block_.L_48024a, label %block_4801ff

block_4801ff:
  ; Code: movl 0x725318, %eax	 RIP: 4801ff	 Bytes: 7
  %loadMem_4801ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4801ff = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4801ff)
  store %struct.Memory* %call_4801ff, %struct.Memory** %MEMORY

  ; Code: addl $0x6, %eax	 RIP: 480206	 Bytes: 3
  %loadMem_480206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480206 = call %struct.Memory* @routine_addl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480206)
  store %struct.Memory* %call_480206, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 480209	 Bytes: 7
  %loadMem_480209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480209 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480209)
  store %struct.Memory* %call_480209, %struct.Memory** %MEMORY

  ; Code: jge .L_48022b	 RIP: 480210	 Bytes: 6
  %loadMem_480210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480210 = call %struct.Memory* @routine_jge_.L_48022b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480210, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_480210, %struct.Memory** %MEMORY

  %loadBr_480210 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480210 = icmp eq i8 %loadBr_480210, 1
  br i1 %cmpBr_480210, label %block_.L_48022b, label %block_480216

block_480216:
  ; Code: movl 0x725318, %eax	 RIP: 480216	 Bytes: 7
  %loadMem_480216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480216 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480216)
  store %struct.Memory* %call_480216, %struct.Memory** %MEMORY

  ; Code: addl $0x6, %eax	 RIP: 48021d	 Bytes: 3
  %loadMem_48021d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48021d = call %struct.Memory* @routine_addl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48021d)
  store %struct.Memory* %call_48021d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd8(%rbp)	 RIP: 480220	 Bytes: 6
  %loadMem_480220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480220 = call %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480220)
  store %struct.Memory* %call_480220, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480238	 RIP: 480226	 Bytes: 5
  %loadMem_480226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480226 = call %struct.Memory* @routine_jmpq_.L_480238(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480226, i64 18, i64 5)
  store %struct.Memory* %call_480226, %struct.Memory** %MEMORY

  br label %block_.L_480238

  ; Code: .L_48022b:	 RIP: 48022b	 Bytes: 0
block_.L_48022b:

  ; Code: movl 0x6d32cc, %eax	 RIP: 48022b	 Bytes: 7
  %loadMem_48022b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48022b = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48022b)
  store %struct.Memory* %call_48022b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd8(%rbp)	 RIP: 480232	 Bytes: 6
  %loadMem_480232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480232 = call %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480232)
  store %struct.Memory* %call_480232, %struct.Memory** %MEMORY

  ; Code: .L_480238:	 RIP: 480238	 Bytes: 0
  br label %block_.L_480238
block_.L_480238:

  ; Code: movl -0xd8(%rbp), %eax	 RIP: 480238	 Bytes: 6
  %loadMem_480238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480238 = call %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480238)
  store %struct.Memory* %call_480238, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 48023e	 Bytes: 7
  %loadMem_48023e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48023e = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48023e)
  store %struct.Memory* %call_48023e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480290	 RIP: 480245	 Bytes: 5
  %loadMem_480245 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480245 = call %struct.Memory* @routine_jmpq_.L_480290(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480245, i64 75, i64 5)
  store %struct.Memory* %call_480245, %struct.Memory** %MEMORY

  br label %block_.L_480290

  ; Code: .L_48024a:	 RIP: 48024a	 Bytes: 0
block_.L_48024a:

  ; Code: movl 0x725318, %eax	 RIP: 48024a	 Bytes: 7
  %loadMem_48024a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48024a = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48024a)
  store %struct.Memory* %call_48024a, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %eax	 RIP: 480251	 Bytes: 3
  %loadMem_480251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480251 = call %struct.Memory* @routine_addl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480251)
  store %struct.Memory* %call_480251, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 480254	 Bytes: 7
  %loadMem_480254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480254 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480254)
  store %struct.Memory* %call_480254, %struct.Memory** %MEMORY

  ; Code: jge .L_480276	 RIP: 48025b	 Bytes: 6
  %loadMem_48025b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48025b = call %struct.Memory* @routine_jge_.L_480276(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48025b, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_48025b, %struct.Memory** %MEMORY

  %loadBr_48025b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48025b = icmp eq i8 %loadBr_48025b, 1
  br i1 %cmpBr_48025b, label %block_.L_480276, label %block_480261

block_480261:
  ; Code: movl 0x725318, %eax	 RIP: 480261	 Bytes: 7
  %loadMem_480261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480261 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480261)
  store %struct.Memory* %call_480261, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %eax	 RIP: 480268	 Bytes: 3
  %loadMem_480268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480268 = call %struct.Memory* @routine_addl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480268)
  store %struct.Memory* %call_480268, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xdc(%rbp)	 RIP: 48026b	 Bytes: 6
  %loadMem_48026b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48026b = call %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48026b)
  store %struct.Memory* %call_48026b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480283	 RIP: 480271	 Bytes: 5
  %loadMem_480271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480271 = call %struct.Memory* @routine_jmpq_.L_480283(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480271, i64 18, i64 5)
  store %struct.Memory* %call_480271, %struct.Memory** %MEMORY

  br label %block_.L_480283

  ; Code: .L_480276:	 RIP: 480276	 Bytes: 0
block_.L_480276:

  ; Code: movl 0x6d32cc, %eax	 RIP: 480276	 Bytes: 7
  %loadMem_480276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480276 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480276)
  store %struct.Memory* %call_480276, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xdc(%rbp)	 RIP: 48027d	 Bytes: 6
  %loadMem_48027d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48027d = call %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48027d)
  store %struct.Memory* %call_48027d, %struct.Memory** %MEMORY

  ; Code: .L_480283:	 RIP: 480283	 Bytes: 0
  br label %block_.L_480283
block_.L_480283:

  ; Code: movl -0xdc(%rbp), %eax	 RIP: 480283	 Bytes: 6
  %loadMem_480283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480283 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480283)
  store %struct.Memory* %call_480283, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 480289	 Bytes: 7
  %loadMem_480289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480289 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480289)
  store %struct.Memory* %call_480289, %struct.Memory** %MEMORY

  ; Code: .L_480290:	 RIP: 480290	 Bytes: 0
  br label %block_.L_480290
block_.L_480290:

  ; Code: movl 0x6d32cc, %eax	 RIP: 480290	 Bytes: 7
  %loadMem_480290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480290 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480290)
  store %struct.Memory* %call_480290, %struct.Memory** %MEMORY

  ; Code: cmpl 0x724744, %eax	 RIP: 480297	 Bytes: 7
  %loadMem_480297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480297 = call %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480297)
  store %struct.Memory* %call_480297, %struct.Memory** %MEMORY

  ; Code: jge .L_4802b6	 RIP: 48029e	 Bytes: 6
  %loadMem_48029e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48029e = call %struct.Memory* @routine_jge_.L_4802b6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48029e, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_48029e, %struct.Memory** %MEMORY

  %loadBr_48029e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48029e = icmp eq i8 %loadBr_48029e, 1
  br i1 %cmpBr_48029e, label %block_.L_4802b6, label %block_4802a4

block_4802a4:
  ; Code: movl 0x6d32cc, %eax	 RIP: 4802a4	 Bytes: 7
  %loadMem_4802a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802a4 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802a4)
  store %struct.Memory* %call_4802a4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe0(%rbp)	 RIP: 4802ab	 Bytes: 6
  %loadMem_4802ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802ab = call %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802ab)
  store %struct.Memory* %call_4802ab, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4802c3	 RIP: 4802b1	 Bytes: 5
  %loadMem_4802b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802b1 = call %struct.Memory* @routine_jmpq_.L_4802c3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802b1, i64 18, i64 5)
  store %struct.Memory* %call_4802b1, %struct.Memory** %MEMORY

  br label %block_.L_4802c3

  ; Code: .L_4802b6:	 RIP: 4802b6	 Bytes: 0
block_.L_4802b6:

  ; Code: movl 0x724744, %eax	 RIP: 4802b6	 Bytes: 7
  %loadMem_4802b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802b6 = call %struct.Memory* @routine_movl_0x724744___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802b6)
  store %struct.Memory* %call_4802b6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe0(%rbp)	 RIP: 4802bd	 Bytes: 6
  %loadMem_4802bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802bd = call %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802bd)
  store %struct.Memory* %call_4802bd, %struct.Memory** %MEMORY

  ; Code: .L_4802c3:	 RIP: 4802c3	 Bytes: 0
  br label %block_.L_4802c3
block_.L_4802c3:

  ; Code: movl -0xe0(%rbp), %eax	 RIP: 4802c3	 Bytes: 6
  %loadMem_4802c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802c3 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802c3)
  store %struct.Memory* %call_4802c3, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 4802c9	 Bytes: 7
  %loadMem_4802c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802c9 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802c9)
  store %struct.Memory* %call_4802c9, %struct.Memory** %MEMORY

  ; Code: movl 0x723690, %eax	 RIP: 4802d0	 Bytes: 7
  %loadMem_4802d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802d0 = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802d0)
  store %struct.Memory* %call_4802d0, %struct.Memory** %MEMORY

  ; Code: subl 0x70fce4, %eax	 RIP: 4802d7	 Bytes: 7
  %loadMem_4802d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802d7 = call %struct.Memory* @routine_subl_0x70fce4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802d7)
  store %struct.Memory* %call_4802d7, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 4802de	 Bytes: 7
  %loadMem_4802de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802de = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802de)
  store %struct.Memory* %call_4802de, %struct.Memory** %MEMORY

  ; Code: jge .L_4802fd	 RIP: 4802e5	 Bytes: 6
  %loadMem_4802e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802e5 = call %struct.Memory* @routine_jge_.L_4802fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802e5, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_4802e5, %struct.Memory** %MEMORY

  %loadBr_4802e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4802e5 = icmp eq i8 %loadBr_4802e5, 1
  br i1 %cmpBr_4802e5, label %block_.L_4802fd, label %block_4802eb

block_4802eb:
  ; Code: movl 0x6d32cc, %eax	 RIP: 4802eb	 Bytes: 7
  %loadMem_4802eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802eb = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802eb)
  store %struct.Memory* %call_4802eb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe4(%rbp)	 RIP: 4802f2	 Bytes: 6
  %loadMem_4802f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802f2 = call %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802f2)
  store %struct.Memory* %call_4802f2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480311	 RIP: 4802f8	 Bytes: 5
  %loadMem_4802f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802f8 = call %struct.Memory* @routine_jmpq_.L_480311(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802f8, i64 25, i64 5)
  store %struct.Memory* %call_4802f8, %struct.Memory** %MEMORY

  br label %block_.L_480311

  ; Code: .L_4802fd:	 RIP: 4802fd	 Bytes: 0
block_.L_4802fd:

  ; Code: movl 0x723690, %eax	 RIP: 4802fd	 Bytes: 7
  %loadMem_4802fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4802fd = call %struct.Memory* @routine_movl_0x723690___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4802fd)
  store %struct.Memory* %call_4802fd, %struct.Memory** %MEMORY

  ; Code: subl 0x70fce4, %eax	 RIP: 480304	 Bytes: 7
  %loadMem_480304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480304 = call %struct.Memory* @routine_subl_0x70fce4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480304)
  store %struct.Memory* %call_480304, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe4(%rbp)	 RIP: 48030b	 Bytes: 6
  %loadMem_48030b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48030b = call %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48030b)
  store %struct.Memory* %call_48030b, %struct.Memory** %MEMORY

  ; Code: .L_480311:	 RIP: 480311	 Bytes: 0
  br label %block_.L_480311
block_.L_480311:

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 480311	 Bytes: 6
  %loadMem_480311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480311 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480311)
  store %struct.Memory* %call_480311, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 480317	 Bytes: 7
  %loadMem_480317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480317 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480317)
  store %struct.Memory* %call_480317, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 48031e	 Bytes: 8
  %loadMem_48031e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48031e = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48031e)
  store %struct.Memory* %call_48031e, %struct.Memory** %MEMORY

  ; Code: movl 0xcb0(%rcx), %eax	 RIP: 480326	 Bytes: 6
  %loadMem_480326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480326 = call %struct.Memory* @routine_movl_0xcb0__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480326)
  store %struct.Memory* %call_480326, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6f8ed8, %eax	 RIP: 48032c	 Bytes: 7
  %loadMem_48032c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48032c = call %struct.Memory* @routine_cmpl_0x6f8ed8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48032c)
  store %struct.Memory* %call_48032c, %struct.Memory** %MEMORY

  ; Code: jl .L_480384	 RIP: 480333	 Bytes: 6
  %loadMem_480333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480333 = call %struct.Memory* @routine_jl_.L_480384(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480333, i8* %BRANCH_TAKEN, i64 81, i64 6, i64 6)
  store %struct.Memory* %call_480333, %struct.Memory** %MEMORY

  %loadBr_480333 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480333 = icmp eq i8 %loadBr_480333, 1
  br i1 %cmpBr_480333, label %block_.L_480384, label %block_480339

block_480339:
  ; Code: movl 0x725318, %eax	 RIP: 480339	 Bytes: 7
  %loadMem_480339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480339 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480339)
  store %struct.Memory* %call_480339, %struct.Memory** %MEMORY

  ; Code: subl $0x6, %eax	 RIP: 480340	 Bytes: 3
  %loadMem_480340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480340 = call %struct.Memory* @routine_subl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480340)
  store %struct.Memory* %call_480340, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 480343	 Bytes: 7
  %loadMem_480343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480343 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480343)
  store %struct.Memory* %call_480343, %struct.Memory** %MEMORY

  ; Code: jge .L_480362	 RIP: 48034a	 Bytes: 6
  %loadMem_48034a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48034a = call %struct.Memory* @routine_jge_.L_480362(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48034a, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_48034a, %struct.Memory** %MEMORY

  %loadBr_48034a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48034a = icmp eq i8 %loadBr_48034a, 1
  br i1 %cmpBr_48034a, label %block_.L_480362, label %block_480350

block_480350:
  ; Code: movl 0x6d32cc, %eax	 RIP: 480350	 Bytes: 7
  %loadMem_480350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480350 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480350)
  store %struct.Memory* %call_480350, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe8(%rbp)	 RIP: 480357	 Bytes: 6
  %loadMem_480357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480357 = call %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480357)
  store %struct.Memory* %call_480357, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480372	 RIP: 48035d	 Bytes: 5
  %loadMem_48035d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48035d = call %struct.Memory* @routine_jmpq_.L_480372(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48035d, i64 21, i64 5)
  store %struct.Memory* %call_48035d, %struct.Memory** %MEMORY

  br label %block_.L_480372

  ; Code: .L_480362:	 RIP: 480362	 Bytes: 0
block_.L_480362:

  ; Code: movl 0x725318, %eax	 RIP: 480362	 Bytes: 7
  %loadMem_480362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480362 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480362)
  store %struct.Memory* %call_480362, %struct.Memory** %MEMORY

  ; Code: subl $0x6, %eax	 RIP: 480369	 Bytes: 3
  %loadMem_480369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480369 = call %struct.Memory* @routine_subl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480369)
  store %struct.Memory* %call_480369, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe8(%rbp)	 RIP: 48036c	 Bytes: 6
  %loadMem_48036c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48036c = call %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48036c)
  store %struct.Memory* %call_48036c, %struct.Memory** %MEMORY

  ; Code: .L_480372:	 RIP: 480372	 Bytes: 0
  br label %block_.L_480372
block_.L_480372:

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 480372	 Bytes: 6
  %loadMem_480372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480372 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480372)
  store %struct.Memory* %call_480372, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 480378	 Bytes: 7
  %loadMem_480378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480378 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480378)
  store %struct.Memory* %call_480378, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4803ca	 RIP: 48037f	 Bytes: 5
  %loadMem_48037f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48037f = call %struct.Memory* @routine_jmpq_.L_4803ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48037f, i64 75, i64 5)
  store %struct.Memory* %call_48037f, %struct.Memory** %MEMORY

  br label %block_.L_4803ca

  ; Code: .L_480384:	 RIP: 480384	 Bytes: 0
block_.L_480384:

  ; Code: movl 0x725318, %eax	 RIP: 480384	 Bytes: 7
  %loadMem_480384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480384 = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480384)
  store %struct.Memory* %call_480384, %struct.Memory** %MEMORY

  ; Code: subl $0x3, %eax	 RIP: 48038b	 Bytes: 3
  %loadMem_48038b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48038b = call %struct.Memory* @routine_subl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48038b)
  store %struct.Memory* %call_48038b, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 48038e	 Bytes: 7
  %loadMem_48038e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48038e = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48038e)
  store %struct.Memory* %call_48038e, %struct.Memory** %MEMORY

  ; Code: jge .L_4803ad	 RIP: 480395	 Bytes: 6
  %loadMem_480395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480395 = call %struct.Memory* @routine_jge_.L_4803ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480395, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_480395, %struct.Memory** %MEMORY

  %loadBr_480395 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480395 = icmp eq i8 %loadBr_480395, 1
  br i1 %cmpBr_480395, label %block_.L_4803ad, label %block_48039b

block_48039b:
  ; Code: movl 0x6d32cc, %eax	 RIP: 48039b	 Bytes: 7
  %loadMem_48039b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48039b = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48039b)
  store %struct.Memory* %call_48039b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xec(%rbp)	 RIP: 4803a2	 Bytes: 6
  %loadMem_4803a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803a2 = call %struct.Memory* @routine_movl__eax__MINUS0xec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803a2)
  store %struct.Memory* %call_4803a2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4803bd	 RIP: 4803a8	 Bytes: 5
  %loadMem_4803a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803a8 = call %struct.Memory* @routine_jmpq_.L_4803bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803a8, i64 21, i64 5)
  store %struct.Memory* %call_4803a8, %struct.Memory** %MEMORY

  br label %block_.L_4803bd

  ; Code: .L_4803ad:	 RIP: 4803ad	 Bytes: 0
block_.L_4803ad:

  ; Code: movl 0x725318, %eax	 RIP: 4803ad	 Bytes: 7
  %loadMem_4803ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803ad = call %struct.Memory* @routine_movl_0x725318___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803ad)
  store %struct.Memory* %call_4803ad, %struct.Memory** %MEMORY

  ; Code: subl $0x3, %eax	 RIP: 4803b4	 Bytes: 3
  %loadMem_4803b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803b4 = call %struct.Memory* @routine_subl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803b4)
  store %struct.Memory* %call_4803b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xec(%rbp)	 RIP: 4803b7	 Bytes: 6
  %loadMem_4803b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803b7 = call %struct.Memory* @routine_movl__eax__MINUS0xec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803b7)
  store %struct.Memory* %call_4803b7, %struct.Memory** %MEMORY

  ; Code: .L_4803bd:	 RIP: 4803bd	 Bytes: 0
  br label %block_.L_4803bd
block_.L_4803bd:

  ; Code: movl -0xec(%rbp), %eax	 RIP: 4803bd	 Bytes: 6
  %loadMem_4803bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803bd = call %struct.Memory* @routine_movl_MINUS0xec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803bd)
  store %struct.Memory* %call_4803bd, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 4803c3	 Bytes: 7
  %loadMem_4803c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803c3 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803c3)
  store %struct.Memory* %call_4803c3, %struct.Memory** %MEMORY

  ; Code: .L_4803ca:	 RIP: 4803ca	 Bytes: 0
  br label %block_.L_4803ca
block_.L_4803ca:

  ; Code: movl 0x710364, %eax	 RIP: 4803ca	 Bytes: 7
  %loadMem_4803ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803ca = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803ca)
  store %struct.Memory* %call_4803ca, %struct.Memory** %MEMORY

  ; Code: cmpl 0x6d32cc, %eax	 RIP: 4803d1	 Bytes: 7
  %loadMem_4803d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803d1 = call %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803d1)
  store %struct.Memory* %call_4803d1, %struct.Memory** %MEMORY

  ; Code: jge .L_4803f0	 RIP: 4803d8	 Bytes: 6
  %loadMem_4803d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803d8 = call %struct.Memory* @routine_jge_.L_4803f0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803d8, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_4803d8, %struct.Memory** %MEMORY

  %loadBr_4803d8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4803d8 = icmp eq i8 %loadBr_4803d8, 1
  br i1 %cmpBr_4803d8, label %block_.L_4803f0, label %block_4803de

block_4803de:
  ; Code: movl 0x6d32cc, %eax	 RIP: 4803de	 Bytes: 7
  %loadMem_4803de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803de = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803de)
  store %struct.Memory* %call_4803de, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf0(%rbp)	 RIP: 4803e5	 Bytes: 6
  %loadMem_4803e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803e5 = call %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803e5)
  store %struct.Memory* %call_4803e5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4803fd	 RIP: 4803eb	 Bytes: 5
  %loadMem_4803eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803eb = call %struct.Memory* @routine_jmpq_.L_4803fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803eb, i64 18, i64 5)
  store %struct.Memory* %call_4803eb, %struct.Memory** %MEMORY

  br label %block_.L_4803fd

  ; Code: .L_4803f0:	 RIP: 4803f0	 Bytes: 0
block_.L_4803f0:

  ; Code: movl 0x710364, %eax	 RIP: 4803f0	 Bytes: 7
  %loadMem_4803f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803f0 = call %struct.Memory* @routine_movl_0x710364___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803f0)
  store %struct.Memory* %call_4803f0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf0(%rbp)	 RIP: 4803f7	 Bytes: 6
  %loadMem_4803f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803f7 = call %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803f7)
  store %struct.Memory* %call_4803f7, %struct.Memory** %MEMORY

  ; Code: .L_4803fd:	 RIP: 4803fd	 Bytes: 0
  br label %block_.L_4803fd
block_.L_4803fd:

  ; Code: movl -0xf0(%rbp), %eax	 RIP: 4803fd	 Bytes: 6
  %loadMem_4803fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4803fd = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4803fd)
  store %struct.Memory* %call_4803fd, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d32cc	 RIP: 480403	 Bytes: 7
  %loadMem_480403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480403 = call %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480403)
  store %struct.Memory* %call_480403, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 48040a	 Bytes: 7
  %loadMem_48040a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48040a = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48040a)
  store %struct.Memory* %call_48040a, %struct.Memory** %MEMORY

  ; Code: addl 0x722b78, %eax	 RIP: 480411	 Bytes: 7
  %loadMem_480411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480411 = call %struct.Memory* @routine_addl_0x722b78___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480411)
  store %struct.Memory* %call_480411, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722b78	 RIP: 480418	 Bytes: 7
  %loadMem_480418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480418 = call %struct.Memory* @routine_movl__eax__0x722b78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480418)
  store %struct.Memory* %call_480418, %struct.Memory** %MEMORY

  ; Code: movl 0x6d32cc, %eax	 RIP: 48041f	 Bytes: 7
  %loadMem_48041f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48041f = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48041f)
  store %struct.Memory* %call_48041f, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1278	 RIP: 480426	 Bytes: 7
  %loadMem_480426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480426 = call %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480426)
  store %struct.Memory* %call_480426, %struct.Memory** %MEMORY

  ; Code: movl 0x6f9688, %eax	 RIP: 48042d	 Bytes: 7
  %loadMem_48042d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48042d = call %struct.Memory* @routine_movl_0x6f9688___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48042d)
  store %struct.Memory* %call_48042d, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 480434	 Bytes: 3
  %loadMem_480434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480434 = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480434)
  store %struct.Memory* %call_480434, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9688	 RIP: 480437	 Bytes: 7
  %loadMem_480437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480437 = call %struct.Memory* @routine_movl__eax__0x6f9688(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480437)
  store %struct.Memory* %call_480437, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x6f9688	 RIP: 48043e	 Bytes: 8
  %loadMem_48043e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48043e = call %struct.Memory* @routine_cmpl__0x0__0x6f9688(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48043e)
  store %struct.Memory* %call_48043e, %struct.Memory** %MEMORY

  ; Code: jne .L_48064b	 RIP: 480446	 Bytes: 6
  %loadMem_480446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480446 = call %struct.Memory* @routine_jne_.L_48064b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480446, i8* %BRANCH_TAKEN, i64 517, i64 6, i64 6)
  store %struct.Memory* %call_480446, %struct.Memory** %MEMORY

  %loadBr_480446 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480446 = icmp eq i8 %loadBr_480446, 1
  br i1 %cmpBr_480446, label %block_.L_48064b, label %block_48044c

block_48044c:
  ; Code: movq 0x6cb900, %rax	 RIP: 48044c	 Bytes: 8
  %loadMem_48044c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48044c = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48044c)
  store %struct.Memory* %call_48044c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x18(%rax)	 RIP: 480454	 Bytes: 4
  %loadMem_480454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480454 = call %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480454)
  store %struct.Memory* %call_480454, %struct.Memory** %MEMORY

  ; Code: jne .L_48064b	 RIP: 480458	 Bytes: 6
  %loadMem_480458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480458 = call %struct.Memory* @routine_jne_.L_48064b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480458, i8* %BRANCH_TAKEN, i64 499, i64 6, i64 6)
  store %struct.Memory* %call_480458, %struct.Memory** %MEMORY

  %loadBr_480458 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480458 = icmp eq i8 %loadBr_480458, 1
  br i1 %cmpBr_480458, label %block_.L_48064b, label %block_48045e

block_48045e:
  ; Code: cmpl $0x0, -0x8(%rbp)	 RIP: 48045e	 Bytes: 4
  %loadMem_48045e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48045e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48045e)
  store %struct.Memory* %call_48045e, %struct.Memory** %MEMORY

  ; Code: je .L_48047d	 RIP: 480462	 Bytes: 6
  %loadMem_480462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480462 = call %struct.Memory* @routine_je_.L_48047d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480462, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_480462, %struct.Memory** %MEMORY

  %loadBr_480462 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480462 = icmp eq i8 %loadBr_480462, 1
  br i1 %cmpBr_480462, label %block_.L_48047d, label %block_480468

block_480468:
  ; Code: movq 0x6cb900, %rax	 RIP: 480468	 Bytes: 8
  %loadMem_480468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480468 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480468)
  store %struct.Memory* %call_480468, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 480470	 Bytes: 7
  %loadMem_480470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480470 = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480470)
  store %struct.Memory* %call_480470, %struct.Memory** %MEMORY

  ; Code: jne .L_480646	 RIP: 480477	 Bytes: 6
  %loadMem_480477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480477 = call %struct.Memory* @routine_jne_.L_480646(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480477, i8* %BRANCH_TAKEN, i64 463, i64 6, i64 6)
  store %struct.Memory* %call_480477, %struct.Memory** %MEMORY

  %loadBr_480477 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480477 = icmp eq i8 %loadBr_480477, 1
  br i1 %cmpBr_480477, label %block_.L_480646, label %block_.L_48047d

  ; Code: .L_48047d:	 RIP: 48047d	 Bytes: 0
block_.L_48047d:

  ; Code: movq 0x722cb0, %rax	 RIP: 48047d	 Bytes: 8
  %loadMem_48047d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48047d = call %struct.Memory* @routine_movq_0x722cb0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48047d)
  store %struct.Memory* %call_48047d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x47c(%rax)	 RIP: 480485	 Bytes: 7
  %loadMem_480485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480485 = call %struct.Memory* @routine_cmpl__0x0__0x47c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480485)
  store %struct.Memory* %call_480485, %struct.Memory** %MEMORY

  ; Code: jne .L_4804a7	 RIP: 48048c	 Bytes: 6
  %loadMem_48048c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48048c = call %struct.Memory* @routine_jne_.L_4804a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48048c, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_48048c, %struct.Memory** %MEMORY

  %loadBr_48048c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48048c = icmp eq i8 %loadBr_48048c, 1
  br i1 %cmpBr_48048c, label %block_.L_4804a7, label %block_480492

block_480492:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 480492	 Bytes: 8
  %loadMem_480492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480492 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480492)
  store %struct.Memory* %call_480492, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0xb40(%rax)	 RIP: 48049a	 Bytes: 7
  %loadMem_48049a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48049a = call %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48049a)
  store %struct.Memory* %call_48049a, %struct.Memory** %MEMORY

  ; Code: jne .L_480559	 RIP: 4804a1	 Bytes: 6
  %loadMem_4804a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804a1 = call %struct.Memory* @routine_jne_.L_480559(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804a1, i8* %BRANCH_TAKEN, i64 184, i64 6, i64 6)
  store %struct.Memory* %call_4804a1, %struct.Memory** %MEMORY

  %loadBr_4804a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4804a1 = icmp eq i8 %loadBr_4804a1, 1
  br i1 %cmpBr_4804a1, label %block_.L_480559, label %block_.L_4804a7

  ; Code: .L_4804a7:	 RIP: 4804a7	 Bytes: 0
block_.L_4804a7:

  ; Code: movsd 0x313d9(%rip), %xmm0	 RIP: 4804a7	 Bytes: 8
  %loadMem_4804a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804a7 = call %struct.Memory* @routine_movsd_0x313d9__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804a7)
  store %struct.Memory* %call_4804a7, %struct.Memory** %MEMORY

  ; Code: movsd 0x313a9(%rip), %xmm1	 RIP: 4804af	 Bytes: 8
  %loadMem_4804af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804af = call %struct.Memory* @routine_movsd_0x313a9__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804af)
  store %struct.Memory* %call_4804af, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x722b78, %xmm2	 RIP: 4804b7	 Bytes: 9
  %loadMem_4804b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804b7 = call %struct.Memory* @routine_cvtsi2sdl_0x722b78___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804b7)
  store %struct.Memory* %call_4804b7, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 4804c0	 Bytes: 4
  %loadMem_4804c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804c0 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804c0)
  store %struct.Memory* %call_4804c0, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x6f80a0, %xmm2	 RIP: 4804c4	 Bytes: 9
  %loadMem_4804c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804c4 = call %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804c4)
  store %struct.Memory* %call_4804c4, %struct.Memory** %MEMORY

  ; Code: divsd %xmm2, %xmm1	 RIP: 4804cd	 Bytes: 4
  %loadMem_4804cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804cd = call %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804cd)
  store %struct.Memory* %call_4804cd, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 4804d1	 Bytes: 4
  %loadMem_4804d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804d1 = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804d1)
  store %struct.Memory* %call_4804d1, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 4804d5	 Bytes: 4
  %loadMem_4804d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804d5 = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804d5)
  store %struct.Memory* %call_4804d5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 4804d9	 Bytes: 3
  %loadMem_4804d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804d9 = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804d9)
  store %struct.Memory* %call_4804d9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4804dc	 Bytes: 8
  %loadMem_4804dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804dc = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804dc)
  store %struct.Memory* %call_4804dc, %struct.Memory** %MEMORY

  ; Code: movl 0x11b80(%rcx), %eax	 RIP: 4804e4	 Bytes: 6
  %loadMem_4804e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804e4 = call %struct.Memory* @routine_movl_0x11b80__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804e4)
  store %struct.Memory* %call_4804e4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 4804ea	 Bytes: 8
  %loadMem_4804ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804ea = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804ea)
  store %struct.Memory* %call_4804ea, %struct.Memory** %MEMORY

  ; Code: movl 0x4c8(%rcx), %edx	 RIP: 4804f2	 Bytes: 6
  %loadMem_4804f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804f2 = call %struct.Memory* @routine_movl_0x4c8__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804f2)
  store %struct.Memory* %call_4804f2, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %edx	 RIP: 4804f8	 Bytes: 3
  %loadMem_4804f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804f8 = call %struct.Memory* @routine_subl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804f8)
  store %struct.Memory* %call_4804f8, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 4804fb	 Bytes: 2
  %loadMem_4804fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804fb = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804fb)
  store %struct.Memory* %call_4804fb, %struct.Memory** %MEMORY

  ; Code: jne .L_48050d	 RIP: 4804fd	 Bytes: 6
  %loadMem_4804fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4804fd = call %struct.Memory* @routine_jne_.L_48050d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4804fd, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_4804fd, %struct.Memory** %MEMORY

  %loadBr_4804fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4804fd = icmp eq i8 %loadBr_4804fd, 1
  br i1 %cmpBr_4804fd, label %block_.L_48050d, label %block_480503

block_480503:
  ; Code: movl -0x20(%rbp), %eax	 RIP: 480503	 Bytes: 3
  %loadMem_480503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480503 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480503)
  store %struct.Memory* %call_480503, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9348	 RIP: 480506	 Bytes: 7
  %loadMem_480506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480506 = call %struct.Memory* @routine_movl__eax__0x6f9348(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480506)
  store %struct.Memory* %call_480506, %struct.Memory** %MEMORY

  ; Code: .L_48050d:	 RIP: 48050d	 Bytes: 0
  br label %block_.L_48050d
block_.L_48050d:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 48050d	 Bytes: 3
  %loadMem_48050d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48050d = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48050d)
  store %struct.Memory* %call_48050d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 480510	 Bytes: 8
  %loadMem_480510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480510 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480510)
  store %struct.Memory* %call_480510, %struct.Memory** %MEMORY

  ; Code: addl 0x11b7c(%rcx), %eax	 RIP: 480518	 Bytes: 6
  %loadMem_480518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480518 = call %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480518)
  store %struct.Memory* %call_480518, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x11b7c(%rcx)	 RIP: 48051e	 Bytes: 6
  %loadMem_48051e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48051e = call %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48051e)
  store %struct.Memory* %call_48051e, %struct.Memory** %MEMORY

  ; Code: movl 0x70d190, %eax	 RIP: 480524	 Bytes: 7
  %loadMem_480524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480524 = call %struct.Memory* @routine_movl_0x70d190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480524)
  store %struct.Memory* %call_480524, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6cd3a8	 RIP: 48052b	 Bytes: 7
  %loadMem_48052b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48052b = call %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48052b)
  store %struct.Memory* %call_48052b, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 480532	 Bytes: 3
  %loadMem_480532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480532 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480532)
  store %struct.Memory* %call_480532, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x70d190	 RIP: 480535	 Bytes: 7
  %loadMem_480535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480535 = call %struct.Memory* @routine_movl__eax__0x70d190(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480535)
  store %struct.Memory* %call_480535, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 48053c	 Bytes: 3
  %loadMem_48053c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48053c = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48053c)
  store %struct.Memory* %call_48053c, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x725318	 RIP: 48053f	 Bytes: 7
  %loadMem_48053f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48053f = call %struct.Memory* @routine_movl__eax__0x725318(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48053f)
  store %struct.Memory* %call_48053f, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 480546	 Bytes: 7
  %loadMem_480546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480546 = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480546)
  store %struct.Memory* %call_480546, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x722c78	 RIP: 48054d	 Bytes: 7
  %loadMem_48054d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48054d = call %struct.Memory* @routine_movl__eax__0x722c78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48054d)
  store %struct.Memory* %call_48054d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480641	 RIP: 480554	 Bytes: 5
  %loadMem_480554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480554 = call %struct.Memory* @routine_jmpq_.L_480641(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480554, i64 237, i64 5)
  store %struct.Memory* %call_480554, %struct.Memory** %MEMORY

  br label %block_.L_480641

  ; Code: .L_480559:	 RIP: 480559	 Bytes: 0
block_.L_480559:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 480559	 Bytes: 8
  %loadMem_480559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480559 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480559)
  store %struct.Memory* %call_480559, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0xb40(%rax)	 RIP: 480561	 Bytes: 7
  %loadMem_480561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480561 = call %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480561)
  store %struct.Memory* %call_480561, %struct.Memory** %MEMORY

  ; Code: je .L_480583	 RIP: 480568	 Bytes: 6
  %loadMem_480568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480568 = call %struct.Memory* @routine_je_.L_480583(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480568, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_480568, %struct.Memory** %MEMORY

  %loadBr_480568 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480568 = icmp eq i8 %loadBr_480568, 1
  br i1 %cmpBr_480568, label %block_.L_480583, label %block_48056e

block_48056e:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 48056e	 Bytes: 8
  %loadMem_48056e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48056e = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48056e)
  store %struct.Memory* %call_48056e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb44(%rax)	 RIP: 480576	 Bytes: 7
  %loadMem_480576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480576 = call %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480576)
  store %struct.Memory* %call_480576, %struct.Memory** %MEMORY

  ; Code: je .L_48063c	 RIP: 48057d	 Bytes: 6
  %loadMem_48057d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48057d = call %struct.Memory* @routine_je_.L_48063c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48057d, i8* %BRANCH_TAKEN, i64 191, i64 6, i64 6)
  store %struct.Memory* %call_48057d, %struct.Memory** %MEMORY

  %loadBr_48057d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48057d = icmp eq i8 %loadBr_48057d, 1
  br i1 %cmpBr_48057d, label %block_.L_48063c, label %block_.L_480583

  ; Code: .L_480583:	 RIP: 480583	 Bytes: 0
block_.L_480583:

  ; Code: movq 0x6cb900, %rax	 RIP: 480583	 Bytes: 8
  %loadMem_480583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480583 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480583)
  store %struct.Memory* %call_480583, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11b98(%rax)	 RIP: 48058b	 Bytes: 7
  %loadMem_48058b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48058b = call %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48058b)
  store %struct.Memory* %call_48058b, %struct.Memory** %MEMORY

  ; Code: jne .L_4805ea	 RIP: 480592	 Bytes: 6
  %loadMem_480592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480592 = call %struct.Memory* @routine_jne_.L_4805ea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480592, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_480592, %struct.Memory** %MEMORY

  %loadBr_480592 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480592 = icmp eq i8 %loadBr_480592, 1
  br i1 %cmpBr_480592, label %block_.L_4805ea, label %block_480598

block_480598:
  ; Code: movsd 0x312e8(%rip), %xmm0	 RIP: 480598	 Bytes: 8
  %loadMem_480598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480598 = call %struct.Memory* @routine_movsd_0x312e8__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480598)
  store %struct.Memory* %call_480598, %struct.Memory** %MEMORY

  ; Code: movsd 0x312b8(%rip), %xmm1	 RIP: 4805a0	 Bytes: 8
  %loadMem_4805a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805a0 = call %struct.Memory* @routine_movsd_0x312b8__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805a0)
  store %struct.Memory* %call_4805a0, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x722b78, %xmm2	 RIP: 4805a8	 Bytes: 9
  %loadMem_4805a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805a8 = call %struct.Memory* @routine_cvtsi2sdl_0x722b78___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805a8)
  store %struct.Memory* %call_4805a8, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 4805b1	 Bytes: 4
  %loadMem_4805b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805b1 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805b1)
  store %struct.Memory* %call_4805b1, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x6f80a0, %xmm2	 RIP: 4805b5	 Bytes: 9
  %loadMem_4805b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805b5 = call %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805b5)
  store %struct.Memory* %call_4805b5, %struct.Memory** %MEMORY

  ; Code: divsd %xmm2, %xmm1	 RIP: 4805be	 Bytes: 4
  %loadMem_4805be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805be = call %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805be)
  store %struct.Memory* %call_4805be, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 4805c2	 Bytes: 4
  %loadMem_4805c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805c2 = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805c2)
  store %struct.Memory* %call_4805c2, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 4805c6	 Bytes: 4
  %loadMem_4805c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805c6 = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805c6)
  store %struct.Memory* %call_4805c6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 4805ca	 Bytes: 3
  %loadMem_4805ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805ca = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805ca)
  store %struct.Memory* %call_4805ca, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 4805cd	 Bytes: 3
  %loadMem_4805cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805cd = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805cd)
  store %struct.Memory* %call_4805cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6f9708	 RIP: 4805d0	 Bytes: 7
  %loadMem_4805d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805d0 = call %struct.Memory* @routine_movl__eax__0x6f9708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805d0)
  store %struct.Memory* %call_4805d0, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 4805d7	 Bytes: 7
  %loadMem_4805d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805d7 = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805d7)
  store %struct.Memory* %call_4805d7, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x7107a4	 RIP: 4805de	 Bytes: 7
  %loadMem_4805de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805de = call %struct.Memory* @routine_movl__eax__0x7107a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805de)
  store %struct.Memory* %call_4805de, %struct.Memory** %MEMORY

  ; Code: jmpq .L_480637	 RIP: 4805e5	 Bytes: 5
  %loadMem_4805e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805e5 = call %struct.Memory* @routine_jmpq_.L_480637(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805e5, i64 82, i64 5)
  store %struct.Memory* %call_4805e5, %struct.Memory** %MEMORY

  br label %block_.L_480637

  ; Code: .L_4805ea:	 RIP: 4805ea	 Bytes: 0
block_.L_4805ea:

  ; Code: movsd 0x31296(%rip), %xmm0	 RIP: 4805ea	 Bytes: 8
  %loadMem_4805ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805ea = call %struct.Memory* @routine_movsd_0x31296__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805ea)
  store %struct.Memory* %call_4805ea, %struct.Memory** %MEMORY

  ; Code: movsd 0x31266(%rip), %xmm1	 RIP: 4805f2	 Bytes: 8
  %loadMem_4805f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805f2 = call %struct.Memory* @routine_movsd_0x31266__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805f2)
  store %struct.Memory* %call_4805f2, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x722b78, %xmm2	 RIP: 4805fa	 Bytes: 9
  %loadMem_4805fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4805fa = call %struct.Memory* @routine_cvtsi2sdl_0x722b78___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4805fa)
  store %struct.Memory* %call_4805fa, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 480603	 Bytes: 4
  %loadMem_480603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480603 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480603)
  store %struct.Memory* %call_480603, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl 0x6f80a0, %xmm2	 RIP: 480607	 Bytes: 9
  %loadMem_480607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480607 = call %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480607)
  store %struct.Memory* %call_480607, %struct.Memory** %MEMORY

  ; Code: divsd %xmm2, %xmm1	 RIP: 480610	 Bytes: 4
  %loadMem_480610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480610 = call %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480610)
  store %struct.Memory* %call_480610, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 480614	 Bytes: 4
  %loadMem_480614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480614 = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480614)
  store %struct.Memory* %call_480614, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %eax	 RIP: 480618	 Bytes: 4
  %loadMem_480618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480618 = call %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480618)
  store %struct.Memory* %call_480618, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 48061c	 Bytes: 3
  %loadMem_48061c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48061c = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48061c)
  store %struct.Memory* %call_48061c, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 48061f	 Bytes: 3
  %loadMem_48061f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48061f = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48061f)
  store %struct.Memory* %call_48061f, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x7236c0	 RIP: 480622	 Bytes: 7
  %loadMem_480622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480622 = call %struct.Memory* @routine_movl__eax__0x7236c0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480622)
  store %struct.Memory* %call_480622, %struct.Memory** %MEMORY

  ; Code: movl 0x723698, %eax	 RIP: 480629	 Bytes: 7
  %loadMem_480629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480629 = call %struct.Memory* @routine_movl_0x723698___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480629)
  store %struct.Memory* %call_480629, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x6d1f88	 RIP: 480630	 Bytes: 7
  %loadMem_480630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480630 = call %struct.Memory* @routine_movl__eax__0x6d1f88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480630)
  store %struct.Memory* %call_480630, %struct.Memory** %MEMORY

  ; Code: .L_480637:	 RIP: 480637	 Bytes: 0
  br label %block_.L_480637
block_.L_480637:

  ; Code: jmpq .L_48063c	 RIP: 480637	 Bytes: 5
  %loadMem_480637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480637 = call %struct.Memory* @routine_jmpq_.L_48063c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480637, i64 5, i64 5)
  store %struct.Memory* %call_480637, %struct.Memory** %MEMORY

  br label %block_.L_48063c

  ; Code: .L_48063c:	 RIP: 48063c	 Bytes: 0
block_.L_48063c:

  ; Code: jmpq .L_480641	 RIP: 48063c	 Bytes: 5
  %loadMem_48063c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48063c = call %struct.Memory* @routine_jmpq_.L_480641(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48063c, i64 5, i64 5)
  store %struct.Memory* %call_48063c, %struct.Memory** %MEMORY

  br label %block_.L_480641

  ; Code: .L_480641:	 RIP: 480641	 Bytes: 0
block_.L_480641:

  ; Code: jmpq .L_480646	 RIP: 480641	 Bytes: 5
  %loadMem_480641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480641 = call %struct.Memory* @routine_jmpq_.L_480646(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480641, i64 5, i64 5)
  store %struct.Memory* %call_480641, %struct.Memory** %MEMORY

  br label %block_.L_480646

  ; Code: .L_480646:	 RIP: 480646	 Bytes: 0
block_.L_480646:

  ; Code: jmpq .L_48064b	 RIP: 480646	 Bytes: 5
  %loadMem_480646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480646 = call %struct.Memory* @routine_jmpq_.L_48064b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480646, i64 5, i64 5)
  store %struct.Memory* %call_480646, %struct.Memory** %MEMORY

  br label %block_.L_48064b

  ; Code: .L_48064b:	 RIP: 48064b	 Bytes: 0
block_.L_48064b:

  ; Code: movl 0x6d32cc, %eax	 RIP: 48064b	 Bytes: 7
  %loadMem_48064b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48064b = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48064b)
  store %struct.Memory* %call_48064b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 480652	 Bytes: 3
  %loadMem_480652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480652 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480652)
  store %struct.Memory* %call_480652, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48067d	 RIP: 480655	 Bytes: 5
  %loadMem_480655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480655 = call %struct.Memory* @routine_jmpq_.L_48067d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480655, i64 40, i64 5)
  store %struct.Memory* %call_480655, %struct.Memory** %MEMORY

  br label %block_.L_48067d

  ; Code: .L_48065a:	 RIP: 48065a	 Bytes: 0
block_.L_48065a:

  ; Code: jmpq .L_48065f	 RIP: 48065a	 Bytes: 5
  %loadMem_48065a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48065a = call %struct.Memory* @routine_jmpq_.L_48065f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48065a, i64 5, i64 5)
  store %struct.Memory* %call_48065a, %struct.Memory** %MEMORY

  br label %block_.L_48065f

  ; Code: .L_48065f:	 RIP: 48065f	 Bytes: 0
block_.L_48065f:

  ; Code: jmpq .L_480664	 RIP: 48065f	 Bytes: 5
  %loadMem_48065f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48065f = call %struct.Memory* @routine_jmpq_.L_480664(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48065f, i64 5, i64 5)
  store %struct.Memory* %call_48065f, %struct.Memory** %MEMORY

  br label %block_.L_480664

  ; Code: .L_480664:	 RIP: 480664	 Bytes: 0
block_.L_480664:

  ; Code: jmpq .L_480669	 RIP: 480664	 Bytes: 5
  %loadMem_480664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480664 = call %struct.Memory* @routine_jmpq_.L_480669(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480664, i64 5, i64 5)
  store %struct.Memory* %call_480664, %struct.Memory** %MEMORY

  br label %block_.L_480669

  ; Code: .L_480669:	 RIP: 480669	 Bytes: 0
block_.L_480669:

  ; Code: jmpq .L_48066e	 RIP: 480669	 Bytes: 5
  %loadMem_480669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480669 = call %struct.Memory* @routine_jmpq_.L_48066e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480669, i64 5, i64 5)
  store %struct.Memory* %call_480669, %struct.Memory** %MEMORY

  br label %block_.L_48066e

  ; Code: .L_48066e:	 RIP: 48066e	 Bytes: 0
block_.L_48066e:

  ; Code: jmpq .L_480673	 RIP: 48066e	 Bytes: 5
  %loadMem_48066e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48066e = call %struct.Memory* @routine_jmpq_.L_480673(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48066e, i64 5, i64 5)
  store %struct.Memory* %call_48066e, %struct.Memory** %MEMORY

  br label %block_.L_480673

  ; Code: .L_480673:	 RIP: 480673	 Bytes: 0
block_.L_480673:

  ; Code: movl 0x6d32cc, %eax	 RIP: 480673	 Bytes: 7
  %loadMem_480673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480673 = call %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480673)
  store %struct.Memory* %call_480673, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 48067a	 Bytes: 3
  %loadMem_48067a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48067a = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48067a)
  store %struct.Memory* %call_48067a, %struct.Memory** %MEMORY

  ; Code: .L_48067d:	 RIP: 48067d	 Bytes: 0
  br label %block_.L_48067d
block_.L_48067d:

  ; Code: movl -0x4(%rbp), %eax	 RIP: 48067d	 Bytes: 3
  %loadMem_48067d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48067d = call %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48067d)
  store %struct.Memory* %call_48067d, %struct.Memory** %MEMORY

  ; Code: addq $0xf0, %rsp	 RIP: 480680	 Bytes: 7
  %loadMem_480680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480680 = call %struct.Memory* @routine_addq__0xf0___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480680)
  store %struct.Memory* %call_480680, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 480687	 Bytes: 1
  %loadMem_480687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480687 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480687)
  store %struct.Memory* %call_480687, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 480688	 Bytes: 1
  %loadMem_480688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_480688 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_480688)
  store %struct.Memory* %call_480688, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_480688
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0xf0___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 240)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_0x11bac__rax____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72620
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_0x11ba0__rax____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 72608
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_47ede7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e1af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72600
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47ed3c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e1de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x6cd474___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cd474_type* @G_0x6cd474 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x6d32cc(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d32cc_type* @G_0x6d32cc to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x6d32cc___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6d32cc_type* @G_0x6d32cc to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_48067d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e753(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x1__0x4d4__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e365(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_47e22f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_47e2a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47e29b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x1__0x11b9c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72604
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e27a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x70d190___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x70d190_type* @G_0x70d190 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x6cd3a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6cd3a8_type* @G_0x6cd3a8 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x6f9708___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6f9708_type* @G_0x6f9708 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x70d190(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x70d190_type* @G_0x70d190 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47e296(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_0x7236c0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x7236c0_type* @G_0x7236c0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_jmpq_.L_47e29b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47e2a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_0x6cd3a8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cd3a8_type* @G_0x6cd3a8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl_0x70d190___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x70d190_type* @G_0x70d190 to i64))
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e2ca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_47e2f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x6cd3a8___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cd3a8_type* @G_0x6cd3a8 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_0x70d190___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x70d190_type* @G_0x70d190 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl_0x724744___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x724744_type* @G_0x724744 to i64))
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_47e315(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47e31f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_0x724744___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x724744_type* @G_0x724744 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x710364___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x710364_type* @G_0x710364 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl_0x6d32cc___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x6d32cc_type* @G_0x6d32cc to i64))
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_47e34c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47e356(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_47e744(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_0x70fce0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x70fce0_type* @G_0x70fce0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = inttoptr i64 %2 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  %15 = shl  i64 %11, 32
  %16 = or i64 %15, %7
  %17 = sdiv i64 %16, %14
  %18 = shl i64 %17, 32
  %19 = ashr exact i64 %18, 32
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %25, label %21

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %23, %struct.Memory* %0) #21
  br label %37

; <label>:25:                                     ; preds = %3
  %26 = srem i64 %16, %14
  %27 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %28 = and i64 %17, 4294967295
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %30 = and i64 %26, 4294967295
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  br label %37

; <label>:37:                                     ; preds = %25, %21
  %38 = phi %struct.Memory* [ %24, %21 ], [ %0, %25 ]
  ret %struct.Memory* %38
}

define %struct.Memory* @routine_idivl_0x4d4__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__edx__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e39c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x4d4__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e446(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47e3d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47e441(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47e43c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47e41b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jmpq_.L_47e437(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_47e43c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47e441(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47e446(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_0x6cd3a8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x6cd3a8_type* @G_0x6cd3a8 to i64))
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sext i32 %7 to i64
  %9 = shl i64 %4, 32
  %10 = ashr exact i64 %9, 32
  %11 = mul  i64 %8, %10
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__0xfffffffe__0x4d4__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13, i64 -2)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x3___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 3)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_47e47d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0xfffffffd__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47e571(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_subl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_47e4b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0xfffffffe__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47e56c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_subl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_47e4eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47e567(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_47e51f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47e562(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_addl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_47e556(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47e55d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x2__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_addl_MINUS0x1c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__0xfffffffe___ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13, i64 -2)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x70d190___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x70d190_type* @G_0x70d190 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_subl_0x6cd3a8___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 ptrtoint( %G_0x6cd3a8_type* @G_0x6cd3a8 to i64))
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__esi___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_0x6cb8f8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x4d4__rdi____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_47e602(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_0x70d190___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x70d190_type* @G_0x70d190 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_subl_0x6cd3a8___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x6cd3a8_type* @G_0x6cd3a8 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_imull__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x4d4__rdx____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47e611(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_imull__0xfffffffe___eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 -2)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x38__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_47e630(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47e6c5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movl_0x70d190___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x70d190_type* @G_0x70d190 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_subl_0x6cd3a8___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 ptrtoint( %G_0x6cd3a8_type* @G_0x6cd3a8 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_imull__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_0x6cb8f8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x4d4__rsi____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0x48__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x44__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_47e6b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47e6bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_0x6d32cc___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x6d32cc_type* @G_0x6d32cc to i64))
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_47e6f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47e703(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_47e730(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47e73a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e81e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11b80__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72576
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x11b98__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72600
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47e80f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x722cb0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x722cb0_type* @G_0x722cb0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x47c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_47e7fc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addl_0x11b7c__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72572
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__0x11b7c__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72572
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_movl__eax__0x6d1278(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d1278_type* @G_0x6d1278 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47e80a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__0x6f9708(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6f9708_type* @G_0x6f9708 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47e80f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_je_.L_47e848(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47e8ce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47e8ce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47e8a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_47e8c9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jmpq_.L_47e8ce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0x726420___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x726420_type* @G_0x726420 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %2 to double*
  store double %6, double* %7
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd__xmm0__0x723640(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x723640_type* @G_0x723640 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x6f9358___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6f9358_type* @G_0x6f9358 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd__xmm0__0x6d33e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d33e0_type* @G_0x6d33e0 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x6f9720___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6f9720_type* @G_0x6f9720 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x6d4510(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d4510_type* @G_0x6d4510 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x6d1278___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6d1278_type* @G_0x6d1278 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x723690(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x723690_type* @G_0x723690 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x6f80c8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6f80c8_type* @G_0x6f80c8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x6e51e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6e51e0_type* @G_0x6e51e0 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x6cfc68___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6cfc68_type* @G_0x6cfc68 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd__xmm0__0x6cea30(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6cea30_type* @G_0x6cea30 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x710798___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x710798_type* @G_0x710798 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd__xmm0__0x710008(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x710008_type* @G_0x710008 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x6cd300___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6cd300_type* @G_0x6cd300 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd__xmm0__0x721df8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x721df8_type* @G_0x721df8 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x6cea30___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6cea30_type* @G_0x6cea30 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd_0x721df8___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x721df8_type* @G_0x721df8 to i64))
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_E3MVnI7vec64_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd_0x710008___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_E3MVnI7vec64_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x710008_type* @G_0x710008 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd__xmm0__0x6d1280(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d1280_type* @G_0x6d1280 to i64), i8* %8)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %6, %3
  %8 = icmp ult i64 %6, %3
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %3
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %6, 63
  %31 = lshr i64 %3, 63
  %32 = xor i64 %30, %31
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0__0x6cea28(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 9
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6cea28_type* @G_0x6cea28 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jge_.L_47e9d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x723690___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x723690_type* @G_0x723690 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addl_0x6e51e0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x6e51e0_type* @G_0x6e51e0 to i64))
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_47e9bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47e9c7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_47eca6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_0x6cea28___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cea28_type* @G_0x6cea28 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_0x6d4510___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6d4510_type* @G_0x6d4510 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_0x6ccf88___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6ccf88_type* @G_0x6ccf88 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x723648___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x723648_type* @G_0x723648 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_mulsd_0x6d1fb0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x6d1fb0_type* @G_0x6d1fb0 to i64))
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fdiv double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_cmpl__esi___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_47ea47(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47ea4d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PXORI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = xor i64 %12, %7
  %17 = xor i64 %15, %10
  %18 = trunc i64 %16 to i32
  %19 = lshr i64 %16, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast i8* %2 to i32*
  store i32 %18, i32* %21, align 1
  %22 = getelementptr inbounds i8, i8* %2, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %20, i32* %23, align 1
  %24 = trunc i64 %17 to i32
  %25 = getelementptr inbounds i8, i8* %2, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = lshr i64 %17, 32
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds i8, i8* %2, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PXORI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movsd_0x32ddd__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x32ddd__rip__type* @G_0x32ddd__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movsd_0x6d1280___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6d1280_type* @G_0x6d1280 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_mulsd_0x723640___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x723640_type* @G_0x723640 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_mulsd_0x6d1280___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x6d1280_type* @G_0x6d1280 to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_mulsd_0x6d33e0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x6d33e0_type* @G_0x6d33e0 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_mulsd_0x6d1280___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x6d1280_type* @G_0x6d1280 to i64))
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sitofp i32 %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x14__rbp____xmm3(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd__xmm3___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM3 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm1___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movsd__xmm2__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 16
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_0x6d33e0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6d33e0_type* @G_0x6d33e0 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = bitcast i8* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_jne_.L_47eac4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JPEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jp_.L_47eac4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JPEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_47eb0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %3 to double*
  %8 = load double, double* %7
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd_MINUS0x10__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp eq i8 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %2, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %14 = select i1 %11, i64 %3, i64 %4
  store i64 %14, i64* %13, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_ja_.L_47eb0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movsd_MINUS0x10__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x68__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 104
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = extractelement <2 x i32> %6, i32 0
  %11 = bitcast i8* %2 to i32*
  store i32 %10, i32* %11, align 1
  %12 = extractelement <2 x i32> %6, i32 1
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 0
  %16 = getelementptr inbounds i8, i8* %2, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.sqrt_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x723640___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x723640_type* @G_0x723640 to i64))
  ret %struct.Memory* %11
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fsub double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movsd_MINUS0x68__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JBEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jb_.L_47eb3d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JBEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x723640___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x723640_type* @G_0x723640 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_mulsd_0x6d1280___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x6d1280_type* @G_0x6d1280 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvtsi2sdl_MINUS0x14__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = bitcast i8* %3 to double*
  %11 = load double, double* %10, align 1
  %12 = fptrunc double %11 to float
  %13 = bitcast i8* %2 to float*
  store float %12, float* %13, align 1
  %14 = extractelement <2 x i32> %6, i32 1
  %15 = getelementptr inbounds i8, i8* %2, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 0
  %18 = bitcast i8* %7 to i32*
  store i32 %17, i32* %18, align 1
  %19 = extractelement <2 x i32> %9, i32 1
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = fpext float %7 to double
  %9 = bitcast i8* %2 to double*
  store double %8, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movsd__xmm0__0x6ccae0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6ccae0_type* @G_0x6ccae0 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_jmpq_.L_47eb99(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0x32d03__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x32d03__rip__type* @G_0x32d03__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_mulsd_0x6d33e0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x6d33e0_type* @G_0x6d33e0 to i64))
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movsd__xmm0__MINUS0x70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movsd_MINUS0x70__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_divsd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvtsd2ss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}






define %struct.Memory* @routine_movsd_0x6ccae0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6ccae0_type* @G_0x6ccae0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_callq_.Qstep2QP(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jge_.L_47ebdf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47ebe9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x74__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_47ec16(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47ec20(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x78__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_subl_0x6e51e0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x6e51e0_type* @G_0x6e51e0 to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_47ec54(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47ec65(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_47ec92(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47ec9c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x80__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_47ed2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47ed1a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_jmpq_.L_47ed28(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_47ed2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_47edd8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11ba4__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72612
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_cmpl__0x1__0xb40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47edc5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_jmpq_.L_47edd3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__0x7236c0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x7236c0_type* @G_0x7236c0 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47edd8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_47ee16(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jne_.L_47ee6f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x1__0x11ba4__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72612
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_cmpl__0x1__0x11b98__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72600
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


















define %struct.Memory* @routine_jne_.L_47f469(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_47eea0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f45a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f02d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47eedf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47ef50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47ef4b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47ef2a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jmpq_.L_47ef46(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_47ef4b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47ef50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_47ef7a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_47efa8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x84__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jge_.L_47efce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47efdb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x88__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_47f00e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47f01b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x8c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_47f44b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_jne_.L_47f064(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jne_.L_47f10e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47f098(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47f109(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f104(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f0e3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jmpq_.L_47f0ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_47f104(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47f109(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47f10e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jg_.L_47f145(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_47f239(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_47f17c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_47f234(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_47f1b3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_47f22f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_47f1e7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_47f22a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_47f21e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_47f225(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














































define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jge_.L_47f2d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47f2e2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x90__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_47f30a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47f3b7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
























define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0xa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0xa0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x9c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_47f399(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47f3ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jge_.L_47f3f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47f3fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_47f431(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47f43e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_jne_.L_48065f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x1__0x11b78__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72568
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47f683(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_47f4e4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f67e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl__0x0__0x11b54__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0x0__0x11b58__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72536
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x6f9688___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6f9688_type* @G_0x6f9688 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 -1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__0x6f9688(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6f9688_type* @G_0x6f9688 to i64), i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jne_.L_47f64c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x6f9688(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6f9688_type* @G_0x6f9688 to i64), i64 0)
  ret %struct.Memory* %8
}








define %struct.Memory* @routine_jne_.L_47f569(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f5c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_movl__eax__0x725318(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x725318_type* @G_0x725318 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x723698___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x723698_type* @G_0x723698 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x722c78(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x722c78_type* @G_0x722c78 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47f647(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_47f5eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47f642(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f621(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__0x7107a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x7107a4_type* @G_0x7107a4 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47f63d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl__eax__0x6d1f88(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d1f88_type* @G_0x6d1f88 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_47f642(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_47f64c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_addl_0x722b78___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x722b78_type* @G_0x722b78 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__0x722b78(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x722b78_type* @G_0x722b78 to i64), i64 %10)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_jmpq_.L_48065a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


































define %struct.Memory* @routine_jne_.L_47f719(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x6f80a0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6f80a0_type* @G_0x6f80a0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47f739(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6f80a0_type* @G_0x6f80a0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0xb0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_cmpl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 36
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_47f901(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47f773(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47f83f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f83f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f7ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_47f7cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl_0x7107a4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x7107a4_type* @G_0x7107a4 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_jmpq_.L_47f83a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jle_.L_47f81e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl_0x6d1f88___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6d1f88_type* @G_0x6d1f88 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_jmpq_.L_47f83f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jg_.L_47f8b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x725318___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x725318_type* @G_0x725318 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jle_.L_47f881(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_47f8a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47f8ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__0x710360(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x710360_type* @G_0x710360 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jmpq_.L_47f8be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






























define %struct.Memory* @routine_movl_0x11b54__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72532
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_0x11b58__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 72536
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__0x710000(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x710000_type* @G_0x710000 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_0x710000___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x710000_type* @G_0x710000 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cea28___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cea28_type* @G_0x6cea28 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_subq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rdx__0x6cea28(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6cea28_type* @G_0x6cea28 to i64), i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x0__0x11b54__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0x0__0x11b58__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72536
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jge_.L_47fd91(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__0x710360(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x710360_type* @G_0x710360 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_47f996(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_47f9ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl_0x70fce4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x70fce4_type* @G_0x70fce4 to i64))
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_47f9d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47f9de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_0xcb0__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 3248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0x6f8ed8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x6f8ed8_type* @G_0x6f8ed8 to i64))
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = select i1 %12, i64 %3, i64 %4
  store i64 %15, i64* %14, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jl_.L_47fa53(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x725318___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x725318_type* @G_0x725318 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addl__0x6___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_47fa31(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47fa41(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl__0x6___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 6)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_47fa9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_addl__0x3___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 3)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_47fa7e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47fa8e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_jne_.L_47fd53(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_47faee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47fd4e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47fb18(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47fc61(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x31d68__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31d68__rip__type* @G_0x31d68__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x31d38__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31d38__rip__type* @G_0x31d38__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cvtsi2sdl_0x722b78___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x722b78_type* @G_0x722b78 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvtsi2sdl_0x6f80a0___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6f80a0_type* @G_0x6f80a0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x11b80__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72576
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x4c8__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 1224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_47fb7e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__0x6f9348(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6f9348_type* @G_0x6f9348 to i64), i64 %10)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_jne_.L_47fbc3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jmpq_.L_47fc44(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_47fc0a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jle_.L_47fc0a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jmpq_.L_47fc3f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jle_.L_47fc3a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_jmpq_.L_47fd49(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_47fc8b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47fd44(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47fcf2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x31be0__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31be0__rip__type* @G_0x31be0__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x31bb0__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31bb0__rip__type* @G_0x31bb0__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}
























define %struct.Memory* @routine_jmpq_.L_47fd3f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0x31b8e__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31b8e__rip__type* @G_0x31b8e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x31b5e__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31b5e__rip__type* @G_0x31b5e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}
























define %struct.Memory* @routine_jmpq_.L_47fd44(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_47fd4e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47fd53(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_47fd74(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_47fd82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_je_.L_47fdbb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_47fe9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_47fe9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movsd_0x6cea30___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6cea30_type* @G_0x6cea30 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cea38___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cea38_type* @G_0x6cea38 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_subl_0x6f9688___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x6f9688_type* @G_0x6f9688 to i64))
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_mulsd___rax__rdx_8____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %14, i8* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addsd_0x710008___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_E3MVnI7vec64_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x710008_type* @G_0x710008 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd__xmm1__0x6d1280(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d1280_type* @G_0x6d1280 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd__xmm0__0x6d0708(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d0708_type* @G_0x6d0708 to i64), i8* %8)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jl_.L_47fe99(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_mulsd___rax__rcx_8____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %14, i8* %15, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movsd__xmm0__0x7255f8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x7255f8_type* @G_0x7255f8 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x7255f8___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x7255f8_type* @G_0x7255f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_mulsd_0x7255f8___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x7255f8_type* @G_0x7255f8 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addsd_0x6d0708___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_E3MVnI7vec64_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x6d0708_type* @G_0x6d0708 to i64))
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47fe22(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47ff6c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movq_0x6f9350___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6f9350_type* @G_0x6f9350 to i64))
  ret %struct.Memory* %11
}






























define %struct.Memory* @routine_jl_.L_47ff67(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_jmpq_.L_47fef0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnImEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  %7 = sitofp i64 %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2sdq_0x6cea28___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnImEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x6cea28_type* @G_0x6cea28 to i64))
  ret %struct.Memory* %11
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fdiv double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divsd_0x6d0708___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %8, i8* %9, i64 ptrtoint( %G_0x6d0708_type* @G_0x6d0708 to i64))
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}
















define %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i8* %11)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_jge_.L_48001d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_480026(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movsd_0x31801__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31801__rip__type* @G_0x31801__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




























define %struct.Memory* @routine_jne_.L_4800a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jp_.L_4800a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JPEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4800ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_ja_.L_4800ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movsd__xmm0__MINUS0xc8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 200
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jb_.L_48011f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JBEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jmpq_.L_480181(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0x31721__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31721__rip__type* @G_0x31721__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movsd__xmm0__MINUS0xd0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 208
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_jge_.L_4801ca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4801d7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jl_.L_48024a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_48022b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_480238(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_480290(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jge_.L_480276(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_480283(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_4802b6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4802c3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xe0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_subl_0x70fce4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 ptrtoint( %G_0x70fce4_type* @G_0x70fce4 to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_4802fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_480311(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jl_.L_480384(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl__0x6___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 6)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_480362(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_480372(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_4803ca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_subl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_4803ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4803bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0xec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_4803f0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4803fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0xf0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_jne_.L_48064b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_je_.L_48047d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_480646(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_4804a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_480559(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x313d9__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x313d9__rip__type* @G_0x313d9__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x313a9__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x313a9__rip__type* @G_0x313a9__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




























define %struct.Memory* @routine_jne_.L_48050d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_jmpq_.L_480641(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_480583(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_48063c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_4805ea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x312e8__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x312e8__rip__type* @G_0x312e8__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x312b8__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x312b8__rip__type* @G_0x312b8__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}
























define %struct.Memory* @routine_jmpq_.L_480637(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0x31296__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31296__rip__type* @G_0x31296__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x31266__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x31266__rip__type* @G_0x31266__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}
























define %struct.Memory* @routine_jmpq_.L_48063c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_480646(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_48064b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_48065f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_480664(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_480669(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_48066e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_480673(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0xf0___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 240)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

